{
  "name": "List_all_project_snapshots",
  "description": "",
  "parameters": {
    "type": "object",
    "properties": {
      "orgId": {
        "type": "string",
        "description": "The organization ID. The `API_KEY` must have access to this organization."
      },
      "projectId": {
        "type": "string",
        "description": "The project ID to return snapshots for."
      },
      "perPage": {
        "type": "number",
        "description": "The number of results to return (the default is 10, the maximum is 100)."
      },
      "page": {
        "type": "number",
        "description": "The offset from which to start returning results from."
      },
      "body": {
        "example": {
          "filters": {
            "imageId": "sha256:a368cbcfa6789bc347345f6d78902afe138b62ff5373d2aa5f37120277c90a67"
          }
        },
        "properties": {
          "filters": {
            "properties": {
              "imageId": {
                "description": "For container projects, filter by the ID of the image",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      }
    },
    "required": [
      "orgId",
      "projectId"
    ]
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://api.snyk.io/v1/org/{orgId}/project/{projectId}/history{?perPage,page}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**snapshots**: A list of the project's snapshots, ordered according to date (latest first).",
            "**total**: The total number of results"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
