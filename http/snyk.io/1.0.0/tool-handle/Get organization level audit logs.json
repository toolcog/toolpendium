{
  "name": "Get_organization_level_audit_logs",
  "description": "",
  "parameters": {
    "type": "object",
    "properties": {
      "orgId": {
        "type": "string",
        "description": "The organization ID. The `API_KEY` must have access to this organization."
      },
      "from": {
        "type": "string",
        "description": "The date you wish to fetch results from, in the format YYYY-MM-DD. Default is 3 months ago. Please note that logs are only available for past 3 months."
      },
      "to": {
        "type": "string",
        "description": "The date you wish to fetch results until, in the format YYYY-MM-DD. Default is today. Please note that logs are only available for past 3 months."
      },
      "page": {
        "type": "number",
        "description": "The page of results to request. Audit logs are returned in page sizes of 100."
      },
      "sortOrder": {
        "type": "string",
        "description": "The sort order of the returned audit logs by date. Values: `ASC`, `DESC`. Default: `DESC`."
      },
      "body": {
        "example": {
          "filters": {
            "event": "api.access",
            "excludeEvent": "api.access"
          }
        },
        "properties": {
          "filters": {
            "properties": {
              "email": {
                "description": "User email address. Will fetch only audit logs originated from this user's actions. Ignored if the userId filter is set.",
                "type": "string"
              },
              "event": {
                "description": "Will return only logs for this specific event. Only one of event and excludeEvent may be specified in a request.",
                "enum": [
                  "api.access",
                  "org.cloud_config.settings.edit",
                  "org.create",
                  "org.delete",
                  "org.edit",
                  "org.ignore_policy.edit",
                  "org.integration.create",
                  "org.integration.delete",
                  "org.integration.edit",
                  "org.integration.settings.edit",
                  "org.language_settings.edit",
                  "org.license_rule.create",
                  "org.license_rule.delete",
                  "org.license_rule.edit",
                  "org.notification_settings.edit",
                  "org.org_source.create",
                  "org.org_source.delete",
                  "org.org_source.edit",
                  "org.policy.edit",
                  "org.project.add",
                  "org.project.attributes.edit",
                  "org.project.delete",
                  "org.project.edit",
                  "org.project.fix_pr.auto_open",
                  "org.project.fix_pr.manual_open",
                  "org.project.ignore.create",
                  "org.project.ignore.delete",
                  "org.project.ignore.edit",
                  "org.project.monitor",
                  "org.project.pr_check.edit",
                  "org.project.remove",
                  "org.project.settings.delete",
                  "org.project.settings.edit",
                  "org.project.stop_monitor",
                  "org.project.tag.add",
                  "org.project.tag.remove",
                  "org.project.test",
                  "org.request_access_settings.edit",
                  "org.sast_settings.edit",
                  "org.service_account.create",
                  "org.service_account.delete",
                  "org.service_account.edit",
                  "org.service_account.membership.upsert",
                  "org.settings.feature_flag.edit",
                  "org.target.create",
                  "org.target.delete",
                  "org.user.add",
                  "org.user.invite",
                  "org.user.invite.accept",
                  "org.user.invite.revoke",
                  "org.user.invite_link.accept",
                  "org.user.invite_link.create",
                  "org.user.invite_link.revoke",
                  "org.user.leave",
                  "org.user.provision.accept",
                  "org.user.provision.create",
                  "org.user.provision.delete",
                  "org.user.remove",
                  "org.user.role.create",
                  "org.user.role.delete",
                  "org.user.role.details.edit",
                  "org.user.role.edit",
                  "org.user.role.permissions.edit",
                  "org.webhook.add",
                  "org.webhook.delete"
                ],
                "type": "string"
              },
              "excludeEvent": {
                "description": "Will return logs except logs for this event. Only one of event and excludeEvent may be specified in a request.",
                "enum": [
                  "api.access",
                  "org.cloud_config.settings.edit",
                  "org.create",
                  "org.delete",
                  "org.edit",
                  "org.ignore_policy.edit",
                  "org.integration.create",
                  "org.integration.delete",
                  "org.integration.edit",
                  "org.integration.settings.edit",
                  "org.language_settings.edit",
                  "org.license_rule.create",
                  "org.license_rule.delete",
                  "org.license_rule.edit",
                  "org.notification_settings.edit",
                  "org.org_source.create",
                  "org.org_source.delete",
                  "org.org_source.edit",
                  "org.policy.edit",
                  "org.project.add",
                  "org.project.attributes.edit",
                  "org.project.delete",
                  "org.project.edit",
                  "org.project.fix_pr.auto_open",
                  "org.project.fix_pr.manual_open",
                  "org.project.ignore.create",
                  "org.project.ignore.delete",
                  "org.project.ignore.edit",
                  "org.project.monitor",
                  "org.project.pr_check.edit",
                  "org.project.remove",
                  "org.project.settings.delete",
                  "org.project.settings.edit",
                  "org.project.stop_monitor",
                  "org.project.tag.add",
                  "org.project.tag.remove",
                  "org.project.test",
                  "org.request_access_settings.edit",
                  "org.sast_settings.edit",
                  "org.service_account.create",
                  "org.service_account.delete",
                  "org.service_account.edit",
                  "org.service_account.membership.upsert",
                  "org.settings.feature_flag.edit",
                  "org.target.create",
                  "org.target.delete",
                  "org.user.add",
                  "org.user.invite",
                  "org.user.invite.accept",
                  "org.user.invite.revoke",
                  "org.user.invite_link.accept",
                  "org.user.invite_link.create",
                  "org.user.invite_link.revoke",
                  "org.user.leave",
                  "org.user.provision.accept",
                  "org.user.provision.create",
                  "org.user.provision.delete",
                  "org.user.remove",
                  "org.user.role.create",
                  "org.user.role.delete",
                  "org.user.role.details.edit",
                  "org.user.role.edit",
                  "org.user.role.permissions.edit",
                  "org.webhook.add",
                  "org.webhook.delete"
                ],
                "type": "string"
              },
              "projectId": {
                "description": "Will return only logs for this specific project.",
                "type": "string"
              },
              "userId": {
                "description": "User public ID. Will fetch only audit logs originated from this user's actions.",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      }
    },
    "required": [
      "orgId"
    ]
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://api.snyk.io/v1/org/{orgId}/audit{?from,to,page,sortOrder}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {}
}
