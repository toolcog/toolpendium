{
  "name": "Get_latest_issue_counts",
  "description": "",
  "parameters": {
    "type": "object",
    "properties": {
      "groupBy": {
        "enum": [
          "severity",
          "fixable",
          "project,[severity|fixable]"
        ],
        "type": "string",
        "description": "The field to group results by"
      },
      "body": {
        "example": {
          "filters": {
            "fixable": false,
            "ignored": false,
            "isPatchable": false,
            "isPinnable": false,
            "isUpgradable": false,
            "languages": [
              "node",
              "javascript",
              "ruby",
              "java",
              "scala",
              "python",
              "golang",
              "php",
              "dotnet",
              "swift-objective-c",
              "elixir",
              "docker",
              "linux",
              "dockerfile",
              "terraform",
              "kubernetes",
              "helm",
              "cloudformation"
            ],
            "orgs": [],
            "patched": false,
            "priorityScore": {
              "max": 1000,
              "min": 0
            },
            "projects": [],
            "severity": [
              "critical",
              "high",
              "medium",
              "low"
            ],
            "types": [
              "vuln",
              "license",
              "configuration"
            ]
          }
        },
        "properties": {
          "filters": {
            "properties": {
              "fixable": {
                "description": "If set to `true`, only include issues which are fixable, if set to `false`, only include issues which are not fixable. An issue is fixable if it is either upgradable, patchable or pinnable. Also see isUpgradable, isPatchable and isPinnable filters.",
                "type": "boolean"
              },
              "ignored": {
                "description": "If set to `true`, only include issues which are ignored, if set to `false`, only include issues which are not ignored",
                "type": "boolean"
              },
              "isPatchable": {
                "description": "If set to `true`, only include issues which are patchable, if set to `false`, only include issues which are not patchable",
                "type": "boolean"
              },
              "isPinnable": {
                "description": "If set to `true`, only include issues which are pinnable, if set to `false`, only include issues which are not pinnable",
                "type": "boolean"
              },
              "isUpgradable": {
                "description": "If set to `true`, only include issues which are upgradable, if set to `false`, only include issues which are not upgradable",
                "type": "boolean"
              },
              "languages": {
                "description": "The type of languages to filter the results by",
                "items": {},
                "type": "array"
              },
              "orgs": {
                "description": "The list of org IDs to filter the results by"
              },
              "patched": {
                "description": "If set to `true`, only include issues which are patched, if set to `false`, only include issues which are not patched",
                "type": "boolean"
              },
              "priorityScore": {
                "description": "The priority score ranging between 0-1000",
                "properties": {
                  "max": {
                    "type": "number"
                  },
                  "min": {
                    "type": "number"
                  }
                },
                "type": "object"
              },
              "projects": {
                "description": "The list of project IDs to filter issues by, max projects allowed is 1000"
              },
              "severity": {
                "description": "The severity levels of issues to filter the results by",
                "items": {},
                "type": "array"
              },
              "types": {
                "description": "The type of issues to filter the results by",
                "items": {},
                "type": "array"
              }
            },
            "required": [
              "orgs"
            ],
            "type": "object"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://api.snyk.io/v1/reporting/counts/issues/latest{?groupBy}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**results**: A list of issue counts by day"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**: The error response code",
            [
              "**error**",
              {
                "$ul": [
                  "**innerErrors**: A list of additional reasons why the error occurred",
                  "**name**: A descriptive message of the error"
                ]
              }
            ],
            "**ok**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
