{
  "name": "List_all_project_snapshot_aggregated_issues",
  "description": "",
  "parameters": {
    "type": "object",
    "properties": {
      "orgId": {
        "type": "string",
        "description": "The organization ID. The `API_KEY` must have access to this organization."
      },
      "projectId": {
        "type": "string",
        "description": "The project ID."
      },
      "snapshotId": {
        "type": "string",
        "description": "The snapshot ID. If set to latest, the most recent snapshot will be used."
      },
      "body": {
        "example": {
          "includeDescription": false,
          "includeIntroducedThrough": false
        },
        "properties": {
          "filters": {
            "properties": {
              "exploitMaturity": {
                "description": "The exploit maturity levels of issues to filter the results by (Non-IaC projects only)",
                "items": {},
                "type": "array"
              },
              "ignored": {
                "description": "If set to `true`, only include issues which are ignored, if set to `false`, only include issues which are not ignored",
                "type": "boolean"
              },
              "patched": {
                "description": "If set to `true`, only include issues which are patched, if set to `false`, only include issues which are not patched (Non-IaC projects only)",
                "type": "boolean"
              },
              "priority": {
                "description": "The priority to filter the issues by (Non-IaC projects only)",
                "properties": {
                  "score": {
                    "description": "Include issues where the priority score is between min and max",
                    "properties": {
                      "max": {
                        "type": "number"
                      },
                      "min": {
                        "type": "number"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "severities": {
                "description": "The severity levels of issues to filter the results by",
                "items": {},
                "type": "array"
              },
              "types": {
                "description": "The type of issues to filter the results by (Non-IaC projects only)",
                "items": {},
                "type": "array"
              }
            },
            "type": "object"
          },
          "includeDescription": {
            "description": "If set to `true`, Include issue's description, if set to `false` (by default), it won't (Non-IaC projects only)",
            "type": "boolean"
          },
          "includeIntroducedThrough": {
            "description": "If set to `true`, Include issue's introducedThrough, if set to `false` (by default), it won't. It's for container only projects (Non-IaC projects only)",
            "type": "boolean"
          }
        },
        "type": "object"
      }
    },
    "required": [
      "orgId",
      "projectId",
      "snapshotId"
    ]
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://api.snyk.io/v1/org/{orgId}/project/{projectId}/history/{snapshotId}/aggregated-issues"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**issues**: An array of identified issues"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
