{
  "name": "getMessages",
  "description": "Fetch messages that have been sent from/to your account in the last 30 days.",
  "parameters": {
    "type": "object",
    "properties": {
      "Telstra-api-version": {
        "example": "3.1.0",
        "type": "string"
      },
      "Content-Language": {
        "example": "en-au",
        "type": "string"
      },
      "Authorization": {
        "example": "Bearer <access_token>",
        "type": "string"
      },
      "Accept": {
        "example": "application/json",
        "type": "string"
      },
      "Accept-Charset": {
        "example": "utf-8",
        "type": "string"
      },
      "Content-Type": {
        "example": "application/json",
        "type": "string"
      },
      "limit": {
        "default": 10,
        "format": "int32",
        "maximum": 50,
        "minimum": 1,
        "type": "integer",
        "description": "Tell us how many results you want us to return, up to a maximum of 50.\n"
      },
      "offset": {
        "default": 0,
        "format": "int32",
        "maximum": 999999,
        "minimum": 0,
        "type": "integer",
        "description": "Use the offset to navigate between the response results. An offset of 0 will display the first page of results, and so on.\n"
      },
      "direction": {
        "enum": [
          "outgoing",
          "incoming"
        ],
        "type": "string",
        "description": "Filter your messages by direction:\n* **outgoing** – messages sent from your account.\n* **incoming** – messages sent to your account.\n"
      },
      "status": {
        "enum": [
          "queued",
          "sent",
          "delivered",
          "expired"
        ],
        "type": "string",
        "description": "Filter your messages by one of the statuses below:\n\n* **queued** – messages queued for sending or still in transit.\n* **sent** – messages that have been sent from the server.\n* **delivered** – messages successful delivered to the recipient's device. Note that we will only be able to return this status if you set deliveryNotification to **true** (paid feature). \n* **expired** – message that couldn't be sent within the **retryTimeout** timeframe.\n"
      },
      "filter": {
        "type": "string",
        "description": "Filter your messages by:\n\n* tag - use one of the tags assigned to your message(s)\n* number - either the Virtual Number used to send the message, or the Recipient Number the message was sent to.\n"
      }
    },
    "required": [
      "Content-Language",
      "Authorization",
      "Accept",
      "Accept-Charset",
      "Content-Type"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://products.api.telstra.com/messaging/v3/messages{?limit,offset,direction,status,filter}"
    },
    "headers": {
      "Telstra-api-version": {
        "$": "Telstra-api-version"
      },
      "Content-Language": {
        "$": "Content-Language"
      },
      "Authorization": {
        "$": "Authorization"
      },
      "Accept": {
        "$": "Accept"
      },
      "Accept-Charset": {
        "$": "Accept-Charset"
      },
      "Content-Type": {
        "$": "Content-Type"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**messages**: The paginated results of your request. To fetch the next set of results, send another request and provide the succeeding offset value.",
            [
              "**paging**",
              {
                "$ul": [
                  "**lastPage**: The last page of results.",
                  "**nextPage**: The next page of results.",
                  "**previousPage**: The previous page of results.",
                  "**totalCount**: The total number of pages."
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**errors**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**errors**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "402": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**errors**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**errors**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "405": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**errors**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "429": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**errors**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "500": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**errors**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "default": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**errors**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
