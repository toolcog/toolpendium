{
  "name": "createPriority",
  "description": "Creates an issue priority.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).",
  "parameters": {
    "type": "object",
    "properties": {
      "body": {
        "$ref": "#/$defs/CreatePriorityDetails"
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "CreatePriorityDetails": {
        "additionalProperties": true,
        "description": "Details of an issue priority.",
        "properties": {
          "description": {
            "description": "The description of the priority.",
            "maxLength": 255,
            "type": "string",
            "writeOnly": true
          },
          "iconUrl": {
            "description": "The URL of an icon for the priority. Accepted protocols are HTTP and HTTPS. Built in icons can also be used.",
            "enum": [
              "/images/icons/priorities/blocker.png",
              "/images/icons/priorities/critical.png",
              "/images/icons/priorities/high.png",
              "/images/icons/priorities/highest.png",
              "/images/icons/priorities/low.png",
              "/images/icons/priorities/lowest.png",
              "/images/icons/priorities/major.png",
              "/images/icons/priorities/medium.png",
              "/images/icons/priorities/minor.png",
              "/images/icons/priorities/trivial.png"
            ],
            "maxLength": 255,
            "type": "string",
            "writeOnly": true
          },
          "name": {
            "description": "The name of the priority. Must be unique.",
            "maxLength": 60,
            "type": "string",
            "writeOnly": true
          },
          "statusColor": {
            "description": "The status color of the priority in 3-digit or 6-digit hexadecimal format.",
            "type": "string",
            "writeOnly": true
          }
        },
        "required": [
          "name",
          "statusColor"
        ],
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://your-domain.atlassian.net/rest/api/3/priority"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The ID of an issue priority.",
        "**Key properties:**",
        {
          "$ul": [
            "**id**: The ID of the issue priority."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Error messages from an operation.",
        "**Key properties:**",
        {
          "$ul": [
            "**errorMessages**: The list of error messages produced by this operation. For example, \"input parameter 'key' must be provided\"",
            "**errors**: The list of errors by parameter returned by the operation. For example,\"projectKey\": \"Project keys must start with an uppercase letter, followed by one or more uppercase alphanumeric characters.\"",
            "**status**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Error messages from an operation.",
        "**Key properties:**",
        {
          "$ul": [
            "**errorMessages**: The list of error messages produced by this operation. For example, \"input parameter 'key' must be provided\"",
            "**errors**: The list of errors by parameter returned by the operation. For example,\"projectKey\": \"Project keys must start with an uppercase letter, followed by one or more uppercase alphanumeric characters.\"",
            "**status**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Error messages from an operation.",
        "**Key properties:**",
        {
          "$ul": [
            "**errorMessages**: The list of error messages produced by this operation. For example, \"input parameter 'key' must be provided\"",
            "**errors**: The list of errors by parameter returned by the operation. For example,\"projectKey\": \"Project keys must start with an uppercase letter, followed by one or more uppercase alphanumeric characters.\"",
            "**status**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
