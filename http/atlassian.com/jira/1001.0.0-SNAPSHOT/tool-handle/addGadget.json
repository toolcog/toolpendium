{
  "name": "addGadget",
  "description": "Adds a gadget to a dashboard.\n\n**[Permissions](#permissions) required:** None.",
  "parameters": {
    "type": "object",
    "properties": {
      "dashboardId": {
        "format": "int64",
        "type": "integer",
        "description": "The ID of the dashboard."
      },
      "body": {
        "$ref": "#/$defs/DashboardGadgetSettings"
      }
    },
    "required": [
      "dashboardId",
      "body"
    ],
    "$defs": {
      "DashboardGadgetSettings": {
        "additionalProperties": false,
        "description": "Details of the settings for a dashboard gadget.",
        "properties": {
          "color": {
            "description": "The color of the gadget. Should be one of `blue`, `red`, `yellow`, `green`, `cyan`, `purple`, `gray`, or `white`.",
            "type": "string",
            "writeOnly": true
          },
          "ignoreUriAndModuleKeyValidation": {
            "description": "Whether to ignore the validation of module key and URI. For example, when a gadget is created that is a part of an application that isn't installed.",
            "type": "boolean",
            "writeOnly": true
          },
          "moduleKey": {
            "description": "The module key of the gadget type. Can't be provided with `uri`.",
            "type": "string",
            "writeOnly": true
          },
          "position": {
            "allOf": [
              {
                "$ref": "#/$defs/DashboardGadgetPosition"
              }
            ],
            "description": "The position of the gadget. When the gadget is placed into the position, other gadgets in the same column are moved down to accommodate it."
          },
          "title": {
            "description": "The title of the gadget.",
            "type": "string",
            "writeOnly": true
          },
          "uri": {
            "description": "The URI of the gadget type. Can't be provided with `moduleKey`.",
            "type": "string",
            "writeOnly": true
          }
        },
        "type": "object"
      },
      "DashboardGadgetPosition": {
        "additionalProperties": false,
        "description": "Details of a gadget position.",
        "properties": {
          "The column position of the gadget.": {
            "format": "int32",
            "type": "integer"
          },
          "The row position of the gadget.": {
            "format": "int32",
            "type": "integer"
          }
        },
        "required": [
          "The column position of the gadget.",
          "The row position of the gadget."
        ],
        "type": "object",
        "writeOnly": true
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://your-domain.atlassian.net/rest/api/3/dashboard/{dashboardId}/gadget"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Details of a gadget.",
        "**Key properties:**",
        {
          "$ul": [
            "**color**: The color of the gadget. Should be one of `blue`, `red`, `yellow`, `green`, `cyan`, `purple`, `gray`, or `white`.",
            "**id**: The ID of the gadget instance.",
            "**moduleKey**: The module key of the gadget type.",
            [
              "**position**: Details of a gadget position.",
              {
                "$ul": [
                  "**The column position of the gadget.**",
                  "**The row position of the gadget.**"
                ]
              }
            ],
            "**title**: The title of the gadget.",
            "**uri**: The URI of the gadget type."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Error messages from an operation.",
        "**Key properties:**",
        {
          "$ul": [
            "**errorMessages**: The list of error messages produced by this operation. For example, \"input parameter 'key' must be provided\"",
            "**errors**: The list of errors by parameter returned by the operation. For example,\"projectKey\": \"Project keys must start with an uppercase letter, followed by one or more uppercase alphanumeric characters.\"",
            "**status**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Error messages from an operation.",
        "**Key properties:**",
        {
          "$ul": [
            "**errorMessages**: The list of error messages produced by this operation. For example, \"input parameter 'key' must be provided\"",
            "**errors**: The list of errors by parameter returned by the operation. For example,\"projectKey\": \"Project keys must start with an uppercase letter, followed by one or more uppercase alphanumeric characters.\"",
            "**status**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
