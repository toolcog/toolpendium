{
  "name": "findUsersAndGroups",
  "description": "Returns a list of users and groups matching a string. The string is used:\n\n *  for users, to find a case-insensitive match with display name and e-mail address. Note that if a user has hidden their email address in their user profile, partial matches of the email address will not find the user. An exact match is required.\n *  for groups, to find a case-sensitive match with group name.\n\nFor example, if the string *tin* is used, records with the display name *Tina*, email address *sarah@tinplatetraining.com*, and the group *accounting* would be returned.\n\nOptionally, the search can be refined to:\n\n *  the projects and issue types associated with a custom field, such as a user picker. The search can then be further refined to return only users and groups that have permission to view specific:\n    \n     *  projects.\n     *  issue types.\n    \n    If multiple projects or issue types are specified, they must be a subset of those enabled for the custom field or no results are returned. For example, if a field is enabled for projects A, B, and C then the search could be limited to projects B and C. However, if the search is limited to projects B and D, nothing is returned.\n *  not return Connect app users and groups.\n *  return groups that have a case-insensitive match with the query.\n\nThe primary use case for this resource is to populate a picker field suggestion list with users or groups. To this end, the returned object includes an `html` field for each list. This field highlights the matched query term in the item name with the HTML strong tag. Also, each list is wrapped in a response object that contains a header for use in a picker, specifically *Showing X of Y matching groups*.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** *Browse users and groups* [global permission](https://confluence.atlassian.com/x/yodKLg).",
  "parameters": {
    "type": "object",
    "properties": {
      "query": {
        "type": "string",
        "description": "The search string."
      },
      "maxResults": {
        "default": 50,
        "format": "int32",
        "type": "integer",
        "description": "The maximum number of items to return in each list."
      },
      "showAvatar": {
        "default": false,
        "type": "boolean",
        "description": "Whether the user avatar should be returned. If an invalid value is provided, the default value is used."
      },
      "fieldId": {
        "type": "string",
        "description": "The custom field ID of the field this request is for."
      },
      "projectId": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "The ID of a project that returned users and groups must have permission to view. To include multiple projects, provide an ampersand-separated list. For example, `projectId=10000&projectId=10001`. This parameter is only used when `fieldId` is present."
      },
      "issueTypeId": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "The ID of an issue type that returned users and groups must have permission to view. To include multiple issue types, provide an ampersand-separated list. For example, `issueTypeId=10000&issueTypeId=10001`. Special values, such as `-1` (all standard issue types) and `-2` (all subtask issue types), are supported. This parameter is only used when `fieldId` is present."
      },
      "avatarSize": {
        "default": "xsmall",
        "enum": [
          "xsmall",
          "xsmall@2x",
          "xsmall@3x",
          "small",
          "small@2x",
          "small@3x",
          "medium",
          "medium@2x",
          "medium@3x",
          "large",
          "large@2x",
          "large@3x",
          "xlarge",
          "xlarge@2x",
          "xlarge@3x",
          "xxlarge",
          "xxlarge@2x",
          "xxlarge@3x",
          "xxxlarge",
          "xxxlarge@2x",
          "xxxlarge@3x"
        ],
        "type": "string",
        "description": "The size of the avatar to return. If an invalid value is provided, the default value is used."
      },
      "caseInsensitive": {
        "default": false,
        "type": "boolean",
        "description": "Whether the search for groups should be case insensitive."
      },
      "excludeConnectAddons": {
        "default": false,
        "type": "boolean",
        "description": "Whether Connect app users and groups should be excluded from the search results. If an invalid value is provided, the default value is used."
      }
    },
    "required": [
      "query"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://your-domain.atlassian.net/rest/api/3/groupuserpicker{?query,maxResults,showAvatar,fieldId,projectId,issueTypeId,avatarSize,caseInsensitive,excludeConnectAddons}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "List of users and groups found in a search.",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**groups**: The list of groups found in a search, including header text (Showing X of Y matching groups) and total of matched groups.",
              {
                "$ul": [
                  "**groups**",
                  "**header**: Header text indicating the number of groups in the response and the total number of groups found in the search.",
                  "**total**: The total number of groups found in the search."
                ]
              }
            ],
            [
              "**users**: The list of users found in a search, including header text (Showing X of Y matching users) and total of matched users.",
              {
                "$ul": [
                  "**header**: Header text indicating the number of users in the response and the total number of users found in the search.",
                  "**total**: The total number of users found in the search.",
                  "**users**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
