{
  "name": "getComment",
  "description": "Returns a comment.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:**\n\n *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project containing the comment.\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.\n *  If the comment has visibility restrictions, the user belongs to the group or has the role visibility is restricted to.",
  "parameters": {
    "type": "object",
    "properties": {
      "issueIdOrKey": {
        "type": "string",
        "description": "The ID or key of the issue."
      },
      "id": {
        "type": "string",
        "description": "The ID of the comment."
      },
      "expand": {
        "type": "string",
        "description": "Use [expand](#expansion) to include additional information about comments in the response. This parameter accepts `renderedBody`, which returns the comment body rendered in HTML."
      }
    },
    "required": [
      "issueIdOrKey",
      "id"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://your-domain.atlassian.net/rest/api/3/issue/{issueIdOrKey}/comment/{id}{?expand}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A comment.",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**author**: User details permitted by the user's Atlassian Account privacy settings. However, be aware of these exceptions:",
              {
                "$ul": [
                  "**accountId**: The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.",
                  "**accountType**: The type of account represented by this user. This will be one of 'atlassian' (normal users), 'app' (application user) or 'customer' (Jira Service Desk customer user)",
                  "**active**: Whether the user is active.",
                  [
                    "**avatarUrls**",
                    {
                      "$ul": [
                        "**16x16**: The URL of the item's 16x16 pixel avatar.",
                        "**24x24**: The URL of the item's 24x24 pixel avatar.",
                        "**32x32**: The URL of the item's 32x32 pixel avatar.",
                        "**48x48**: The URL of the item's 48x48 pixel avatar."
                      ]
                    }
                  ],
                  "**displayName**: The display name of the user. Depending on the user’s privacy settings, this may return an alternative value.",
                  "**emailAddress**: The email address of the user. Depending on the user’s privacy settings, this may be returned as null.",
                  "**key**: This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
                  "**name**: This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
                  "**self**: The URL of the user.",
                  "**timeZone**: The time zone specified in the user's profile. Depending on the user’s privacy settings, this may be returned as null."
                ]
              }
            ],
            "**body**: The comment text in [Atlassian Document Format](https://developer.atlassian.com/cloud/jira/platform/apis/document/structure/).",
            "**created**: The date and time at which the comment was created.",
            "**id**: The ID of the comment.",
            "**jsdAuthorCanSeeRequest**: Whether the comment was added from an email sent by a person who is not part of the issue. See [Allow external emails to be added as comments on issues](https://support.atlassian.com/jira-service-management-cloud/docs/allow-external-emails-to-be-added-as-comments-on-issues/)for information on setting up this feature.",
            "**jsdPublic**: Whether the comment is visible in Jira Service Desk. Defaults to true when comments are created in the Jira Cloud Platform. This includes when the site doesn't use Jira Service Desk or the project isn't a Jira Service Desk project and, therefore, there is no Jira Service Desk for the issue to be visible on. To create a comment with its visibility in Jira Service Desk set to false, use the Jira Service Desk REST API [Create request comment](https://developer.atlassian.com/cloud/jira/service-desk/rest/#api-rest-servicedeskapi-request-issueIdOrKey-comment-post) operation.",
            "**properties**: A list of comment properties. Optional on create and update.",
            "**renderedBody**: The rendered version of the comment.",
            "**self**: The URL of the comment.",
            [
              "**updateAuthor**: User details permitted by the user's Atlassian Account privacy settings. However, be aware of these exceptions:",
              {
                "$ul": [
                  "**accountId**: The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.",
                  "**accountType**: The type of account represented by this user. This will be one of 'atlassian' (normal users), 'app' (application user) or 'customer' (Jira Service Desk customer user)",
                  "**active**: Whether the user is active.",
                  [
                    "**avatarUrls**",
                    {
                      "$ul": [
                        "**16x16**: The URL of the item's 16x16 pixel avatar.",
                        "**24x24**: The URL of the item's 24x24 pixel avatar.",
                        "**32x32**: The URL of the item's 32x32 pixel avatar.",
                        "**48x48**: The URL of the item's 48x48 pixel avatar."
                      ]
                    }
                  ],
                  "**displayName**: The display name of the user. Depending on the user’s privacy settings, this may return an alternative value.",
                  "**emailAddress**: The email address of the user. Depending on the user’s privacy settings, this may be returned as null.",
                  "**key**: This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
                  "**name**: This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
                  "**self**: The URL of the user.",
                  "**timeZone**: The time zone specified in the user's profile. Depending on the user’s privacy settings, this may be returned as null."
                ]
              }
            ],
            "**updated**: The date and time at which the comment was updated last.",
            [
              "**visibility**: The group or role to which this item is visible.",
              {
                "$ul": [
                  "**identifier**: The ID of the group or the name of the role that visibility of this item is restricted to.",
                  "**type**: Whether visibility of this item is restricted to a group or role.",
                  "**value**: The name of the group or role that visibility of this item is restricted to. Please note that the name of a group is mutable, to reliably identify a group use `identifier`."
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
