{
  "name": "updatePermissionScheme",
  "description": "Updates a permission scheme. Below are some important things to note when using this resource:\n\n *  If a permissions list is present in the request, then it is set in the permission scheme, overwriting *all existing* grants.\n *  If you want to update only the name and description, then do not send a permissions list in the request.\n *  Sending an empty list will remove all permission grants from the permission scheme.\n\nIf you want to add or delete a permission grant instead of updating the whole list, see [Create permission grant](#api-rest-api-3-permissionscheme-schemeId-permission-post) or [Delete permission scheme entity](#api-rest-api-3-permissionscheme-schemeId-permission-permissionId-delete).\n\nSee [About permission schemes and grants](../api-group-permission-schemes/#about-permission-schemes-and-grants) for more details.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).",
  "parameters": {
    "type": "object",
    "properties": {
      "schemeId": {
        "format": "int64",
        "type": "integer",
        "description": "The ID of the permission scheme to update."
      },
      "expand": {
        "type": "string",
        "description": "Use expand to include additional information in the response. This parameter accepts a comma-separated list. Note that permissions are always included when you specify any value. Expand options include:\n\n *  `all` Returns all expandable information.\n *  `field` Returns information about the custom field granted the permission.\n *  `group` Returns information about the group that is granted the permission.\n *  `permissions` Returns all permission grants for each permission scheme.\n *  `projectRole` Returns information about the project role granted the permission.\n *  `user` Returns information about the user who is granted the permission."
      },
      "body": {
        "$ref": "#/$defs/PermissionScheme"
      }
    },
    "required": [
      "schemeId",
      "body"
    ],
    "$defs": {
      "PermissionScheme": {
        "additionalProperties": true,
        "description": "Details of a permission scheme.",
        "properties": {
          "description": {
            "description": "A description for the permission scheme.",
            "type": "string"
          },
          "expand": {
            "description": "The expand options available for the permission scheme.",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "description": "The ID of the permission scheme.",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "description": "The name of the permission scheme. Must be unique.",
            "type": "string"
          },
          "permissions": {
            "description": "The permission scheme to create or update. See [About permission schemes and grants](../api-group-permission-schemes/#about-permission-schemes-and-grants) for more information.",
            "items": {
              "$ref": "#/$defs/PermissionGrant"
            },
            "type": "array"
          },
          "scope": {
            "allOf": [
              {
                "$ref": "#/$defs/Scope"
              }
            ],
            "description": "The scope of the permission scheme."
          },
          "self": {
            "description": "The URL of the permission scheme.",
            "format": "uri",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "PermissionGrant": {
        "additionalProperties": false,
        "description": "Details about a permission granted to a user or group.",
        "properties": {
          "holder": {
            "allOf": [
              {
                "$ref": "#/$defs/PermissionHolder"
              }
            ],
            "description": "The user or group being granted the permission. It consists of a `type`, a type-dependent `parameter` and a type-dependent `value`. See [Holder object](../api-group-permission-schemes/#holder-object) in *Get all permission schemes* for more information."
          },
          "id": {
            "description": "The ID of the permission granted details.",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "permission": {
            "description": "The permission to grant. This permission can be one of the built-in permissions or a custom permission added by an app. See [Built-in permissions](../api-group-permission-schemes/#built-in-permissions) in *Get all permission schemes* for more information about the built-in permissions. See the [project permission](https://developer.atlassian.com/cloud/jira/platform/modules/project-permission/) and [global permission](https://developer.atlassian.com/cloud/jira/platform/modules/global-permission/) module documentation for more information about custom permissions.",
            "type": "string"
          },
          "self": {
            "description": "The URL of the permission granted details.",
            "format": "uri",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "PermissionHolder": {
        "additionalProperties": false,
        "description": "Details of a user, group, field, or project role that holds a permission. See [Holder object](../api-group-permission-schemes/#holder-object) in *Get all permission schemes* for more information.",
        "properties": {
          "expand": {
            "description": "Expand options that include additional permission holder details in the response.",
            "readOnly": true,
            "type": "string"
          },
          "parameter": {
            "description": "As a group's name can change, use of `value` is recommended. The identifier associated withthe `type` value that defines the holder of the permission.",
            "type": "string"
          },
          "type": {
            "description": "The type of permission holder.",
            "type": "string"
          },
          "value": {
            "description": "The identifier associated with the `type` value that defines the holder of the permission.",
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "type": "object"
      },
      "Scope": {
        "additionalProperties": true,
        "description": "The projects the item is associated with. Indicated for items associated with [next-gen projects](https://confluence.atlassian.com/x/loMyO).",
        "properties": {
          "project": {
            "allOf": [
              {
                "$ref": "#/$defs/ProjectDetails"
              }
            ],
            "description": "The project the item has scope in.",
            "readOnly": true
          },
          "type": {
            "description": "The type of scope.",
            "enum": [
              "PROJECT",
              "TEMPLATE"
            ],
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProjectDetails": {
        "additionalProperties": false,
        "description": "Details about a project.",
        "properties": {
          "avatarUrls": {
            "allOf": [
              {
                "$ref": "#/$defs/AvatarUrlsBean"
              }
            ],
            "description": "The URLs of the project's avatars.",
            "readOnly": true
          },
          "id": {
            "description": "The ID of the project.",
            "type": "string"
          },
          "key": {
            "description": "The key of the project.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "The name of the project.",
            "readOnly": true,
            "type": "string"
          },
          "projectCategory": {
            "allOf": [
              {
                "$ref": "#/$defs/UpdatedProjectCategory"
              }
            ],
            "description": "The category the project belongs to.",
            "readOnly": true
          },
          "projectTypeKey": {
            "description": "The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes) of the project.",
            "enum": [
              "software",
              "service_desk",
              "business"
            ],
            "readOnly": true,
            "type": "string"
          },
          "self": {
            "description": "The URL of the project details.",
            "readOnly": true,
            "type": "string"
          },
          "simplified": {
            "description": "Whether or not the project is simplified.",
            "readOnly": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "AvatarUrlsBean": {
        "additionalProperties": false,
        "properties": {
          "16x16": {
            "description": "The URL of the item's 16x16 pixel avatar.",
            "format": "uri",
            "type": "string"
          },
          "24x24": {
            "description": "The URL of the item's 24x24 pixel avatar.",
            "format": "uri",
            "type": "string"
          },
          "32x32": {
            "description": "The URL of the item's 32x32 pixel avatar.",
            "format": "uri",
            "type": "string"
          },
          "48x48": {
            "description": "The URL of the item's 48x48 pixel avatar.",
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdatedProjectCategory": {
        "additionalProperties": false,
        "description": "A project category.",
        "properties": {
          "description": {
            "description": "The name of the project category.",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "description": "The ID of the project category.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "The description of the project category.",
            "readOnly": true,
            "type": "string"
          },
          "self": {
            "description": "The URL of the project category.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "https://your-domain.atlassian.net/rest/api/3/permissionscheme/{schemeId}{?expand}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Details of a permission scheme.",
        "**Key properties:**",
        {
          "$ul": [
            "**description**: A description for the permission scheme.",
            "**expand**: The expand options available for the permission scheme.",
            "**id**: The ID of the permission scheme.",
            "**name**: The name of the permission scheme. Must be unique.",
            "**permissions**: The permission scheme to create or update. See [About permission schemes and grants](../api-group-permission-schemes/#about-permission-schemes-and-grants) for more information.",
            [
              "**scope**: The projects the item is associated with. Indicated for items associated with [next-gen projects](https://confluence.atlassian.com/x/loMyO).",
              {
                "$ul": [
                  [
                    "**project**: Details about a project.",
                    {
                      "$ul": [
                        [
                          "**avatarUrls**",
                          {
                            "$ul": [
                              "**16x16**: The URL of the item's 16x16 pixel avatar.",
                              "**24x24**: The URL of the item's 24x24 pixel avatar.",
                              "**32x32**: The URL of the item's 32x32 pixel avatar.",
                              "**48x48**: The URL of the item's 48x48 pixel avatar."
                            ]
                          }
                        ],
                        "**id**: The ID of the project.",
                        "**key**: The key of the project.",
                        "**name**: The name of the project.",
                        [
                          "**projectCategory**: A project category.",
                          {
                            "$ul": [
                              "**description**: The name of the project category.",
                              "**id**: The ID of the project category.",
                              "**name**: The description of the project category.",
                              "**self**: The URL of the project category."
                            ]
                          }
                        ],
                        "**projectTypeKey**: The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes) of the project.",
                        "**self**: The URL of the project details.",
                        "**simplified**: Whether or not the project is simplified."
                      ]
                    }
                  ],
                  "**type**: The type of scope."
                ]
              }
            ],
            "**self**: The URL of the permission scheme."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
