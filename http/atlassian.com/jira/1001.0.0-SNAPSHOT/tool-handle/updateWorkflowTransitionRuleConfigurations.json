{
  "name": "updateWorkflowTransitionRuleConfigurations",
  "description": "Updates configuration of workflow transition rules. The following rule types are supported:\n\n *  [post functions](https://developer.atlassian.com/cloud/jira/platform/modules/workflow-post-function/)\n *  [conditions](https://developer.atlassian.com/cloud/jira/platform/modules/workflow-condition/)\n *  [validators](https://developer.atlassian.com/cloud/jira/platform/modules/workflow-validator/)\n\nOnly rules created by the calling Connect app can be updated.\n\nTo assist with app migration, this operation can be used to:\n\n *  Disable a rule.\n *  Add a `tag`. Use this to filter rules in the [Get workflow transition rule configurations](https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-workflow-transition-rules/#api-rest-api-3-workflow-rule-config-get).\n\nRules are enabled if the `disabled` parameter is not provided.\n\n**[Permissions](#permissions) required:** Only Connect apps can use this operation.",
  "parameters": {
    "type": "object",
    "properties": {
      "body": {
        "$ref": "#/$defs/WorkflowTransitionRulesUpdate"
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "WorkflowTransitionRulesUpdate": {
        "additionalProperties": false,
        "description": "Details about a workflow configuration update request.",
        "properties": {
          "workflows": {
            "description": "The list of workflows with transition rules to update.",
            "items": {
              "$ref": "#/$defs/WorkflowTransitionRules"
            },
            "type": "array"
          }
        },
        "required": [
          "workflows"
        ],
        "type": "object"
      },
      "WorkflowTransitionRules": {
        "additionalProperties": false,
        "description": "A workflow with transition rules.",
        "properties": {
          "conditions": {
            "description": "The list of conditions within the workflow.",
            "items": {
              "$ref": "#/$defs/AppWorkflowTransitionRule"
            },
            "type": "array"
          },
          "postFunctions": {
            "description": "The list of post functions within the workflow.",
            "items": {
              "$ref": "#/$defs/AppWorkflowTransitionRule"
            },
            "type": "array"
          },
          "validators": {
            "description": "The list of validators within the workflow.",
            "items": {
              "$ref": "#/$defs/AppWorkflowTransitionRule"
            },
            "type": "array"
          },
          "workflowId": {
            "$ref": "#/$defs/WorkflowId"
          }
        },
        "required": [
          "workflowId"
        ],
        "type": "object"
      },
      "AppWorkflowTransitionRule": {
        "additionalProperties": false,
        "description": "A workflow transition rule.",
        "properties": {
          "configuration": {
            "$ref": "#/$defs/RuleConfiguration"
          },
          "id": {
            "description": "The ID of the transition rule.",
            "type": "string"
          },
          "key": {
            "description": "The key of the rule, as defined in the Connect or the Forge app descriptor.",
            "readOnly": true,
            "type": "string"
          },
          "transition": {
            "allOf": [
              {
                "$ref": "#/$defs/WorkflowTransition"
              }
            ],
            "readOnly": true
          }
        },
        "required": [
          "configuration",
          "id",
          "key"
        ],
        "type": "object"
      },
      "RuleConfiguration": {
        "additionalProperties": false,
        "description": "A rule configuration.",
        "properties": {
          "disabled": {
            "default": false,
            "description": "EXPERIMENTAL: Whether the rule is disabled.",
            "type": "boolean"
          },
          "tag": {
            "description": "EXPERIMENTAL: A tag used to filter rules in [Get workflow transition rule configurations](https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-workflow-transition-rules/#api-rest-api-3-workflow-rule-config-get).",
            "maxLength": 255,
            "type": "string"
          },
          "value": {
            "description": "Configuration of the rule, as it is stored by the Connect or the Forge app on the rule configuration page.",
            "type": "string"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "WorkflowTransition": {
        "additionalProperties": false,
        "description": "A workflow transition.",
        "properties": {
          "id": {
            "description": "The transition ID.",
            "format": "int32",
            "type": "integer"
          },
          "name": {
            "description": "The transition name.",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name"
        ],
        "type": "object"
      },
      "WorkflowId": {
        "additionalProperties": false,
        "description": "Properties that identify a workflow.",
        "properties": {
          "draft": {
            "description": "Whether the workflow is in the draft state.",
            "type": "boolean"
          },
          "name": {
            "description": "The name of the workflow.",
            "type": "string"
          }
        },
        "required": [
          "draft",
          "name"
        ],
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "https://your-domain.atlassian.net/rest/api/3/workflow/rule/config"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Details of any errors encountered while updating workflow transition rules.",
        "**Key properties:**",
        {
          "$ul": [
            "**updateResults**: A list of workflows."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Error messages from an operation.",
        "**Key properties:**",
        {
          "$ul": [
            "**errorMessages**: The list of error messages produced by this operation. For example, \"input parameter 'key' must be provided\"",
            "**errors**: The list of errors by parameter returned by the operation. For example,\"projectKey\": \"Project keys must start with an uppercase letter, followed by one or more uppercase alphanumeric characters.\"",
            "**status**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Error messages from an operation.",
        "**Key properties:**",
        {
          "$ul": [
            "**errorMessages**: The list of error messages produced by this operation. For example, \"input parameter 'key' must be provided\"",
            "**errors**: The list of errors by parameter returned by the operation. For example,\"projectKey\": \"Project keys must start with an uppercase letter, followed by one or more uppercase alphanumeric characters.\"",
            "**status**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
