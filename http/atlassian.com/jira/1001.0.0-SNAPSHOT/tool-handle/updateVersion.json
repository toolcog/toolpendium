{
  "name": "updateVersion",
  "description": "Updates a project version.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) or *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that contains the version.",
  "parameters": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "The ID of the version."
      },
      "body": {
        "$ref": "#/$defs/Version"
      }
    },
    "required": [
      "id",
      "body"
    ],
    "$defs": {
      "Version": {
        "additionalProperties": false,
        "description": "Details about a project version.",
        "properties": {
          "archived": {
            "description": "Indicates that the version is archived. Optional when creating or updating a version.",
            "type": "boolean"
          },
          "description": {
            "description": "The description of the version. Optional when creating or updating a version.",
            "type": "string"
          },
          "expand": {
            "description": "Use [expand](em>#expansion) to include additional information about version in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `operations` Returns the list of operations available for this version.\n *  `issuesstatus` Returns the count of issues in this version for each of the status categories *to do*, *in progress*, *done*, and *unmapped*. The *unmapped* property contains a count of issues with a status other than *to do*, *in progress*, and *done*.\n\nOptional for create and update.",
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "id": {
            "description": "The ID of the version.",
            "readOnly": true,
            "type": "string"
          },
          "issuesStatusForFixVersion": {
            "allOf": [
              {
                "$ref": "#/$defs/VersionIssuesStatus"
              }
            ],
            "description": "If the expand option `issuesstatus` is used, returns the count of issues in this version for each of the status categories *to do*, *in progress*, *done*, and *unmapped*. The *unmapped* property contains a count of issues with a status other than *to do*, *in progress*, and *done*.",
            "readOnly": true
          },
          "moveUnfixedIssuesTo": {
            "description": "The URL of the self link to the version to which all unfixed issues are moved when a version is released. Not applicable when creating a version. Optional when updating a version.",
            "format": "uri",
            "type": "string"
          },
          "name": {
            "description": "The unique name of the version. Required when creating a version. Optional when updating a version. The maximum length is 255 characters.",
            "type": "string"
          },
          "operations": {
            "description": "If the expand option `operations` is used, returns the list of operations available for this version.",
            "items": {
              "$ref": "#/$defs/SimpleLink"
            },
            "readOnly": true,
            "type": "array"
          },
          "overdue": {
            "description": "Indicates that the version is overdue.",
            "readOnly": true,
            "type": "boolean"
          },
          "project": {
            "description": "Deprecated. Use `projectId`.",
            "type": "string"
          },
          "projectId": {
            "description": "The ID of the project to which this version is attached. Required when creating a version. Not applicable when updating a version.",
            "format": "int64",
            "type": "integer"
          },
          "releaseDate": {
            "description": "The release date of the version. Expressed in ISO 8601 format (yyyy-mm-dd). Optional when creating or updating a version.",
            "format": "date",
            "type": "string"
          },
          "released": {
            "description": "Indicates that the version is released. If the version is released a request to release again is ignored. Not applicable when creating a version. Optional when updating a version.",
            "type": "boolean"
          },
          "self": {
            "description": "The URL of the version.",
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "startDate": {
            "description": "The start date of the version. Expressed in ISO 8601 format (yyyy-mm-dd). Optional when creating or updating a version.",
            "format": "date",
            "type": "string"
          },
          "userReleaseDate": {
            "description": "The date on which work on this version is expected to finish, expressed in the instance's *Day/Month/Year Format* date format.",
            "readOnly": true,
            "type": "string"
          },
          "userStartDate": {
            "description": "The date on which work on this version is expected to start, expressed in the instance's *Day/Month/Year Format* date format.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object",
        "xml": {
          "name": "version"
        }
      },
      "VersionIssuesStatus": {
        "additionalProperties": true,
        "description": "Counts of the number of issues in various statuses.",
        "properties": {
          "done": {
            "description": "Count of issues with status *done*.",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "inProgress": {
            "description": "Count of issues with status *in progress*.",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "toDo": {
            "description": "Count of issues with status *to do*.",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "unmapped": {
            "description": "Count of issues with a status other than *to do*, *in progress*, and *done*.",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "SimpleLink": {
        "additionalProperties": false,
        "description": "Details about the operations available in this version.",
        "properties": {
          "href": {
            "type": "string"
          },
          "iconClass": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "styleClass": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "weight": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object",
        "xml": {
          "name": "link"
        }
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "https://your-domain.atlassian.net/rest/api/3/version/{id}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Details about a project version.",
        "**Key properties:**",
        {
          "$ul": [
            "**archived**: Indicates that the version is archived. Optional when creating or updating a version.",
            "**description**: The description of the version. Optional when creating or updating a version.",
            "**expand**: Use [expand](em>#expansion) to include additional information about version in the response. This parameter accepts a comma-separated list. Expand options include:",
            "**id**: The ID of the version.",
            [
              "**issuesStatusForFixVersion**: Counts of the number of issues in various statuses.",
              {
                "$ul": [
                  "**done**: Count of issues with status *done*.",
                  "**inProgress**: Count of issues with status *in progress*.",
                  "**toDo**: Count of issues with status *to do*.",
                  "**unmapped**: Count of issues with a status other than *to do*, *in progress*, and *done*."
                ]
              }
            ],
            "**moveUnfixedIssuesTo**: The URL of the self link to the version to which all unfixed issues are moved when a version is released. Not applicable when creating a version. Optional when updating a version.",
            "**name**: The unique name of the version. Required when creating a version. Optional when updating a version. The maximum length is 255 characters.",
            "**operations**: If the expand option `operations` is used, returns the list of operations available for this version.",
            "**overdue**: Indicates that the version is overdue.",
            "**project**: Deprecated. Use `projectId`.",
            "**projectId**: The ID of the project to which this version is attached. Required when creating a version. Not applicable when updating a version.",
            "**releaseDate**: The release date of the version. Expressed in ISO 8601 format (yyyy-mm-dd). Optional when creating or updating a version.",
            "**released**: Indicates that the version is released. If the version is released a request to release again is ignored. Not applicable when creating a version. Optional when updating a version.",
            "**self**: The URL of the version.",
            "**startDate**: The start date of the version. Expressed in ISO 8601 format (yyyy-mm-dd). Optional when creating or updating a version.",
            "**userReleaseDate**: The date on which work on this version is expected to finish, expressed in the instance's *Day/Month/Year Format* date format.",
            "**userStartDate**: The date on which work on this version is expected to start, expressed in the instance's *Day/Month/Year Format* date format."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
