{
  "name": "searchForIssuesUsingJqlPost",
  "description": "Searches for issues using [JQL](https://confluence.atlassian.com/x/egORLQ).\n\nThere is a [GET](#api-rest-api-3-search-get) version of this resource that can be used for smaller JQL query expressions.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** Issues are included in the response where the user has:\n\n *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project containing the issue.\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.",
  "parameters": {
    "type": "object",
    "properties": {
      "body": {
        "$ref": "#/components/schemas/SearchRequestBean",
        "description": "A JSON object containing the search request."
      }
    },
    "required": [
      "body"
    ]
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://your-domain.atlassian.net/rest/api/3/search"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The result of a JQL search.",
        "**Key properties:**",
        {
          "$ul": [
            "**expand**: Expand options that include additional search result details in the response.",
            "**issues**: The list of issues found by the search.",
            "**maxResults**: The maximum number of results that could be on the page.",
            "**names**: The ID and name of each field in the search results.",
            "**schema**: The schema describing the field types in the search results.",
            "**startAt**: The index of the first item returned on the page.",
            "**total**: The number of results on the page.",
            "**warningMessages**: Any warnings related to the JQL query."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
