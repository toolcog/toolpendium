{
  "name": "updateDashboard",
  "description": "Updates a dashboard, replacing all the dashboard details with those provided.\n\n**[Permissions](#permissions) required:** None\n\nThe dashboard to be updated must be owned by the user.",
  "parameters": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "The ID of the dashboard to update."
      },
      "body": {
        "$ref": "#/components/schemas/DashboardDetails",
        "description": "Replacement dashboard details."
      }
    },
    "required": [
      "id",
      "body"
    ]
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "https://your-domain.atlassian.net/rest/api/3/dashboard/{id}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Details of a dashboard.",
        "**Key properties:**",
        {
          "$ul": [
            "**automaticRefreshMs**: The automatic refresh interval for the dashboard in milliseconds.",
            "**description**",
            "**editPermissions**: The details of any edit share permissions for the dashboard.",
            "**id**: The ID of the dashboard.",
            "**isFavourite**: Whether the dashboard is selected as a favorite by the user.",
            "**isWritable**: Whether the current user has permission to edit the dashboard.",
            "**name**: The name of the dashboard.",
            [
              "**owner**",
              {
                "$ul": [
                  "**accountId**: The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.",
                  "**active**: Whether the user is active.",
                  [
                    "**avatarUrls**",
                    {
                      "$ul": [
                        "**16x16**: The URL of the user's 16x16 pixel avatar.",
                        "**24x24**: The URL of the user's 24x24 pixel avatar.",
                        "**32x32**: The URL of the user's 32x32 pixel avatar.",
                        "**48x48**: The URL of the user's 48x48 pixel avatar."
                      ]
                    }
                  ],
                  "**displayName**: The display name of the user. Depending on the userâ€™s privacy setting, this may return an alternative value.",
                  "**key**: This property is deprecated in favor of `accountId` because of privacy changes. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.  ",
                  "**name**: This property is deprecated in favor of `accountId` because of privacy changes. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.  ",
                  "**self**: The URL of the user."
                ]
              }
            ],
            "**popularity**: The number of users who have this dashboard as a favorite.",
            "**rank**: The rank of this dashboard.",
            "**self**: The URL of these dashboard details.",
            "**sharePermissions**: The details of any view share permissions for the dashboard.",
            "**systemDashboard**: Whether the current dashboard is system dashboard.",
            "**view**: The URL of the dashboard."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Error messages from an operation.",
        "**Key properties:**",
        {
          "$ul": [
            "**errorMessages**: The list of error messages produced by this operation. For example, \"input parameter 'key' must be provided\"",
            "**errors**: The list of errors by parameter returned by the operation. For example,\"projectKey\": \"Project keys must start with an uppercase letter, followed by one or more uppercase alphanumeric characters.\"",
            "**status**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Error messages from an operation.",
        "**Key properties:**",
        {
          "$ul": [
            "**errorMessages**: The list of error messages produced by this operation. For example, \"input parameter 'key' must be provided\"",
            "**errors**: The list of errors by parameter returned by the operation. For example,\"projectKey\": \"Project keys must start with an uppercase letter, followed by one or more uppercase alphanumeric characters.\"",
            "**status**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Error messages from an operation.",
        "**Key properties:**",
        {
          "$ul": [
            "**errorMessages**: The list of error messages produced by this operation. For example, \"input parameter 'key' must be provided\"",
            "**errors**: The list of errors by parameter returned by the operation. For example,\"projectKey\": \"Project keys must start with an uppercase letter, followed by one or more uppercase alphanumeric characters.\"",
            "**status**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
