{
  "name": "getVersion",
  "description": "Returns a project version.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project containing the version.",
  "parameters": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "The ID of the version."
      },
      "expand": {
        "type": "string",
        "description": "Use [expand](#expansion) to include additional information about version in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `operations` Returns the list of operations available for this version.\n *  `issuesstatus` Returns the count of issues in this version for each of the status categories *to do*, *in progress*, *done*, and *unmapped*. The *unmapped* property represents the number of issues with a status other than *to do*, *in progress*, and *done*."
      }
    },
    "required": [
      "id"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://your-domain.atlassian.net/rest/api/3/version/{id}{?expand}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Details about a project version.",
        "**Key properties:**",
        {
          "$ul": [
            "**archived**: Indicates that the version is archived. Optional when creating or updating a version.",
            "**description**: The description of the version. Optional when creating or updating a version.",
            "**expand**: Use [expand](em>#expansion) to include additional information about version in the response. This parameter accepts a comma-separated list. Expand options include:",
            "**id**: The ID of the version.",
            [
              "**issuesStatusForFixVersion**: Counts of the number of issues in various statuses.",
              {
                "$ul": [
                  "**done**: Count of issues with status *done*.",
                  "**inProgress**: Count of issues with status *in progress*.",
                  "**toDo**: Count of issues with status *to do*.",
                  "**unmapped**: Count of issues with a status other than *to do*, *in progress*, and *done*."
                ]
              }
            ],
            "**moveUnfixedIssuesTo**: The URL of the self link to the version to which all unfixed issues are moved when a version is released. Not applicable when creating a version. Optional when updating a version.",
            "**name**: The unique name of the version. Required when creating a version. Optional when updating a version. The maximum length is 255 characters.",
            "**operations**: If the expand option `operations` is used, returns the list of operations available for this version.",
            "**overdue**: Indicates that the version is overdue.",
            "**project**: Deprecated. Use `projectId`.",
            "**projectId**: The ID of the project to which this version is attached. Required when creating a version. Not applicable when updating a version.",
            "**releaseDate**: The release date of the version. Expressed in ISO 8601 format (yyyy-mm-dd). Optional when creating or updating a version.",
            "**released**: Indicates that the version is released. If the version is released a request to release again is ignored. Not applicable when creating a version. Optional when updating a version.",
            "**self**: The URL of the version.",
            "**startDate**: The start date of the version. Expressed in ISO 8601 format (yyyy-mm-dd). Optional when creating or updating a version.",
            "**userReleaseDate**: The date on which work on this version is expected to finish, expressed in the instance's *Day/Month/Year Format* date format.",
            "**userStartDate**: The date on which work on this version is expected to start, expressed in the instance's *Day/Month/Year Format* date format."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
