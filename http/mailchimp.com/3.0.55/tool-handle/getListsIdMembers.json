{
  "name": "getListsIdMembers",
  "description": "Get information about members in a specific Mailchimp list.",
  "parameters": {
    "type": "object",
    "properties": {
      "fields": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      "exclude_fields": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      "count": {
        "default": 10,
        "maximum": 1000,
        "type": "integer",
        "description": "The number of records to return. Default value is 10. Maximum value is 1000"
      },
      "offset": {
        "default": 0,
        "type": "integer",
        "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
      },
      "list_id": {
        "type": "string",
        "description": "The unique ID for the list."
      },
      "email_type": {
        "type": "string",
        "description": "The email type."
      },
      "status": {
        "enum": [
          "subscribed",
          "unsubscribed",
          "cleaned",
          "pending",
          "transactional",
          "archived"
        ],
        "type": "string",
        "description": "The subscriber's status."
      },
      "since_timestamp_opt": {
        "type": "string",
        "description": "Restrict results to subscribers who opted-in after the set timeframe. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
      },
      "before_timestamp_opt": {
        "type": "string",
        "description": "Restrict results to subscribers who opted-in before the set timeframe. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
      },
      "since_last_changed": {
        "type": "string",
        "description": "Restrict results to subscribers whose information changed after the set timeframe. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
      },
      "before_last_changed": {
        "type": "string",
        "description": "Restrict results to subscribers whose information changed before the set timeframe. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
      },
      "unique_email_id": {
        "type": "string",
        "description": "A unique identifier for the email address across all Mailchimp lists."
      },
      "vip_only": {
        "type": "boolean",
        "description": "A filter to return only the list's VIP members. Passing `true` will restrict results to VIP list members, passing `false` will return all list members."
      },
      "interest_category_id": {
        "type": "string",
        "description": "The unique id for the interest category."
      },
      "interest_ids": {
        "type": "string",
        "description": "Used to filter list members by interests. Must be accompanied by interest_category_id and interest_match. The value must be a comma separated list of interest ids present for any supplied interest categories."
      },
      "interest_match": {
        "enum": [
          "any",
          "all",
          "none"
        ],
        "type": "string",
        "description": "Used to filter list members by interests. Must be accompanied by interest_category_id and interest_ids. \"any\" will match a member with any of the interest supplied, \"all\" will only match members with every interest supplied, and \"none\" will match members without any of the interest supplied."
      },
      "sort_field": {
        "enum": [
          "timestamp_opt",
          "timestamp_signup",
          "last_changed"
        ],
        "type": "string",
        "description": "Returns files sorted by the specified field."
      },
      "sort_dir": {
        "enum": [
          "ASC",
          "DESC"
        ],
        "type": "string",
        "description": "Determines the order direction for sorted results."
      },
      "since_last_campaign": {
        "type": "boolean",
        "description": "Filter subscribers by those subscribed/unsubscribed/pending/cleaned since last email campaign send. Member status is required to use this filter."
      },
      "unsubscribed_since": {
        "type": "string",
        "description": "Filter subscribers by those unsubscribed since a specific date. Using any status other than unsubscribed with this filter will result in an error."
      }
    },
    "required": [
      "list_id"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://server.api.mailchimp.com/3.0/lists/{list_id}/members{?fields,exclude_fields,count,offset,email_type,status,since_timestamp_opt,before_timestamp_opt,since_last_changed,before_last_changed,unique_email_id,vip_only,interest_category_id,interest_ids,interest_match,sort_field,sort_dir,since_last_campaign,unsubscribed_since}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "List Members"
        },
        "Manage members of a specific Mailchimp list, including currently subscribed, unsubscribed, and bounced members.",
        "**Key properties:**",
        {
          "$ul": [
            "**_links**: A list of link types and descriptions for the API schema documents.",
            "**list_id**: The list id.",
            "**members**: An array of objects, each representing a specific list member.",
            "**total_items**: The total number of items matching the query regardless of pagination."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "default": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Problem Detail Document"
        },
        "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
            "**instance**: A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
            "**status**: The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
            "**title**: A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
            "**type**: An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
