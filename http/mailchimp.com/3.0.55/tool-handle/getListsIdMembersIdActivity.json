{
  "name": "getListsIdMembersIdActivity",
  "description": "Get the last 50 events of a member's activity on a specific list, including opens, clicks, and unsubscribes.",
  "parameters": {
    "type": "object",
    "properties": {
      "list_id": {
        "type": "string",
        "description": "The unique ID for the list."
      },
      "subscriber_hash": {
        "type": "string",
        "description": "The MD5 hash of the lowercase version of the list member's email address. This endpoint also accepts a list member's email address or contact_id."
      },
      "fields": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      "exclude_fields": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      "action": {
        "enum": [
          [
            "abuse"
          ],
          [
            "bounce"
          ],
          [
            "click"
          ],
          [
            "open"
          ],
          [
            "sent"
          ],
          [
            "unsub"
          ],
          [
            "ecomm"
          ]
        ],
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "A comma seperated list of actions to return."
      }
    },
    "required": [
      "list_id",
      "subscriber_hash"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://server.api.mailchimp.com/3.0/lists/{list_id}/members/{subscriber_hash}/activity{?fields,exclude_fields,action}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Member Activity Events"
        },
        "The last 50 member events for a list.",
        "**Key properties:**",
        {
          "$ul": [
            "**_links**: A list of link types and descriptions for the API schema documents.",
            "**activity**: An array of objects, each representing a member event.",
            "**contact_id**: As Mailchimp evolves beyond email, you may eventually have contacts without email addresses. While the `email_id` is the MD5 hash of their email address, this `contact_id` is agnostic of contactâ€™s inclusion of an email address.",
            "**email_id**: The MD5 hash of the lowercase version of the list member's email address.",
            "**list_id**: The list id.",
            "**total_items**: The total number of items matching the query regardless of pagination."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "default": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Problem Detail Document"
        },
        "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors).",
            "**instance**: A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
            "**status**: The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
            "**title**: A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
            "**type**: An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
