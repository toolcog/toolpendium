{
  "name": "taxRatesByCountryCode",
  "description": "Get request. This method returns all tax rates for country discovered based on country code. The country code must be 2 letters ISO 3166-1 alfa-2 country code (see <a href=\"https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes\">here</a> for more information). You can use 'filter' parameter to narrow results to selected type of tax\n<p>For US sales tax you can filter the tax rate you want for each state or zip code with one of the following: (they are case sensitive)</p>\n<ul>\n  <li>CombinedRate</li>\n  <li>StateRate</li>\n  <li>CountyRate</li>\n  <li>CityRate</li>\n  <li>SpecialRate</li>\n</ul>\n<pre><code class=\"js\">var taxrates_endpoint = 'tax/countrycode';\n  var taxrates_params = {'domain':'api.taxrates.io', 'country_code':'IE', 'product_code':'C010'};\n  var taxrates_url = '/api/v1/';\n  if ( localStorage.getItem(\"Taxrates_API_Client_Secret\") ){\n  jQuery.support.cors = true;\n  jQuery.ajax({\n      url: taxrates_url+taxrates_endpoint,\n      type: 'get',\n      method: 'get',\n      dataType: \"json\",\n      data: taxrates_params,\n      beforeSend: function (request) {\n              request.withCredentials = true;\n              request.setRequestHeader(\"Authorization\", \"Apikey \" + localStorage.getItem(\"Taxrates_API_Client_Secret\"));\n      },\n      headers: {\n        \"accept\": \"application/json\"\n      },\n      contentType: 'application/json; charset=utf-8',\n      success: function (data) {\n        //Maintain errors inside success because the API may return 200 in general, but different code inside\n          if(data.ErrorCode=='404' || data.ErrorCode=='500'){\n            //Maintain errors here\n            console.log(data.ErrorMessage);\n            return false;\n          }else{\n            var rates = [];\n            var i=0;\n            jQuery.each(data, function(k, v) {\n                if(v.hasOwnProperty(\"taxes\")){\n                    jQuery.each(v.taxes, function(m, w) {\n                        rates[i] = [];\n                        //Only showing standard rate type\n                        if( w.Type == \"standard\" ){\n                            rates[i][0] = w.Country;\n                            rates[i][1] = w.Type;\n                            rates[i][2] = w.data_value;\n                            i++;\n                        }\n                    });\n                }\n            //Now you have all your rates inside rates variable.\n            }).fail(function(xhr) {\n                    //Maintain your errors here\n                    return false;\n            });\n            return true;\n  }else{\n    //Not logged into taxrates.io\n    //Maintain your errors here\n    return false;\n  }</code></pre>\n",
  "parameters": {
    "type": "object",
    "properties": {
      "domain": {
        "example": "api.taxrates.io",
        "type": "string",
        "description": "Domain name: api.taxrates.io"
      },
      "country_code": {
        "example": "US",
        "type": "string",
        "description": "Country code alpha 2"
      },
      "filter": {
        "example": "",
        "type": "string",
        "description": "You can filter your taxes by one of following types: 'standard', 'reduced', 'second reduced', 'third reduced' and 'super reduced'."
      },
      "zip": {
        "example": "71642",
        "type": "string",
        "description": "You must provide a zip code if one of your selected countries is United States and you've had selected a state on your Taxrates.io member's dashboard."
      },
      "product_codes[]": {
        "example": "C010",
        "type": "string",
        "description": "Use one or many product code/s."
      },
      "province ": {
        "example": "",
        "type": "string",
        "description": "Use for Canada"
      },
      "date": {
        "example": "2020-09-02",
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://api.taxrates.io/api/v1/tax/countrycode{?domain,country_code,filter,zip,product_codes[],province ,date}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**country_name**",
            "**taxes**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "500": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**",
            "**fields**",
            "**message**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
