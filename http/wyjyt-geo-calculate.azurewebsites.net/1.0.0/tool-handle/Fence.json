{
  "name": "Fence",
  "description": "Check if a list of coordinates are inside of a fence of coordinates.",
  "parameters": {
    "type": "object",
    "properties": {
      "body": {
        "$ref": "#/$defs/geoFenceRequest"
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "geoFenceRequest": {
        "example": "{\"fenceCoordinates\":[\"39.801769 -86.157769\",\"40.801769 -86.157769\",\"40.801769 -87.157769\",\"39.801769 -87.157769\",\"39.801769 -86.157769\"],\"checkCoordinates\":[\"40 -87\"]}",
        "properties": {
          "checkCoordinates": {
            "description": "Array of coordinates to check if in the fence.\r\n  Accepted standards: (latlon | utm | mgrs | ecef | epsg3857 | georef | cartesian)",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "fenceCoordinates": {
            "description": "Array of coordinates that define the fence.  First and last should be the same for polygons.\r\n  Accepted standards: (latlon | utm | mgrs | ecef | epsg3857 | georef | cartesian)",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://wyjyt-geo-calculate.azurewebsites.net/api/Fence"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**distances**: List of distances from the fence.",
            "**insides**: List of flags indicating inside or outside of the fence."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**reason**: Error message.",
            "**success**: Success or fail."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "500": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
