{
  "name": "Job_Get",
  "description": "Gets information about the specified job.",
  "parameters": {
    "type": "object",
    "properties": {
      "jobId": {
        "type": "string",
        "description": "The id of the job."
      },
      "$select": {
        "type": "string",
        "description": "An OData $select clause."
      },
      "$expand": {
        "type": "string",
        "description": "An OData $expand clause."
      },
      "timeout": {
        "default": 30,
        "format": "int32",
        "type": "integer",
        "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds."
      },
      "client-request-id": {
        "type": "string",
        "description": "The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
      },
      "return-client-request-id": {
        "type": "boolean",
        "description": "Whether the server should return the client-request-id identifier in the response."
      },
      "ocp-date": {
        "format": "date-time-rfc1123",
        "type": "string",
        "description": "The time the request was issued. If not specified, this header will be automatically populated with the current system clock time."
      },
      "api-version": {
        "type": "string",
        "description": "Client API Version."
      }
    },
    "required": [
      "jobId",
      "api-version"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://batch.core.windows.net/jobs/{jobId}{?$select,$expand,timeout,api-version}"
    },
    "headers": {
      "client-request-id": {
        "$": "client-request-id"
      },
      "return-client-request-id": {
        "$": "return-client-request-id"
      },
      "ocp-date": {
        "$": "ocp-date"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "An Azure Batch job.",
        "**Key properties:**",
        {
          "$ul": [
            "**commonEnvironmentSettings**: The list of common environment variable settings. These environment variables are set for all tasks in the job (including the Job Manager, Job Preparation and Job Release tasks).",
            [
              "**constraints**: Specifies the execution constraints for jobs created on a schedule.",
              {
                "$ul": [
                  "**maxTaskRetryCount**: The maximum number of times each task may be retried. The Batch service retries a task if its exit code is nonzero.",
                  "**maxWallClockTime**: The maximum elapsed time that the job may run, measured from the time the job starts. If the job does not complete within the time limit, the Batch service terminates it and any tasks that are still running."
                ]
              }
            ],
            "**creationTime**: The creation time of the job.",
            "**displayName**: The display name for the job.",
            "**eTag**: The ETag of the job.",
            [
              "**executionInfo**: Contains information about the execution of a job in the Azure Batch service.",
              {
                "$ul": [
                  "**endTime**: The completion time of the job. This property is set only if the job is in the completed state.",
                  "**poolId**: The id of the pool to which this job is assigned.",
                  [
                    "**schedulingError**: An error encountered by the Batch service when scheduling a job.",
                    {
                      "$ul": [
                        "**category**: The category of the job scheduling error.",
                        "**code**: An identifier for the job scheduling error. Codes are invariant and are intended to be consumed programmatically.",
                        "**details**: A list of additional error details related to the scheduling error.",
                        "**message**: A message describing the job scheduling error, intended to be suitable for display in a user interface."
                      ]
                    }
                  ],
                  "**startTime**: The start time of the job.",
                  "**terminateReason**: A string describing the reason the job ended."
                ]
              }
            ],
            "**id**: A string that uniquely identifies the job within the account. The id can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters. It is common to use a GUID for the id.",
            [
              "**jobManagerTask**: Specifies details of a Job Manager task.",
              {
                "$ul": [
                  "**commandLine**: The command line of the Job Manager task.",
                  [
                    "**constraints**: Constraints to apply to the Job Manager task.",
                    {
                      "$ul": [
                        "**maxTaskRetryCount**: The maximum number of times the task may be retried. The Batch service retries a task if its exit code is nonzero.",
                        "**maxWallClockTime**: The maximum elapsed time that the task may run, measured from the time the task starts. If the task does not complete within the time limit, the Batch service terminates it.",
                        "**retentionTime**: The minimum time to retain the working directory for the task on the compute node where it ran, from the time it completes execution. After this time, the Batch service may delete the working directory and all its contents. The default is infinite."
                      ]
                    }
                  ],
                  "**displayName**: The display name of the Job Manager task.",
                  "**environmentSettings**: A list of environment variable settings for the Job Manager task.",
                  "**id**: A string that uniquely identifies the Job Manager task. A GUID is recommended.",
                  "**killJobOnCompletion**: Whether completion of the Job Manager task signifies completion of the entire job.",
                  "**resourceFiles**: A list of files that the Batch service will download to the compute node before running the command line.",
                  "**runElevated**: Whether to run the Job Manager task in elevated mode. The default value is false.",
                  "**runExclusive**: Whether the Job Manager task requires exclusive use of the compute node where it runs. If true, no other tasks will run on the same compute node for as long as the Job Manager is running. If false, other tasks can run simultaneously with the Job Manager on a compute node. (The Job Manager task counts normally against the node's concurrent task limit, so this is only relevant if the node allows multiple concurrent tasks.)"
                ]
              }
            ],
            [
              "**jobPreparationTask**: A Job Preparation task to run before any tasks of the job on any given compute node.",
              {
                "$ul": [
                  "**commandLine**: The command line of the Job Preparation task.",
                  [
                    "**constraints**: Constraints to apply to the Job Manager task.",
                    {
                      "$ul": [
                        "**maxTaskRetryCount**: The maximum number of times the task may be retried. The Batch service retries a task if its exit code is nonzero.",
                        "**maxWallClockTime**: The maximum elapsed time that the task may run, measured from the time the task starts. If the task does not complete within the time limit, the Batch service terminates it.",
                        "**retentionTime**: The minimum time to retain the working directory for the task on the compute node where it ran, from the time it completes execution. After this time, the Batch service may delete the working directory and all its contents. The default is infinite."
                      ]
                    }
                  ],
                  "**environmentSettings**: A list of environment variable settings for the Job Preparation task.",
                  "**id**: A string that uniquely identifies the job preparation task within the job. The id can contain any combination of alphanumeric characters including hyphens and underscores and cannot contain more than 64 characters.",
                  "**rerunOnNodeRebootAfterSuccess**: Whether the Batch service should rerun the Job Preparation task after a compute node reboots. Note that the Job Preparation task should still be written to be idempotent because it can be rerun if the compute node is rebooted while Job Preparation task is still running. The default value is true.",
                  "**resourceFiles**: A list of files that the Batch service will download to the compute node before running the command line.",
                  "**runElevated**: Whether to run the Job Preparation task in elevated mode. The default value is false.",
                  "**waitForSuccess**: Whether the Batch service should wait for the Job Preparation task to complete successfully before scheduling any other tasks of the job on the compute node."
                ]
              }
            ],
            [
              "**jobReleaseTask**: A Job Release task to run on job completion on any compute node where the job has run.",
              {
                "$ul": [
                  "**commandLine**: The command line of the Job Release task.",
                  "**environmentSettings**: A list of environment variable settings for the Job Release task.",
                  "**id**: A string that uniquely identifies the Job Release task within the job. The id can contain any combination of alphanumeric characters including hyphens and underscores and cannot contain more than 64 characters.",
                  "**maxWallClockTime**: The maximum elapsed time that the Job Release task may run on a given compute node, measured from the time the task starts. If the task does not complete within the time limit, the Batch service terminates it. The default value is 15 minutes.",
                  "**resourceFiles**: A list of files that the Batch service will download to the compute node before running the command line.",
                  "**retentionTime**: The minimum time to retain the working directory for the Job Release task on the compute node. After this time, the Batch service may delete the working directory and all its contents. The default is infinite.",
                  "**runElevated**: Whether to run the Job Release task in elevated mode. The default value is false."
                ]
              }
            ],
            "**lastModified**: The last modified time of the job.",
            "**metadata**: A list of name-value pairs associated with the job as metadata.",
            [
              "**poolInfo**: Specifies how a job should be assigned to a pool.",
              {
                "$ul": [
                  [
                    "**autoPoolSpecification**: Specifies characteristics for a temporary 'auto pool'. The Batch service will create this auto pool, run all the tasks for the job on it, and will delete the pool once the job has completed.",
                    {
                      "$ul": [
                        "**autoPoolIdPrefix**: A prefix to be added to the unique identifier when a pool is automatically created. The prefix can be up to 20 characters long.",
                        "**keepAlive**: Whether to keep an auto pool alive after its lifetime expires.",
                        [
                          "**pool**: Specification for creating a new pool.",
                          {
                            "$ul": [
                              "**applicationPackageReferences**: The list of application packages to be installed on each compute node in the pool.",
                              "**autoScaleEvaluationInterval**: A time interval for the desired AutoScale evaluation period in the pool.",
                              "**autoScaleFormula**: The formula for the desired number of compute nodes in the pool.",
                              "**certificateReferences**: A list of certificates to be installed on each compute node in the pool.",
                              [
                                "**cloudServiceConfiguration**: The configuration for nodes in a pool based on the Azure Cloud Services platform.",
                                {
                                  "$ul": [
                                    "**currentOSVersion**: The Azure Guest OS Version currently installed on the virtual machines in the pool. This may differ from TargetOSVersion if the pool state is Upgrading.",
                                    "**osFamily**: The Azure Guest OS family to be installed on the virtual machines in the pool.",
                                    "**targetOSVersion**: The Azure Guest OS version to be installed on the virtual machines in the pool. The default value is * which specifies the latest operating system version for the specified OS family."
                                  ]
                                }
                              ],
                              "**displayName**: The display name for the pool.",
                              "**enableAutoScale**: Whether the pool size should automatically adjust over time.",
                              "**enableInterNodeCommunication**: Whether the pool permits direct communication between nodes.",
                              "**maxTasksPerNode**: The maximum number of tasks that can run concurrently on a single compute node in the pool.",
                              "**metadata**: A list of name-value pairs associated with the pool as metadata.",
                              "**resizeTimeout**: The timeout for allocation of compute nodes to the pool.",
                              [
                                "**startTask**: A task which is run when a compute node joins a pool in the Azure Batch service, or when the compute node is rebooted or reimaged.",
                                {
                                  "$ul": [
                                    "**commandLine**: The command line of the start task.",
                                    "**environmentSettings**: A list of environment variable settings for the start task.",
                                    "**maxTaskRetryCount**: The maximum number of times the task may be retried.",
                                    "**resourceFiles**: A list of files that the Batch service will download to the compute node before running the command line.",
                                    "**runElevated**: Whether to run the start task in elevated mode. The default value is false.",
                                    "**waitForSuccess**: Whether the Batch service should wait for the start task to complete successfully (that is, to exit with exit code 0) before scheduling any tasks on the compute node."
                                  ]
                                }
                              ],
                              "**targetDedicated**: The desired number of compute nodes in the pool.",
                              [
                                "**taskSchedulingPolicy**: Specifies how tasks should be distributed across compute nodes.",
                                {
                                  "$ul": [
                                    "**nodeFillType**: How tasks should be distributed across compute nodes"
                                  ]
                                }
                              ],
                              [
                                "**virtualMachineConfiguration**: The configuration for compute nodes in a pool based on the Azure Virtual Machines infrastructure.",
                                {
                                  "$ul": [
                                    [
                                      "**imageReference**: A reference to an Azure Virtual Machines Marketplace image.",
                                      {
                                        "$ul": [
                                          "**offer**: The offer type of the Azure Virtual Machines Marketplace image. For example, UbuntuServer or WindowsServer.",
                                          "**publisher**: The publisher of the Azure Virtual Machines Marketplace image. For example, Canonical or MicrosoftWindowsServer.",
                                          "**sku**: The SKU of the Azure Virtual Machines Marketplace image. For example, 14.04.0-LTS or 2012-R2-Datacenter.",
                                          "**version**: The version of the Azure Virtual Machines Marketplace image. A value of 'latest' can be specified to select the latest version of an image. If omitted, the default is 'latest'."
                                        ]
                                      }
                                    ],
                                    "**nodeAgentSKUId**: The SKU of Batch Node Agent to be provisioned on the compute node. The Batch node agent is a program that runs on each node in the pool, and provides the command-and-control interface between the node and the Batch service. There are different implementations of the node agent, known as SKUs, for different operating systems.",
                                    [
                                      "**windowsConfiguration**: Windows operating system settings to apply to the virtual machine.",
                                      {
                                        "$ul": [
                                          "**enableAutomaticUpdates**: Whether automatic updates are enabled on the virtual machine. If omitted, the default value is true."
                                        ]
                                      }
                                    ]
                                  ]
                                }
                              ],
                              "**vmSize**: The size of the virtual machines in the pool. All virtual machines in a pool are the same size."
                            ]
                          }
                        ],
                        "**poolLifetimeOption**: The minimum lifetime of created auto pools, and how multiple jobs on a schedule are assigned to pools."
                      ]
                    }
                  ],
                  "**poolId**: The id of an existing pool. All the tasks of the job will run on the specified pool. You must specify either PoolId or AutoPoolSpecification, but not both."
                ]
              }
            ],
            "**previousState**: The previous state of the job. This property is not set if the job is in its initial Active state.",
            "**previousStateTransitionTime**: The time at which the job entered its previous state. This property is not set if the job is in its initial Active state.",
            "**priority**: The priority of the job. Priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority. The default value is 0.",
            "**state**: The current state of the job.",
            "**stateTransitionTime**: The time at which the job entered its current state.",
            [
              "**stats**: Resource usage statistics for a job.",
              {
                "$ul": [
                  "**kernelCPUTime**: The total kernel mode CPU time (summed across all cores and all compute nodes) consumed by all tasks in the job.",
                  "**lastUpdateTime**: The time at which the statistics were last updated. All statistics are limited to the range between startTime and lastUpdateTime.",
                  "**numFailedTasks**: The total number of tasks in the job that failed during the given time range.",
                  "**numSucceededTasks**: The total number of tasks successfully completed in the job during the given time range.",
                  "**numTaskRetries**: The total number of retries on all the tasks in the job during the given time range.",
                  "**readIOGiB**: The total gibibytes read from disk by all tasks in the job.",
                  "**readIOps**: The total number of disk read operations made by all tasks in the job.",
                  "**startTime**: The start time of the time range covered by the statistics.",
                  "**url**: The URL of the statistics.",
                  "**userCPUTime**: The total user mode CPU time (summed across all cores and all compute nodes) consumed by all tasks in the job.",
                  "**waitTime**: The total wait time of all tasks in the job. The wait time for a task is defined as the elapsed time between the creation of the task and the start of task execution. (If the task is retried due to failures, the wait time is the time to the most recent task execution.)",
                  "**wallClockTime**: The total wall clock time of all tasks in the job.",
                  "**writeIOGiB**: The total gibibytes written to disk by all tasks in the job.",
                  "**writeIOps**: The total number of disk write operations made by all tasks in the job."
                ]
              }
            ],
            "**url**: The URL of the job.",
            "**usesTaskDependencies**: The flag that determines if this job will use tasks with dependencies."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "default": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "An error response received from the Azure Batch service.",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.",
            [
              "**message**: An error message received in an Azure Batch error response.",
              {
                "$ul": [
                  "**lang**: The language code of the error message",
                  "**value**: The text of the message."
                ]
              }
            ],
            "**values**: A collection of key-value pairs containing additional details about the error."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
