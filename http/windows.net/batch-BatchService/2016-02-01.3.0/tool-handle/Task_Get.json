{
  "name": "Task_Get",
  "description": "Gets information about the specified task.",
  "parameters": {
    "type": "object",
    "properties": {
      "jobId": {
        "type": "string",
        "description": "The id of the job that contains the task."
      },
      "taskId": {
        "type": "string",
        "description": "The id of the task to get information about."
      },
      "$select": {
        "type": "string",
        "description": "An OData $select clause."
      },
      "$expand": {
        "type": "string",
        "description": "An OData $expand clause."
      },
      "timeout": {
        "default": 30,
        "format": "int32",
        "type": "integer",
        "description": "The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds."
      },
      "client-request-id": {
        "type": "string",
        "description": "The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
      },
      "return-client-request-id": {
        "type": "boolean",
        "description": "Whether the server should return the client-request-id identifier in the response."
      },
      "ocp-date": {
        "format": "date-time-rfc1123",
        "type": "string",
        "description": "The time the request was issued. If not specified, this header will be automatically populated with the current system clock time."
      },
      "If-Match": {
        "type": "string",
        "description": "An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified."
      },
      "If-None-Match": {
        "type": "string",
        "description": "An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag."
      },
      "If-Modified-Since": {
        "format": "date-time-rfc1123",
        "type": "string",
        "description": "Specify this header to perform the operation only if the resource has been modified since the specified date/time."
      },
      "If-Unmodified-Since": {
        "format": "date-time-rfc1123",
        "type": "string",
        "description": "Specify this header to perform the operation only if the resource has not been modified since the specified date/time."
      },
      "api-version": {
        "type": "string",
        "description": "Client API Version."
      }
    },
    "required": [
      "jobId",
      "taskId",
      "api-version"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://batch.core.windows.net/jobs/{jobId}/tasks/{taskId}{?$select,$expand,timeout,api-version}"
    },
    "headers": {
      "client-request-id": {
        "$": "client-request-id"
      },
      "return-client-request-id": {
        "$": "return-client-request-id"
      },
      "ocp-date": {
        "$": "ocp-date"
      },
      "If-Match": {
        "$": "If-Match"
      },
      "If-None-Match": {
        "$": "If-None-Match"
      },
      "If-Modified-Since": {
        "$": "If-Modified-Since"
      },
      "If-Unmodified-Since": {
        "$": "If-Unmodified-Since"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "An Azure Batch task.",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**affinityInfo**: A locality hint that can be used by the Batch service to select a compute node on which to start a task.",
              {
                "$ul": [
                  "**affinityId**: An opaque string representing the location of a compute node or a task that has run previously. You can pass the AffinityId of a compute node or task to indicate that this task needs to be placed close to the node or task."
                ]
              }
            ],
            "**commandLine**: The command line of the task. For multi-instance tasks, the command line is executed on the primary subtask after all the subtasks have finished executing the coordination command line.",
            [
              "**constraints**: Constraints to apply to the Job Manager task.",
              {
                "$ul": [
                  "**maxTaskRetryCount**: The maximum number of times the task may be retried. The Batch service retries a task if its exit code is nonzero.",
                  "**maxWallClockTime**: The maximum elapsed time that the task may run, measured from the time the task starts. If the task does not complete within the time limit, the Batch service terminates it.",
                  "**retentionTime**: The minimum time to retain the working directory for the task on the compute node where it ran, from the time it completes execution. After this time, the Batch service may delete the working directory and all its contents. The default is infinite."
                ]
              }
            ],
            "**creationTime**: The creation time of the task.",
            [
              "**dependsOn**: Specifies any dependencies of a task. Any task that is explicitly specified or within a dependency range must complete before the dependant task will be scheduled.",
              {
                "$ul": [
                  "**taskIdRanges**: The list of task ranges that must complete before this task can be scheduled.",
                  "**taskIds**: The list of task ids that must complete before this task can be scheduled."
                ]
              }
            ],
            "**displayName**: A display name for the task.",
            "**eTag**: The ETag of the task.",
            "**environmentSettings**: A list of environment variable settings for the task.",
            [
              "**executionInfo**: Information about the execution of a task.",
              {
                "$ul": [
                  "**endTime**: The time at which the task completed. This property is set only if the task is in the Completed state.",
                  "**exitCode**: The exit code of the task. This property is set only if the task is in completed state.",
                  "**lastRequeueTime**: The most recent time at which the task has been requeued by the Batch service as the result of a user request.",
                  "**lastRetryTime**: The most recent time at which a retry of the task started running.",
                  "**requeueCount**: The number of times the task has been requeued by the Batch service as the result of a user request.",
                  "**retryCount**: The number of times the task has been retried by the Batch service.",
                  [
                    "**schedulingError**: Information about an error when scheduling a task.",
                    {
                      "$ul": [
                        "**category**: The category of the task scheduling error.",
                        "**code**: An identifier for the task scheduling error. Codes are invariant and are intended to be consumed programmatically.",
                        "**details**: The list of additional error details related to the scheduling error.",
                        "**message**: A message describing the task scheduling error, intended to be suitable for display in a user interface."
                      ]
                    }
                  ],
                  "**startTime**: The time at which the task started running. If the task has been restarted or retried, this is the most recent time at which the task started running."
                ]
              }
            ],
            "**id**: A string that uniquely identifies the task within the job. The id can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters.",
            "**lastModified**: The last modified time of the task.",
            [
              "**multiInstanceSettings**: Settings which specify how to run a multi-instance task. Multi-instance tasks are commonly used to support MPI tasks.",
              {
                "$ul": [
                  "**commonResourceFiles**: A list of files that the Batch service will download before running the coordination command line. The difference between common resource files and task resource files is that common resource files are downloaded for all subtasks including the primary, whereas task resource files are downloaded only for the primary.",
                  "**coordinationCommandLine**: The command to run on the compute node instances for coordinating among the subtasks.",
                  "**numberOfInstances**: The number of compute nodes required by the multi-instance task."
                ]
              }
            ],
            [
              "**nodeInfo**: Information about the compute node on which a task ran.",
              {
                "$ul": [
                  "**affinityId**: An identifier for the compute node on which the task ran, which can be passed when adding a task to request that the task be scheduled close to this compute node.",
                  "**nodeId**: The id of the node on which the task ran.",
                  "**nodeUrl**: The URL of the node on which the task ran. ",
                  "**poolId**: The id of the pool on which the task ran.",
                  "**taskRootDirectory**: The root directory of the task on the compute node.",
                  "**taskRootDirectoryUrl**: The URL to the root directory of the task on the compute node."
                ]
              }
            ],
            "**previousState**: The previous state of the task. This property is not set if the task is in its initial Active state.",
            "**previousStateTransitionTime**: The time at which the task entered its previous state. This property is not set if the task is in its initial Active state.",
            "**resourceFiles**: A list of files that the Batch service will download to the compute node before running the command line. For multi-instance tasks, the resource files will only be downloaded to the compute node on which the primary subtask is executed.",
            "**runElevated**: Whether to run the task in elevated mode.",
            "**state**: The current state of the task.",
            "**stateTransitionTime**: The time at which the task entered its current state.",
            [
              "**stats**: Resource usage statistics for a task.",
              {
                "$ul": [
                  "**kernelCPUTime**: The total kernel mode CPU time (summed across all cores and all compute nodes) consumed by the task.",
                  "**lastUpdateTime**: The time at which the statistics were last updated. All statistics are limited to the range between startTime and lastUpdateTime.",
                  "**readIOGiB**: The total gibibytes read from disk by the task.",
                  "**readIOps**: The total number of disk read operations made by the task.",
                  "**startTime**: The start time of the time range covered by the statistics.",
                  "**url**: The URL of the statistics.",
                  "**userCPUTime**: The total user mode CPU time (summed across all cores and all compute nodes) consumed by the task.",
                  "**waitTime**: The total wait time of the task. The wait time for a task is defined as the elapsed time between the creation of the task and the start of task execution. (If the task is retried due to failures, the wait time is the time to the most recent task execution.)",
                  "**wallClockTime**: The total wall clock time of the task.",
                  "**writeIOGiB**: The total gibibytes written to disk by the task.",
                  "**writeIOps**: The total number of disk write operations made by the task."
                ]
              }
            ],
            "**url**: The URL of the task."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "default": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "An error response received from the Azure Batch service.",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.",
            [
              "**message**: An error message received in an Azure Batch error response.",
              {
                "$ul": [
                  "**lang**: The language code of the error message",
                  "**value**: The text of the message."
                ]
              }
            ],
            "**values**: A collection of key-value pairs containing additional details about the error."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
