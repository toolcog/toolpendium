{
  "name": "listResourceContents",
  "description": "Returns a list of files/folders for the parent resource ID. \n\nYou can use this API call to get information about all files and folders at a specified path. By default, the API returns basic metadata on each file/folder. An optional `include` parameter forces the return of additional metadata. As with all API calls, the path should be the full path relative to the user's home directory (e.g. **/myfiles/some_folder**).\n\n**Notes:**\n- Authenticated user should have list permission.\n",
  "parameters": {
    "type": "object",
    "properties": {
      "ev-api-key": {
        "type": "string",
        "description": "API Key required to make the API call. "
      },
      "ev-access-token": {
        "type": "string",
        "description": "Access token required to make the API call."
      },
      "id": {
        "format": "int64",
        "type": "integer",
        "description": "ID of the parent resource to get a list of resources for."
      },
      "sort": {
        "example": "name",
        "type": "string",
        "description": "Endpoint support multiple sort fields by allowing array of sort params. Sort fields should be applied in the order specified. The sort order for each sort field is ascending unless it is prefixed with a minus (“-“), in which case it will be descending."
      },
      "offset": {
        "default": 0,
        "format": "int32",
        "type": "integer",
        "description": "Determines which item to start on for pagination. Use zero (0) to start at the beginning of the list."
      },
      "limit": {
        "format": "int32",
        "type": "integer",
        "description": "The number of files to limit the result. Cannot be set higher than 100. If you have more than one hundred files in your directory, make multiple calls, incrementing the `offset parameter, above."
      },
      "type": {
        "type": "string",
        "description": "Limit types of resources returned to \"file\" or \"dir\" only."
      },
      "include": {
        "type": "string",
        "description": "Comma separated list of relationships to include in response. Possible values are **share**, **notifications**, **directFile**, **parentResource**, **ownerUser**, **ownerUser**."
      }
    },
    "required": [
      "ev-api-key",
      "ev-access-token",
      "id"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://accountname.exavault.com/api/v2/resources/list/{id}{?sort,offset,limit,type,include}"
    },
    "headers": {
      "ev-api-key": {
        "$": "ev-api-key"
      },
      "ev-access-token": {
        "$": "ev-access-token"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "ResourceCollectionResponse"
        },
        "Response object for collection of resources.",
        "**Key properties:**",
        {
          "$ul": [
            "**data**",
            "**included**",
            "**responseStatus**: Http status code of the response.",
            "**returnedResults**: Count of returned results.",
            "**totalResults**: Total count of results found."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
