{
  "name": "listUsers",
  "description": "Get a list of the users in your account. There are three main types of searches you can do with this method:\n\n1. Search for a user by username. If you provide the `username` parameter in your call, then only the user who exactly matches that username will be in the list of matches. Any other parameters are ignored.\n1. Search for a user by individual filter fields (`nickname`,`email`,`role`,`status`,`homeDir`). Users in the list will be ones who match all of the filters you choose to search by. For example, you could look for users with the \"admin\" `role` AND `email` addresses ending in \"*@acme.com\". \n1. Search for a user by search string. If you provide the `search` parameter, users whose nickname OR email OR role OR homeDir match value your provide.\n\n**Notes:**\n\n- You must be an [admin-level user](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to use this.\n- The homeDir is the full path to the user's home directory, not a resource ID or hash.",
  "parameters": {
    "type": "object",
    "properties": {
      "ev-api-key": {
        "type": "string",
        "description": "API key required to make the API call."
      },
      "ev-access-token": {
        "type": "string",
        "description": "Access token required to make the API call."
      },
      "username": {
        "type": "string",
        "description": "The username of the user you are looking for. Only entries with the same username as this will be in the list of results. Does not support wildcard searches."
      },
      "homeResource": {
        "type": "string",
        "description": "Resource identifier for user's home directory. Does not support wildcard searches."
      },
      "nickname": {
        "type": "string",
        "description": "Nickname to search for. Ignored if `username` is provided. Supports wildcard searches."
      },
      "email": {
        "example": "*@example.co",
        "type": "string",
        "description": "Email to search for. Ignored if `username` is provided. Supports wildcard searches"
      },
      "role": {
        "example": "use",
        "type": "string",
        "description": "Types of users to include the list. Ignored if `username` is provided. Valid options are **admin**, **master** and **user**"
      },
      "status": {
        "type": "integer",
        "description": "Whether a user is locked. Ignored if `username` is provided. **0** means user is locked, **1** means user is not locked. "
      },
      "search": {
        "type": "string",
        "description": "Searches the nickname, email, role and homeDir fields for the provided value. Ignored if `username` is provided. Supports wildcard searches."
      },
      "offset": {
        "format": "int32",
        "type": "integer",
        "description": "Starting user record in the result set. Can be used for pagination."
      },
      "sort": {
        "example": "homeDir,-modified",
        "type": "string",
        "description": "Sort order or matching users. You can sort by multiple columns by separating sort options with a comma; the sort will be applied in the order specified. The sort order for each sort field is ascending unless it is prefixed with a minus (“-“), in which case it will be descending.\n\nValid sort fields are: **nickname**, **username**, **email**, **homeDir** and **modified**"
      },
      "limit": {
        "format": "int32",
        "type": "integer",
        "description": "Number of users to return. Can be used for pagination."
      },
      "include": {
        "type": "string",
        "description": "Comma separated list of relationships to include in response. Valid options are **homeResource** and **ownerAccount**."
      }
    },
    "required": [
      "ev-api-key",
      "ev-access-token"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://accountname.exavault.com/api/v2/users{?username,homeResource,nickname,email,role,status,search,offset,sort,limit,include}"
    },
    "headers": {
      "ev-api-key": {
        "$": "ev-api-key"
      },
      "ev-access-token": {
        "$": "ev-access-token"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**data**",
            "**included**",
            "**responseStatus**: Http status code of the response. ",
            "**returnedResults**: Number of results returned.",
            "**totalResults**: Total results found."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
