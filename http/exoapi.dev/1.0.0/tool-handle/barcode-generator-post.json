{
  "name": "barcode-generator-post",
  "description": "Generate high quality QR code & barcode images in a matter of seconds",
  "parameters": {
    "type": "object",
    "properties": {
      "body": {
        "properties": {
          "backgroundColor": {
            "default": "#ffffff",
            "description": "Image background color (hexadecimal format)",
            "type": "string"
          },
          "fitWidth": {
            "default": false,
            "description": "Stretch barcodes to exactly fit the `width`. Due to the nature of barcodes, where every bar's width is a multiple of the narrowest bar, stretching may result in slightly blurry images, which are more difficult for devices to scan.",
            "type": "boolean"
          },
          "foregroundColor": {
            "default": "#000000",
            "description": "Barcode color (hexadecimal format)",
            "type": "string"
          },
          "format": {
            "default": "png",
            "description": "Output image format",
            "enum": [
              "png",
              "svg"
            ],
            "type": "string"
          },
          "height": {
            "description": "Height of the PNG code image",
            "examples": [
              256
            ],
            "type": "integer"
          },
          "showText": {
            "default": true,
            "description": "Display human-readable text under barcodes",
            "type": "boolean"
          },
          "type": {
            "default": "qrcode",
            "description": "Type of code",
            "enum": [
              "auspost",
              "azteccode",
              "azteccodecompact",
              "aztecrune",
              "bc412",
              "channelcode",
              "codablockf",
              "code11",
              "code128",
              "code16k",
              "code2of5",
              "code32",
              "code39",
              "code39ext",
              "code49",
              "code93",
              "code93ext",
              "codeone",
              "coop2of5",
              "daft",
              "databarexpanded",
              "databarexpandedcomposite",
              "databarexpandedstacked",
              "databarexpandedstackedcomposite",
              "databarlimited",
              "databarlimitedcomposite",
              "databaromni",
              "databaromnicomposite",
              "databarstacked",
              "databarstackedcomposite",
              "databarstackedomni",
              "databarstackedomnicomposite",
              "databartruncated",
              "databartruncatedcomposite",
              "datalogic2of5",
              "datamatrix",
              "datamatrixrectangular",
              "datamatrixrectangularextension",
              "dotcode",
              "ean13",
              "ean13composite",
              "ean14",
              "ean2",
              "ean5",
              "ean8",
              "ean8composite",
              "flattermarken",
              "gs1-128",
              "gs1-128composite",
              "gs1-cc",
              "gs1datamatrix",
              "gs1datamatrixrectangular",
              "gs1northamericancoupon",
              "gs1qrcode",
              "hanxin",
              "hibcazteccode",
              "hibccodablockf",
              "hibccode128",
              "hibccode39",
              "hibcdatamatrix",
              "hibcdatamatrixrectangular",
              "hibcmicropdf417",
              "hibcpdf417",
              "hibcqrcode",
              "iata2of5",
              "identcode",
              "industrial2of5",
              "interleaved2of5",
              "isbn",
              "ismn",
              "issn",
              "itf14",
              "japanpost",
              "kix",
              "leitcode",
              "mailmark",
              "matrix2of5",
              "maxicode",
              "micropdf417",
              "microqrcode",
              "msi",
              "onecode",
              "pdf417",
              "pdf417compact",
              "pharmacode",
              "pharmacode2",
              "planet",
              "plessey",
              "posicode",
              "postnet",
              "pzn",
              "qrcode",
              "rationalizedCodabar",
              "raw",
              "royalmail",
              "sscc18",
              "symbol",
              "telepen",
              "telepennumeric",
              "ultracode",
              "upca",
              "upcacomposite",
              "upce",
              "upcecomposite"
            ],
            "examples": [
              "qrcode",
              "code128",
              "isbn"
            ],
            "type": "string"
          },
          "value": {
            "description": "Content to encode into the code",
            "examples": [
              "1234567890"
            ],
            "type": "string"
          },
          "width": {
            "default": 256,
            "description": "Width of the PNG code image",
            "examples": [
              256
            ],
            "type": "integer"
          }
        },
        "required": [
          "type",
          "value"
        ],
        "type": "object"
      }
    },
    "required": [
      "body"
    ]
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://api.exoapi.dev/barcode-generator"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Error description",
            "**status**: Status code",
            "**title**: Error type"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Error description",
            "**status**: Status code",
            "**title**: Error type"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "429": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Error description",
            "**status**: Status code",
            "**title**: Error type"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "500": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Error description",
            "**status**: Status code",
            "**title**: Error type"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
