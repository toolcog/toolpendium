{
  "name": "POST-video",
  "description": "To create a video, you create its container&parameters first, before adding the video file (exception - when using an existing HTTP source).\n* Videos are public by default. [Learn about Private videos](https://api.video/blog/tutorials/tutorial-private-videos)\n* Up to 6 responsive video streams will be created (from 240p to 4k)\n* Mp4 encoded versions are created at the highest quality (max 1080p) by default.\n* Panoramic videos are for videos recorded in 360 degrees.  You can toggle this after your 360 video upload.\n* Searchable parameters: title, description, tags and metadata\n\n ```shell\n$ curl https://ws.api.video/videos \\ -H 'Authorization: Bearer {access_token} \\ -d '{\"title\":\"My video\", \n     \"description\":\"so many details\",\n     \"mp4Support\":true\n}'\n```  \n\n## add an URL to upload on creation\nYou can also create a video directly from a video hosted on a third-party server by giving its URI in `source` parameter:\n```shell\n$ curl https://ws.api.video/videos \\\n-H 'Authorization: Bearer {access_token} \\\n-d '{\"source\":\"http://uri/to/video.mp4\", \"title\":\"My video\"}'\n```\n\nIn this case, the service will respond `202 Accepted` and ingest the video asynchronously.\n## Track users with Dynamic Metadata\nMetadata values can be a key:value where the values are predefined, but Dynamic metadata allows you to enter *any* value for a defined key.  To defined a dynamic metadata pair use:\n``` \"metadata\":[{\"dynamicKey\": \"__dynamicKey__\"}] ```\n\nThe double underscore on both sides of the value allows any variable to be added for a given video session. Added the the url you might have:\n``` <iframe type=\"text/html\" src=\"https://embed.api.video/vod/vi6QvU9dhYCzW3BpPvPsZUa8?metadata[classUserName]=Doug\" width=\"960\" height=\"320\" frameborder=\"0\" scrollling=\"no\"></iframe> ```\n\n\nThis video session will be tagged as watched by Doug - allowing for in-depth analysis on how each viewer interacts with the videos.\n### We have tutorials on:\n* [Creating and uploading videos](https://api.video/blog/tutorials/video-upload-tutorial)\n* [Uploading large videos](https://api.video/blog/tutorials/video-upload-tutorial-large-videos)\n\n\n* [Using tags with videos](https://api.video/blog/tutorials/video-tagging-best-practices)\n* [Private videos](https://api.video/blog/tutorials/tutorial-private-videos)\n* [Using Dynamic Metadata](https://api.video/blog/tutorials/dynamic-metadata)\n\n* Full list of [tutorials](https://api.video/blog/endpoints/video-create) that demonstrate this endpoint.\n",
  "parameters": {
    "type": "object",
    "properties": {
      "body": {
        "$ref": "#/components/schemas/video-create-payload",
        "description": "video to create"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://ws.api.video/videos"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "video"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**assets**: Collection of details about the video object that you can use to work with the video object.",
              {
                "$ul": [
                  "**hls**: This is the manifest URL. For HTTP Live Streaming (HLS), when a HLS video stream is initiated, the first file to download is the manifest. This file has the extension M3U8, and provides the video player with information about the various bitrates available for streaming.",
                  "**iframe**: Code to use video from a third party website",
                  "**mp4**: Available only if mp4Support is enabled. Raw mp4 url.",
                  "**player**: Raw url of the player.",
                  "**thumbnail**: Poster of the video."
                ]
              }
            ],
            "**description**: A description for the video content.",
            "**metadata**: Metadata you can use to categorise and filter videos. Metadata is a list of dictionaries, where each dictionary represents a key value pair for categorising a video. [Dynamic Metadata](https://api.video/blog/endpoints/dynamic-metadata) allows you to define a key that allows any value pair.",
            "**mp4Support**: This lets you know whether mp4 is supported. If enabled, an mp4 URL will be provided in the response for the video.",
            "**panoramic**: Defines if video is panoramic.",
            "**playerId**: The id of the player that will be applied on the video.",
            "**public**: Defines if the content is publicly reachable or if a unique token is needed for each play session. Default is true. Tutorials on [private videos](https://api.video/blog/endpoints/private-videos).",
            "**publishedAt**: The date and time the API created the video. Date and time are provided using ISO-8601 UTC format.",
            [
              "**source**: Source information about the video.",
              {
                "$ul": [
                  [
                    "**liveStream**: This appears if the video is from a Live Record.",
                    {
                      "$ul": [
                        "**links**",
                        "**liveStreamId**: The unique identifier for the live stream."
                      ]
                    }
                  ],
                  "**type**",
                  "**uri**: The URL where the video is stored."
                ]
              }
            ],
            "**tags**: One array of tags (each tag is a string) in order to categorize a video. Tags may include spaces. ",
            "**title**: The title of the video content.",
            "**updatedAt**: The date and time the video was updated. Date and time are provided using ISO-8601 UTC format.",
            "**videoId**: The unique identifier of the video object."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "202": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "video"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**assets**: Collection of details about the video object that you can use to work with the video object.",
              {
                "$ul": [
                  "**hls**: This is the manifest URL. For HTTP Live Streaming (HLS), when a HLS video stream is initiated, the first file to download is the manifest. This file has the extension M3U8, and provides the video player with information about the various bitrates available for streaming.",
                  "**iframe**: Code to use video from a third party website",
                  "**mp4**: Available only if mp4Support is enabled. Raw mp4 url.",
                  "**player**: Raw url of the player.",
                  "**thumbnail**: Poster of the video."
                ]
              }
            ],
            "**description**: A description for the video content.",
            "**metadata**: Metadata you can use to categorise and filter videos. Metadata is a list of dictionaries, where each dictionary represents a key value pair for categorising a video. [Dynamic Metadata](https://api.video/blog/endpoints/dynamic-metadata) allows you to define a key that allows any value pair.",
            "**mp4Support**: This lets you know whether mp4 is supported. If enabled, an mp4 URL will be provided in the response for the video.",
            "**panoramic**: Defines if video is panoramic.",
            "**playerId**: The id of the player that will be applied on the video.",
            "**public**: Defines if the content is publicly reachable or if a unique token is needed for each play session. Default is true. Tutorials on [private videos](https://api.video/blog/endpoints/private-videos).",
            "**publishedAt**: The date and time the API created the video. Date and time are provided using ISO-8601 UTC format.",
            [
              "**source**: Source information about the video.",
              {
                "$ul": [
                  [
                    "**liveStream**: This appears if the video is from a Live Record.",
                    {
                      "$ul": [
                        "**links**",
                        "**liveStreamId**: The unique identifier for the live stream."
                      ]
                    }
                  ],
                  "**type**",
                  "**uri**: The URL where the video is stored."
                ]
              }
            ],
            "**tags**: One array of tags (each tag is a string) in order to categorize a video. Tags may include spaces. ",
            "**title**: The title of the video content.",
            "**updatedAt**: The date and time the video was updated. Date and time are provided using ISO-8601 UTC format.",
            "**videoId**: The unique identifier of the video object."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "BadRequest"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**name**",
            "**problems**",
            "**status**",
            "**title**",
            "**type**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
