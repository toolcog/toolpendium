{
  "name": "POST_upload",
  "description": "When given a token, anyone can upload a file to the URI `https://ws.api.video/upload?token=<tokenId>`.\n\nExample with cURL:\n\n```curl\n$ curl  --request POST --url 'https://ws.api.video/upload?token=toXXX'\n --header 'content-type: multipart/form-data'\n -F file=@video.mp4\n```\n\nOr in an HTML form, with a little JavaScript to convert the form into JSON:\n```html\n<!--form for user interaction-->\n<form name=\"videoUploadForm\" >\n  <label for=video>Video:</label>\n  <input type=file name=source/><br/>\n  <input value=\"Submit\" type=\"submit\">\n</form>\n<div></div>\n<!--JS takes the form data \n    uses FormData to turn the response into JSON.\n    then uses POST to upload the video file.\n    Update the token parameter in the url to your upload token.\n    -->\n<script>\n   var form = document.forms.namedItem(\"videoUploadForm\");\t\n   form.addEventListener('submit', function(ev) {\n\t ev.preventDefault();\n     var oOutput = document.querySelector(\"div\"),\n         oData = new FormData(form);\n     var oReq = new XMLHttpRequest();\n\t \n     oReq.open(\"POST\", \"https://ws.api.video/upload?token=toXXX\", true);\n     oReq.send(oData);\n\t oReq.onload = function(oEvent) {\n       if (oReq.status ==201) {\n         oOutput.innerHTML = \"Your video is uploaded!<br/>\"  + oReq.response;\n       } else {\n         oOutput.innerHTML = \"Error \" + oReq.status + \" occurred when trying to upload your file.<br \\/>\";\n       }\n     };\n   }, false);\t\n</script>\n```\n\n\n### Dealing with large files\n\nWe have created a <a href='https://api.video/blog/tutorials/uploading-large-files-with-javascript'>tutorial</a> to walk through the steps required.",
  "parameters": {
    "type": "object",
    "properties": {
      "token": {
        "type": "string",
        "description": "The unique identifier for the token you want to use to upload a video."
      },
      "Content-Range": {
        "pattern": "^bytes [0-9]*-[0-9]*\\/[0-9]*$",
        "type": "string",
        "description": "Content-Range represents the range of bytes that will be returned as a result of the request. Byte ranges are inclusive, meaning that bytes 0-999 represents the first 1000 bytes in a file or object."
      },
      "body": {
        "$ref": "#/$defs/token-upload-payload"
      }
    },
    "required": [
      "token"
    ],
    "$defs": {
      "token-upload-payload": {
        "properties": {
          "file": {
            "description": "The path to the video you want to upload.",
            "example": "path/to/video/video.mp4",
            "format": "binary",
            "type": "string",
            "x-client-chunk-upload": "true"
          },
          "videoId": {
            "description": "The video id returned by the first call to this endpoint in a large video upload scenario.",
            "type": "string",
            "x-client-copy-from-response": true,
            "x-client-ignore": true
          }
        },
        "required": [
          "file"
        ],
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://ws.api.video/upload{?token}"
    },
    "headers": {
      "Content-Range": {
        "$": "Content-Range"
      }
    },
    "body": {
      "$": "body",
      "encode": "multipart"
    }
  },
  "responses": {
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "video"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**assets**: Collection of details about the video object that you can use to work with the video object.",
              {
                "$ul": [
                  "**hls**: This is the manifest URL. For HTTP Live Streaming (HLS), when a HLS video stream is initiated, the first file to download is the manifest. This file has the extension M3U8, and provides the video player with information about the various bitrates available for streaming.",
                  "**iframe**: Code to use video from a third party website",
                  "**mp4**: Available only if mp4Support is enabled. Raw mp4 url.",
                  "**player**: Raw url of the player.",
                  "**thumbnail**: Poster of the video."
                ]
              }
            ],
            "**description**: A description for the video content.",
            "**metadata**: Metadata you can use to categorise and filter videos. Metadata is a list of dictionaries, where each dictionary represents a key value pair for categorising a video. [Dynamic Metadata](https://api.video/blog/endpoints/dynamic-metadata) allows you to define a key that allows any value pair.",
            "**mp4Support**: This lets you know whether mp4 is supported. If enabled, an mp4 URL will be provided in the response for the video.",
            "**panoramic**: Defines if video is panoramic.",
            "**playerId**: The id of the player that will be applied on the video.",
            "**public**: Defines if the content is publicly reachable or if a unique token is needed for each play session. Default is true. Tutorials on [private videos](https://api.video/blog/endpoints/private-videos).",
            "**publishedAt**: The date and time the API created the video. Date and time are provided using ISO-8601 UTC format.",
            [
              "**source**: Source information about the video.",
              {
                "$ul": [
                  [
                    "**liveStream**: This appears if the video is from a Live Record.",
                    {
                      "$ul": [
                        "**links**",
                        "**liveStreamId**: The unique identifier for the live stream."
                      ]
                    }
                  ],
                  "**type**",
                  "**uri**: The URL where the video is stored."
                ]
              }
            ],
            "**tags**: One array of tags (each tag is a string) in order to categorize a video. Tags may include spaces. ",
            "**title**: The title of the video content.",
            "**updatedAt**: The date and time the video was updated. Date and time are provided using ISO-8601 UTC format.",
            "**videoId**: The unique identifier of the video object."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "BadRequest"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**name**",
            "**problems**",
            "**status**",
            "**title**",
            "**type**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
