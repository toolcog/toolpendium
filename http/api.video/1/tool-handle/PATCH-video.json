{
  "name": "PATCH-video",
  "description": "Use this endpoint to update the parameters associated with your video. The video you are updating is determined by the video ID you provide in the path. For each parameter you want to update, include the update in the request body. NOTE: If you are updating an array, you must provide the entire array as what you provide here overwrites what is in the system rather than appending to it. Tutorials using [video update](https://api.video/blog/endpoints/video-update).",
  "parameters": {
    "type": "object",
    "properties": {
      "videoId": {
        "type": "string",
        "description": "The video ID for the video you want to delete."
      },
      "body": {
        "$ref": "#/$defs/video-update-payload"
      }
    },
    "required": [
      "videoId"
    ],
    "$defs": {
      "video-update-payload": {
        "example": {
          "description": "An amazing video explaining the string theory",
          "metadata": [
            {
              "key": "Author",
              "value": "John Doe"
            },
            {
              "key": "Format",
              "value": "Tutorial"
            }
          ],
          "mp4Support": true,
          "panoramic": false,
          "playerId": "pl45KFKdlddgk654dspkze",
          "public": false,
          "tags": [
            "maths",
            "string theory",
            "video"
          ],
          "title": "String theory"
        },
        "properties": {
          "description": {
            "description": "A brief description of the video.",
            "example": "A film about good books.",
            "type": "string"
          },
          "metadata": {
            "description": "A list (array) of dictionaries where each dictionary contains a key value pair that describes the video. As with tags, you must send the complete list of metadata you want as whatever you send here will overwrite the existing metadata for the video. [Dynamic Metadata](https://api.video/blog/endpoints/dynamic-metadata) allows you to define a key that allows any value pair.",
            "items": {
              "$ref": "#/$defs/metadata"
            },
            "type": "array"
          },
          "mp4Support": {
            "description": "Whether the player supports the mp4 format.",
            "example": true,
            "type": "boolean"
          },
          "panoramic": {
            "description": "Whether the video is a 360 degree or immersive video.",
            "example": false,
            "type": "boolean"
          },
          "playerId": {
            "description": "The unique ID for the player you want to associate with your video.",
            "example": "pl4k0jvEUuaTdRAEjQ4Jfrgz",
            "type": "string"
          },
          "public": {
            "description": "Whether the video is publicly available or not. False means it is set to private. Default is true. Tutorials on [private videos](https://api.video/blog/endpoints/private-videos).",
            "example": true,
            "type": "boolean"
          },
          "tags": {
            "description": "A list of terms or words you want to tag the video with. Make sure the list includes all the tags you want as whatever you send in this list will overwrite the existing list for the video.",
            "example": "[\"maths\", \"string theory\", \"video\"]",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "title": {
            "description": "The title you want to use for your video.",
            "type": "string"
          }
        },
        "title": "videoUpdatePayload",
        "type": "object"
      },
      "metadata": {
        "properties": {
          "key": {
            "description": "The constant that defines the data set.",
            "example": "Color",
            "type": "string"
          },
          "value": {
            "description": "A variable which belongs to the data set.",
            "example": "Green",
            "type": "string"
          }
        },
        "title": "metadata",
        "type": "object",
        "x-client-all-args-constructor": true
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PATCH",
    "url": {
      "$uri": "https://ws.api.video/videos/{videoId}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "video"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**assets**: Collection of details about the video object that you can use to work with the video object.",
              {
                "$ul": [
                  "**hls**: This is the manifest URL. For HTTP Live Streaming (HLS), when a HLS video stream is initiated, the first file to download is the manifest. This file has the extension M3U8, and provides the video player with information about the various bitrates available for streaming.",
                  "**iframe**: Code to use video from a third party website",
                  "**mp4**: Available only if mp4Support is enabled. Raw mp4 url.",
                  "**player**: Raw url of the player.",
                  "**thumbnail**: Poster of the video."
                ]
              }
            ],
            "**description**: A description for the video content.",
            "**metadata**: Metadata you can use to categorise and filter videos. Metadata is a list of dictionaries, where each dictionary represents a key value pair for categorising a video. [Dynamic Metadata](https://api.video/blog/endpoints/dynamic-metadata) allows you to define a key that allows any value pair.",
            "**mp4Support**: This lets you know whether mp4 is supported. If enabled, an mp4 URL will be provided in the response for the video.",
            "**panoramic**: Defines if video is panoramic.",
            "**playerId**: The id of the player that will be applied on the video.",
            "**public**: Defines if the content is publicly reachable or if a unique token is needed for each play session. Default is true. Tutorials on [private videos](https://api.video/blog/endpoints/private-videos).",
            "**publishedAt**: The date and time the API created the video. Date and time are provided using ISO-8601 UTC format.",
            [
              "**source**: Source information about the video.",
              {
                "$ul": [
                  [
                    "**liveStream**: This appears if the video is from a Live Record.",
                    {
                      "$ul": [
                        "**links**",
                        "**liveStreamId**: The unique identifier for the live stream."
                      ]
                    }
                  ],
                  "**type**",
                  "**uri**: The URL where the video is stored."
                ]
              }
            ],
            "**tags**: One array of tags (each tag is a string) in order to categorize a video. Tags may include spaces. ",
            "**title**: The title of the video content.",
            "**updatedAt**: The date and time the video was updated. Date and time are provided using ISO-8601 UTC format.",
            "**videoId**: The unique identifier of the video object."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "BadRequest"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**name**",
            "**problems**",
            "**status**",
            "**title**",
            "**type**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "NotFound"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**name**",
            "**status**",
            "**title**",
            "**type**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
