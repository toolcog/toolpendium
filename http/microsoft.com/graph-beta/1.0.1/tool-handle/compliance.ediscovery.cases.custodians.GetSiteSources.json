{
  "name": "compliance_ediscovery_cases_custodians_GetSiteSources",
  "description": "Data source entity for SharePoint sites associated with the custodian.",
  "parameters": {
    "type": "object",
    "properties": {
      "$select": {
        "items": {
          "enum": [
            "id",
            "createdBy",
            "createdDateTime",
            "displayName",
            "holdStatus",
            "site"
          ],
          "type": "string"
        },
        "type": "array",
        "uniqueItems": true,
        "description": "Select properties to be returned"
      },
      "$expand": {
        "items": {
          "enum": [
            "*",
            "site"
          ],
          "type": "string"
        },
        "type": "array",
        "uniqueItems": true,
        "description": "Expand related entities"
      },
      "case-id": {
        "type": "string",
        "description": "key: id of case"
      },
      "custodian-id": {
        "type": "string",
        "description": "key: id of custodian"
      },
      "siteSource-id": {
        "type": "string",
        "description": "key: id of siteSource"
      }
    },
    "required": [
      "case-id",
      "custodian-id",
      "siteSource-id"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://graph.microsoft.com/beta/compliance/ediscovery/cases/{case-id}/custodians/{custodian-id}/siteSources/{siteSource-id}{?$select,$expand}"
    }
  },
  "responses": {
    "2XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "entity"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**@odata.type** (default: #microsoft.graph.ediscovery.siteSource)",
            "**id**: The unique identifier for an entity. Read-only.",
            "**createdBy**: The user who created the dataSource.",
            "**createdDateTime**: The date and time the dataSource was created.",
            "**displayName**: The display name of the dataSource. This will be the name of the SharePoint site.",
            "**holdStatus**",
            [
              "**site**",
              {
                "$ul": [
                  "**@odata.type** (default: #microsoft.graph.site)",
                  "**id**: The unique identifier for an entity. Read-only.",
                  "**createdBy**: Identity of the user, device, or application which created the item. Read-only.",
                  "**createdByUser**",
                  "**createdDateTime**: Date and time of item creation. Read-only.",
                  "**description**",
                  "**eTag**: ETag for the item. Read-only.",
                  "**lastModifiedBy**: Identity of the user, device, and application which last modified the item. Read-only.",
                  "**lastModifiedByUser**",
                  "**lastModifiedDateTime**: Date and time the item was last modified. Read-only.",
                  "**name**: The name of the item. Read-write.",
                  "**parentReference**: Parent information, if the item has a parent. Read-write.",
                  "**webUrl**: URL that displays the resource in the browser. Read-only.",
                  "**analytics**: Analytics about the view activities that took place in this site.",
                  "**columns**: The collection of column definitions reusable across lists under this site.",
                  "**contentTypes**: The collection of content types defined for this site.",
                  "**deleted**",
                  "**displayName**: The full title for the site. Read-only.",
                  "**drive**: The default drive (document library) for this site.",
                  "**drives**: The collection of drives (document libraries) under this site.",
                  "**externalColumns**: The collection of column definitions available in the site that are referenced from the sites in the parent hierarchy of the current site.",
                  "**informationProtection**",
                  "**items**: Used to address any item contained in this site. This collection cannot be enumerated.",
                  "**lists**: The collection of lists under this site.",
                  "**onenote**",
                  "**operations**: The collection of long running operations for the site.",
                  "**pages**: The collection of pages in the SitePages list in this site.",
                  "**permissions**: The permissions associated with the site. Nullable.",
                  "**root**: If present, indicates that this is the root site in the site collection. Read-only.",
                  "**settings**: The settings on this site. Read-only.",
                  "**sharepointIds**: Returns identifiers useful for SharePoint REST compatibility. Read-only.",
                  "**siteCollection**: Provides details about the site's site collection. Available only on the root site. Read-only.",
                  "**sites**: The collection of the sub-sites under this site.",
                  "**termStore**: The termStore under this site."
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "4XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**error**",
              {
                "$ul": [
                  "**code**",
                  "**details**",
                  [
                    "**innererror**",
                    {
                      "$ul": [
                        "**@odata.type**",
                        "**Date**: Date when the error occured.",
                        "**client-request-id**: Client request Id as sent by the client application.",
                        "**request-id**: Request Id as tracked internally by the service"
                      ]
                    }
                  ],
                  "**message**",
                  "**target**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "5XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**error**",
              {
                "$ul": [
                  "**code**",
                  "**details**",
                  [
                    "**innererror**",
                    {
                      "$ul": [
                        "**@odata.type**",
                        "**Date**: Date when the error occured.",
                        "**client-request-id**: Client request Id as sent by the client application.",
                        "**request-id**: Request Id as tracked internally by the service"
                      ]
                    }
                  ],
                  "**message**",
                  "**target**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
