{
  "name": "users_managedDevices_ListLogCollectionRequests",
  "description": "List of log collection requests",
  "parameters": {
    "type": "object",
    "properties": {
      "$top": {
        "minimum": 0,
        "type": "integer",
        "description": "Show only the first n items"
      },
      "$skip": {
        "minimum": 0,
        "type": "integer",
        "description": "Skip the first n items"
      },
      "$search": {
        "type": "string",
        "description": "Search items by search phrases"
      },
      "$filter": {
        "type": "string",
        "description": "Filter items by property values"
      },
      "$count": {
        "type": "boolean",
        "description": "Include count of items"
      },
      "$orderby": {
        "items": {
          "enum": [
            "id",
            "id desc",
            "enrolledByUser",
            "enrolledByUser desc",
            "errorCode",
            "errorCode desc",
            "expirationDateTimeUTC",
            "expirationDateTimeUTC desc",
            "initiatedByUserPrincipalName",
            "initiatedByUserPrincipalName desc",
            "managedDeviceId",
            "managedDeviceId desc",
            "receivedDateTimeUTC",
            "receivedDateTimeUTC desc",
            "requestedDateTimeUTC",
            "requestedDateTimeUTC desc",
            "size",
            "size desc",
            "status",
            "status desc"
          ],
          "type": "string"
        },
        "type": "array",
        "uniqueItems": true,
        "description": "Order items by property values"
      },
      "$select": {
        "items": {
          "enum": [
            "id",
            "enrolledByUser",
            "errorCode",
            "expirationDateTimeUTC",
            "initiatedByUserPrincipalName",
            "managedDeviceId",
            "receivedDateTimeUTC",
            "requestedDateTimeUTC",
            "size",
            "status"
          ],
          "type": "string"
        },
        "type": "array",
        "uniqueItems": true,
        "description": "Select properties to be returned"
      },
      "$expand": {
        "items": {
          "enum": [
            "*"
          ],
          "type": "string"
        },
        "type": "array",
        "uniqueItems": true,
        "description": "Expand related entities"
      },
      "user-id": {
        "type": "string",
        "description": "key: id of user"
      },
      "managedDevice-id": {
        "type": "string",
        "description": "key: id of managedDevice"
      }
    },
    "required": [
      "user-id",
      "managedDevice-id"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://graph.microsoft.com/beta/users/{user-id}/managedDevices/{managedDevice-id}/logCollectionRequests{?$top,$skip,$search,$filter,$count,$orderby,$select,$expand}"
    }
  },
  "responses": {
    "2XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Base collection pagination and count responses"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**@odata.count**",
            "**@odata.nextLink**",
            "**value**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "4XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**error**",
              {
                "$ul": [
                  "**code**",
                  "**details**",
                  [
                    "**innererror**",
                    {
                      "$ul": [
                        "**@odata.type**",
                        "**Date**: Date when the error occured.",
                        "**client-request-id**: Client request Id as sent by the client application.",
                        "**request-id**: Request Id as tracked internally by the service"
                      ]
                    }
                  ],
                  "**message**",
                  "**target**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "5XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**error**",
              {
                "$ul": [
                  "**code**",
                  "**details**",
                  [
                    "**innererror**",
                    {
                      "$ul": [
                        "**@odata.type**",
                        "**Date**: Date when the error occured.",
                        "**client-request-id**: Client request Id as sent by the client application.",
                        "**request-id**: Request Id as tracked internally by the service"
                      ]
                    }
                  ],
                  "**message**",
                  "**target**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
