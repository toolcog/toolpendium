{
  "name": "policies_GetDeviceRegistrationPolicy",
  "description": "Read the properties and relationships of a deviceRegistrationPolicy object. Represents deviceRegistrationPolicy quota restrictions, additional authentication, and authorization policies to register device identities to your organization.",
  "parameters": {
    "type": "object",
    "properties": {
      "$select": {
        "items": {
          "enum": [
            "id",
            "azureADJoin",
            "azureADRegistration",
            "description",
            "displayName",
            "multiFactorAuthConfiguration",
            "userDeviceQuota"
          ],
          "type": "string"
        },
        "type": "array",
        "uniqueItems": true,
        "description": "Select properties to be returned"
      },
      "$expand": {
        "items": {
          "enum": [
            "*"
          ],
          "type": "string"
        },
        "type": "array",
        "uniqueItems": true,
        "description": "Expand related entities"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://graph.microsoft.com/beta/policies/deviceRegistrationPolicy{?$select,$expand}"
    }
  },
  "responses": {
    "2XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "entity"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**@odata.type**",
            "**id**: The unique identifier for an entity. Read-only.",
            "**azureADJoin**: Specifies the authorization policy for controlling registration of new devices using Azure AD Join within your organization. Required. For more information, see What is a device identity?.",
            "**azureADRegistration**: Specifies the authorization policy for controlling registration of new devices using Azure AD registered within your organization. Required. For more information, see What is a device identity?.",
            "**description**: The description of the device registration policy. It is always set to Tenant-wide policy that manages intial provisioning controls using quota restrictions, additional authentication and authorization checks. Read-only.",
            "**displayName**: The name of the device registration policy. It is always set to Device Registration Policy. Read-only.",
            "**multiFactorAuthConfiguration**",
            "**userDeviceQuota**: Specifies the maximum number of devices that a user can have within your organization before blocking new device registrations. The default value is set to 50. If this property is not specified during the policy update operation, it is automatically reset to 0 to indicate that users are not allowed to join any devices."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "4XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**error**",
              {
                "$ul": [
                  "**code**",
                  "**details**",
                  [
                    "**innererror**",
                    {
                      "$ul": [
                        "**@odata.type**",
                        "**Date**: Date when the error occured.",
                        "**client-request-id**: Client request Id as sent by the client application.",
                        "**request-id**: Request Id as tracked internally by the service"
                      ]
                    }
                  ],
                  "**message**",
                  "**target**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "5XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**error**",
              {
                "$ul": [
                  "**code**",
                  "**details**",
                  [
                    "**innererror**",
                    {
                      "$ul": [
                        "**@odata.type**",
                        "**Date**: Date when the error occured.",
                        "**client-request-id**: Client request Id as sent by the client application.",
                        "**request-id**: Request Id as tracked internally by the service"
                      ]
                    }
                  ],
                  "**message**",
                  "**target**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
