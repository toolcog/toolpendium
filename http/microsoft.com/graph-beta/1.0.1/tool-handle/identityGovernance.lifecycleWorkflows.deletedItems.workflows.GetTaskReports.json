{
  "name": "identityGovernance_lifecycleWorkflows_deletedItems_workflows_GetTaskReports",
  "description": "Represents the aggregation of task execution data for tasks within a workflow object.",
  "parameters": {
    "type": "object",
    "properties": {
      "$select": {
        "items": {
          "enum": [
            "id",
            "completedDateTime",
            "failedUsersCount",
            "lastUpdatedDateTime",
            "processingStatus",
            "runId",
            "startedDateTime",
            "successfulUsersCount",
            "totalUsersCount",
            "unprocessedUsersCount",
            "task",
            "taskDefinition",
            "taskProcessingResults"
          ],
          "type": "string"
        },
        "type": "array",
        "uniqueItems": true,
        "description": "Select properties to be returned"
      },
      "$expand": {
        "items": {
          "enum": [
            "*",
            "task",
            "taskDefinition",
            "taskProcessingResults"
          ],
          "type": "string"
        },
        "type": "array",
        "uniqueItems": true,
        "description": "Expand related entities"
      },
      "workflow-id": {
        "type": "string",
        "description": "key: id of workflow"
      },
      "taskReport-id": {
        "type": "string",
        "description": "key: id of taskReport"
      }
    },
    "required": [
      "workflow-id",
      "taskReport-id"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://graph.microsoft.com/beta/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/taskReports/{taskReport-id}{?$select,$expand}"
    }
  },
  "responses": {
    "2XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "entity"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**@odata.type**",
            "**id**: The unique identifier for an entity. Read-only.",
            "**completedDateTime**: The date time that the associated run completed. Value is null if the run has not completed.Supports $filter(lt, le, gt, ge, eq, ne) and $orderby.",
            "**failedUsersCount**: The number of users in the run execution for which the associated task failed.Supports $filter(lt, le, gt, ge, eq, ne) and $orderby.",
            "**lastUpdatedDateTime**: The date and time that the task report was last updated.",
            "**processingStatus**",
            "**runId**: The unique identifier of the associated run.",
            "**startedDateTime**: The date time that the associated run started. Value is null if the run has not started.",
            "**successfulUsersCount**: The number of users in the run execution for which the associated task succeeded.Supports $filter(lt, le, gt, ge, eq, ne) and $orderby.",
            [
              "**task**",
              {
                "$ul": [
                  "**@odata.type**",
                  "**id**: The unique identifier for an entity. Read-only.",
                  "**arguments**: Arguments included within the task.  For guidance to configure this property, see Configure the arguments for built-in Lifecycle Workflow tasks. Required.",
                  "**category**",
                  "**continueOnError**: A boolean value that specifies whether, if this task fails, the workflow will stop, and subsequent tasks will not run. Optional.",
                  "**description**: A string that describes the purpose of the task for administrative use. Optional.",
                  "**displayName**: A unique string that identifies the task. Required.Supports $filter(eq, ne) and orderBy.",
                  "**executionSequence**: An integer that states in what order the task will run in a workflow.Supports $orderby.",
                  "**isEnabled**: A boolean value that denotes whether the task is set to run or not. Optional.Supports $filter(eq, ne) and orderBy.",
                  "**taskDefinitionId**: A unique template identifier for the task. For more information about the tasks that Lifecycle Workflows currently supports and their unique identifiers, see supported tasks. Required.Supports $filter(eq, ne).",
                  "**taskProcessingResults**: The result of processing the task."
                ]
              }
            ],
            [
              "**taskDefinition**",
              {
                "$ul": [
                  "**@odata.type**",
                  "**id**: The unique identifier for an entity. Read-only.",
                  "**category**",
                  "**continueOnError**",
                  "**description**: The description of the taskDefinition.",
                  "**displayName**: The display name of the taskDefinition.Supports $filter(eq, ne) and $orderby.",
                  "**parameters**: The parameters that must be supplied when creating a workflow task object.Supports $filter(any).",
                  "**version**: The version number of the taskDefinition. New records are pushed when we add support for new parameters.Supports $filter(ge, gt, le, lt, eq, ne) and $orderby."
                ]
              }
            ],
            "**taskProcessingResults**: The related lifecycle workflow taskProcessingResults.",
            "**totalUsersCount**: The total number of users in the run execution for which the associated task was scheduled to execute.Supports $filter(lt, le, gt, ge, eq, ne) and $orderby.",
            "**unprocessedUsersCount**: The number of users in the run execution for which the associated task is queued, in progress, or canceled.Supports $filter(lt, le, gt, ge, eq, ne) and $orderby."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "4XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**error**",
              {
                "$ul": [
                  "**code**",
                  "**details**",
                  [
                    "**innererror**",
                    {
                      "$ul": [
                        "**@odata.type**",
                        "**Date**: Date when the error occured.",
                        "**client-request-id**: Client request Id as sent by the client application.",
                        "**request-id**: Request Id as tracked internally by the service"
                      ]
                    }
                  ],
                  "**message**",
                  "**target**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "5XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**error**",
              {
                "$ul": [
                  "**code**",
                  "**details**",
                  [
                    "**innererror**",
                    {
                      "$ul": [
                        "**@odata.type**",
                        "**Date**: Date when the error occured.",
                        "**client-request-id**: Client request Id as sent by the client application.",
                        "**request-id**: Request Id as tracked internally by the service"
                      ]
                    }
                  ],
                  "**message**",
                  "**target**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
