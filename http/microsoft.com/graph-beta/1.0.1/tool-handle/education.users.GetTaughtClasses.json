{
  "name": "education_users_GetTaughtClasses",
  "description": "Classes for which the user is a teacher.",
  "parameters": {
    "type": "object",
    "properties": {
      "$select": {
        "items": {
          "enum": [
            "id",
            "classCode",
            "course",
            "createdBy",
            "description",
            "displayName",
            "externalId",
            "externalName",
            "externalSource",
            "externalSourceDetail",
            "grade",
            "mailNickname",
            "term",
            "assignmentCategories",
            "assignmentDefaults",
            "assignments",
            "assignmentSettings",
            "group",
            "members",
            "schools",
            "teachers"
          ],
          "type": "string"
        },
        "type": "array",
        "uniqueItems": true,
        "description": "Select properties to be returned"
      },
      "$expand": {
        "items": {
          "enum": [
            "*",
            "assignmentCategories",
            "assignmentDefaults",
            "assignments",
            "assignmentSettings",
            "group",
            "members",
            "schools",
            "teachers"
          ],
          "type": "string"
        },
        "type": "array",
        "uniqueItems": true,
        "description": "Expand related entities"
      },
      "educationUser-id": {
        "type": "string",
        "description": "key: id of educationUser"
      },
      "educationClass-id": {
        "type": "string",
        "description": "key: id of educationClass"
      }
    },
    "required": [
      "educationUser-id",
      "educationClass-id"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://graph.microsoft.com/beta/education/users/{educationUser-id}/taughtClasses/{educationClass-id}{?$select,$expand}"
    }
  },
  "responses": {
    "2XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "entity"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**@odata.type**",
            "**id**: The unique identifier for an entity. Read-only.",
            "**assignmentCategories**: All categories associated with this class. Nullable.",
            "**assignmentDefaults**: Specifies class-level defaults respected by new assignments created in the class.",
            "**assignmentSettings**: Specifies class-level assignments settings.",
            "**assignments**: All assignments associated with this class. Nullable.",
            "**classCode**: Class code used by the school to identify the class.",
            "**course**: Course information for the class.",
            "**createdBy**: Entity who created the class.",
            "**description**: Description of the class.",
            "**displayName**: Name of the class.",
            "**externalId**: ID of the class from the syncing system.",
            "**externalName**: Name of the class in the syncing system.",
            "**externalSource**: The type of external source this resource was generated from (automatically determined from externalSourceDetail). Possible values are: sis, lms, or manual.",
            "**externalSourceDetail**: The name of the external source this resources was generated from.",
            "**grade**: Grade level of the class.",
            "**group**",
            "**mailNickname**: Mail name for sending email to all members, if this is enabled.",
            "**members**: All users in the class. Nullable.",
            "**schools**: All schools that this class is associated with. Nullable.",
            "**teachers**: All teachers in the class. Nullable.",
            "**term**: Term for the class."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "4XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**error**",
              {
                "$ul": [
                  "**code**",
                  "**details**",
                  [
                    "**innererror**",
                    {
                      "$ul": [
                        "**@odata.type**",
                        "**Date**: Date when the error occured.",
                        "**client-request-id**: Client request Id as sent by the client application.",
                        "**request-id**: Request Id as tracked internally by the service"
                      ]
                    }
                  ],
                  "**message**",
                  "**target**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "5XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**error**",
              {
                "$ul": [
                  "**code**",
                  "**details**",
                  [
                    "**innererror**",
                    {
                      "$ul": [
                        "**@odata.type**",
                        "**Date**: Date when the error occured.",
                        "**client-request-id**: Client request Id as sent by the client application.",
                        "**request-id**: Request Id as tracked internally by the service"
                      ]
                    }
                  ],
                  "**message**",
                  "**target**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
