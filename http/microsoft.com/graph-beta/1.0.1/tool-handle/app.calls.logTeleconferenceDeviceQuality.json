{
  "name": "app_calls_logTeleconferenceDeviceQuality",
  "description": "Log video teleconferencing device quality data. The Cloud Video Interop (CVI) bot represents video teleconferencing (VTC) devices and acts as a back-to-back agent for a VTC device in a conference call. Because a CVI bot is in the middle of the VTC and Microsoft Teams infrastructure as a VTC proxy, it has two media legs. One media leg is between the CVI bot and Teams infrastructure, such as Teams conference server or a Teams client. The other media leg is between the CVI bot and the VTC device.  The third-party partners own the VTC media leg and the Teams infrastructure cannot access the quality data of the third-party call leg.  This method is only for the CVI partners to provide their media quality data.",
  "parameters": {
    "type": "object",
    "properties": {
      "body": {
        "properties": {
          "quality": {
            "$ref": "#/$defs/microsoft.graph.teleconferenceDeviceQuality"
          }
        },
        "type": "object",
        "description": "Action parameters"
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "microsoft.graph.teleconferenceDeviceQuality": {
        "properties": {
          "@odata.type": {
            "type": "string"
          },
          "callChainId": {
            "description": "A unique identifier for all  the participant calls in a conference or a unique identifier for two participant calls in P2P call. This needs to be copied over from Microsoft.Graph.Call.CallChainId.",
            "format": "uuid",
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string"
          },
          "cloudServiceDeploymentEnvironment": {
            "description": "A geo-region where the service is deployed, such as ProdNoam.",
            "nullable": true,
            "type": "string"
          },
          "cloudServiceDeploymentId": {
            "description": "A unique deployment identifier assigned by Azure.",
            "nullable": true,
            "type": "string"
          },
          "cloudServiceInstanceName": {
            "description": "The Azure deployed cloud service instance name, such as FrontEnd_IN_3.",
            "nullable": true,
            "type": "string"
          },
          "cloudServiceName": {
            "description": "The Azure deployed cloud service name, such as contoso.cloudapp.net.",
            "nullable": true,
            "type": "string"
          },
          "deviceDescription": {
            "description": "Any additional description, such as VTC Bldg 30/21.",
            "type": "string"
          },
          "deviceName": {
            "description": "The user media agent name, such as Cisco SX80.",
            "type": "string"
          },
          "mediaLegId": {
            "description": "A unique identifier for a specific media leg of a participant in a conference.  One participant can have multiple media leg identifiers if retargeting happens. CVI partner assigns this value.",
            "format": "uuid",
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string"
          },
          "mediaQualityList": {
            "description": "The list of media qualities in a media session (call), such as audio quality, video quality, and/or screen sharing quality.",
            "items": {
              "$ref": "#/$defs/microsoft.graph.teleconferenceDeviceMediaQuality"
            },
            "type": "array"
          },
          "participantId": {
            "description": "A unique identifier for a specific participant in a conference. The CVI partner needs to copy over Call.MyParticipantId to this property.",
            "format": "uuid",
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string"
          }
        },
        "required": [
          "@odata.type"
        ],
        "title": "teleconferenceDeviceQuality",
        "type": "object"
      },
      "microsoft.graph.teleconferenceDeviceMediaQuality": {
        "discriminator": {
          "mapping": {
            "#microsoft.graph.teleconferenceDeviceAudioQuality": "#/components/schemas/microsoft.graph.teleconferenceDeviceAudioQuality",
            "#microsoft.graph.teleconferenceDeviceScreenSharingQuality": "#/components/schemas/microsoft.graph.teleconferenceDeviceScreenSharingQuality",
            "#microsoft.graph.teleconferenceDeviceVideoQuality": "#/components/schemas/microsoft.graph.teleconferenceDeviceVideoQuality"
          },
          "propertyName": "@odata.type"
        },
        "properties": {
          "@odata.type": {
            "type": "string"
          },
          "averageInboundJitter": {
            "description": "The average inbound stream network jitter.",
            "format": "duration",
            "nullable": true,
            "pattern": "^-?P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+([.][0-9]+)?S)?)?$",
            "type": "string"
          },
          "averageInboundPacketLossRateInPercentage": {
            "description": "The average inbound stream packet loss rate in percentage (0-100). For example, 0.01 means 0.01%.",
            "nullable": true,
            "oneOf": [
              {
                "format": "double",
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "$ref": "#/$defs/ReferenceNumeric"
              }
            ]
          },
          "averageInboundRoundTripDelay": {
            "description": "The average inbound stream network round trip delay.",
            "format": "duration",
            "nullable": true,
            "pattern": "^-?P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+([.][0-9]+)?S)?)?$",
            "type": "string"
          },
          "averageOutboundJitter": {
            "description": "The average outbound stream network jitter.",
            "format": "duration",
            "nullable": true,
            "pattern": "^-?P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+([.][0-9]+)?S)?)?$",
            "type": "string"
          },
          "averageOutboundPacketLossRateInPercentage": {
            "description": "The average outbound stream packet loss rate in percentage (0-100). For example, 0.01 means 0.01%.",
            "nullable": true,
            "oneOf": [
              {
                "format": "double",
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "$ref": "#/$defs/ReferenceNumeric"
              }
            ]
          },
          "averageOutboundRoundTripDelay": {
            "description": "The average outbound stream network round trip delay.",
            "format": "duration",
            "nullable": true,
            "pattern": "^-?P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+([.][0-9]+)?S)?)?$",
            "type": "string"
          },
          "channelIndex": {
            "description": "The channel index of media. Indexing begins with 1.  If a media session contains 3 video modalities, channel indexes will be 1, 2, and 3.",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer"
          },
          "inboundPackets": {
            "description": "The total number of the inbound packets.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "localIPAddress": {
            "description": "the local IP address for the media session.",
            "nullable": true,
            "type": "string"
          },
          "localPort": {
            "description": "The local media port.",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "nullable": true,
            "type": "integer"
          },
          "maximumInboundJitter": {
            "description": "The maximum inbound stream network jitter.",
            "format": "duration",
            "nullable": true,
            "pattern": "^-?P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+([.][0-9]+)?S)?)?$",
            "type": "string"
          },
          "maximumInboundPacketLossRateInPercentage": {
            "description": "The maximum inbound stream packet loss rate in percentage (0-100). For example, 0.01 means 0.01%.",
            "nullable": true,
            "oneOf": [
              {
                "format": "double",
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "$ref": "#/$defs/ReferenceNumeric"
              }
            ]
          },
          "maximumInboundRoundTripDelay": {
            "description": "The maximum inbound stream network round trip delay.",
            "format": "duration",
            "nullable": true,
            "pattern": "^-?P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+([.][0-9]+)?S)?)?$",
            "type": "string"
          },
          "maximumOutboundJitter": {
            "description": "The maximum outbound stream network jitter.",
            "format": "duration",
            "nullable": true,
            "pattern": "^-?P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+([.][0-9]+)?S)?)?$",
            "type": "string"
          },
          "maximumOutboundPacketLossRateInPercentage": {
            "description": "The maximum outbound stream packet loss rate in percentage (0-100). For example, 0.01 means 0.01%.",
            "nullable": true,
            "oneOf": [
              {
                "format": "double",
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "$ref": "#/$defs/ReferenceNumeric"
              }
            ]
          },
          "maximumOutboundRoundTripDelay": {
            "description": "The maximum outbound stream network round trip delay.",
            "format": "duration",
            "nullable": true,
            "pattern": "^-?P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+([.][0-9]+)?S)?)?$",
            "type": "string"
          },
          "mediaDuration": {
            "description": "The total modality duration. If the media enabled and disabled multiple times, MediaDuration will the summation of all of the durations.",
            "format": "duration",
            "nullable": true,
            "pattern": "^-?P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+([.][0-9]+)?S)?)?$",
            "type": "string"
          },
          "networkLinkSpeedInBytes": {
            "description": "The network link speed in bytes",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "outboundPackets": {
            "description": "The total number of the outbound packets.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "remoteIPAddress": {
            "description": "The remote IP address for the media session.",
            "nullable": true,
            "type": "string"
          },
          "remotePort": {
            "description": "The remote media port.",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "@odata.type"
        ],
        "title": "teleconferenceDeviceMediaQuality",
        "type": "object"
      },
      "ReferenceNumeric": {
        "enum": [
          "-INF",
          "INF",
          "NaN"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://graph.microsoft.com/beta/app/calls/microsoft.graph.logTeleconferenceDeviceQuality"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "4XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**error**",
              {
                "$ul": [
                  "**code**",
                  "**details**",
                  [
                    "**innererror**",
                    {
                      "$ul": [
                        "**@odata.type**",
                        "**Date**: Date when the error occured.",
                        "**client-request-id**: Client request Id as sent by the client application.",
                        "**request-id**: Request Id as tracked internally by the service"
                      ]
                    }
                  ],
                  "**message**",
                  "**target**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "5XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**error**",
              {
                "$ul": [
                  "**code**",
                  "**details**",
                  [
                    "**innererror**",
                    {
                      "$ul": [
                        "**@odata.type**",
                        "**Date**: Date when the error occured.",
                        "**client-request-id**: Client request Id as sent by the client application.",
                        "**request-id**: Request Id as tracked internally by the service"
                      ]
                    }
                  ],
                  "**message**",
                  "**target**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
