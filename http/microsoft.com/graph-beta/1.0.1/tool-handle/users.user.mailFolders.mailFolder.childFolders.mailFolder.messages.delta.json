{
  "name": "users_user_mailFolders_mailFolder_childFolders_mailFolder_messages_delta",
  "description": "Get a set of messages that have been added, deleted, or updated in a specified folder. A **delta** function call for messages in a folder is similar to a GET request, except that by appropriately \napplying state tokens in one or more of these calls, you can [query for incremental changes in the messages in \nthat folder](/graph/delta-query-messages). This allows you to maintain and synchronize a local store of a user's messages without \nhaving to fetch the entire set of messages from the server every time.  ",
  "parameters": {
    "type": "object",
    "properties": {
      "$top": {
        "minimum": 0,
        "type": "integer",
        "description": "Show only the first n items"
      },
      "$skip": {
        "minimum": 0,
        "type": "integer",
        "description": "Skip the first n items"
      },
      "$search": {
        "type": "string",
        "description": "Search items by search phrases"
      },
      "$filter": {
        "type": "string",
        "description": "Filter items by property values"
      },
      "$count": {
        "type": "boolean",
        "description": "Include count of items"
      },
      "$select": {
        "items": {
          "enum": [
            "id",
            "categories",
            "changeKey",
            "createdDateTime",
            "lastModifiedDateTime",
            "bccRecipients",
            "body",
            "bodyPreview",
            "ccRecipients",
            "conversationId",
            "conversationIndex",
            "flag",
            "from",
            "hasAttachments",
            "importance",
            "inferenceClassification",
            "internetMessageHeaders",
            "internetMessageId",
            "isDeliveryReceiptRequested",
            "isDraft",
            "isRead",
            "isReadReceiptRequested",
            "mentionsPreview",
            "parentFolderId",
            "receivedDateTime",
            "replyTo",
            "sender",
            "sentDateTime",
            "subject",
            "toRecipients",
            "uniqueBody",
            "unsubscribeData",
            "unsubscribeEnabled",
            "webLink",
            "attachments",
            "extensions",
            "mentions",
            "multiValueExtendedProperties",
            "singleValueExtendedProperties"
          ],
          "type": "string"
        },
        "type": "array",
        "uniqueItems": true,
        "description": "Select properties to be returned"
      },
      "$orderby": {
        "items": {
          "enum": [
            "id",
            "id desc",
            "categories",
            "categories desc",
            "changeKey",
            "changeKey desc",
            "createdDateTime",
            "createdDateTime desc",
            "lastModifiedDateTime",
            "lastModifiedDateTime desc",
            "bccRecipients",
            "bccRecipients desc",
            "body",
            "body desc",
            "bodyPreview",
            "bodyPreview desc",
            "ccRecipients",
            "ccRecipients desc",
            "conversationId",
            "conversationId desc",
            "conversationIndex",
            "conversationIndex desc",
            "flag",
            "flag desc",
            "from",
            "from desc",
            "hasAttachments",
            "hasAttachments desc",
            "importance",
            "importance desc",
            "inferenceClassification",
            "inferenceClassification desc",
            "internetMessageHeaders",
            "internetMessageHeaders desc",
            "internetMessageId",
            "internetMessageId desc",
            "isDeliveryReceiptRequested",
            "isDeliveryReceiptRequested desc",
            "isDraft",
            "isDraft desc",
            "isRead",
            "isRead desc",
            "isReadReceiptRequested",
            "isReadReceiptRequested desc",
            "mentionsPreview",
            "mentionsPreview desc",
            "parentFolderId",
            "parentFolderId desc",
            "receivedDateTime",
            "receivedDateTime desc",
            "replyTo",
            "replyTo desc",
            "sender",
            "sender desc",
            "sentDateTime",
            "sentDateTime desc",
            "subject",
            "subject desc",
            "toRecipients",
            "toRecipients desc",
            "uniqueBody",
            "uniqueBody desc",
            "unsubscribeData",
            "unsubscribeData desc",
            "unsubscribeEnabled",
            "unsubscribeEnabled desc",
            "webLink",
            "webLink desc"
          ],
          "type": "string"
        },
        "type": "array",
        "uniqueItems": true,
        "description": "Order items by property values"
      },
      "user-id": {
        "type": "string",
        "description": "key: id of user"
      },
      "mailFolder-id": {
        "type": "string",
        "description": "key: id of mailFolder"
      },
      "mailFolder-id1": {
        "type": "string",
        "description": "key: id of mailFolder"
      }
    },
    "required": [
      "user-id",
      "mailFolder-id",
      "mailFolder-id1"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://graph.microsoft.com/beta/users/{user-id}/mailFolders/{mailFolder-id}/childFolders/{mailFolder-id1}/messages/microsoft.graph.delta(){?$top,$skip,$search,$filter,$count,$select,$orderby}"
    }
  },
  "responses": {
    "2XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Base delta function response"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**@odata.deltaLink**",
            "**@odata.nextLink**",
            "**value**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "4XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**error**",
              {
                "$ul": [
                  "**code**",
                  "**details**",
                  [
                    "**innererror**",
                    {
                      "$ul": [
                        "**@odata.type**",
                        "**Date**: Date when the error occured.",
                        "**client-request-id**: Client request Id as sent by the client application.",
                        "**request-id**: Request Id as tracked internally by the service"
                      ]
                    }
                  ],
                  "**message**",
                  "**target**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "5XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**error**",
              {
                "$ul": [
                  "**code**",
                  "**details**",
                  [
                    "**innererror**",
                    {
                      "$ul": [
                        "**@odata.type**",
                        "**Date**: Date when the error occured.",
                        "**client-request-id**: Client request Id as sent by the client application.",
                        "**request-id**: Request Id as tracked internally by the service"
                      ]
                    }
                  ],
                  "**message**",
                  "**target**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
