{
  "name": "identityGovernance_lifecycleWorkflows_deletedItems_workflows_GetVersions",
  "description": "The workflow versions that are available.",
  "parameters": {
    "type": "object",
    "properties": {
      "$select": {
        "items": {
          "enum": [
            "category",
            "createdDateTime",
            "description",
            "displayName",
            "executionConditions",
            "isEnabled",
            "isSchedulingEnabled",
            "lastModifiedDateTime",
            "versionNumber",
            "createdBy",
            "lastModifiedBy",
            "tasks"
          ],
          "type": "string"
        },
        "type": "array",
        "uniqueItems": true,
        "description": "Select properties to be returned"
      },
      "$expand": {
        "items": {
          "enum": [
            "*",
            "createdBy",
            "lastModifiedBy",
            "tasks"
          ],
          "type": "string"
        },
        "type": "array",
        "uniqueItems": true,
        "description": "Expand related entities"
      },
      "workflow-id": {
        "type": "string",
        "description": "key: id of workflow"
      },
      "workflowVersion-versionNumber": {
        "format": "int32",
        "maximum": 2147483647,
        "minimum": -2147483648,
        "type": "integer",
        "description": "key: versionNumber of workflowVersion"
      }
    },
    "required": [
      "workflow-id",
      "workflowVersion-versionNumber"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://graph.microsoft.com/beta/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/versions/{workflowVersion-versionNumber}{?$select,$expand}"
    }
  },
  "responses": {
    "2XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "workflowBase"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**@odata.type** (default: #microsoft.graph.identityGovernance.workflowVersion)",
            "**category**",
            "**createdBy**: The user who created the workflow.",
            "**createdDateTime**: When a workflow was created.",
            "**description**: A string that describes the purpose of the workflow.",
            "**displayName**: A string to identify the workflow.",
            "**executionConditions**: Defines when and for who the workflow will run.",
            "**isEnabled**: Whether the workflow is enabled or disabled. If this setting is true, the workflow can be run on demand or on schedule when isSchedulingEnabled is true.",
            "**isSchedulingEnabled**: If true, the Lifecycle Workflow engine executes the workflow based on the schedule defined by tenant settings. Cannot be true for a disabled workflow (where isEnabled is false).",
            "**lastModifiedBy**: The user who last modified the workflow.",
            "**lastModifiedDateTime**: When the workflow was last modified.",
            "**tasks**: The tasks in the workflow.",
            "**versionNumber**: The version of the workflow.Supports $filter(lt, le, gt, ge, eq, ne) and $orderby."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "4XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**error**",
              {
                "$ul": [
                  "**code**",
                  "**details**",
                  [
                    "**innererror**",
                    {
                      "$ul": [
                        "**@odata.type**",
                        "**Date**: Date when the error occured.",
                        "**client-request-id**: Client request Id as sent by the client application.",
                        "**request-id**: Request Id as tracked internally by the service"
                      ]
                    }
                  ],
                  "**message**",
                  "**target**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "5XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**error**",
              {
                "$ul": [
                  "**code**",
                  "**details**",
                  [
                    "**innererror**",
                    {
                      "$ul": [
                        "**@odata.type**",
                        "**Date**: Date when the error occured.",
                        "**client-request-id**: Client request Id as sent by the client application.",
                        "**request-id**: Request Id as tracked internally by the service"
                      ]
                    }
                  ],
                  "**message**",
                  "**target**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
