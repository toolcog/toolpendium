{
  "name": "security_GetSecurityActions",
  "description": "Get securityActions from security",
  "parameters": {
    "type": "object",
    "properties": {
      "$select": {
        "items": {
          "enum": [
            "id",
            "actionReason",
            "appId",
            "azureTenantId",
            "clientContext",
            "completedDateTime",
            "createdDateTime",
            "errorInfo",
            "lastActionDateTime",
            "name",
            "parameters",
            "states",
            "status",
            "user",
            "vendorInformation"
          ],
          "type": "string"
        },
        "type": "array",
        "uniqueItems": true,
        "description": "Select properties to be returned"
      },
      "$expand": {
        "items": {
          "enum": [
            "*"
          ],
          "type": "string"
        },
        "type": "array",
        "uniqueItems": true,
        "description": "Expand related entities"
      },
      "securityAction-id": {
        "type": "string",
        "description": "key: id of securityAction"
      }
    },
    "required": [
      "securityAction-id"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://graph.microsoft.com/beta/security/securityActions/{securityAction-id}{?$select,$expand}"
    }
  },
  "responses": {
    "2XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "entity"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**@odata.type**",
            "**id**: The unique identifier for an entity. Read-only.",
            "**actionReason**: Reason for invoking this action.",
            "**appId**: The Application ID of the calling application that submitted (POST) the action. The appId should be extracted from the auth token and not entered manually by the calling application.",
            "**azureTenantId**: Azure tenant ID of the entity to determine which tenant the entity belongs to (multi-tenancy support). The azureTenantId should be extracted from the auth token and not entered manually by the calling application.",
            "**clientContext**",
            "**completedDateTime**: Timestamp when the action was completed. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.",
            "**createdDateTime**: Timestamp when the action is created. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.",
            "**errorInfo**: Error info when the action fails.",
            "**lastActionDateTime**: Timestamp when this action was last updated. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.",
            "**name**: Action name.",
            "**parameters**: Collection of parameters (key-value pairs) necessary to invoke the action, for example, URL or fileHash to block.). Required.",
            "**states**: Collection of securityActionState to keep the history of an action.",
            "**status**: Status of the action. Possible values are: NotStarted, Running, Completed, Failed.",
            "**user**: The user principal name of the signed-in user that submitted  (POST) the action. The user should be extracted from the auth token and not entered manually by the calling application.",
            "**vendorInformation**: Complex Type containing details about the Security product/service vendor, provider, and sub-provider (for example, vendor=Microsoft; provider=Windows Defender ATP; sub-provider=AppLocker)."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "4XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**error**",
              {
                "$ul": [
                  "**code**",
                  "**details**",
                  [
                    "**innererror**",
                    {
                      "$ul": [
                        "**@odata.type**",
                        "**Date**: Date when the error occured.",
                        "**client-request-id**: Client request Id as sent by the client application.",
                        "**request-id**: Request Id as tracked internally by the service"
                      ]
                    }
                  ],
                  "**message**",
                  "**target**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "5XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**error**",
              {
                "$ul": [
                  "**code**",
                  "**details**",
                  [
                    "**innererror**",
                    {
                      "$ul": [
                        "**@odata.type**",
                        "**Date**: Date when the error occured.",
                        "**client-request-id**: Client request Id as sent by the client application.",
                        "**request-id**: Request Id as tracked internally by the service"
                      ]
                    }
                  ],
                  "**message**",
                  "**target**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
