{
  "name": "policies_policyRoot_UpdatePolicyRoot",
  "description": "Update policies",
  "parameters": {
    "type": "object",
    "properties": {
      "body": {
        "$ref": "#/components/schemas/microsoft.graph.policyRoot",
        "description": "New property values"
      }
    },
    "required": [
      "body"
    ]
  },
  "handler": "http",
  "request": {
    "method": "PATCH",
    "url": {
      "$uri": "https://graph.microsoft.com/beta/policies"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "2XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "policyRoot"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**@odata.type**",
            "**accessReviewPolicy**: The policy that contains directory-level access review settings.",
            "**activityBasedTimeoutPolicies**: The policy that controls the idle time out for web sessions for applications.",
            "**adminConsentRequestPolicy**: The policy by which consent requests are created and managed for the entire tenant.",
            "**appManagementPolicies**: The policies that enforce app management restrictions for specific applications and service principals, overriding the defaultAppManagementPolicy.",
            "**authenticationFlowsPolicy**: The policy configuration of the self-service sign-up experience of external users.",
            "**authenticationMethodsPolicy**: The authentication methods and the users that are allowed to use them to sign in and perform multi-factor authentication (MFA) in Azure Active Directory (Azure AD).",
            "**authenticationStrengthPolicies**: The authentication method combinations that are to be used in scenarios defined by Azure AD Conditional Access.",
            "**authorizationPolicy**: The policy that controls Azure AD authorization settings.",
            "**b2cAuthenticationMethodsPolicy**: The Azure AD B2C policies that define how end users register via local accounts.",
            "**claimsMappingPolicies**: The claim-mapping policies for WS-Fed, SAML, OAuth 2.0, and OpenID Connect protocols, for tokens issued to a specific application.",
            "**conditionalAccessPolicies**: The custom rules that define an access scenario.",
            "**crossTenantAccessPolicy**: The custom rules that define an access scenario when interacting with external Azure AD tenants.",
            "**defaultAppManagementPolicy**: The tenant-wide policy that enforces app management restrictions for all applications and service principals.",
            "**deviceRegistrationPolicy**",
            "**directoryRoleAccessReviewPolicy**",
            "**externalIdentitiesPolicy**: Represents the tenant-wide policy that controls whether external users can leave an Azure AD tenant via self-service controls.",
            "**featureRolloutPolicies**: The feature rollout policy associated with a directory object.",
            "**homeRealmDiscoveryPolicies**: The policy to control Azure AD authentication behavior for federated users.",
            "**identitySecurityDefaultsEnforcementPolicy**: The policy that represents the security defaults that protect against common attacks.",
            "**mobileAppManagementPolicies**: The policy that defines auto-enrollment configuration for a mobility management (MDM or MAM) application.",
            "**mobileDeviceManagementPolicies**",
            "**permissionGrantPolicies**: The policy that specifies the conditions under which consent can be granted.",
            "**roleManagementPolicies**: Represents the role management policies.",
            "**roleManagementPolicyAssignments**: Represents the role management policy assignments.",
            "**servicePrincipalCreationPolicies**",
            "**tokenIssuancePolicies**: The policy that specifies the characteristics of SAML tokens issued by Azure AD.",
            "**tokenLifetimePolicies**: The policy that controls the lifetime of a JWT access token, an ID token, or a SAML 1.1/2.0 token issued by Azure AD."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "4XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**error**",
              {
                "$ul": [
                  "**code**",
                  "**details**",
                  [
                    "**innererror**",
                    {
                      "$ul": [
                        "**@odata.type**",
                        "**Date**: Date when the error occured.",
                        "**client-request-id**: Client request Id as sent by the client application.",
                        "**request-id**: Request Id as tracked internally by the service"
                      ]
                    }
                  ],
                  "**message**",
                  "**target**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "5XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**error**",
              {
                "$ul": [
                  "**code**",
                  "**details**",
                  [
                    "**innererror**",
                    {
                      "$ul": [
                        "**@odata.type**",
                        "**Date**: Date when the error occured.",
                        "**client-request-id**: Client request Id as sent by the client application.",
                        "**request-id**: Request Id as tracked internally by the service"
                      ]
                    }
                  ],
                  "**message**",
                  "**target**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
