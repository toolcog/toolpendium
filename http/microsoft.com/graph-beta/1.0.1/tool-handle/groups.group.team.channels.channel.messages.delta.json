{
  "name": "groups_group_team_channels_channel_messages_delta",
  "description": "Invoke function delta",
  "parameters": {
    "type": "object",
    "properties": {
      "$top": {
        "minimum": 0,
        "type": "integer",
        "description": "Show only the first n items"
      },
      "$skip": {
        "minimum": 0,
        "type": "integer",
        "description": "Skip the first n items"
      },
      "$search": {
        "type": "string",
        "description": "Search items by search phrases"
      },
      "$filter": {
        "type": "string",
        "description": "Filter items by property values"
      },
      "$count": {
        "type": "boolean",
        "description": "Include count of items"
      },
      "$select": {
        "items": {
          "enum": [
            "id",
            "attachments",
            "body",
            "channelIdentity",
            "chatId",
            "createdDateTime",
            "deletedDateTime",
            "etag",
            "eventDetail",
            "from",
            "importance",
            "lastEditedDateTime",
            "lastModifiedDateTime",
            "locale",
            "mentions",
            "messageHistory",
            "messageType",
            "onBehalfOf",
            "policyViolation",
            "reactions",
            "replyToId",
            "subject",
            "summary",
            "webUrl",
            "hostedContents",
            "replies"
          ],
          "type": "string"
        },
        "type": "array",
        "uniqueItems": true,
        "description": "Select properties to be returned"
      },
      "$orderby": {
        "items": {
          "enum": [
            "id",
            "id desc",
            "attachments",
            "attachments desc",
            "body",
            "body desc",
            "channelIdentity",
            "channelIdentity desc",
            "chatId",
            "chatId desc",
            "createdDateTime",
            "createdDateTime desc",
            "deletedDateTime",
            "deletedDateTime desc",
            "etag",
            "etag desc",
            "eventDetail",
            "eventDetail desc",
            "from",
            "from desc",
            "importance",
            "importance desc",
            "lastEditedDateTime",
            "lastEditedDateTime desc",
            "lastModifiedDateTime",
            "lastModifiedDateTime desc",
            "locale",
            "locale desc",
            "mentions",
            "mentions desc",
            "messageHistory",
            "messageHistory desc",
            "messageType",
            "messageType desc",
            "onBehalfOf",
            "onBehalfOf desc",
            "policyViolation",
            "policyViolation desc",
            "reactions",
            "reactions desc",
            "replyToId",
            "replyToId desc",
            "subject",
            "subject desc",
            "summary",
            "summary desc",
            "webUrl",
            "webUrl desc"
          ],
          "type": "string"
        },
        "type": "array",
        "uniqueItems": true,
        "description": "Order items by property values"
      },
      "group-id": {
        "type": "string",
        "description": "key: id of group"
      },
      "channel-id": {
        "type": "string",
        "description": "key: id of channel"
      }
    },
    "required": [
      "group-id",
      "channel-id"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://graph.microsoft.com/beta/groups/{group-id}/team/channels/{channel-id}/messages/microsoft.graph.delta(){?$top,$skip,$search,$filter,$count,$select,$orderby}"
    }
  },
  "responses": {
    "2XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Base delta function response"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**@odata.deltaLink**",
            "**@odata.nextLink**",
            "**value**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "4XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**error**",
              {
                "$ul": [
                  "**code**",
                  "**details**",
                  [
                    "**innererror**",
                    {
                      "$ul": [
                        "**@odata.type**",
                        "**Date**: Date when the error occured.",
                        "**client-request-id**: Client request Id as sent by the client application.",
                        "**request-id**: Request Id as tracked internally by the service"
                      ]
                    }
                  ],
                  "**message**",
                  "**target**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "5XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**error**",
              {
                "$ul": [
                  "**code**",
                  "**details**",
                  [
                    "**innererror**",
                    {
                      "$ul": [
                        "**@odata.type**",
                        "**Date**: Date when the error occured.",
                        "**client-request-id**: Client request Id as sent by the client application.",
                        "**request-id**: Request Id as tracked internally by the service"
                      ]
                    }
                  ],
                  "**message**",
                  "**target**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
