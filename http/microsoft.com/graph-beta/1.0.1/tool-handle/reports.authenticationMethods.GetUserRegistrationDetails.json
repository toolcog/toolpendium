{
  "name": "reports_authenticationMethods_GetUserRegistrationDetails",
  "description": "Represents the state of a user's authentication methods, including which methods are registered and which features the user is registered and capable of (such as multi-factor authentication, self-service password reset, and passwordless authentication).",
  "parameters": {
    "type": "object",
    "properties": {
      "$select": {
        "items": {
          "enum": [
            "id",
            "defaultMfaMethod",
            "isAdmin",
            "isMfaCapable",
            "isMfaRegistered",
            "isPasswordlessCapable",
            "isSsprCapable",
            "isSsprEnabled",
            "isSsprRegistered",
            "methodsRegistered",
            "userDisplayName",
            "userPrincipalName",
            "userType"
          ],
          "type": "string"
        },
        "type": "array",
        "uniqueItems": true,
        "description": "Select properties to be returned"
      },
      "$expand": {
        "items": {
          "enum": [
            "*"
          ],
          "type": "string"
        },
        "type": "array",
        "uniqueItems": true,
        "description": "Expand related entities"
      },
      "userRegistrationDetails-id": {
        "type": "string",
        "description": "key: id of userRegistrationDetails"
      }
    },
    "required": [
      "userRegistrationDetails-id"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://graph.microsoft.com/beta/reports/authenticationMethods/userRegistrationDetails/{userRegistrationDetails-id}{?$select,$expand}"
    }
  },
  "responses": {
    "2XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "entity"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**@odata.type**",
            "**id**: The unique identifier for an entity. Read-only.",
            "**defaultMfaMethod**: The method the user or admin selected as default for performing multi-factor authentication for the user. The possible values are: none, mobilePhone, alternateMobilePhone, officePhone, microsoftAuthenticatorPush, softwareOneTimePasscode, unknownFutureValue.",
            "**isAdmin**: Whether the user has an admin role in the tenant. This value can be used to check the authentication methods that privileged accounts are registered for and capable of.",
            "**isMfaCapable**: Whether the user has registered a strong authentication method for multi-factor authentication. The method must be allowed by the authentication methods policy. Supports $filter (eq).",
            "**isMfaRegistered**: Whether the user has registered a strong authentication method for multi-factor authentication. The method may not necessarily be allowed by the authentication methods policy.  Supports $filter (eq).",
            "**isPasswordlessCapable**: Whether the user has registered a passwordless strong authentication method (including FIDO2, Windows Hello for Business, and Microsoft Authenticator (Passwordless)) that is allowed by the authentication methods policy. Supports $filter (eq).",
            "**isSsprCapable**: Whether the user has registered the required number of authentication methods for self-service password reset and the user is allowed to perform self-service password reset by policy. Supports $filter (eq).",
            "**isSsprEnabled**: Whether the user is allowed to perform self-service password reset by policy. The user may not necessarily have registered the required number of authentication methods for self-service password reset. Supports $filter (eq).",
            "**isSsprRegistered**: Whether the user has registered the required number of authentication methods for self-service password reset. The user may not necessarily be allowed to perform self-service password reset by policy. Supports $filter (eq).",
            "**methodsRegistered**: Collection of authentication methods registered, such as mobilePhone, email, fido2. Supports $filter (any with eq).",
            "**userDisplayName**: The user display name, such as Adele Vance. Supports $filter (eq, startsWith) and $orderBy.",
            "**userPrincipalName**: The user principal name, such as AdeleV@contoso.com. Supports $filter (eq, startsWith) and $orderBy.",
            "**userType**: Identifies whether the user is a member or guest in the tenant. The possible values are: member, guest, unknownFutureValue."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "4XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**error**",
              {
                "$ul": [
                  "**code**",
                  "**details**",
                  [
                    "**innererror**",
                    {
                      "$ul": [
                        "**@odata.type**",
                        "**Date**: Date when the error occured.",
                        "**client-request-id**: Client request Id as sent by the client application.",
                        "**request-id**: Request Id as tracked internally by the service"
                      ]
                    }
                  ],
                  "**message**",
                  "**target**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "5XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**error**",
              {
                "$ul": [
                  "**code**",
                  "**details**",
                  [
                    "**innererror**",
                    {
                      "$ul": [
                        "**@odata.type**",
                        "**Date**: Date when the error occured.",
                        "**client-request-id**: Client request Id as sent by the client application.",
                        "**request-id**: Request Id as tracked internally by the service"
                      ]
                    }
                  ],
                  "**message**",
                  "**target**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
