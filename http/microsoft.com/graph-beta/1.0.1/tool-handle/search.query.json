{
  "name": "search_query",
  "description": "Run a specified search query. Search results are provided in the response.",
  "parameters": {
    "type": "object",
    "properties": {
      "body": {
        "properties": {
          "requests": {
            "items": {
              "$ref": "#/$defs/microsoft.graph.searchRequest"
            },
            "type": "array"
          }
        },
        "type": "object",
        "description": "Action parameters"
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "microsoft.graph.searchRequest": {
        "properties": {
          "@odata.type": {
            "type": "string"
          },
          "aggregationFilters": {
            "description": "Contains one or more filters to obtain search results aggregated and filtered to a specific value of a field. Optional.Build this filter based on a prior search that aggregates by the same field. From the response of the prior search, identify the searchBucket that filters results to the specific value of the field, use the string in its aggregationFilterToken property, and build an aggregation filter string in the format '{field}:/'{aggregationFilterToken}/''. If multiple values for the same field need to be provided, use the strings in its aggregationFilterToken property and build an aggregation filter string in the format '{field}:or(/'{aggregationFilterToken1}/',/'{aggregationFilterToken2}/')'. For example, searching and aggregating drive items by file type returns a searchBucket for the file type docx in the response. You can conveniently use the aggregationFilterToken returned for this searchBucket in a subsequent search query and filter matches down to drive items of the docx file type. Example 1 and example 2 show the actual requests and responses.",
            "items": {
              "nullable": true,
              "type": "string"
            },
            "type": "array"
          },
          "aggregations": {
            "description": "Specifies aggregations (also known as refiners) to be returned alongside search results. Optional.",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/$defs/microsoft.graph.aggregationOption"
                },
                {
                  "nullable": true,
                  "type": "object"
                }
              ]
            },
            "type": "array"
          },
          "collapseProperties": {
            "description": "Contains the ordered collection of fields and limit to collapse results. Optional.",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/$defs/microsoft.graph.collapseProperty"
                },
                {
                  "nullable": true,
                  "type": "object"
                }
              ]
            },
            "type": "array"
          },
          "contentSources": {
            "description": "Contains the connection to be targeted. Respects the following format : /external/connections/connectionid where connectionid is the ConnectionId defined in the Connectors Administration.  Note: contentSource is only applicable when entityType=externalItem. Optional.",
            "items": {
              "nullable": true,
              "type": "string"
            },
            "type": "array"
          },
          "enableTopResults": {
            "description": "This triggers hybrid sort for messages: the first 3 messages are the most relevant. This property is only applicable to entityType=message. Optional.",
            "nullable": true,
            "type": "boolean"
          },
          "entityTypes": {
            "description": "One or more types of resources expected in the response. Possible values are: list, site, listItem, message, event, drive, driveItem, person, externalItem, acronym, bookmark, chatMessage. For details about combinations of two or more entity types that are supported in the same search request, see known limitations. Required.",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/$defs/microsoft.graph.entityType"
                },
                {
                  "nullable": true,
                  "type": "object"
                }
              ]
            },
            "type": "array"
          },
          "fields": {
            "description": "Contains the fields to be returned for each resource object specified in entityTypes, allowing customization of the fields returned by default otherwise, including additional fields such as custom managed properties from SharePoint and OneDrive, or custom fields in externalItem from content that Microsoft Graph connectors bring in. The fields property can be using the semantic labels applied to properties. For example, if a property is label as title, you can retrieve it using the following syntax : label_title.Optional.",
            "items": {
              "nullable": true,
              "type": "string"
            },
            "type": "array"
          },
          "from": {
            "description": "Specifies the offset for the search results. Offset 0 returns the very first result. Optional.",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer"
          },
          "query": {
            "$ref": "#/$defs/microsoft.graph.searchQuery"
          },
          "queryAlterationOptions": {
            "anyOf": [
              {
                "$ref": "#/$defs/microsoft.graph.searchAlterationOptions"
              },
              {
                "nullable": true,
                "type": "object"
              }
            ],
            "description": "Provides query alteration options formatted as a JSON blob that contains two optional flags related to spelling correction. Optional."
          },
          "region": {
            "description": "Required for searches that use application permissions. Represents the geographic location for the search. For details, see Get the region value.",
            "nullable": true,
            "type": "string"
          },
          "resultTemplateOptions": {
            "anyOf": [
              {
                "$ref": "#/$defs/microsoft.graph.resultTemplateOption"
              },
              {
                "nullable": true,
                "type": "object"
              }
            ],
            "description": "Provides the search result templates options for rendering connectors search results."
          },
          "sharePointOneDriveOptions": {
            "anyOf": [
              {
                "$ref": "#/$defs/microsoft.graph.sharePointOneDriveOptions"
              },
              {
                "nullable": true,
                "type": "object"
              }
            ],
            "description": "Indicates the kind of contents to be searched when a search is performed using application permissions. Optional."
          },
          "size": {
            "description": "The size of the page to be retrieved. Optional.",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer"
          },
          "sortProperties": {
            "description": "Contains the ordered collection of fields and direction to sort results. There can be at most 5 sort properties in the collection. Optional.",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/$defs/microsoft.graph.sortProperty"
                },
                {
                  "nullable": true,
                  "type": "object"
                }
              ]
            },
            "type": "array"
          },
          "stored_fields": {
            "items": {
              "nullable": true,
              "type": "string"
            },
            "type": "array"
          },
          "trimDuplicates": {
            "description": "Indicates whether to trim away the duplicate SharePoint files from search results. Default value is false. Optional.",
            "nullable": true,
            "type": "boolean"
          }
        },
        "required": [
          "@odata.type"
        ],
        "title": "searchRequest",
        "type": "object"
      },
      "microsoft.graph.aggregationOption": {
        "properties": {
          "@odata.type": {
            "type": "string"
          },
          "bucketDefinition": {
            "$ref": "#/$defs/microsoft.graph.bucketAggregationDefinition"
          },
          "field": {
            "description": "Computes aggregation on the field while the field exists in current entity type. Required.",
            "type": "string"
          },
          "size": {
            "description": "The number of searchBucket resources to be returned. This is not required when the range is provided manually in the search request. Optional.",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "@odata.type"
        ],
        "title": "aggregationOption",
        "type": "object"
      },
      "microsoft.graph.bucketAggregationDefinition": {
        "properties": {
          "@odata.type": {
            "type": "string"
          },
          "isDescending": {
            "description": "True to specify the sort order as descending. The default is false, with the sort order as ascending. Optional.",
            "nullable": true,
            "type": "boolean"
          },
          "minimumCount": {
            "description": "The minimum number of items that should be present in the aggregation to be returned in a bucket. Optional.",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "nullable": true,
            "type": "integer"
          },
          "prefixFilter": {
            "description": "A filter to define a matching criteria. The key should start with the specified prefix to be returned in the response. Optional.",
            "nullable": true,
            "type": "string"
          },
          "ranges": {
            "description": "Specifies the manual ranges to compute the aggregations. This is only valid for non-string refiners of date or numeric type. Optional.",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/$defs/microsoft.graph.bucketAggregationRange"
                },
                {
                  "nullable": true,
                  "type": "object"
                }
              ]
            },
            "type": "array"
          },
          "sortBy": {
            "$ref": "#/$defs/microsoft.graph.bucketAggregationSortProperty"
          }
        },
        "required": [
          "@odata.type"
        ],
        "title": "bucketAggregationDefinition",
        "type": "object"
      },
      "microsoft.graph.bucketAggregationRange": {
        "properties": {
          "@odata.type": {
            "type": "string"
          },
          "from": {
            "description": "Defines the lower bound from which to compute the aggregation. This can be a numeric value or a string representation of a date using the YYYY-MM-DDTHH:mm:ss.sssZ format. Required.",
            "type": "string"
          },
          "to": {
            "description": "Defines the upper bound up to which to compute the aggregation. This can be a numeric value or a string representation of a date using the YYYY-MM-DDTHH:mm:ss.sssZ format. Required.",
            "type": "string"
          }
        },
        "required": [
          "@odata.type"
        ],
        "title": "bucketAggregationRange",
        "type": "object"
      },
      "microsoft.graph.bucketAggregationSortProperty": {
        "enum": [
          "count",
          "keyAsString",
          "keyAsNumber",
          "unknownFutureValue"
        ],
        "title": "bucketAggregationSortProperty",
        "type": "string"
      },
      "microsoft.graph.collapseProperty": {
        "properties": {
          "@odata.type": {
            "type": "string"
          },
          "fields": {
            "description": "Defines the collapse group to trim results. The properties in this collection must be sortable/refinable properties. Required.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "limit": {
            "description": "Defines a maximum limit count for this field. This numeric value must be a positive integer. Required.",
            "format": "int16",
            "maximum": 32767,
            "minimum": -32768,
            "type": "integer"
          }
        },
        "required": [
          "@odata.type"
        ],
        "title": "collapseProperty",
        "type": "object"
      },
      "microsoft.graph.entityType": {
        "enum": [
          "event",
          "message",
          "driveItem",
          "externalItem",
          "site",
          "list",
          "listItem",
          "drive",
          "unknownFutureValue",
          "acronym",
          "bookmark",
          "chatMessage",
          "qna"
        ],
        "title": "entityType",
        "type": "string"
      },
      "microsoft.graph.searchQuery": {
        "properties": {
          "@odata.type": {
            "type": "string"
          },
          "queryString": {
            "description": "The search query containing the search terms. Required.",
            "nullable": true,
            "type": "string"
          },
          "queryTemplate": {
            "description": "Provides a way to decorate the query string. Supports both KQL and query variables. Optional.",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "@odata.type"
        ],
        "title": "searchQuery",
        "type": "object"
      },
      "microsoft.graph.searchAlterationOptions": {
        "properties": {
          "@odata.type": {
            "type": "string"
          },
          "enableModification": {
            "description": "Indicates whether spelling modifications are enabled. If enabled, user will get the search results for corrected query when there are no results for the original query with typos and get the spelling modification information in queryAlterationResponse property of the response. Optional.",
            "nullable": true,
            "type": "boolean"
          },
          "enableSuggestion": {
            "description": "Indicates whether spelling suggestions are enabled. If enabled, the user will get the search results for the original search query and suggestions for spelling correction in the queryAlterationResponse property of the response for the typos in the query. Optional.",
            "nullable": true,
            "type": "boolean"
          }
        },
        "required": [
          "@odata.type"
        ],
        "title": "searchAlterationOptions",
        "type": "object"
      },
      "microsoft.graph.resultTemplateOption": {
        "properties": {
          "@odata.type": {
            "type": "string"
          },
          "enableResultTemplate": {
            "description": "Indicates whether search display layouts are enabled. If enabled, the user will get the result template to render the search results content in the resultTemplates property of the response. The result template is based on Adaptive Cards. This property is optional.",
            "nullable": true,
            "type": "boolean"
          }
        },
        "required": [
          "@odata.type"
        ],
        "title": "resultTemplateOption",
        "type": "object"
      },
      "microsoft.graph.sharePointOneDriveOptions": {
        "properties": {
          "@odata.type": {
            "type": "string"
          },
          "includeContent": {
            "anyOf": [
              {
                "$ref": "#/$defs/microsoft.graph.searchContent"
              },
              {
                "nullable": true,
                "type": "object"
              }
            ],
            "description": "The type of search content. The possible values are: privateContent, sharedContent. Read-only."
          }
        },
        "required": [
          "@odata.type"
        ],
        "title": "sharePointOneDriveOptions",
        "type": "object"
      },
      "microsoft.graph.searchContent": {
        "enum": [
          "sharedContent",
          "privateContent",
          "unknownFutureValue"
        ],
        "title": "searchContent",
        "type": "string"
      },
      "microsoft.graph.sortProperty": {
        "properties": {
          "@odata.type": {
            "type": "string"
          },
          "isDescending": {
            "description": "True if the sort order is descending. Default is false, with the sort order as ascending. Optional.",
            "nullable": true,
            "type": "boolean"
          },
          "name": {
            "description": "The name of the property to sort on. Required.",
            "type": "string"
          }
        },
        "required": [
          "@odata.type"
        ],
        "title": "sortProperty",
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://graph.microsoft.com/beta/search/microsoft.graph.query"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "2XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Base collection pagination and count responses"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**@odata.count**",
            "**@odata.nextLink**",
            "**value**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "4XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**error**",
              {
                "$ul": [
                  "**code**",
                  "**details**",
                  [
                    "**innererror**",
                    {
                      "$ul": [
                        "**@odata.type**",
                        "**Date**: Date when the error occured.",
                        "**client-request-id**: Client request Id as sent by the client application.",
                        "**request-id**: Request Id as tracked internally by the service"
                      ]
                    }
                  ],
                  "**message**",
                  "**target**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "5XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**error**",
              {
                "$ul": [
                  "**code**",
                  "**details**",
                  [
                    "**innererror**",
                    {
                      "$ul": [
                        "**@odata.type**",
                        "**Date**: Date when the error occured.",
                        "**client-request-id**: Client request Id as sent by the client application.",
                        "**request-id**: Request Id as tracked internally by the service"
                      ]
                    }
                  ],
                  "**message**",
                  "**target**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
