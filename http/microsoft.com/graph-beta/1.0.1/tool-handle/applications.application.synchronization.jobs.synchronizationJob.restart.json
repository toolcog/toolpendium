{
  "name": "applications_application_synchronization_jobs_synchronizationJob_restart",
  "description": "Restart a stopped synchronization job, forcing it to reprocess all the objects in the directory. Optionally clears existing the synchronization state and previous errors.",
  "parameters": {
    "type": "object",
    "properties": {
      "application-id": {
        "type": "string",
        "description": "key: id of application"
      },
      "synchronizationJob-id": {
        "type": "string",
        "description": "key: id of synchronizationJob"
      },
      "body": {
        "properties": {
          "criteria": {
            "anyOf": [
              {
                "$ref": "#/$defs/microsoft.graph.synchronizationJobRestartCriteria"
              },
              {
                "nullable": true,
                "type": "object"
              }
            ]
          }
        },
        "type": "object",
        "description": "Action parameters"
      }
    },
    "required": [
      "application-id",
      "synchronizationJob-id",
      "body"
    ],
    "$defs": {
      "microsoft.graph.synchronizationJobRestartCriteria": {
        "properties": {
          "@odata.type": {
            "type": "string"
          },
          "resetScope": {
            "anyOf": [
              {
                "$ref": "#/$defs/microsoft.graph.synchronizationJobRestartScope"
              },
              {
                "nullable": true,
                "type": "object"
              }
            ],
            "description": "Comma-separated combination of the following values: None, ConnectorDataStore, Escrows, Watermark, QuarantineState, Full, ForceDeletes. The property can also be empty.   None: Starts a paused or quarantined provisioning job. DO NOT USE. Use the Start synchronizationJob API instead.ConnectorDataStore - Clears the underlying cache for all users. DO NOT USE. Contact Microsoft Support for guidance.Escrows - Provisioning failures are marked as escrows and retried. Clearing escrows will stop the service from retrying failures.Watermark - Removing the watermark causes the service to re-evaluate all the users again, rather than just processing changes.QuarantineState - Temporarily lifts the quarantine.Use Full if you want all of the options.ForceDeletes - Forces the system to delete the pending deleted users when using the accidental deletions prevention feature and the deletion threshold is exceeded. Leaving this property empty emulates the Restart provisioning option in the Azure portal. It is similar to setting the resetScope to include QuarantineState, Watermark, and Escrows. This option meets most customer needs."
          }
        },
        "required": [
          "@odata.type"
        ],
        "title": "synchronizationJobRestartCriteria",
        "type": "object"
      },
      "microsoft.graph.synchronizationJobRestartScope": {
        "enum": [
          "None",
          "ConnectorDataStore",
          "Escrows",
          "Watermark",
          "QuarantineState",
          "Full",
          "ForceDeletes"
        ],
        "title": "synchronizationJobRestartScope",
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://graph.microsoft.com/beta/applications/{application-id}/synchronization/jobs/{synchronizationJob-id}/microsoft.graph.restart"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "4XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**error**",
              {
                "$ul": [
                  "**code**",
                  "**details**",
                  [
                    "**innererror**",
                    {
                      "$ul": [
                        "**@odata.type**",
                        "**Date**: Date when the error occured.",
                        "**client-request-id**: Client request Id as sent by the client application.",
                        "**request-id**: Request Id as tracked internally by the service"
                      ]
                    }
                  ],
                  "**message**",
                  "**target**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "5XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**error**",
              {
                "$ul": [
                  "**code**",
                  "**details**",
                  [
                    "**innererror**",
                    {
                      "$ul": [
                        "**@odata.type**",
                        "**Date**: Date when the error occured.",
                        "**client-request-id**: Client request Id as sent by the client application.",
                        "**request-id**: Request Id as tracked internally by the service"
                      ]
                    }
                  ],
                  "**message**",
                  "**target**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
