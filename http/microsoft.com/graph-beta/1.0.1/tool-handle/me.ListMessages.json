{
  "name": "me_ListMessages",
  "description": "Get the messages in the signed-in user's mailbox (including the Deleted Items and Clutter folders).  Depending on the page size and mailbox data, getting messages from a mailbox can incur multiple requests. The default page size is 10 messages. Use `$top` to customize the page size, within the range of 1 and 1000. To improve the operation response time, use `$select` to specify the exact properties you need; see example 1 below. Fine-tune the values for `$select` and `$top`, especially when you must use a larger page size, as returning a page with hundreds of messages each with a full response payload may trigger the gateway timeout (HTTP 504). To get the next page of messages, simply apply the entire URL returned in `@odata.nextLink` to the next get-messages request. This URL includes any query parameters you may have specified in the initial request.  Do not try to extract the `$skip` value from the `@odata.nextLink` URL to manipulate responses. This API uses the `$skip` value to keep count of all the items it has gone through in the user's mailbox to return a page of message-type items. It's therefore possible that even in the initial response, the `$skip` value is larger than the page size. For more information, see Paging Microsoft Graph data in your app. You can filter on the messages and get only those that include a mention of the signed-in user. See an example below. \nBy default, the `GET /me/messages` operation does not return the **mentions** property. Use the `$expand` query parameter \nto find details of each mention in a message. There are two scenarios where an app can get messages in another user's mail folder:",
  "parameters": {
    "type": "object",
    "properties": {
      "$top": {
        "minimum": 0,
        "type": "integer",
        "description": "Show only the first n items"
      },
      "$skip": {
        "minimum": 0,
        "type": "integer",
        "description": "Skip the first n items"
      },
      "$search": {
        "type": "string",
        "description": "Search items by search phrases"
      },
      "$filter": {
        "type": "string",
        "description": "Filter items by property values"
      },
      "$count": {
        "type": "boolean",
        "description": "Include count of items"
      },
      "$orderby": {
        "items": {
          "enum": [
            "id",
            "id desc",
            "categories",
            "categories desc",
            "changeKey",
            "changeKey desc",
            "createdDateTime",
            "createdDateTime desc",
            "lastModifiedDateTime",
            "lastModifiedDateTime desc",
            "bccRecipients",
            "bccRecipients desc",
            "body",
            "body desc",
            "bodyPreview",
            "bodyPreview desc",
            "ccRecipients",
            "ccRecipients desc",
            "conversationId",
            "conversationId desc",
            "conversationIndex",
            "conversationIndex desc",
            "flag",
            "flag desc",
            "from",
            "from desc",
            "hasAttachments",
            "hasAttachments desc",
            "importance",
            "importance desc",
            "inferenceClassification",
            "inferenceClassification desc",
            "internetMessageHeaders",
            "internetMessageHeaders desc",
            "internetMessageId",
            "internetMessageId desc",
            "isDeliveryReceiptRequested",
            "isDeliveryReceiptRequested desc",
            "isDraft",
            "isDraft desc",
            "isRead",
            "isRead desc",
            "isReadReceiptRequested",
            "isReadReceiptRequested desc",
            "mentionsPreview",
            "mentionsPreview desc",
            "parentFolderId",
            "parentFolderId desc",
            "receivedDateTime",
            "receivedDateTime desc",
            "replyTo",
            "replyTo desc",
            "sender",
            "sender desc",
            "sentDateTime",
            "sentDateTime desc",
            "subject",
            "subject desc",
            "toRecipients",
            "toRecipients desc",
            "uniqueBody",
            "uniqueBody desc",
            "unsubscribeData",
            "unsubscribeData desc",
            "unsubscribeEnabled",
            "unsubscribeEnabled desc",
            "webLink",
            "webLink desc"
          ],
          "type": "string"
        },
        "type": "array",
        "uniqueItems": true,
        "description": "Order items by property values"
      },
      "$select": {
        "items": {
          "enum": [
            "id",
            "categories",
            "changeKey",
            "createdDateTime",
            "lastModifiedDateTime",
            "bccRecipients",
            "body",
            "bodyPreview",
            "ccRecipients",
            "conversationId",
            "conversationIndex",
            "flag",
            "from",
            "hasAttachments",
            "importance",
            "inferenceClassification",
            "internetMessageHeaders",
            "internetMessageId",
            "isDeliveryReceiptRequested",
            "isDraft",
            "isRead",
            "isReadReceiptRequested",
            "mentionsPreview",
            "parentFolderId",
            "receivedDateTime",
            "replyTo",
            "sender",
            "sentDateTime",
            "subject",
            "toRecipients",
            "uniqueBody",
            "unsubscribeData",
            "unsubscribeEnabled",
            "webLink",
            "attachments",
            "extensions",
            "mentions",
            "multiValueExtendedProperties",
            "singleValueExtendedProperties"
          ],
          "type": "string"
        },
        "type": "array",
        "uniqueItems": true,
        "description": "Select properties to be returned"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://graph.microsoft.com/beta/me/messages{?$top,$skip,$search,$filter,$count,$orderby,$select}"
    }
  },
  "responses": {
    "2XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Base collection pagination and count responses"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**@odata.count**",
            "**@odata.nextLink**",
            "**value**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "4XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**error**",
              {
                "$ul": [
                  "**code**",
                  "**details**",
                  [
                    "**innererror**",
                    {
                      "$ul": [
                        "**@odata.type**",
                        "**Date**: Date when the error occured.",
                        "**client-request-id**: Client request Id as sent by the client application.",
                        "**request-id**: Request Id as tracked internally by the service"
                      ]
                    }
                  ],
                  "**message**",
                  "**target**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "5XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**error**",
              {
                "$ul": [
                  "**code**",
                  "**details**",
                  [
                    "**innererror**",
                    {
                      "$ul": [
                        "**@odata.type**",
                        "**Date**: Date when the error occured.",
                        "**client-request-id**: Client request Id as sent by the client application.",
                        "**request-id**: Request Id as tracked internally by the service"
                      ]
                    }
                  ],
                  "**message**",
                  "**target**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
