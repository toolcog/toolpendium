{
  "name": "policies_CreateConditionalAccessPolicies",
  "description": "Create new navigation property to conditionalAccessPolicies for policies",
  "parameters": {
    "type": "object",
    "properties": {
      "body": {
        "$ref": "#/components/schemas/microsoft.graph.conditionalAccessPolicy",
        "description": "New navigation property"
      }
    },
    "required": [
      "body"
    ]
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://graph.microsoft.com/beta/policies/conditionalAccessPolicies"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "2XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "entity"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**@odata.type**",
            "**id**: The unique identifier for an entity. Read-only.",
            [
              "**conditions**",
              {
                "$ul": [
                  "**@odata.type**",
                  "**applications**: Applications and user actions included in and excluded from the policy. Required.",
                  "**clientAppTypes**: Client application types included in the policy. Possible values are: all, browser, mobileAppsAndDesktopClients, exchangeActiveSync, easSupported, other. Required.",
                  "**clientApplications**: Client applications (service principals and workload identities) included in and excluded from the policy. Either users or clientApplications is required.",
                  "**deviceStates**: Device states in the policy.",
                  "**devices**: Devices in the policy.",
                  "**locations**: Locations included in and excluded from the policy.",
                  "**platforms**: Platforms included in and excluded from the policy.",
                  "**servicePrincipalRiskLevels**: Service principal risk levels included in the policy. Possible values are: low, medium, high, none, unknownFutureValue.",
                  "**signInRiskLevels**: Sign-in risk levels included in the policy. Possible values are: low, medium, high, hidden, none, unknownFutureValue. Required.",
                  "**userRiskLevels**: User risk levels included in the policy. Possible values are: low, medium, high, hidden, none, unknownFutureValue. Required.",
                  "**users**: Users, groups, and roles included in and excluded from the policy. Either users or clientApplications is required."
                ]
              }
            ],
            "**createdDateTime**: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Readonly.",
            "**description**: Not used.",
            "**displayName**: Specifies a display name for the conditionalAccessPolicy object.",
            "**grantControls**: Specifies the grant controls that must be fulfilled to pass the policy.",
            "**modifiedDateTime**: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Readonly.",
            "**sessionControls**: Specifies the session controls that are enforced after sign-in.",
            "**state**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "4XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**error**",
              {
                "$ul": [
                  "**code**",
                  "**details**",
                  [
                    "**innererror**",
                    {
                      "$ul": [
                        "**@odata.type**",
                        "**Date**: Date when the error occured.",
                        "**client-request-id**: Client request Id as sent by the client application.",
                        "**request-id**: Request Id as tracked internally by the service"
                      ]
                    }
                  ],
                  "**message**",
                  "**target**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "5XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**error**",
              {
                "$ul": [
                  "**code**",
                  "**details**",
                  [
                    "**innererror**",
                    {
                      "$ul": [
                        "**@odata.type**",
                        "**Date**: Date when the error occured.",
                        "**client-request-id**: Client request Id as sent by the client application.",
                        "**request-id**: Request Id as tracked internally by the service"
                      ]
                    }
                  ],
                  "**message**",
                  "**target**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
