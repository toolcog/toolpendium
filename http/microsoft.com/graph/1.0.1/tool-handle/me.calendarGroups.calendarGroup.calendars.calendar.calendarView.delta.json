{
  "name": "me_calendarGroups_calendarGroup_calendars_calendar_calendarView_delta",
  "description": "Get a set of event resources that have been added, deleted, or updated in a **calendarView** (a range of events defined by start and end dates) of the user's primary calendar. Typically, synchronizing events in a **calendarView** in a local store entails a round of multiple **delta** function calls. The initial call is a full synchronization, and every subsequent **delta** call in the same round gets the incremental changes (additions, deletions, or updates). This allows you to maintain and synchronize a local store of events in the specified **calendarView**, without having to fetch all the events of that calendar from the server every time.",
  "parameters": {
    "type": "object",
    "properties": {
      "$top": {
        "minimum": 0,
        "type": "integer",
        "description": "Show only the first n items"
      },
      "$skip": {
        "minimum": 0,
        "type": "integer",
        "description": "Skip the first n items"
      },
      "$search": {
        "type": "string",
        "description": "Search items by search phrases"
      },
      "$filter": {
        "type": "string",
        "description": "Filter items by property values"
      },
      "$count": {
        "type": "boolean",
        "description": "Include count of items"
      },
      "$select": {
        "items": {
          "enum": [
            "id",
            "categories",
            "changeKey",
            "createdDateTime",
            "lastModifiedDateTime",
            "allowNewTimeProposals",
            "attendees",
            "body",
            "bodyPreview",
            "end",
            "hasAttachments",
            "hideAttendees",
            "iCalUId",
            "importance",
            "isAllDay",
            "isCancelled",
            "isDraft",
            "isOnlineMeeting",
            "isOrganizer",
            "isReminderOn",
            "location",
            "locations",
            "onlineMeeting",
            "onlineMeetingProvider",
            "onlineMeetingUrl",
            "organizer",
            "originalEndTimeZone",
            "originalStart",
            "originalStartTimeZone",
            "recurrence",
            "reminderMinutesBeforeStart",
            "responseRequested",
            "responseStatus",
            "sensitivity",
            "seriesMasterId",
            "showAs",
            "start",
            "subject",
            "transactionId",
            "type",
            "webLink",
            "attachments",
            "calendar",
            "extensions",
            "instances",
            "multiValueExtendedProperties",
            "singleValueExtendedProperties"
          ],
          "type": "string"
        },
        "type": "array",
        "uniqueItems": true,
        "description": "Select properties to be returned"
      },
      "$orderby": {
        "items": {
          "enum": [
            "id",
            "id desc",
            "categories",
            "categories desc",
            "changeKey",
            "changeKey desc",
            "createdDateTime",
            "createdDateTime desc",
            "lastModifiedDateTime",
            "lastModifiedDateTime desc",
            "allowNewTimeProposals",
            "allowNewTimeProposals desc",
            "attendees",
            "attendees desc",
            "body",
            "body desc",
            "bodyPreview",
            "bodyPreview desc",
            "end",
            "end desc",
            "hasAttachments",
            "hasAttachments desc",
            "hideAttendees",
            "hideAttendees desc",
            "iCalUId",
            "iCalUId desc",
            "importance",
            "importance desc",
            "isAllDay",
            "isAllDay desc",
            "isCancelled",
            "isCancelled desc",
            "isDraft",
            "isDraft desc",
            "isOnlineMeeting",
            "isOnlineMeeting desc",
            "isOrganizer",
            "isOrganizer desc",
            "isReminderOn",
            "isReminderOn desc",
            "location",
            "location desc",
            "locations",
            "locations desc",
            "onlineMeeting",
            "onlineMeeting desc",
            "onlineMeetingProvider",
            "onlineMeetingProvider desc",
            "onlineMeetingUrl",
            "onlineMeetingUrl desc",
            "organizer",
            "organizer desc",
            "originalEndTimeZone",
            "originalEndTimeZone desc",
            "originalStart",
            "originalStart desc",
            "originalStartTimeZone",
            "originalStartTimeZone desc",
            "recurrence",
            "recurrence desc",
            "reminderMinutesBeforeStart",
            "reminderMinutesBeforeStart desc",
            "responseRequested",
            "responseRequested desc",
            "responseStatus",
            "responseStatus desc",
            "sensitivity",
            "sensitivity desc",
            "seriesMasterId",
            "seriesMasterId desc",
            "showAs",
            "showAs desc",
            "start",
            "start desc",
            "subject",
            "subject desc",
            "transactionId",
            "transactionId desc",
            "type",
            "type desc",
            "webLink",
            "webLink desc"
          ],
          "type": "string"
        },
        "type": "array",
        "uniqueItems": true,
        "description": "Order items by property values"
      },
      "calendarGroup-id": {
        "type": "string",
        "description": "key: id of calendarGroup"
      },
      "calendar-id": {
        "type": "string",
        "description": "key: id of calendar"
      }
    },
    "required": [
      "calendarGroup-id",
      "calendar-id"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://graph.microsoft.com/v1.0/me/calendarGroups/{calendarGroup-id}/calendars/{calendar-id}/calendarView/microsoft.graph.delta(){?$top,$skip,$search,$filter,$count,$select,$orderby}"
    }
  },
  "responses": {
    "2XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Base delta function response"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**@odata.deltaLink**",
            "**@odata.nextLink**",
            "**value**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "4XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**error**",
              {
                "$ul": [
                  "**code**",
                  "**details**",
                  [
                    "**innererror**",
                    {
                      "$ul": [
                        "**@odata.type**",
                        "**Date**: Date when the error occured.",
                        "**client-request-id**: Client request Id as sent by the client application.",
                        "**request-id**: Request Id as tracked internally by the service"
                      ]
                    }
                  ],
                  "**message**",
                  "**target**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "5XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**error**",
              {
                "$ul": [
                  "**code**",
                  "**details**",
                  [
                    "**innererror**",
                    {
                      "$ul": [
                        "**@odata.type**",
                        "**Date**: Date when the error occured.",
                        "**client-request-id**: Client request Id as sent by the client application.",
                        "**request-id**: Request Id as tracked internally by the service"
                      ]
                    }
                  ],
                  "**message**",
                  "**target**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
