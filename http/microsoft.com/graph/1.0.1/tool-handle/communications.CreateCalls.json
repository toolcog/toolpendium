{
  "name": "communications_CreateCalls",
  "description": "Create call enables your bot to create a new outgoing peer-to-peer or group call, or join an existing meeting. You will need to register the calling bot and go through the list of permissions needed as mentioned below.",
  "parameters": {
    "type": "object",
    "properties": {
      "body": {
        "$ref": "#/components/schemas/microsoft.graph.call",
        "description": "New navigation property"
      }
    },
    "required": [
      "body"
    ]
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://graph.microsoft.com/v1.0/communications/calls"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "2XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "entity"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**@odata.type**",
            "**id**: The unique idenfier for an entity. Read-only.",
            "**audioRoutingGroups**",
            "**callChainId**: A unique identifier for all the participant calls in a conference or a unique identifier for two participant calls in a P2P call.  This needs to be copied over from Microsoft.Graph.Call.CallChainId.",
            "**callOptions**: Contains the optional features for the call.",
            "**callRoutes**: The routing information on how the call was retargeted. Read-only.",
            "**callbackUri**: The callback URL on which callbacks will be delivered. Must be https.",
            "**chatInfo**: The chat information. Required information for joining a meeting.",
            "**contentSharingSessions**",
            "**direction**: The direction of the call. The possible value are incoming or outgoing. Read-only.",
            "**incomingContext**: Call context associated with an incoming call.",
            "**mediaConfig**: The media configuration. Required.",
            "**mediaState**: Read-only. The call media state.",
            "**meetingInfo**: The meeting information. Required information for meeting scenarios.",
            "**myParticipantId**",
            "**operations**",
            "**participants**",
            "**requestedModalities**: The list of requested modalities. Possible values are: unknown, audio, video, videoBasedScreenSharing, data.",
            "**resultInfo**: The result information. For example can hold termination reason. Read-only.",
            "**source**: The originator of the call.",
            "**state**: The call state. Possible values are: incoming, establishing, ringing, established, hold, transferring, transferAccepted, redirecting, terminating, terminated. Read-only.",
            "**subject**: The subject of the conversation.",
            "**targets**: The targets of the call. Required information for creating peer to peer call.",
            "**tenantId**",
            "**toneInfo**",
            "**transcription**: The transcription information for the call. Read-only."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "4XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**error**",
              {
                "$ul": [
                  "**code**",
                  "**details**",
                  [
                    "**innererror**",
                    {
                      "$ul": [
                        "**@odata.type**",
                        "**Date**: Date when the error occured.",
                        "**client-request-id**: Client request Id as sent by the client application.",
                        "**request-id**: Request Id as tracked internally by the service"
                      ]
                    }
                  ],
                  "**message**",
                  "**target**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "5XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**error**",
              {
                "$ul": [
                  "**code**",
                  "**details**",
                  [
                    "**innererror**",
                    {
                      "$ul": [
                        "**@odata.type**",
                        "**Date**: Date when the error occured.",
                        "**client-request-id**: Client request Id as sent by the client application.",
                        "**request-id**: Request Id as tracked internally by the service"
                      ]
                    }
                  ],
                  "**message**",
                  "**target**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
