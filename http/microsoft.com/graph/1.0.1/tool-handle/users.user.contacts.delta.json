{
  "name": "users_user_contacts_delta",
  "description": "Get a set of contacts that have been added, deleted, or updated in a specified folder. A **delta** function call for contacts in a folder is similar to a GET request, except that by appropriately \napplying state tokens in one or more of these calls, \nyou can query for incremental changes in the contacts in \nthat folder. This allows you to maintain and synchronize a local store of a user's contacts without \nhaving to fetch the entire set of contacts from the server every time.  ",
  "parameters": {
    "type": "object",
    "properties": {
      "$top": {
        "minimum": 0,
        "type": "integer",
        "description": "Show only the first n items"
      },
      "$skip": {
        "minimum": 0,
        "type": "integer",
        "description": "Skip the first n items"
      },
      "$search": {
        "type": "string",
        "description": "Search items by search phrases"
      },
      "$filter": {
        "type": "string",
        "description": "Filter items by property values"
      },
      "$count": {
        "type": "boolean",
        "description": "Include count of items"
      },
      "$select": {
        "items": {
          "enum": [
            "id",
            "categories",
            "changeKey",
            "createdDateTime",
            "lastModifiedDateTime",
            "assistantName",
            "birthday",
            "businessAddress",
            "businessHomePage",
            "businessPhones",
            "children",
            "companyName",
            "department",
            "displayName",
            "emailAddresses",
            "fileAs",
            "generation",
            "givenName",
            "homeAddress",
            "homePhones",
            "imAddresses",
            "initials",
            "jobTitle",
            "manager",
            "middleName",
            "mobilePhone",
            "nickName",
            "officeLocation",
            "otherAddress",
            "parentFolderId",
            "personalNotes",
            "profession",
            "spouseName",
            "surname",
            "title",
            "yomiCompanyName",
            "yomiGivenName",
            "yomiSurname",
            "extensions",
            "multiValueExtendedProperties",
            "photo",
            "singleValueExtendedProperties"
          ],
          "type": "string"
        },
        "type": "array",
        "uniqueItems": true,
        "description": "Select properties to be returned"
      },
      "$orderby": {
        "items": {
          "enum": [
            "id",
            "id desc",
            "categories",
            "categories desc",
            "changeKey",
            "changeKey desc",
            "createdDateTime",
            "createdDateTime desc",
            "lastModifiedDateTime",
            "lastModifiedDateTime desc",
            "assistantName",
            "assistantName desc",
            "birthday",
            "birthday desc",
            "businessAddress",
            "businessAddress desc",
            "businessHomePage",
            "businessHomePage desc",
            "businessPhones",
            "businessPhones desc",
            "children",
            "children desc",
            "companyName",
            "companyName desc",
            "department",
            "department desc",
            "displayName",
            "displayName desc",
            "emailAddresses",
            "emailAddresses desc",
            "fileAs",
            "fileAs desc",
            "generation",
            "generation desc",
            "givenName",
            "givenName desc",
            "homeAddress",
            "homeAddress desc",
            "homePhones",
            "homePhones desc",
            "imAddresses",
            "imAddresses desc",
            "initials",
            "initials desc",
            "jobTitle",
            "jobTitle desc",
            "manager",
            "manager desc",
            "middleName",
            "middleName desc",
            "mobilePhone",
            "mobilePhone desc",
            "nickName",
            "nickName desc",
            "officeLocation",
            "officeLocation desc",
            "otherAddress",
            "otherAddress desc",
            "parentFolderId",
            "parentFolderId desc",
            "personalNotes",
            "personalNotes desc",
            "profession",
            "profession desc",
            "spouseName",
            "spouseName desc",
            "surname",
            "surname desc",
            "title",
            "title desc",
            "yomiCompanyName",
            "yomiCompanyName desc",
            "yomiGivenName",
            "yomiGivenName desc",
            "yomiSurname",
            "yomiSurname desc"
          ],
          "type": "string"
        },
        "type": "array",
        "uniqueItems": true,
        "description": "Order items by property values"
      },
      "user-id": {
        "type": "string",
        "description": "key: id of user"
      }
    },
    "required": [
      "user-id"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://graph.microsoft.com/v1.0/users/{user-id}/contacts/microsoft.graph.delta(){?$top,$skip,$search,$filter,$count,$select,$orderby}"
    }
  },
  "responses": {
    "2XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Base delta function response"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**@odata.deltaLink**",
            "**@odata.nextLink**",
            "**value**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "4XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**error**",
              {
                "$ul": [
                  "**code**",
                  "**details**",
                  [
                    "**innererror**",
                    {
                      "$ul": [
                        "**@odata.type**",
                        "**Date**: Date when the error occured.",
                        "**client-request-id**: Client request Id as sent by the client application.",
                        "**request-id**: Request Id as tracked internally by the service"
                      ]
                    }
                  ],
                  "**message**",
                  "**target**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "5XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**error**",
              {
                "$ul": [
                  "**code**",
                  "**details**",
                  [
                    "**innererror**",
                    {
                      "$ul": [
                        "**@odata.type**",
                        "**Date**: Date when the error occured.",
                        "**client-request-id**: Client request Id as sent by the client application.",
                        "**request-id**: Request Id as tracked internally by the service"
                      ]
                    }
                  ],
                  "**message**",
                  "**target**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
