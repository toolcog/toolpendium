{
  "name": "search_query",
  "description": "Invoke action query",
  "parameters": {
    "type": "object",
    "properties": {
      "body": {
        "properties": {
          "requests": {
            "items": {
              "$ref": "#/$defs/microsoft.graph.searchRequest"
            },
            "type": "array"
          }
        },
        "type": "object",
        "description": "Action parameters"
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "microsoft.graph.searchRequest": {
        "properties": {
          "@odata.type": {
            "type": "string"
          },
          "aggregationFilters": {
            "items": {
              "nullable": true,
              "type": "string"
            },
            "type": "array"
          },
          "aggregations": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/$defs/microsoft.graph.aggregationOption"
                },
                {
                  "nullable": true,
                  "type": "object"
                }
              ]
            },
            "type": "array"
          },
          "contentSources": {
            "items": {
              "nullable": true,
              "type": "string"
            },
            "type": "array"
          },
          "enableTopResults": {
            "nullable": true,
            "type": "boolean"
          },
          "entityTypes": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/$defs/microsoft.graph.entityType"
                },
                {
                  "nullable": true,
                  "type": "object"
                }
              ]
            },
            "type": "array"
          },
          "fields": {
            "items": {
              "nullable": true,
              "type": "string"
            },
            "type": "array"
          },
          "from": {
            "format": "int32",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer"
          },
          "query": {
            "$ref": "#/$defs/microsoft.graph.searchQuery"
          },
          "queryAlterationOptions": {
            "anyOf": [
              {
                "$ref": "#/$defs/microsoft.graph.searchAlterationOptions"
              },
              {
                "nullable": true,
                "type": "object"
              }
            ]
          },
          "region": {
            "nullable": true,
            "type": "string"
          },
          "resultTemplateOptions": {
            "anyOf": [
              {
                "$ref": "#/$defs/microsoft.graph.resultTemplateOption"
              },
              {
                "nullable": true,
                "type": "object"
              }
            ]
          },
          "sharePointOneDriveOptions": {
            "anyOf": [
              {
                "$ref": "#/$defs/microsoft.graph.sharePointOneDriveOptions"
              },
              {
                "nullable": true,
                "type": "object"
              }
            ]
          },
          "size": {
            "format": "int32",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer"
          },
          "sortProperties": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/$defs/microsoft.graph.sortProperty"
                },
                {
                  "nullable": true,
                  "type": "object"
                }
              ]
            },
            "type": "array"
          }
        },
        "required": [
          "@odata.type"
        ],
        "title": "searchRequest",
        "type": "object"
      },
      "microsoft.graph.aggregationOption": {
        "properties": {
          "@odata.type": {
            "type": "string"
          },
          "bucketDefinition": {
            "$ref": "#/$defs/microsoft.graph.bucketAggregationDefinition"
          },
          "field": {
            "description": "Computes aggregation on the field while the field exists in current entity type. Required.",
            "type": "string"
          },
          "size": {
            "description": "The number of searchBucket resources to be returned. This is not required when the range is provided manually in the search request. Optional.",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "@odata.type"
        ],
        "title": "aggregationOption",
        "type": "object"
      },
      "microsoft.graph.bucketAggregationDefinition": {
        "properties": {
          "@odata.type": {
            "type": "string"
          },
          "isDescending": {
            "description": "True to specify the sort order as descending. The default is false, with the sort order as ascending. Optional.",
            "nullable": true,
            "type": "boolean"
          },
          "minimumCount": {
            "description": "The minimum number of items that should be present in the aggregation to be returned in a bucket. Optional.",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "nullable": true,
            "type": "integer"
          },
          "prefixFilter": {
            "description": "A filter to define a matching criteria. The key should start with the specified prefix to be returned in the response. Optional.",
            "nullable": true,
            "type": "string"
          },
          "ranges": {
            "description": "Specifies the manual ranges to compute the aggregations. This is only valid for non-string refiners of date or numeric type. Optional.",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/$defs/microsoft.graph.bucketAggregationRange"
                },
                {
                  "nullable": true,
                  "type": "object"
                }
              ]
            },
            "type": "array"
          },
          "sortBy": {
            "$ref": "#/$defs/microsoft.graph.bucketAggregationSortProperty"
          }
        },
        "required": [
          "@odata.type"
        ],
        "title": "bucketAggregationDefinition",
        "type": "object"
      },
      "microsoft.graph.bucketAggregationRange": {
        "properties": {
          "@odata.type": {
            "type": "string"
          },
          "from": {
            "description": "Defines the lower bound from which to compute the aggregation. This can be a numeric value or a string representation of a date using the YYYY-MM-DDTHH:mm:ss.sssZ format. Required.",
            "type": "string"
          },
          "to": {
            "description": "Defines the upper bound up to which to compute the aggregation. This can be a numeric value or a string representation of a date using the YYYY-MM-DDTHH:mm:ss.sssZ format. Required.",
            "type": "string"
          }
        },
        "required": [
          "@odata.type"
        ],
        "title": "bucketAggregationRange",
        "type": "object"
      },
      "microsoft.graph.bucketAggregationSortProperty": {
        "enum": [
          "count",
          "keyAsString",
          "keyAsNumber",
          "unknownFutureValue"
        ],
        "title": "bucketAggregationSortProperty",
        "type": "string"
      },
      "microsoft.graph.entityType": {
        "enum": [
          "event",
          "message",
          "driveItem",
          "externalItem",
          "site",
          "list",
          "listItem",
          "drive",
          "unknownFutureValue",
          "chatMessage"
        ],
        "title": "entityType",
        "type": "string"
      },
      "microsoft.graph.searchQuery": {
        "properties": {
          "@odata.type": {
            "type": "string"
          },
          "queryString": {
            "description": "The search query containing the search terms. Required.",
            "type": "string"
          }
        },
        "required": [
          "@odata.type"
        ],
        "title": "searchQuery",
        "type": "object"
      },
      "microsoft.graph.searchAlterationOptions": {
        "properties": {
          "@odata.type": {
            "type": "string"
          },
          "enableModification": {
            "description": "Indicates whether spelling modifications are enabled. If enabled, the user will get the search results for the corrected query in case of no results for the original query with typos. The response will also include the spelling modification information in the queryAlterationResponse property. Optional.",
            "nullable": true,
            "type": "boolean"
          },
          "enableSuggestion": {
            "description": "Indicates whether spelling suggestions are enabled. If enabled, the user will get the search results for the original search query and suggestions for spelling correction in the queryAlterationResponse property of the response for the typos in the query. Optional.",
            "nullable": true,
            "type": "boolean"
          }
        },
        "required": [
          "@odata.type"
        ],
        "title": "searchAlterationOptions",
        "type": "object"
      },
      "microsoft.graph.resultTemplateOption": {
        "properties": {
          "@odata.type": {
            "type": "string"
          },
          "enableResultTemplate": {
            "description": "Indicates whether search display layouts are enabled. If enabled, the user will get the result template to render the search results content in the resultTemplates property of the response. The result template is based on Adaptive Cards. Optional.",
            "nullable": true,
            "type": "boolean"
          }
        },
        "required": [
          "@odata.type"
        ],
        "title": "resultTemplateOption",
        "type": "object"
      },
      "microsoft.graph.sharePointOneDriveOptions": {
        "properties": {
          "@odata.type": {
            "type": "string"
          },
          "includeContent": {
            "anyOf": [
              {
                "$ref": "#/$defs/microsoft.graph.searchContent"
              },
              {
                "nullable": true,
                "type": "object"
              }
            ]
          }
        },
        "required": [
          "@odata.type"
        ],
        "title": "sharePointOneDriveOptions",
        "type": "object"
      },
      "microsoft.graph.searchContent": {
        "enum": [
          "sharedContent",
          "privateContent",
          "unknownFutureValue"
        ],
        "title": "searchContent",
        "type": "string"
      },
      "microsoft.graph.sortProperty": {
        "properties": {
          "@odata.type": {
            "type": "string"
          },
          "isDescending": {
            "description": "True if the sort order is descending. Default is false, with the sort order as ascending. Optional.",
            "nullable": true,
            "type": "boolean"
          },
          "name": {
            "description": "The name of the property to sort on. Required.",
            "type": "string"
          }
        },
        "required": [
          "@odata.type"
        ],
        "title": "sortProperty",
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://graph.microsoft.com/v1.0/search/microsoft.graph.query"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "2XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Base collection pagination and count responses"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**@odata.count**",
            "**@odata.nextLink**",
            "**value**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "4XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**error**",
              {
                "$ul": [
                  "**code**",
                  "**details**",
                  [
                    "**innererror**",
                    {
                      "$ul": [
                        "**@odata.type**",
                        "**Date**: Date when the error occured.",
                        "**client-request-id**: Client request Id as sent by the client application.",
                        "**request-id**: Request Id as tracked internally by the service"
                      ]
                    }
                  ],
                  "**message**",
                  "**target**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "5XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**error**",
              {
                "$ul": [
                  "**code**",
                  "**details**",
                  [
                    "**innererror**",
                    {
                      "$ul": [
                        "**@odata.type**",
                        "**Date**: Date when the error occured.",
                        "**client-request-id**: Client request Id as sent by the client application.",
                        "**request-id**: Request Id as tracked internally by the service"
                      ]
                    }
                  ],
                  "**message**",
                  "**target**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
