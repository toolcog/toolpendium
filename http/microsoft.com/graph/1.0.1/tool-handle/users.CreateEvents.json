{
  "name": "users_CreateEvents",
  "description": "Create an event in the user's default calendar or specified calendar. By default, the **allowNewTimeProposals** property is set to true when an event is created, which means invitees can propose a different date/time for the event. See Propose new meeting times for more information on how to propose a time, and how to receive and accept a new time proposal. You can specify the time zone for each of the start and end times of the event as part of their values, because the \n**start** and **end** properties are of dateTimeTimeZone type. First find the supported time zones to make sure you set only time zones that have been configured for the user's mailbox server.  When an event is sent, the server sends invitations to all the attendees. **Setting the location in an event** An Exchange administrator can set up a mailbox and an email address for a resource such as a meeting room, or equipment \nlike a projector. Users can then invite the resource as an attendee to a meeting. On behalf of the resource, the server accepts or rejects \nthe meeting request based on the free/busy schedule of the resource. \nIf the server accepts a meeting for the resource, it creates an event for the meeting in the resource's calendar. If the meeting is rescheduled, \nthe server automatically updates the event in the resource's calendar. Another advantage of setting up a mailbox for a resource is to control scheduling of the resource, for example, only executives\nor their delegates can book a private meeting room. If you're organizing an event that involves a meeting location: Additionally, if the meeting location has been set up as a resource, or if the event involves some equipment that has been set up as a resource:",
  "parameters": {
    "type": "object",
    "properties": {
      "user-id": {
        "type": "string",
        "description": "key: id of user"
      },
      "body": {
        "$ref": "#/components/schemas/microsoft.graph.event",
        "description": "New navigation property"
      }
    },
    "required": [
      "user-id",
      "body"
    ]
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://graph.microsoft.com/v1.0/users/{user-id}/events"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "2XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "entity"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**@odata.type** (default: #microsoft.graph.event)",
            "**id**: The unique idenfier for an entity. Read-only.",
            "**categories**: The categories associated with the item",
            "**changeKey**: Identifies the version of the item. Every time the item is changed, changeKey changes as well. This allows Exchange to apply changes to the correct version of the object. Read-only.",
            "**createdDateTime**: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z",
            "**lastModifiedDateTime**: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z",
            "**allowNewTimeProposals**: true if the meeting organizer allows invitees to propose a new time when responding; otherwise, false. Optional. Default is true.",
            "**attachments**: The collection of FileAttachment, ItemAttachment, and referenceAttachment attachments for the event. Navigation property. Read-only. Nullable.",
            "**attendees**: The collection of attendees for the event.",
            "**body**: The body of the message associated with the event. It can be in HTML or text format.",
            "**bodyPreview**: The preview of the message associated with the event. It is in text format.",
            "**calendar**: The calendar that contains the event. Navigation property. Read-only.",
            "**end**: The date, time, and time zone that the event ends. By default, the end time is in UTC.",
            "**extensions**: The collection of open extensions defined for the event. Nullable.",
            "**hasAttachments**: Set to true if the event has attachments.",
            "**hideAttendees**: When set to true, each attendee only sees themselves in the meeting request and meeting Tracking list. Default is false.",
            "**iCalUId**: A unique identifier for an event across calendars. This ID is different for each occurrence in a recurring series. Read-only.",
            "**importance**",
            "**instances**: The occurrences of a recurring series, if the event is a series master. This property includes occurrences that are part of the recurrence pattern, and exceptions that have been modified, but does not include occurrences that have been cancelled from the series. Navigation property. Read-only. Nullable.",
            "**isAllDay**",
            "**isCancelled**",
            "**isDraft**",
            "**isOnlineMeeting**",
            "**isOrganizer**",
            "**isReminderOn**",
            "**location**",
            "**locations**",
            "**multiValueExtendedProperties**: The collection of multi-value extended properties defined for the event. Read-only. Nullable.",
            "**onlineMeeting**",
            "**onlineMeetingProvider**",
            "**onlineMeetingUrl**",
            "**organizer**",
            "**originalEndTimeZone**",
            "**originalStart**",
            "**originalStartTimeZone**",
            "**recurrence**",
            "**reminderMinutesBeforeStart**",
            "**responseRequested**",
            "**responseStatus**",
            "**sensitivity**",
            "**seriesMasterId**",
            "**showAs**",
            "**singleValueExtendedProperties**: The collection of single-value extended properties defined for the event. Read-only. Nullable.",
            "**start**",
            "**subject**",
            "**transactionId**",
            "**type**",
            "**webLink**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "4XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**error**",
              {
                "$ul": [
                  "**code**",
                  "**details**",
                  [
                    "**innererror**",
                    {
                      "$ul": [
                        "**@odata.type**",
                        "**Date**: Date when the error occured.",
                        "**client-request-id**: Client request Id as sent by the client application.",
                        "**request-id**: Request Id as tracked internally by the service"
                      ]
                    }
                  ],
                  "**message**",
                  "**target**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "5XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**error**",
              {
                "$ul": [
                  "**code**",
                  "**details**",
                  [
                    "**innererror**",
                    {
                      "$ul": [
                        "**@odata.type**",
                        "**Date**: Date when the error occured.",
                        "**client-request-id**: Client request Id as sent by the client application.",
                        "**request-id**: Request Id as tracked internally by the service"
                      ]
                    }
                  ],
                  "**message**",
                  "**target**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
