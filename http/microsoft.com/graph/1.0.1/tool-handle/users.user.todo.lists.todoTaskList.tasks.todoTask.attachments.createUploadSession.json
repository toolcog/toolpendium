{
  "name": "users_user_todo_lists_todoTaskList_tasks_todoTask_attachments_createUploadSession",
  "description": "Create an upload session to iteratively upload ranges of a file as an attachment to a todoTask. As part of the response, this action returns an upload URL that you can use in subsequent sequential `PUT` queries. The request headers for each `PUT` operation let you specify the exact range of bytes to be uploaded. This allows the transfer to be resumed, in case the network connection is dropped during the upload. The following are the steps to attach a file to a Microsoft To Do task using an upload session: For an example that describes the end-to-end attachment process, see attach files to a To Do task.",
  "parameters": {
    "type": "object",
    "properties": {
      "user-id": {
        "type": "string",
        "description": "key: id of user"
      },
      "todoTaskList-id": {
        "type": "string",
        "description": "key: id of todoTaskList"
      },
      "todoTask-id": {
        "type": "string",
        "description": "key: id of todoTask"
      },
      "body": {
        "properties": {
          "attachmentInfo": {
            "$ref": "#/$defs/microsoft.graph.attachmentInfo"
          }
        },
        "type": "object",
        "description": "Action parameters"
      }
    },
    "required": [
      "user-id",
      "todoTaskList-id",
      "todoTask-id",
      "body"
    ],
    "$defs": {
      "microsoft.graph.attachmentInfo": {
        "properties": {
          "@odata.type": {
            "type": "string"
          },
          "attachmentType": {
            "anyOf": [
              {
                "$ref": "#/$defs/microsoft.graph.attachmentType"
              },
              {
                "nullable": true,
                "type": "object"
              }
            ],
            "description": "The type of the attachment. The possible values are: file, item, reference. Required."
          },
          "contentType": {
            "description": "The nature of the data in the attachment. Optional.",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "The display name of the attachment. This can be a descriptive string and does not have to be the actual file name. Required.",
            "nullable": true,
            "type": "string"
          },
          "size": {
            "description": "The length of the attachment in bytes. Required.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "@odata.type"
        ],
        "title": "attachmentInfo",
        "type": "object"
      },
      "microsoft.graph.attachmentType": {
        "enum": [
          "file",
          "item",
          "reference"
        ],
        "title": "attachmentType",
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://graph.microsoft.com/v1.0/users/{user-id}/todo/lists/{todoTaskList-id}/tasks/{todoTask-id}/attachments/microsoft.graph.createUploadSession"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "2XX": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "4XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**error**",
              {
                "$ul": [
                  "**code**",
                  "**details**",
                  [
                    "**innererror**",
                    {
                      "$ul": [
                        "**@odata.type**",
                        "**Date**: Date when the error occured.",
                        "**client-request-id**: Client request Id as sent by the client application.",
                        "**request-id**: Request Id as tracked internally by the service"
                      ]
                    }
                  ],
                  "**message**",
                  "**target**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "5XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**error**",
              {
                "$ul": [
                  "**code**",
                  "**details**",
                  [
                    "**innererror**",
                    {
                      "$ul": [
                        "**@odata.type**",
                        "**Date**: Date when the error occured.",
                        "**client-request-id**: Client request Id as sent by the client application.",
                        "**request-id**: Request Id as tracked internally by the service"
                      ]
                    }
                  ],
                  "**message**",
                  "**target**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
