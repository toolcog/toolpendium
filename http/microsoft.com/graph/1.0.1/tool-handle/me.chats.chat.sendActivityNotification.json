{
  "name": "me_chats_chat_sendActivityNotification",
  "description": "Send an activity feed notification in scope of a chat. For more details about sending notifications and the requirements for doing so, see sending Teams activity notifications.",
  "parameters": {
    "type": "object",
    "properties": {
      "chat-id": {
        "type": "string",
        "description": "key: id of chat"
      },
      "body": {
        "properties": {
          "activityType": {
            "nullable": true,
            "type": "string"
          },
          "chainId": {
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "previewText": {
            "anyOf": [
              {
                "$ref": "#/$defs/microsoft.graph.itemBody"
              },
              {
                "nullable": true,
                "type": "object"
              }
            ]
          },
          "recipient": {
            "anyOf": [
              {
                "$ref": "#/$defs/microsoft.graph.teamworkNotificationRecipient"
              },
              {
                "nullable": true,
                "type": "object"
              }
            ]
          },
          "templateParameters": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/$defs/microsoft.graph.keyValuePair"
                },
                {
                  "nullable": true,
                  "type": "object"
                }
              ]
            },
            "type": "array"
          },
          "topic": {
            "anyOf": [
              {
                "$ref": "#/$defs/microsoft.graph.teamworkActivityTopic"
              },
              {
                "nullable": true,
                "type": "object"
              }
            ]
          }
        },
        "type": "object",
        "description": "Action parameters"
      }
    },
    "required": [
      "chat-id",
      "body"
    ],
    "$defs": {
      "microsoft.graph.itemBody": {
        "properties": {
          "@odata.type": {
            "type": "string"
          },
          "content": {
            "description": "The content of the item.",
            "nullable": true,
            "type": "string"
          },
          "contentType": {
            "anyOf": [
              {
                "$ref": "#/$defs/microsoft.graph.bodyType"
              },
              {
                "nullable": true,
                "type": "object"
              }
            ],
            "description": "The type of the content. Possible values are text and html."
          }
        },
        "required": [
          "@odata.type"
        ],
        "title": "itemBody",
        "type": "object"
      },
      "microsoft.graph.bodyType": {
        "enum": [
          "text",
          "html"
        ],
        "title": "bodyType",
        "type": "string"
      },
      "microsoft.graph.teamworkNotificationRecipient": {
        "discriminator": {
          "mapping": {
            "#microsoft.graph.aadUserNotificationRecipient": "#/components/schemas/microsoft.graph.aadUserNotificationRecipient",
            "#microsoft.graph.channelMembersNotificationRecipient": "#/components/schemas/microsoft.graph.channelMembersNotificationRecipient",
            "#microsoft.graph.chatMembersNotificationRecipient": "#/components/schemas/microsoft.graph.chatMembersNotificationRecipient",
            "#microsoft.graph.teamMembersNotificationRecipient": "#/components/schemas/microsoft.graph.teamMembersNotificationRecipient"
          },
          "propertyName": "@odata.type"
        },
        "properties": {
          "@odata.type": {
            "type": "string"
          }
        },
        "required": [
          "@odata.type"
        ],
        "title": "teamworkNotificationRecipient",
        "type": "object"
      },
      "microsoft.graph.keyValuePair": {
        "properties": {
          "@odata.type": {
            "type": "string"
          },
          "name": {
            "description": "Name for this key-value pair",
            "type": "string"
          },
          "value": {
            "description": "Value for this key-value pair",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "@odata.type"
        ],
        "title": "keyValuePair",
        "type": "object"
      },
      "microsoft.graph.teamworkActivityTopic": {
        "properties": {
          "@odata.type": {
            "type": "string"
          },
          "source": {
            "anyOf": [
              {
                "$ref": "#/$defs/microsoft.graph.teamworkActivityTopicSource"
              },
              {
                "nullable": true,
                "type": "object"
              }
            ],
            "description": "Type of source. Possible values are: entityUrl, text. For supported Microsoft Graph URLs, use entityUrl. For custom text, use text."
          },
          "value": {
            "description": "The topic value. If the value of the source property is entityUrl, this must be a Microsoft Graph URL. If the vaule is text, this must be a plain text value.",
            "type": "string"
          },
          "webUrl": {
            "description": "The link the user clicks when they select the notification. Optional when source is entityUrl; required when source is text.",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "@odata.type"
        ],
        "title": "teamworkActivityTopic",
        "type": "object"
      },
      "microsoft.graph.teamworkActivityTopicSource": {
        "enum": [
          "entityUrl",
          "text"
        ],
        "title": "teamworkActivityTopicSource",
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://graph.microsoft.com/v1.0/me/chats/{chat-id}/microsoft.graph.sendActivityNotification"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "4XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**error**",
              {
                "$ul": [
                  "**code**",
                  "**details**",
                  [
                    "**innererror**",
                    {
                      "$ul": [
                        "**@odata.type**",
                        "**Date**: Date when the error occured.",
                        "**client-request-id**: Client request Id as sent by the client application.",
                        "**request-id**: Request Id as tracked internally by the service"
                      ]
                    }
                  ],
                  "**message**",
                  "**target**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "5XX": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**error**",
              {
                "$ul": [
                  "**code**",
                  "**details**",
                  [
                    "**innererror**",
                    {
                      "$ul": [
                        "**@odata.type**",
                        "**Date**: Date when the error occured.",
                        "**client-request-id**: Client request Id as sent by the client application.",
                        "**request-id**: Request Id as tracked internally by the service"
                      ]
                    }
                  ],
                  "**message**",
                  "**target**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
