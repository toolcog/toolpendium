{
  "name": "negotiableQuoteNegotiableCartRepositoryV1SavePut",
  "description": "Save quote",
  "parameters": {
    "type": "object",
    "properties": {
      "quoteId": {
        "type": "string"
      },
      "body": {
        "properties": {
          "quote": {
            "$ref": "#/$defs/quote-data-cart-interface"
          }
        },
        "required": [
          "quote"
        ],
        "type": "object",
        "xml": {
          "name": "request"
        }
      }
    },
    "required": [
      "quoteId"
    ],
    "$defs": {
      "quote-data-cart-interface": {
        "description": "Interface CartInterface",
        "properties": {
          "billing_address": {
            "$ref": "#/$defs/quote-data-address-interface"
          },
          "converted_at": {
            "description": "Cart conversion date and time. Otherwise, null.",
            "type": "string"
          },
          "created_at": {
            "description": "Cart creation date and time. Otherwise, null.",
            "type": "string"
          },
          "currency": {
            "$ref": "#/$defs/quote-data-currency-interface"
          },
          "customer": {
            "$ref": "#/$defs/customer-data-customer-interface"
          },
          "customer_is_guest": {
            "description": "For guest customers, false for logged in customers",
            "type": "boolean"
          },
          "customer_note": {
            "description": "Notice text",
            "type": "string"
          },
          "customer_note_notify": {
            "description": "Customer notification flag",
            "type": "boolean"
          },
          "customer_tax_class_id": {
            "description": "Customer tax class ID.",
            "type": "integer"
          },
          "extension_attributes": {
            "$ref": "#/$defs/quote-data-cart-extension-interface"
          },
          "id": {
            "description": "Cart/quote ID.",
            "type": "integer"
          },
          "is_active": {
            "description": "Active status flag value. Otherwise, null.",
            "type": "boolean"
          },
          "is_virtual": {
            "description": "Virtual flag value. Otherwise, null.",
            "type": "boolean"
          },
          "items": {
            "description": "Array of items. Otherwise, null.",
            "items": {
              "$ref": "#/$defs/quote-data-cart-item-interface"
            },
            "type": "array"
          },
          "items_count": {
            "description": "Number of different items or products in the cart. Otherwise, null.",
            "type": "integer"
          },
          "items_qty": {
            "description": "Total quantity of all cart items. Otherwise, null.",
            "type": "number"
          },
          "orig_order_id": {
            "description": "Original order ID. Otherwise, null.",
            "type": "integer"
          },
          "reserved_order_id": {
            "description": "Reserved order ID. Otherwise, null.",
            "type": "string"
          },
          "store_id": {
            "description": "Store identifier",
            "type": "integer"
          },
          "updated_at": {
            "description": "Cart last update date and time. Otherwise, null.",
            "type": "string"
          }
        },
        "required": [
          "id",
          "customer",
          "store_id"
        ],
        "type": "object"
      },
      "quote-data-address-interface": {
        "description": "Interface AddressInterface",
        "properties": {
          "city": {
            "description": "City name",
            "type": "string"
          },
          "company": {
            "description": "Company",
            "type": "string"
          },
          "country_id": {
            "description": "Country id",
            "type": "string"
          },
          "custom_attributes": {
            "description": "Custom attributes values.",
            "items": {
              "$ref": "#/$defs/framework-attribute-interface"
            },
            "type": "array"
          },
          "customer_address_id": {
            "description": "Customer address id",
            "type": "integer"
          },
          "customer_id": {
            "description": "Customer id",
            "type": "integer"
          },
          "email": {
            "description": "Billing/shipping email",
            "type": "string"
          },
          "extension_attributes": {
            "$ref": "#/$defs/quote-data-address-extension-interface"
          },
          "fax": {
            "description": "Fax number",
            "type": "string"
          },
          "firstname": {
            "description": "First name",
            "type": "string"
          },
          "id": {
            "description": "Id",
            "type": "integer"
          },
          "lastname": {
            "description": "Last name",
            "type": "string"
          },
          "middlename": {
            "description": "Middle name",
            "type": "string"
          },
          "postcode": {
            "description": "Postcode",
            "type": "string"
          },
          "prefix": {
            "description": "Prefix",
            "type": "string"
          },
          "region": {
            "description": "Region name",
            "type": "string"
          },
          "region_code": {
            "description": "Region code",
            "type": "string"
          },
          "region_id": {
            "description": "Region id",
            "type": "integer"
          },
          "same_as_billing": {
            "description": "Same as billing flag",
            "type": "integer"
          },
          "save_in_address_book": {
            "description": "Save in address book flag",
            "type": "integer"
          },
          "street": {
            "description": "Street",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "suffix": {
            "description": "Suffix",
            "type": "string"
          },
          "telephone": {
            "description": "Telephone number",
            "type": "string"
          },
          "vat_id": {
            "description": "Vat id",
            "type": "string"
          }
        },
        "required": [
          "region",
          "region_id",
          "region_code",
          "country_id",
          "street",
          "telephone",
          "postcode",
          "city",
          "firstname",
          "lastname",
          "email"
        ],
        "type": "object"
      },
      "framework-attribute-interface": {
        "description": "Interface for custom attribute value.",
        "properties": {
          "attribute_code": {
            "description": "Attribute code",
            "type": "string"
          },
          "value": {
            "description": "Attribute value",
            "type": "string"
          }
        },
        "required": [
          "attribute_code",
          "value"
        ],
        "type": "object"
      },
      "quote-data-address-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\AddressInterface",
        "properties": {
          "checkout_fields": {
            "items": {
              "$ref": "#/$defs/framework-attribute-interface"
            },
            "type": "array"
          },
          "gift_registry_id": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "quote-data-currency-interface": {
        "description": "Interface CurrencyInterface",
        "properties": {
          "base_currency_code": {
            "description": "Base currency code",
            "type": "string"
          },
          "base_to_global_rate": {
            "description": "Base currency to global currency rate",
            "type": "number"
          },
          "base_to_quote_rate": {
            "description": "Base currency to quote currency rate",
            "type": "number"
          },
          "extension_attributes": {
            "$ref": "#/$defs/quote-data-currency-extension-interface"
          },
          "global_currency_code": {
            "description": "Global currency code",
            "type": "string"
          },
          "quote_currency_code": {
            "description": "Quote currency code",
            "type": "string"
          },
          "store_currency_code": {
            "description": "Store currency code",
            "type": "string"
          },
          "store_to_base_rate": {
            "description": "Store currency to base currency rate",
            "type": "number"
          },
          "store_to_quote_rate": {
            "description": "Store currency to quote currency rate",
            "type": "number"
          }
        },
        "type": "object"
      },
      "quote-data-currency-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\CurrencyInterface",
        "type": "object"
      },
      "customer-data-customer-interface": {
        "description": "Customer interface.",
        "properties": {
          "addresses": {
            "description": "Customer addresses.",
            "items": {
              "$ref": "#/$defs/customer-data-address-interface"
            },
            "type": "array"
          },
          "confirmation": {
            "description": "Confirmation",
            "type": "string"
          },
          "created_at": {
            "description": "Created at time",
            "type": "string"
          },
          "created_in": {
            "description": "Created in area",
            "type": "string"
          },
          "custom_attributes": {
            "description": "Custom attributes values.",
            "items": {
              "$ref": "#/$defs/framework-attribute-interface"
            },
            "type": "array"
          },
          "default_billing": {
            "description": "Default billing address id",
            "type": "string"
          },
          "default_shipping": {
            "description": "Default shipping address id",
            "type": "string"
          },
          "disable_auto_group_change": {
            "description": "Disable auto group change flag.",
            "type": "integer"
          },
          "dob": {
            "description": "Date of birth",
            "type": "string"
          },
          "email": {
            "description": "Email address",
            "type": "string"
          },
          "extension_attributes": {
            "$ref": "#/$defs/customer-data-customer-extension-interface"
          },
          "firstname": {
            "description": "First name",
            "type": "string"
          },
          "gender": {
            "description": "Gender",
            "type": "integer"
          },
          "group_id": {
            "description": "Group id",
            "type": "integer"
          },
          "id": {
            "description": "Customer id",
            "type": "integer"
          },
          "lastname": {
            "description": "Last name",
            "type": "string"
          },
          "middlename": {
            "description": "Middle name",
            "type": "string"
          },
          "prefix": {
            "description": "Prefix",
            "type": "string"
          },
          "store_id": {
            "description": "Store id",
            "type": "integer"
          },
          "suffix": {
            "description": "Suffix",
            "type": "string"
          },
          "taxvat": {
            "description": "Tax Vat",
            "type": "string"
          },
          "updated_at": {
            "description": "Updated at time",
            "type": "string"
          },
          "website_id": {
            "description": "Website id",
            "type": "integer"
          }
        },
        "required": [
          "email",
          "firstname",
          "lastname"
        ],
        "type": "object"
      },
      "customer-data-address-interface": {
        "description": "Customer address interface.",
        "properties": {
          "city": {
            "description": "City name",
            "type": "string"
          },
          "company": {
            "description": "Company",
            "type": "string"
          },
          "country_id": {
            "description": "Country code in ISO_3166-2 format",
            "type": "string"
          },
          "custom_attributes": {
            "description": "Custom attributes values.",
            "items": {
              "$ref": "#/$defs/framework-attribute-interface"
            },
            "type": "array"
          },
          "customer_id": {
            "description": "Customer ID",
            "type": "integer"
          },
          "default_billing": {
            "description": "If this address is default billing address",
            "type": "boolean"
          },
          "default_shipping": {
            "description": "If this address is default shipping address.",
            "type": "boolean"
          },
          "extension_attributes": {
            "$ref": "#/$defs/customer-data-address-extension-interface"
          },
          "fax": {
            "description": "Fax number",
            "type": "string"
          },
          "firstname": {
            "description": "First name",
            "type": "string"
          },
          "id": {
            "description": "ID",
            "type": "integer"
          },
          "lastname": {
            "description": "Last name",
            "type": "string"
          },
          "middlename": {
            "description": "Middle name",
            "type": "string"
          },
          "postcode": {
            "description": "Postcode",
            "type": "string"
          },
          "prefix": {
            "description": "Prefix",
            "type": "string"
          },
          "region": {
            "$ref": "#/$defs/customer-data-region-interface"
          },
          "region_id": {
            "description": "Region ID",
            "type": "integer"
          },
          "street": {
            "description": "Street",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "suffix": {
            "description": "Suffix",
            "type": "string"
          },
          "telephone": {
            "description": "Telephone number",
            "type": "string"
          },
          "vat_id": {
            "description": "Vat id",
            "type": "string"
          }
        },
        "type": "object"
      },
      "customer-data-address-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Customer\\Api\\Data\\AddressInterface",
        "type": "object"
      },
      "customer-data-region-interface": {
        "description": "Customer address region interface.",
        "properties": {
          "extension_attributes": {
            "$ref": "#/$defs/customer-data-region-extension-interface"
          },
          "region": {
            "description": "Region",
            "type": "string"
          },
          "region_code": {
            "description": "Region code",
            "type": "string"
          },
          "region_id": {
            "description": "Region id",
            "type": "integer"
          }
        },
        "required": [
          "region_code",
          "region",
          "region_id"
        ],
        "type": "object"
      },
      "customer-data-region-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Customer\\Api\\Data\\RegionInterface",
        "type": "object"
      },
      "customer-data-customer-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Customer\\Api\\Data\\CustomerInterface",
        "properties": {
          "amazon_id": {
            "type": "string"
          },
          "company_attributes": {
            "$ref": "#/$defs/company-data-company-customer-interface"
          },
          "is_subscribed": {
            "type": "boolean"
          },
          "vertex_customer_code": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "company-data-company-customer-interface": {
        "description": "Extended customer custom attributes interface.",
        "properties": {
          "company_id": {
            "description": "Company ID.",
            "type": "integer"
          },
          "customer_id": {
            "description": "Customer ID.",
            "type": "integer"
          },
          "extension_attributes": {
            "$ref": "#/$defs/company-data-company-customer-extension-interface"
          },
          "job_title": {
            "description": "Get job title.",
            "type": "string"
          },
          "status": {
            "description": "Customer status.",
            "type": "integer"
          },
          "telephone": {
            "description": "Get telephone.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "company-data-company-customer-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Company\\Api\\Data\\CompanyCustomerInterface",
        "type": "object"
      },
      "quote-data-cart-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\CartInterface",
        "properties": {
          "amazon_order_reference_id": {
            "type": "string"
          },
          "negotiable_quote": {
            "$ref": "#/$defs/negotiable-quote-data-negotiable-quote-interface"
          },
          "shipping_assignments": {
            "items": {
              "$ref": "#/$defs/quote-data-shipping-assignment-interface"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "negotiable-quote-data-negotiable-quote-interface": {
        "description": "Interface NegotiableQuoteInterface",
        "properties": {
          "applied_rule_ids": {
            "description": "Quote rules.",
            "type": "string"
          },
          "base_negotiated_total_price": {
            "description": "Quote negotiated total price in base currency.",
            "type": "number"
          },
          "base_original_total_price": {
            "description": "Quote original total price in base currency.",
            "type": "number"
          },
          "creator_id": {
            "description": "Quote creator id.",
            "type": "integer"
          },
          "creator_type": {
            "description": "Quote creator type.",
            "type": "integer"
          },
          "deleted_sku": {
            "description": "Deleted products sku.",
            "type": "string"
          },
          "email_notification_status": {
            "description": "Email notification status.",
            "type": "integer"
          },
          "expiration_period": {
            "description": "Expiration period.",
            "type": "string"
          },
          "extension_attributes": {
            "$ref": "#/$defs/negotiable-quote-data-negotiable-quote-extension-interface"
          },
          "has_unconfirmed_changes": {
            "description": "Has unconfirmed changes.",
            "type": "boolean"
          },
          "is_address_draft": {
            "description": "Is address draft.",
            "type": "boolean"
          },
          "is_customer_price_changed": {
            "description": "Customer price changes.",
            "type": "boolean"
          },
          "is_regular_quote": {
            "description": "Is regular quote.",
            "type": "boolean"
          },
          "is_shipping_tax_changed": {
            "description": "Shipping tax changes.",
            "type": "boolean"
          },
          "negotiated_price_type": {
            "description": "Negotiated price type.",
            "type": "integer"
          },
          "negotiated_price_value": {
            "description": "Negotiated price value.",
            "type": "number"
          },
          "negotiated_total_price": {
            "description": "Quote negotiated total price.",
            "type": "number"
          },
          "notifications": {
            "description": "Quote notifications.",
            "type": "integer"
          },
          "original_total_price": {
            "description": "Quote original total price.",
            "type": "number"
          },
          "quote_id": {
            "description": "Negotiable quote ID.",
            "type": "integer"
          },
          "quote_name": {
            "description": "Negotiable quote name.",
            "type": "string"
          },
          "shipping_price": {
            "description": "Proposed shipping price.",
            "type": "number"
          },
          "status": {
            "description": "Negotiable quote status.",
            "type": "string"
          }
        },
        "required": [
          "quote_id",
          "is_regular_quote",
          "status",
          "negotiated_price_type",
          "negotiated_price_value",
          "shipping_price",
          "quote_name",
          "expiration_period",
          "email_notification_status",
          "has_unconfirmed_changes",
          "is_shipping_tax_changed",
          "is_customer_price_changed",
          "notifications",
          "applied_rule_ids",
          "is_address_draft",
          "deleted_sku",
          "creator_id",
          "creator_type"
        ],
        "type": "object"
      },
      "negotiable-quote-data-negotiable-quote-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\NegotiableQuote\\Api\\Data\\NegotiableQuoteInterface",
        "type": "object"
      },
      "quote-data-shipping-assignment-interface": {
        "description": "Interface ShippingAssignmentInterface",
        "properties": {
          "extension_attributes": {
            "$ref": "#/$defs/quote-data-shipping-assignment-extension-interface"
          },
          "items": {
            "items": {
              "$ref": "#/$defs/quote-data-cart-item-interface"
            },
            "type": "array"
          },
          "shipping": {
            "$ref": "#/$defs/quote-data-shipping-interface"
          }
        },
        "required": [
          "shipping",
          "items"
        ],
        "type": "object"
      },
      "quote-data-shipping-assignment-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\ShippingAssignmentInterface",
        "type": "object"
      },
      "quote-data-cart-item-interface": {
        "description": "Interface CartItemInterface",
        "properties": {
          "extension_attributes": {
            "$ref": "#/$defs/quote-data-cart-item-extension-interface"
          },
          "item_id": {
            "description": "Item ID. Otherwise, null.",
            "type": "integer"
          },
          "name": {
            "description": "Product name. Otherwise, null.",
            "type": "string"
          },
          "price": {
            "description": "Product price. Otherwise, null.",
            "type": "number"
          },
          "product_option": {
            "$ref": "#/$defs/quote-data-product-option-interface"
          },
          "product_type": {
            "description": "Product type. Otherwise, null.",
            "type": "string"
          },
          "qty": {
            "description": "Product quantity.",
            "type": "number"
          },
          "quote_id": {
            "description": "Quote id.",
            "type": "string"
          },
          "sku": {
            "description": "Product SKU. Otherwise, null.",
            "type": "string"
          }
        },
        "required": [
          "qty",
          "quote_id"
        ],
        "type": "object"
      },
      "quote-data-cart-item-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\CartItemInterface",
        "properties": {
          "negotiable_quote_item": {
            "$ref": "#/$defs/negotiable-quote-data-negotiable-quote-item-interface"
          }
        },
        "type": "object"
      },
      "negotiable-quote-data-negotiable-quote-item-interface": {
        "description": "Interface CompanyQuoteConfigInterface",
        "properties": {
          "extension_attributes": {
            "$ref": "#/$defs/negotiable-quote-data-negotiable-quote-item-extension-interface"
          },
          "item_id": {
            "description": "Quote item id",
            "type": "integer"
          },
          "original_discount_amount": {
            "description": "Quote item original discount amount",
            "type": "number"
          },
          "original_price": {
            "description": "Quote item original price",
            "type": "number"
          },
          "original_tax_amount": {
            "description": "Quote item original tax amount",
            "type": "number"
          }
        },
        "required": [
          "item_id",
          "original_price",
          "original_tax_amount",
          "original_discount_amount"
        ],
        "type": "object"
      },
      "negotiable-quote-data-negotiable-quote-item-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\NegotiableQuote\\Api\\Data\\NegotiableQuoteItemInterface",
        "type": "object"
      },
      "quote-data-product-option-interface": {
        "description": "Product option interface",
        "properties": {
          "extension_attributes": {
            "$ref": "#/$defs/quote-data-product-option-extension-interface"
          }
        },
        "type": "object"
      },
      "quote-data-product-option-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\ProductOptionInterface",
        "properties": {
          "bundle_options": {
            "items": {
              "$ref": "#/$defs/bundle-data-bundle-option-interface"
            },
            "type": "array"
          },
          "configurable_item_options": {
            "items": {
              "$ref": "#/$defs/configurable-product-data-configurable-item-option-value-interface"
            },
            "type": "array"
          },
          "custom_options": {
            "items": {
              "$ref": "#/$defs/catalog-data-custom-option-interface"
            },
            "type": "array"
          },
          "downloadable_option": {
            "$ref": "#/$defs/downloadable-data-downloadable-option-interface"
          },
          "giftcard_item_option": {
            "$ref": "#/$defs/gift-card-data-gift-card-option-interface"
          }
        },
        "type": "object"
      },
      "bundle-data-bundle-option-interface": {
        "description": "Interface BundleOptionInterface",
        "properties": {
          "extension_attributes": {
            "$ref": "#/$defs/bundle-data-bundle-option-extension-interface"
          },
          "option_id": {
            "description": "Bundle option id.",
            "type": "integer"
          },
          "option_qty": {
            "description": "Bundle option quantity.",
            "type": "integer"
          },
          "option_selections": {
            "description": "Bundle option selection ids.",
            "items": {
              "type": "integer"
            },
            "type": "array"
          }
        },
        "required": [
          "option_id",
          "option_qty",
          "option_selections"
        ],
        "type": "object"
      },
      "bundle-data-bundle-option-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Bundle\\Api\\Data\\BundleOptionInterface",
        "type": "object"
      },
      "configurable-product-data-configurable-item-option-value-interface": {
        "description": "Interface ConfigurableItemOptionValueInterface",
        "properties": {
          "extension_attributes": {
            "$ref": "#/$defs/configurable-product-data-configurable-item-option-value-extension-interface"
          },
          "option_id": {
            "description": "Option SKU",
            "type": "string"
          },
          "option_value": {
            "description": "Item id",
            "type": "integer"
          }
        },
        "required": [
          "option_id"
        ],
        "type": "object"
      },
      "configurable-product-data-configurable-item-option-value-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\ConfigurableProduct\\Api\\Data\\ConfigurableItemOptionValueInterface",
        "type": "object"
      },
      "catalog-data-custom-option-interface": {
        "description": "Interface CustomOptionInterface",
        "properties": {
          "extension_attributes": {
            "$ref": "#/$defs/catalog-data-custom-option-extension-interface"
          },
          "option_id": {
            "description": "Option id",
            "type": "string"
          },
          "option_value": {
            "description": "Option value",
            "type": "string"
          }
        },
        "required": [
          "option_id",
          "option_value"
        ],
        "type": "object"
      },
      "catalog-data-custom-option-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\CustomOptionInterface",
        "properties": {
          "file_info": {
            "$ref": "#/$defs/framework-data-image-content-interface"
          }
        },
        "type": "object"
      },
      "framework-data-image-content-interface": {
        "description": "Image Content data interface",
        "properties": {
          "base64_encoded_data": {
            "description": "Media data (base64 encoded content)",
            "type": "string"
          },
          "name": {
            "description": "Image name",
            "type": "string"
          },
          "type": {
            "description": "MIME type",
            "type": "string"
          }
        },
        "required": [
          "base64_encoded_data",
          "type",
          "name"
        ],
        "type": "object"
      },
      "downloadable-data-downloadable-option-interface": {
        "description": "Downloadable Option",
        "properties": {
          "downloadable_links": {
            "description": "The list of downloadable links",
            "items": {
              "type": "integer"
            },
            "type": "array"
          }
        },
        "required": [
          "downloadable_links"
        ],
        "type": "object"
      },
      "gift-card-data-gift-card-option-interface": {
        "description": "Interface GiftCardOptionInterface",
        "properties": {
          "custom_giftcard_amount": {
            "description": "Gift card open amount value.",
            "type": "number"
          },
          "extension_attributes": {
            "$ref": "#/$defs/gift-card-data-gift-card-option-extension-interface"
          },
          "giftcard_amount": {
            "description": "Gift card amount.",
            "type": "string"
          },
          "giftcard_message": {
            "description": "Giftcard message.",
            "type": "string"
          },
          "giftcard_recipient_email": {
            "description": "Gift card recipient email.",
            "type": "string"
          },
          "giftcard_recipient_name": {
            "description": "Gift card recipient name.",
            "type": "string"
          },
          "giftcard_sender_email": {
            "description": "Gift card sender email.",
            "type": "string"
          },
          "giftcard_sender_name": {
            "description": "Gift card sender name.",
            "type": "string"
          }
        },
        "required": [
          "giftcard_amount",
          "giftcard_sender_name",
          "giftcard_recipient_name",
          "giftcard_sender_email",
          "giftcard_recipient_email"
        ],
        "type": "object"
      },
      "gift-card-data-gift-card-option-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\GiftCard\\Api\\Data\\GiftCardOptionInterface",
        "type": "object"
      },
      "quote-data-shipping-interface": {
        "description": "Interface ShippingInterface",
        "properties": {
          "address": {
            "$ref": "#/$defs/quote-data-address-interface"
          },
          "extension_attributes": {
            "$ref": "#/$defs/quote-data-shipping-extension-interface"
          },
          "method": {
            "description": "Shipping method",
            "type": "string"
          }
        },
        "required": [
          "address",
          "method"
        ],
        "type": "object"
      },
      "quote-data-shipping-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\ShippingInterface",
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "https://example.com/rest/default/V1/negotiableQuote/{quoteId}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**: Error code",
            "**errors**: Errors list",
            "**message**: Error message",
            "**parameters**: Error parameters list",
            "**trace**: Stack trace"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "default": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**: Error code",
            "**errors**: Errors list",
            "**message**: Error message",
            "**parameters**: Error parameters list",
            "**trace**: Stack trace"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
