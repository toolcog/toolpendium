{
  "name": "catalogInventoryStockRegistryV1GetStockItemBySkuGet",
  "description": "",
  "parameters": {
    "type": "object",
    "properties": {
      "productSku": {
        "type": "string"
      },
      "scopeId": {
        "type": "integer"
      }
    },
    "required": [
      "productSku"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://example.com/rest/default/V1/stockItems/{productSku}{?scopeId}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Interface StockItem",
        "**Key properties:**",
        {
          "$ul": [
            "**backorders**: Backorders status",
            "**enable_qty_increments**: Whether Quantity Increments is enabled",
            "**extension_attributes**: ExtensionInterface class for @see \\Magento\\CatalogInventory\\Api\\Data\\StockItemInterface",
            "**is_decimal_divided**",
            "**is_in_stock**: Stock Availability",
            "**is_qty_decimal**",
            "**item_id**",
            "**low_stock_date**",
            "**manage_stock**: Can Manage Stock",
            "**max_sale_qty**: Maximum Qty Allowed in Shopping Cart data wrapper",
            "**min_qty**: Minimal quantity available for item status in stock",
            "**min_sale_qty**: Minimum Qty Allowed in Shopping Cart or NULL when there is no limitation",
            "**notify_stock_qty**: Notify for Quantity Below data wrapper",
            "**product_id**",
            "**qty**",
            "**qty_increments**: Quantity Increments data wrapper",
            "**show_default_notification_message**",
            "**stock_id**: Stock identifier",
            "**stock_status_changed_auto**",
            "**use_config_backorders**",
            "**use_config_enable_qty_inc**",
            "**use_config_manage_stock**",
            "**use_config_max_sale_qty**",
            "**use_config_min_qty**",
            "**use_config_min_sale_qty**",
            "**use_config_notify_stock_qty**",
            "**use_config_qty_increments**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**: Error code",
            "**errors**: Errors list",
            "**message**: Error message",
            "**parameters**: Error parameters list",
            "**trace**: Stack trace"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**: Error code",
            "**errors**: Errors list",
            "**message**: Error message",
            "**parameters**: Error parameters list",
            "**trace**: Stack trace"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "default": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**: Error code",
            "**errors**: Errors list",
            "**message**: Error message",
            "**parameters**: Error parameters list",
            "**trace**: Stack trace"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
