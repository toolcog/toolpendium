{
  "name": "catalogProductAttributeRepositoryV1SavePut",
  "description": "Save attribute data",
  "parameters": {
    "type": "object",
    "properties": {
      "attributeCode": {
        "type": "string"
      },
      "body": {
        "properties": {
          "attribute": {
            "$ref": "#/$defs/catalog-data-product-attribute-interface"
          }
        },
        "required": [
          "attribute"
        ],
        "type": "object",
        "xml": {
          "name": "request"
        }
      }
    },
    "required": [
      "attributeCode"
    ],
    "$defs": {
      "catalog-data-product-attribute-interface": {
        "description": "",
        "properties": {
          "apply_to": {
            "description": "Apply to value for the element",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "attribute_code": {
            "description": "Code of the attribute.",
            "type": "string"
          },
          "attribute_id": {
            "description": "Id of the attribute.",
            "type": "integer"
          },
          "backend_model": {
            "description": "Backend model",
            "type": "string"
          },
          "backend_type": {
            "description": "Backend type.",
            "type": "string"
          },
          "custom_attributes": {
            "description": "Custom attributes values.",
            "items": {
              "$ref": "#/$defs/framework-attribute-interface"
            },
            "type": "array"
          },
          "default_frontend_label": {
            "description": "Frontend label for default store",
            "type": "string"
          },
          "default_value": {
            "description": "Default value for the element.",
            "type": "string"
          },
          "entity_type_id": {
            "description": "Entity type id",
            "type": "string"
          },
          "extension_attributes": {
            "$ref": "#/$defs/catalog-data-eav-attribute-extension-interface"
          },
          "frontend_class": {
            "description": "Frontend class of attribute",
            "type": "string"
          },
          "frontend_input": {
            "description": "HTML for input element.",
            "type": "string"
          },
          "frontend_labels": {
            "description": "Frontend label for each store",
            "items": {
              "$ref": "#/$defs/eav-data-attribute-frontend-label-interface"
            },
            "type": "array"
          },
          "is_comparable": {
            "description": "The attribute can be compared on the frontend",
            "type": "string"
          },
          "is_filterable": {
            "description": "It used in layered navigation",
            "type": "boolean"
          },
          "is_filterable_in_grid": {
            "description": "It is filterable in catalog product grid",
            "type": "boolean"
          },
          "is_filterable_in_search": {
            "description": "It is used in search results layered navigation",
            "type": "boolean"
          },
          "is_html_allowed_on_front": {
            "description": "The HTML tags are allowed on the frontend",
            "type": "boolean"
          },
          "is_required": {
            "description": "Attribute is required.",
            "type": "boolean"
          },
          "is_searchable": {
            "description": "The attribute can be used in Quick Search",
            "type": "string"
          },
          "is_unique": {
            "description": "This is a unique attribute",
            "type": "string"
          },
          "is_used_for_promo_rules": {
            "description": "The attribute can be used for promo rules",
            "type": "string"
          },
          "is_used_in_grid": {
            "description": "It is used in catalog product grid",
            "type": "boolean"
          },
          "is_user_defined": {
            "description": "Current attribute has been defined by a user.",
            "type": "boolean"
          },
          "is_visible": {
            "description": "Attribute is visible on frontend.",
            "type": "boolean"
          },
          "is_visible_in_advanced_search": {
            "description": "The attribute can be used in Advanced Search",
            "type": "string"
          },
          "is_visible_in_grid": {
            "description": "It is visible in catalog product grid",
            "type": "boolean"
          },
          "is_visible_on_front": {
            "description": "The attribute is visible on the frontend",
            "type": "string"
          },
          "is_wysiwyg_enabled": {
            "description": "WYSIWYG flag",
            "type": "boolean"
          },
          "note": {
            "description": "The note attribute for the element.",
            "type": "string"
          },
          "options": {
            "description": "Options of the attribute (key => value pairs for select)",
            "items": {
              "$ref": "#/$defs/eav-data-attribute-option-interface"
            },
            "type": "array"
          },
          "position": {
            "description": "Position",
            "type": "integer"
          },
          "scope": {
            "description": "Attribute scope",
            "type": "string"
          },
          "source_model": {
            "description": "Source model",
            "type": "string"
          },
          "used_for_sort_by": {
            "description": "It is used for sorting in product listing",
            "type": "boolean"
          },
          "used_in_product_listing": {
            "description": "The attribute can be used in product listing",
            "type": "string"
          },
          "validation_rules": {
            "description": "Validation rules.",
            "items": {
              "$ref": "#/$defs/eav-data-attribute-validation-rule-interface"
            },
            "type": "array"
          }
        },
        "required": [
          "attribute_code",
          "frontend_input",
          "entity_type_id",
          "is_required",
          "frontend_labels"
        ],
        "type": "object"
      },
      "framework-attribute-interface": {
        "description": "Interface for custom attribute value.",
        "properties": {
          "attribute_code": {
            "description": "Attribute code",
            "type": "string"
          },
          "value": {
            "description": "Attribute value",
            "type": "string"
          }
        },
        "required": [
          "attribute_code",
          "value"
        ],
        "type": "object"
      },
      "catalog-data-eav-attribute-extension-interface": {
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\EavAttributeInterface",
        "type": "object"
      },
      "eav-data-attribute-frontend-label-interface": {
        "description": "Interface AttributeFrontendLabelInterface",
        "properties": {
          "label": {
            "description": "Option label",
            "type": "string"
          },
          "store_id": {
            "description": "Store id",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "eav-data-attribute-option-interface": {
        "description": "Created from:",
        "properties": {
          "is_default": {
            "description": "Default",
            "type": "boolean"
          },
          "label": {
            "description": "Option label",
            "type": "string"
          },
          "sort_order": {
            "description": "Option order",
            "type": "integer"
          },
          "store_labels": {
            "description": "Option label for store scopes",
            "items": {
              "$ref": "#/$defs/eav-data-attribute-option-label-interface"
            },
            "type": "array"
          },
          "value": {
            "description": "Option value",
            "type": "string"
          }
        },
        "required": [
          "label",
          "value"
        ],
        "type": "object"
      },
      "eav-data-attribute-option-label-interface": {
        "description": "Interface AttributeOptionLabelInterface",
        "properties": {
          "label": {
            "description": "Option label",
            "type": "string"
          },
          "store_id": {
            "description": "Store id",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "eav-data-attribute-validation-rule-interface": {
        "description": "Interface AttributeValidationRuleInterface",
        "properties": {
          "key": {
            "description": "Object key",
            "type": "string"
          },
          "value": {
            "description": "Object value",
            "type": "string"
          }
        },
        "required": [
          "key",
          "value"
        ],
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "https://example.com/rest/default/V1/products/attributes/{attributeCode}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "",
        "**Key properties:**",
        {
          "$ul": [
            "**apply_to**: Apply to value for the element",
            "**attribute_code**: Code of the attribute.",
            "**attribute_id**: Id of the attribute.",
            "**backend_model**: Backend model",
            "**backend_type**: Backend type.",
            "**custom_attributes**: Custom attributes values.",
            "**default_frontend_label**: Frontend label for default store",
            "**default_value**: Default value for the element.",
            "**entity_type_id**: Entity type id",
            "**extension_attributes**: ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\EavAttributeInterface",
            "**frontend_class**: Frontend class of attribute",
            "**frontend_input**: HTML for input element.",
            "**frontend_labels**: Frontend label for each store",
            "**is_comparable**: The attribute can be compared on the frontend",
            "**is_filterable**: It used in layered navigation",
            "**is_filterable_in_grid**: It is filterable in catalog product grid",
            "**is_filterable_in_search**: It is used in search results layered navigation",
            "**is_html_allowed_on_front**: The HTML tags are allowed on the frontend",
            "**is_required**: Attribute is required.",
            "**is_searchable**: The attribute can be used in Quick Search",
            "**is_unique**: This is a unique attribute",
            "**is_used_for_promo_rules**: The attribute can be used for promo rules",
            "**is_used_in_grid**: It is used in catalog product grid",
            "**is_user_defined**: Current attribute has been defined by a user.",
            "**is_visible**: Attribute is visible on frontend.",
            "**is_visible_in_advanced_search**: The attribute can be used in Advanced Search",
            "**is_visible_in_grid**: It is visible in catalog product grid",
            "**is_visible_on_front**: The attribute is visible on the frontend",
            "**is_wysiwyg_enabled**: WYSIWYG flag",
            "**note**: The note attribute for the element.",
            "**options**: Options of the attribute (key => value pairs for select)",
            "**position**: Position",
            "**scope**: Attribute scope",
            "**source_model**: Source model",
            "**used_for_sort_by**: It is used for sorting in product listing",
            "**used_in_product_listing**: The attribute can be used in product listing",
            "**validation_rules**: Validation rules."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**: Error code",
            "**errors**: Errors list",
            "**message**: Error message",
            "**parameters**: Error parameters list",
            "**trace**: Stack trace"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**: Error code",
            "**errors**: Errors list",
            "**message**: Error message",
            "**parameters**: Error parameters list",
            "**trace**: Stack trace"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "default": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**: Error code",
            "**errors**: Errors list",
            "**message**: Error message",
            "**parameters**: Error parameters list",
            "**trace**: Stack trace"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
