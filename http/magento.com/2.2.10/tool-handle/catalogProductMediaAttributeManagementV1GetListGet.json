{
  "name": "catalogProductMediaAttributeManagementV1GetListGet",
  "description": "Retrieve the list of media attributes (fronted input type is media_image) assigned to the given attribute set.",
  "parameters": {
    "type": "object",
    "properties": {
      "attributeSetName": {
        "type": "string"
      }
    },
    "required": [
      "attributeSetName"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://example.com/rest/default/V1/products/media/types/{attributeSetName}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "List"
        },
        "list of media attributes",
        "**Key properties:**",
        {
          "$ul": [
            "**apply_to**: Apply to value for the element",
            "**attribute_code**: Code of the attribute.",
            "**attribute_id**: Id of the attribute.",
            "**backend_model**: Backend model",
            "**backend_type**: Backend type.",
            "**custom_attributes**: Custom attributes values.",
            "**default_frontend_label**: Frontend label for default store",
            "**default_value**: Default value for the element.",
            "**entity_type_id**: Entity type id",
            "**extension_attributes**: ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\EavAttributeInterface",
            "**frontend_class**: Frontend class of attribute",
            "**frontend_input**: HTML for input element.",
            "**frontend_labels**: Frontend label for each store",
            "**is_comparable**: The attribute can be compared on the frontend",
            "**is_filterable**: It used in layered navigation",
            "**is_filterable_in_grid**: It is filterable in catalog product grid",
            "**is_filterable_in_search**: It is used in search results layered navigation",
            "**is_html_allowed_on_front**: The HTML tags are allowed on the frontend",
            "**is_required**: Attribute is required.",
            "**is_searchable**: The attribute can be used in Quick Search",
            "**is_unique**: This is a unique attribute",
            "**is_used_for_promo_rules**: The attribute can be used for promo rules",
            "**is_used_in_grid**: It is used in catalog product grid",
            "**is_user_defined**: Current attribute has been defined by a user.",
            "**is_visible**: Attribute is visible on frontend.",
            "**is_visible_in_advanced_search**: The attribute can be used in Advanced Search",
            "**is_visible_in_grid**: It is visible in catalog product grid",
            "**is_visible_on_front**: The attribute is visible on the frontend",
            "**is_wysiwyg_enabled**: WYSIWYG flag",
            "**note**: The note attribute for the element.",
            "**options**: Options of the attribute (key => value pairs for select)",
            "**position**: Position",
            "**scope**: Attribute scope",
            "**source_model**: Source model",
            "**used_for_sort_by**: It is used for sorting in product listing",
            "**used_in_product_listing**: The attribute can be used in product listing",
            "**validation_rules**: Validation rules."
          ]
        },
        {
          "$each": "$.body.*",
          "$as": "item",
          "$block": [
            {
              "$h2": "Item"
            },
            {
              "$lang": "json",
              "$code": {
                "$encode": "json",
                "$indent": true,
                "$content": {
                  "$": "$.item"
                }
              }
            }
          ]
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**: Error code",
            "**errors**: Errors list",
            "**message**: Error message",
            "**parameters**: Error parameters list",
            "**trace**: Stack trace"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "default": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**: Error code",
            "**errors**: Errors list",
            "**message**: Error message",
            "**parameters**: Error parameters list",
            "**trace**: Stack trace"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
