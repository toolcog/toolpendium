{
  "name": "admin_conversations_getTeams",
  "description": "Get all the workspaces a given public or private channel is connected to within this Enterprise org.",
  "parameters": {
    "type": "object",
    "properties": {
      "token": {
        "type": "string",
        "description": "Authentication token. Requires scope: `admin.conversations:read`"
      },
      "channel_id": {
        "type": "string",
        "description": "The channel to determine connected workspaces within the organization for."
      },
      "cursor": {
        "type": "string",
        "description": "Set `cursor` to `next_cursor` returned by the previous call to list items in the next page"
      },
      "limit": {
        "type": "integer",
        "description": "The maximum number of items to return. Must be between 1 - 1000 both inclusive."
      }
    },
    "required": [
      "token",
      "channel_id"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://slack.com/api/admin.conversations.getTeams{?channel_id,cursor,limit}"
    },
    "headers": {
      "token": {
        "$": "token"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "admin.conversations.getTeams schema"
        },
        "Schema for successful response of admin.conversations.getTeams",
        "**Key properties:**",
        {
          "$ul": [
            "**ok**",
            [
              "**response_metadata**",
              {
                "$ul": [
                  "**next_cursor**"
                ]
              }
            ],
            "**team_ids**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "default": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "admin.conversations.getTeams error schema"
        },
        "Schema for error response from admin.conversations.getTeams",
        "**Key properties:**",
        {
          "$ul": [
            "**error**",
            "**ok**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
