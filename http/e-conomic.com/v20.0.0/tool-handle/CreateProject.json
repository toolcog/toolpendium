{
  "name": "CreateProject",
  "description": "Use this endpoint to create a single Project.",
  "parameters": {
    "type": "object",
    "properties": {
      "body": {
        "allOf": [
          {
            "$ref": "#/$defs/Project"
          }
        ],
        "example": {
          "Description": "An awesome project",
          "Id": 1
        }
      }
    },
    "$defs": {
      "Project": {
        "additionalProperties": false,
        "example": {
          "Description": "An awesome project",
          "Id": 1
        },
        "properties": {
          "closedDate": {
            "description": "The date when the project was closed and booked.<p class='filter'>Filterable: eq, ne, lt, lte, gt, gte</p><p class='sort'>Sortable: false</p>",
            "format": "date-time",
            "nullable": true,
            "type": "string",
            "x-filterable": "eq, ne, lt, lte, gt, gte",
            "x-sortable": false
          },
          "contactPersonId": {
            "description": "The number of the contact person. Has to be from the same customer as the one defined in the project.<p class='filter'>Filterable: eq, ne, lt, lte, gt, gte, in, nin</p><p class='sort'>Sortable: false</p>",
            "format": "int32",
            "nullable": true,
            "type": "integer",
            "x-filterable": "eq, ne, lt, lte, gt, gte, in, nin",
            "x-sortable": false
          },
          "costPrice": {
            "description": "Sum of registrations based on cost price for the project<p class='filter'>Read-only: true</p><p class='filter'>Filterable: eq, ne, lt, lte, gt, gte, in, nin</p><p class='sort'>Sortable: false</p>",
            "format": "double",
            "nullable": true,
            "readOnly": true,
            "type": "number",
            "x-filterable": "eq, ne, lt, lte, gt, gte, in, nin",
            "x-sortable": false
          },
          "customerNumber": {
            "description": "Number of customer this project is for. Required if project type is not Internal.<p class='filter'>Filterable: eq, ne, lt, lte, gt, gte, in, nin</p><p class='sort'>Sortable: false</p>",
            "format": "int32",
            "maximum": 999999999,
            "minimum": 1,
            "nullable": true,
            "type": "integer",
            "x-filterable": "eq, ne, lt, lte, gt, gte, in, nin",
            "x-sortable": false
          },
          "deliveryDate": {
            "description": "The project delivery date.<p class='filter'>Filterable: eq, ne, lt, lte, gt, gte</p><p class='sort'>Sortable: false</p>",
            "format": "date-time",
            "nullable": true,
            "type": "string",
            "x-filterable": "eq, ne, lt, lte, gt, gte",
            "x-sortable": false
          },
          "deliveryLocationNumber": {
            "description": "The location number used to deliver the project.<p class='filter'>Filterable: eq, ne, lt, lte, gt, gte, in, nin</p><p class='sort'>Sortable: false</p>",
            "format": "int32",
            "nullable": true,
            "type": "integer",
            "x-filterable": "eq, ne, lt, lte, gt, gte, in, nin",
            "x-sortable": false
          },
          "departmentNumber": {
            "description": "Only relevant if the user uses addon dimensions<p class='filter'>Filterable: eq, ne, lt, lte, gt, gte, in, nin</p><p class='sort'>Sortable: false</p>",
            "format": "int32",
            "nullable": true,
            "type": "integer",
            "x-filterable": "eq, ne, lt, lte, gt, gte, in, nin",
            "x-sortable": false
          },
          "description": {
            "description": "Text describing the project.<p class='filter'>Filterable: not filterable</p><p class='sort'>Sortable: false</p>",
            "maxLength": 2500,
            "minLength": 0,
            "nullable": true,
            "type": "string",
            "x-filterable": "not filterable",
            "x-sortable": false
          },
          "fixedPrice": {
            "description": "If a fixed price is agreed upon with a customer, this can be utilized. It is not retrieved when invoicing, however, so it is only used for reporting.<p class='filter'>Filterable: eq, ne, lt, lte, gt, gte, in, nin</p><p class='sort'>Sortable: false</p>",
            "format": "double",
            "nullable": true,
            "type": "number",
            "x-filterable": "eq, ne, lt, lte, gt, gte, in, nin",
            "x-sortable": false
          },
          "invoicedTotal": {
            "description": "Sum of invoiced amount for the project<p class='filter'>Read-only: true</p><p class='filter'>Filterable: eq, ne, lt, lte, gt, gte, in, nin</p><p class='sort'>Sortable: false</p>",
            "format": "double",
            "nullable": true,
            "readOnly": true,
            "type": "number",
            "x-filterable": "eq, ne, lt, lte, gt, gte, in, nin",
            "x-sortable": false
          },
          "isBarred": {
            "description": "Barred projects cannot retrieve registrations<p class='filter'>Filterable: eq, ne, lt, lte, gt, gte</p><p class='sort'>Sortable: false</p>",
            "type": "boolean",
            "x-filterable": "eq, ne, lt, lte, gt, gte",
            "x-sortable": false
          },
          "isClosed": {
            "description": "Shows if the project is closed. Closed project can't accept more entries.<p class='filter'>Read-only: true</p><p class='filter'>Filterable: eq, ne, lt, lte, gt, gte</p><p class='sort'>Sortable: false</p>",
            "readOnly": true,
            "type": "boolean",
            "x-filterable": "eq, ne, lt, lte, gt, gte",
            "x-sortable": false
          },
          "isMainProject": {
            "description": "Decides whether the project is a main-project or sub-project. If false, it is a sub-project. If true, it is a main-project. Main-projects are grouping of projects. Main-project can't have entries, only sub-projects can.<p class='filter'>Filterable: eq, ne, lt, lte, gt, gte</p><p class='sort'>Sortable: false</p>",
            "type": "boolean",
            "x-filterable": "eq, ne, lt, lte, gt, gte",
            "x-sortable": false
          },
          "isMileageInvoiced": {
            "description": "Determines whether mileage should be included on sales invoices of the project<p class='filter'>Filterable: eq, ne, lt, lte, gt, gte</p><p class='sort'>Sortable: false</p>",
            "type": "boolean",
            "x-filterable": "eq, ne, lt, lte, gt, gte",
            "x-sortable": false
          },
          "lastUpdated": {
            "description": "The date and time when this project was last updated. Use it in the filter to retrieve only updated projects.<p class='filter'>Read-only: true</p><p class='filter'>Filterable: eq, ne, lt, lte, gt, gte</p><p class='sort'>Sortable: false</p>",
            "format": "date-time",
            "nullable": true,
            "readOnly": true,
            "type": "string",
            "x-filterable": "eq, ne, lt, lte, gt, gte",
            "x-sortable": false
          },
          "mainProjectNumber": {
            "description": "The number of the main project, if this is a sub project linked to a main project. It can be null for both main and sub projects (sub project can exist not linked to any main project, like standalone project).<p class='filter'>Filterable: eq, ne, lt, lte, gt, gte, in, nin</p><p class='sort'>Sortable: false</p>",
            "format": "int32",
            "nullable": true,
            "type": "integer",
            "x-filterable": "eq, ne, lt, lte, gt, gte, in, nin",
            "x-sortable": false
          },
          "mileage": {
            "description": "Default amount of mileage for the project<p class='filter'>Filterable: eq, ne, lt, lte, gt, gte, in, nin</p><p class='sort'>Sortable: false</p>",
            "format": "double",
            "type": "number",
            "x-filterable": "eq, ne, lt, lte, gt, gte, in, nin",
            "x-sortable": false
          },
          "name": {
            "description": "Name of the project.<p class='filter'>Filterable: eq, ne, lt, lte, gt, gte, in, nin, like</p><p class='sort'>Sortable: false</p>",
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "x-filterable": "eq, ne, lt, lte, gt, gte, in, nin, like",
            "x-sortable": false
          },
          "number": {
            "description": "The unique number of the project. If it's not provided in the POST requests, it's auto-generated.<p class='filter'>Filterable: eq, ne, lt, lte, gt, gte, in, nin</p><p class='sort'>Sortable: true</p>",
            "format": "int32",
            "maximum": 999999999,
            "minimum": 0,
            "type": "integer",
            "x-filterable": "eq, ne, lt, lte, gt, gte, in, nin",
            "x-sortable": true
          },
          "objectVersion": {
            "description": "The object version, required for PUT requests.<p class='filter'>Filterable: not filterable</p><p class='sort'>Sortable: false</p>",
            "nullable": true,
            "type": "string",
            "x-filterable": "not filterable",
            "x-sortable": false
          },
          "otherResponsibleEmployeeNumber": {
            "description": "Second employee number that is responsible for the project.<p class='filter'>Filterable: eq, ne, lt, lte, gt, gte, in, nin</p><p class='sort'>Sortable: false</p>",
            "format": "int32",
            "nullable": true,
            "type": "integer",
            "x-filterable": "eq, ne, lt, lte, gt, gte, in, nin",
            "x-sortable": false
          },
          "projectGroupNumber": {
            "description": "The number of the project group that this project belongs.<p class='filter'>Filterable: eq, ne, lt, lte, gt, gte, in, nin</p><p class='sort'>Sortable: false</p>",
            "format": "int32",
            "type": "integer",
            "x-filterable": "eq, ne, lt, lte, gt, gte, in, nin",
            "x-sortable": false
          },
          "responsibleEmployeeNumber": {
            "description": "The employee number that is responsible for the project.<p class='filter'>Filterable: eq, ne, lt, lte, gt, gte, in, nin</p><p class='sort'>Sortable: false</p>",
            "format": "int32",
            "nullable": true,
            "type": "integer",
            "x-filterable": "eq, ne, lt, lte, gt, gte, in, nin",
            "x-sortable": false
          },
          "salesPrice": {
            "description": "Sum of registrations based on sales price for the project<p class='filter'>Read-only: true</p><p class='filter'>Filterable: eq, ne, lt, lte, gt, gte, in, nin</p><p class='sort'>Sortable: false</p>",
            "format": "double",
            "nullable": true,
            "readOnly": true,
            "type": "number",
            "x-filterable": "eq, ne, lt, lte, gt, gte, in, nin",
            "x-sortable": false
          },
          "status": {
            "description": "The number of the project status. Project status is a separate manageable resource.<p class='filter'>Filterable: eq, ne, lt, lte, gt, gte, in, nin</p><p class='sort'>Sortable: false</p>",
            "format": "int32",
            "nullable": true,
            "type": "integer",
            "x-filterable": "eq, ne, lt, lte, gt, gte, in, nin",
            "x-sortable": false
          }
        },
        "required": [
          "name",
          "projectGroupNumber"
        ],
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://apis.e-conomic.com/api/v20.0.0//projects"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**number**: The identifier of the newly created entity<p class='filter'>Read-only: true</p><p class='filter'>Filterable: not filterable</p><p class='sort'>Sortable: false</p>"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**developerHint**: Some hints for the developer that might help avoid the error.<p class='filter'>Filterable: not filterable</p><p class='sort'>Sortable: false</p>",
            "**errorCode**: The error code.<p class='filter'>Filterable: not filterable</p><p class='sort'>Sortable: false</p>",
            "**logId**: The unique log identifier of the error.<p class='filter'>Filterable: not filterable</p><p class='sort'>Sortable: false</p>",
            "**logTimeUtc**: The UTC time of the error being logged.<p class='filter'>Read-only: true</p><p class='filter'>Filterable: not filterable</p><p class='sort'>Sortable: false</p>",
            "**message**: Short description about the error.<p class='filter'>Filterable: not filterable</p><p class='sort'>Sortable: false</p>",
            "**property**: The property name in case of validation logic issue.<p class='filter'>Filterable: not filterable</p><p class='sort'>Sortable: false</p>"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**developerHint**: Some hints for the developer that might help avoid the error.<p class='filter'>Filterable: not filterable</p><p class='sort'>Sortable: false</p>",
            "**errorCode**: The error code.<p class='filter'>Filterable: not filterable</p><p class='sort'>Sortable: false</p>",
            "**logId**: The unique log identifier of the error.<p class='filter'>Filterable: not filterable</p><p class='sort'>Sortable: false</p>",
            "**logTimeUtc**: The UTC time of the error being logged.<p class='filter'>Read-only: true</p><p class='filter'>Filterable: not filterable</p><p class='sort'>Sortable: false</p>",
            "**message**: Short description about the error.<p class='filter'>Filterable: not filterable</p><p class='sort'>Sortable: false</p>",
            "**property**: The property name in case of validation logic issue.<p class='filter'>Filterable: not filterable</p><p class='sort'>Sortable: false</p>"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**developerHint**: Some hints for the developer that might help avoid the error.<p class='filter'>Filterable: not filterable</p><p class='sort'>Sortable: false</p>",
            "**errorCode**: The error code.<p class='filter'>Filterable: not filterable</p><p class='sort'>Sortable: false</p>",
            "**logId**: The unique log identifier of the error.<p class='filter'>Filterable: not filterable</p><p class='sort'>Sortable: false</p>",
            "**logTimeUtc**: The UTC time of the error being logged.<p class='filter'>Read-only: true</p><p class='filter'>Filterable: not filterable</p><p class='sort'>Sortable: false</p>",
            "**message**: Short description about the error.<p class='filter'>Filterable: not filterable</p><p class='sort'>Sortable: false</p>",
            "**property**: The property name in case of validation logic issue.<p class='filter'>Filterable: not filterable</p><p class='sort'>Sortable: false</p>"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "429": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**developerHint**: Some hints for the developer that might help avoid the error.<p class='filter'>Filterable: not filterable</p><p class='sort'>Sortable: false</p>",
            "**errorCode**: The error code.<p class='filter'>Filterable: not filterable</p><p class='sort'>Sortable: false</p>",
            "**logId**: The unique log identifier of the error.<p class='filter'>Filterable: not filterable</p><p class='sort'>Sortable: false</p>",
            "**logTimeUtc**: The UTC time of the error being logged.<p class='filter'>Read-only: true</p><p class='filter'>Filterable: not filterable</p><p class='sort'>Sortable: false</p>",
            "**message**: Short description about the error.<p class='filter'>Filterable: not filterable</p><p class='sort'>Sortable: false</p>",
            "**property**: The property name in case of validation logic issue.<p class='filter'>Filterable: not filterable</p><p class='sort'>Sortable: false</p>"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "500": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**developerHint**: Some hints for the developer that might help avoid the error.<p class='filter'>Filterable: not filterable</p><p class='sort'>Sortable: false</p>",
            "**errorCode**: The error code.<p class='filter'>Filterable: not filterable</p><p class='sort'>Sortable: false</p>",
            "**logId**: The unique log identifier of the error.<p class='filter'>Filterable: not filterable</p><p class='sort'>Sortable: false</p>",
            "**logTimeUtc**: The UTC time of the error being logged.<p class='filter'>Read-only: true</p><p class='filter'>Filterable: not filterable</p><p class='sort'>Sortable: false</p>",
            "**message**: Short description about the error.<p class='filter'>Filterable: not filterable</p><p class='sort'>Sortable: false</p>",
            "**property**: The property name in case of validation logic issue.<p class='filter'>Filterable: not filterable</p><p class='sort'>Sortable: false</p>"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
