{
  "name": "GET_SummaryJournalEntry",
  "description": "This REST API reference describes how to get information about a summary journal entry by its journal entry number.\n",
  "parameters": {
    "type": "object",
    "properties": {
      "Zuora-Track-Id": {
        "maxLength": 64,
        "type": "string",
        "description": "A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.\n\nThe value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`\"`), and quote (`'`).\n"
      },
      "Zuora-Entity-Ids": {
        "type": "string",
        "description": "An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.\n"
      },
      "je-number": {
        "type": "string",
        "description": ""
      }
    },
    "required": [
      "je-number"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://rest.zuora.com/v1/journal-entries/{je-number}"
    },
    "headers": {
      "Zuora-Track-Id": {
        "$": "Zuora-Track-Id"
      },
      "Zuora-Entity-Ids": {
        "$": "Zuora-Entity-Ids"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "journalEntryFieldsCustom"
        },
        "Container for custom fields of a Journal Entry object.\n",
        "**Key properties:**",
        {
          "$ul": [
            "**accountingPeriodName**: Name of the accounting period that the journal entry belongs to.",
            "**aggregateCurrency**: Returns true if the journal entry is aggregating currencies. That is, if the journal entry was created when the `Aggregate transactions with different currencies during a Journal Run` setting was configured to `Yes`. Otherwise, returns `false`.",
            "**currency**: Currency used.",
            "**homeCurrency**: Home currency used.",
            "**journalEntryDate**: Date of the journal entry.",
            "**journalEntryItems**: Key name that represents the list of journal entry items.",
            "**notes**: ",
            "**number**: Journal entry number in the format JE-00000001.",
            "**segments**: List of segments that apply to the summary journal entry.",
            "**status**: Status of journal entry.",
            "**success**: Returns `true` if the request was processed successfully.",
            "**timePeriodEnd**: End date of time period included in the journal entry.",
            "**timePeriodStart**: Start date of time period included in the journal entry.",
            "**transactionType**: Transaction type of the transactions included in the summary journal entry.",
            "**transferDateTime**: Date and time that transferredToAccounting was changed to `Yes`. This field is returned only when transferredToAccounting is `Yes`. Otherwise, this field is `null`.",
            "**transferredBy**: User ID of the person who changed transferredToAccounting to `Yes`. This field is returned only when transferredToAccounting is `Yes`. Otherwise, this field is `null`.",
            "**transferredToAccounting**: Status shows whether the journal entry has been transferred to an accounting system. "
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
