{
  "name": "GET_ChargeMetrics",
  "description": "Retrieves key charge metrics about rate plan charges that have changes in a specified time range.\n\nThe purpose of `fromTimestamp` and `toTimestamp` is to synchronize charge metrics data incrementally. \n",
  "parameters": {
    "type": "object",
    "properties": {
      "Zuora-Track-Id": {
        "maxLength": 64,
        "type": "string",
        "description": "A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.\n\nThe value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`\"`), and quote (`'`).\n"
      },
      "Zuora-Entity-Ids": {
        "type": "string",
        "description": "An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.\n"
      },
      "Accept": {
        "type": "string",
        "description": "Expressed as MIME types that the client is able to understand. Using content negotiation, the server then selects one of the proposals, uses it and informs the client of its choice with the `Content-Type` response header. The possible response MIME types are `application/json-seq` compatible with http://jsonlines.org/, and `text/csv` compatible with RFC 4180. `application/json-seq` is the default response MIME type. If the `Accept` header is not sepecified, or set */*, the response body is returned in application/json-seq MIME type.\n"
      },
      "fromTimestamp": {
        "format": "date-time",
        "type": "string",
        "description": "The starting date and time of a time range when changes are made to charge metrics, in `yyyy-mm-ddThh:mm:ssZ` format. For example, `2020-08-18T09:01:11Z`. The timestamp maps to the `UpdatedOn` timestamp of the to-be-exported object.\n"
      },
      "toTimestamp": {
        "format": "date-time",
        "type": "string",
        "description": "The end date and time of a time range when changes are made to charge metrics, in `yyyy-mm-ddThh:mm:ssZ` format. For example, `2020-08-20T09:01:11Z`. The timestamp maps to the `UpdatedOn` timestamp of the to-be-exported object.\n"
      }
    },
    "required": [
      "fromTimestamp",
      "toTimestamp"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://rest.zuora.com/charge-metrics/data/charge-metrics{?fromTimestamp,toTimestamp}"
    },
    "headers": {
      "Zuora-Track-Id": {
        "$": "Zuora-Track-Id"
      },
      "Zuora-Entity-Ids": {
        "$": "Zuora-Entity-Ids"
      },
      "Accept": {
        "$": "Accept"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**amendmentId**: The ID of the corresponding amendment that results in the charge metrics record.",
            "**amendmentType**: The type of the corresponding amendment that results in the charge metrics record.",
            "**chargeNumber**: The corresponding charge number of the charge metrics record.",
            "**createdOn**: The date and time when the charge metrics record was created, in `yyyy-mm-ddThh:mm:ssZ` format.",
            "**currency**: The currency of the charge metrics record.",
            "**deleted**: Whether the charge metrics record is deleted.",
            "**endDate**: The end date of the charge metrics record.",
            "**id**: The ID of the charge metrics record.",
            "**invoiceOwnerAccountNumber**: The account number of the corresponding invoice owner.",
            "**mrrDiscountAmount**: The discount amount for the MRR.",
            "**mrrGrossAmount**: The Gross MRR amount before discounts charges are applied. ",
            "**mrrNetAmount**: The NET MRR amount after discounts charges are applied.",
            "**productId**: The corresponding product ID of the charge metrics record.",
            "**productRatePlanChargeId**: The corresponding product rate plan charge ID of the charge metrics record.",
            "**productRatePlanId**: The corresponding product rate plan ID of the charge metrics record.",
            "**ratePlanChargeId**: The corresponding rate plan charge ID of the charge metrics record.",
            "**startDate**: The start date of the charge metrics record.",
            "**subscriptionName**: The name of the corresponding subscription.",
            "**subscriptionOwnerAccountNumber**: The account number of the corresponding subscription owner.",
            "**tcvDiscountAmount**: The discount amount for the TCV.",
            "**tcvGrossAmount**: The Gross TCV amount before discount charges are applied.",
            "**tcvNetAmount**: The Net TCV amount after discount charges are applied.",
            "**updatedOn**: The date and time when the charge metrics record was last updated, in `yyyy-mm-ddThh:mm:ssZ` format."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**reasons**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "429": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**reasons**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "500": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**reasons**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
