{
  "name": "GET_AllCustomObjectDefinitionsInNamespace",
  "description": "Get all custom objects definitions for a given tenant. If you want to copy all the existing custom objects from an old tenant to a new tenant, you can call this operation in your old tenant and then use its response directly as the request of the [Create custom object definitions](https://www.zuora.com/developer/api-reference/#operation/POST_CustomObjectDefinitions) call in the new tenant to import all the custom objects from the old tenant.\n",
  "parameters": {
    "type": "object",
    "properties": {
      "Zuora-Track-Id": {
        "maxLength": 64,
        "type": "string",
        "description": "A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.\n\nThe value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`\"`), and quote (`'`).\n"
      },
      "Zuora-Entity-Ids": {
        "type": "string",
        "description": "An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.\n"
      },
      "Authorization": {
        "type": "string",
        "description": "`Bearer {token}` for a valid OAuth token.\n"
      },
      "Zuora-Version": {
        "format": "date",
        "type": "string",
        "description": "API version that determines the response schema. The default version is used if this parameter is not included. Specify `Zuora-Version` in the request header if you expect a specific response schema."
      },
      "select": {
        "enum": [
          "type"
        ],
        "type": "string",
        "description": "If you set `select` to `type`, the response will only contain the `type` of each custom object.\n"
      }
    },
    "required": [
      "Authorization"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://rest.zuora.com/objects/definitions/default{?select}"
    },
    "headers": {
      "Zuora-Track-Id": {
        "$": "Zuora-Track-Id"
      },
      "Zuora-Entity-Ids": {
        "$": "Zuora-Entity-Ids"
      },
      "Authorization": {
        "$": "Authorization"
      },
      "Zuora-Version": {
        "$": "Zuora-Version"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**count**: The number of objects in the `definitions` object. The value of this field is the number of custom object definitions in the namespace.",
            "**definitions**: The custom object definitions. This object maps types to custom object definitions."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
