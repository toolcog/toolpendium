{
  "name": "Object_GETAmendment",
  "description": "",
  "parameters": {
    "type": "object",
    "properties": {
      "Zuora-Entity-Ids": {
        "type": "string",
        "description": "An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.\n"
      },
      "Zuora-Track-Id": {
        "maxLength": 64,
        "type": "string",
        "description": "A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.\n\nThe value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`\"`), and quote (`'`).\n"
      },
      "fields": {
        "type": "string",
        "description": "Object fields to return"
      },
      "id": {
        "type": "string",
        "description": "Object id"
      }
    },
    "required": [
      "id"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://rest.zuora.com/v1/object/amendment/{id}{?fields}"
    },
    "headers": {
      "Zuora-Entity-Ids": {
        "$": "Zuora-Entity-Ids"
      },
      "Zuora-Track-Id": {
        "$": "Zuora-Track-Id"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "amendmentFieldsCustom"
        },
        "Container for custom fields of an Amendment object.\n",
        "**Key properties:**",
        {
          "$ul": [
            "**AutoRenew**:  Determines whether the subscription is automatically renewed, or whether it expires at the end of the term and needs to be manually renewed. **Required:** For amendment of type TermsAndConditions when changing the automatic renewal status of a subscription.",
            "**Code**:  A unique alphanumeric string that identifies the amendment.",
            "**ContractEffectiveDate**:  The date when the amendment's changes become effective for billing purposes.",
            "**CreatedById**:  The user ID of the person who created the amendment.",
            "**CreatedDate**:  The date when the amendment was created.",
            "**CurrentTerm**:  The length of the period for the current subscription term. This field can be updated when Status is `Draft`.",
            "**CurrentTermPeriodType**:  The period type for the current subscription term. **Values**:",
            "**CustomerAcceptanceDate**: The date when the customer accepts the amendment's changes to the subscription.",
            "**Description**:  A description of the amendment.",
            "**EffectiveDate**:  The date when the amendment's changes take effective. This field validates that the amendment's changes are within valid ranges of products and product rate plans.",
            "**Id**: Object identifier.",
            "**Name**:  The name of the amendment.",
            "**RenewalSetting**:  Specifies whether a termed subscription will remain termed or change to evergreen when it is renewed.",
            "**RenewalTerm**:  The term of renewal for the amended subscription. This field can be updated when Status is `Draft`.",
            "**RenewalTermPeriodType**:  The period type for the subscription renewal term. This field can be updated when Status is `Draft`.",
            "**ServiceActivationDate**: The date when service is activated.",
            "**SpecificUpdateDate**:  The date when the UpdateProduct amendment takes effect. This field is only applicable if there is already a future-dated UpdateProduct amendment on the subscription.",
            "**Status**:  The status of the amendment. Type: string (enum) **Character limit**: 17 **Values**: one of the following:",
            "**SubscriptionId**:  The ID of the subscription that the amendment changes.",
            "**TermStartDate**:  The date when the new terms and conditions take effect.",
            "**TermType**:  Indicates if the subscription isTERMED or EVERGREEN.",
            "**Type**:  The type of amendment.",
            "**UpdatedById**:  The ID of the user who last updated the amendment.",
            "**UpdatedDate**:  The date when the amendment was last updated."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**message**: Error message."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**done**: ",
            "**records**: ",
            "**size**: "
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
