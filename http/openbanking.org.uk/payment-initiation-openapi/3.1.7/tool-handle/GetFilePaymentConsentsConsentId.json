{
  "name": "GetFilePaymentConsentsConsentId",
  "description": "Get File Payment Consents",
  "parameters": {
    "type": "object",
    "properties": {
      "ConsentId": {
        "type": "string",
        "description": "ConsentId"
      },
      "x-fapi-auth-date": {
        "pattern": "^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \\d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \\d{4} \\d{2}:\\d{2}:\\d{2} (GMT|UTC)$",
        "type": "string",
        "description": "The time when the PSU last logged in with the TPP. \nAll dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: \nSun, 10 Sep 2017 19:43:31 UTC"
      },
      "x-fapi-customer-ip-address": {
        "type": "string",
        "description": "The PSU's IP address if the PSU is currently logged in with the TPP."
      },
      "x-fapi-interaction-id": {
        "type": "string",
        "description": "An RFC4122 UID used as a correlation id."
      },
      "Authorization": {
        "type": "string",
        "description": "An Authorisation Token as per https://tools.ietf.org/html/rfc6750"
      },
      "x-customer-user-agent": {
        "type": "string",
        "description": "Indicates the user-agent that the PSU is using."
      }
    },
    "required": [
      "ConsentId",
      "Authorization"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://openbanking.org.uk/file-payment-consents/{ConsentId}"
    },
    "headers": {
      "x-fapi-auth-date": {
        "$": "x-fapi-auth-date"
      },
      "x-fapi-customer-ip-address": {
        "$": "x-fapi-customer-ip-address"
      },
      "x-fapi-interaction-id": {
        "$": "x-fapi-interaction-id"
      },
      "Authorization": {
        "$": "Authorization"
      },
      "x-customer-user-agent": {
        "$": "x-customer-user-agent"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**Data**",
              {
                "$ul": [
                  [
                    "**Authorisation**: The authorisation type request from the TPP.",
                    {
                      "$ul": [
                        "**AuthorisationType**: Type of authorisation flow requested.",
                        "**CompletionDateTime**: Date and time at which the requested authorisation flow must be completed.All dates in the JSON payloads are represented in ISO 8601 date-time format. "
                      ]
                    }
                  ],
                  "**Charges**",
                  "**ConsentId**: OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource.",
                  "**CreationDateTime**: Date and time at which the resource was created.All dates in the JSON payloads are represented in ISO 8601 date-time format. ",
                  "**CutOffDateTime**: Specified cut-off date and time for the payment consent.All dates in the JSON payloads are represented in ISO 8601 date-time format. ",
                  [
                    "**Debtor**: ^ Only incuded in the response if `Data. ReadRefundAccount` is set to `Yes` in the consent.",
                    {
                      "$ul": [
                        "**Identification**: ^ Identification assigned by an institution to identify an account. This identification is known by the account owner. | Max256Text",
                        "**Name**: ^ Name of the account, as assigned by the account servicing institution.  Usage The account name is the name or names of the account owner(s) represented at an account level. The account name is not the product name or the nickname of the account.",
                        "**SchemeName**: ^ Name of the identification scheme, in a coded form as published in an external list. | Namespaced Enumeration OBExternalAccountIdentification4Code",
                        "**SecondaryIdentification**: ^ This is secondary identification of the account, as assigned by the account servicing institution.  This can be used by building societies to additionally identify accounts with a roll number (in addition to a sort code and account number combination) | Max34Text"
                      ]
                    }
                  ],
                  [
                    "**Initiation**: The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds using a payment file.",
                    {
                      "$ul": [
                        "**ControlSum**: Total of all individual amounts included in the group, irrespective of currencies.",
                        [
                          "**DebtorAccount**: Unambiguous identification of the account of the debtor to which a debit entry will be made as a result of the transaction.",
                          {
                            "$ul": [
                              "**Identification**: Identification assigned by an institution to identify an account. This identification is known by the account owner.",
                              "**Name**: The account name is the name or names of the account owner(s) represented at an account level, as displayed by the ASPSP's online channels.",
                              "**SchemeName**: Name of the identification scheme, in a coded form as published in an external list.",
                              "**SecondaryIdentification**: This is secondary identification of the account, as assigned by the account servicing institution. "
                            ]
                          }
                        ],
                        "**FileHash**: A base64 encoding of a SHA256 hash of the file to be uploaded.",
                        "**FileReference**: Reference for the file.",
                        "**FileType**: Specifies the payment file type.",
                        "**LocalInstrument**: User community specific instrument.",
                        "**NumberOfTransactions**: Number of individual transactions contained in the payment information group.",
                        [
                          "**RemittanceInformation**: Information supplied to enable the matching of an entry with the items that the transfer is intended to settle, such as commercial invoices in an accounts' receivable system.",
                          {
                            "$ul": [
                              "**Reference**: Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.",
                              "**Unstructured**: Information supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts' receivable system, in an unstructured form."
                            ]
                          }
                        ],
                        "**RequestedExecutionDateTime**: Date at which the initiating party requests the clearing agent to process the payment. ",
                        "**SupplementaryData**: Additional information that can not be captured in the structured fields and/or any other specific block."
                      ]
                    }
                  ],
                  [
                    "**SCASupportData**: Supporting Data provided by TPP, when requesting SCA Exemption.",
                    {
                      "$ul": [
                        "**AppliedAuthenticationApproach**: Specifies a character string with a maximum length of 40 characters.",
                        "**ReferencePaymentOrderId**: If the payment is recurring, then this field is populated with the transaction identifier of the previous payment occurrence so that the ASPSP can verify that the PISP, amount and the payee are the same as the previous occurrence. The value here refers to the payment id e.g. DomesticPaymentId  ",
                        "**RequestedSCAExemptionType**: This field allows a PISP to request specific SCA Exemption for a Payment Initiation"
                      ]
                    }
                  ],
                  "**Status**: Specifies the status of consent resource in code form.",
                  "**StatusUpdateDateTime**: Date and time at which the consent resource status was updated.All dates in the JSON payloads are represented in ISO 8601 date-time format. "
                ]
              }
            ],
            [
              "**Links**: Links relevant to the payload",
              {
                "$ul": [
                  "**First**",
                  "**Last**",
                  "**Next**",
                  "**Prev**",
                  "**Self**"
                ]
              }
            ],
            [
              "**Meta**: Meta Data relevant to the payload",
              {
                "$ul": [
                  "**FirstAvailableDateTime**: All dates in the JSON payloads are represented in ISO 8601 date-time format. ",
                  "**LastAvailableDateTime**: All dates in the JSON payloads are represented in ISO 8601 date-time format. ",
                  "**TotalPages**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "An array of detail error codes, and messages, and URLs to documentation to help remediation.",
        "**Key properties:**",
        {
          "$ul": [
            "**Code**: High level textual error code, to help categorize the errors.",
            "**Errors**",
            "**Id**: A unique reference for the error instance, for audit purposes, in case of unknown/unclassified errors.",
            "**Message**: Brief Error message, e.g., 'There is something wrong with the request parameters provided'"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "An array of detail error codes, and messages, and URLs to documentation to help remediation.",
        "**Key properties:**",
        {
          "$ul": [
            "**Code**: High level textual error code, to help categorize the errors.",
            "**Errors**",
            "**Id**: A unique reference for the error instance, for audit purposes, in case of unknown/unclassified errors.",
            "**Message**: Brief Error message, e.g., 'There is something wrong with the request parameters provided'"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "500": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "An array of detail error codes, and messages, and URLs to documentation to help remediation.",
        "**Key properties:**",
        {
          "$ul": [
            "**Code**: High level textual error code, to help categorize the errors.",
            "**Errors**",
            "**Id**: A unique reference for the error instance, for audit purposes, in case of unknown/unclassified errors.",
            "**Message**: Brief Error message, e.g., 'There is something wrong with the request parameters provided'"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
