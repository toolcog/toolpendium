{
  "name": "create-space-broadcast",
  "description": "Creates a new broadcast. Broadcasts are used to create composited versions of your space, which can be broadcast to live streams.\n**Note:** By default only a single broadcast destination can be specified. Contact Mux support if you need more.",
  "parameters": {
    "type": "object",
    "properties": {
      "SPACE_ID": {
        "type": "string",
        "description": "The space ID."
      },
      "body": {
        "$ref": "#/$defs/CreateBroadcastRequest"
      }
    },
    "required": [
      "SPACE_ID",
      "body"
    ],
    "$defs": {
      "CreateBroadcastRequest": {
        "properties": {
          "background": {
            "description": "URL of an image to display as the background of the broadcast. Its dimensions should match the provided resolution.",
            "type": "string"
          },
          "layout": {
            "$ref": "#/$defs/BroadcastLayout"
          },
          "live_stream_id": {
            "description": "The ID of the live stream that you want to broadcast to.",
            "type": "string"
          },
          "passthrough": {
            "description": "Arbitrary user-supplied metadata that will be included in the broadcast details and related webhooks. Max: 255 characters.",
            "type": "string"
          },
          "resolution": {
            "$ref": "#/$defs/BroadcastResolution"
          }
        },
        "required": [
          "live_stream_id"
        ],
        "type": "object"
      },
      "BroadcastLayout": {
        "default": "gallery",
        "description": "The layout used when broadcasting the space.\n\nThe `gallery` layout will show participants in a grid that automatically resizes each participantâ€™s stream to best fit up to 10 participants in the window.\nThe `active-speaker` layout will show only the current active speaker, without a border.\nThe `crop` layout uses as much of the available space as possible to show the participant's stream.\n\nDefaults to `gallery` if not set.\n",
        "enum": [
          "gallery",
          "active-speaker",
          "crop"
        ],
        "type": "string"
      },
      "BroadcastResolution": {
        "default": "1920x1080",
        "description": "The resolution of the composited video sent to the live stream. Defaults to `1920x1080` if not set.",
        "enum": [
          "1920x1080",
          "1280x720",
          "1080x1920",
          "720x1280",
          "1080x1080",
          "720x720"
        ],
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://api.mux.com/video/v1/spaces/{SPACE_ID}/broadcasts"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**data**",
              {
                "$ul": [
                  "**background**: URL of an image to display as the background of the broadcast. Its dimensions should match the provided resolution.",
                  "**id**: Unique identifier for the broadcast. Max 255 characters.",
                  "**layout**: The layout used when broadcasting the space. (default: gallery)",
                  "**live_stream_id**: The ID of the live stream that the broadcast will be sent to.",
                  "**passthrough**: Arbitrary user-supplied metadata that will be included in the broadcast details and related webhooks. Max: 255 characters.",
                  "**resolution**: The resolution of the composited video sent to the live stream. Defaults to `1920x1080` if not set. (default: 1920x1080)",
                  "**status**: The status of the broadcast. You can start and stop broadcasts with the `start` and `stop` APIs."
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
