{
  "name": "get-space",
  "description": "Retrieves the details of a space that has previously been created. Supply the unique space ID that was returned from your create space request, and Mux will return the information about the corresponding space. The same information is returned when creating a space.",
  "parameters": {
    "type": "object",
    "properties": {
      "SPACE_ID": {
        "type": "string",
        "description": "The space ID."
      }
    },
    "required": [
      "SPACE_ID"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://api.mux.com/video/v1/spaces/{SPACE_ID}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**data**",
              {
                "$ul": [
                  "**active_session_id**: Unique identifier for the current lifecycle of the space. Only set when the space is `active` and is set to a new value each time the space transitions from `idle` to `active`. This value is useful for logging and debugging issues. Max 255 characters.",
                  "**broadcasts**: An array of broadcast destinations.",
                  "**created_at**: Time the space was created, defined as a Unix timestamp (seconds since epoch).",
                  "**id**: Unique identifier for the space. Max 255 characters.",
                  "**passthrough**: Arbitrary user-supplied metadata that will be included in the space details and related webhooks. Max: 255 characters.",
                  "**status**: The status of the space. Spaces are `idle` when there are no participants connected, and `active` when there are participants connected.",
                  "**type**: Specify the network architecture of the space. In `server` spaces, all video travels through Mux's video infrastructure. Defaults to `server` if not set. (default: server)"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
