{
  "name": "getCarHistory",
  "description": "The history API returns online listing history for a car identified by its VIN. History listings are sorted in the descending order of the listing date / last seen date",
  "parameters": {
    "type": "object",
    "properties": {
      "api_key": {
        "type": "string",
        "description": "The API Authentication Key. Mandatory with all API calls."
      },
      "vin": {
        "format": "string",
        "minLength": 10,
        "type": "string",
        "description": "The VIN to identify the car. Must be a valid 17 char VIN"
      },
      "fields": {
        "format": "string",
        "type": "string",
        "description": "List of fields to fetch, in case the default fields list in the response is to be trimmed down"
      },
      "page": {
        "format": "number",
        "type": "number",
        "description": "Page number to fetch the results for the given criteria. Default is 1."
      },
      "include_duplicates": {
        "type": "boolean",
        "description": "Flag to indicate whether to include duplicate historical records as well in the response"
      },
      "sort_order": {
        "enum": [
          "asc",
          "desc",
          "ASC",
          "DESC"
        ],
        "format": "string",
        "type": "string",
        "description": "Sort order - asc or desc. Default sort order is asc"
      }
    },
    "required": [
      "vin"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://marketcheck-prod.apigee.net/v2/history/car/{vin}{?api_key,fields,page,include_duplicates,sort_order}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "List"
        },
        "Represents a car history entry",
        "**Key properties:**",
        {
          "$ul": [
            "**carfax_1_owner**: Flag to indicate whether listing is carfax_1_owner",
            "**carfax_clean_title**: Flag to indicate whether listing is carfax_clean_title",
            "**city**: City of the listing",
            "**data_source**: Data source of the listing",
            "**dealer_id**: Unique MC assigned dealers id for the listing",
            "**dom**: Days on Market value for the car based on current and historical listings found in the Marketcheck database for this car",
            "**dom_180**: Days on Market value for the car based on current and last 6 month listings found in the Marketcheck database for this car",
            "**dom_active**: Days on Market value for the car based on current and last 30 days listings found in the Marketcheck database for this car",
            "**exterior_color**: Exterior color of the car",
            "**financing_options**: Array of all finance offers for this listing",
            "**first_seen_at**: Listing first seen at first scraped timestamp",
            "**first_seen_at_date**: Listing first seen at first scraped date",
            "**heading**: Listing title as displayed on the source website",
            "**id**: Unique identifier representing a specific listing from the Marketcheck database",
            "**interior_color**: Interior color of the car",
            "**inventory_type**: Inventory type of car",
            "**is_certified**: Certified car",
            "**is_searchable**: Flag to indicate listing is marked searchable or not",
            "**last_seen_at**: Listing last seen at (most recent) timestamp",
            "**last_seen_at_date**: Listing last seen at (most recent) date",
            "**latitude**: Latitude of the listing",
            "**leasing_options**: Array of all finance offers for this listing",
            "**longitude**: Longitude of the listing",
            "**miles**: Odometer reading / reported miles usage for the car",
            "**msrp**: MSRP for the car",
            "**price**: Asking price for the car",
            "**ref_miles**: Last Odometer reading / reported miles usage for the car. If the asking miles value is not or is available then the last_miles could perhaps be used. last_miles is the miles for the car listed on the source website as of last_miles_dt date",
            "**ref_miles_dt**: The date at which the last miles was reported online. This is earlier to last_seen_date",
            "**ref_price**: Last reported price for the car. If the asking price value is not or is available then the last_price could perhaps be used. last_price is the price for the car listed on the source website as of last_price_dt date",
            "**ref_price_dt**: The date at which the last price was reported online. This is earlier to last_seen_date",
            "**scraped_at**: Listing last seen at date timestamp",
            "**scraped_at_date**: Listing last seen at date",
            "**seller_name**: Seller name of the listing from the Marketcheck database",
            "**seller_name_o**: Seller name of the listing from the Marketcheck database",
            "**seller_type**: Seller type for the car",
            "**source**: Source domain of the listing",
            "**state**: State of the listing",
            "**status_date**: Timestamp of status date",
            "**stock_no**: Stock number of car in dealers inventory",
            "**street**: Street of the listing",
            "**trim_r**: Trim of the car",
            "**vdp_url**: Vehicle Details Page url of the specific car",
            "**vin**: VIN for the car",
            "**zip**: Zip of the listing"
          ]
        },
        {
          "$each": "$.body.*",
          "$as": "item",
          "$block": [
            {
              "$h2": {
                "$": "$.item.id"
              }
            },
            {
              "$lang": "json",
              "$code": {
                "$encode": "json",
                "$indent": true,
                "$content": {
                  "$": "$.item"
                }
              }
            }
          ]
        }
      ]
    },
    "default": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**: Error code",
            "**message**: Error message"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
