{
  "name": "getOrganizationLicense",
  "description": "Display a license",
  "parameters": {
    "type": "object",
    "properties": {
      "organizationId": {
        "type": "string"
      },
      "licenseId": {
        "type": "string"
      }
    },
    "required": [
      "organizationId",
      "licenseId"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://api.meraki.com/api/v1/organizations/{organizationId}/licenses/{licenseId}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**activationDate**: The date the license started burning",
            "**claimDate**: The date the license was claimed into the organization",
            "**deviceSerial**: Serial number of the device the license is assigned to",
            "**durationInDays**: The duration of the individual license",
            "**expirationDate**: The date the license will expire",
            "**headLicenseId**: The id of the head license this license is queued behind. If there is no head license, it returns nil.",
            "**id**: License ID",
            "**licenseKey**: License key",
            "**licenseType**: License type",
            "**networkId**: ID of the network the license is assigned to",
            "**orderNumber**: Order number",
            "**permanentlyQueuedLicenses**: DEPRECATED List of permanently queued licenses attached to the license. Instead, use /organizations/{organizationId}/licenses?deviceSerial= to retrieved queued licenses for a given device.",
            "**seatCount**: The number of seats of the license. Only applicable to SM licenses.",
            "**state**: The state of the license. All queued licenses have a status of `recentlyQueued`.",
            "**totalDurationInDays**: The duration of the license plus all permanently queued licenses associated with it"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
