{
  "name": "getOrganizationDevices",
  "description": "List the devices in an organization",
  "parameters": {
    "type": "object",
    "properties": {
      "organizationId": {
        "type": "string"
      },
      "perPage": {
        "type": "integer",
        "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
      },
      "startingAfter": {
        "type": "string",
        "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
      },
      "endingBefore": {
        "type": "string",
        "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
      },
      "configurationUpdatedAfter": {
        "type": "string",
        "description": "Filter results by whether or not the device's configuration has been updated after the given timestamp"
      },
      "networkIds": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "Optional parameter to filter devices by network."
      },
      "productTypes": {
        "items": {
          "enum": [
            "appliance",
            "camera",
            "cellularGateway",
            "sensor",
            "switch",
            "systemsManager",
            "wireless"
          ],
          "type": "string"
        },
        "type": "array",
        "description": "Optional parameter to filter devices by product type. Valid types are wireless, appliance, switch, systemsManager, camera, cellularGateway, and sensor."
      },
      "tags": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "Optional parameter to filter devices by tags."
      },
      "tagsFilterType": {
        "enum": [
          "withAllTags",
          "withAnyTags"
        ],
        "type": "string",
        "description": "Optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return networks which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected."
      },
      "name": {
        "type": "string",
        "description": "Optional parameter to filter devices by name. All returned devices will have a name that contains the search term or is an exact match."
      },
      "mac": {
        "type": "string",
        "description": "Optional parameter to filter devices by MAC address. All returned devices will have a MAC address that contains the search term or is an exact match."
      },
      "serial": {
        "type": "string",
        "description": "Optional parameter to filter devices by serial number. All returned devices will have a serial number that contains the search term or is an exact match."
      },
      "model": {
        "type": "string",
        "description": "Optional parameter to filter devices by model. All returned devices will have a model that contains the search term or is an exact match."
      },
      "macs": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "Optional parameter to filter devices by one or more MAC addresses. All returned devices will have a MAC address that is an exact match."
      },
      "serials": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "Optional parameter to filter devices by one or more serial numbers. All returned devices will have a serial number that is an exact match."
      },
      "sensorMetrics": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "Optional parameter to filter devices by the metrics that they provide. Only applies to sensor devices."
      },
      "sensorAlertProfileIds": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "Optional parameter to filter devices by the alert profiles that are bound to them. Only applies to sensor devices."
      },
      "models": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "Optional parameter to filter devices by one or more models. All returned devices will have a model that is an exact match."
      }
    },
    "required": [
      "organizationId"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://api.meraki.com/api/v1/organizations/{organizationId}/devices{?perPage,startingAfter,endingBefore,configurationUpdatedAfter,networkIds,productTypes,tags,tagsFilterType,name,mac,serial,model,macs,serials,sensorMetrics,sensorAlertProfileIds,models}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "List"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**address**: Physical address of the device",
            "**firmware**: Firmware version of the device",
            "**lanIp**: LAN IP address of the device",
            "**lat**: Latitude of the device",
            "**lng**: Longitude of the device",
            "**mac**: MAC address of the device",
            "**model**: Model of the device",
            "**name**: Name of the device",
            "**networkId**: ID of the network the device belongs to",
            "**notes**: Notes for the device, limited to 255 characters",
            "**productType**: Product type of the device",
            "**serial**: Serial number of the device",
            "**tags**: List of tags assigned to the device"
          ]
        },
        {
          "$each": "$.body.*",
          "$as": "item",
          "$block": [
            {
              "$h2": {
                "$": "$.item.name"
              }
            },
            {
              "$lang": "json",
              "$code": {
                "$encode": "json",
                "$indent": true,
                "$content": {
                  "$": "$.item"
                }
              }
            }
          ]
        }
      ]
    }
  }
}
