{
  "name": "getNetworkSmDevices",
  "description": "List the devices enrolled in an SM network with various specified fields and filters",
  "parameters": {
    "type": "object",
    "properties": {
      "networkId": {
        "type": "string"
      },
      "fields": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "Additional fields that will be displayed for each device.\n    The default fields are: id, name, tags, ssid, wifiMac, osName, systemModel, uuid, and serialNumber. The additional fields are: ip,\n    systemType, availableDeviceCapacity, kioskAppName, biosVersion, lastConnected, missingAppsCount, userSuppliedAddress, location, lastUser,\n    ownerEmail, ownerUsername, osBuild, publicIp, phoneNumber, diskInfoJson, deviceCapacity, isManaged, hadMdm, isSupervised, meid, imei, iccid,\n    simCarrierNetwork, cellularDataUsed, isHotspotEnabled, createdAt, batteryEstCharge, quarantined, avName, avRunning, asName, fwName,\n    isRooted, loginRequired, screenLockEnabled, screenLockDelay, autoLoginDisabled, autoTags, hasMdm, hasDesktopAgent, diskEncryptionEnabled,\n    hardwareEncryptionCaps, passCodeLock, usesHardwareKeystore, androidSecurityPatchVersion, and url."
      },
      "wifiMacs": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "Filter devices by wifi mac(s)."
      },
      "serials": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "Filter devices by serial(s)."
      },
      "ids": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "Filter devices by id(s)."
      },
      "scope": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "Specify a scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags."
      },
      "perPage": {
        "type": "integer",
        "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
      },
      "startingAfter": {
        "type": "string",
        "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
      },
      "endingBefore": {
        "type": "string",
        "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
      }
    },
    "required": [
      "networkId"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://api.meraki.com/api/v1/networks/{networkId}/sm/devices{?fields,wifiMacs,serials,ids,scope,perPage,startingAfter,endingBefore}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "List"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**id**: The Meraki Id of the device record.",
            "**ip**: The IP address of the device.",
            "**name**: The name of the device.",
            "**notes**: Notes associated with the device.",
            "**osName**: The name of the device OS.",
            "**serial**: The device serial.",
            "**serialNumber**: The device serial number.",
            "**ssid**: The name of the SSID the device was last connected to.",
            "**systemModel**: The device model.",
            "**tags**: An array of tags associated with the device.",
            "**uuid**: The UUID of the device.",
            "**wifiMac**: The MAC of the device."
          ]
        },
        {
          "$each": "$.body.*",
          "$as": "item",
          "$block": [
            {
              "$h2": {
                "$": "$.item.name"
              }
            },
            {
              "$lang": "json",
              "$code": {
                "$encode": "json",
                "$indent": true,
                "$content": {
                  "$": "$.item"
                }
              }
            }
          ]
        }
      ]
    }
  }
}
