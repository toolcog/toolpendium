{
  "name": "getOrganizationSensorReadingsHistory",
  "description": "Return all reported readings from sensors in a given timespan, sorted by timestamp",
  "parameters": {
    "type": "object",
    "properties": {
      "organizationId": {
        "type": "string"
      },
      "perPage": {
        "type": "integer",
        "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
      },
      "startingAfter": {
        "type": "string",
        "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
      },
      "endingBefore": {
        "type": "string",
        "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
      },
      "t0": {
        "type": "string",
        "description": "The beginning of the timespan for the data. The maximum lookback period is 365 days and 6 hours from today."
      },
      "t1": {
        "type": "string",
        "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
      },
      "timespan": {
        "format": "float",
        "type": "number",
        "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days. The default is 2 hours."
      },
      "networkIds": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "Optional parameter to filter readings by network."
      },
      "serials": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "Optional parameter to filter readings by sensor."
      },
      "metrics": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "Types of sensor readings to retrieve. If no metrics are supplied, all available types of readings will be retrieved. Allowed values are battery, button, door, humidity, indoorAirQuality, noise, pm25, temperature, tvoc, and water."
      }
    },
    "required": [
      "organizationId"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://api.meraki.com/api/v1/organizations/{organizationId}/sensor/readings/history{?perPage,startingAfter,endingBefore,t0,t1,timespan,networkIds,serials,metrics}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "List"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**battery**: Reading for the 'battery' metric. This will only be present if the 'metric' property equals 'battery'.",
              {
                "$ul": [
                  "**percentage**: Remaining battery life."
                ]
              }
            ],
            [
              "**button**: Reading for the 'button' metric. This will only be present if the 'metric' property equals 'button'.",
              {
                "$ul": [
                  "**pressType**: Type of button press that occurred."
                ]
              }
            ],
            [
              "**door**: Reading for the 'door' metric. This will only be present if the 'metric' property equals 'door'.",
              {
                "$ul": [
                  "**open**: True if the door is open."
                ]
              }
            ],
            [
              "**humidity**: Reading for the 'humidity' metric. This will only be present if the 'metric' property equals 'humidity'.",
              {
                "$ul": [
                  "**relativePercentage**: Humidity reading in %RH."
                ]
              }
            ],
            [
              "**indoorAirQuality**: Reading for the 'indoorAirQuality' metric. This will only be present if the 'metric' property equals 'indoorAirQuality'.",
              {
                "$ul": [
                  "**score**: Indoor air quality score between 0 and 100."
                ]
              }
            ],
            "**metric**: Type of sensor reading.",
            [
              "**network**: Network to which the sensor belongs.",
              {
                "$ul": [
                  "**id**: ID of the network.",
                  "**name**: Name of the network."
                ]
              }
            ],
            [
              "**noise**: Reading for the 'noise' metric. This will only be present if the 'metric' property equals 'noise'.",
              {
                "$ul": [
                  [
                    "**ambient**: Ambient noise reading.",
                    {
                      "$ul": [
                        "**level**: Ambient noise reading in adjusted decibels."
                      ]
                    }
                  ]
                ]
              }
            ],
            [
              "**pm25**: Reading for the 'pm25' metric. This will only be present if the 'metric' property equals 'pm25'.",
              {
                "$ul": [
                  "**concentration**: PM2.5 reading in micrograms per cubic meter."
                ]
              }
            ],
            "**serial**: Serial number of the sensor that took the reading.",
            [
              "**temperature**: Reading for the 'temperature' metric. This will only be present if the 'metric' property equals 'temperature'.",
              {
                "$ul": [
                  "**celsius**: Temperature reading in degrees Celsius.",
                  "**fahrenheit**: Temperature reading in degrees Fahrenheit."
                ]
              }
            ],
            "**ts**: Time at which the reading occurred, in ISO8601 format.",
            [
              "**tvoc**: Reading for the 'tvoc' metric. This will only be present if the 'metric' property equals 'tvoc'.",
              {
                "$ul": [
                  "**concentration**: TVOC reading in micrograms per cubic meter."
                ]
              }
            ],
            [
              "**water**: Reading for the 'water' metric. This will only be present if the 'metric' property equals 'water'.",
              {
                "$ul": [
                  "**present**: True if water is detected."
                ]
              }
            ]
          ]
        },
        {
          "$each": "$.body.*",
          "$as": "item",
          "$block": [
            {
              "$h2": "Item"
            },
            {
              "$lang": "json",
              "$code": {
                "$encode": "json",
                "$indent": true,
                "$content": {
                  "$": "$.item"
                }
              }
            }
          ]
        }
      ]
    }
  }
}
