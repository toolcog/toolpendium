{
  "name": "databaseListDocuments",
  "description": "Get a list of all the user documents. You can use the query params to filter your results. On admin mode, this endpoint will return a list of all of the project's documents. [Learn more about different API modes](/docs/admin).",
  "parameters": {
    "type": "object",
    "properties": {
      "collectionId": {
        "type": "string",
        "x-example": "[COLLECTION_ID]",
        "description": "Collection unique ID. You can create a new collection with validation rules using the Database service [server integration](/docs/server/database#createCollection)."
      },
      "filters": {
        "default": [],
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "Array of filter strings. Each filter is constructed from a key name, comparison operator (=, !=, >, <, <=, >=) and a value. You can also use a dot (.) separator in attribute names to filter by child document attributes. Examples: 'name=John Doe' or 'category.$id>=5bed2d152c362'."
      },
      "limit": {
        "default": 25,
        "format": "int32",
        "type": "integer",
        "x-example": 0,
        "description": "Maximum number of documents to return in response.  Use this value to manage pagination. By default will return maximum 25 results. Maximum of 100 results allowed per request."
      },
      "offset": {
        "default": 0,
        "format": "int32",
        "type": "integer",
        "x-example": 0,
        "description": "Offset value. The default value is 0. Use this param to manage pagination."
      },
      "orderField": {
        "default": "",
        "type": "string",
        "x-example": "[ORDER_FIELD]",
        "description": "Document field that results will be sorted by."
      },
      "orderType": {
        "default": "ASC",
        "type": "string",
        "x-example": "DESC",
        "description": "Order direction. Possible values are DESC for descending order, or ASC for ascending order."
      },
      "orderCast": {
        "default": "string",
        "type": "string",
        "x-example": "int",
        "description": "Order field type casting. Possible values are int, string, date, time or datetime. The database will attempt to cast the order field to the value you pass here. The default value is a string."
      },
      "search": {
        "default": "",
        "type": "string",
        "x-example": "[SEARCH]",
        "description": "Search query. Enter any free text search. The database will try to find a match against all document attributes and children. Max length: 256 chars."
      }
    },
    "required": [
      "collectionId"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://appwrite.io/v1/database/collections/{collectionId}/documents{?filters,limit,offset,orderField,orderType,orderCast,search}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Documents List",
        "**Key properties:**",
        {
          "$ul": [
            "**documents**: List of documents.",
            "**sum**: Total sum of items in the list."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
