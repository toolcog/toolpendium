{
  "name": "createTagForWorkspace",
  "description": "Creates a new tag in a workspace or organization.\n\nEvery tag is required to be created in a specific workspace or\norganization, and this cannot be changed once set. Note that you can use\nthe workspace parameter regardless of whether or not it is an\norganization.\n\nReturns the full record of the newly created tag.",
  "parameters": {
    "type": "object",
    "properties": {
      "workspace_gid": {
        "type": "string",
        "description": "Globally unique identifier for the workspace or organization."
      },
      "opt_pretty": {
        "type": "boolean",
        "description": "Provides “pretty” output.\nProvides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging."
      },
      "opt_fields": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "Defines fields to return.\nSome requests return *compact* representations of objects in order to conserve resources and complete the request more efficiently. Other times requests return more information than you may need. This option allows you to list the exact set of fields that the API should be sure to return for the objects. The field names should be provided as paths, described below.\nThe id of included objects will always be returned, regardless of the field options."
      },
      "body": {
        "properties": {
          "data": {
            "$ref": "#/$defs/TagResponse"
          }
        },
        "type": "object",
        "description": "The tag to create."
      }
    },
    "required": [
      "workspace_gid",
      "body"
    ],
    "$defs": {
      "TagResponse": {
        "allOf": [
          {
            "$ref": "#/$defs/TagBase"
          },
          {
            "properties": {
              "created_at": {
                "description": "The time at which this resource was created.",
                "example": "2012-02-22T02:06:58.147Z",
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "followers": {
                "description": "Array of users following this tag.",
                "items": {
                  "$ref": "#/$defs/UserCompact"
                },
                "readOnly": true,
                "type": "array"
              },
              "permalink_url": {
                "description": "A url that points directly to the object within Asana.",
                "example": "https://app.asana.com/0/resource/123456789/list",
                "readOnly": true,
                "type": "string"
              },
              "workspace": {
                "$ref": "#/$defs/WorkspaceCompact"
              }
            },
            "type": "object"
          }
        ]
      },
      "TagBase": {
        "allOf": [
          {
            "$ref": "#/$defs/TagCompact"
          },
          {
            "properties": {
              "color": {
                "description": "Color of the tag.",
                "enum": [
                  "dark-pink",
                  "dark-green",
                  "dark-blue",
                  "dark-red",
                  "dark-teal",
                  "dark-brown",
                  "dark-orange",
                  "dark-purple",
                  "dark-warm-gray",
                  "light-pink",
                  "light-green",
                  "light-blue",
                  "light-red",
                  "light-teal",
                  "light-brown",
                  "light-orange",
                  "light-purple",
                  "light-warm-gray"
                ],
                "example": "light-green",
                "nullable": true,
                "type": "string"
              },
              "notes": {
                "description": "Free-form textual information associated with the tag (i.e. its description).",
                "example": "Mittens really likes the stuff from Humboldt.",
                "type": "string"
              }
            },
            "type": "object"
          }
        ]
      },
      "TagCompact": {
        "allOf": [
          {
            "$ref": "#/$defs/AsanaResource"
          },
          {
            "description": "A *tag* is a label that can be attached to any task in Asana. It exists in a single workspace or organization.",
            "properties": {
              "name": {
                "description": "Name of the tag. This is generally a short sentence fragment that fits on a line in the UI for maximum readability. However, it can be longer.",
                "example": "Stuff to buy",
                "type": "string"
              }
            },
            "type": "object",
            "x-docs-overrides": {
              "properties.resource_type.example": "tag"
            }
          }
        ]
      },
      "AsanaResource": {
        "description": "A generic Asana Resource, containing a globally unique identifier.",
        "properties": {
          "gid": {
            "description": "Globally unique identifier of the resource, as a string.",
            "example": "12345",
            "readOnly": true,
            "type": "string",
            "x-insert-after": false
          },
          "resource_type": {
            "description": "The base type of this resource.",
            "example": "task",
            "readOnly": true,
            "type": "string",
            "x-insert-after": "gid"
          }
        },
        "type": "object"
      },
      "UserCompact": {
        "allOf": [
          {
            "$ref": "#/$defs/AsanaResource"
          },
          {
            "description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.",
            "properties": {
              "name": {
                "description": "*Read-only except when same user as requester*. The user’s name.",
                "example": "Greg Sanchez",
                "type": "string"
              }
            },
            "type": "object",
            "x-docs-overrides": {
              "properties.resource_type.example": "user"
            }
          }
        ]
      },
      "WorkspaceCompact": {
        "allOf": [
          {
            "$ref": "#/$defs/AsanaResource"
          },
          {
            "description": "A *workspace* is the highest-level organizational unit in Asana. All projects and tasks have an associated workspace.",
            "properties": {
              "name": {
                "description": "The name of the workspace.",
                "example": "My Company Workspace",
                "type": "string"
              }
            },
            "type": "object",
            "x-docs-overrides": {
              "properties.resource_type.example": "workspace"
            }
          }
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://app.asana.com/api/1.0/workspaces/{workspace_gid}/tags{?opt_pretty,opt_fields}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**data**: A generic Asana Resource, containing a globally unique identifier.",
              {
                "$ul": [
                  "**gid**: Globally unique identifier of the resource, as a string.",
                  "**resource_type**: The base type of this resource.",
                  "**name**: Name of the tag. This is generally a short sentence fragment that fits on a line in the UI for maximum readability. However, it can be longer.",
                  "**color**: Color of the tag.",
                  "**notes**: Free-form textual information associated with the tag (i.e. its description).",
                  "**created_at**: The time at which this resource was created.",
                  "**followers**: Array of users following this tag.",
                  "**permalink_url**: A url that points directly to the object within Asana.",
                  [
                    "**workspace**: A generic Asana Resource, containing a globally unique identifier.",
                    {
                      "$ul": [
                        "**gid**: Globally unique identifier of the resource, as a string.",
                        "**resource_type**: The base type of this resource.",
                        "**name**: The name of the workspace."
                      ]
                    }
                  ]
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Sadly, sometimes requests to the API are not successful. Failures can\noccur for a wide range of reasons. In all cases, the API should return\nan HTTP Status Code that indicates the nature of the failure,\nwith a response body in JSON format containing additional information.\n\n\nIn the event of a server error the response body will contain an error\nphrase. These phrases are automatically generated using the\n[node-asana-phrase\nlibrary](https://github.com/Asana/node-asana-phrase) and can be used by\nAsana support to quickly look up the incident that caused the server\nerror.",
        "**Key properties:**",
        {
          "$ul": [
            "**errors**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Sadly, sometimes requests to the API are not successful. Failures can\noccur for a wide range of reasons. In all cases, the API should return\nan HTTP Status Code that indicates the nature of the failure,\nwith a response body in JSON format containing additional information.\n\n\nIn the event of a server error the response body will contain an error\nphrase. These phrases are automatically generated using the\n[node-asana-phrase\nlibrary](https://github.com/Asana/node-asana-phrase) and can be used by\nAsana support to quickly look up the incident that caused the server\nerror.",
        "**Key properties:**",
        {
          "$ul": [
            "**errors**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Sadly, sometimes requests to the API are not successful. Failures can\noccur for a wide range of reasons. In all cases, the API should return\nan HTTP Status Code that indicates the nature of the failure,\nwith a response body in JSON format containing additional information.\n\n\nIn the event of a server error the response body will contain an error\nphrase. These phrases are automatically generated using the\n[node-asana-phrase\nlibrary](https://github.com/Asana/node-asana-phrase) and can be used by\nAsana support to quickly look up the incident that caused the server\nerror.",
        "**Key properties:**",
        {
          "$ul": [
            "**errors**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Sadly, sometimes requests to the API are not successful. Failures can\noccur for a wide range of reasons. In all cases, the API should return\nan HTTP Status Code that indicates the nature of the failure,\nwith a response body in JSON format containing additional information.\n\n\nIn the event of a server error the response body will contain an error\nphrase. These phrases are automatically generated using the\n[node-asana-phrase\nlibrary](https://github.com/Asana/node-asana-phrase) and can be used by\nAsana support to quickly look up the incident that caused the server\nerror.",
        "**Key properties:**",
        {
          "$ul": [
            "**errors**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "500": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Sadly, sometimes requests to the API are not successful. Failures can\noccur for a wide range of reasons. In all cases, the API should return\nan HTTP Status Code that indicates the nature of the failure,\nwith a response body in JSON format containing additional information.\n\n\nIn the event of a server error the response body will contain an error\nphrase. These phrases are automatically generated using the\n[node-asana-phrase\nlibrary](https://github.com/Asana/node-asana-phrase) and can be used by\nAsana support to quickly look up the incident that caused the server\nerror.",
        "**Key properties:**",
        {
          "$ul": [
            "**errors**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
