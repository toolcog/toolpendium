{
  "name": "updateStory",
  "description": "Updates the story and returns the full record for the updated story. Only comment stories can have their text updated, and only comment stories and attachment stories can be pinned. Only one of `text` and `html_text` can be specified.",
  "parameters": {
    "type": "object",
    "properties": {
      "story_gid": {
        "type": "string",
        "description": "Globally unique identifier for the story."
      },
      "opt_pretty": {
        "type": "boolean",
        "description": "Provides “pretty” output.\nProvides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging."
      },
      "opt_fields": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "Defines fields to return.\nSome requests return *compact* representations of objects in order to conserve resources and complete the request more efficiently. Other times requests return more information than you may need. This option allows you to list the exact set of fields that the API should be sure to return for the objects. The field names should be provided as paths, described below.\nThe id of included objects will always be returned, regardless of the field options."
      },
      "body": {
        "properties": {
          "data": {
            "$ref": "#/$defs/StoryRequest"
          }
        },
        "type": "object",
        "description": "The comment story to update."
      }
    },
    "required": [
      "story_gid",
      "body"
    ],
    "$defs": {
      "StoryRequest": {
        "$ref": "#/$defs/StoryBase"
      },
      "StoryBase": {
        "allOf": [
          {
            "$ref": "#/$defs/AsanaResource"
          },
          {
            "description": "A story represents an activity associated with an object in the Asana system.",
            "properties": {
              "created_at": {
                "description": "The time at which this resource was created.",
                "example": "2012-02-22T02:06:58.147Z",
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "html_text": {
                "description": "[Opt In](/docs/input-output-options). HTML formatted text for a comment. This will not include the name of the creator.",
                "example": "<body>This is a comment.</body>",
                "type": "string"
              },
              "is_pinned": {
                "description": "*Conditional*. Whether the story should be pinned on the resource.",
                "example": false,
                "type": "boolean"
              },
              "resource_subtype": {
                "description": "The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning.",
                "example": "comment_added",
                "readOnly": true,
                "type": "string"
              },
              "sticker_name": {
                "description": "The name of the sticker in this story. `null` if there is no sticker.",
                "enum": [
                  "green_checkmark",
                  "people_dancing",
                  "dancing_unicorn",
                  "heart",
                  "party_popper",
                  "people_waving_flags",
                  "splashing_narwhal",
                  "trophy",
                  "yeti_riding_unicorn",
                  "celebrating_people",
                  "determined_climbers",
                  "phoenix_spreading_love"
                ],
                "example": "dancing_unicorn",
                "type": "string"
              },
              "text": {
                "description": "The plain text of the comment to add. Cannot be used with html_text.",
                "example": "This is a comment.",
                "type": "string"
              }
            },
            "type": "object",
            "x-docs-overrides": {
              "properties.resource_type.example": "story"
            }
          }
        ]
      },
      "AsanaResource": {
        "description": "A generic Asana Resource, containing a globally unique identifier.",
        "properties": {
          "gid": {
            "description": "Globally unique identifier of the resource, as a string.",
            "example": "12345",
            "readOnly": true,
            "type": "string",
            "x-insert-after": false
          },
          "resource_type": {
            "description": "The base type of this resource.",
            "example": "task",
            "readOnly": true,
            "type": "string",
            "x-insert-after": "gid"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "https://app.asana.com/api/1.0/stories/{story_gid}{?opt_pretty,opt_fields}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**data**: A generic Asana Resource, containing a globally unique identifier.",
              {
                "$ul": [
                  "**gid**: Globally unique identifier of the resource, as a string.",
                  "**resource_type**: The base type of this resource.",
                  "**created_at**: The time at which this resource was created.",
                  "**html_text**: [Opt In](/docs/input-output-options). HTML formatted text for a comment. This will not include the name of the creator.",
                  "**is_pinned**: *Conditional*. Whether the story should be pinned on the resource.",
                  "**resource_subtype**: The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning.",
                  "**sticker_name**: The name of the sticker in this story. `null` if there is no sticker.",
                  "**text**: The plain text of the comment to add. Cannot be used with html_text.",
                  [
                    "**assignee**: A generic Asana Resource, containing a globally unique identifier.",
                    {
                      "$ul": [
                        "**gid**: Globally unique identifier of the resource, as a string.",
                        "**resource_type**: The base type of this resource.",
                        "**name**: *Read-only except when same user as requester*. The user’s name."
                      ]
                    }
                  ],
                  [
                    "**created_by**: A generic Asana Resource, containing a globally unique identifier.",
                    {
                      "$ul": [
                        "**gid**: Globally unique identifier of the resource, as a string.",
                        "**resource_type**: The base type of this resource.",
                        "**name**: *Read-only except when same user as requester*. The user’s name."
                      ]
                    }
                  ],
                  [
                    "**custom_field**: A generic Asana Resource, containing a globally unique identifier.",
                    {
                      "$ul": [
                        "**gid**: Globally unique identifier of the resource, as a string.",
                        "**resource_type**: The base type of this resource.",
                        [
                          "**date_value**: *Conditional*. Only relevant for custom fields of type `date`. This object reflects the chosen date (and optionally, time) value of a `date` custom field. If no date is selected, the value of `date_value` will be `null`.",
                          {
                            "$ul": [
                              "**date**: A string representing the date in YYYY-MM-DD format.",
                              "**date_time**: A string representing the date in ISO 8601 format. If no time value is selected, the value of `date-time` will be `null`."
                            ]
                          }
                        ],
                        "**display_value**: A string representation for the value of the custom field. Integrations that don't require the underlying type should use this field to read values. Using this field will future-proof an app against new custom field types.",
                        "**enabled**: *Conditional*. Determines if the custom field is enabled or not.",
                        "**enum_options**: *Conditional*. Only relevant for custom fields of type `enum`. This array specifies the possible values which an `enum` custom field can adopt. To modify the enum options, refer to [working with enum options](/docs/create-an-enum-option).",
                        [
                          "**enum_value**: A generic Asana Resource, containing a globally unique identifier.",
                          {
                            "$ul": [
                              "**gid**: Globally unique identifier of the resource, as a string.",
                              "**resource_type**: The base type of this resource.",
                              "**color**: The color of the enum option. Defaults to ‘none’.",
                              "**enabled**: Whether or not the enum option is a selectable value for the custom field.",
                              "**name**: The name of the enum option."
                            ]
                          }
                        ],
                        "**multi_enum_values**: *Conditional*. Only relevant for custom fields of type `multi_enum`. This object is the chosen values of a `multi_enum` custom field.",
                        "**name**: The name of the custom field.",
                        "**number_value**: *Conditional*. This number is the value of a `number` custom field.",
                        "**resource_subtype**: The type of the custom field. Must be one of the given values.",
                        "**text_value**: *Conditional*. This string is the value of a `text` custom field.",
                        "**type**: *Deprecated: new integrations should prefer the resource_subtype field.* The type of the custom field. Must be one of the given values."
                      ]
                    }
                  ],
                  [
                    "**dependency**: A generic Asana Resource, containing a globally unique identifier.",
                    {
                      "$ul": [
                        "**gid**: Globally unique identifier of the resource, as a string.",
                        "**resource_type**: The base type of this resource.",
                        "**name**: The name of the task.",
                        "**resource_subtype**: The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning."
                      ]
                    }
                  ],
                  [
                    "**duplicate_of**: A generic Asana Resource, containing a globally unique identifier.",
                    {
                      "$ul": [
                        "**gid**: Globally unique identifier of the resource, as a string.",
                        "**resource_type**: The base type of this resource.",
                        "**name**: The name of the task.",
                        "**resource_subtype**: The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning."
                      ]
                    }
                  ],
                  [
                    "**duplicated_from**: A generic Asana Resource, containing a globally unique identifier.",
                    {
                      "$ul": [
                        "**gid**: Globally unique identifier of the resource, as a string.",
                        "**resource_type**: The base type of this resource.",
                        "**name**: The name of the task.",
                        "**resource_subtype**: The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning."
                      ]
                    }
                  ],
                  [
                    "**follower**: A generic Asana Resource, containing a globally unique identifier.",
                    {
                      "$ul": [
                        "**gid**: Globally unique identifier of the resource, as a string.",
                        "**resource_type**: The base type of this resource.",
                        "**name**: *Read-only except when same user as requester*. The user’s name."
                      ]
                    }
                  ],
                  "**hearted**: *Deprecated - please use likes instead*",
                  "**hearts**: *Deprecated - please use likes instead*",
                  "**is_editable**: *Conditional*. Whether the text of the story can be edited after creation.",
                  "**is_edited**: *Conditional*. Whether the text of the story has been edited after creation.",
                  "**liked**: *Conditional*. True if the story is liked by the authorized user, false if not.",
                  "**likes**: *Conditional*. Array of likes for users who have liked this story.",
                  "**new_approval_status**: *Conditional*. The new value of approval status.",
                  "**new_date_value**",
                  [
                    "**new_dates**: *Conditional*",
                    {
                      "$ul": [
                        "**due_at**: The UTC date and time on which this task is due, or null if the task has no due time. This takes an ISO 8601 date string in UTC and should not be used together with `due_on`.",
                        "**due_on**: The localized day on which this goal is due. This takes a date with format `YYYY-MM-DD`.",
                        "**start_on**: The day on which work for this goal begins, or null if the goal has no start date. This takes a date with `YYYY-MM-DD` format, and cannot be set unless there is an accompanying due date."
                      ]
                    }
                  ],
                  [
                    "**new_enum_value**: A generic Asana Resource, containing a globally unique identifier.",
                    {
                      "$ul": [
                        "**gid**: Globally unique identifier of the resource, as a string.",
                        "**resource_type**: The base type of this resource.",
                        "**color**: The color of the enum option. Defaults to ‘none’.",
                        "**enabled**: Whether or not the enum option is a selectable value for the custom field.",
                        "**name**: The name of the enum option."
                      ]
                    }
                  ],
                  "**new_multi_enum_values**: *Conditional*. The new value of a multi-enum custom field story.",
                  "**new_name**: *Conditional*",
                  "**new_number_value**: *Conditional*",
                  "**new_people_value**: *Conditional*. The new value of a people custom field story.",
                  "**new_resource_subtype**: *Conditional*",
                  [
                    "**new_section**: A generic Asana Resource, containing a globally unique identifier.",
                    {
                      "$ul": [
                        "**gid**: Globally unique identifier of the resource, as a string.",
                        "**resource_type**: The base type of this resource.",
                        "**name**: The name of the section (i.e. the text displayed as the section header)."
                      ]
                    }
                  ],
                  "**new_text_value**: *Conditional*",
                  "**num_hearts**: *Deprecated - please use likes instead*",
                  "**num_likes**: *Conditional*. The number of users who have liked this story.",
                  "**old_approval_status**: *Conditional*. The old value of approval status.",
                  "**old_date_value**",
                  [
                    "**old_dates**: *Conditional*",
                    {
                      "$ul": [
                        "**due_at**: The UTC date and time on which this task is due, or null if the task has no due time. This takes an ISO 8601 date string in UTC and should not be used together with `due_on`.",
                        "**due_on**: The localized day on which this goal is due. This takes a date with format `YYYY-MM-DD`.",
                        "**start_on**: The day on which work for this goal begins, or null if the goal has no start date. This takes a date with `YYYY-MM-DD` format, and cannot be set unless there is an accompanying due date."
                      ]
                    }
                  ],
                  [
                    "**old_enum_value**: A generic Asana Resource, containing a globally unique identifier.",
                    {
                      "$ul": [
                        "**gid**: Globally unique identifier of the resource, as a string.",
                        "**resource_type**: The base type of this resource.",
                        "**color**: The color of the enum option. Defaults to ‘none’.",
                        "**enabled**: Whether or not the enum option is a selectable value for the custom field.",
                        "**name**: The name of the enum option."
                      ]
                    }
                  ],
                  "**old_multi_enum_values**: *Conditional*. The old value of a multi-enum custom field story.",
                  "**old_name**: *Conditional*'",
                  "**old_number_value**: *Conditional*",
                  "**old_people_value**: *Conditional*. The old value of a people custom field story.",
                  "**old_resource_subtype**: *Conditional*",
                  [
                    "**old_section**: A generic Asana Resource, containing a globally unique identifier.",
                    {
                      "$ul": [
                        "**gid**: Globally unique identifier of the resource, as a string.",
                        "**resource_type**: The base type of this resource.",
                        "**name**: The name of the section (i.e. the text displayed as the section header)."
                      ]
                    }
                  ],
                  "**old_text_value**: *Conditional*",
                  "**previews**: *Conditional*. A collection of previews to be displayed in the story.",
                  [
                    "**project**: A generic Asana Resource, containing a globally unique identifier.",
                    {
                      "$ul": [
                        "**gid**: Globally unique identifier of the resource, as a string.",
                        "**resource_type**: The base type of this resource.",
                        "**name**: Name of the project. This is generally a short sentence fragment that fits on a line in the UI for maximum readability. However, it can be longer."
                      ]
                    }
                  ],
                  "**source**: The component of the Asana product the user used to trigger the story.",
                  [
                    "**story**: A generic Asana Resource, containing a globally unique identifier.",
                    {
                      "$ul": [
                        "**gid**: Globally unique identifier of the resource, as a string.",
                        "**resource_type**: The base type of this resource.",
                        "**created_at**: The time at which this resource was created.",
                        [
                          "**created_by**: A generic Asana Resource, containing a globally unique identifier.",
                          {
                            "$ul": [
                              "**gid**: Globally unique identifier of the resource, as a string.",
                              "**resource_type**: The base type of this resource.",
                              "**name**: *Read-only except when same user as requester*. The user’s name."
                            ]
                          }
                        ],
                        "**resource_subtype**: The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning.",
                        "**text**: *Create-only*. Human-readable text for the story or comment."
                      ]
                    }
                  ],
                  [
                    "**tag**: A generic Asana Resource, containing a globally unique identifier.",
                    {
                      "$ul": [
                        "**gid**: Globally unique identifier of the resource, as a string.",
                        "**resource_type**: The base type of this resource.",
                        "**name**: Name of the tag. This is generally a short sentence fragment that fits on a line in the UI for maximum readability. However, it can be longer."
                      ]
                    }
                  ],
                  [
                    "**target**: A generic Asana Resource, containing a globally unique identifier.",
                    {
                      "$ul": [
                        "**gid**: Globally unique identifier of the resource, as a string.",
                        "**resource_type**: The base type of this resource.",
                        "**name**: The name of the task.",
                        "**resource_subtype**: The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning."
                      ]
                    }
                  ],
                  [
                    "**task**: A generic Asana Resource, containing a globally unique identifier.",
                    {
                      "$ul": [
                        "**gid**: Globally unique identifier of the resource, as a string.",
                        "**resource_type**: The base type of this resource.",
                        "**name**: The name of the task.",
                        "**resource_subtype**: The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning."
                      ]
                    }
                  ],
                  "**type**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Sadly, sometimes requests to the API are not successful. Failures can\noccur for a wide range of reasons. In all cases, the API should return\nan HTTP Status Code that indicates the nature of the failure,\nwith a response body in JSON format containing additional information.\n\n\nIn the event of a server error the response body will contain an error\nphrase. These phrases are automatically generated using the\n[node-asana-phrase\nlibrary](https://github.com/Asana/node-asana-phrase) and can be used by\nAsana support to quickly look up the incident that caused the server\nerror.",
        "**Key properties:**",
        {
          "$ul": [
            "**errors**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Sadly, sometimes requests to the API are not successful. Failures can\noccur for a wide range of reasons. In all cases, the API should return\nan HTTP Status Code that indicates the nature of the failure,\nwith a response body in JSON format containing additional information.\n\n\nIn the event of a server error the response body will contain an error\nphrase. These phrases are automatically generated using the\n[node-asana-phrase\nlibrary](https://github.com/Asana/node-asana-phrase) and can be used by\nAsana support to quickly look up the incident that caused the server\nerror.",
        "**Key properties:**",
        {
          "$ul": [
            "**errors**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Sadly, sometimes requests to the API are not successful. Failures can\noccur for a wide range of reasons. In all cases, the API should return\nan HTTP Status Code that indicates the nature of the failure,\nwith a response body in JSON format containing additional information.\n\n\nIn the event of a server error the response body will contain an error\nphrase. These phrases are automatically generated using the\n[node-asana-phrase\nlibrary](https://github.com/Asana/node-asana-phrase) and can be used by\nAsana support to quickly look up the incident that caused the server\nerror.",
        "**Key properties:**",
        {
          "$ul": [
            "**errors**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Sadly, sometimes requests to the API are not successful. Failures can\noccur for a wide range of reasons. In all cases, the API should return\nan HTTP Status Code that indicates the nature of the failure,\nwith a response body in JSON format containing additional information.\n\n\nIn the event of a server error the response body will contain an error\nphrase. These phrases are automatically generated using the\n[node-asana-phrase\nlibrary](https://github.com/Asana/node-asana-phrase) and can be used by\nAsana support to quickly look up the incident that caused the server\nerror.",
        "**Key properties:**",
        {
          "$ul": [
            "**errors**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "500": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Sadly, sometimes requests to the API are not successful. Failures can\noccur for a wide range of reasons. In all cases, the API should return\nan HTTP Status Code that indicates the nature of the failure,\nwith a response body in JSON format containing additional information.\n\n\nIn the event of a server error the response body will contain an error\nphrase. These phrases are automatically generated using the\n[node-asana-phrase\nlibrary](https://github.com/Asana/node-asana-phrase) and can be used by\nAsana support to quickly look up the incident that caused the server\nerror.",
        "**Key properties:**",
        {
          "$ul": [
            "**errors**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
