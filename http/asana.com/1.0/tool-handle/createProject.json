{
  "name": "createProject",
  "description": "Create a new project in a workspace or team.\n\nEvery project is required to be created in a specific workspace or\norganization, and this cannot be changed once set. Note that you can use\nthe `workspace` parameter regardless of whether or not it is an\norganization.\n\nIf the workspace for your project is an organization, you must also\nsupply a `team` to share the project with.\n\nReturns the full record of the newly created project.",
  "parameters": {
    "type": "object",
    "properties": {
      "opt_pretty": {
        "type": "boolean",
        "description": "Provides “pretty” output.\nProvides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging."
      },
      "opt_fields": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "Defines fields to return.\nSome requests return *compact* representations of objects in order to conserve resources and complete the request more efficiently. Other times requests return more information than you may need. This option allows you to list the exact set of fields that the API should be sure to return for the objects. The field names should be provided as paths, described below.\nThe id of included objects will always be returned, regardless of the field options."
      },
      "body": {
        "properties": {
          "data": {
            "$ref": "#/$defs/ProjectRequest"
          }
        },
        "type": "object",
        "description": "The project to create."
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "ProjectRequest": {
        "allOf": [
          {
            "$ref": "#/$defs/ProjectBase"
          },
          {
            "properties": {
              "custom_fields": {
                "additionalProperties": {
                  "description": "\"{custom_field_gid}\" => Value (Can be text, number, etc.)",
                  "type": "string"
                },
                "description": "An object where each key is a Custom Field GID and each value is an enum GID, string, number, or object.",
                "example": {
                  "4578152156": "Not Started",
                  "5678904321": "On Hold"
                },
                "type": "object"
              },
              "followers": {
                "description": "*Create-only*. Comma separated string of users. Followers are a subset of members who have opted in to receive \"tasks added\" notifications for a project.",
                "example": "12345,23456",
                "type": "string"
              },
              "owner": {
                "description": "The current owner of the project, may be null.",
                "example": "12345",
                "nullable": true,
                "type": "string"
              },
              "team": {
                "description": "The team that this project is shared with.",
                "example": "12345",
                "type": "string"
              }
            },
            "type": "object"
          }
        ]
      },
      "ProjectBase": {
        "allOf": [
          {
            "$ref": "#/$defs/ProjectCompact"
          },
          {
            "properties": {
              "archived": {
                "description": "True if the project is archived, false if not. Archived projects do not show in the UI by default and may be treated differently for queries.",
                "example": false,
                "type": "boolean"
              },
              "color": {
                "description": "Color of the project.",
                "enum": [
                  "dark-pink",
                  "dark-green",
                  "dark-blue",
                  "dark-red",
                  "dark-teal",
                  "dark-brown",
                  "dark-orange",
                  "dark-purple",
                  "dark-warm-gray",
                  "light-pink",
                  "light-green",
                  "light-blue",
                  "light-red",
                  "light-teal",
                  "light-brown",
                  "light-orange",
                  "light-purple",
                  "light-warm-gray"
                ],
                "example": "light-green",
                "nullable": true,
                "type": "string"
              },
              "created_at": {
                "description": "The time at which this resource was created.",
                "example": "2012-02-22T02:06:58.147Z",
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "current_status": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ProjectStatusResponse"
                  }
                ],
                "description": "*Deprecated: new integrations should prefer the `current_status_update` resource.*",
                "nullable": true
              },
              "current_status_update": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StatusUpdateCompact"
                  }
                ],
                "description": "The latest `status_update` posted to this project.",
                "nullable": true
              },
              "custom_field_settings": {
                "description": "Array of Custom Field Settings (in compact form).",
                "items": {
                  "$ref": "#/$defs/CustomFieldSettingResponse"
                },
                "readOnly": true,
                "type": "array"
              },
              "default_view": {
                "description": "The default view (list, board, calendar, or timeline) of a project.",
                "enum": [
                  "list",
                  "board",
                  "calendar",
                  "timeline"
                ],
                "example": "calendar",
                "type": "string"
              },
              "due_date": {
                "description": "*Deprecated: new integrations should prefer the `due_on` field.*",
                "example": "2019-09-15",
                "format": "date-time",
                "nullable": true,
                "type": "string"
              },
              "due_on": {
                "description": "The day on which this project is due. This takes a date with format YYYY-MM-DD.",
                "example": "2019-09-15",
                "format": "date-time",
                "nullable": true,
                "type": "string"
              },
              "html_notes": {
                "description": "[Opt In](/docs/input-output-options). The notes of the project with formatting as HTML.",
                "example": "<body>These are things we need to purchase.</body>",
                "type": "string"
              },
              "is_template": {
                "description": "[Opt In](/docs/input-output-options). *Deprecated - please use a project template endpoint instead (more in [this forum post](https://forum.asana.com/t/a-new-api-for-project-templates/156432)).* Determines if the project is a template.",
                "example": false,
                "type": "boolean"
              },
              "members": {
                "description": "Array of users who are members of this project.",
                "items": {
                  "$ref": "#/$defs/UserCompact"
                },
                "readOnly": true,
                "type": "array"
              },
              "modified_at": {
                "description": "The time at which this project was last modified.\n*Note: This does not currently reflect any changes in associations such as tasks or comments that may have been added or removed from the project.*",
                "example": "2012-02-22T02:06:58.147Z",
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "notes": {
                "description": "Free-form textual information associated with the project (ie., its description).",
                "example": "These are things we need to purchase.",
                "type": "string"
              },
              "public": {
                "description": "True if the project is public to its team.",
                "example": false,
                "type": "boolean"
              },
              "start_on": {
                "description": "The day on which work for this project begins, or null if the project has no start date. This takes a date with `YYYY-MM-DD` format. *Note: `due_on` or `due_at` must be present in the request when setting or unsetting the `start_on` parameter. Additionally, `start_on` and `due_on` cannot be the same date.*",
                "example": "2019-09-14",
                "format": "date",
                "nullable": true,
                "type": "string"
              },
              "workspace": {
                "allOf": [
                  {
                    "$ref": "#/$defs/WorkspaceCompact"
                  },
                  {
                    "description": "*Create-only*. The workspace or organization this project is associated with. Once created, projects cannot be moved to a different workspace. This attribute can only be specified at creation time.",
                    "readOnly": true,
                    "type": "object"
                  }
                ]
              }
            },
            "type": "object"
          }
        ]
      },
      "ProjectCompact": {
        "allOf": [
          {
            "$ref": "#/$defs/AsanaResource"
          },
          {
            "description": "A *project* represents a prioritized list of tasks in Asana or a board with columns of tasks represented as cards. It exists in a single workspace or organization and is accessible to a subset of users in that workspace or organization, depending on its permissions.",
            "properties": {
              "name": {
                "description": "Name of the project. This is generally a short sentence fragment that fits on a line in the UI for maximum readability. However, it can be longer.",
                "example": "Stuff to buy",
                "type": "string"
              }
            },
            "type": "object",
            "x-docs-overrides": {
              "properties.resource_type.example": "project"
            }
          }
        ]
      },
      "AsanaResource": {
        "description": "A generic Asana Resource, containing a globally unique identifier.",
        "properties": {
          "gid": {
            "description": "Globally unique identifier of the resource, as a string.",
            "example": "12345",
            "readOnly": true,
            "type": "string",
            "x-insert-after": false
          },
          "resource_type": {
            "description": "The base type of this resource.",
            "example": "task",
            "readOnly": true,
            "type": "string",
            "x-insert-after": "gid"
          }
        },
        "type": "object"
      },
      "ProjectStatusResponse": {
        "allOf": [
          {
            "$ref": "#/$defs/ProjectStatusBase"
          },
          {
            "properties": {
              "author": {
                "$ref": "#/$defs/UserCompact"
              },
              "created_at": {
                "description": "The time at which this resource was created.",
                "example": "2012-02-22T02:06:58.147Z",
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "created_by": {
                "$ref": "#/$defs/UserCompact"
              },
              "modified_at": {
                "description": "The time at which this project status was last modified.\n*Note: This does not currently reflect any changes in associations such as comments that may have been added or removed from the project status.*",
                "example": "2012-02-22T02:06:58.147Z",
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "type": "object"
          }
        ]
      },
      "ProjectStatusBase": {
        "allOf": [
          {
            "$ref": "#/$defs/ProjectStatusCompact"
          },
          {
            "properties": {
              "color": {
                "description": "The color associated with the status update.",
                "enum": [
                  "green",
                  "yellow",
                  "red",
                  "blue"
                ],
                "type": "string"
              },
              "html_text": {
                "description": "[Opt In](/docs/input-output-options). The text content of the status update with formatting as HTML.",
                "example": "<body>The project <strong>is</strong> moving forward according to plan...</body>",
                "type": "string"
              },
              "text": {
                "description": "The text content of the status update.",
                "example": "The project is moving forward according to plan...",
                "type": "string"
              }
            },
            "required": [
              "text",
              "color"
            ],
            "type": "object"
          }
        ]
      },
      "ProjectStatusCompact": {
        "allOf": [
          {
            "$ref": "#/$defs/AsanaResource"
          },
          {
            "description": "*Deprecated: new integrations should prefer the `status_update` resource.*\nA *project status* is an update on the progress of a particular project, and is sent out to all project followers when created. These updates include both text describing the update and a color code intended to represent the overall state of the project: \"green\" for projects that are on track, \"yellow\" for projects at risk, and \"red\" for projects that are behind.",
            "properties": {
              "title": {
                "description": "The title of the project status update.",
                "example": "Status Update - Jun 15",
                "type": "string"
              }
            },
            "type": "object",
            "x-docs-overrides": {
              "properties.resource_type.example": "project_status"
            }
          }
        ]
      },
      "UserCompact": {
        "allOf": [
          {
            "$ref": "#/$defs/AsanaResource"
          },
          {
            "description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.",
            "properties": {
              "name": {
                "description": "*Read-only except when same user as requester*. The user’s name.",
                "example": "Greg Sanchez",
                "type": "string"
              }
            },
            "type": "object",
            "x-docs-overrides": {
              "properties.resource_type.example": "user"
            }
          }
        ]
      },
      "StatusUpdateCompact": {
        "allOf": [
          {
            "$ref": "#/$defs/AsanaResource"
          },
          {
            "description": "A *status update* is an update on the progress of a particular project, portfolio, or goal, and is sent out to all of its parent's followers when created. These updates include both text describing the update and a `status_type` intended to represent the overall state of the project.",
            "properties": {
              "resource_subtype": {
                "description": "The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning.\nThe `resource_subtype`s for `status` objects represent the type of their parent.",
                "enum": [
                  "project_status_update",
                  "portfolio_status_update",
                  "goal_status_update"
                ],
                "example": "project_status_update",
                "readOnly": true,
                "type": "string"
              },
              "title": {
                "description": "The title of the status update.",
                "example": "Status Update - Jun 15",
                "type": "string"
              }
            },
            "type": "object",
            "x-docs-overrides": {
              "properties.resource_type.example": "status_update"
            }
          }
        ]
      },
      "CustomFieldSettingResponse": {
        "allOf": [
          {
            "$ref": "#/$defs/CustomFieldSettingBase"
          },
          {
            "properties": {
              "custom_field": {
                "allOf": [
                  {
                    "$ref": "#/$defs/CustomFieldResponse"
                  },
                  {
                    "description": "The custom field that is applied to the `parent`.",
                    "readOnly": true,
                    "type": "object"
                  }
                ]
              },
              "is_important": {
                "description": "`is_important` is used in the Asana web application to determine if this custom field is displayed in the list/grid view of a project or portfolio.",
                "example": false,
                "readOnly": true,
                "type": "boolean"
              },
              "parent": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ProjectCompact"
                  },
                  {
                    "description": "The parent to which the custom field is applied. This can be a project or portfolio and indicates that the tasks or projects that the parent contains may be given custom field values for this custom field.",
                    "readOnly": true,
                    "type": "object"
                  }
                ]
              },
              "project": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ProjectCompact"
                  },
                  {
                    "description": "*Deprecated: new integrations should prefer the `parent` field.* The id of the project that this custom field settings refers to.",
                    "readOnly": true,
                    "type": "object"
                  }
                ]
              }
            },
            "type": "object"
          }
        ]
      },
      "CustomFieldSettingBase": {
        "$ref": "#/$defs/CustomFieldSettingCompact"
      },
      "CustomFieldSettingCompact": {
        "allOf": [
          {
            "$ref": "#/$defs/AsanaResource"
          },
          {
            "description": "Custom Fields Settings objects represent the many-to-many join of the Custom Field and Project as well as stores information that is relevant to that particular pairing.",
            "type": "object",
            "x-docs-overrides": {
              "properties.resource_type.example": "custom_field_setting"
            }
          }
        ]
      },
      "CustomFieldResponse": {
        "allOf": [
          {
            "$ref": "#/$defs/CustomFieldBase"
          },
          {
            "properties": {
              "created_by": {
                "$ref": "#/$defs/UserCompact"
              },
              "people_value": {
                "description": "*Conditional*. Only relevant for custom fields of type `people`. This array of [compact user](/docs/user-compact) objects reflects the values of a `people` custom field.",
                "items": {
                  "$ref": "#/$defs/UserCompact"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        ]
      },
      "CustomFieldBase": {
        "allOf": [
          {
            "$ref": "#/$defs/CustomFieldCompact"
          },
          {
            "properties": {
              "asana_created_field": {
                "description": "*Conditional*. A unique identifier to associate this field with the template source of truth.",
                "enum": [
                  "a_v_requirements",
                  "account_name",
                  "actionable",
                  "align_shipping_link",
                  "align_status",
                  "allotted_time",
                  "appointment",
                  "approval_stage",
                  "approved",
                  "article_series",
                  "board_committee",
                  "browser",
                  "campaign_audience",
                  "campaign_project_status",
                  "campaign_regions",
                  "channel_primary",
                  "client_topic_type",
                  "complete_by",
                  "contact",
                  "contact_email_address",
                  "content_channels",
                  "content_channels_needed",
                  "content_stage",
                  "content_type",
                  "contract",
                  "contract_status",
                  "cost",
                  "creation_stage",
                  "creative_channel",
                  "creative_needed",
                  "creative_needs",
                  "data_sensitivity",
                  "deal_size",
                  "delivery_appt",
                  "delivery_appt_date",
                  "department",
                  "department_responsible",
                  "design_request_needed",
                  "design_request_type",
                  "discussion_category",
                  "do_this_task",
                  "editorial_content_status",
                  "editorial_content_tag",
                  "editorial_content_type",
                  "effort",
                  "effort_level",
                  "est_completion_date",
                  "estimated_time",
                  "estimated_value",
                  "expected_cost",
                  "external_steps_needed",
                  "favorite_idea",
                  "feedback_type",
                  "financial",
                  "funding_amount",
                  "grant_application_process",
                  "hiring_candidate_status",
                  "idea_status",
                  "ids_link",
                  "ids_patient_link",
                  "implementation_stage",
                  "insurance",
                  "interview_area",
                  "interview_question_score",
                  "itero_scan_link",
                  "job_s_applied_to",
                  "lab",
                  "launch_status",
                  "lead_status",
                  "localization_language",
                  "localization_market_team",
                  "localization_status",
                  "meeting_minutes",
                  "meeting_needed",
                  "minutes",
                  "mrr",
                  "must_localize",
                  "name_of_foundation",
                  "need_to_follow_up",
                  "next_appointment",
                  "next_steps_sales",
                  "num_people",
                  "number_of_user_reports",
                  "office_location",
                  "onboarding_activity",
                  "owner",
                  "participants_needed",
                  "patient_date_of_birth",
                  "patient_email",
                  "patient_phone",
                  "patient_status",
                  "phone_number",
                  "planning_category",
                  "point_of_contact",
                  "position",
                  "post_format",
                  "prescription",
                  "priority",
                  "priority_level",
                  "product",
                  "product_stage",
                  "progress",
                  "project_size",
                  "project_status",
                  "proposed_budget",
                  "publish_status",
                  "reason_for_scan",
                  "referral",
                  "request_type",
                  "research_status",
                  "responsible_department",
                  "responsible_team",
                  "risk_assessment_status",
                  "room_name",
                  "sales_counterpart",
                  "sentiment",
                  "shipping_link",
                  "social_channels",
                  "stage",
                  "status",
                  "status_design",
                  "status_of_initiative",
                  "system_setup",
                  "task_progress",
                  "team",
                  "team_marketing",
                  "team_responsible",
                  "time_it_takes_to_complete_tasks",
                  "timeframe",
                  "treatment_type",
                  "type_work_requests_it",
                  "use_agency",
                  "user_name",
                  "vendor_category",
                  "vendor_type",
                  "word_count"
                ],
                "example": "priority",
                "nullable": true,
                "readOnly": true,
                "type": "string"
              },
              "currency_code": {
                "description": "ISO 4217 currency code to format this custom field. This will be null if the `format` is not `currency`.",
                "example": "EUR",
                "nullable": true,
                "type": "string"
              },
              "custom_label": {
                "description": "This is the string that appears next to the custom field value. This will be null if the `format` is not `custom`.",
                "example": "gold pieces",
                "nullable": true,
                "type": "string"
              },
              "custom_label_position": {
                "description": "Only relevant for custom fields with `custom` format. This depicts where to place the custom label. This will be null if the `format` is not `custom`.",
                "enum": [
                  "prefix",
                  "suffix"
                ],
                "example": "suffix",
                "type": "string"
              },
              "description": {
                "description": "[Opt In](/docs/input-output-options). The description of the custom field.",
                "example": "Development team priority",
                "type": "string"
              },
              "enum_options": {
                "description": "*Conditional*. Only relevant for custom fields of type `enum`. This array specifies the possible values which an `enum` custom field can adopt. To modify the enum options, refer to [working with enum options](/docs/create-an-enum-option).",
                "items": {
                  "$ref": "#/$defs/EnumOption"
                },
                "type": "array"
              },
              "format": {
                "description": "The format of this custom field.",
                "enum": [
                  "currency",
                  "identifier",
                  "percentage",
                  "custom",
                  "none"
                ],
                "example": "custom",
                "type": "string"
              },
              "has_notifications_enabled": {
                "description": "*Conditional*. This flag describes whether a follower of a task with this field should receive inbox notifications from changes to this field.",
                "example": true,
                "type": "boolean"
              },
              "is_global_to_workspace": {
                "description": "This flag describes whether this custom field is available to every container in the workspace. Before project-specific custom fields, this field was always true.",
                "example": true,
                "readOnly": true,
                "type": "boolean"
              },
              "precision": {
                "description": "Only relevant for custom fields of type ‘Number’. This field dictates the number of places after the decimal to round to, i.e. 0 is integer values, 1 rounds to the nearest tenth, and so on. Must be between 0 and 6, inclusive.\nFor percentage format, this may be unintuitive, as a value of 0.25 has a precision of 0, while a value of 0.251 has a precision of 1. This is due to 0.25 being displayed as 25%.\nThe identifier format will always have a precision of 0.",
                "example": 2,
                "type": "integer"
              }
            },
            "type": "object"
          }
        ]
      },
      "CustomFieldCompact": {
        "allOf": [
          {
            "$ref": "#/$defs/AsanaResource"
          },
          {
            "description": "Custom Fields store the metadata that is used in order to add user-specified information to tasks in Asana. Be sure to reference the [Custom Fields](/docs/asana-custom-fields) developer documentation for more information about how custom fields relate to various resources in Asana.\n\nUsers in Asana can [lock custom fields](https://asana.com/guide/help/premium/custom-fields#gl-lock-fields), which will make them read-only when accessed by other users. Attempting to edit a locked custom field will return HTTP error code `403 Forbidden`.",
            "properties": {
              "date_value": {
                "description": "*Conditional*. Only relevant for custom fields of type `date`. This object reflects the chosen date (and optionally, time) value of a `date` custom field. If no date is selected, the value of `date_value` will be `null`.",
                "properties": {
                  "date": {
                    "description": "A string representing the date in YYYY-MM-DD format.",
                    "example": "2024-08-23",
                    "type": "string"
                  },
                  "date_time": {
                    "description": "A string representing the date in ISO 8601 format. If no time value is selected, the value of `date-time` will be `null`.",
                    "example": "2024-08-23T22:00:00.000Z",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "display_value": {
                "description": "A string representation for the value of the custom field. Integrations that don't require the underlying type should use this field to read values. Using this field will future-proof an app against new custom field types.",
                "example": "blue",
                "nullable": true,
                "readOnly": true,
                "type": "string"
              },
              "enabled": {
                "description": "*Conditional*. Determines if the custom field is enabled or not.",
                "example": true,
                "type": "boolean"
              },
              "enum_options": {
                "description": "*Conditional*. Only relevant for custom fields of type `enum`. This array specifies the possible values which an `enum` custom field can adopt. To modify the enum options, refer to [working with enum options](/docs/create-an-enum-option).",
                "items": {
                  "$ref": "#/$defs/EnumOption"
                },
                "type": "array"
              },
              "enum_value": {
                "allOf": [
                  {
                    "$ref": "#/$defs/EnumOption"
                  },
                  {
                    "description": "*Conditional*. Only relevant for custom fields of type `enum`. This object is the chosen value of an `enum` custom field.",
                    "type": "object"
                  }
                ]
              },
              "multi_enum_values": {
                "description": "*Conditional*. Only relevant for custom fields of type `multi_enum`. This object is the chosen values of a `multi_enum` custom field.",
                "items": {
                  "$ref": "#/$defs/EnumOption"
                },
                "type": "array"
              },
              "name": {
                "description": "The name of the custom field.",
                "example": "Status",
                "type": "string"
              },
              "number_value": {
                "description": "*Conditional*. This number is the value of a `number` custom field.",
                "example": 5.2,
                "type": "number"
              },
              "resource_subtype": {
                "description": "The type of the custom field. Must be one of the given values.\n",
                "enum": [
                  "text",
                  "enum",
                  "multi_enum",
                  "number",
                  "date",
                  "people"
                ],
                "example": "text",
                "type": "string"
              },
              "text_value": {
                "description": "*Conditional*. This string is the value of a `text` custom field.",
                "example": "Some Value",
                "type": "string"
              },
              "type": {
                "description": "*Deprecated: new integrations should prefer the resource_subtype field.* The type of the custom field. Must be one of the given values.\n",
                "enum": [
                  "text",
                  "enum",
                  "multi_enum",
                  "number"
                ],
                "readOnly": true,
                "type": "string"
              }
            },
            "type": "object",
            "x-docs-overrides": {
              "properties.resource_type.example": "custom_field"
            }
          }
        ]
      },
      "EnumOption": {
        "allOf": [
          {
            "$ref": "#/$defs/AsanaResource"
          },
          {
            "description": "Enum options are the possible values which an enum custom field can adopt. An enum custom field must contain at least 1 enum option but no more than 500.\n\nYou can add enum options to a custom field by using the `POST /custom_fields/custom_field_gid/enum_options` endpoint.\n\n**It is not possible to remove or delete an enum option**. Instead, enum options can be disabled by updating the `enabled` field to false with the `PUT /enum_options/enum_option_gid` endpoint. Other attributes can be updated similarly.\n\nOn creation of an enum option, `enabled` is always set to `true`, meaning the enum option is a selectable value for the custom field. Setting `enabled=false` is equivalent to “trashing” the enum option in the Asana web app within the “Edit Fields” dialog. The enum option will no longer be selectable but, if the enum option value was previously set within a task, the task will retain the value.\n\nEnum options are an ordered list and by default new enum options are inserted at the end. Ordering in relation to existing enum options can be specified on creation by using `insert_before` or `insert_after` to reference an existing enum option. Only one of `insert_before` and `insert_after` can be provided when creating a new enum option.\n\nAn enum options list can be reordered with the `POST /custom_fields/custom_field_gid/enum_options/insert` endpoint.",
            "properties": {
              "color": {
                "description": "The color of the enum option. Defaults to ‘none’.",
                "example": "blue",
                "type": "string"
              },
              "enabled": {
                "description": "Whether or not the enum option is a selectable value for the custom field.",
                "example": true,
                "type": "boolean"
              },
              "name": {
                "description": "The name of the enum option.",
                "example": "Low",
                "type": "string"
              }
            },
            "type": "object",
            "x-docs-overrides": {
              "properties.resource_type.example": "enum_option"
            }
          }
        ]
      },
      "WorkspaceCompact": {
        "allOf": [
          {
            "$ref": "#/$defs/AsanaResource"
          },
          {
            "description": "A *workspace* is the highest-level organizational unit in Asana. All projects and tasks have an associated workspace.",
            "properties": {
              "name": {
                "description": "The name of the workspace.",
                "example": "My Company Workspace",
                "type": "string"
              }
            },
            "type": "object",
            "x-docs-overrides": {
              "properties.resource_type.example": "workspace"
            }
          }
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://app.asana.com/api/1.0/projects{?opt_pretty,opt_fields}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**data**: A generic Asana Resource, containing a globally unique identifier.",
              {
                "$ul": [
                  "**gid**: Globally unique identifier of the resource, as a string.",
                  "**resource_type**: The base type of this resource.",
                  "**name**: Name of the project. This is generally a short sentence fragment that fits on a line in the UI for maximum readability. However, it can be longer.",
                  "**archived**: True if the project is archived, false if not. Archived projects do not show in the UI by default and may be treated differently for queries.",
                  "**color**: Color of the project.",
                  "**created_at**: The time at which this resource was created.",
                  [
                    "**current_status**: A generic Asana Resource, containing a globally unique identifier.",
                    {
                      "$ul": [
                        "**gid**: Globally unique identifier of the resource, as a string.",
                        "**resource_type**: The base type of this resource.",
                        "**title**: The title of the project status update.",
                        "**color**: The color associated with the status update.",
                        "**html_text**: [Opt In](/docs/input-output-options). The text content of the status update with formatting as HTML.",
                        "**text**: The text content of the status update.",
                        [
                          "**author**: A generic Asana Resource, containing a globally unique identifier.",
                          {
                            "$ul": [
                              "**gid**: Globally unique identifier of the resource, as a string.",
                              "**resource_type**: The base type of this resource.",
                              "**name**: *Read-only except when same user as requester*. The user’s name."
                            ]
                          }
                        ],
                        "**created_at**: The time at which this resource was created.",
                        [
                          "**created_by**: A generic Asana Resource, containing a globally unique identifier.",
                          {
                            "$ul": [
                              "**gid**: Globally unique identifier of the resource, as a string.",
                              "**resource_type**: The base type of this resource.",
                              "**name**: *Read-only except when same user as requester*. The user’s name."
                            ]
                          }
                        ],
                        "**modified_at**: The time at which this project status was last modified."
                      ]
                    }
                  ],
                  [
                    "**current_status_update**: A generic Asana Resource, containing a globally unique identifier.",
                    {
                      "$ul": [
                        "**gid**: Globally unique identifier of the resource, as a string.",
                        "**resource_type**: The base type of this resource.",
                        "**resource_subtype**: The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning.",
                        "**title**: The title of the status update."
                      ]
                    }
                  ],
                  "**custom_field_settings**: Array of Custom Field Settings (in compact form).",
                  "**default_view**: The default view (list, board, calendar, or timeline) of a project.",
                  "**due_date**: *Deprecated: new integrations should prefer the `due_on` field.*",
                  "**due_on**: The day on which this project is due. This takes a date with format YYYY-MM-DD.",
                  "**html_notes**: [Opt In](/docs/input-output-options). The notes of the project with formatting as HTML.",
                  "**is_template**: [Opt In](/docs/input-output-options). *Deprecated - please use a project template endpoint instead (more in [this forum post](https://forum.asana.com/t/a-new-api-for-project-templates/156432)).* Determines if the project is a template.",
                  "**members**: Array of users who are members of this project.",
                  "**modified_at**: The time at which this project was last modified.",
                  "**notes**: Free-form textual information associated with the project (ie., its description).",
                  "**public**: True if the project is public to its team.",
                  "**start_on**: The day on which work for this project begins, or null if the project has no start date. This takes a date with `YYYY-MM-DD` format. *Note: `due_on` or `due_at` must be present in the request when setting or unsetting the `start_on` parameter. Additionally, `start_on` and `due_on` cannot be the same date.*",
                  [
                    "**workspace**: A generic Asana Resource, containing a globally unique identifier.",
                    {
                      "$ul": [
                        "**gid**: Globally unique identifier of the resource, as a string.",
                        "**resource_type**: The base type of this resource.",
                        "**name**: The name of the workspace."
                      ]
                    }
                  ],
                  "**completed**: True if the project is currently marked complete, false if not.",
                  "**completed_at**: The time at which this project was completed, or null if the project is not completed.",
                  [
                    "**completed_by**: A generic Asana Resource, containing a globally unique identifier.",
                    {
                      "$ul": [
                        "**gid**: Globally unique identifier of the resource, as a string.",
                        "**resource_type**: The base type of this resource.",
                        "**name**: *Read-only except when same user as requester*. The user’s name."
                      ]
                    }
                  ],
                  [
                    "**created_from_template**: A generic Asana Resource, containing a globally unique identifier.",
                    {
                      "$ul": [
                        "**gid**: Globally unique identifier of the resource, as a string.",
                        "**resource_type**: The base type of this resource.",
                        "**name**: Name of the project template."
                      ]
                    }
                  ],
                  "**custom_fields**: Array of Custom Fields.",
                  "**followers**: Array of users following this project. Followers are a subset of members who have opted in to receive \"tasks added\" notifications for a project.",
                  "**icon**: The icon for a project.",
                  [
                    "**owner**: A generic Asana Resource, containing a globally unique identifier.",
                    {
                      "$ul": [
                        "**gid**: Globally unique identifier of the resource, as a string.",
                        "**resource_type**: The base type of this resource.",
                        "**name**: *Read-only except when same user as requester*. The user’s name."
                      ]
                    }
                  ],
                  "**permalink_url**: A url that points directly to the object within Asana.",
                  [
                    "**project_brief**: A generic Asana Resource, containing a globally unique identifier.",
                    {
                      "$ul": [
                        "**gid**: Globally unique identifier of the resource, as a string.",
                        "**resource_type**: The base type of this resource."
                      ]
                    }
                  ],
                  [
                    "**team**: A generic Asana Resource, containing a globally unique identifier.",
                    {
                      "$ul": [
                        "**gid**: Globally unique identifier of the resource, as a string.",
                        "**resource_type**: The base type of this resource.",
                        "**name**: The name of the team."
                      ]
                    }
                  ]
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Sadly, sometimes requests to the API are not successful. Failures can\noccur for a wide range of reasons. In all cases, the API should return\nan HTTP Status Code that indicates the nature of the failure,\nwith a response body in JSON format containing additional information.\n\n\nIn the event of a server error the response body will contain an error\nphrase. These phrases are automatically generated using the\n[node-asana-phrase\nlibrary](https://github.com/Asana/node-asana-phrase) and can be used by\nAsana support to quickly look up the incident that caused the server\nerror.",
        "**Key properties:**",
        {
          "$ul": [
            "**errors**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Sadly, sometimes requests to the API are not successful. Failures can\noccur for a wide range of reasons. In all cases, the API should return\nan HTTP Status Code that indicates the nature of the failure,\nwith a response body in JSON format containing additional information.\n\n\nIn the event of a server error the response body will contain an error\nphrase. These phrases are automatically generated using the\n[node-asana-phrase\nlibrary](https://github.com/Asana/node-asana-phrase) and can be used by\nAsana support to quickly look up the incident that caused the server\nerror.",
        "**Key properties:**",
        {
          "$ul": [
            "**errors**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Sadly, sometimes requests to the API are not successful. Failures can\noccur for a wide range of reasons. In all cases, the API should return\nan HTTP Status Code that indicates the nature of the failure,\nwith a response body in JSON format containing additional information.\n\n\nIn the event of a server error the response body will contain an error\nphrase. These phrases are automatically generated using the\n[node-asana-phrase\nlibrary](https://github.com/Asana/node-asana-phrase) and can be used by\nAsana support to quickly look up the incident that caused the server\nerror.",
        "**Key properties:**",
        {
          "$ul": [
            "**errors**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Sadly, sometimes requests to the API are not successful. Failures can\noccur for a wide range of reasons. In all cases, the API should return\nan HTTP Status Code that indicates the nature of the failure,\nwith a response body in JSON format containing additional information.\n\n\nIn the event of a server error the response body will contain an error\nphrase. These phrases are automatically generated using the\n[node-asana-phrase\nlibrary](https://github.com/Asana/node-asana-phrase) and can be used by\nAsana support to quickly look up the incident that caused the server\nerror.",
        "**Key properties:**",
        {
          "$ul": [
            "**errors**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "500": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Sadly, sometimes requests to the API are not successful. Failures can\noccur for a wide range of reasons. In all cases, the API should return\nan HTTP Status Code that indicates the nature of the failure,\nwith a response body in JSON format containing additional information.\n\n\nIn the event of a server error the response body will contain an error\nphrase. These phrases are automatically generated using the\n[node-asana-phrase\nlibrary](https://github.com/Asana/node-asana-phrase) and can be used by\nAsana support to quickly look up the incident that caused the server\nerror.",
        "**Key properties:**",
        {
          "$ul": [
            "**errors**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
