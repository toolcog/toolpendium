{
  "name": "getCustomField",
  "description": "Get the complete definition of a custom field’s metadata.\n\nSince custom fields can be defined for one of a number of types, and\nthese types have different data and behaviors, there are fields that are\nrelevant to a particular type. For instance, as noted above, enum_options\nis only relevant for the enum type and defines the set of choices that\nthe enum could represent. The examples below show some of these\ntype-specific custom field definitions.",
  "parameters": {
    "type": "object",
    "properties": {
      "custom_field_gid": {
        "type": "string",
        "description": "Globally unique identifier for the custom field."
      },
      "opt_pretty": {
        "type": "boolean",
        "description": "Provides “pretty” output.\nProvides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging."
      },
      "opt_fields": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "Defines fields to return.\nSome requests return *compact* representations of objects in order to conserve resources and complete the request more efficiently. Other times requests return more information than you may need. This option allows you to list the exact set of fields that the API should be sure to return for the objects. The field names should be provided as paths, described below.\nThe id of included objects will always be returned, regardless of the field options."
      }
    },
    "required": [
      "custom_field_gid"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://app.asana.com/api/1.0/custom_fields/{custom_field_gid}{?opt_pretty,opt_fields}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**data**: A generic Asana Resource, containing a globally unique identifier.",
              {
                "$ul": [
                  "**gid**: Globally unique identifier of the resource, as a string.",
                  "**resource_type**: The base type of this resource.",
                  [
                    "**date_value**: *Conditional*. Only relevant for custom fields of type `date`. This object reflects the chosen date (and optionally, time) value of a `date` custom field. If no date is selected, the value of `date_value` will be `null`.",
                    {
                      "$ul": [
                        "**date**: A string representing the date in YYYY-MM-DD format.",
                        "**date_time**: A string representing the date in ISO 8601 format. If no time value is selected, the value of `date-time` will be `null`."
                      ]
                    }
                  ],
                  "**display_value**: A string representation for the value of the custom field. Integrations that don't require the underlying type should use this field to read values. Using this field will future-proof an app against new custom field types.",
                  "**enabled**: *Conditional*. Determines if the custom field is enabled or not.",
                  "**enum_options**: *Conditional*. Only relevant for custom fields of type `enum`. This array specifies the possible values which an `enum` custom field can adopt. To modify the enum options, refer to [working with enum options](/docs/create-an-enum-option).",
                  [
                    "**enum_value**: A generic Asana Resource, containing a globally unique identifier.",
                    {
                      "$ul": [
                        "**gid**: Globally unique identifier of the resource, as a string.",
                        "**resource_type**: The base type of this resource.",
                        "**color**: The color of the enum option. Defaults to ‘none’.",
                        "**enabled**: Whether or not the enum option is a selectable value for the custom field.",
                        "**name**: The name of the enum option."
                      ]
                    }
                  ],
                  "**multi_enum_values**: *Conditional*. Only relevant for custom fields of type `multi_enum`. This object is the chosen values of a `multi_enum` custom field.",
                  "**name**: The name of the custom field.",
                  "**number_value**: *Conditional*. This number is the value of a `number` custom field.",
                  "**resource_subtype**: The type of the custom field. Must be one of the given values.",
                  "**text_value**: *Conditional*. This string is the value of a `text` custom field.",
                  "**type**: *Deprecated: new integrations should prefer the resource_subtype field.* The type of the custom field. Must be one of the given values.",
                  "**asana_created_field**: *Conditional*. A unique identifier to associate this field with the template source of truth.",
                  "**currency_code**: ISO 4217 currency code to format this custom field. This will be null if the `format` is not `currency`.",
                  "**custom_label**: This is the string that appears next to the custom field value. This will be null if the `format` is not `custom`.",
                  "**custom_label_position**: Only relevant for custom fields with `custom` format. This depicts where to place the custom label. This will be null if the `format` is not `custom`.",
                  "**description**: [Opt In](/docs/input-output-options). The description of the custom field.",
                  "**format**: The format of this custom field.",
                  "**has_notifications_enabled**: *Conditional*. This flag describes whether a follower of a task with this field should receive inbox notifications from changes to this field.",
                  "**is_global_to_workspace**: This flag describes whether this custom field is available to every container in the workspace. Before project-specific custom fields, this field was always true.",
                  "**precision**: Only relevant for custom fields of type ‘Number’. This field dictates the number of places after the decimal to round to, i.e. 0 is integer values, 1 rounds to the nearest tenth, and so on. Must be between 0 and 6, inclusive.",
                  [
                    "**created_by**: A generic Asana Resource, containing a globally unique identifier.",
                    {
                      "$ul": [
                        "**gid**: Globally unique identifier of the resource, as a string.",
                        "**resource_type**: The base type of this resource.",
                        "**name**: *Read-only except when same user as requester*. The user’s name."
                      ]
                    }
                  ],
                  "**people_value**: *Conditional*. Only relevant for custom fields of type `people`. This array of [compact user](/docs/user-compact) objects reflects the values of a `people` custom field."
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Sadly, sometimes requests to the API are not successful. Failures can\noccur for a wide range of reasons. In all cases, the API should return\nan HTTP Status Code that indicates the nature of the failure,\nwith a response body in JSON format containing additional information.\n\n\nIn the event of a server error the response body will contain an error\nphrase. These phrases are automatically generated using the\n[node-asana-phrase\nlibrary](https://github.com/Asana/node-asana-phrase) and can be used by\nAsana support to quickly look up the incident that caused the server\nerror.",
        "**Key properties:**",
        {
          "$ul": [
            "**errors**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Sadly, sometimes requests to the API are not successful. Failures can\noccur for a wide range of reasons. In all cases, the API should return\nan HTTP Status Code that indicates the nature of the failure,\nwith a response body in JSON format containing additional information.\n\n\nIn the event of a server error the response body will contain an error\nphrase. These phrases are automatically generated using the\n[node-asana-phrase\nlibrary](https://github.com/Asana/node-asana-phrase) and can be used by\nAsana support to quickly look up the incident that caused the server\nerror.",
        "**Key properties:**",
        {
          "$ul": [
            "**errors**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Sadly, sometimes requests to the API are not successful. Failures can\noccur for a wide range of reasons. In all cases, the API should return\nan HTTP Status Code that indicates the nature of the failure,\nwith a response body in JSON format containing additional information.\n\n\nIn the event of a server error the response body will contain an error\nphrase. These phrases are automatically generated using the\n[node-asana-phrase\nlibrary](https://github.com/Asana/node-asana-phrase) and can be used by\nAsana support to quickly look up the incident that caused the server\nerror.",
        "**Key properties:**",
        {
          "$ul": [
            "**errors**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Sadly, sometimes requests to the API are not successful. Failures can\noccur for a wide range of reasons. In all cases, the API should return\nan HTTP Status Code that indicates the nature of the failure,\nwith a response body in JSON format containing additional information.\n\n\nIn the event of a server error the response body will contain an error\nphrase. These phrases are automatically generated using the\n[node-asana-phrase\nlibrary](https://github.com/Asana/node-asana-phrase) and can be used by\nAsana support to quickly look up the incident that caused the server\nerror.",
        "**Key properties:**",
        {
          "$ul": [
            "**errors**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "500": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Sadly, sometimes requests to the API are not successful. Failures can\noccur for a wide range of reasons. In all cases, the API should return\nan HTTP Status Code that indicates the nature of the failure,\nwith a response body in JSON format containing additional information.\n\n\nIn the event of a server error the response body will contain an error\nphrase. These phrases are automatically generated using the\n[node-asana-phrase\nlibrary](https://github.com/Asana/node-asana-phrase) and can be used by\nAsana support to quickly look up the incident that caused the server\nerror.",
        "**Key properties:**",
        {
          "$ul": [
            "**errors**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
