{
  "name": "getPortfolio",
  "description": "Returns the complete portfolio record for a single portfolio.",
  "parameters": {
    "type": "object",
    "properties": {
      "portfolio_gid": {
        "type": "string",
        "description": "Globally unique identifier for the portfolio."
      },
      "opt_pretty": {
        "type": "boolean",
        "description": "Provides “pretty” output.\nProvides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging."
      },
      "opt_fields": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "Defines fields to return.\nSome requests return *compact* representations of objects in order to conserve resources and complete the request more efficiently. Other times requests return more information than you may need. This option allows you to list the exact set of fields that the API should be sure to return for the objects. The field names should be provided as paths, described below.\nThe id of included objects will always be returned, regardless of the field options."
      }
    },
    "required": [
      "portfolio_gid"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://app.asana.com/api/1.0/portfolios/{portfolio_gid}{?opt_pretty,opt_fields}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**data**: A generic Asana Resource, containing a globally unique identifier.",
              {
                "$ul": [
                  "**gid**: Globally unique identifier of the resource, as a string.",
                  "**resource_type**: The base type of this resource.",
                  "**name**: The name of the portfolio.",
                  "**color**: Color of the portfolio.",
                  "**created_at**: The time at which this resource was created.",
                  [
                    "**created_by**: A generic Asana Resource, containing a globally unique identifier.",
                    {
                      "$ul": [
                        "**gid**: Globally unique identifier of the resource, as a string.",
                        "**resource_type**: The base type of this resource.",
                        "**name**: *Read-only except when same user as requester*. The user’s name."
                      ]
                    }
                  ],
                  [
                    "**current_status_update**: A generic Asana Resource, containing a globally unique identifier.",
                    {
                      "$ul": [
                        "**gid**: Globally unique identifier of the resource, as a string.",
                        "**resource_type**: The base type of this resource.",
                        "**resource_subtype**: The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning.",
                        "**title**: The title of the status update."
                      ]
                    }
                  ],
                  "**custom_field_settings**: Array of custom field settings applied to the portfolio.",
                  "**custom_fields**: Array of Custom Fields.",
                  "**due_on**: The localized day on which this portfolio is due. This takes a date with format YYYY-MM-DD.",
                  "**members**",
                  [
                    "**owner**: A generic Asana Resource, containing a globally unique identifier.",
                    {
                      "$ul": [
                        "**gid**: Globally unique identifier of the resource, as a string.",
                        "**resource_type**: The base type of this resource.",
                        "**name**: *Read-only except when same user as requester*. The user’s name."
                      ]
                    }
                  ],
                  "**permalink_url**: A url that points directly to the object within Asana.",
                  "**public**: True if the portfolio is public to its workspace members.",
                  "**start_on**: The day on which work for this portfolio begins, or null if the portfolio has no start date. This takes a date with `YYYY-MM-DD` format. *Note: `due_on` must be present in the request when setting or unsetting the `start_on` parameter. Additionally, `start_on` and `due_on` cannot be the same date.*",
                  [
                    "**workspace**: A generic Asana Resource, containing a globally unique identifier.",
                    {
                      "$ul": [
                        "**gid**: Globally unique identifier of the resource, as a string.",
                        "**resource_type**: The base type of this resource.",
                        "**name**: The name of the workspace."
                      ]
                    }
                  ]
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Sadly, sometimes requests to the API are not successful. Failures can\noccur for a wide range of reasons. In all cases, the API should return\nan HTTP Status Code that indicates the nature of the failure,\nwith a response body in JSON format containing additional information.\n\n\nIn the event of a server error the response body will contain an error\nphrase. These phrases are automatically generated using the\n[node-asana-phrase\nlibrary](https://github.com/Asana/node-asana-phrase) and can be used by\nAsana support to quickly look up the incident that caused the server\nerror.",
        "**Key properties:**",
        {
          "$ul": [
            "**errors**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Sadly, sometimes requests to the API are not successful. Failures can\noccur for a wide range of reasons. In all cases, the API should return\nan HTTP Status Code that indicates the nature of the failure,\nwith a response body in JSON format containing additional information.\n\n\nIn the event of a server error the response body will contain an error\nphrase. These phrases are automatically generated using the\n[node-asana-phrase\nlibrary](https://github.com/Asana/node-asana-phrase) and can be used by\nAsana support to quickly look up the incident that caused the server\nerror.",
        "**Key properties:**",
        {
          "$ul": [
            "**errors**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Sadly, sometimes requests to the API are not successful. Failures can\noccur for a wide range of reasons. In all cases, the API should return\nan HTTP Status Code that indicates the nature of the failure,\nwith a response body in JSON format containing additional information.\n\n\nIn the event of a server error the response body will contain an error\nphrase. These phrases are automatically generated using the\n[node-asana-phrase\nlibrary](https://github.com/Asana/node-asana-phrase) and can be used by\nAsana support to quickly look up the incident that caused the server\nerror.",
        "**Key properties:**",
        {
          "$ul": [
            "**errors**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Sadly, sometimes requests to the API are not successful. Failures can\noccur for a wide range of reasons. In all cases, the API should return\nan HTTP Status Code that indicates the nature of the failure,\nwith a response body in JSON format containing additional information.\n\n\nIn the event of a server error the response body will contain an error\nphrase. These phrases are automatically generated using the\n[node-asana-phrase\nlibrary](https://github.com/Asana/node-asana-phrase) and can be used by\nAsana support to quickly look up the incident that caused the server\nerror.",
        "**Key properties:**",
        {
          "$ul": [
            "**errors**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "500": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Sadly, sometimes requests to the API are not successful. Failures can\noccur for a wide range of reasons. In all cases, the API should return\nan HTTP Status Code that indicates the nature of the failure,\nwith a response body in JSON format containing additional information.\n\n\nIn the event of a server error the response body will contain an error\nphrase. These phrases are automatically generated using the\n[node-asana-phrase\nlibrary](https://github.com/Asana/node-asana-phrase) and can be used by\nAsana support to quickly look up the incident that caused the server\nerror.",
        "**Key properties:**",
        {
          "$ul": [
            "**errors**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
