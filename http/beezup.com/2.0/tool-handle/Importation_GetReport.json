{
  "name": "Importation_GetReport",
  "description": "Importation Get Report",
  "parameters": {
    "type": "object",
    "properties": {
      "storeId": {
        "format": "guid",
        "type": "string",
        "description": "Your store identifier"
      },
      "executionId": {
        "format": "guid",
        "type": "string",
        "description": "The execution identifier of you catalog importation"
      }
    },
    "required": [
      "storeId",
      "executionId"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://api.beezup.com/v2/user/catalogs/{storeId}/importations/{executionId}/report"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Get Importation Report Response",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**categories**",
              {
                "$ul": [
                  "**createdCount**",
                  "**deletedCount**",
                  "**unchangedCount**",
                  "**updatedCount**"
                ]
              }
            ],
            [
              "**columns**",
              {
                "$ul": [
                  "**createdCount**",
                  "**deletedCount**",
                  "**unchangedCount**",
                  "**updatedCount**"
                ]
              }
            ],
            "**errors**",
            "**executionId**: The execution identifier of the catalog importation",
            [
              "**importationInfo**",
              {
                "$ul": [
                  "**beginUtcDate**: The start date of the importation",
                  "**endUtcDate**: The start date of the importation",
                  [
                    "**inputConfiguration**: Describe how to get and read a file",
                    {
                      "$ul": [
                        [
                          "**fetch**: Describe the way to download the file",
                          {
                            "$ul": [
                              "**compressedRelativePath**: Indicate the relative path in the compressed file",
                              "**compressionFormatStrategy**: Indicate the compression type",
                              [
                                "**credential**: Provides the credentials",
                                {
                                  "$ul": [
                                    "**password**: The password",
                                    "**userName**: The user name"
                                  ]
                                }
                              ],
                              "**downloadCatalogStrategy**: Indicate the download strategy (simple uri, ftps, ftplatest file, etc...)",
                              "**downloadTimeout**: Indicate the download time out in second (default: 30)",
                              "**uri**: Indicate the Uri of the file. (http, https, ftp, ftps, sftp are allowed)"
                            ]
                          }
                        ],
                        "**fileNumber**: The file number starting by 1",
                        [
                          "**read**: Describe how to read the file. If FileFormatStrategy is CSV, csvFileReadProperties is required. Otherwise the xmlFileReadProperties is required.",
                          {
                            "$ul": [
                              [
                                "**csvFileReadProperties**: The CSV file description",
                                {
                                  "$ul": [
                                    "**csvSeparator**: Indicate the separator of the values in the CSV file. Generally \";\" (default: ;)",
                                    "**csvTextQualifier**: Indicate the text qualifier of the CSV file. Generally the value is \" (default: \")",
                                    "**hasHeaderRecord**: Indicate if the csv file contains the column name at the first row (default: true)",
                                    "**ignoreHeaderRecord**: Indicate if the importation should not use the csv column name from the file (default: false)"
                                  ]
                                }
                              ],
                              "**cultureName**: The culture name of the file.  (i.e. fr-FR). If null then Invariant culture will be used. (default: )",
                              "**encodingTypeName**: The encoding type. UTF-8 by default. (default: UTF-8)",
                              "**format**: CSV or XML",
                              [
                                "**xmlFileReadProperties**: The XML file description",
                                {
                                  "$ul": [
                                    "**flattenXmlChildElements**: Indicate if the children xml nodes should be flatten with there parent to take in account the sub node values.",
                                    "**useXmlAttributes**: Indicate if the importation should take in account the attribute in the xml nodes."
                                  ]
                                }
                              ]
                            ]
                          }
                        ]
                      ]
                    }
                  ],
                  "**userId**: The user identifier"
                ]
              }
            ],
            [
              "**productMetrics**",
              {
                "$ul": [
                  "**activeCount**",
                  "**detectedCount**",
                  "**duplicatedCount**",
                  "**failedCount**"
                ]
              }
            ],
            [
              "**products**",
              {
                "$ul": [
                  "**createdCount**",
                  "**deletedCount**",
                  "**unchangedCount**",
                  "**updatedCount**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
