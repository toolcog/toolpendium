{
  "name": "getMssqlHierarchyChildren",
  "description": "Retrieve the list of immediate descendant objects for the specified parent.",
  "parameters": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "ID of the parent SQL Server hierarchy object. To get top-level nodes, use **root** as the ID.\n"
      },
      "effective_sla_domain_id": {
        "type": "string",
        "description": "Filter by the ID of the effective SLA Domain."
      },
      "object_type": {
        "items": {
          "enum": [
            "Host",
            "MssqlInstance",
            "MssqlDatabase",
            "WindowsCluster",
            "MssqlAvailabilityGroup"
          ],
          "type": "string"
        },
        "type": "array",
        "description": "Filter by a comma-separated list of node object types.\n"
      },
      "primary_cluster_id": {
        "type": "string",
        "description": "Filter by primary cluster ID, or **local**."
      },
      "limit": {
        "format": "int32",
        "minimum": 0,
        "type": "integer",
        "description": "Limit the number of matches returned."
      },
      "offset": {
        "format": "int32",
        "minimum": 0,
        "type": "integer",
        "description": "An integer that specifies the number of initial matches to ignore.\n"
      },
      "name": {
        "type": "string",
        "description": "Filter children by provided name."
      },
      "is_relic": {
        "type": "boolean",
        "description": "Filter by the value of the `isRelic` field for nodes with object type MssqlDatabase."
      },
      "is_live_mount": {
        "type": "boolean",
        "description": "Filter database by the value of the `isLiveMount` field for nodes with object type MssqlDatabase."
      },
      "is_log_shipping_secondary": {
        "type": "boolean",
        "description": "Filter by the value of the `isLogShippingSecondary` field for nodes with object type MssqlDatabase."
      },
      "is_clustered": {
        "type": "boolean",
        "description": "Filter by the value of the `isClustered` field for nodes with object type MssqlDatabase or MssqlInstance."
      },
      "has_instances": {
        "type": "boolean",
        "description": "Boolean that filters top-level nodes with the Host or WindowsCluster object type by whether or not the nodes have children MssqlInstance nodes. When this value is 'true,' the filter shows only nodes with children MssqlInstance nodes. When this value is 'false,' the filter shows only nodes without children MssqlInstance nodes."
      },
      "sla_assignment": {
        "enum": [
          "Derived",
          "Direct",
          "Unassigned"
        ],
        "type": "string",
        "description": "Filter by SLA assignment type."
      },
      "sort_by": {
        "enum": [
          "name",
          "descendantCount.MssqlInstance",
          "descendantCount.MssqlDatabase",
          "logBackupRetentionHours",
          "copyOnly",
          "effectiveSlaDomainName"
        ],
        "type": "string",
        "description": "Attribute to sort the results on."
      },
      "sort_order": {
        "enum": [
          "asc",
          "desc"
        ],
        "type": "string",
        "description": "Sort order, either ascending or descending."
      },
      "snappable_status": {
        "enum": [
          "Protectable"
        ],
        "type": "string",
        "description": "Determines whether SQL Server instances are fetched with additional privilege checks."
      }
    },
    "required": [
      "id"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "/api/v1/mssql/hierarchy/{id}/children{?effective_sla_domain_id,object_type,primary_cluster_id,limit,offset,name,is_relic,is_live_mount,is_log_shipping_secondary,is_clustered,has_instances,sla_assignment,sort_by,sort_order,snappable_status}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**data**: List of matching objects.",
            "**hasMore**: If there is more.",
            "**total**: Total list responses."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
