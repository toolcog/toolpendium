{
  "name": "updateVm",
  "description": "Update a virtual machine with specified properties. Use the guestCredential field to update the guest credential for a specified virtual machine.",
  "parameters": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "ID of virtual machine."
      },
      "body": {
        "$ref": "#/components/schemas/VirtualMachineUpdateWithSecret",
        "description": "Properties to update."
      }
    },
    "required": [
      "id",
      "body"
    ]
  },
  "handler": "http",
  "request": {
    "method": "PATCH",
    "url": {
      "$uri": "/api/v1/vmware/vm/{id}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**cloudInstantiationSpec**",
              {
                "$ul": [
                  "**imageRetentionInSeconds**: Specifies the number of seconds to retain an image file that is generated for a snappable. Setting this to -1 disables cloud instantiation for the snappable."
                ]
              }
            ],
            "**configuredSlaDomainId**: The ID of the SLA Domain configured directly on the Rubrik object.",
            "**isArrayIntegrationEnabled**: Boolean value that determines whether the available storage array integration is used with the specified virtual machine. Set to 'true' to use storage array integration and set to 'false' to not use storage array integration. Refer to the value of 'isArrayIntegrationPossible' to determine whether storage array integration is available for a virtual machine.",
            "**isVmPaused**: Whether to pause or resume backups/archival for this VM.",
            "**maxNestedVsphereSnapshots**",
            [
              "**postBackupScript**",
              {
                "$ul": [
                  "**failureHandling**: Action to take if the script returns an error or times out.",
                  "**scriptPath**: The command to be run in VM guest OS.",
                  "**timeoutMs**: Time (in ms) after which the script will be terminated if it has not completed."
                ]
              }
            ],
            [
              "**postSnapScript**",
              {
                "$ul": [
                  "**failureHandling**: Action to take if the script returns an error or times out.",
                  "**scriptPath**: The command to be run in VM guest OS.",
                  "**timeoutMs**: Time (in ms) after which the script will be terminated if it has not completed."
                ]
              }
            ],
            [
              "**preBackupScript**",
              {
                "$ul": [
                  "**failureHandling**: Action to take if the script returns an error or times out.",
                  "**scriptPath**: The command to be run in VM guest OS.",
                  "**timeoutMs**: Time (in ms) after which the script will be terminated if it has not completed."
                ]
              }
            ],
            "**snapshotConsistencyMandate**: Consistency level mandated for this VM or empty string for none.",
            [
              "**throttlingSettings**",
              {
                "$ul": [
                  "**cpuUtilizationThreshold**: Threshold virtual machine CPU utilization value that determines whether to postpone a scheduled snapshot of a vSphere virtual machine. Specify the threshold value as a percentage.",
                  "**datastoreIoLatencyThreshold**: Threshold datastore latency value, measured across all datastores, that determines whether to postpone a scheduled snapshot of a vSphere virtual machine. Specify the threshold value in milliseconds (ms).",
                  "**ioLatencyThreshold**: Threshold virtual machine latency value that determines whether to postpone a scheduled snapshot of the vSphere virtual machine. Specify the threshold value in milliseconds (ms)."
                ]
              }
            ],
            "**configuredSlaDomainName**: The name of the SLA Domain configured directly on the Rubrik object.",
            "**configuredSlaDomainType**: Specifies whether the SLA Domain is used for protection or retention.",
            "**id**: The ID of the Rubrik object.",
            "**isConfiguredSlaDomainRetentionLocked**: Indicates whether the configured SLA Domain is Retention Locked. When this value is 'true', the configured SLA Domain is a Retention Lock SLA Domain.",
            "**name**: The name of the Rubrik object.",
            "**primaryClusterId**: The ID of the cluster that manages the Rubrik object.",
            "**slaLastUpdateTime**: The UTC time when the SLA Domain was last updated.",
            "**effectiveSlaDomainId**: The ID of the SLA Domain that controls the protection of the Rubrik object.",
            "**effectiveSlaDomainName**: The name of the SLA Domain that controls the protection of the Rubrik object.",
            "**effectiveSlaDomainPolarisManagedId**: Optional. This field contains the managed ID of of the Polaris-managed effective SLA Domain.",
            "**effectiveSlaSourceObjectId**: The ID of the parent of the Rubrik object from which the SLA Domain that controls the protection of Rubrik object is inherited.",
            "**effectiveSlaSourceObjectName**: The name of the parent of the Rubrik object from which the SLA Domain that controls the protection of Rubrik object is inherited.",
            "**isEffectiveSlaDomainRetentionLocked**: Indicates whether the effective SLA Domain is Retention Locked. When this value is 'true', the effective SLA domain is a Retention Lock SLA Domain.",
            "**retentionSlaDomainId**: The ID of the SLA Domain whose retention policy is in use.",
            "**slaAssignment**: The SLA assignment type. Direct SLA assignment means that a SLA Domain was configured directly on the Rubrik object by the user. Derived SLA assignment means that the Rubrik object inherits an SLA Domain from its parent Rubrik object.",
            [
              "**agentStatus**",
              {
                "$ul": [
                  "**agentStatus**: The agent connection status.",
                  "**disconnectReason**: The reason the agent disconnected."
                ]
              }
            ],
            "**clusterName**",
            "**folderPath**: Brief info of all the objects in the folder path to this VM.",
            "**guestCredentialAuthorizationStatus**: Status of authentication with a specific virtual machine using guest credentials. Possible values are: SUCCESSFUL, PENDING, or FAILED.",
            "**guestOsName**: Long form name, including type and release designation, for the operating system that is installed on a virtual machine.",
            "**hostId**",
            "**hostName**",
            "**infraPath**: Brief info of all the objects in the infrastructure path to this VM.",
            "**ipAddress**",
            "**isRelic**",
            "**isReplicationEnabled**",
            "**moid**",
            [
              "**parentAppInfo**",
              {
                "$ul": [
                  "**id**: ID assigned to the vApp object that manages a specified virtual machine.",
                  "**isProtectedThruHierarchy**: Boolean value that indicates whether a virtual machine is protected through the SLA Domain assigned to the parent vApp. Set to 'true' when the virtual machine is protected through the parent vApp, otherwise set to 'false'. Direct assignment of a virtual machine to an SLA Domain is not possible when this value is 'true'. Also, setting this value to true is not possible when the virtual machine has an existing direct assignment to an SLA Domain."
                ]
              }
            ],
            "**powerStatus**: The power status of VM(ON,OFF,SLEEP etc.).",
            "**protectionDate**",
            "**toolsInstalled**",
            "**vcenterId**",
            "**vmwareToolsInstalled**",
            [
              "**blackoutWindowStatus**",
              {
                "$ul": [
                  "**isGlobalBlackoutActive**",
                  "**isSnappableBlackoutActive**"
                ]
              }
            ],
            [
              "**blackoutWindows**",
              {
                "$ul": [
                  "**globalBlackoutWindows**",
                  "**snappableBlackoutWindows**"
                ]
              }
            ],
            "**cdpState**: Current CDP State of virtual machine.",
            [
              "**currentHost**",
              {
                "$ul": [
                  "**configuredSlaDomainId**: The ID of the SLA Domain configured directly on the Rubrik object.",
                  "**configuredSlaDomainName**: The name of the SLA Domain configured directly on the Rubrik object.",
                  "**configuredSlaDomainType**: Specifies whether the SLA Domain is used for protection or retention.",
                  "**id**: The ID of the Rubrik object.",
                  "**isConfiguredSlaDomainRetentionLocked**: Indicates whether the configured SLA Domain is Retention Locked. When this value is 'true', the configured SLA Domain is a Retention Lock SLA Domain.",
                  "**name**: The name of the Rubrik object.",
                  "**primaryClusterId**: The ID of the cluster that manages the Rubrik object.",
                  "**slaLastUpdateTime**: The UTC time when the SLA Domain was last updated.",
                  "**effectiveSlaDomainId**: The ID of the SLA Domain that controls the protection of the Rubrik object.",
                  "**effectiveSlaDomainName**: The name of the SLA Domain that controls the protection of the Rubrik object.",
                  "**effectiveSlaDomainPolarisManagedId**: Optional. This field contains the managed ID of of the Polaris-managed effective SLA Domain.",
                  "**effectiveSlaSourceObjectId**: The ID of the parent of the Rubrik object from which the SLA Domain that controls the protection of Rubrik object is inherited.",
                  "**effectiveSlaSourceObjectName**: The name of the parent of the Rubrik object from which the SLA Domain that controls the protection of Rubrik object is inherited.",
                  "**isEffectiveSlaDomainRetentionLocked**: Indicates whether the effective SLA Domain is Retention Locked. When this value is 'true', the effective SLA domain is a Retention Lock SLA Domain.",
                  "**computeClusterId**",
                  "**datacenterId**",
                  "**datastores**",
                  "**esxiVersion**: API Version of the ESXi Host.",
                  "**ioFilterStatus**: Status of Rubrik Io Filter on Hosts.",
                  "**ioFilterUiStatus**: Status of Rubrik Io Filter on ESX Host.",
                  "**isInVmc**"
                ]
              }
            ],
            [
              "**effectiveSlaDomain**",
              {
                "$ul": [
                  "**numNutanixVms**: The number of Nutanix virtual machines protected under this SLA domain.",
                  "**numEc2Instances**: The number of EC2 instances protected under this SLA Domain.",
                  "**numHypervVms**: The number of Hyper-V virtual machines protected under this SLA domain.",
                  "**numManagedVolumes**: The number of Managed volumes protected under this SLA Domain.",
                  "**numDbs**: The number of actively protected databases under this SLA domain.",
                  "**numVcdVapps**: The number of vApps protected under this SLA Domain.",
                  "**numFilesets**: The number of filesets protected under this SLA Domain.",
                  "**numLinuxHosts**: The number of Linux servers with filesets protected under this SLA Domain.",
                  "**numOracleDbs**: The number of actively protected oracle databases under this SLA Domain.",
                  "**numProtectedObjects**: The total number of protected ojects under this SLA Domain.",
                  "**numShares**: The number of shares protected under this SLA Domain.",
                  "**numStorageArrayVolumeGroups**: The number of storage array volume groups protected under this SLA Domain.",
                  "**numVms**",
                  "**numWindowsHosts**: The number of Windows servers with filesets protected under this SLA Domain.",
                  "**numWindowsVolumeGroups**: The number of Windows volume groups protected under this SLA Domain.",
                  "**allowedBackupWindows**",
                  "**archivalSpecs**: Specification for archival locations on this SLA.",
                  "**firstFullAllowedBackupWindows**",
                  "**frequencies**",
                  "**id**",
                  "**isDefault**",
                  "**isPaused**: A Boolean value that specifies whether protection for all the snappables that are protected by the specified SLA Domain is paused. When the value is 'true' protection is paused.",
                  "**isRetentionLocked**: Boolean value that identifies a Retention Lock SLA Domain. Value is true when an SLA Domain is Retention Locked and false when it is not.",
                  "**localRetentionLimit**: Retention limit for snapshots on the local Rubrik system. If none, they will remain as long as SLA requires.",
                  "**maxLocalRetentionLimit**: Maximum limit for snapshots to be retained on the local Rubrik system. For local sla, it would be max of frequencies but for remote sla, it would be the retentionLimit set on the replication target location. (Local location is the replication target location for remote sla).",
                  "**name**",
                  "**primaryClusterId**",
                  "**replicationSpecs**: Specification for replication locations on this SLA.",
                  "**uiColor**"
                ]
              }
            ],
            [
              "**guestCredential**",
              {
                "$ul": [
                  "**username**"
                ]
              }
            ],
            "**guestOsType**: Type of operating system used by the VMware virtual machine.",
            "**isAgentRegistered**: Boolean value that indicates whether the Rubrik Backup Service is installed and registered for the specified virtual machine. Set to 'true' when the Rubrik Backup Service is installed and registered and in all other cases set to 'false'.",
            "**isArrayIntegrationPossible**: Boolean value that indicates whether the performance enhancements of storage array integration are available for the specified virtual machine object. Storage array integration is available when all of the datastores that are assigned to the virtual machine reside on a qualified storage array. Set to 'true' when storage array integration is available and set to 'false' when storage array integration is not available.",
            "**isCdpEnabled**",
            "**isInVmc**: A Boolean that specifies whether the virtual machine is in a VMC environment.",
            "**latestRecoveryPoint**: Latest point in time that we can recover to if this is a CDP enabled VM.",
            "**logicalSize**: This returns the sum of all virtual disk sizes in the specified virtual machine.",
            "**oldestRecoveryPoint**: Oldest point in time that we can recover to if this is a CDP enabled VM.",
            [
              "**pendingSlaDomain**",
              {
                "$ul": [
                  "**isPendingSlaDomainRetentionLocked**",
                  "**objectId**: Managed ID of the object.",
                  "**pendingSlaDomainId**",
                  "**pendingSlaDomainName**"
                ]
              }
            ],
            "**physicalStorage**",
            "**snapshotCount**",
            "**snapshots**",
            "**vcenterName**: The name of vCenter that the virtual machine belongs to.",
            "**virtualDiskIds**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
