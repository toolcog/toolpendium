{
  "name": "getRoles",
  "description": "Get a list of role information for all roles in the specified organization.\n",
  "parameters": {
    "type": "object",
    "properties": {
      "limit": {
        "format": "int32",
        "minimum": 0,
        "type": "integer",
        "description": "Maximum number of results to return."
      },
      "offset": {
        "format": "int32",
        "minimum": 0,
        "type": "integer",
        "description": "Starting offset of the results to return."
      },
      "sort_by": {
        "default": "Name",
        "enum": [
          "Name",
          "Description",
          "RoleTemplate"
        ],
        "type": "string",
        "description": "Attribute used to sort the role list."
      },
      "sort_order": {
        "default": "asc",
        "enum": [
          "asc",
          "desc"
        ],
        "type": "string",
        "description": "Sort order used, ascending or descending."
      },
      "organization_id": {
        "type": "string",
        "description": "The ID of the organization the roles are a part of. When empty, the Rubrik cluster infers the organization from the session.\n"
      },
      "name": {
        "type": "string",
        "description": "The name of the role."
      },
      "role_template": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "List of comma-separated role templates by which to filter the roles.\n"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "/api/v1/role{?limit,offset,sort_by,sort_order,organization_id,name,role_template}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**data**: List of matching objects.",
            "**hasMore**: If there is more.",
            "**total**: Total list responses."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
