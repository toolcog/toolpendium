{
  "name": "queryFileset",
  "description": "Retrieve summary information for each fileset. Optionally, filter the retrieved information.",
  "parameters": {
    "type": "object",
    "properties": {
      "primary_cluster_id": {
        "type": "string",
        "description": "Filter the summary information based on the primary_cluster_id of the primary Rubrik cluster.\nUse **_local_** as the primary_cluster_id of the Rubrik cluster that is hosting the current REST API session."
      },
      "host_id": {
        "type": "string",
        "description": "Filter the summary information based on the ID of the host referenced by the fileset."
      },
      "share_id": {
        "type": "string",
        "description": "Filter the summary information based on the ID of the host share referenced by the fileset.\nUse **_NONE_** to only return information for filesets that were not created based on a host share.\nUse **_ANY_** to only return information for filesets that were created based on a host share."
      },
      "is_relic": {
        "type": "boolean",
        "description": "Filter the summary information based on the relic status of the fileset. Returns both relic and non relic if the parameter is not set."
      },
      "effective_sla_domain_id": {
        "type": "string",
        "description": "Filter the summary information based on the ID of the effective SLA Domain inherited by a fileset.\nUse **_UNPROTECTED_** to only return information for filesets that do not have an effective SLA Domain.\nUse **_PROTECTED_** to only return information for filesets that do have an effective SLA Domain."
      },
      "template_id": {
        "type": "string",
        "description": "Filter the summary information based on the ID of a fileset template.\n\nUse **_NONE_** to only return information for filesets that were not created from a fileset template.\n\nUse **_ANY_** to only return information for filesets that were created from a fileset template."
      },
      "limit": {
        "format": "int32",
        "minimum": 0,
        "type": "integer",
        "description": "Limit the summary information to a specified maximum number of filesets.\n\nOptionally, use with **_offset_** to start the count at a specified point.\n\nOptionally, use with **_sort_by_** to perform sort on given attributes. Include **_sort_order_** to determine the ascending or descending direction of sort."
      },
      "offset": {
        "format": "int32",
        "minimum": 0,
        "type": "integer",
        "description": "Starting position in the list of fileset entries contained in the response. The summary information includes the specified numbered entry and all higher numbered entries. Use with **_limit_** to retrieve the summary information as smaller groups of entries, e.g. for paging of results."
      },
      "name": {
        "type": "string",
        "description": "Retrieve filesets with a name matching the provided name. The search is performed as a case-insensitive infix search."
      },
      "host_name": {
        "type": "string",
        "description": "Retrieve filesets with a host name matching the provided name. The search is performed as a case-insensitive infix search."
      },
      "sort_by": {
        "enum": [
          "name",
          "hostName",
          "templateId",
          "effectiveSlaDomainName",
          "includes",
          "excludes",
          "exceptions"
        ],
        "type": "string",
        "description": "Specifies a comma-separated list of fileset attributes to use in sorting the fileset summary information. Performs an ASCII sort of the summary information using each specified attribute, in the order specified.\n\nValid attributes are: **_name_**, **_hostName_**, **_templateType_**, **_slaName_**, **_includes_**, **_excludes_**, and **_exceptions_**. Requires **_sort_order_**."
      },
      "sort_order": {
        "enum": [
          "asc",
          "desc"
        ],
        "type": "string",
        "description": "Sort order, either ascending or descending."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "/api/v1/fileset{?primary_cluster_id,host_id,share_id,is_relic,effective_sla_domain_id,template_id,limit,offset,name,host_name,sort_by,sort_order}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**data**: List of matching objects.",
            "**hasMore**: If there is more.",
            "**total**: Total list responses."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
