{
  "name": "putLdapService",
  "description": "Replace the values of a specified authentication domain object.",
  "parameters": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "ID of the authentication domain to be updated."
      },
      "body": {
        "$ref": "#/components/schemas/LdapServiceInfoUpdate",
        "description": "Information for updating an authentication domain."
      }
    },
    "required": [
      "id",
      "body"
    ]
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "/api/v1/ldap_service/{id}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**advancedOptions**",
              {
                "$ul": [
                  "**groupMaxLevel**: Maximum level of groups to query. Set to 1 to query the immediate groups to which a user belongs. Leave blank to query all the groups to which a user belongs. Valid values are between 1 and 50 inclusive. When ldapSearchAcrossIntegrations is set to be true, this value is ignored. When this value is set, then for this ldap service, ldapActiveDirectoryDisableMatchingRuleInChain is ignored and assumed to be true.",
                  "**groupMemberAttribute**: LDAP field that contains the group members. For example, Active Directory uses the field \"member\".",
                  "**groupMembershipAttribute**: Points to the group that this entry belongs to. For example, Active Directory uses the field \"memberOf\".",
                  "**groupSearchFilter**: A string representation of the LDAP group search filter in RFC4515 format. For example, a group search filter for Active Directory has the string representation (objectCategory=group).",
                  "**userNameSearchAttribute**: Specifies the user name. Active Directory searches can use the attributes sAMAccountName and userPrincipalName.",
                  "**userSearchFilter**: A string representation of the LDAP user search filter in RFC4515 format. For example, an Active Directory user search filter that selects all enabled user objects has the following string representation (&(objectCategory=person) (objectClass=user) (!(userAccountControl:1.2.840.113556.1.4.803:=2)))."
                ]
              }
            ],
            "**authServers**: An ordered list of authentication servers. Servers on this list have priority over servers discovered using dynamic DNS.",
            "**baseDn**: The path to the directory where searches for users begin.",
            "**bindUserName**: The name of the user that searches the authentication server for other users.",
            "**certificateId**: ID of the imported certificate to use for connections to this server.",
            "**domainType**: Domain type, for example local or LDAP/Active Directory.",
            "**dynamicDnsName**: Dynamic DNS name for locating authentication servers.",
            "**id**: ID of this authentication domain.",
            "**initialRefreshStatus**: Status message from the initial refresh.",
            "**isTotpEnforced**: Indicates whether the time-based one time password (TOTP) authentication method is being enforced. Returns true when TOTP is enforced and false when TOTP is not enforced.",
            "**mfaServerId**: MFA server associated with LDAP service.",
            "**name**: Domain name.",
            "**serviceAccount**: Computer account name associated with this cluster."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
