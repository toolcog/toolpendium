{
  "name": "queryLogReport",
  "description": "Get the database log backup delay information.",
  "parameters": {
    "type": "object",
    "properties": {
      "effective_sla_domain_id": {
        "type": "string",
        "description": "Filter by effective SLA domain."
      },
      "name": {
        "type": "string",
        "description": "Filter by the database name substring."
      },
      "database_type": {
        "type": "string",
        "description": "Filter by the database type."
      },
      "location": {
        "type": "string",
        "description": "Filter by the database location."
      },
      "log_backup_delay": {
        "format": "int32",
        "minimum": 0,
        "type": "integer",
        "description": "Filter by the database log backup delay in seconds, greater than this value."
      },
      "limit": {
        "format": "int32",
        "minimum": 0,
        "type": "integer",
        "description": "Limit the number of matches returned."
      },
      "offset": {
        "format": "int32",
        "minimum": 0,
        "type": "integer",
        "description": "Integer specifying the number of initial matches to ignore."
      },
      "sort_by": {
        "enum": [
          "effectiveSlaDomainName",
          "name",
          "location",
          "databaseType",
          "logBackupFrequency",
          "lastSnapshotTime",
          "latestRecoveryTime",
          "logBackupDelay"
        ],
        "type": "string",
        "description": "Specifies the attribute to use while sorting the summary information. Performs an ASCII sort using the specified attribute, in the order specified by sort_order."
      },
      "sort_order": {
        "enum": [
          "asc",
          "desc"
        ],
        "type": "string",
        "description": "Sort order, either ascending or descending."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "/api/v1/database/log_report{?effective_sla_domain_id,name,database_type,location,log_backup_delay,limit,offset,sort_by,sort_order}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**data**: List of matching objects.",
            "**hasMore**: If there is more.",
            "**total**: Total list responses."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
