{
  "name": "create-playlist",
  "description": "Create a playlist for a Spotify user. (The playlist will be empty until\nyou [add tracks](/documentation/web-api/reference/add-tracks-to-playlist).)\n",
  "parameters": {
    "type": "object",
    "properties": {
      "user_id": {
        "description": "The user's [Spotify user ID](/documentation/web-api/concepts/spotify-uris-ids).\n",
        "example": "smedjan",
        "title": "User ID",
        "type": "string"
      },
      "body": {
        "additionalProperties": true,
        "example": {
          "description": "New playlist description",
          "name": "New Playlist",
          "public": false
        },
        "properties": {
          "collaborative": {
            "description": "Defaults to `false`. If `true` the playlist will be collaborative. _**Note**: to create a collaborative playlist you must also set `public` to `false`. To create collaborative playlists you must have granted `playlist-modify-private` and `playlist-modify-public` [scopes](/documentation/web-api/concepts/scopes/#list-of-scopes)._\n",
            "type": "boolean"
          },
          "description": {
            "description": "value for playlist description as displayed in Spotify Clients and in the Web API.\n",
            "type": "string"
          },
          "name": {
            "description": "The name for the new playlist, for example `\"Your Coolest Playlist\"`. This name does not need to be unique; a user may have several playlists with the same name.\n",
            "type": "string"
          },
          "public": {
            "description": "Defaults to `true`. If `true` the playlist will be public, if `false` it will be private. To be able to create private playlists, the user must have granted the `playlist-modify-private` [scope](/documentation/web-api/concepts/scopes/#list-of-scopes)\n",
            "type": "boolean"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      }
    },
    "required": [
      "user_id"
    ]
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://api.spotify.com/v1/users/{user_id}/playlists"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**collaborative**: `true` if the owner allows other users to modify the playlist.",
            "**description**: The playlist description. _Only returned for modified, verified playlists, otherwise_ `null`.",
            [
              "**external_urls**",
              {
                "$ul": [
                  "**spotify**: The [Spotify URL](/documentation/web-api/concepts/spotify-uris-ids) for the object."
                ]
              }
            ],
            [
              "**followers**",
              {
                "$ul": [
                  "**href**: This will always be set to null, as the Web API does not support it at the moment.",
                  "**total**: The total number of followers."
                ]
              }
            ],
            "**href**: A link to the Web API endpoint providing full details of the playlist.",
            "**id**: The [Spotify ID](/documentation/web-api/concepts/spotify-uris-ids) for the playlist.",
            "**images**: Images for the playlist. The array may be empty or contain up to three images. The images are returned by size in descending order. See [Working with Playlists](/documentation/web-api/concepts/playlists). _**Note**: If returned, the source URL for the image (`url`) is temporary and will expire in less than a day._",
            "**name**: The name of the playlist.",
            [
              "**owner**",
              {
                "$ul": [
                  [
                    "**external_urls**",
                    {
                      "$ul": [
                        "**spotify**: The [Spotify URL](/documentation/web-api/concepts/spotify-uris-ids) for the object."
                      ]
                    }
                  ],
                  [
                    "**followers**",
                    {
                      "$ul": [
                        "**href**: This will always be set to null, as the Web API does not support it at the moment.",
                        "**total**: The total number of followers."
                      ]
                    }
                  ],
                  "**href**: A link to the Web API endpoint for this user.",
                  "**id**: The [Spotify user ID](/documentation/web-api/concepts/spotify-uris-ids) for this user.",
                  "**type**: The object type.",
                  "**uri**: The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for this user.",
                  "**display_name**: The name displayed on the user's profile. `null` if not available."
                ]
              }
            ],
            "**public**: The playlist's public/private status: `true` the playlist is public, `false` the playlist is private, `null` the playlist status is not relevant. For more about public/private status, see [Working with Playlists](/documentation/web-api/concepts/playlists)",
            "**snapshot_id**: The version identifier for the current playlist. Can be supplied in other requests to target a specific playlist version",
            [
              "**tracks**",
              {
                "$ul": [
                  "**href**: A link to the Web API endpoint returning the full result of the request",
                  "**limit**: The maximum number of items in the response (as set in the query or by default).",
                  "**next**: URL to the next page of items. ( `null` if none)",
                  "**offset**: The offset of the items returned (as set in the query or by default)",
                  "**previous**: URL to the previous page of items. ( `null` if none)",
                  "**total**: The total number of items available to return.",
                  "**items**"
                ]
              }
            ],
            "**type**: The object type: \"playlist\"",
            "**uri**: The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the playlist."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**error**",
              {
                "$ul": [
                  "**message**: A short description of the cause of the error.",
                  "**status**: The HTTP status code (also returned in the response header; see [Response Status Codes](/documentation/web-api/concepts/api-calls#response-status-codes) for more information)."
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**error**",
              {
                "$ul": [
                  "**message**: A short description of the cause of the error.",
                  "**status**: The HTTP status code (also returned in the response header; see [Response Status Codes](/documentation/web-api/concepts/api-calls#response-status-codes) for more information)."
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "429": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**error**",
              {
                "$ul": [
                  "**message**: A short description of the cause of the error.",
                  "**status**: The HTTP status code (also returned in the response header; see [Response Status Codes](/documentation/web-api/concepts/api-calls#response-status-codes) for more information)."
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
