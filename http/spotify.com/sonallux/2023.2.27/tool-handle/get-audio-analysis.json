{
  "name": "get-audio-analysis",
  "description": "Get a low-level audio analysis for a track in the Spotify catalog. The audio analysis describes the track’s structure and musical content, including rhythm, pitch, and timbre.\n",
  "parameters": {
    "type": "object",
    "properties": {
      "id": {
        "description": "The [Spotify ID](/documentation/web-api/concepts/spotify-uris-ids)\nfor the track.\n",
        "example": "11dFghVXANMlKmJXsNCbNl",
        "title": "Spotify Track ID",
        "type": "string"
      }
    },
    "required": [
      "id"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://api.spotify.com/v1/audio-analysis/{id}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**bars**: The time intervals of the bars throughout the track. A bar (or measure) is a segment of time defined as a given number of beats.",
            "**beats**: The time intervals of beats throughout the track. A beat is the basic time unit of a piece of music; for example, each tick of a metronome. Beats are typically multiples of tatums.",
            [
              "**meta**",
              {
                "$ul": [
                  "**analysis_time**: The amount of time taken to analyze this track.",
                  "**analyzer_version**: The version of the Analyzer used to analyze this track.",
                  "**detailed_status**: A detailed status code for this track. If analysis data is missing, this code may explain why.",
                  "**input_process**: The method used to read the track's audio data.",
                  "**platform**: The platform used to read the track's audio data.",
                  "**status_code**: The return code of the analyzer process. 0 if successful, 1 if any errors occurred.",
                  "**timestamp**: The Unix timestamp (in seconds) at which this track was analyzed."
                ]
              }
            ],
            "**sections**: Sections are defined by large variations in rhythm or timbre, e.g. chorus, verse, bridge, guitar solo, etc. Each section contains its own descriptions of tempo, key, mode, time_signature, and loudness.",
            "**segments**: Each segment contains a roughly conisistent sound throughout its duration.",
            "**tatums**: A tatum represents the lowest regular pulse train that a listener intuitively infers from the timing of perceived musical events (segments).",
            [
              "**track**",
              {
                "$ul": [
                  "**analysis_channels**: The number of channels used for analysis. If 1, all channels are summed together to mono before analysis.",
                  "**analysis_sample_rate**: The sample rate used to decode and analyze this track. May differ from the actual sample rate of this track available on Spotify.",
                  "**code_version**: A version number for the Echo Nest Musical Fingerprint format used in the codestring field.",
                  "**codestring**: An [Echo Nest Musical Fingerprint (ENMFP)](https://academiccommons.columbia.edu/doi/10.7916/D8Q248M4) codestring for this track.",
                  "**duration**: Length of the track in seconds.",
                  "**echoprint_version**: A version number for the EchoPrint format used in the echoprintstring field.",
                  "**echoprintstring**: An [EchoPrint](https://github.com/spotify/echoprint-codegen) codestring for this track.",
                  "**end_of_fade_in**: The time, in seconds, at which the track's fade-in period ends. If the track has no fade-in, this will be 0.0.",
                  "**key**: The key the track is in. Integers map to pitches using standard [Pitch Class notation](https://en.wikipedia.org/wiki/Pitch_class). E.g. 0 = C, 1 = C♯/D♭, 2 = D, and so on. If no key was detected, the value is -1.",
                  "**key_confidence**: The confidence, from 0.0 to 1.0, of the reliability of the `key`.",
                  "**loudness**: The overall loudness of a track in decibels (dB). Loudness values are averaged across the entire track and are useful for comparing relative loudness of tracks. Loudness is the quality of a sound that is the primary psychological correlate of physical strength (amplitude). Values typically range between -60 and 0 db.",
                  "**mode**: Mode indicates the modality (major or minor) of a track, the type of scale from which its melodic content is derived. Major is represented by 1 and minor is 0.",
                  "**mode_confidence**: The confidence, from 0.0 to 1.0, of the reliability of the `mode`.",
                  "**num_samples**: The exact number of audio samples analyzed from this track. See also `analysis_sample_rate`.",
                  "**offset_seconds**: An offset to the start of the region of the track that was analyzed. (As the entire track is analyzed, this should always be 0.)",
                  "**rhythm_version**: A version number for the Rhythmstring used in the rhythmstring field.",
                  "**rhythmstring**: A Rhythmstring for this track. The format of this string is similar to the Synchstring.",
                  "**sample_md5**: This field will always contain the empty string.",
                  "**start_of_fade_out**: The time, in seconds, at which the track's fade-out period starts. If the track has no fade-out, this should match the track's length.",
                  "**synch_version**: A version number for the Synchstring used in the synchstring field.",
                  "**synchstring**: A [Synchstring](https://github.com/echonest/synchdata) for this track.",
                  "**tempo**: The overall estimated tempo of a track in beats per minute (BPM). In musical terminology, tempo is the speed or pace of a given piece and derives directly from the average beat duration.",
                  "**tempo_confidence**: The confidence, from 0.0 to 1.0, of the reliability of the `tempo`.",
                  "**time_signature**: An estimated time signature. The time signature (meter) is a notational convention to specify how many beats are in each bar (or measure). The time signature ranges from 3 to 7 indicating time signatures of \"3/4\", to \"7/4\".",
                  "**time_signature_confidence**: The confidence, from 0.0 to 1.0, of the reliability of the `time_signature`.",
                  "**window_seconds**: The length of the region of the track was analyzed, if a subset of the track was analyzed. (As the entire track is analyzed, this should always be 0.)"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**error**",
              {
                "$ul": [
                  "**message**: A short description of the cause of the error.",
                  "**status**: The HTTP status code (also returned in the response header; see [Response Status Codes](/documentation/web-api/concepts/api-calls#response-status-codes) for more information)."
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**error**",
              {
                "$ul": [
                  "**message**: A short description of the cause of the error.",
                  "**status**: The HTTP status code (also returned in the response header; see [Response Status Codes](/documentation/web-api/concepts/api-calls#response-status-codes) for more information)."
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "429": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**error**",
              {
                "$ul": [
                  "**message**: A short description of the cause of the error.",
                  "**status**: The HTTP status code (also returned in the response header; see [Response Status Codes](/documentation/web-api/concepts/api-calls#response-status-codes) for more information)."
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
