{
  "name": "Inventory_GetList_",
  "description": "Sample request:\r\n            \r\nGET /inventory?inventoryId=Item1\r\n            \r\nGET /inventory?warehouseId=MAIN&modifiedSince=2021-08-01T12:00:00&pageSize=1000\r\n            \r\nGET /inventory?inventoryId=Item1&InventoryId=Item2&expand=location,attribute\r\n            \r\nGET /inventory?expand=location&attributeFilter=WEBSHOP:1",
  "parameters": {
    "type": "object",
    "properties": {
      "inventoryId": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "A list of zero or more inventory items to get a summary for. If no inventoryId is passed, all inventory items will be included in the response."
      },
      "warehouseId": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "A list of zero or more warehouses to get a summary for. If no warehouse is supplied, all warehouses will be included in the response."
      },
      "locationId": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "A list of zero or more locations to get a summary for. If no location is supplied, all locations will be included in the response."
      },
      "expand": {
        "items": {
          "$ref": "#/$defs/InventoryAvailabilityExpansions"
        },
        "type": "array",
        "description": "An additional option to include location detail information with the warehouse summary, or attribute details for the inventory item. If this is not supplied, location information or attributes will not be included in the response."
      },
      "modifiedSince": {
        "format": "date-time",
        "type": "string",
        "description": "A date/time value for filtering when an inventory item's warehouse or location availability last changed\r\nUnless a specific time zone offset is included (e.g. '2012-12-24T12:15:14+02:00'), the date is considered to be in the UTC time zone."
      },
      "attributeFilter": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "One or more attribute filter values specified as attribute-id:attribute-value. For example \"attributeFilter=WEBSHOP:1&attributeFilter=AnotherAttribute:someValue\"\r\nIf two attributeFilter values have the same attribute-Id either one need to match."
      },
      "pageSize": {
        "format": "int32",
        "type": "integer",
        "description": "The number of inventory items retrieved per page. If not specified the default pagesize is 10000 items per page"
      },
      "pageIndex": {
        "format": "int32",
        "type": "integer",
        "description": "Gets or sets the zero based page index to get"
      }
    },
    "$defs": {
      "InventoryAvailabilityExpansions": {
        "description": "Defines expansion options for the inventory summary endpoint.",
        "enum": [
          "None",
          "Location",
          "Attribute",
          "All"
        ],
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "//api/v3/Inventory{?inventoryId,warehouseId,locationId,expand,modifiedSince,attributeFilter,pageSize,pageIndex}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**nextPage**: Gets or sets the link to the next page with more results. If set to null then no more records are present.",
            "**totalCount**: Gets or sets the total number of items available. If set to null, then the total number of items cannot be determined",
            "**value**: Gets or sets the items that are paged"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**",
            "**instance**",
            "**status**",
            "**title**",
            "**type**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
