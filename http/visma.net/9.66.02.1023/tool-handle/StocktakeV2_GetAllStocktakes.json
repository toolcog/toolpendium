{
  "name": "StocktakeV2_GetAllStocktakes",
  "description": "Get a range of stocktakes - ScreenId=IN305000\r\nRequest page size must be lower or equal to the allowed max page size which is returned as part of the metadata information. If requested page size is greater than allowed max page size, request will be limited to max page size.",
  "parameters": {
    "type": "object",
    "properties": {
      "warehouse": {
        "type": "string",
        "description": "Filter by Warehouse."
      },
      "location": {
        "type": "string",
        "description": "Filter by Location."
      },
      "inventory": {
        "type": "string",
        "description": "Filter by Inventory."
      },
      "lotSerialNumber": {
        "type": "string",
        "description": "Filter by LotSerialNumber."
      },
      "summaryStatus": {
        "enum": [
          "Cancelled",
          "Completed",
          "Counting",
          "Entering"
        ],
        "type": "string",
        "description": "Filter by SummaryStatus."
      },
      "startWithLine": {
        "format": "int32",
        "type": "integer",
        "description": "Filter by LineNumber GreaterEqual StartWithLine."
      },
      "endWithLine": {
        "format": "int32",
        "type": "integer",
        "description": "Filter by by LineNumber LessEqual EndWithLine."
      },
      "freezeDateTime": {
        "type": "string",
        "description": "Filter by FreezeDateTime."
      },
      "freezeDateTimeCondition": {
        "type": "string",
        "description": "Filter by FreezeDateTimeCondition."
      },
      "lastModifiedDateTime": {
        "type": "string",
        "description": "System generated value for last modification of transaction/record. Use format: YYYY-MM-DD HH:MM (date and time) to filter from date to present.."
      },
      "lastModifiedDateTimeCondition": {
        "type": "string",
        "description": "System retrieved information for state/condition."
      },
      "expirationDateTime": {
        "type": "string",
        "description": "Filter by ExpirationDateTime."
      },
      "expirationDateTimeCondition": {
        "type": "string",
        "description": "Filter by ExpirationDateTimeCondition."
      },
      "status": {
        "enum": [
          "NotEntered",
          "Entered",
          "Skipped"
        ],
        "type": "string",
        "description": "Filter by StocktakeLineStatus."
      },
      "pageNumber": {
        "format": "int32",
        "type": "integer",
        "description": "Pagination parameter. Page number."
      },
      "pageSize": {
        "format": "int32",
        "type": "integer",
        "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
      },
      "erp-api-background": {
        "type": "string",
        "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "/API/controller/api/v2/stocktake{?warehouse,location,inventory,lotSerialNumber,summaryStatus,startWithLine,endWithLine,freezeDateTime,freezeDateTimeCondition,lastModifiedDateTime,lastModifiedDateTimeCondition,expirationDateTime,expirationDateTimeCondition,status,pageNumber,pageSize}"
    },
    "headers": {
      "erp-api-background": {
        "$": "erp-api-background"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "List"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**description**: The top part &gt; Description &gt; The description of the stocktaking.",
            "**errorInfo**",
            "**freezeDate**: The top part &gt; Freeze date &gt; An info field that shows the date when the stocktaking document was created.",
            "**lastModifiedDateTime**: System generated information.",
            "**lines**: Stocktaking details tab &gt;",
            [
              "**metadata**",
              {
                "$ul": [
                  "**maxPageSize**",
                  "**totalCount**"
                ]
              }
            ],
            "**numberOfLines**",
            "**physicalQty**: The top part &gt; Total physical qty. &gt; An info field showing the total actual quantity of all stock items listed in the document.",
            "**referenceNbr**: The top part &gt; Ref. no. &gt; The reference number of the stocktaking document to be reviewed.",
            "**summaryStatus**: The top part &gt; Status &gt; An info field that shows the current status of this stocktaking document.",
            "**varianceCost**: The top part &gt; Total variance cost &gt; An info field showing the total variance cost for all stock items listed in the document.",
            "**varianceQty**: The top part &gt; Total variance qty. &gt; An info field showing the total variance quantity for the document."
          ]
        },
        {
          "$each": "$.body.*",
          "$as": "item",
          "$block": [
            {
              "$h2": "Item"
            },
            {
              "$lang": "json",
              "$code": {
                "$encode": "json",
                "$indent": true,
                "$content": {
                  "$": "$.item"
                }
              }
            }
          ]
        }
      ]
    },
    "202": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**id**",
            "**stateLocation**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
