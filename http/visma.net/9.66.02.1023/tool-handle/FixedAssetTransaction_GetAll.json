{
  "name": "FixedAssetTransaction_GetAll",
  "description": "Get a range of transactions - Screen ID:FA301000",
  "parameters": {
    "type": "object",
    "properties": {
      "refNo": {
        "type": "string",
        "description": "View all transactions connected to this Reference number."
      },
      "assetID": {
        "type": "string",
        "description": "View all transactions connected to this Asset ID."
      },
      "bookID": {
        "type": "string",
        "description": "View all transactions in this Book ID."
      },
      "fromPeriod": {
        "type": "string",
        "description": "View all transactions from and including this Period. Format: YYYYMM."
      },
      "toPeriod": {
        "type": "string",
        "description": "View all transactions to and including this Period. Format: YYYYMM."
      },
      "accountID": {
        "type": "string",
        "description": "View all transactions for this Account ID."
      },
      "subAccountID": {
        "type": "string",
        "description": "View all transactions for this Sub Account ID."
      },
      "status": {
        "enum": [
          "Balanced",
          "OnHold",
          "Posted",
          "Unposted"
        ],
        "type": "string",
        "description": "View all transactions with this Status. Available statuses: Balanced, OnHold, Posted and UnPosted."
      },
      "transactionType": {
        "enum": [
          "PurchasingPlus",
          "PurchasingMinus",
          "DepreciationPlus",
          "DepreciationMinus",
          "CalculatedPlus",
          "CalculatedMinus",
          "SalePlus",
          "SaleMinus",
          "TransferPurchasing",
          "TransferDepreciation",
          "ReconciliationPlus",
          "ReconciliationMinus",
          "PurchasingDisposal",
          "PurchasingReversal",
          "AdjustingDeprPlus",
          "AdjustingDeprMinus"
        ],
        "type": "string",
        "description": "View all transactions with this Transaction Type. Available types: PurchasingPlus, PurchasingMinus, DepreciationPlus, DepreciationMinus, CalculatedPlus, CalculatedMinu,SalePlus, SaleMinus,TransferPurchasing, TransferDepreciation, ReconciliationPlus, ReconciliationMinus, PurchasingDisposal, PurchasingReversal, AdjustingDeprPlus and AdjustingDeprMinus."
      },
      "transactionFromDate": {
        "type": "string",
        "description": "View all transactions from and including this Transaction Date. Date format: YYYY-MM-DD."
      },
      "transactionToDate": {
        "type": "string",
        "description": "View all transactions to and including this Transaction Date inclusive. Date format: YYYY-MM-DD ."
      },
      "lastModifiedDateTime": {
        "type": "string",
        "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
      },
      "lastModifiedDateTimeCondition": {
        "type": "string",
        "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
      },
      "pageNumber": {
        "format": "int32",
        "type": "integer",
        "description": "Pagination parameter. Page number."
      },
      "pageSize": {
        "format": "int32",
        "type": "integer",
        "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
      },
      "erp-api-background": {
        "type": "string",
        "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "/API/controller/api/v1/fixedAssetTransaction{?refNo,assetID,bookID,fromPeriod,toPeriod,accountID,subAccountID,status,transactionType,transactionFromDate,transactionToDate,lastModifiedDateTime,lastModifiedDateTimeCondition,pageNumber,pageSize}"
    },
    "headers": {
      "erp-api-background": {
        "$": "erp-api-background"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "List"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**accounts**: The accounts used in this fixed asset transaction",
              {
                "$ul": [
                  "**creditAccountID**: The credit account",
                  "**creditSubAccountID**: The credit sub account",
                  "**debitAccountID**: The debit account",
                  "**debitSubAccountID**: The debit sub account"
                ]
              }
            ],
            "**assetID**: The asset id this fixed asset transaction belongs to",
            "**batchNo**: The batch number of the general ledger transaction for this fixed asset transaction",
            "**bookID**: The book id for this fixed asset transaction",
            "**branchID**: The branch id for this fixed asset transaction",
            "**errorInfo**",
            "**lastModifiedDateTime**: A system generated date/time that indicates the last change for this fixed asset transaction",
            "**lineNo**: The line number of this fixed asset transaction",
            [
              "**metadata**",
              {
                "$ul": [
                  "**maxPageSize**",
                  "**totalCount**"
                ]
              }
            ],
            "**origin**: The origin of this fixed asset transaction. Origin can be",
            "**refNo**: The referance number for this fixed asset transaction",
            [
              "**register**: The registration details",
              {
                "$ul": [
                  "**documentDate**: The document date for this fixed asset transaction",
                  "**hold**: Indecates whether this fixed asset transaction is on hold or not",
                  "**status**: Status can be"
                ]
              }
            ],
            "**transactionAmount**: The amount of this fixed asset transaction",
            "**transactionDate**: The transaction date for this fixed asset transaction",
            "**transactionDescription**: The description of this fixed asset transaction",
            "**transactionPeriodID**: The transaction period id for this fixed asset transaction",
            "**transactionType**: Type can be"
          ]
        },
        {
          "$each": "$.body.*",
          "$as": "item",
          "$block": [
            {
              "$h2": "Item"
            },
            {
              "$lang": "json",
              "$code": {
                "$encode": "json",
                "$indent": true,
                "$content": {
                  "$": "$.item"
                }
              }
            }
          ]
        }
      ]
    },
    "202": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**id**",
            "**stateLocation**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
