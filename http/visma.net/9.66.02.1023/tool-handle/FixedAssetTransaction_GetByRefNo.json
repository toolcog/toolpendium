{
  "name": "FixedAssetTransaction_GetByRefNo",
  "description": "Get transactions for a specific Asset - Screen ID:FA301000",
  "parameters": {
    "type": "object",
    "properties": {
      "RefNo": {
        "type": "string",
        "description": "Identifies the fixed asset by reference number"
      },
      "erp-api-background": {
        "type": "string",
        "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
      }
    },
    "required": [
      "RefNo"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "/API/controller/api/v1/fixedAssetTransaction/{RefNo}"
    },
    "headers": {
      "erp-api-background": {
        "$": "erp-api-background"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "List"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**accounts**: The accounts used in this fixed asset transaction",
              {
                "$ul": [
                  "**creditAccountID**: The credit account",
                  "**creditSubAccountID**: The credit sub account",
                  "**debitAccountID**: The debit account",
                  "**debitSubAccountID**: The debit sub account"
                ]
              }
            ],
            "**assetID**: The asset id this fixed asset transaction belongs to",
            "**batchNo**: The batch number of the general ledger transaction for this fixed asset transaction",
            "**bookID**: The book id for this fixed asset transaction",
            "**branchID**: The branch id for this fixed asset transaction",
            "**errorInfo**",
            "**lastModifiedDateTime**: A system generated date/time that indicates the last change for this fixed asset transaction",
            "**lineNo**: The line number of this fixed asset transaction",
            [
              "**metadata**",
              {
                "$ul": [
                  "**maxPageSize**",
                  "**totalCount**"
                ]
              }
            ],
            "**origin**: The origin of this fixed asset transaction. Origin can be",
            "**refNo**: The referance number for this fixed asset transaction",
            [
              "**register**: The registration details",
              {
                "$ul": [
                  "**documentDate**: The document date for this fixed asset transaction",
                  "**hold**: Indecates whether this fixed asset transaction is on hold or not",
                  "**status**: Status can be"
                ]
              }
            ],
            "**transactionAmount**: The amount of this fixed asset transaction",
            "**transactionDate**: The transaction date for this fixed asset transaction",
            "**transactionDescription**: The description of this fixed asset transaction",
            "**transactionPeriodID**: The transaction period id for this fixed asset transaction",
            "**transactionType**: Type can be"
          ]
        },
        {
          "$each": "$.body.*",
          "$as": "item",
          "$block": [
            {
              "$h2": "Item"
            },
            {
              "$lang": "json",
              "$code": {
                "$encode": "json",
                "$indent": true,
                "$content": {
                  "$": "$.item"
                }
              }
            }
          ]
        }
      ]
    },
    "202": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**id**",
            "**stateLocation**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
