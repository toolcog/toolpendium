{
  "name": "CustomerSalesPrice_GetCustomerSalesPrices",
  "description": "Get a range of Customer Sales Prices - ScreenId=AR202000\r\nRequest page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size",
  "parameters": {
    "type": "object",
    "properties": {
      "greaterThanValue": {
        "type": "string"
      },
      "numberToRead": {
        "format": "int32",
        "type": "integer",
        "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
      },
      "skipRecords": {
        "format": "int32",
        "type": "integer",
        "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
      },
      "priceType": {
        "enum": [
          "All",
          "Base",
          "Customer",
          "CustomerPriceClass"
        ],
        "type": "string"
      },
      "priceCode": {
        "type": "string"
      },
      "inventoryId": {
        "type": "string"
      },
      "effectiveAsOf": {
        "format": "date-time",
        "type": "string"
      },
      "lastModifiedDateTime": {
        "type": "string"
      },
      "lastModifiedDateTimeCondition": {
        "type": "string"
      },
      "pageNumber": {
        "format": "int32",
        "type": "integer",
        "description": "Pagination parameter. Page number."
      },
      "pageSize": {
        "format": "int32",
        "type": "integer",
        "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
      },
      "erp-api-background": {
        "type": "string",
        "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "/API/controller/api/v1/customerSalesPrice{?greaterThanValue,numberToRead,skipRecords,priceType,priceCode,inventoryId,effectiveAsOf,lastModifiedDateTime,lastModifiedDateTimeCondition,pageNumber,pageSize}"
    },
    "headers": {
      "erp-api-background": {
        "$": "erp-api-background"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "List"
        },
        "This class represents a CustomerSalesPrice in CustomerSalesPriceController.",
        "**Key properties:**",
        {
          "$ul": [
            "**breakQty**: The Sales price table &gt; Break quantity &gt; The quantity to define a lower bound for a quantity tier with the specific price.",
            "**currency**: Mandatory field: The Sales price table &gt; Currency* &gt; The currency in which this price is specified.",
            "**description**: The Sales price table &gt; Description &gt; The description of the stock item.",
            "**effectiveDate**: The Sales price table &gt; Effective date &gt; The date when the price became effective.",
            "**errorInfo**",
            "**expirationDate**: The Sales price table &gt; Ecpiration date &gt; The date when the price expires.",
            "**inventoryId**: The Sales price table or the top part &gt; Warehouse &gt; The warehouse in which the price applies.",
            "**lastModifiedDateTime**",
            [
              "**metadata**",
              {
                "$ul": [
                  "**maxPageSize**",
                  "**totalCount**"
                ]
              }
            ],
            "**price**: The Sales Price table &gt; Price &gt; The price for the item.",
            "**priceCode**: The Sales price table or the top part &gt; Price code &gt; The customer or a customer price class for which you want to create or edit a price list.",
            "**priceType**: The Sales price table or the top part &gt; Price type &gt; The type of prices you want to view: All prices, Base, Customer, Customer price class.",
            "**promotion**: The Sales price table &gt; Promotion &gt; A check box that indicates (if selected) that the price for this item is promotional.",
            "**recordId**: Mandatory field: The Sales price table &gt; Item ID* &gt; The ID of the stock or non-stock stock item for which price information is listed.",
            "**uoM**: Mandatory field: The Sales price table &gt; UoM* &gt; The unit of measure (UoM) used for the item.",
            "**vat**: The Sales price table &gt; VAT &gt; The VAT amount that is included in the sales price."
          ]
        },
        {
          "$each": "$.body.*",
          "$as": "item",
          "$block": [
            {
              "$h2": "Item"
            },
            {
              "$lang": "json",
              "$code": {
                "$encode": "json",
                "$indent": true,
                "$content": {
                  "$": "$.item"
                }
              }
            }
          ]
        }
      ]
    },
    "202": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**id**",
            "**stateLocation**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
