{
  "name": "ExpenseClaim_GetAll",
  "description": "Get a range of Expense Claims, a filter needs to be specified. ScreenId=EP301000\r\nRequest page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size\r\nChange log:\r\n2021-October:Added forced pagination",
  "parameters": {
    "type": "object",
    "properties": {
      "status": {
        "enum": [
          "Hold",
          "PendingApproval",
          "Approved",
          "Rejected",
          "Released"
        ],
        "type": "string",
        "description": "The status of the document."
      },
      "date": {
        "format": "date-time",
        "type": "string",
        "description": "The date of the document"
      },
      "customer": {
        "type": "string",
        "description": "The customer from the document"
      },
      "departmentId": {
        "type": "string",
        "description": "Identifies the department"
      },
      "greaterThanValue": {
        "type": "string",
        "description": "Greater-than value. The item which is the object for this, varies from API to API."
      },
      "numberToRead": {
        "format": "int32",
        "type": "integer",
        "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
      },
      "skipRecords": {
        "format": "int32",
        "type": "integer",
        "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
      },
      "orderBy": {
        "type": "string",
        "description": "This field has been deprecated and will be removed in future versions. The OrderBy parameter has no effect on the result."
      },
      "lastModifiedDateTime": {
        "type": "string",
        "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
      },
      "lastModifiedDateTimeCondition": {
        "type": "string",
        "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
      },
      "pageNumber": {
        "format": "int32",
        "type": "integer",
        "description": "Pagination parameter. Page number."
      },
      "pageSize": {
        "format": "int32",
        "type": "integer",
        "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
      },
      "erp-api-background": {
        "type": "string",
        "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "/API/controller/api/v1/expenseClaim{?status,date,customer,departmentId,greaterThanValue,numberToRead,skipRecords,orderBy,lastModifiedDateTime,lastModifiedDateTimeCondition,pageNumber,pageSize}"
    },
    "headers": {
      "erp-api-background": {
        "$": "erp-api-background"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "List"
        },
        "This class represents a Expense Claim in ExpenseClaimController. Used for getting data.",
        "**Key properties:**",
        {
          "$ul": [
            "**approvalDate**: The top part &gt; Approval date &gt; The date when the claim was approved.",
            "**approvalStatus**: The top part &gt; Approval status &gt; The status of the claim in Approval.",
            "**approvalStatusText**: The top part &gt; Approval status &gt; A text field.",
            "**claimTotal**: The top part &gt; Claim total &gt; The total amount of the claim.",
            [
              "**claimedBy**: Mandatory field: The top part &gt; Claimed by &gt; The employee who is claiming the expenses. If the claim is released, an Accounts Payable bill will be generated to this employee.",
              {
                "$ul": [
                  "**internalId**",
                  "**name**: The name of the particular destination of the selected type.",
                  "**number**: The identifier of the particular destination of the selected type."
                ]
              }
            ],
            "**currency**: The top part &gt; Currency &gt; The currency of the claim.",
            [
              "**customer**: The top part &gt; Customer &gt; The applicable customer.",
              {
                "$ul": [
                  "**name**: Click the magnifier. &gt; The name.",
                  "**number**"
                ]
              }
            ],
            "**date**: Mandatory field: The top part &gt; Date* &gt; The date when the claim was entered.",
            [
              "**department**: Mandatory field: The top part &gt; Department ID &gt; The department associated with the expense claim.",
              {
                "$ul": [
                  "**description**: Click on the magnifier. &gt; The description.",
                  "**id**: Click on the magnifier. &gt; The identifier."
                ]
              }
            ],
            "**description**: Mandatory field: The top part &gt; Description &gt; A description of the claim.",
            "**details**: Expence claim details tab &gt;",
            "**errorInfo**",
            "**lastModifiedDateTime**: System generated information: The lastest time the expense claim was modified",
            [
              "**location**: The top part &gt; Location &gt; The company location associated with the claim.",
              {
                "$ul": [
                  "**description**: Click on the magnifier. &gt; The description.",
                  "**id**: Click on the magnifier. &gt; The identifier."
                ]
              }
            ],
            [
              "**metadata**",
              {
                "$ul": [
                  "**maxPageSize**",
                  "**totalCount**"
                ]
              }
            ],
            "**refNbr**: The top part &gt; Ref. no. &gt; The unique reference number of the expense claim document.",
            "**status**: The top part &gt; Status &gt; The current status of the expense claim: On Hold/Pending Approval/Approved/Rejected/Released.",
            "**vatExemptTotal**: The top part &gt; VAT exempt total &gt; The document total that is exempt from VAT.",
            "**vatTaxableTotal**: The top part &gt; VAT taxable total &gt; The document total that is subjected to VAT."
          ]
        },
        {
          "$each": "$.body.*",
          "$as": "item",
          "$block": [
            {
              "$h2": "Item"
            },
            {
              "$lang": "json",
              "$code": {
                "$encode": "json",
                "$indent": true,
                "$content": {
                  "$": "$.item"
                }
              }
            }
          ]
        }
      ]
    },
    "202": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**id**",
            "**stateLocation**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
