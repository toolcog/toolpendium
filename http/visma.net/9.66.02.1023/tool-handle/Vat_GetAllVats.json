{
  "name": "Vat_GetAllVats",
  "description": "Get a range of Vats - ScreenId=TX205000",
  "parameters": {
    "type": "object",
    "properties": {
      "numberToRead": {
        "format": "int32",
        "type": "integer",
        "description": "This field has been deprecated and will be removed in future versions."
      },
      "skipRecords": {
        "format": "int32",
        "type": "integer",
        "description": "This field has been deprecated and will be removed in future versions."
      },
      "lastModifiedDateTime": {
        "type": "string",
        "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
      },
      "lastModifiedDateTimeCondition": {
        "type": "string",
        "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
      },
      "erp-api-background": {
        "type": "string",
        "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "/API/controller/api/v1/vat{?numberToRead,skipRecords,lastModifiedDateTime,lastModifiedDateTimeCondition}"
    },
    "headers": {
      "erp-api-background": {
        "$": "erp-api-background"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "List"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**calculateOn**: VAT settings tab &gt; Calculate on &gt; The method of calculating the tax amount, which is one of the following options: Extract from item amount, Item amount, Item and VAT amount, Document amount, Document and VAT amount.",
            "**cashDiscount**: VAT settings tab &gt; Cash discount &gt; The method of calculating the tax base amount if a cash discount is applied.",
            "**categories**: Both tabs &gt; Categories tab &gt;",
            "**deductibleVat**: VAT settings tab &gt; Partially deductible VAT &gt; A check box that indicates (if selected) that this is a deductible value-added VAT.",
            [
              "**defaultNonStockItem**: VAT settings tab &gt; Default non-stock item &gt; The default non-stock item for the VAT ID.",
              {
                "$ul": [
                  "**description**: Name of item/description",
                  "**number**: Number of item"
                ]
              }
            ],
            "**description**: VAT settings tab &gt; Description &gt; A detailed description of the VAT.",
            "**documentText**: VAT Settings tab &gt; Document text tab &gt; Document text &gt; The text to be printed to the VAT document.",
            "**enterFromVatInvoice**: VAT settings tab &gt; Enter from VAT invoice &gt; A check box that indicates (if selected) that this VAT should be calculated for documents only if the documents are added to a VAT invoice or VAT adjustment.",
            "**euReportCode**: VAT settings tab &gt; EU report code &gt; The EU reporting code for the VAT.",
            [
              "**glAccounts**: General ledger accounts &gt;",
              {
                "$ul": [
                  [
                    "**vatClaimableAccount**: VAT Claimable account &gt; The account that accumulates the VAT amounts to be claimed from the tax agency for the VAT reporting period.",
                    {
                      "$ul": [
                        "**description**: Name of item/description",
                        "**externalCode1**: Account class &gt; The identifier of the account class.",
                        "**externalCode2**: Account class &gt; The name of the account class.",
                        "**number**: Number of item",
                        "**type**: Account &gt; The account number."
                      ]
                    }
                  ],
                  [
                    "**vatClaimableSubccount**: VAT claimable subaccount &gt; The corresponding tax claimable subaccount.",
                    {
                      "$ul": [
                        "**description**: Click on the magnifier. &gt; The description.",
                        "**id**: Click on the magnifier. &gt; The identifier."
                      ]
                    }
                  ],
                  [
                    "**vatPayableAccount**: Mandatory field: VAT payable account* &gt; The liability account that accumulates the VAT amounts to be paid to a tax agency for the VAT reporting period.",
                    {
                      "$ul": [
                        "**description**: Name of item/description",
                        "**externalCode1**: Account class &gt; The identifier of the account class.",
                        "**externalCode2**: Account class &gt; The name of the account class.",
                        "**number**: Number of item",
                        "**type**: Account &gt; The account number."
                      ]
                    }
                  ],
                  [
                    "**vatPayableSubaccount**: Mandatory field: VAT payable subaccount* &gt; The corresponding VAT payable subaccount.",
                    {
                      "$ul": [
                        "**description**: Click on the magnifier. &gt; The description.",
                        "**id**: Click on the magnifier. &gt; The identifier."
                      ]
                    }
                  ]
                ]
              }
            ],
            "**includeinVatExemptTotal**: VAT settings tab &gt; Include in VAT exempt total &gt; A check box that indicates (if selected) that this value-added VAT has a zero rate and is used to calculate a document subtotal that is actually exempt from VAT.",
            "**includeinVatTotal**: VAT settings tab &gt; Include in VAT taxable total &gt; A check box that indicates (if selected) that the VAT taxable amount should appear in the VAT taxable total field in the documents (such as invoices).",
            "**lastModifiedDateTime**: System generated information.",
            "**notValidAfter**: VAT settings tab &gt; Not valid after &gt; The date after which the VAT is not effective.",
            "**pendingVat**: VAT settings tab &gt; Pendig VAT &gt; A check box that indicates (if selected) that the VAT that should be calculated in documents, but should not be recorded to the VAT report until the VAT invoice is received.",
            "**reverseVat**: VAT settings tab &gt; Reverse VAT &gt; A check box that indicates (if selected) that this is a reverse VAT.",
            "**schedules**: Both tabs &gt; VAT schedule &gt;",
            "**statisticalVat**: VAT settings tab &gt; Statistical VAT &gt; A check box that indicates (if selected) that the VAT on documents will be calculated only for statistical purposes or will be reported only but not actually paid.",
            "**type**: VAT settings tab &gt; VAT type &gt; The type of VAT.",
            [
              "**vatAgencyId**: VAT settings tab &gt; Tax agency &gt; The name of the tax agency to receive the VAT.",
              {
                "$ul": [
                  "**name**: Click the magnifier. &gt; The name.",
                  "**number**: Click the magnifier. &gt; The identifier."
                ]
              }
            ],
            "**vatCategoryId**: VatCategoryId is deprecated, please use Vat Id instead",
            "**vatId**: Mandatory field: VAT settings tab &gt; VAT ID* &gt; The unique ID of the VAT.",
            "**vismaXmlVatType**: VAT settings tab &gt; Visma XML VAT type &gt; The VAT type to be used in Visma XML files.",
            "**zones**: Both tabs &gt; Zones tab &gt;"
          ]
        },
        {
          "$each": "$.body.*",
          "$as": "item",
          "$block": [
            {
              "$h2": "Item"
            },
            {
              "$lang": "json",
              "$code": {
                "$encode": "json",
                "$indent": true,
                "$content": {
                  "$": "$.item"
                }
              }
            }
          ]
        }
      ]
    },
    "202": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**id**",
            "**stateLocation**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
