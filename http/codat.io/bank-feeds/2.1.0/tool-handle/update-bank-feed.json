{
  "name": "update-bank-feed",
  "description": "Update a single BankFeed BankAccount for a single data source connected to a single company.",
  "parameters": {
    "type": "object",
    "properties": {
      "companyId": {
        "description": "Unique identifier for your SMB in Codat.",
        "example": "8a210b68-6988-11ed-a1eb-0242ac120002",
        "format": "uuid",
        "type": "string"
      },
      "connectionId": {
        "description": "Unique identifier for a company's data connection.",
        "example": "2e9d2c44-f675-40ba-8049-353bfcb5e171",
        "format": "uuid",
        "type": "string"
      },
      "accountId": {
        "example": "8a210b68-6988-11ed-a1eb-0242ac120002",
        "format": "uuid",
        "type": "string",
        "description": "Unique identifier for an account"
      },
      "body": {
        "$ref": "#/$defs/BankFeedAccount"
      }
    },
    "required": [
      "companyId",
      "connectionId",
      "accountId"
    ],
    "$defs": {
      "BankFeedAccount": {
        "additionalProperties": false,
        "description": "The target bank account in a supported accounting package for ingestion into a bank feed.",
        "examples": [
          {
            "accountName": "account-081",
            "accountNumber": "12345670",
            "accountType": "Credit",
            "balance": 99.99,
            "currency": "GBP",
            "id": "acc-002",
            "modifiedDate": "2023-01-09T14:14:14.1057478Z",
            "sortCode": "123456",
            "status": "pending"
          },
          {
            "accountName": "account-095",
            "accountNumber": "12345671",
            "accountType": "Credit",
            "balance": 0,
            "currency": "USD",
            "id": "acc-003",
            "modifiedDate": "2023-01-09T14:14:14.1057478Z",
            "sortCode": "123456",
            "status": "pending"
          }
        ],
        "properties": {
          "accountName": {
            "description": "The bank account name",
            "nullable": true,
            "type": "string"
          },
          "accountNumber": {
            "description": "The account number",
            "nullable": true,
            "type": "string"
          },
          "accountType": {
            "description": "The type of bank account e.g. Credit",
            "nullable": true,
            "type": "string"
          },
          "balance": {
            "description": "The latest balance for the bank account",
            "nullable": true,
            "type": "number"
          },
          "currency": {
            "description": "The currency e.g. USD",
            "nullable": true,
            "type": "string"
          },
          "feedStartDate": {
            "$ref": "#/$defs/DateTime"
          },
          "id": {
            "description": "Unique ID for the bank feed account",
            "type": "string"
          },
          "modifiedDate": {
            "$ref": "#/$defs/DateTime"
          },
          "sortCode": {
            "description": "The sort code",
            "nullable": true,
            "type": "string"
          },
          "status": {
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "id"
        ],
        "title": "Bank Feed Account",
        "type": "object"
      },
      "DateTime": {
        "description": "In Codat's data model, dates and times are represented using the <a class=\"external\" href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:\n\n```\n2020-10-08T22:40:50Z\n2021-01-01T00:00:00\n```\n\n\n\nWhen syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:\n\n- Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`\n- Unqualified local time: `2021-11-15T01:00:00`\n- UTC time offsets: `2021-11-15T01:00:00-05:00`\n\n> Time zones\n> \n> Not all dates from Codat will contain information about time zones.  \n> Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced.",
        "example": "2022-10-23T00:00:00Z",
        "title": "Date time",
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PATCH",
    "url": {
      "$uri": "https://api.codat.io/companies/{companyId}/connections/{connectionId}/connectionInfo/bankFeedAccounts/{accountId}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Bank Feed Account"
        },
        "The target bank account in a supported accounting package for ingestion into a bank feed.",
        "**Key properties:**",
        {
          "$ul": [
            "**accountName**: The bank account name",
            "**accountNumber**: The account number",
            "**accountType**: The type of bank account e.g. Credit",
            "**balance**: The latest balance for the bank account",
            "**currency**: The currency e.g. USD",
            "**feedStartDate**: In Codat's data model, dates and times are represented using the <a class=\"external\" href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:",
            "**id**: Unique ID for the bank feed account",
            "**modifiedDate**: In Codat's data model, dates and times are represented using the <a class=\"external\" href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:",
            "**sortCode**: The sort code",
            "**status**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
