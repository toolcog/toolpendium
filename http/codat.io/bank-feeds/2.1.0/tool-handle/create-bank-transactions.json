{
  "name": "create-bank-transactions",
  "description": "Posts bank transactions to the accounting package for a given company.\n\n> **Supported Integrations**\n> \n> Check out our [Knowledge UI](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=bankTransactions) for integrations that support POST methods.",
  "parameters": {
    "type": "object",
    "properties": {
      "companyId": {
        "description": "Unique identifier for your SMB in Codat.",
        "example": "8a210b68-6988-11ed-a1eb-0242ac120002",
        "format": "uuid",
        "type": "string"
      },
      "connectionId": {
        "description": "Unique identifier for a company's data connection.",
        "example": "2e9d2c44-f675-40ba-8049-353bfcb5e171",
        "format": "uuid",
        "type": "string"
      },
      "accountId": {
        "example": "8a210b68-6988-11ed-a1eb-0242ac120002",
        "format": "uuid",
        "type": "string",
        "description": "Unique identifier for an account"
      },
      "allowSyncOnPushComplete": {
        "default": true,
        "type": "boolean"
      },
      "timeoutInMinutes": {
        "format": "int32",
        "type": "integer"
      },
      "body": {
        "$ref": "#/$defs/BankTransactions"
      }
    },
    "required": [
      "companyId",
      "connectionId",
      "accountId"
    ],
    "$defs": {
      "BankTransactions": {
        "definitions": {
          "bankTransactionLine": {
            "allOf": [
              {
                "properties": {
                  "amount": {
                    "type": "number"
                  },
                  "balance": {
                    "type": "number"
                  },
                  "clearedOnDate": {
                    "$ref": "#/components/schemas/DateTime"
                  },
                  "counterparty": {
                    "nullable": true,
                    "type": "string"
                  },
                  "description": {
                    "nullable": true,
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  },
                  "reconciled": {
                    "type": "boolean"
                  },
                  "reference": {
                    "nullable": true,
                    "type": "string"
                  },
                  "transactionType": {
                    "$ref": "#/components/schemas/BankTransactions/definitions/bankTransactionType"
                  }
                },
                "type": "object"
              },
              {
                "allOf": [
                  {
                    "properties": {
                      "modifiedDate": {
                        "$ref": "#/components/schemas/DateTime",
                        "description": "The date on which this record was last modified in Codat."
                      }
                    },
                    "title": "ModifiedDate",
                    "type": "object",
                    "x-internal": true
                  },
                  {
                    "properties": {
                      "sourceModifiedDate": {
                        "$ref": "#/components/schemas/DateTime",
                        "description": "The date on which this record was last modified in the originating system"
                      }
                    },
                    "title": "Source Modified Date",
                    "type": "object",
                    "x-internal": true
                  }
                ],
                "x-internal": true
              }
            ],
            "required": [
              "amount",
              "balance",
              "date",
              "reconciled",
              "transactionType"
            ],
            "title": "Bank transaction line",
            "type": "object"
          },
          "bankTransactionType": {
            "description": "Type of transaction for the bank statement line",
            "enum": [
              "Unknown",
              "Credit",
              "Debit",
              "Int",
              "Div",
              "Fee",
              "SerChg",
              "Dep",
              "Atm",
              "Pos",
              "Xfer",
              "Check",
              "Payment",
              "Cash",
              "DirectDep",
              "DirectDebit",
              "RepeatPmt",
              "Other"
            ],
            "title": "Bank transaction type",
            "type": "string"
          }
        },
        "description": "> **Accessing Bank Accounts through Banking API**\n> \n> This datatype was originally used for accessing bank account data both in accounting integrations and open banking aggregators. \n>\n> To view bank account data through the Banking API, please refer to the new datatype [here](https://docs.codat.io/banking-api#/operations/list-all-banking-transactions)\n\n> View the coverage for bank transactions in the <a className=\"external\" href=\"https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=bankTransactions\" target=\"_blank\">Data coverage explorer</a>.\n\n## Overview\n\nTransactional banking data for a specific company and account.\n\nBank transactions include the:\n* Amount of the transaction.\n* Current account balance.\n* Transaction type, for example, credit, debit, or transfer.",
        "properties": {
          "accountId": {
            "nullable": true,
            "type": "string"
          },
          "transactions": {
            "items": {
              "$ref": "#/$defs/bankTransactionLine"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "title": "Bank account transactions",
        "type": "object"
      },
      "bankTransactionLine": {
        "allOf": [
          {
            "properties": {
              "amount": {
                "type": "number"
              },
              "balance": {
                "type": "number"
              },
              "clearedOnDate": {
                "$ref": "#/components/schemas/DateTime"
              },
              "counterparty": {
                "nullable": true,
                "type": "string"
              },
              "description": {
                "nullable": true,
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "reconciled": {
                "type": "boolean"
              },
              "reference": {
                "nullable": true,
                "type": "string"
              },
              "transactionType": {
                "$ref": "#/components/schemas/BankTransactions/definitions/bankTransactionType"
              }
            },
            "type": "object"
          },
          {
            "allOf": [
              {
                "properties": {
                  "modifiedDate": {
                    "$ref": "#/components/schemas/DateTime",
                    "description": "The date on which this record was last modified in Codat."
                  }
                },
                "title": "ModifiedDate",
                "type": "object",
                "x-internal": true
              },
              {
                "properties": {
                  "sourceModifiedDate": {
                    "$ref": "#/components/schemas/DateTime",
                    "description": "The date on which this record was last modified in the originating system"
                  }
                },
                "title": "Source Modified Date",
                "type": "object",
                "x-internal": true
              }
            ],
            "x-internal": true
          }
        ],
        "required": [
          "amount",
          "balance",
          "date",
          "reconciled",
          "transactionType"
        ],
        "title": "Bank transaction line",
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://api.codat.io/companies/{companyId}/connections/{connectionId}/push/bankAccounts/{accountId}/bankTransactions{?allowSyncOnPushComplete,timeoutInMinutes}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**data**: > **Accessing Bank Accounts through Banking API**",
              {
                "$ul": [
                  "**accountId**",
                  "**transactions**"
                ]
              }
            ],
            "**changes**",
            "**companyId**: Unique identifier for your SMB in Codat.",
            "**completedOnUtc**: In Codat's data model, dates and times are represented using the <a class=\"external\" href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:",
            "**dataConnectionKey**: Unique identifier for your SMB in Codat.",
            "**dataType**: Available Data types",
            "**errorMessage**",
            "**pushOperationKey**: A unique identifier generated by Codat to represent this single push operation. This identifier can be used to track the status of the push, and should be persisted.",
            "**requestedOnUtc**: In Codat's data model, dates and times are represented using the <a class=\"external\" href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:",
            "**status**: The status of the push operation.",
            "**statusCode**",
            "**timeoutInMinutes**",
            "**timeoutInSeconds**",
            [
              "**validation**: A human-readable object describing validation decisions Codat has made when pushing data into the platform. If a push has failed because of validation errors, they will be detailed here.",
              {
                "$ul": [
                  "**errors**",
                  "**warnings**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
