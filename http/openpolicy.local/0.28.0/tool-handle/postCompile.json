{
  "name": "postCompile",
  "description": "This API endpoint allows you to partially evaluate Rego queries and obtain a simplified version of the policy. The example below assumes that OPA has been given the following policy (use `PUT /v1/policies/{path}`):\n\n```yaml\npackage example\nallow {\n  input.subject.clearance_level >= data.reports[_].clearance_level\n}\n```\nCompile API **request body** so that it contain the following fields:\n\n| Field | Type | Required | Description |\n| --- | --- | --- | --- |\n| `query` | `string` | Yes | The query to partially evaluate and compile. |\n| `input` | `any` | No | The input document to use during partial evaluation (default: undefined). |\n| `unknowns` | `array[string]` | No | The terms to treat as unknown during partial evaluation (default: `[\"input\"]`]). |\n\nFor example:\n\n```json\n{\n  \"query\": \"data.example.allow == true\",\n  \"input\": {\n    \"subject\": {\n      \"clearance_level\": 4\n    }\n  },\n  \"unknowns\": [\n    \"data.reports\"\n    ]\n}\n```\n### Partial evaluation\nIn some cases, the result of partial valuation is a conclusive, unconditional answer. See [the guidance](https://www.openpolicyagent.org/docs/latest/rest-api/#unconditional-results-from-partial-evaluation) for details.",
  "parameters": {
    "type": "object",
    "properties": {
      "pretty": {
        "type": "boolean",
        "description": "If true, response will be in a human-readable format."
      },
      "explain": {
        "type": "string",
        "description": "If set to *full*, response will include query explanations in addition to the result."
      },
      "metrics": {
        "type": "boolean",
        "description": "If true, compiler performance metrics will be returned in the response."
      },
      "instrument": {
        "type": "boolean",
        "description": "If true, response will return additional performance metrics in addition to the result and the standard metrics.\n\n**Caution:** This can add significant overhead to query evaluation. The recommendation is to only use this parameter if you are debugging a performance problem."
      },
      "body": {
        "$ref": "#/components/schemas/partialQuerySchema",
        "description": "The query (in JSON format)"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://openpolicy.local/v1/compile{?pretty,explain,metrics,instrument}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**result**",
            [
              "**metrics**",
              {
                "$ul": [
                  "**counter_server_query_cache_hit**: *Description is forthcoming*",
                  "**timer_query_compile_stage_build_comprehension_index_ns**: (Only returned if `instrument` is true.) *Description is forthcoming*",
                  "**timer_query_compile_stage_check_safety_ns**: (Only returned if `instrument` is true.) *Description is forthcoming*",
                  "**timer_query_compile_stage_check_types_ns**: (Only returned if `instrument` is true.) *Description is forthcoming*",
                  "**timer_query_compile_stage_check_undefined_funcs_ns**: (Only returned if `instrument` is true.) *Description is forthcoming*",
                  "**timer_query_compile_stage_check_unsafe_builtins_ns**: (Only returned if `instrument` is true.) *Description is forthcoming*",
                  "**timer_query_compile_stage_resolve_refs_ns**: (Only returned if `instrument` is true.) *Description is forthcoming*",
                  "**timer_query_compile_stage_rewrite_comprehension_terms_ns**: (Only returned if `instrument` is true.) *Description is forthcoming*",
                  "**timer_query_compile_stage_rewrite_dynamic_terms_ns**: (Only returned if `instrument` is true.) *Description is forthcoming*",
                  "**timer_query_compile_stage_rewrite_expr_terms_ns**: (Only returned if `instrument` is true.) *Description is forthcoming*",
                  "**timer_query_compile_stage_rewrite_local_vars_ns**: (Only returned if `instrument` is true.) *Description is forthcoming*",
                  "**timer_query_compile_stage_rewrite_to_capture_value_ns**: (Only returned if `instrument` is true.) *Description is forthcoming*",
                  "**timer_query_compile_stage_rewrite_with_values_ns**: (Only returned if `instrument` is true.) *Description is forthcoming*",
                  "**timer_rego_input_parse_ns**: Time taken (in nanonseconds) to parse the input",
                  "**timer_rego_module_compile_ns**: Time taken (in nanonseconds) to compile the loaded policy modules",
                  "**timer_rego_module_parse_ns**: Time taken (in nanoseconds) to parse the input policy module",
                  "**timer_rego_query_compile_ns**: Time taken (in nanoseconds) to compile the query",
                  "**timer_rego_query_eval_ns**: Time taken (in nanonseconds) to evaluate the query",
                  "**timer_rego_query_parse_ns**: Time taken (in nanoseconds) to parse the query",
                  "**timer_server_handler_ns**: Time taken (in nanoseconds) to handle the API request",
                  "**timer_server_read_bytes_ns**: *Description is forthcoming*"
                ]
              }
            ],
            "**explanation**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**: The error code name",
            "**errors**: Errors that may have been generated during the parse, compile, or installation of a policy module",
            "**message**: The description of the error"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "500": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**: The error code name",
            "**errors**: Errors that may have been generated during the parse, compile, or installation of a policy module",
            "**message**: The description of the error"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
