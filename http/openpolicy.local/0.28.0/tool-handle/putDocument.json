{
  "name": "putDocument",
  "description": "If the path does not refer to an existing document (for example *us-west/servers*), the server will attempt to create all the necessary containing documents.\n\nThis behavior is similar to the Unix command [mkdir -p](https://en.wikipedia.org/wiki/Mkdir#Options).",
  "parameters": {
    "type": "object",
    "properties": {
      "If-None-Match": {
        "type": "string",
        "description": "The server will respect the If-None-Match header if it is set to * (in other words, it will not overwrite an existing document located at the specified `path`)."
      },
      "path": {
        "type": "string",
        "description": "A backslash (/) delimited path to access values inside object and array documents. If the path points to an array, the server will attempt to convert the array index to an integer. If the path element cannot be converted to an integer, the server will respond with 404."
      },
      "body": {
        "$ref": "#/components/schemas/dataSchema",
        "description": "The JSON document to write to the specified path."
      }
    },
    "required": [
      "path",
      "body"
    ]
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "http://openpolicy.local/v1/data/{path}"
    },
    "headers": {
      "If-None-Match": {
        "$": "If-None-Match"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**: The error code name",
            "**errors**: Errors that may have been generated during the parse, compile, or installation of a policy module",
            "**message**: The description of the error"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**: The error code name",
            "**message**: The description of the error (including the name of any undefined policy module)"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "500": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**: The error code name",
            "**errors**: Errors that may have been generated during the parse, compile, or installation of a policy module",
            "**message**: The description of the error"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
