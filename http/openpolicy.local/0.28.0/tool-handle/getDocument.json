{
  "name": "getDocument",
  "description": "This API endpoint returns the document specified by `path`.\n\nThe server will return a *bad request* (400) response if either:\n- The query requires an input document and you do not provide it\n- You provide the input document but the query has already defined it.",
  "parameters": {
    "type": "object",
    "properties": {
      "input": {
        "additionalProperties": {},
        "example": {
          "input": {
            "example": {
              "flag": true
            }
          }
        },
        "type": "object",
        "description": "Provide the text for an [input document](https://www.openpolicyagent.org/docs/latest/kubernetes-primer/#input-document) in JSON format"
      },
      "pretty": {
        "type": "boolean",
        "description": "If true, response will be in a human-readable format."
      },
      "provenance": {
        "type": "boolean",
        "description": "If true, response will include build and version information in addition to the result."
      },
      "explain": {
        "type": "string",
        "description": "If set to *full*, response will include query explanations in addition to the result."
      },
      "metrics": {
        "type": "boolean",
        "description": "If true, compiler performance metrics will be returned in the response."
      },
      "instrument": {
        "type": "boolean",
        "description": "If true, response will return additional performance metrics in addition to the result and the standard metrics.\n\n**Caution:** This can add significant overhead to query evaluation. The recommendation is to only use this parameter if you are debugging a performance problem."
      },
      "path": {
        "type": "string",
        "description": "A backslash (/) delimited path to access values inside object and array documents. If the path points to an array, the server will attempt to convert the array index to an integer. If the path element cannot be converted to an integer, the server will respond with 404."
      }
    },
    "required": [
      "path"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "http://openpolicy.local/v1/data/{path}{?input,pretty,provenance,explain,metrics,instrument}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**result**",
            [
              "**provenance**",
              {
                "$ul": [
                  "**build_commit**: The Git commit id of this OPA build.",
                  "**build_hostname**: The hostname where this instance was built.",
                  "**build_timestamp**: When this OPA instance was built (in [ISO8601 format](https://www.w3.org/TR/NOTE-datetime))",
                  "**bundles**: A set of key-value pairs describing each bundle activated on the server.",
                  "**version**: The version of this OPA instance"
                ]
              }
            ],
            [
              "**metrics**",
              {
                "$ul": [
                  "**counter_server_query_cache_hit**: *Description is forthcoming*",
                  "**timer_query_compile_stage_build_comprehension_index_ns**: (Only returned if `instrument` is true.) *Description is forthcoming*",
                  "**timer_query_compile_stage_check_safety_ns**: (Only returned if `instrument` is true.) *Description is forthcoming*",
                  "**timer_query_compile_stage_check_types_ns**: (Only returned if `instrument` is true.) *Description is forthcoming*",
                  "**timer_query_compile_stage_check_undefined_funcs_ns**: (Only returned if `instrument` is true.) *Description is forthcoming*",
                  "**timer_query_compile_stage_check_unsafe_builtins_ns**: (Only returned if `instrument` is true.) *Description is forthcoming*",
                  "**timer_query_compile_stage_resolve_refs_ns**: (Only returned if `instrument` is true.) *Description is forthcoming*",
                  "**timer_query_compile_stage_rewrite_comprehension_terms_ns**: (Only returned if `instrument` is true.) *Description is forthcoming*",
                  "**timer_query_compile_stage_rewrite_dynamic_terms_ns**: (Only returned if `instrument` is true.) *Description is forthcoming*",
                  "**timer_query_compile_stage_rewrite_expr_terms_ns**: (Only returned if `instrument` is true.) *Description is forthcoming*",
                  "**timer_query_compile_stage_rewrite_local_vars_ns**: (Only returned if `instrument` is true.) *Description is forthcoming*",
                  "**timer_query_compile_stage_rewrite_to_capture_value_ns**: (Only returned if `instrument` is true.) *Description is forthcoming*",
                  "**timer_query_compile_stage_rewrite_with_values_ns**: (Only returned if `instrument` is true.) *Description is forthcoming*",
                  "**timer_rego_input_parse_ns**: Time taken (in nanonseconds) to parse the input",
                  "**timer_rego_module_compile_ns**: Time taken (in nanonseconds) to compile the loaded policy modules",
                  "**timer_rego_module_parse_ns**: Time taken (in nanoseconds) to parse the input policy module",
                  "**timer_rego_query_compile_ns**: Time taken (in nanoseconds) to compile the query",
                  "**timer_rego_query_eval_ns**: Time taken (in nanonseconds) to evaluate the query",
                  "**timer_rego_query_parse_ns**: Time taken (in nanoseconds) to parse the query",
                  "**timer_server_handler_ns**: Time taken (in nanoseconds) to handle the API request",
                  "**timer_server_read_bytes_ns**: *Description is forthcoming*"
                ]
              }
            ],
            "**explanation**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**: The error code name",
            "**errors**: Errors that may have been generated during the parse, compile, or installation of a policy module",
            "**message**: The description of the error"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "500": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**: The error code name",
            "**errors**: Errors that may have been generated during the parse, compile, or installation of a policy module",
            "**message**: The description of the error"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
