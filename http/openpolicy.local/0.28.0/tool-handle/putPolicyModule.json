{
  "name": "putPolicyModule",
  "description": "- If the policy module does not exist, it is created.\n- If the policy module already exists, it is replaced.\n\nIf the policy module isn't correctly defined, a *bad request* (400) response is returned.\n\n### Example policy module\n```yaml\npackage opa.examples\n\nimport data.servers\nimport data.networks\nimport data.ports\n\npublic_servers[server] {\n  some k, m\n  \tserver := servers[_]\n  \tserver.ports[_] == ports[k].id\n  \tports[k].networks[_] == networks[m].id\n  \tnetworks[m].public == true\n}\n```",
  "parameters": {
    "type": "object",
    "properties": {
      "pretty": {
        "type": "boolean",
        "description": "If true, response will be in a human-readable format."
      },
      "metrics": {
        "type": "boolean",
        "description": "If true, compiler performance metrics will be returned in the response."
      },
      "id": {
        "type": "string",
        "description": "The name of a policy module"
      }
    },
    "required": [
      "id"
    ]
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "http://openpolicy.local/v1/policies/{id}{?pretty,metrics}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**result**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**: The error code name",
            "**errors**: Errors that may have been generated during the parse, compile, or installation of a policy module",
            "**message**: The description of the error"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "500": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**: The error code name",
            "**errors**: Errors that may have been generated during the parse, compile, or installation of a policy module",
            "**message**: The description of the error"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
