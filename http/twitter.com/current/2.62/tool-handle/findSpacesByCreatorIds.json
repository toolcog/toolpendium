{
  "name": "findSpacesByCreatorIds",
  "description": "Returns a variety of information about the Spaces created by the provided User IDs",
  "parameters": {
    "type": "object",
    "properties": {
      "user_ids": {
        "items": {
          "$ref": "#/$defs/UserId"
        },
        "maxItems": 100,
        "minItems": 1,
        "type": "array",
        "description": "The IDs of Users to search through."
      },
      "space.fields": {
        "description": "A comma separated list of Space fields to display.",
        "example": [
          "created_at",
          "creator_id",
          "ended_at",
          "host_ids",
          "id",
          "invited_user_ids",
          "is_ticketed",
          "lang",
          "participant_count",
          "scheduled_start",
          "speaker_ids",
          "started_at",
          "state",
          "subscriber_count",
          "title",
          "topic_ids",
          "updated_at"
        ],
        "items": {
          "enum": [
            "created_at",
            "creator_id",
            "ended_at",
            "host_ids",
            "id",
            "invited_user_ids",
            "is_ticketed",
            "lang",
            "participant_count",
            "scheduled_start",
            "speaker_ids",
            "started_at",
            "state",
            "subscriber_count",
            "title",
            "topic_ids",
            "updated_at"
          ],
          "type": "string"
        },
        "minItems": 1,
        "type": "array",
        "uniqueItems": true
      },
      "expansions": {
        "description": "A comma separated list of fields to expand.",
        "example": [
          "creator_id",
          "host_ids",
          "invited_user_ids",
          "speaker_ids",
          "topic_ids"
        ],
        "items": {
          "enum": [
            "creator_id",
            "host_ids",
            "invited_user_ids",
            "speaker_ids",
            "topic_ids"
          ],
          "type": "string"
        },
        "minItems": 1,
        "type": "array",
        "uniqueItems": true
      },
      "user.fields": {
        "description": "A comma separated list of User fields to display.",
        "example": [
          "created_at",
          "description",
          "entities",
          "id",
          "location",
          "name",
          "pinned_tweet_id",
          "profile_image_url",
          "protected",
          "public_metrics",
          "url",
          "username",
          "verified",
          "verified_type",
          "withheld"
        ],
        "items": {
          "enum": [
            "created_at",
            "description",
            "entities",
            "id",
            "location",
            "name",
            "pinned_tweet_id",
            "profile_image_url",
            "protected",
            "public_metrics",
            "url",
            "username",
            "verified",
            "verified_type",
            "withheld"
          ],
          "type": "string"
        },
        "minItems": 1,
        "type": "array",
        "uniqueItems": true
      },
      "topic.fields": {
        "description": "A comma separated list of Topic fields to display.",
        "example": [
          "description",
          "id",
          "name"
        ],
        "items": {
          "enum": [
            "description",
            "id",
            "name"
          ],
          "type": "string"
        },
        "minItems": 1,
        "type": "array",
        "uniqueItems": true
      }
    },
    "required": [
      "user_ids"
    ],
    "$defs": {
      "UserId": {
        "description": "Unique identifier of this User. This is returned as a string in order to avoid complications with languages and tools that cannot handle large integers.",
        "example": "2244994945",
        "pattern": "^[0-9]{1,19}$",
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://api.twitter.com/2/spaces/by/creator_ids{?user_ids,space.fields,expansions,user.fields,topic.fields}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**data**",
            "**errors**",
            [
              "**includes**",
              {
                "$ul": [
                  "**media**",
                  "**places**",
                  "**polls**",
                  "**topics**",
                  "**tweets**",
                  "**users**"
                ]
              }
            ],
            [
              "**meta**",
              {
                "$ul": [
                  "**result_count**: The number of results returned in this response."
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "default": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**",
            "**message**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
