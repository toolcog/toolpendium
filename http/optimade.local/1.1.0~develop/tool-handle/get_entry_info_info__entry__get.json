{
  "name": "get_entry_info_info__entry__get",
  "description": "Get Entry Info",
  "parameters": {
    "type": "object",
    "properties": {
      "entry": {
        "title": "Entry",
        "type": "string"
      }
    },
    "required": [
      "entry"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "http://optimade.local/info/{entry}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "EntryInfoResponse"
        },
        "errors are not allowed",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**data**",
              {
                "$ul": [
                  "**description**: Description of the entry.",
                  "**formats**: List of output formats available for this type of entry.",
                  "**output_fields_by_format**: Dictionary of available output fields for this entry type, where the keys are the values of the `formats` list and the values are the keys of the `properties` dictionary.",
                  "**properties**: A dictionary describing queryable properties for this entry type, where each key is a property name."
                ]
              }
            ],
            "**errors**: A list of unique errors",
            "**included**: A list of unique included resources",
            [
              "**jsonapi**: An object describing the server's implementation",
              {
                "$ul": [
                  "**meta**: Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "**version**: Version of the json API used (default: 1.0)"
                ]
              }
            ],
            [
              "**links**: A set of Links objects, possibly including pagination",
              {
                "$ul": [
                  "**first**: The first page of data",
                  "**last**: The last page of data",
                  "**next**: The next page of data",
                  "**prev**: The previous page of data",
                  "**related**: A related resource link",
                  "**self**: A link to itself"
                ]
              }
            ],
            [
              "**meta**: A [JSON API meta member](https://jsonapi.org/format/1.0#document-meta)",
              {
                "$ul": [
                  "**api_version**: Presently used full version of the OPTIMADE API.",
                  "**data_available**: An integer containing the total number of data resource objects available in the database for the endpoint.",
                  "**data_returned**: An integer containing the total number of data resource objects returned for the current `filter` query, independent of pagination.",
                  [
                    "**implementation**: Information on the server implementation",
                    {
                      "$ul": [
                        "**homepage**: A [JSON API links object](http://jsonapi.org/format/1.0/#document-links) pointing to the homepage of the implementation.",
                        "**issue_tracker**: A [JSON API links object](http://jsonapi.org/format/1.0/#document-links) pointing to the implementation's issue tracker.",
                        [
                          "**maintainer**: Details about the maintainer of the implementation",
                          {
                            "$ul": [
                              "**email**: the maintainer's email address"
                            ]
                          }
                        ],
                        "**name**: name of the implementation",
                        "**source_url**: A [JSON API links object](http://jsonapi.org/format/1.0/#document-links) pointing to the implementation source, either downloadable archive or version control system.",
                        "**version**: version string of the current implementation"
                      ]
                    }
                  ],
                  "**last_id**: a string containing the last ID returned",
                  "**more_data_available**: `false` if the response contains all data for the request (e.g., a request issued to a single entry endpoint, or a `filter` query at the last page of a paginated response) and `true` if the response is incomplete in the sense that multiple objects match the request, and not all of them have been included in the response (e.g., a query with multiple pages that is not at the last page).",
                  [
                    "**provider**: Information on the database provider of the implementation.",
                    {
                      "$ul": [
                        "**description**: a longer description of the database provider",
                        "**homepage**: a [JSON API links object](http://jsonapi.org/format/1.0#document-links) pointing to homepage of the database provider, either directly as a string, or as a link object.",
                        "**name**: a short name for the database provider",
                        "**prefix**: database-provider-specific prefix as found in section Database-Provider-Specific Namespace Prefixes."
                      ]
                    }
                  ],
                  [
                    "**query**: Information on the query that was requested.",
                    {
                      "$ul": [
                        "**representation**: A string with the part of the URL following the versioned or unversioned base URL that serves the API."
                      ]
                    }
                  ],
                  "**response_message**: response string from the server",
                  "**schema**: A [JSON API links object](http://jsonapi.org/format/1.0/#document-links) that points to a schema for the response.",
                  "**time_stamp**: A timestamp containing the date and time at which the query was executed.",
                  "**warnings**: A list of warning resource objects representing non-critical errors or warnings."
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "ErrorResponse"
        },
        "errors MUST be present and data MUST be skipped",
        "**Key properties:**",
        {
          "$ul": [
            "**data**: Outputted Data",
            "**errors**: A list of OPTIMADE-specific JSON API error objects, where the field detail MUST be present.",
            "**included**: A list of unique included resources",
            [
              "**jsonapi**: An object describing the server's implementation",
              {
                "$ul": [
                  "**meta**: Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "**version**: Version of the json API used (default: 1.0)"
                ]
              }
            ],
            [
              "**links**: A set of Links objects, possibly including pagination",
              {
                "$ul": [
                  "**first**: The first page of data",
                  "**last**: The last page of data",
                  "**next**: The next page of data",
                  "**prev**: The previous page of data",
                  "**related**: A related resource link",
                  "**self**: A link to itself"
                ]
              }
            ],
            [
              "**meta**: A [JSON API meta member](https://jsonapi.org/format/1.0#document-meta)",
              {
                "$ul": [
                  "**api_version**: Presently used full version of the OPTIMADE API.",
                  "**data_available**: An integer containing the total number of data resource objects available in the database for the endpoint.",
                  "**data_returned**: An integer containing the total number of data resource objects returned for the current `filter` query, independent of pagination.",
                  [
                    "**implementation**: Information on the server implementation",
                    {
                      "$ul": [
                        "**homepage**: A [JSON API links object](http://jsonapi.org/format/1.0/#document-links) pointing to the homepage of the implementation.",
                        "**issue_tracker**: A [JSON API links object](http://jsonapi.org/format/1.0/#document-links) pointing to the implementation's issue tracker.",
                        [
                          "**maintainer**: Details about the maintainer of the implementation",
                          {
                            "$ul": [
                              "**email**: the maintainer's email address"
                            ]
                          }
                        ],
                        "**name**: name of the implementation",
                        "**source_url**: A [JSON API links object](http://jsonapi.org/format/1.0/#document-links) pointing to the implementation source, either downloadable archive or version control system.",
                        "**version**: version string of the current implementation"
                      ]
                    }
                  ],
                  "**last_id**: a string containing the last ID returned",
                  "**more_data_available**: `false` if the response contains all data for the request (e.g., a request issued to a single entry endpoint, or a `filter` query at the last page of a paginated response) and `true` if the response is incomplete in the sense that multiple objects match the request, and not all of them have been included in the response (e.g., a query with multiple pages that is not at the last page).",
                  [
                    "**provider**: Information on the database provider of the implementation.",
                    {
                      "$ul": [
                        "**description**: a longer description of the database provider",
                        "**homepage**: a [JSON API links object](http://jsonapi.org/format/1.0#document-links) pointing to homepage of the database provider, either directly as a string, or as a link object.",
                        "**name**: a short name for the database provider",
                        "**prefix**: database-provider-specific prefix as found in section Database-Provider-Specific Namespace Prefixes."
                      ]
                    }
                  ],
                  [
                    "**query**: Information on the query that was requested.",
                    {
                      "$ul": [
                        "**representation**: A string with the part of the URL following the versioned or unversioned base URL that serves the API."
                      ]
                    }
                  ],
                  "**response_message**: response string from the server",
                  "**schema**: A [JSON API links object](http://jsonapi.org/format/1.0/#document-links) that points to a schema for the response.",
                  "**time_stamp**: A timestamp containing the date and time at which the query was executed.",
                  "**warnings**: A list of warning resource objects representing non-critical errors or warnings."
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "ErrorResponse"
        },
        "errors MUST be present and data MUST be skipped",
        "**Key properties:**",
        {
          "$ul": [
            "**data**: Outputted Data",
            "**errors**: A list of OPTIMADE-specific JSON API error objects, where the field detail MUST be present.",
            "**included**: A list of unique included resources",
            [
              "**jsonapi**: An object describing the server's implementation",
              {
                "$ul": [
                  "**meta**: Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "**version**: Version of the json API used (default: 1.0)"
                ]
              }
            ],
            [
              "**links**: A set of Links objects, possibly including pagination",
              {
                "$ul": [
                  "**first**: The first page of data",
                  "**last**: The last page of data",
                  "**next**: The next page of data",
                  "**prev**: The previous page of data",
                  "**related**: A related resource link",
                  "**self**: A link to itself"
                ]
              }
            ],
            [
              "**meta**: A [JSON API meta member](https://jsonapi.org/format/1.0#document-meta)",
              {
                "$ul": [
                  "**api_version**: Presently used full version of the OPTIMADE API.",
                  "**data_available**: An integer containing the total number of data resource objects available in the database for the endpoint.",
                  "**data_returned**: An integer containing the total number of data resource objects returned for the current `filter` query, independent of pagination.",
                  [
                    "**implementation**: Information on the server implementation",
                    {
                      "$ul": [
                        "**homepage**: A [JSON API links object](http://jsonapi.org/format/1.0/#document-links) pointing to the homepage of the implementation.",
                        "**issue_tracker**: A [JSON API links object](http://jsonapi.org/format/1.0/#document-links) pointing to the implementation's issue tracker.",
                        [
                          "**maintainer**: Details about the maintainer of the implementation",
                          {
                            "$ul": [
                              "**email**: the maintainer's email address"
                            ]
                          }
                        ],
                        "**name**: name of the implementation",
                        "**source_url**: A [JSON API links object](http://jsonapi.org/format/1.0/#document-links) pointing to the implementation source, either downloadable archive or version control system.",
                        "**version**: version string of the current implementation"
                      ]
                    }
                  ],
                  "**last_id**: a string containing the last ID returned",
                  "**more_data_available**: `false` if the response contains all data for the request (e.g., a request issued to a single entry endpoint, or a `filter` query at the last page of a paginated response) and `true` if the response is incomplete in the sense that multiple objects match the request, and not all of them have been included in the response (e.g., a query with multiple pages that is not at the last page).",
                  [
                    "**provider**: Information on the database provider of the implementation.",
                    {
                      "$ul": [
                        "**description**: a longer description of the database provider",
                        "**homepage**: a [JSON API links object](http://jsonapi.org/format/1.0#document-links) pointing to homepage of the database provider, either directly as a string, or as a link object.",
                        "**name**: a short name for the database provider",
                        "**prefix**: database-provider-specific prefix as found in section Database-Provider-Specific Namespace Prefixes."
                      ]
                    }
                  ],
                  [
                    "**query**: Information on the query that was requested.",
                    {
                      "$ul": [
                        "**representation**: A string with the part of the URL following the versioned or unversioned base URL that serves the API."
                      ]
                    }
                  ],
                  "**response_message**: response string from the server",
                  "**schema**: A [JSON API links object](http://jsonapi.org/format/1.0/#document-links) that points to a schema for the response.",
                  "**time_stamp**: A timestamp containing the date and time at which the query was executed.",
                  "**warnings**: A list of warning resource objects representing non-critical errors or warnings."
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "ErrorResponse"
        },
        "errors MUST be present and data MUST be skipped",
        "**Key properties:**",
        {
          "$ul": [
            "**data**: Outputted Data",
            "**errors**: A list of OPTIMADE-specific JSON API error objects, where the field detail MUST be present.",
            "**included**: A list of unique included resources",
            [
              "**jsonapi**: An object describing the server's implementation",
              {
                "$ul": [
                  "**meta**: Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "**version**: Version of the json API used (default: 1.0)"
                ]
              }
            ],
            [
              "**links**: A set of Links objects, possibly including pagination",
              {
                "$ul": [
                  "**first**: The first page of data",
                  "**last**: The last page of data",
                  "**next**: The next page of data",
                  "**prev**: The previous page of data",
                  "**related**: A related resource link",
                  "**self**: A link to itself"
                ]
              }
            ],
            [
              "**meta**: A [JSON API meta member](https://jsonapi.org/format/1.0#document-meta)",
              {
                "$ul": [
                  "**api_version**: Presently used full version of the OPTIMADE API.",
                  "**data_available**: An integer containing the total number of data resource objects available in the database for the endpoint.",
                  "**data_returned**: An integer containing the total number of data resource objects returned for the current `filter` query, independent of pagination.",
                  [
                    "**implementation**: Information on the server implementation",
                    {
                      "$ul": [
                        "**homepage**: A [JSON API links object](http://jsonapi.org/format/1.0/#document-links) pointing to the homepage of the implementation.",
                        "**issue_tracker**: A [JSON API links object](http://jsonapi.org/format/1.0/#document-links) pointing to the implementation's issue tracker.",
                        [
                          "**maintainer**: Details about the maintainer of the implementation",
                          {
                            "$ul": [
                              "**email**: the maintainer's email address"
                            ]
                          }
                        ],
                        "**name**: name of the implementation",
                        "**source_url**: A [JSON API links object](http://jsonapi.org/format/1.0/#document-links) pointing to the implementation source, either downloadable archive or version control system.",
                        "**version**: version string of the current implementation"
                      ]
                    }
                  ],
                  "**last_id**: a string containing the last ID returned",
                  "**more_data_available**: `false` if the response contains all data for the request (e.g., a request issued to a single entry endpoint, or a `filter` query at the last page of a paginated response) and `true` if the response is incomplete in the sense that multiple objects match the request, and not all of them have been included in the response (e.g., a query with multiple pages that is not at the last page).",
                  [
                    "**provider**: Information on the database provider of the implementation.",
                    {
                      "$ul": [
                        "**description**: a longer description of the database provider",
                        "**homepage**: a [JSON API links object](http://jsonapi.org/format/1.0#document-links) pointing to homepage of the database provider, either directly as a string, or as a link object.",
                        "**name**: a short name for the database provider",
                        "**prefix**: database-provider-specific prefix as found in section Database-Provider-Specific Namespace Prefixes."
                      ]
                    }
                  ],
                  [
                    "**query**: Information on the query that was requested.",
                    {
                      "$ul": [
                        "**representation**: A string with the part of the URL following the versioned or unversioned base URL that serves the API."
                      ]
                    }
                  ],
                  "**response_message**: response string from the server",
                  "**schema**: A [JSON API links object](http://jsonapi.org/format/1.0/#document-links) that points to a schema for the response.",
                  "**time_stamp**: A timestamp containing the date and time at which the query was executed.",
                  "**warnings**: A list of warning resource objects representing non-critical errors or warnings."
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "422": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "ErrorResponse"
        },
        "errors MUST be present and data MUST be skipped",
        "**Key properties:**",
        {
          "$ul": [
            "**data**: Outputted Data",
            "**errors**: A list of OPTIMADE-specific JSON API error objects, where the field detail MUST be present.",
            "**included**: A list of unique included resources",
            [
              "**jsonapi**: An object describing the server's implementation",
              {
                "$ul": [
                  "**meta**: Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "**version**: Version of the json API used (default: 1.0)"
                ]
              }
            ],
            [
              "**links**: A set of Links objects, possibly including pagination",
              {
                "$ul": [
                  "**first**: The first page of data",
                  "**last**: The last page of data",
                  "**next**: The next page of data",
                  "**prev**: The previous page of data",
                  "**related**: A related resource link",
                  "**self**: A link to itself"
                ]
              }
            ],
            [
              "**meta**: A [JSON API meta member](https://jsonapi.org/format/1.0#document-meta)",
              {
                "$ul": [
                  "**api_version**: Presently used full version of the OPTIMADE API.",
                  "**data_available**: An integer containing the total number of data resource objects available in the database for the endpoint.",
                  "**data_returned**: An integer containing the total number of data resource objects returned for the current `filter` query, independent of pagination.",
                  [
                    "**implementation**: Information on the server implementation",
                    {
                      "$ul": [
                        "**homepage**: A [JSON API links object](http://jsonapi.org/format/1.0/#document-links) pointing to the homepage of the implementation.",
                        "**issue_tracker**: A [JSON API links object](http://jsonapi.org/format/1.0/#document-links) pointing to the implementation's issue tracker.",
                        [
                          "**maintainer**: Details about the maintainer of the implementation",
                          {
                            "$ul": [
                              "**email**: the maintainer's email address"
                            ]
                          }
                        ],
                        "**name**: name of the implementation",
                        "**source_url**: A [JSON API links object](http://jsonapi.org/format/1.0/#document-links) pointing to the implementation source, either downloadable archive or version control system.",
                        "**version**: version string of the current implementation"
                      ]
                    }
                  ],
                  "**last_id**: a string containing the last ID returned",
                  "**more_data_available**: `false` if the response contains all data for the request (e.g., a request issued to a single entry endpoint, or a `filter` query at the last page of a paginated response) and `true` if the response is incomplete in the sense that multiple objects match the request, and not all of them have been included in the response (e.g., a query with multiple pages that is not at the last page).",
                  [
                    "**provider**: Information on the database provider of the implementation.",
                    {
                      "$ul": [
                        "**description**: a longer description of the database provider",
                        "**homepage**: a [JSON API links object](http://jsonapi.org/format/1.0#document-links) pointing to homepage of the database provider, either directly as a string, or as a link object.",
                        "**name**: a short name for the database provider",
                        "**prefix**: database-provider-specific prefix as found in section Database-Provider-Specific Namespace Prefixes."
                      ]
                    }
                  ],
                  [
                    "**query**: Information on the query that was requested.",
                    {
                      "$ul": [
                        "**representation**: A string with the part of the URL following the versioned or unversioned base URL that serves the API."
                      ]
                    }
                  ],
                  "**response_message**: response string from the server",
                  "**schema**: A [JSON API links object](http://jsonapi.org/format/1.0/#document-links) that points to a schema for the response.",
                  "**time_stamp**: A timestamp containing the date and time at which the query was executed.",
                  "**warnings**: A list of warning resource objects representing non-critical errors or warnings."
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "500": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "ErrorResponse"
        },
        "errors MUST be present and data MUST be skipped",
        "**Key properties:**",
        {
          "$ul": [
            "**data**: Outputted Data",
            "**errors**: A list of OPTIMADE-specific JSON API error objects, where the field detail MUST be present.",
            "**included**: A list of unique included resources",
            [
              "**jsonapi**: An object describing the server's implementation",
              {
                "$ul": [
                  "**meta**: Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "**version**: Version of the json API used (default: 1.0)"
                ]
              }
            ],
            [
              "**links**: A set of Links objects, possibly including pagination",
              {
                "$ul": [
                  "**first**: The first page of data",
                  "**last**: The last page of data",
                  "**next**: The next page of data",
                  "**prev**: The previous page of data",
                  "**related**: A related resource link",
                  "**self**: A link to itself"
                ]
              }
            ],
            [
              "**meta**: A [JSON API meta member](https://jsonapi.org/format/1.0#document-meta)",
              {
                "$ul": [
                  "**api_version**: Presently used full version of the OPTIMADE API.",
                  "**data_available**: An integer containing the total number of data resource objects available in the database for the endpoint.",
                  "**data_returned**: An integer containing the total number of data resource objects returned for the current `filter` query, independent of pagination.",
                  [
                    "**implementation**: Information on the server implementation",
                    {
                      "$ul": [
                        "**homepage**: A [JSON API links object](http://jsonapi.org/format/1.0/#document-links) pointing to the homepage of the implementation.",
                        "**issue_tracker**: A [JSON API links object](http://jsonapi.org/format/1.0/#document-links) pointing to the implementation's issue tracker.",
                        [
                          "**maintainer**: Details about the maintainer of the implementation",
                          {
                            "$ul": [
                              "**email**: the maintainer's email address"
                            ]
                          }
                        ],
                        "**name**: name of the implementation",
                        "**source_url**: A [JSON API links object](http://jsonapi.org/format/1.0/#document-links) pointing to the implementation source, either downloadable archive or version control system.",
                        "**version**: version string of the current implementation"
                      ]
                    }
                  ],
                  "**last_id**: a string containing the last ID returned",
                  "**more_data_available**: `false` if the response contains all data for the request (e.g., a request issued to a single entry endpoint, or a `filter` query at the last page of a paginated response) and `true` if the response is incomplete in the sense that multiple objects match the request, and not all of them have been included in the response (e.g., a query with multiple pages that is not at the last page).",
                  [
                    "**provider**: Information on the database provider of the implementation.",
                    {
                      "$ul": [
                        "**description**: a longer description of the database provider",
                        "**homepage**: a [JSON API links object](http://jsonapi.org/format/1.0#document-links) pointing to homepage of the database provider, either directly as a string, or as a link object.",
                        "**name**: a short name for the database provider",
                        "**prefix**: database-provider-specific prefix as found in section Database-Provider-Specific Namespace Prefixes."
                      ]
                    }
                  ],
                  [
                    "**query**: Information on the query that was requested.",
                    {
                      "$ul": [
                        "**representation**: A string with the part of the URL following the versioned or unversioned base URL that serves the API."
                      ]
                    }
                  ],
                  "**response_message**: response string from the server",
                  "**schema**: A [JSON API links object](http://jsonapi.org/format/1.0/#document-links) that points to a schema for the response.",
                  "**time_stamp**: A timestamp containing the date and time at which the query was executed.",
                  "**warnings**: A list of warning resource objects representing non-critical errors or warnings."
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "501": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "ErrorResponse"
        },
        "errors MUST be present and data MUST be skipped",
        "**Key properties:**",
        {
          "$ul": [
            "**data**: Outputted Data",
            "**errors**: A list of OPTIMADE-specific JSON API error objects, where the field detail MUST be present.",
            "**included**: A list of unique included resources",
            [
              "**jsonapi**: An object describing the server's implementation",
              {
                "$ul": [
                  "**meta**: Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "**version**: Version of the json API used (default: 1.0)"
                ]
              }
            ],
            [
              "**links**: A set of Links objects, possibly including pagination",
              {
                "$ul": [
                  "**first**: The first page of data",
                  "**last**: The last page of data",
                  "**next**: The next page of data",
                  "**prev**: The previous page of data",
                  "**related**: A related resource link",
                  "**self**: A link to itself"
                ]
              }
            ],
            [
              "**meta**: A [JSON API meta member](https://jsonapi.org/format/1.0#document-meta)",
              {
                "$ul": [
                  "**api_version**: Presently used full version of the OPTIMADE API.",
                  "**data_available**: An integer containing the total number of data resource objects available in the database for the endpoint.",
                  "**data_returned**: An integer containing the total number of data resource objects returned for the current `filter` query, independent of pagination.",
                  [
                    "**implementation**: Information on the server implementation",
                    {
                      "$ul": [
                        "**homepage**: A [JSON API links object](http://jsonapi.org/format/1.0/#document-links) pointing to the homepage of the implementation.",
                        "**issue_tracker**: A [JSON API links object](http://jsonapi.org/format/1.0/#document-links) pointing to the implementation's issue tracker.",
                        [
                          "**maintainer**: Details about the maintainer of the implementation",
                          {
                            "$ul": [
                              "**email**: the maintainer's email address"
                            ]
                          }
                        ],
                        "**name**: name of the implementation",
                        "**source_url**: A [JSON API links object](http://jsonapi.org/format/1.0/#document-links) pointing to the implementation source, either downloadable archive or version control system.",
                        "**version**: version string of the current implementation"
                      ]
                    }
                  ],
                  "**last_id**: a string containing the last ID returned",
                  "**more_data_available**: `false` if the response contains all data for the request (e.g., a request issued to a single entry endpoint, or a `filter` query at the last page of a paginated response) and `true` if the response is incomplete in the sense that multiple objects match the request, and not all of them have been included in the response (e.g., a query with multiple pages that is not at the last page).",
                  [
                    "**provider**: Information on the database provider of the implementation.",
                    {
                      "$ul": [
                        "**description**: a longer description of the database provider",
                        "**homepage**: a [JSON API links object](http://jsonapi.org/format/1.0#document-links) pointing to homepage of the database provider, either directly as a string, or as a link object.",
                        "**name**: a short name for the database provider",
                        "**prefix**: database-provider-specific prefix as found in section Database-Provider-Specific Namespace Prefixes."
                      ]
                    }
                  ],
                  [
                    "**query**: Information on the query that was requested.",
                    {
                      "$ul": [
                        "**representation**: A string with the part of the URL following the versioned or unversioned base URL that serves the API."
                      ]
                    }
                  ],
                  "**response_message**: response string from the server",
                  "**schema**: A [JSON API links object](http://jsonapi.org/format/1.0/#document-links) that points to a schema for the response.",
                  "**time_stamp**: A timestamp containing the date and time at which the query was executed.",
                  "**warnings**: A list of warning resource objects representing non-critical errors or warnings."
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "553": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "ErrorResponse"
        },
        "errors MUST be present and data MUST be skipped",
        "**Key properties:**",
        {
          "$ul": [
            "**data**: Outputted Data",
            "**errors**: A list of OPTIMADE-specific JSON API error objects, where the field detail MUST be present.",
            "**included**: A list of unique included resources",
            [
              "**jsonapi**: An object describing the server's implementation",
              {
                "$ul": [
                  "**meta**: Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "**version**: Version of the json API used (default: 1.0)"
                ]
              }
            ],
            [
              "**links**: A set of Links objects, possibly including pagination",
              {
                "$ul": [
                  "**first**: The first page of data",
                  "**last**: The last page of data",
                  "**next**: The next page of data",
                  "**prev**: The previous page of data",
                  "**related**: A related resource link",
                  "**self**: A link to itself"
                ]
              }
            ],
            [
              "**meta**: A [JSON API meta member](https://jsonapi.org/format/1.0#document-meta)",
              {
                "$ul": [
                  "**api_version**: Presently used full version of the OPTIMADE API.",
                  "**data_available**: An integer containing the total number of data resource objects available in the database for the endpoint.",
                  "**data_returned**: An integer containing the total number of data resource objects returned for the current `filter` query, independent of pagination.",
                  [
                    "**implementation**: Information on the server implementation",
                    {
                      "$ul": [
                        "**homepage**: A [JSON API links object](http://jsonapi.org/format/1.0/#document-links) pointing to the homepage of the implementation.",
                        "**issue_tracker**: A [JSON API links object](http://jsonapi.org/format/1.0/#document-links) pointing to the implementation's issue tracker.",
                        [
                          "**maintainer**: Details about the maintainer of the implementation",
                          {
                            "$ul": [
                              "**email**: the maintainer's email address"
                            ]
                          }
                        ],
                        "**name**: name of the implementation",
                        "**source_url**: A [JSON API links object](http://jsonapi.org/format/1.0/#document-links) pointing to the implementation source, either downloadable archive or version control system.",
                        "**version**: version string of the current implementation"
                      ]
                    }
                  ],
                  "**last_id**: a string containing the last ID returned",
                  "**more_data_available**: `false` if the response contains all data for the request (e.g., a request issued to a single entry endpoint, or a `filter` query at the last page of a paginated response) and `true` if the response is incomplete in the sense that multiple objects match the request, and not all of them have been included in the response (e.g., a query with multiple pages that is not at the last page).",
                  [
                    "**provider**: Information on the database provider of the implementation.",
                    {
                      "$ul": [
                        "**description**: a longer description of the database provider",
                        "**homepage**: a [JSON API links object](http://jsonapi.org/format/1.0#document-links) pointing to homepage of the database provider, either directly as a string, or as a link object.",
                        "**name**: a short name for the database provider",
                        "**prefix**: database-provider-specific prefix as found in section Database-Provider-Specific Namespace Prefixes."
                      ]
                    }
                  ],
                  [
                    "**query**: Information on the query that was requested.",
                    {
                      "$ul": [
                        "**representation**: A string with the part of the URL following the versioned or unversioned base URL that serves the API."
                      ]
                    }
                  ],
                  "**response_message**: response string from the server",
                  "**schema**: A [JSON API links object](http://jsonapi.org/format/1.0/#document-links) that points to a schema for the response.",
                  "**time_stamp**: A timestamp containing the date and time at which the query was executed.",
                  "**warnings**: A list of warning resource objects representing non-critical errors or warnings."
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
