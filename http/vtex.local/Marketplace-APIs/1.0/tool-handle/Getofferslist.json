{
  "name": "Getofferslist",
  "description": "Offers are seller's products and SKUs that were sent to the marketplace, and already have their price and inventory level configured. \n\n This endpoint retrieves the available offers in a marketplace. It differs from the Get Suggestions endpoints, since it retrieves products that were already matched by the marketplace, and are currently in its catalog. \n\nIt is possible to filter the search through the following parameters: \n\n- rows \n- sort \n\n- start \n\n- fq",
  "parameters": {
    "type": "object",
    "properties": {
      "sort": {
        "example": "availability,desc",
        "type": "string",
        "description": "Criteria used to sort the list of offers. For sorting values in ascending order, use `asc`, while for descending order, use `desc`. To fill in the field, insert the sorting criteria, followed by 'asc', or 'desc', separated by a comma. You can sort by the following criteria: \n\n- **price:** sorts offers by price. *Ascending* goes from lowest to highest price, while *Descending* goes from highest to lowest price. \n\n- **name:** sorts offers by *productName*, in alphabetical order. *Ascending* goes from *A* to *Z*, while *Descending* goes from *Z* to *A*. \n\n- **availability:** availability in the sales channel (sc). The default value is 1. \n\nEx. sort=availability,desc \n\nEx. sort=name,asc \n\nEx. price,desc"
      },
      "rows": {
        "default": 20,
        "type": "integer",
        "description": "Number of rows included in the response. Each row corresponds to a single offer. The default amount of rows in the response is 1, and the maximum amount is 50. To have more than one offer listed in the response, please add the `rows` parameter with a number greater than 1."
      },
      "start": {
        "default": 21,
        "type": "integer",
        "description": "Number corresponding to the row from which the offer list will begin, used for pagination. Filters the list of offers by retrieving the offers starting from the row defined. The default value is 0, if the param is not included in the call."
      },
      "fq": {
        "example": "skuId:172",
        "type": "string",
        "description": "This filter query can be used to filter offers by the criteria described below. It should be filled in by following the format: `fq={{criteriaName}}:{{criteriaValue}}`. \n\n- **productId:** integer of the product ID \n\n- **productName:** string of the product's name \n\n- **skuId:** integer of the SKU ID \n\n- **eanId:** string of the EAN ID \n\n- **refId:** string of the Ref ID \n\n- **categoryId:** integer of the category ID \n\n- **brandId:** integer of the brand ID \n\n- **sellerId:** string of the seller ID \n\n- **sc:** integer of the sales channel's ID (trade policy in VTEX) \n\nEx: skuId:172 \n\nEx: categoryId:13 \n\nEx. productName:Product example-123"
      },
      "accountName": {
        "default": "apiexamples",
        "type": "string",
        "description": "Name of the VTEX account. Used as part of the URL"
      },
      "Content-Type": {
        "default": "application/json",
        "type": "string",
        "description": "Describes the type of the content being sent."
      },
      "environment": {
        "default": "vtexcommercestable",
        "type": "string",
        "description": "Environment to use. Used as part of the URL."
      },
      "Accept": {
        "default": "application/json",
        "type": "string",
        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand."
      }
    },
    "required": [
      "accountName",
      "Content-Type",
      "environment",
      "Accept"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://vtex.local/offer-manager/pvt/offers{?sort,rows,start,fq,accountName,environment}"
    },
    "headers": {
      "Content-Type": {
        "$": "Content-Type"
      },
      "Accept": {
        "$": "Accept"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "getMatchedOffersResponse list"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**BrandId**: Offer's brand ID that the product belongs to, configured in the Catalog. It should be the marketplace's brand chosen for the offer to be matched with. (default: 2004291)",
            "**CategoryId**: Offer's Category ID that the product belongs to, configured in the Catalog. It should be the marketplace's category chosen for the offer to be matched with. (default: 1563)",
            "**LastModified**: Last date the offer was modified. (default: 2021-05-06T21:37:24.262529)",
            "**ProductId**: A string that identifies the seller's product. This is the ID that the marketplace will use for all references to this product. (default: 941947)",
            "**ProductName**: Name of the offer's product. (default: Name of the Product - 123)",
            "**Skus**: Array of SKUs in the offer."
          ]
        },
        {
          "$each": "$.body.*",
          "$as": "item",
          "$block": [
            {
              "$h2": "Item"
            },
            {
              "$lang": "json",
              "$code": {
                "$encode": "json",
                "$indent": true,
                "$content": {
                  "$": "$.item"
                }
              }
            }
          ]
        }
      ]
    }
  }
}
