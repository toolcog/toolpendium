{
  "name": "Updateentiredocument",
  "description": "Update an existing document corresponding to a given data entity. For example, you can update a customer profile or address.\r\n\r\n> You can use this request to update documents in any given data entity. Because of this, you are not restricted to using the fields exemplified below in your requests. But you should be aware of the fields allowed or required for each document you wish to update.\r\n\r\n## Example use cases\r\n\r\n### Client profile\r\n\r\nIn order to update an existing customer profile, choose the `CL` data entity and send a request similar to this:\r\n\r\nPUT\r\n```\r\nhttps://examplestore.vtexcommercestable.com.br/api/dataentities/Client/documents/123456789abc\r\n```\r\n\r\nRequest body\r\n```json\r\n{\r\n    \"email\": \"clark.kent@examplemail.com\",\r\n    \"firstName\": \"Clark\",\r\n    \"lastName\": \"Kent\",\r\n    \"phone\": \"+12025550195\",\r\n    \"documentType\": \"CPF\",\r\n    \"document\": \"12345678900\"\r\n    \"isCorporate\": false,\r\n    \"isNewsletterOptIn\": false,\r\n    \"localeDefault\": \"en-US\"\r\n }\r\n```\r\n\r\n### Client address\r\n\r\nTo update an address, the data entity is `AD` and the request would look like this:\r\n\r\nPUT\r\n```\r\nhttps://examplestore.vtexcommercestable.com.br/api/dataentities/Address/documents/123456789abc\r\n```\r\n\r\nRequest body\r\n```json\r\n{\r\n    \"addressName\": \"My House\",\r\n    \"addressType\": \"residential\",\r\n    \"city\": \"Metropolis\",\r\n    \"complement\": \"\",\r\n    \"country\": \"USA\",\r\n    \"postalCode\": \"11375\",\r\n    \"receiverName\": \"Clark Kent\",\r\n    \"reference\": null,\r\n    \"state\": \"MP\",\r\n    \"street\": \"Baker Street\",\r\n    \"neighborhood\": \"Upper east side\",\r\n    \"number\": \"21\",\r\n    \"userId\": \"7e03m794-a33a-11e9-84rt6-0adfa64s5a8e\"\r\n}\r\n```",
  "parameters": {
    "type": "object",
    "properties": {
      "dataEntityName": {
        "example": "Client",
        "type": "string",
        "description": "Name of the data entity. Defined by the api. Examples of native data entities you can use are `CL` for client profiles and `AD` for client addresses."
      },
      "_where": {
        "example": "firstName is not null.",
        "type": "string",
        "description": "Filter specification."
      },
      "_schema": {
        "example": "schema",
        "type": "string",
        "description": "Name of the schema the document to be created needs to be compliant with."
      },
      "Accept": {
        "example": "application/json",
        "type": "string",
        "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
      },
      "id": {
        "example": "Client-b818cbda-e489-11e6-94f4-0ac138d2d42e",
        "type": "string",
        "description": "ID of the Document."
      },
      "body": {
        "$ref": "#/$defs/DocumentRequest"
      }
    },
    "required": [
      "dataEntityName",
      "Accept",
      "id",
      "body"
    ],
    "$defs": {
      "DocumentRequest": {
        "additionalProperties": {
          "description": "JSON document fields.",
          "type": "string"
        },
        "description": "This can be any pure JSON document. Add new _Key-Value_ pairs to test.",
        "title": "DocumentRequest",
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "https://vtex.local/api/dataentities/{dataEntityName}/documents/{id}{?_where,_schema}"
    },
    "headers": {
      "Accept": {
        "$": "Accept"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Href**: Document reference URL.",
            "**Id**: ID of the document that was created or updated."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
