{
  "name": "CreateNewCustomerAddress",
  "description": "Creates new customer address. \r\n\r\n> You can use this request to create customer addresses according to any `AD` schema. Because of this, you are not restricted to using the fields exemplified below in your requests. But you should be aware of the fields allowed or required for the schemas you are using. Learn more about how to use [Master Data v2 schemas](https://developers.vtex.com/vtex-rest-api/docs/master-data-schema-lifecycle).",
  "parameters": {
    "type": "object",
    "properties": {
      "Content-Type": {
        "example": "application/json",
        "type": "string",
        "description": "Type of the content being sent."
      },
      "Accept": {
        "example": "application/json",
        "type": "string",
        "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
      },
      "_schema": {
        "example": "schema",
        "type": "string",
        "description": "Name of the schema the document to be created needs to be compliant with."
      },
      "body": {
        "$ref": "#/$defs/createUpdateAddressRequests"
      }
    },
    "required": [
      "Content-Type",
      "Accept",
      "body"
    ],
    "$defs": {
      "createUpdateAddressRequests": {
        "properties": {
          "addressName": {
            "description": "Address name.",
            "example": "My house",
            "nullable": true,
            "type": "string"
          },
          "addressType": {
            "description": "Type of address. For example, `Residential` or `Pickup`, among others.",
            "example": "residential",
            "nullable": true,
            "type": "string"
          },
          "city": {
            "description": "City of the shipping address.",
            "example": "Rio de Janeiro",
            "nullable": true,
            "type": "string"
          },
          "complement": {
            "description": "Complement to the shipping address in case it applies.",
            "example": "3rd floor",
            "nullable": true,
            "type": "string"
          },
          "country": {
            "description": "Three letter ISO code of the country of the shipping address.",
            "example": "BRA",
            "nullable": true,
            "type": "string"
          },
          "neighborhood": {
            "description": "Neighborhood of the address.",
            "example": "Botafogo",
            "nullable": true,
            "type": "string"
          },
          "number": {
            "description": "Number of the building, house or apartment in the shipping address.",
            "example": "300",
            "nullable": true,
            "type": "string"
          },
          "postalCode": {
            "description": "Postal Code.",
            "example": "12345-000",
            "nullable": true,
            "type": "string"
          },
          "receiverName": {
            "description": "Name of the person who is going to receive the order.",
            "example": "Clark Kent.",
            "nullable": true,
            "type": "string"
          },
          "reference": {
            "description": "Complement that might help locate the shipping address more precisely in case of delivery.",
            "example": "Grey building",
            "nullable": true,
            "type": "string"
          },
          "state": {
            "description": "State of the shipping address.",
            "example": "Rio de Janeiro",
            "nullable": true,
            "type": "string"
          },
          "street": {
            "description": "Street of the address.",
            "example": "Praia de Botafogo",
            "nullable": true,
            "type": "string"
          },
          "userId": {
            "description": "ID of the customer to whom the address belongs.",
            "example": "7e03m794-a33a-11e9-84rt6-0adfa64s5a8e",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://vtex.local/api/dataentities/Address/documents{?_schema}"
    },
    "headers": {
      "Content-Type": {
        "$": "Content-Type"
      },
      "Accept": {
        "$": "Accept"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Href**: Document reference URL.",
            "**Id**: ID of the document that was created or updated."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
