{
  "name": "GetCalculatorConfigurationById",
  "description": "Retrieves a specific promotion by its Promotion ID or a specific tax by its Tax ID.",
  "parameters": {
    "type": "object",
    "properties": {
      "Content-Type": {
        "default": "application/json",
        "type": "string",
        "description": "Type of the content being sent."
      },
      "Accept": {
        "default": "application/json",
        "type": "string",
        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand."
      },
      "idCalculatorConfiguration": {
        "example": "d8a1cd2e-b667-4054-b3ae-b79124c7218e",
        "type": "string",
        "description": "Promotion ID or tax ID."
      }
    },
    "required": [
      "Content-Type",
      "Accept",
      "idCalculatorConfiguration"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://vtex.local/api/rnb/pvt/calculatorconfiguration/{idCalculatorConfiguration}"
    },
    "headers": {
      "Content-Type": {
        "$": "Content-Type"
      },
      "Accept": {
        "$": "Accept"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**absoluteShippingDiscountValue**: Maximum value for the shipping.",
            "**accumulateWithManualPrice**: Allows the promotion to apply to products whose prices have been manually added by a call center operator.",
            "**activateGiftsMultiplier**: If set as `true`, it activates gifts Multiplier.",
            "**activeDaysOfWeek**: Defines which days of the week the promotion will applied.",
            "**affiliates**: Marketplace order identifier. The discount will apply to selected affiliates.",
            "**applyToAllShippings**: Promotion will be applied to all kind of shipping.",
            "**areSalesChannelIdsExclusive**: If set to `false`, this promotion will be applied to any trade policies present on the `idsSalesChannel` field. If set to `true`, trade policies present on that field will make this promotion not to be applied.",
            "**beginDateUtc**: Promotion Begin Date (UTC).",
            "**brands**: Object composed by the brands that will activate or deactivate the promotion.",
            "**brandsAreInclusive**: If set to `true`, this promotion will be applied to any brand present on the `brands` field. If set to `false`, brands present on that field will make this promotion not to be applied.",
            "**campaigns**: Campaign Audiences that activate this promotion.",
            "**cardIssuers**",
            "**categories**: Object composed by the categories that will activate or deactivate the promotion.",
            "**categoriesAreInclusive**: If set to `true`, this promotion will be applied to any category present on the `categories` field. If set to `false`, categories present on that field will make this promotion not to be applied.",
            "**clusterExpressions**: An expression to use with clusters.",
            "**collections**: Array composed by the collections that will be activated or deactivated the promotion.",
            "**collections1BuyTogether**: Collections that will generate the promotion, type **Buy Together**, **More for less**, **Progressive Discount**, **Buy One Get One**.",
            "**collections2BuyTogether**",
            "**collectionsIsInclusive**: If set to `true`, this promotion will be applied to any collection present on the `collections` field. If set to `false`, collections present on that field will make this promotion not to be applied.",
            "**compareListPriceAndPrice**: If the **List Price** and **Price** are the same.",
            "**conditionsIds**: Array with conditions IDs.",
            "**coupon**",
            "**cumulative**: Defines if a promotion can accumulate with another one. (`true`) or not (`false`).",
            "**daysAgoOfPurchases**: Number of days that are considered to add the purchase history.",
            "**description**: Promotion internal description.",
            "**disableDeal**",
            "**discountType**: The type of discount that will apply to the promotion.",
            "**enableBuyTogetherPerSku**: Enable **Buy Together** per SKU.",
            "**endDateUtc**: Promotion End Date (UTC).",
            "**firstBuyIsProfileOptimistic**: Applies the discount even if the user is not logged.",
            "**giftListTypes**: Gifts List Type.",
            "**idCalculatorConfiguration**: Promotion ID.",
            "**idSeller**: Seller Name.",
            "**idSellerIsInclusive**: If set to `true`, this promotion will be applied to any seller present on the idSeller field. If set to `false`, sellers present on that field will make this promotion not to be applied.",
            "**idsSalesChannel**: List of Trade Policies that activate this promotion.",
            "**installment**",
            "**isActive**: If set as `true` the Promotion is activated. If set as `false` the Promotion is deactivated.",
            "**isArchived**: If set as `true` the Promotion is archived. If set as `false` the Promotion is not archived.",
            "**isDifferentListPriceAndPrice**: Applies the promotion only if the list price and price is different.",
            "**isFeatured**: Insert a flag with the promotion name used in the product's window display and page.",
            "**isFirstBuy**: Applies the discount only if it's a first buy.",
            "**isMinMaxInstallments**: Set if the promotion will be applied considering a minimum and maximum values for installments.",
            "**isSlaSelected**: Applies selected discount only when one of the defined shipping method is selected by the customer.",
            "**itemMaxPrice**: Maximum price of the item.",
            "**itemMinPrice**: Minimum price of the item.",
            "**lastModified**: When the Promotion was last modified.",
            "**listSku1BuyTogether**: SKU first list for the promotion **Buy Together**.",
            "**listSku2BuyTogether**: SKU second list for the promotion **Buy Together**.",
            "**marketingTags**: Promotion Marketing tags.",
            "**marketingTagsAreNotInclusive**: If set to `false`, this promotion will be applied to any marketing tag present on the `marketingTags` field. If set to `true`, marketing tags present on that field will make this promotion not to be applied.",
            "**maxInstallment**: Maximum value for installment.",
            "**maxNumberOfAffectedItems**: The maximum number of affected items for a promotion.",
            "**maxNumberOfAffectedItemsGroupKey**: The maximum number of affected items by group key for a promotion.",
            "**maxPricesPerItems**",
            "**maxUsage**: Defines how many times the promotion can be used.",
            "**maxUsagePerClient**: Defines if the promotion can be used multiple times per client.",
            "**maximumUnitPriceDiscount**: The maximum price for each item of the purchase will be the price set up.",
            "**merchants**",
            "**minInstallment**: Minimum value for installment.",
            "**minimumQuantityBuyTogether**: Minimum quantity for **Buy Together** promotion.",
            "**multipleSkusCause**: Object composed by a list of SKUs on a Multiple Effects promotion. Structure: `\"{SkuId}\": {PercentageDiscount}`. There is a limit of 400 SKUs for this type of promotion.",
            "**multipleUsePerClient**: Defines if the promotion can be used multiple times per client.",
            "**name**: Promotion Name.",
            "**newOffset**: New time offset from UTC in seconds.",
            "**nominalDiscountValue**: Exact discount to be applied for the total purchase value.",
            "**nominalRewardValue**: Nominal value for rewards program.",
            "**nominalShippingDiscountValue**: Exact discount to be applied for the shipping value.",
            "**nominalTax**: Nominal Tax.",
            "**offset**: Time offset from UTC in seconds.",
            "**orderStatusRewardValue**: Order status reward value.",
            "**origin**: Origin of the promotion, `marketplace` or `Fulfillment`. Read [Difference between orders with marketplace and fulfillment sources](https://help.vtex.com/en/tutorial/what-are-orders-with-marketplace-source-and-orders-with-fulfillment-source--6eVYrmUAwMOeKICU2KuG06) for more information.",
            "**paymentsMethods**: Array composed by all the Payments Methods.",
            "**paymentsRules**",
            "**percentualDiscountValue**: Percentage discount to be applied for total purchase value.",
            "**percentualDiscountValueList**: Percentual discount value list.",
            "**percentualDiscountValueList1**: Valid discounts for the SKUs in `listSku1BuyTogether`, discount list used for Buy Together Promotions.",
            "**percentualDiscountValueList2**: Equivalent to `percentualDiscountValueList1`.",
            "**percentualRewardValue**: Percentage value for rewards program.",
            "**percentualShippingDiscountValue**: Percentage discount to be applied for shipping value.",
            "**percentualTax**: Percentual Tax over purchase total value.",
            "**products**: Object composed by the products that will activate or deactivate the promotion.",
            "**productsAreInclusive**: If set to `true`, this promotion will be applied to any product present on the `products` field. If set to `false`, products present on that field will make this promotion not to be applied.",
            "**productsSpecifications**",
            "**quantityToAffectBuyTogether**: Quantity to affect **Buy Together** promotion.",
            "**rebatePercentualDiscountValue**: Percentual Shipping Discount Value.",
            "**restrictionsBins**: The discount will be granted if the card's BIN is given.",
            "**shippingPercentualTax**: Shipping Percentual Tax over purchase total value.",
            "**shouldDistributeDiscountAmongMatchedItems**: Should distribute discount among matched items.",
            "**skus**: Object composed by the SKUs that will activate or deactivate the promotion.",
            "**skusAreInclusive**: If set to `true`, this promotion will be applied to any SKU present on the `skus` field. If set to `false`, SKUs present on that field will make this promotion not to be applied.",
            [
              "**skusGift**: SKU Gift Object. Total discount on the product value set as a gift.",
              {
                "$ul": [
                  "**gifts**: Array with SKU Gifts IDs.",
                  "**quantitySelectable**: Quantity of SKU Gifts."
                ]
              }
            ],
            "**slasIds**: The discount will be granted if the shipping method is the same as the one given.",
            "**stores**",
            "**storesAreInclusive**",
            "**totalValueCeling**: Maximum chart value to activate the promotion.",
            "**totalValueFloor**: Minimum chart value to activate the promotion.",
            "**totalValueIncludeAllItems**",
            "**totalValueMode**: If products that already are receiving a promotion, will be considered on the chart total value. There are three options available: `IncludeMatchedItems`, `ExcludeMatchedItems`, `AllItems`.",
            "**totalValuePurchase**: Total value a client must have in past orders to active the promotion.",
            "**type**: Defines what is the type of the promotion or indicates if it is a tax. Possible values: `regular` ([Regular Promotion](https://help.vtex.com/tutorial/regular-promotion--tutorials_327)), `combo` ([Buy Together](https://help.vtex.com/en/tutorial/buy-together--tutorials_323)), `forThePriceOf` ([More for Less](https://help.vtex.com/en/tutorial/creating-a-more-for-less-promotion--tutorials_325)), `progressive` ([Progressive Discount](https://help.vtex.com/en/tutorial/progressive-discount--tutorials_324)), `buyAndWin` ([Buy One Get One](https://help.vtex.com/en/tutorial/buy-one-get-one--tutorials_322)), `maxPricePerItem` (Deprecated), `campaign` ([Campaign Promotion](https://help.vtex.com/en/tutorial/campaign-promotion--1ChYXhK2AQGuS6wAqS8Ume)), `tax` (Tax), `multipleEffects` (Multiple Effects).",
            "**useNewProgressiveAlgorithm**: Use new progressive algorithm.",
            "**utmCampaign**: Coupon utmCampaign code.",
            "**utmSource**: Coupon utmSource code.",
            "**zipCodeRanges**: Range of the zip code that applies the promotion."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
