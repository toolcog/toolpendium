{
  "name": "CreateOrUpdateCalculatorConfiguration",
  "description": "Creates or updates a specific Promotion by its Promotion ID or a specific Tax by its Tax ID.",
  "parameters": {
    "type": "object",
    "properties": {
      "Content-Type": {
        "default": "application/json",
        "type": "string",
        "description": "Type of the content being sent."
      },
      "Accept": {
        "default": "application/json",
        "type": "string",
        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand."
      },
      "body": {
        "properties": {
          "absoluteShippingDiscountValue": {
            "description": "Maximum shipping value.",
            "example": 0,
            "type": "number"
          },
          "accumulateWithManualPrice": {
            "description": "Allows the promotion to apply to products whose prices have been manually added by a call-center operator.",
            "example": false,
            "type": "boolean"
          },
          "activateGiftsMultiplier": {
            "description": "If set as `true`, it activates gifts Multiplier.",
            "example": false,
            "type": "boolean"
          },
          "activeDaysOfWeek": {
            "description": "Defines which days of the week the Promotion or Tax will applied.",
            "items": {
              "description": "Day of the week that the Promotion or Tax will be valid.",
              "example": "Monday",
              "type": "string"
            },
            "type": "array"
          },
          "affiliates": {
            "description": "Marketplace order identifier. The discount will apply to selected affiliates.",
            "items": {
              "description": "Object with information of the affiliate.",
              "properties": {
                "id": {
                  "description": "Affiliate ID.",
                  "example": "1",
                  "type": "string"
                },
                "name": {
                  "description": "Affiliate Name.",
                  "example": "Amazon",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "applyToAllShippings": {
            "description": "Promotion or Tax will be applied to all kind of shipping.",
            "example": false,
            "type": "boolean"
          },
          "areSalesChannelIdsExclusive": {
            "description": "If set to `false`, this Promotion or Tax will be applied to any trade policies present on the `idsSalesChannel` field. If set to `true`, trade policies present on that field will make this Promotion or Tax not to be applied.",
            "example": false,
            "type": "boolean"
          },
          "beginDateUtc": {
            "description": "Promotion or Tax Begin Date (UTC).",
            "example": "2020-05-01T18:47:15.89Z",
            "type": "string"
          },
          "brands": {
            "description": "Object composed by the brands that will activate or deactivate the Promotion or Tax.",
            "items": {
              "description": "Object with information of the brand.",
              "properties": {
                "id": {
                  "description": "Brand ID.",
                  "example": "1",
                  "type": "string"
                },
                "name": {
                  "description": "Brand Name.",
                  "example": "Brand (1)",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "brandsAreInclusive": {
            "description": "If set to `true`, this Promotion or Tax will be applied to any brand present on the `brands` field. If set to `false`, brands present on that field will make this Promotion or Tax not to be applied.",
            "example": true,
            "type": "boolean"
          },
          "campaigns": {
            "description": "Campaign Audiences that activate this Promotion or Tax.",
            "example": [
              "Campaign Audience test"
            ],
            "items": {},
            "type": "array"
          },
          "cardIssuers": {
            "deprecated": true,
            "items": {},
            "type": "array"
          },
          "categories": {
            "description": "Object composed by the categories that will activate or deactivate the Promotion or Tax.",
            "items": {
              "description": "Object with information of the category.",
              "properties": {
                "id": {
                  "description": "Category ID.",
                  "example": "1",
                  "type": "string"
                },
                "name": {
                  "description": "Category Name.",
                  "example": "Vinhos Tintos (1)",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "categoriesAreInclusive": {
            "description": "If set to `true`, this Promotion or Tax will be applied to any category present on the `categories` field. If set to `false`, categories present on that field will make this Promotion or Tax not to be applied.",
            "example": true,
            "type": "boolean"
          },
          "clusterExpressions": {
            "description": "An expression to use with clusters.",
            "items": {
              "description": "Cluster expression.",
              "example": "birthday=true",
              "type": "string"
            },
            "type": "array"
          },
          "collections": {
            "description": "Object composed by the collections that will activate or deactivate the Promotion or Tax.",
            "items": {
              "description": "Object with information of the collection.",
              "properties": {
                "id": {
                  "description": "Collection ID.",
                  "example": "1",
                  "type": "string"
                },
                "name": {
                  "description": "Collection Name.",
                  "example": "Collection (1)",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "collections1BuyTogether": {
            "description": "Collections that will generate the Promotion, type **Buy Together**, **More for less**, **Progressive Discount**, **Buy One Get One**.",
            "items": {
              "description": "Collection ID.",
              "example": "1",
              "type": "string"
            },
            "type": "array"
          },
          "collections2BuyTogether": {
            "deprecated": true,
            "items": {},
            "type": "array"
          },
          "collectionsIsInclusive": {
            "description": "If set to `true`, this Promotion or Tax will be applied to any collection present on the `collections` field. If set to `false`, collections present on that field will make this Promotion or Tax not to be applied.",
            "example": false,
            "type": "boolean"
          },
          "compareListPriceAndPrice": {
            "description": "If the **List Price** and **Price** are the same.",
            "example": false,
            "type": "boolean"
          },
          "conditionsIds": {
            "description": "Array with conditions IDs.",
            "items": {
              "description": "Condition ID.",
              "example": "1",
              "type": "string"
            },
            "type": "array"
          },
          "coupon": {
            "deprecated": true,
            "items": {},
            "type": "array"
          },
          "cumulative": {
            "description": "Defines if a Promotion or Tax can accumulate with another one. (`true`) or not (`false`).",
            "example": false,
            "type": "boolean"
          },
          "daysAgoOfPurchases": {
            "description": "Number of days that are considered to add the purchase history.",
            "example": 0,
            "type": "integer"
          },
          "description": {
            "description": "Internal description of the Promotion or Tax.",
            "example": "Description of the promotion.",
            "type": "string"
          },
          "disableDeal": {
            "deprecated": true,
            "type": "boolean"
          },
          "discountType": {
            "description": "The type of discount that will apply to the promotion.",
            "example": "percentual",
            "type": "string"
          },
          "enableBuyTogetherPerSku": {
            "description": "Enable **Buy Together** per SKU.",
            "example": false,
            "type": "boolean"
          },
          "endDateUtc": {
            "description": "Promotion or Tax End Date (UTC).",
            "example": "2020-05-01T18:47:15.89Z",
            "type": "string"
          },
          "firstBuyIsProfileOptimistic": {
            "description": "Applies the discount even if the user is not logged.",
            "example": false,
            "type": "boolean"
          },
          "giftListTypes": {
            "description": "Gifts List Type.",
            "items": {
              "description": "Gift List Type.",
              "example": "Gift SKU",
              "type": "string"
            },
            "type": "array"
          },
          "idCalculatorConfiguration": {
            "description": "Promotion ID or Tax ID.",
            "example": "ba087fa9-8587-44b3-8ef1-ade8d053e9e9",
            "type": "string"
          },
          "idSeller": {
            "description": "Seller Name.",
            "example": "1",
            "type": "string"
          },
          "idSellerIsInclusive": {
            "description": "If set to `true`, this Promotion or Tax will be applied to any seller present on the `idSeller` field. If set to `false`, sellers present on that field will make this Promotion or Tax not to be applied.",
            "example": false,
            "type": "boolean"
          },
          "idsSalesChannel": {
            "description": "List of Trade Policies that activate this Promotion or Tax.",
            "items": {
              "description": "Trade Policy ID.",
              "example": "Principal",
              "type": "string"
            },
            "type": "array"
          },
          "installment": {
            "deprecated": true,
            "type": "integer"
          },
          "isActive": {
            "description": "If set as `true` the Promotion or Tax is activated. If set as `false` the Promotion or Tax is deactivated.",
            "example": true,
            "type": "boolean"
          },
          "isArchived": {
            "description": "If set as `true` the Promotion or Tax is archived. If set as `false` the Promotion or Tax is not archived.",
            "example": false,
            "type": "boolean"
          },
          "isDifferentListPriceAndPrice": {
            "description": "Applies the Promotion or Tax only if the list price and price is different.",
            "example": false,
            "type": "boolean"
          },
          "isFeatured": {
            "description": "Insert a flag with the promotion name used in the product's window display and page.",
            "example": true,
            "type": "boolean"
          },
          "isFirstBuy": {
            "description": "Applies the discount only if it's a first buy.",
            "example": false,
            "type": "boolean"
          },
          "isMinMaxInstallments": {
            "description": "Set if the Promotion or Tax will be applied considering a minimum and maximum values for installments.",
            "example": false,
            "type": "boolean"
          },
          "isSlaSelected": {
            "description": "Applies selected discount only when one of the defined shipping method is selected by the customer.",
            "example": false,
            "type": "boolean"
          },
          "itemMaxPrice": {
            "description": "Maximum price of the item.",
            "example": 0,
            "type": "number"
          },
          "itemMinPrice": {
            "description": "Minimum price of the item.",
            "example": 0,
            "type": "number"
          },
          "lastModified": {
            "description": "Date when the Promotion or Tax was last modified.",
            "example": "2021-02-23T20:58:38.7963862Z",
            "type": "string"
          },
          "listSku1BuyTogether": {
            "description": "SKU first list for the promotion **Buy Together**.",
            "example": [
              "SKU"
            ],
            "items": {},
            "type": "array"
          },
          "listSku2BuyTogether": {
            "description": "SKU second list for the promotion **Buy Together**.",
            "example": [
              "SKU"
            ],
            "items": {},
            "type": "array"
          },
          "marketingTags": {
            "description": "Promotion or Tax Marketing tags.",
            "items": {
              "description": "Promotion or Tax Marketing tag.",
              "example": "MKT1",
              "type": "string"
            },
            "type": "array"
          },
          "marketingTagsAreNotInclusive": {
            "description": "If set to `false`, this Promotion or Tax will be applied to any marketing tag present on the `marketingTags` field. If set to `true`, marketing tags present on that field will make this Promotion or Tax not to be applied.",
            "example": false,
            "type": "boolean"
          },
          "maxInstallment": {
            "description": "Maximum value for installment.",
            "example": 0,
            "type": "integer"
          },
          "maxNumberOfAffectedItems": {
            "description": "The maximum number of affected items for a promotion.",
            "example": 0,
            "type": "integer"
          },
          "maxNumberOfAffectedItemsGroupKey": {
            "description": "The maximum number of affected items by group key for a promotion.",
            "example": "perCart",
            "type": "string"
          },
          "maxPricesPerItems": {
            "deprecated": true,
            "items": {},
            "type": "array"
          },
          "maxUsage": {
            "description": "Defines how many times the Promotion or Tax can be used.",
            "example": 0,
            "type": "integer"
          },
          "maxUsagePerClient": {
            "description": "Defines if the promotion can be used multiple times per client.",
            "example": 0,
            "type": "integer"
          },
          "maximumUnitPriceDiscount": {
            "description": "The maximum price for each item of the purchase will be the price set up.",
            "example": 0,
            "type": "number"
          },
          "merchants": {
            "deprecated": true,
            "items": {},
            "type": "array"
          },
          "minInstallment": {
            "description": "Minimum value for installment.",
            "example": 0,
            "type": "integer"
          },
          "minimumQuantityBuyTogether": {
            "description": "Minimum quantity for **Buy Together** promotion.",
            "example": 0,
            "type": "integer"
          },
          "multipleUsePerClient": {
            "description": "Defines if the promotion can be used multiple times per client.",
            "example": false,
            "type": "boolean"
          },
          "name": {
            "description": "Promotion name or Tax name.",
            "example": "Promoção Social Seller",
            "type": "string"
          },
          "newOffset": {
            "description": "New time offset from UTC in seconds.",
            "example": -3,
            "type": "number"
          },
          "nominalDiscountValue": {
            "description": "Exact discount to be applied for the total purchase value.",
            "example": 0,
            "type": "number"
          },
          "nominalRewardValue": {
            "description": "Nominal value for rewards program.",
            "example": 0,
            "type": "number"
          },
          "nominalShippingDiscountValue": {
            "description": "Exact discount to be applied for the shipping value.",
            "example": 0,
            "type": "number"
          },
          "nominalTax": {
            "description": "Nominal Tax.",
            "example": 0,
            "type": "number"
          },
          "offset": {
            "description": "Time offset from UTC in seconds.",
            "example": -3,
            "type": "integer"
          },
          "orderStatusRewardValue": {
            "description": "Order status reward value.",
            "example": "invoiced",
            "type": "string"
          },
          "origin": {
            "description": "Origin of the Promotion or Tax, `marketplace` or `Fulfillment`.  Read [Difference between orders with marketplace and fulfillment sources](https://help.vtex.com/en/tutorial/what-are-orders-with-marketplace-source-and-orders-with-fulfillment-source--6eVYrmUAwMOeKICU2KuG06) for more information.",
            "example": "marketplace",
            "type": "string"
          },
          "paymentsMethods": {
            "description": "Array composed by all the Payments Methods that activate this Promotion or Tax.",
            "items": {
              "description": "Object with information of the Payment Method.",
              "properties": {
                "id": {
                  "description": "Payment Method ID.",
                  "example": "2",
                  "type": "string"
                },
                "name": {
                  "description": "Payment Method Name.",
                  "example": "Visa (2)",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "paymentsRules": {
            "deprecated": true,
            "items": {},
            "type": "array"
          },
          "percentualDiscountValue": {
            "description": "Percentage discount to be applied for total purchase value.",
            "example": 10,
            "type": "number"
          },
          "percentualDiscountValueList": {
            "description": "Percentual discount value list.",
            "items": {
              "description": "Percentual discount value.",
              "example": 10,
              "type": "number"
            },
            "type": "array"
          },
          "percentualDiscountValueList1": {
            "description": "Valid discounts for the SKUs in `listSku1BuyTogether`, discount list used for Buy Together Promotions.",
            "example": 0,
            "type": "number"
          },
          "percentualDiscountValueList2": {
            "description": "Equivalent to `percentualDiscountValueList1`.",
            "example": 0,
            "type": "number"
          },
          "percentualRewardValue": {
            "description": "Percentage value for rewards program.",
            "example": 0,
            "type": "number"
          },
          "percentualShippingDiscountValue": {
            "description": "Percentage discount to be applied for shipping value.",
            "example": 0,
            "type": "number"
          },
          "percentualTax": {
            "description": "Percentual Tax over purchase total value.",
            "example": 0,
            "type": "number"
          },
          "products": {
            "description": "Object composed by the products that will activate or deactivate the Promotion or Tax.",
            "items": {
              "description": "Object with information of the product.",
              "properties": {
                "id": {
                  "description": "Product ID.",
                  "example": "1",
                  "type": "string"
                },
                "name": {
                  "description": "Product Name.",
                  "example": "Vinho (1)",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "productsAreInclusive": {
            "description": "If set to `true`, this Promotion or Tax will be applied to any product present on the `products` field. If set to `false`, products present on that field will make this Promotion or Tax not to be applied.",
            "example": true,
            "type": "boolean"
          },
          "productsSpecifications": {
            "deprecated": true,
            "items": {},
            "type": "array"
          },
          "quantityToAffectBuyTogether": {
            "description": "Quantity to affect **Buy Together** promotion.",
            "example": 0,
            "type": "integer"
          },
          "rebatePercentualDiscountValue": {
            "description": "Percentual Shipping Discount Value.",
            "example": 0,
            "type": "number"
          },
          "restrictionsBins": {
            "description": "The discount will be granted if the card's BIN is given.",
            "items": {
              "description": "Card's BIN.",
              "example": "1234",
              "type": "string"
            },
            "type": "array"
          },
          "shippingPercentualTax": {
            "description": "Shipping Percentual Tax over purchase total value.",
            "example": 0,
            "type": "number"
          },
          "shouldDistributeDiscountAmongMatchedItems": {
            "description": "Should distribute discount among matched items.",
            "example": false,
            "type": "boolean"
          },
          "skus": {
            "description": "Object composed by the SKUs that will activate or deactivate the Promotion or Tax.",
            "items": {
              "description": "Object with information of the SKU.",
              "properties": {
                "id": {
                  "description": "SKU ID.",
                  "example": "1",
                  "type": "string"
                },
                "name": {
                  "description": "SKU Name.",
                  "example": "Vinho tinto (1)",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "skusAreInclusive": {
            "description": "If set to `true`, this Promotion or Tax will be applied to any SKU present on the `skus` field. If set to `false`, SKUs present on that field will make this Promotion or Tax not to be applied.",
            "example": true,
            "type": "boolean"
          },
          "skusGift": {
            "description": "SKU Gift Object. Total discount on the product value set as a gift.",
            "properties": {
              "gifts": {
                "description": "Array with SKU Gifts IDs.",
                "example": [
                  "SKU"
                ],
                "items": {},
                "type": "array"
              },
              "quantitySelectable": {
                "description": "Quantity of SKU Gifts.",
                "example": 0,
                "type": "integer"
              }
            },
            "type": "object"
          },
          "slasIds": {
            "description": "The discount will be granted if the shipping method is the same as the one given.",
            "items": {
              "description": "Shipping method.",
              "example": "Express",
              "type": "string"
            },
            "type": "array"
          },
          "stores": {
            "deprecated": true,
            "items": {},
            "type": "array"
          },
          "storesAreInclusive": {
            "deprecated": true,
            "type": "boolean"
          },
          "totalValueCeling": {
            "description": "Maximum chart value to activate the Promotion or Tax.",
            "example": 0,
            "type": "number"
          },
          "totalValueFloor": {
            "description": "Minimum chart value to activate the Promotion or Tax.",
            "example": 0,
            "type": "number"
          },
          "totalValueIncludeAllItems": {
            "deprecated": true,
            "type": "boolean"
          },
          "totalValueMode": {
            "description": "Defines if products that already are receiving a promotion will be considered on the chart total value. There are three options available: `IncludeMatchedItems`, `ExcludeMatchedItems`, `AllItems`.",
            "example": "IncludeMatchedItems",
            "type": "string"
          },
          "totalValuePurchase": {
            "description": "Total value a client must have in past orders to activate the Promotion or Tax.",
            "example": 0,
            "type": "number"
          },
          "type": {
            "description": "Defines what is the type of the promotion or indicates if it is a tax. Possible values: `regular` ([Regular Promotion](https://help.vtex.com/tutorial/regular-promotion--tutorials_327)), `combo` ([Buy Together](https://help.vtex.com/en/tutorial/buy-together--tutorials_323)), `forThePriceOf` ([More for Less](https://help.vtex.com/en/tutorial/creating-a-more-for-less-promotion--tutorials_325)), `progressive` ([Progressive Discount](https://help.vtex.com/en/tutorial/progressive-discount--tutorials_324)), `buyAndWin` ([Buy One Get One](https://help.vtex.com/en/tutorial/buy-one-get-one--tutorials_322)), `maxPricePerItem` (Deprecated), `campaign` ([Campaign Promotion](https://help.vtex.com/en/tutorial/campaign-promotion--1ChYXhK2AQGuS6wAqS8Ume)), `tax` (Tax), `multipleEffects` (Multiple Effects).",
            "example": "regular",
            "type": "string"
          },
          "useNewProgressiveAlgorithm": {
            "description": "Use new progressive algorithm.",
            "example": false,
            "type": "boolean"
          },
          "utmCampaign": {
            "description": "Coupon utmCampaign code.",
            "example": "testSource",
            "type": "string"
          },
          "utmSource": {
            "description": "Coupon utmSource code.",
            "example": "testSource",
            "type": "string"
          },
          "zipCodeRanges": {
            "description": "Range of the zip code that applies the promotion.",
            "items": {
              "description": "Zip code that applies the promotion.",
              "properties": {
                "inclusive": {
                  "description": "Defines if the zip code applies the promotion.",
                  "example": false,
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object",
        "description": ""
      }
    },
    "required": [
      "Content-Type",
      "Accept",
      "body"
    ]
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://vtex.local/api/rnb/pvt/calculatorconfiguration"
    },
    "headers": {
      "Content-Type": {
        "$": "Content-Type"
      },
      "Accept": {
        "$": "Accept"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**absoluteShippingDiscountValue**: Maximum shipping value.",
            "**accumulateWithManualPrice**: Allows the promotion to apply to products whose prices have been manually added by a call-center operator.",
            "**activateGiftsMultiplier**: If set as `true`, it activates gifts Multiplier.",
            "**activeDaysOfWeek**: Defines which days of the week the promotion will applied.",
            "**affiliates**: Marketplace order identifier. The discount will apply to selected affiliates.",
            "**applyToAllShippings**: Promotion will be applied to all kind of shipping.",
            "**areSalesChannelIdsExclusive**: If set to `false`, this promotion will be applied to any trade policies present on the `idsSalesChannel` field. If set to `true`, trade policies present on that field will make this promotion not to be applied.",
            "**beginDateUtc**: Promotion Begin Date (UTC).",
            "**brands**: Object composed by the brands that will activate or deactivate the promotion.",
            "**brandsAreInclusive**: If set to `true`, this promotion will be applied to any brand present on the `brands` field. If set to `false`, brands present on that field will make this promotion not to be applied.",
            "**campaigns**: Campaign Audiences that activate this promotion.",
            "**cardIssuers**",
            "**categories**: Object composed by the categories that will activate or deactivate the promotion.",
            "**categoriesAreInclusive**: If set to `true`, this promotion will be applied to any category present on the `categories` field. If set to `false`, categories present on that field will make this promotion not to be applied.",
            "**clusterExpressions**: An expression to use with clusters.",
            "**collections**: Object composed by the collections that will activate or deactivate the promotion.",
            "**collections1BuyTogether**: Collections that will generate the promotion, type **Buy Together**, **More for less**, **Progressive Discount**, **Buy One Get One**.",
            "**collections2BuyTogether**",
            "**collectionsIsInclusive**: If set to `true`, this promotion will be applied to any collection present on the `collections` field. If set to `false`, collections present on that field will make this promotion not to be applied.",
            "**compareListPriceAndPrice**: If the **List Price** and **Price** are the same.",
            "**conditionsIds**: Array with conditions IDs.",
            "**coupon**",
            "**cumulative**: Defines if a promotion can accumulate with another one. (`true`) or not (`false`).",
            "**daysAgoOfPurchases**: Number of days that are considered to add the purchase history.",
            "**description**: Promotion internal description.",
            "**disableDeal**",
            "**discountType**: The type of discount that will apply to the promotion.",
            "**enableBuyTogetherPerSku**: Enable **Buy Together** per SKU.",
            "**endDateUtc**: Promotion End Date (UTC).",
            "**firstBuyIsProfileOptimistic**: Applies the discount even if the user is not logged.",
            "**giftListTypes**: Gifts List Type.",
            "**idCalculatorConfiguration**: Promotion ID.",
            "**idSeller**: Seller Name.",
            "**idSellerIsInclusive**: If set to `true`, this promotion will be applied to any seller present on the `idSeller` field. If set to `false`, sellers present on that field will make this promotion not to be applied.",
            "**idsSalesChannel**: List of Trade Policies that activate this promotion.",
            "**installment**",
            "**isActive**: If set as `true` the Promotion is activated. If set as `false` the Promotion is deactivated.",
            "**isArchived**: If set as `true` the Promotion is archived. If set as `false` the Promotion is not archived.",
            "**isDifferentListPriceAndPrice**: Applies the promotion only if the list price and price is different.",
            "**isFeatured**: Insert a flag with the promotion name used in the product's window display and page.",
            "**isFirstBuy**: Applies the discount only if it's a first buy.",
            "**isMinMaxInstallments**: Set if the promotion will be applied considering a minimum and maximum values for installments.",
            "**isSlaSelected**: Applies selected discount only when one of the defined shipping method is selected by the customer.",
            "**itemMaxPrice**: Maximum price of the item.",
            "**itemMinPrice**: Minimum price of the item.",
            "**lastModified**: When the Promotion was last modified.",
            "**listSku1BuyTogether**: SKU first list for the promotion **Buy Together**.",
            "**listSku2BuyTogether**: SKU second list for the promotion **Buy Together**.",
            "**marketingTags**: Promotion Marketing tags.",
            "**marketingTagsAreNotInclusive**: If set to `false`, this promotion will be applied to any marketing tag present on the `marketingTags` field. If set to `true`, marketing tags present on that field will make this promotion not to be applied.",
            "**maxInstallment**: Maximum value for installment.",
            "**maxNumberOfAffectedItems**: The maximum number of affected items for a promotion.",
            "**maxNumberOfAffectedItemsGroupKey**: The maximum number of affected items by group key for a promotion.",
            "**maxPricesPerItems**",
            "**maxUsage**: Defines how many times the promotion can be used.",
            "**maxUsagePerClient**: Defines if the promotion can be used multiple times per client.",
            "**maximumUnitPriceDiscount**: The maximum price for each item of the purchase will be the price set up.",
            "**merchants**",
            "**minInstallment**: Minimum value for installment.",
            "**minimumQuantityBuyTogether**: Minimum quantity for **Buy Together** promotion.",
            "**multipleUsePerClient**: Defines if the promotion can be used multiple times per client.",
            "**name**: Promotion Name.",
            "**newOffset**: New time offset from UTC in seconds.",
            "**nominalDiscountValue**: Exact discount to be applied for the total purchase value.",
            "**nominalRewardValue**: Nominal value for rewards program.",
            "**nominalShippingDiscountValue**: Exact discount to be applied for the shipping value.",
            "**nominalTax**: Nominal Tax.",
            "**offset**: Time offset from UTC in seconds.",
            "**orderStatusRewardValue**: Order status reward value.",
            "**origin**: Origin of the promotion, `marketplace` or `Fulfillment`.  Read [Difference between orders with marketplace and fulfillment sources](https://help.vtex.com/en/tutorial/what-are-orders-with-marketplace-source-and-orders-with-fulfillment-source--6eVYrmUAwMOeKICU2KuG06) for more information.",
            "**paymentsMethods**: Array composed by all the Payments Methods.",
            "**paymentsRules**",
            "**percentualDiscountValue**: Percentage discount to be applied for total purchase value.",
            "**percentualDiscountValueList**: Percentual discount value list.",
            "**percentualDiscountValueList1**: Valid discounts for the SKUs in `listSku1BuyTogether`, discount list used for Buy Together Promotions.",
            "**percentualDiscountValueList2**: Equivalent to `percentualDiscountValueList1`.",
            "**percentualRewardValue**: Percentage value for rewards program.",
            "**percentualShippingDiscountValue**: Percentage discount to be applied for shipping value.",
            "**percentualTax**: Percentual Tax over purchase total value.",
            "**products**: Object composed by the products that will activate or deactivate the promotion.",
            "**productsAreInclusive**: If set to `true`, this promotion will be applied to any product present on the `products` field. If set to `false`, products present on that field will make this promotion not to be applied.",
            "**productsSpecifications**",
            "**quantityToAffectBuyTogether**: Quantity to affect **Buy Together** promotion.",
            "**rebatePercentualDiscountValue**: Percentual Shipping Discount Value.",
            "**restrictionsBins**: The discount will be granted if the card's BIN is given.",
            "**shippingPercentualTax**: Shipping Percentual Tax over purchase total value.",
            "**shouldDistributeDiscountAmongMatchedItems**: Should distribute discount among matched items.",
            "**skus**: Object composed by the SKUs that will activate or deactivate the promotion.",
            "**skusAreInclusive**: If set to `true`, this promotion will be applied to any SKU present on the `skus` field. If set to `false`, SKUs present on that field will make this promotion not to be applied.",
            [
              "**skusGift**: SKU Gift Object. Total discount on the product value set as a gift.",
              {
                "$ul": [
                  "**gifts**: Array with SKU Gifts IDs.",
                  "**quantitySelectable**: Quantity of SKU Gifts."
                ]
              }
            ],
            "**slasIds**: The discount will be granted if the shipping method is the same as the one given.",
            "**stores**",
            "**storesAreInclusive**",
            "**totalValueCeling**: Maximum chart value to activate the promotion.",
            "**totalValueFloor**: Minimum chart value to activate the promotion.",
            "**totalValueIncludeAllItems**",
            "**totalValueMode**: Defines if products that already are receiving a promotion will be considered on the chart total value. There are three options available: `IncludeMatchedItems`, `ExcludeMatchedItems`, `AllItems`.",
            "**totalValuePurchase**: Total value a client must have in past orders to active the promotion.",
            "**type**: Defines what is the type of the promotion or indicates if it is a tax. Possible values: `regular` ([Regular Promotion](https://help.vtex.com/tutorial/regular-promotion--tutorials_327)), `combo` ([Buy Together](https://help.vtex.com/en/tutorial/buy-together--tutorials_323)), `forThePriceOf` ([More for Less](https://help.vtex.com/en/tutorial/creating-a-more-for-less-promotion--tutorials_325)), `progressive` ([Progressive Discount](https://help.vtex.com/en/tutorial/progressive-discount--tutorials_324)), `buyAndWin` ([Buy One Get One](https://help.vtex.com/en/tutorial/buy-one-get-one--tutorials_322)), `maxPricePerItem` (Deprecated), `campaign` ([Campaign Promotion](https://help.vtex.com/en/tutorial/campaign-promotion--1ChYXhK2AQGuS6wAqS8Ume)), `tax` (Tax), `multipleEffects` (Multiple Effects).",
            "**useNewProgressiveAlgorithm**: Use new progressive algorithm.",
            "**utmCampaign**: Coupon utmCampaign code.",
            "**utmSource**: Coupon utmSource code.",
            "**zipCodeRanges**: Range of the zip code that applies the promotion."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
