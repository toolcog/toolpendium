{
  "name": "GetFeedConfiguration",
  "description": "The Orders Feed v3 is the best way to create order integrations. Below you can find details on the configuration API specification, and to know more see our [Feed v3 guide](https://developers.vtex.com/vtex-rest-api/docs/orders-feed) and our [order integration guide](https://developers.vtex.com/vtex-rest-api/docs/erp-integration-set-up-order-integration).\n\r\n> ðŸ“˜ Onboarding guide \r\n>\r\n> Check the new [Orders onboarding guide](https://developers.vtex.com/vtex-rest-api/docs/orders-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Orders and is organized by focusing on the developer's journey.\r\n\r\n",
  "parameters": {
    "type": "object",
    "properties": {
      "Content-Type": {
        "default": "application/json",
        "type": "string",
        "description": "Type of the content being sent"
      },
      "Accept": {
        "default": "application/json",
        "type": "string",
        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand"
      }
    },
    "required": [
      "Content-Type",
      "Accept"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://vtex.local/api/orders/feed/config"
    },
    "headers": {
      "Content-Type": {
        "$": "Content-Type"
      },
      "Accept": {
        "$": "Accept"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**approximateAgeOfOldestMessageInSeconds**: Aproximate age of the oldest message in the feed, measured in seconds.",
            [
              "**filter**: Information on how orders are filtered to show on the feed.",
              {
                "$ul": [
                  "**disableSingleFire**: Sets a limit to how many times a specific order shows on the feed, after it first meets filtering conditions. Using the `FromOrders` type configuration with JSONata filtering expressions might cause orders to appear more than once on a feed, whenever changes are made to that order. If this field is `false` orders will appear in the feed only once.",
                  "**expression**: JSONata query expression that defines what conditions must be met for an order to be included in the feed. This should only be used in case `type` is `FromOrders`.",
                  "**status**: List of order statuses that should be included in the feed. This should only be used in case `type` is `FromWorkflow`.",
                  "**type**: Determines what orders appear in the feed and how they are filtered. If a feed has the `FromWorkflow` type configuration, it will receive order updates only when orderâ€™s statuses change and orders can be filtered by status, using the `status` field. A feed with the `FromOrders` type configuration gets updates whenever any change is made to an order. in this case, orders can be filtered by any property, according to JSONata expressions set in the `expression` field."
                ]
              }
            ],
            "**quantity**: Current number of messages in the feed, including messages that may not be visible due to time out after retrieval.",
            [
              "**queue**: Information that define the functioning of the queue.",
              {
                "$ul": [
                  "**MessageRetentionPeriodInSeconds**: Maximum life span of an order update after it gets to the feed. When a feed item is on the feed for this period of time, it is removed from the feed. Measured in seconds.",
                  "**visibilityTimeoutInSeconds**: Period of time for which an item is not visible in the feed after it has been retrieved with the Get feed items request. Measured in seconds."
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
