{
  "name": "CreateOrUpdateProfileSchema",
  "description": "Creates or updates profile schema.\n\r\n\r> Each account has one profile schema. Updating it with this request will substitute the previous version.\n\r\n\r> Learn more about the [Profile System](https://developers.vtex.com/vtex-rest-api/docs/profile-system) and its other API endpoints.",
  "parameters": {
    "type": "object",
    "properties": {
      "Content-Type": {
        "example": "application/json",
        "type": "string",
        "description": "Type of the content being sent."
      },
      "Accept": {
        "example": "application/json",
        "type": "string",
        "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
      },
      "body": {
        "$ref": "#/$defs/schema"
      }
    },
    "required": [
      "Content-Type",
      "Accept"
    ],
    "$defs": {
      "schema": {
        "properties": {
          "description": {
            "description": "Schema's human readable description.",
            "example": "This schema describes a b2c customer profile.",
            "type": "string"
          },
          "documentTTL": {
            "description": "Document time to live, in days. After this many days from its creation or update, any document cerated from this schema will be deleted.",
            "example": 1825,
            "type": "integer"
          },
          "properties": {
            "description": "Object describing each field in your desired schema. In this object, each property is a new object, describing the field according to: `type` (string); `sensitive` (boolean); `pii` (boolean) and; `items.type` (if field is array).",
            "properties": {
              "{fieldName}": {
                "description": "Schema of any given field described in the `properties` field.",
                "properties": {
                  "items": {
                    "description": "Object containing the type of the items if the field is an array. Typically, arrays will contain strings and will be used for fields such as `email`.",
                    "example": {
                      "type": "string"
                    },
                    "type": "object"
                  },
                  "pii": {
                    "description": "Indicates whether property is Personal Identifiable Information.",
                    "example": true,
                    "type": "boolean"
                  },
                  "sensitive": {
                    "description": "Indicates whether property is sensitive data.",
                    "example": true,
                    "type": "boolean"
                  },
                  "type": {
                    "description": "Schema property type.",
                    "example": "string",
                    "type": "string"
                  }
                },
                "required": [
                  "type",
                  "sensitive",
                  "pii"
                ],
                "type": "object"
              }
            },
            "type": "object"
          },
          "required": {
            "description": "Schema required fields.",
            "example": [
              "firstName",
              "lastName",
              "email",
              "document",
              "documentType"
            ],
            "items": {
              "description": "Key of a field that is rqeuired in the schema.",
              "type": "string"
            },
            "type": "array"
          },
          "title": {
            "description": "Schema title.",
            "example": "Client profile schema",
            "type": "string"
          },
          "type": {
            "description": "Schema type.",
            "example": "object",
            "type": "string"
          },
          "v-indexed": {
            "description": "",
            "example": [
              "email",
              "document"
            ],
            "items": {},
            "type": "array"
          },
          "v-unique": {
            "description": "",
            "example": [
              "email",
              "document"
            ],
            "items": {},
            "type": "array"
          },
          "version": {
            "description": "Schema version.",
            "example": 1,
            "type": "integer"
          }
        },
        "required": [
          "title",
          "type",
          "description",
          "required",
          "properties"
        ],
        "title": "Schema",
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "https://vtex.local/api/storage/profile-system/profiles/schema"
    },
    "headers": {
      "Content-Type": {
        "$": "Content-Type"
      },
      "Accept": {
        "$": "Accept"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
