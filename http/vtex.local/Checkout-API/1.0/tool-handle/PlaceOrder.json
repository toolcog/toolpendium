{
  "name": "PlaceOrder",
  "description": "Places order without having any prior cart information. This means all information on items, client, payment and shipping must be sent in the body.\r\n\r\n>⚠️ The authentication of this endpoint is required if you are creating an order with an item that has an attachment that creates a Subscription. For more information, access [Subscriptions API](https://developers.vtex.com/docs/api-reference/subscriptions-api-v3).",
  "parameters": {
    "type": "object",
    "properties": {
      "Content-Type": {
        "default": "application/json",
        "type": "string",
        "description": "Type of the content being sent."
      },
      "Accept": {
        "default": "application/json",
        "type": "string",
        "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
      },
      "sc": {
        "example": 1,
        "type": "integer",
        "description": "Trade Policy (Sales Channel) identification. This query can be used to create an order for a specific sales channel."
      },
      "body": {
        "properties": {
          "clientProfileData": {
            "description": "Customer's profile information. The `email` functions as a customer's ID.\n\r\n\rFor customers already in your database, sending only the email address is enough to register the order to the shopper’s existing account.\n\r\n\r> If the shopper exists in you database but is not logged in, sending other profile information along with the email will cause the platform to fail placing the order. This happens because this action is interpreted as an attempt to edit profile data, which is not possible unless the customer is logged in to the store.",
            "properties": {
              "corporateDocument": {
                "default": "12345678000100",
                "description": "Corporate document, if the customer is a legal entity.",
                "type": "string"
              },
              "corporateName": {
                "default": "company-name",
                "description": "Company name, if the customer is a legal entity.",
                "type": "string"
              },
              "corporatePhone": {
                "default": "+551100988887777",
                "description": "Corporate phone number, if the customer is a legal entity.",
                "type": "string"
              },
              "document": {
                "default": "123456789",
                "description": "Document number informed by the customer.",
                "type": "string"
              },
              "documentType": {
                "default": "cpf",
                "description": "Type of the document informed by the customer.",
                "type": "string"
              },
              "email": {
                "default": "customer@examplemail.com",
                "description": "Customer's email address.",
                "type": "string"
              },
              "firstName": {
                "default": "first-name",
                "description": "Customer's first name.",
                "type": "string"
              },
              "isCorporate": {
                "default": false,
                "description": "`true` if the customer is a legal entity.",
                "type": "boolean"
              },
              "lastName": {
                "default": "last-name",
                "description": "Customer's last name.",
                "type": "string"
              },
              "phone": {
                "default": "+55110988887777",
                "description": "Customer's phone number.",
                "type": "string"
              },
              "stateInscription": {
                "default": "12345678",
                "description": "State inscription, if the customer is a legal entity.",
                "type": "string"
              },
              "tradeName": {
                "default": "trade-name",
                "description": "Trade name, if the customer is a legal entity.",
                "type": "string"
              }
            },
            "required": [
              "email"
            ],
            "type": "object"
          },
          "items": {
            "description": "Array of objects containing information on each of the order's items.",
            "items": {
              "example": {
                "id": "123456789",
                "quantity": 1,
                "seller": "1"
              },
              "properties": {
                "attachments": {
                  "description": "Array containing information on attachments.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "bundleItems": {
                  "description": "Information on services sold along with the SKU. Example: a gift package.",
                  "items": {
                    "properties": {
                      "id": {
                        "description": "Service identifier.",
                        "example": "id-example",
                        "type": "string"
                      },
                      "name": {
                        "description": "Service name.",
                        "example": "name-example",
                        "type": "string"
                      },
                      "price": {
                        "description": "Service price. The last two digits are the cents.",
                        "example": 199,
                        "type": "integer"
                      },
                      "type": {
                        "description": "Service type.",
                        "example": "type-example",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "commission": {
                  "description": "Comission.",
                  "example": 10,
                  "type": "integer"
                },
                "freightCommission": {
                  "description": "Freight comission",
                  "example": 10,
                  "type": "integer"
                },
                "id": {
                  "description": "The SKU ID.",
                  "example": "123",
                  "type": "string"
                },
                "isGift": {
                  "default": false,
                  "description": "Indicates whether the order is a gift.",
                  "type": "boolean"
                },
                "itemAttachment": {
                  "description": "Item attachment.",
                  "properties": {
                    "content": {
                      "description": "Content referring to the customization requested by the customer.",
                      "example": "content-example",
                      "type": "string"
                    },
                    "name": {
                      "description": "Attachment name.",
                      "example": "name-example",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "measurementUnit": {
                  "default": "g",
                  "description": "SKU measurement unit.",
                  "type": "string"
                },
                "price": {
                  "description": "Item price within the context of the order without separating cents. For example, $24.99 is represented `2499`.",
                  "example": 2499,
                  "type": "integer"
                },
                "priceTags": {
                  "description": "Array of price tags, each of which, modifies the price in some way, like discounts or rates that apply to the item in the context of the order.",
                  "items": {
                    "properties": {
                      "identifier": {
                        "default": "1234abc-5678b-1234c",
                        "description": "Price tag identifier.",
                        "type": "string"
                      },
                      "isPercentual": {
                        "default": false,
                        "description": "`true` if price tag value is applied through a percentage.",
                        "type": "boolean"
                      },
                      "name": {
                        "default": "discount@name-1234abc-5678b-1234c",
                        "description": "Price tag name.",
                        "type": "string"
                      },
                      "rawValue": {
                        "default": -12,
                        "description": "Price tag raw value.",
                        "type": "integer"
                      },
                      "value": {
                        "default": -1200,
                        "description": "Price tag value.",
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "quantity": {
                  "description": "The quantity of items of this specific SKU in the cart to be simulated.",
                  "example": 1,
                  "format": "int32",
                  "type": "integer"
                },
                "seller": {
                  "description": "The ID of the seller responsible for this SKU. This ID can be found in your VTEX Admin.",
                  "example": "1",
                  "type": "string"
                },
                "unitMultiplier": {
                  "default": 1,
                  "description": "SKU unit multiplier.",
                  "type": "integer"
                }
              },
              "required": [
                "id",
                "quantity",
                "seller"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "marketingData": {
            "properties": {
              "coupon": {
                "default": "free-shipping",
                "description": "Sending an existing coupon code in this field will return the corresponding discount in the purchase. Use the [cart simulation](https://developers.vtex.com/vtex-rest-api/reference/orderform#orderformsimulation) request to check which coupons might apply before placing the order.",
                "type": "string"
              },
              "utmCampaign": {
                "default": "Black friday",
                "description": "UTM campaign",
                "type": "string"
              },
              "utmMedium": {
                "default": "CPC",
                "description": "UTM medium.",
                "type": "string"
              },
              "utmSource": {
                "default": "Facebook",
                "description": "UTM source.",
                "type": "string"
              },
              "utmiCampaign": {
                "default": "utmi_campaign-exmaple",
                "description": "utmi_campaign (internal utm)",
                "type": "string"
              },
              "utmiPage": {
                "default": "utmi_page-example",
                "description": "utmi_page (internal utm)",
                "type": "string"
              },
              "utmiPart": {
                "default": "utmi_part-exmaple",
                "description": "utmi_part (internal utm)",
                "type": "string"
              }
            },
            "type": "object"
          },
          "openTextField": {
            "default": "open-text-example",
            "description": "Optional field meant to hold additional information about the order. We recommend using this field for text, not data formats such as `JSON` even if escaped. For that purpose, see [Creating customizable fields](https://developers.vtex.com/vtex-rest-api/docs/creating-customizable-fields-in-the-cart-with-checkout-api-1)",
            "type": "string"
          },
          "paymentData": {
            "description": "Payment infomation.",
            "properties": {
              "giftCardMessages": {
                "description": "Array of gift card messages.",
                "items": {
                  "default": "message-example"
                },
                "type": "array"
              },
              "giftCards": {
                "description": "Gift card information, if it applies to the order.",
                "items": {
                  "properties": {
                    "balance": {
                      "description": "Gift card balance.",
                      "example": 500,
                      "type": "integer"
                    },
                    "id": {
                      "description": "Gift card ID.",
                      "example": "1390324156495k195pmab4rall3di",
                      "type": "string"
                    },
                    "inUse": {
                      "description": "Indicates whether gift card is in use.",
                      "example": true,
                      "type": "boolean"
                    },
                    "isSpecialCard": {
                      "description": "Indicates whether gift card is special.",
                      "example": false,
                      "type": "boolean"
                    },
                    "name": {
                      "description": "Gift card name.",
                      "example": "name-example",
                      "type": "string"
                    },
                    "redemptionCode": {
                      "description": "Gift card redemption code.",
                      "example": "HYUO-TEZZ-QFFT-HTFR",
                      "type": "string"
                    },
                    "value": {
                      "description": "Gift card value.",
                      "example": 500,
                      "type": "integer"
                    }
                  },
                  "required": [
                    "redemptionCode",
                    "value"
                  ],
                  "type": "object"
                },
                "type": "array"
              },
              "paymentSystems": {
                "description": "Information on payment systems.",
                "items": {
                  "properties": {
                    "description": {
                      "default": "description-example",
                      "description": "Description.",
                      "type": "string"
                    },
                    "groupName": {
                      "description": "Payment group name.",
                      "example": "creditCardPaymentGroup",
                      "type": "string"
                    },
                    "id": {
                      "description": "Payment system ID.",
                      "example": 2,
                      "type": "integer"
                    },
                    "isCustom": {
                      "default": false,
                      "description": "Indicates whether it is custom.",
                      "type": "boolean"
                    },
                    "name": {
                      "description": "Payment system name.",
                      "example": "Visa",
                      "type": "string"
                    },
                    "requiresDocument": {
                      "default": false,
                      "description": "Indicates whether a document is required.",
                      "type": "boolean"
                    },
                    "selected": {
                      "default": false,
                      "description": "Indicates whether this payment system has been selected.",
                      "type": "boolean"
                    },
                    "stringId": {
                      "default": "12345abc",
                      "description": "String ID.",
                      "type": "string"
                    },
                    "template": {
                      "default": "creditCardPaymentGroup-template",
                      "description": "Template.",
                      "type": "string"
                    },
                    "validator": {
                      "description": "Payment system validator.",
                      "properties": {
                        "cardCodeMask": {
                          "description": "Card code mask.",
                          "example": "999",
                          "type": "string"
                        },
                        "cardCodeRegex": {
                          "description": "Card code regular expression.",
                          "example": "[^0-9]",
                          "type": "string"
                        },
                        "mask": {
                          "description": "Validator mask.",
                          "example": "9999 9999 9999 9999",
                          "type": "string"
                        },
                        "regex": {
                          "description": "",
                          "example": "^4",
                          "type": "string"
                        },
                        "weights": {
                          "default": [
                            2,
                            1,
                            2,
                            1,
                            2,
                            1,
                            2,
                            1,
                            2,
                            1,
                            2,
                            1,
                            2,
                            1,
                            2,
                            1,
                            2,
                            1,
                            2
                          ],
                          "description": "Weights.",
                          "items": {
                            "type": "integer"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "payments": {
                "description": "Payment information.",
                "items": {
                  "description": "",
                  "properties": {
                    "accountId": {
                      "default": "accountID-example",
                      "description": "Account ID.",
                      "type": "string"
                    },
                    "bin": {
                      "default": "2",
                      "description": "Payment bin.",
                      "type": "string"
                    },
                    "installments": {
                      "default": 2,
                      "description": "Number of installments.",
                      "type": "integer"
                    },
                    "paymentSystem": {
                      "default": "12",
                      "description": "Payment system.",
                      "type": "string"
                    },
                    "referenceValue": {
                      "default": 16175,
                      "description": "Reference value for calculating interest rates, in case it applies.",
                      "type": "integer"
                    },
                    "value": {
                      "default": 16175,
                      "description": "Value including interest, in case it applies.",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "paymentSystem",
                    "referenceValue",
                    "value",
                    "installments"
                  ],
                  "type": "object"
                },
                "type": "array"
              },
              "updateStatus": {
                "default": "updated",
                "description": "Indicates whether this object's information is up to date according to the order's items. An order can not be placed if `\"outdated\"`",
                "type": "string"
              }
            },
            "required": [
              "payments"
            ],
            "type": "object"
          },
          "salesAssociateData": {
            "description": "Sales Associate information.",
            "properties": {
              "salesAssociateId": {
                "default": "seller123",
                "description": "Sales Associate (Seller) identification code. All information should be registered by the merchant. Maximum of 100 characters.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "shippingData": {
            "description": "Shipping information.",
            "properties": {
              "address": {
                "description": "Shipping address.\n\r\n\rFor customers already in your data base, it is enough to send this object only with an `addressId`, which you may obtain from a [Cart simulation request](https://developers.vtex.com/vtex-rest-api/reference/shopping-cart#cartsimulation), for example.",
                "properties": {
                  "addressId": {
                    "default": "Home",
                    "description": "Address ID.",
                    "type": "string"
                  },
                  "addressType": {
                    "description": "Type of address. For example, `Residential` or `Pickup`, among others.",
                    "example": "residential",
                    "type": "string"
                  },
                  "city": {
                    "default": "Rio de Janeiro",
                    "description": "City of the shipping address.",
                    "type": "string"
                  },
                  "complement": {
                    "default": "3rd floor",
                    "description": "Complement to the shipping address in case it applies.",
                    "type": "string"
                  },
                  "country": {
                    "default": "BRA",
                    "description": "Three letter ISO code of the country of the shipping address.",
                    "type": "string"
                  },
                  "geoCoordinates": {
                    "default": [
                      -47.924747467041016,
                      -15.832582473754883
                    ],
                    "description": "Array containing two floats with geocoordinates, first longitude, then latitude.",
                    "items": {
                      "example": -47.924747467041016,
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "neighborhood": {
                    "default": "Botafogo",
                    "description": "Neighborhood of the shipping address.",
                    "type": "string"
                  },
                  "number": {
                    "default": "300",
                    "description": "Number of the building, house or apartment in the shipping address.",
                    "type": "string"
                  },
                  "postalCode": {
                    "default": "12345-000",
                    "description": "Postal Code.",
                    "type": "string"
                  },
                  "receiverName": {
                    "default": "receiver-name",
                    "description": "Name of the person who is going to receive the order.",
                    "type": "string"
                  },
                  "reference": {
                    "default": "Grey building",
                    "description": "Complement that might help locate the shipping address more precisely in case of delivery.",
                    "type": "string"
                  },
                  "state": {
                    "default": "Rio de Janeiro",
                    "description": "State of the shipping address.",
                    "type": "string"
                  },
                  "street": {
                    "default": "Praia de Botafogo",
                    "description": "Street of the shipping address.",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "logisticsInfo": {
                "description": "Array of objects containing logistics information of each item.",
                "items": {
                  "properties": {
                    "deliveryWindow": {
                      "description": "In case of scheduled delivery, this object will contain information on the delivery window selected by the shopper.",
                      "properties": {
                        "endDateUtc": {
                          "default": "2021-07-13T23:59:59+00:00",
                          "description": "Delivery window ending day and time in UTC.",
                          "type": "string"
                        },
                        "lisPrice": {
                          "default": 0,
                          "description": "Delivery window list price.",
                          "type": "integer"
                        },
                        "price": {
                          "default": 0,
                          "description": "Delivery window price.",
                          "type": "integer"
                        },
                        "startDateUtc": {
                          "default": "2021-07-13T00:00:00+00:00",
                          "description": "Delivery window starting day and time in UTC.",
                          "type": "string"
                        },
                        "tax": {
                          "default": 0,
                          "description": "Delivery window tax.",
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "itemIndex": {
                      "default": 0,
                      "description": "Index of the item in the `items` array, starting from 0.",
                      "type": "integer"
                    },
                    "lockTTL": {
                      "default": "8d",
                      "description": "Logistics reservation waiting time.",
                      "type": "string"
                    },
                    "price": {
                      "default": 1099,
                      "description": "Shipping price for the item. Does not account for the whole order's shipping price.",
                      "type": "integer"
                    },
                    "selectedSla": {
                      "default": "Express",
                      "description": "Selected shipping option",
                      "type": "string"
                    },
                    "shippingEstimate": {
                      "default": "7d",
                      "description": "Estimated time until delivery for the item.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "itemIndex",
                    "selectedSla",
                    "price"
                  ],
                  "type": "object"
                },
                "type": "array"
              },
              "updateStatus": {
                "default": "updated",
                "description": "Indicate whether this object's information is up to date according to the order's items. An order can not be placed if `\"outdated\"`",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "required": [
          "items",
          "clientProfileData",
          "shippingData",
          "paymentData"
        ],
        "type": "object"
      }
    },
    "required": [
      "Content-Type",
      "Accept"
    ]
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "https://vtex.local/api/checkout/pub/orders{?sc}"
    },
    "headers": {
      "Content-Type": {
        "$": "Content-Type"
      },
      "Accept": {
        "$": "Accept"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**orderForm**: This is `null` since this request does not depend on any previously existing orderForm information in the platform.",
            "**orders**: Information on each of the orders created.",
            [
              "**transactionData**: Information on each transaction pertinent to the order placed.",
              {
                "$ul": [
                  "**gatewayCallbackTemplatePath**: Template of the gateway callback path, which may later be used to send information about the transaction.",
                  "**merchantTransactions**: Information on each merchant transaction.",
                  "**receiverUri**: Receiver URI."
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
