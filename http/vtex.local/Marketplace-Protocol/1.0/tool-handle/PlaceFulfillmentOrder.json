{
  "name": "PlaceFulfillmentOrder",
  "description": "Creates fulfillment order, meaning that it is an order for the seller's side in a sale made through a marketplace. This order assumes the transaction itself has already happened on the marketplace's side and, therfore, cares only about the fulfillment side.\n\r\n\r> If you plan to integrate external orders with possible [Price divergence](https://help.vtex.com/en/tutorial/price-divergence-rule--6RlFLhD1rIRRshl83KnCjW#) be mindful of the `isCreatedAsync` request body field. \n\nFor a detailed explanation of the steps required to develop a custom connector to become an external marketplace for VTEX sellers, check out our complete [External Marketplace Integration Guide](https://developers.vtex.com/vtex-rest-api/docs/external-marketplace-integration-guide).",
  "parameters": {
    "type": "object",
    "properties": {
      "accountName": {
        "default": "apiexamples",
        "type": "string",
        "description": "Name of the VTEX account. Used as part of the URL."
      },
      "environment": {
        "default": "vtexcommercestable",
        "type": "string",
        "description": "Environment to be used. It is passed as part of the URL."
      },
      "Content-Type": {
        "default": "application/json",
        "type": "string",
        "description": "Type of the content being sent."
      },
      "Accept": {
        "default": "application/json",
        "type": "string",
        "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
      },
      "sc": {
        "example": "1",
        "type": "string",
        "description": "Sales channel."
      },
      "affiliateId": {
        "example": "MKP",
        "type": "string",
        "description": "ID identifying the marketplace where the order originates. This ID is configured in the seller's VTEX account, and should be informed to the marketplace."
      },
      "body": {
        "properties": {
          "clientProfileData": {
            "description": "Customer's profile information.",
            "properties": {
              "corporateDocument": {
                "description": "Corporate document, if the customer is a legal entity.",
                "example": "12345678000100",
                "nullable": true,
                "type": "string"
              },
              "corporateName": {
                "description": "Company name, if the customer is a legal entity.",
                "example": "company-name",
                "nullable": true,
                "type": "string"
              },
              "corporatePhone": {
                "description": "Corporate phone number, if the customer is a legal entity.",
                "example": "+551100988887777",
                "nullable": true,
                "type": "string"
              },
              "document": {
                "description": "Document informed by the customer. Validation depends on the country.",
                "example": "123456789",
                "type": "string"
              },
              "documentType": {
                "description": "Type of the document informed by the customer.",
                "example": "cpf",
                "type": "string"
              },
              "email": {
                "description": "Customer's email address.",
                "example": "customer@examplemail.com",
                "type": "string"
              },
              "firstName": {
                "description": "Customer's first name.",
                "example": "first-name",
                "type": "string"
              },
              "isCorporate": {
                "description": "`true` if the customer is a legal entity.",
                "example": false,
                "nullable": true,
                "type": "boolean"
              },
              "lastName": {
                "description": "Customer's last name.",
                "example": "last-name",
                "type": "string"
              },
              "phone": {
                "description": "Customer's phone number.",
                "example": "+55110988887777",
                "type": "string"
              },
              "stateInscription": {
                "description": "State inscription, if the customer is a legal entity.",
                "example": "12345678",
                "nullable": true,
                "type": "string"
              },
              "tradeName": {
                "description": "Trade name, if the customer is a legal entity.",
                "example": "trade-name",
                "nullable": true,
                "type": "string"
              }
            },
            "required": [
              "email",
              "firstName",
              "lastName",
              "documentType",
              "document"
            ],
            "type": "object"
          },
          "isCreatedAsync": {
            "description": "Indicates whether an order is created. It must be `true` if an order is being placed with [Price divergence](https://help.vtex.com/en/tutorial/price-divergence-rule--6RlFLhD1rIRRshl83KnCjW#), otherwise the request will not work.",
            "example": false,
            "type": "boolean"
          },
          "items": {
            "description": "Array of objects containing information on each of the order's items.",
            "items": {
              "example": {
                "id": "123456789",
                "quantity": 1,
                "seller": "1"
              },
              "properties": {
                "attachments": {
                  "description": "Array containing information on attachments.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "bundleItems": {
                  "description": "Information on services sold along with the SKU. Example: a gift package.",
                  "items": {
                    "properties": {
                      "id": {
                        "description": "Service identifier.",
                        "example": 1034,
                        "type": "integer"
                      },
                      "name": {
                        "description": "Service name.",
                        "example": "name-example",
                        "type": "string"
                      },
                      "price": {
                        "description": "Service price. The last two digits are the cents.",
                        "example": 199,
                        "type": "integer"
                      },
                      "type": {
                        "description": "Service type.",
                        "example": "type-example",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "commission": {
                  "description": "Comission.",
                  "example": 10,
                  "type": "integer"
                },
                "freightCommission": {
                  "description": "Freight comission",
                  "example": 10,
                  "type": "integer"
                },
                "id": {
                  "description": "The SKU ID.",
                  "example": "123",
                  "type": "string"
                },
                "isGift": {
                  "default": false,
                  "description": "Indicates whether the order is a gift.",
                  "type": "boolean"
                },
                "itemAttachment": {
                  "description": "Item attachment.",
                  "properties": {
                    "content": {
                      "description": "Content referring to the customization requested by the customer.",
                      "example": "content-example",
                      "type": "string"
                    },
                    "name": {
                      "description": "Attachment name.",
                      "example": "name-example",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "measurementUnit": {
                  "description": "SKU measurement unit.",
                  "example": "g",
                  "type": "string"
                },
                "price": {
                  "description": "Item price within the context of the order without separating cents. For example, $24.99 is represented `2499`.",
                  "example": 2499,
                  "type": "integer"
                },
                "priceTags": {
                  "description": "Array of price tags, each of which, modifies the price in some way, like discounts or rates that apply to the item in the context of the order.",
                  "items": {
                    "properties": {
                      "identifier": {
                        "description": "Price tag identifier.",
                        "example": "1234abc-5678b-1234c",
                        "type": "string"
                      },
                      "isPercentual": {
                        "default": false,
                        "description": "`true` if price tag value is applied through a percentage.",
                        "type": "boolean"
                      },
                      "name": {
                        "description": "Price tag name.",
                        "example": "discount@name-1234abc-5678b-1234c",
                        "type": "string"
                      },
                      "rawValue": {
                        "description": "Price tag value.",
                        "example": -12,
                        "type": "integer"
                      },
                      "value": {
                        "description": "Price tag raw value.",
                        "example": -1200,
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "quantity": {
                  "description": "The quantity of items of this specific SKU in the cart to be simulated.",
                  "example": 1,
                  "format": "int32",
                  "type": "integer"
                },
                "seller": {
                  "description": "The ID of the seller responsible for this SKU. This ID can be found in your VTEX Admin.",
                  "example": "1",
                  "type": "string"
                },
                "unitMultiplier": {
                  "description": "SKU unit multiplier.",
                  "example": 1,
                  "type": "integer"
                }
              },
              "required": [
                "id",
                "quantity",
                "seller"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "marketingData": {
            "properties": {
              "utmCampaign": {
                "description": "UTM campaign",
                "example": "Black friday",
                "type": "string"
              },
              "utmMedium": {
                "description": "UTM medium.",
                "example": "CPC",
                "type": "string"
              },
              "utmSource": {
                "description": "UTM source.",
                "example": "Facebook",
                "type": "string"
              },
              "utmiCampaign": {
                "description": "utmi_campaign (internal utm)",
                "example": "utmi_campaign-exmaple",
                "type": "string"
              },
              "utmiPage": {
                "description": "utmi_page (internal utm)",
                "example": "utmi_page-example",
                "type": "string"
              },
              "utmiPart": {
                "description": "utmi_part (internal utm)",
                "example": "utmi_part-exmaple",
                "type": "string"
              }
            },
            "type": "object"
          },
          "marketplaceOrderId": {
            "description": "ID of the order in the marketplace.",
            "example": "123456789",
            "type": "string"
          },
          "marketplacePaymentValue": {
            "description": "Value of the payment made to the marketplace.",
            "example": 100,
            "type": "integer"
          },
          "marketplaceServicesEndpoint": {
            "description": "Endpoint provided by the marketplace for post purchase communication. Should be an URL, containing protocol, host, path and query string (in case it applies).",
            "example": "https://exampleseller.marketplaceservices.com",
            "type": "string"
          },
          "openTextField": {
            "description": "Optional field meant to hold additional information about the order. We recommend using this field for text, not data formats such as `JSON` even if escaped. For that purpose, see [Creating customizable fields](https://developers.vtex.com/vtex-rest-api/docs/creating-customizable-fields-in-the-cart-with-checkout-api-1)",
            "example": "open-text-example",
            "type": "string"
          },
          "paymentData": {
            "default": null,
            "description": "In other contexts, this field tipically holds an object with payment information. However, since the payment is processed by the marketplace, it will be sent to the seller as `null` in this context.",
            "nullable": true,
            "type": "object"
          },
          "shippingData": {
            "description": "Shipping information.",
            "properties": {
              "address": {
                "description": "Shipping address.",
                "properties": {
                  "addressId": {
                    "description": "Address ID.",
                    "example": "Home",
                    "type": "string"
                  },
                  "addressType": {
                    "description": "Type of address. For example, `Residential` or `Pickup`, among others.",
                    "example": "residential",
                    "type": "string"
                  },
                  "city": {
                    "description": "City of the shipping address.",
                    "example": "Rio de Janeiro",
                    "type": "string"
                  },
                  "complement": {
                    "description": "Complement to the shipping address in case it applies.",
                    "example": "3rd floor",
                    "type": "string"
                  },
                  "country": {
                    "description": "Three letter ISO code of the country of the shipping address.",
                    "example": "BRA",
                    "type": "string"
                  },
                  "geoCoordinates": {
                    "description": "Array with two strings with geocoordinates, first latitude, then longitude.",
                    "items": {
                      "example": "00.00000",
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "neighborhood": {
                    "description": "Neighborhood of the shipping address.",
                    "example": "Botafogo",
                    "type": "string"
                  },
                  "number": {
                    "description": "Number of the building, house or apartment in the shipping address.",
                    "example": "300",
                    "type": "string"
                  },
                  "postalCode": {
                    "description": "Postal Code. Validation depends on the country.",
                    "example": "12345000",
                    "type": "string"
                  },
                  "receiverName": {
                    "description": "Name of the person who is going to receive the order.",
                    "example": "receiver-name",
                    "type": "string"
                  },
                  "reference": {
                    "description": "Complement that might help locate the shipping address more precisely in case of delivery.",
                    "example": "Grey building",
                    "type": "string"
                  },
                  "state": {
                    "description": "State of the shipping address.",
                    "example": "Rio de Janeiro",
                    "type": "string"
                  },
                  "street": {
                    "description": "Street of the shipping address.",
                    "example": "Praia de Botafogo",
                    "type": "string"
                  }
                },
                "required": [
                  "addressType",
                  "receiverName",
                  "postalCode",
                  "city",
                  "state",
                  "country",
                  "street",
                  "number"
                ],
                "type": "object"
              },
              "logisticsInfo": {
                "description": "Array of objects containing logistics information of each item.",
                "items": {
                  "properties": {
                    "deliveryWindow": {
                      "description": "In case of scheduled delivery, this object will contain information on the delivery window selected by the shopper.",
                      "properties": {
                        "endDateUtc": {
                          "description": "Delivery window ending day and time in UTC.",
                          "example": "2021-07-13T23:59:59+00:00",
                          "type": "string"
                        },
                        "lisPrice": {
                          "default": 0,
                          "description": "Delivery window list price.",
                          "type": "integer"
                        },
                        "price": {
                          "default": 0,
                          "description": "Delivery window price.",
                          "type": "integer"
                        },
                        "startDateUtc": {
                          "description": "Delivery window starting day and time in UTC.",
                          "example": "2021-07-13T00:00:00+00:00",
                          "type": "string"
                        },
                        "tax": {
                          "default": 0,
                          "description": "Delivery window tax.",
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "itemIndex": {
                      "description": "Index of the item in the `items` array, starting from 0.",
                      "example": 0,
                      "type": "integer"
                    },
                    "lockTTL": {
                      "description": "Logistics reservation waiting time.",
                      "example": "8d",
                      "type": "string"
                    },
                    "price": {
                      "description": "Shipping price for the item. Does not account for the whole order's shipping price.",
                      "example": 1099,
                      "type": "integer"
                    },
                    "selectedSla": {
                      "description": "Selected shipping option",
                      "example": "Express",
                      "type": "string"
                    },
                    "shippingEstimate": {
                      "description": "Estimated time until delivery for the item.",
                      "example": "7d",
                      "type": "string"
                    }
                  },
                  "required": [
                    "itemIndex",
                    "selectedSla",
                    "price"
                  ],
                  "type": "object"
                },
                "type": "array"
              },
              "updateStatus": {
                "description": "Indicate whether this object's information is up to date according to the order's items. An order can not be placed if `\"outdated\"`",
                "example": "updated",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "required": [
          "marketplaceOrderId",
          "marketplaceServicesEndpoint",
          "marketplacePaymentValue",
          "items",
          "clientProfileData",
          "shippingData"
        ],
        "type": "object"
      }
    },
    "required": [
      "accountName",
      "environment",
      "Content-Type",
      "Accept",
      "affiliateId"
    ]
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://vtex.local/{accountName}.{environment}.com.br/api/fulfillment/pvt/orders{?sc,affiliateId}"
    },
    "headers": {
      "Content-Type": {
        "$": "Content-Type"
      },
      "Accept": {
        "$": "Accept"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {}
}
