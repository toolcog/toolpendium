{
  "name": "MatchMultiple",
  "description": "This endpoint allows the user to bulk approve, deny, or associate received SKUs. In a single request, you can match up to 25 received SKUs from your sellers.\n\nThrough the `actionName` attribute you can select the operation you want to apply to the received SKU. \n\nActions include: \n\n1. `newproduct`: match the SKU as a new product. \n\n2. `skuassociation`: associate the received SKU to an existing SKU. \n\n3. `productassociation`: associate the received SKU to an existing product. \n\n4. `deny`: deny the received SKU.",
  "parameters": {
    "type": "object",
    "properties": {
      "accountName": {
        "default": "apiexamples",
        "type": "string",
        "description": "Name of the VTEX account. Used as part of the URL"
      },
      "Content-Type": {
        "default": "application/json",
        "type": "string",
        "description": "Describes the type of the content being sent."
      },
      "Accept": {
        "default": "application/json",
        "type": "string",
        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand"
      },
      "actionName": {
        "default": "newprodcut",
        "type": "string",
        "description": "This field refers to the operation you choose to apply to received SKUs. Values include: newproduct, skuassociation, productassociation or deny."
      },
      "body": {
        "items": {
          "$ref": "#/$defs/MatchMultiple"
        },
        "description": ""
      }
    },
    "required": [
      "accountName",
      "Content-Type",
      "Accept",
      "actionName",
      "body"
    ],
    "$defs": {
      "MatchMultiple": {
        "items": {},
        "properties": {
          "object": {
            "properties": {
              "brandId": {
                "default": 1234567,
                "description": "Marketplace's Brand ID that the product belongs to, configured in the Catalog. It should be the brand chosen for the received SKU to be matched with. The `brandId` is already mapped through the [Get SKU Suggestion by ID](https://developers.vtex.com/vtex-rest-api/reference/getsuggestion). This field is nulled when the inserted value is 0, and is mandatory for the 'newproduct' action.",
                "format": "int32",
                "nullable": true,
                "type": "integer"
              },
              "categoryId": {
                "default": 12,
                "description": "Marketplace's Category ID that the product belongs to, configured in the Catalog. It should be the category chosen for the received SKU to be matched with. The `categoryId` is already mapped through the [Get SKU Suggestion by ID](https://developers.vtex.com/vtex-rest-api/reference/getsuggestion). You can choose to keep the same suggested `categoryID`, or overwrite it with another value in this request. This field is nulled when the inserted value is 0.",
                "format": "int32",
                "nullable": true,
                "type": "integer"
              },
              "itemId": {
                "default": "1234567",
                "description": "This field can be used to link any string that identifies that SKU. Its most common use is the seller's SKU ID.",
                "type": "string"
              },
              "matchId": {
                "default": "vtex-matcher",
                "description": "Whenever an SKU suggestion is matched, it is associated to a unique ID. Fill in this field with the matchId you wish to filter by. The `matchId`'s value can be obtained through the [Get SKU Suggestion by ID](https://developers.vtex.com/vtex-rest-api/reference/getsuggestion) endpoint.",
                "type": "string"
              },
              "matcherId": {
                "default": "vtex-matcher",
                "description": "Identifies the matching entity. It can be either VTEX's matcher, or an external matcher developed by partners, for example. The `matcherId`'s value can be obtained through the [Get SKU Suggestion by ID](https://developers.vtex.com/vtex-rest-api/reference/getsuggestion) endpoint.",
                "type": "string"
              },
              "productRef": {
                "default": "123 product ref",
                "description": "Fill in this field on your request when the matched item is a product. This field is mandatory for the 'productassociation' action.",
                "nullable": true,
                "type": "string"
              },
              "sellerId": {
                "default": "seller123",
                "description": "A string that identifies the seller in the marketplace. This ID must be created by the marketplace and informed to the seller before the integration is built.",
                "type": "string"
              },
              "skuRef": {
                "default": "123 sku ref",
                "description": "Fill in this field on your request when the matched item is an SKU. This field is mandatory for the 'skuassociation' action.",
                "nullable": true,
                "type": "string"
              },
              "versionId": {
                "default": "",
                "description": "Whenever an SKU Suggestion is updated or changed, a new version of the original one is created. All versions are logged, so you can search for previous our current states of SKU suggestions. This field is the versionId associated to the version you choose to search for. You can get this field's value through the [Get SKU Suggestion by ID](https://developers.vtex.com/vtex-rest-api/reference/getsuggestion). through the `latestVersionId` field.",
                "type": "string"
              }
            },
            "required": [
              "itemId",
              "versionId",
              "matchId",
              "matcherId",
              "categoryId",
              "sellerId"
            ],
            "title": "",
            "type": "object"
          }
        },
        "title": "MatchMultiple",
        "type": "array"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "https://vtex.local/suggestions/matches/action/{actionName}{?accountName}"
    },
    "headers": {
      "Content-Type": {
        "$": "Content-Type"
      },
      "Accept": {
        "$": "Accept"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {}
}
