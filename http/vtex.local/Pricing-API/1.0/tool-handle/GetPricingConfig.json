{
  "name": "GetPricingConfig",
  "description": "Retrieves Pricing Configuration.\r\n## Response body example\r\n\r\n```json\r\n{\r\n    \"hasMigrated\": true,\r\n    \"migrationStatus\": \"Completed\",\r\n    \"defaultMarkup\": 100,\r\n    \"priceVariation\": {\r\n        \"upperLimit\": null,\r\n        \"lowerLimit\": null\r\n    },\r\n    \"minimumMarkups\": {\r\n        \"1\": 100,\r\n        \"2\": 90\r\n    },\r\n    \"tradePolicyConfigs\": [],\r\n    \"sellersToOverride\": [],\r\n    \"hasPriceInheritance\": false,\r\n    \"priceInheritance\": \"never\",\r\n    \"hasOptionalBasePrice\": false,\r\n    \"blockAccount\": false,\r\n    \"blockedRoutes\": null,\r\n    \"priceTableSelectionStrategy\": \"first\",\r\n    \"priceTableLimit\": null\r\n}\r\n```",
  "parameters": {
    "type": "object",
    "properties": {
      "Content-Type": {
        "default": "application/json",
        "type": "string",
        "description": "Describes the type of the content being sent."
      },
      "Accept": {
        "example": "application/json",
        "type": "string",
        "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
      }
    },
    "required": [
      "Content-Type",
      "Accept"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://api.vtex.com/DefaultParameterValue/pricing/pricing/config"
    },
    "headers": {
      "Content-Type": {
        "$": "Content-Type"
      },
      "Accept": {
        "$": "Accept"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Pricing Configuration response"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**blockAccount**: Defines if access to the Pricing APIs is blocked for external requests.",
            "**blockedRoutes**: Array with all blocked routes.",
            "**defaultMarkup**: Account default markup.",
            "**hasMigrated**: Defines if the account has migrated to Pricing V2.",
            "**hasOptionalBasePrice**: Defines if optional base price is allowed.",
            "**hasPriceInheritance**: Deprecated. Use the `priceInheritance` field instead.",
            "**migrationStatus**: Pricing V2 migration status.",
            "**minimumMarkups**: Account minimum markup.",
            "**priceInheritance**: Condition of price inheritance from its parent account. This field can have three possible values: `never` if the store should never inherit prices, `nonexistent` if the store should only inherit prices in case of nonexistent prices for a given product, or `always` if the store should always inherit prices, regardless of its own prices.",
            "**priceTableLimit**: Price Table Limit.",
            "**priceTableSelectionStrategy**: The strategy used to get prices when there is more than one option. Possible values: `first`, `highest`, `lowest`. Default: `first`. (default: first)",
            [
              "**priceVariation**: Price Variation object.",
              {
                "$ul": [
                  "**lowerLimit**: Lower variation limit.",
                  "**upperLimit**: Upper variation limit."
                ]
              }
            ],
            "**sellersToOverride**: Overrides prices from sellers.",
            "**tradePolicyConfigs**: Trade Policy Configurations array."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
