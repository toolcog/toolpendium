{
  "name": "repoGetAllCommits",
  "description": "Get a list of all commits from a repository",
  "parameters": {
    "type": "object",
    "properties": {
      "owner": {
        "type": "string",
        "description": "owner of the repo"
      },
      "repo": {
        "type": "string",
        "description": "name of the repo"
      },
      "sha": {
        "type": "string",
        "description": "SHA or branch to start listing commits from (usually 'master')"
      },
      "path": {
        "type": "string",
        "description": "filepath of a file/dir"
      },
      "stat": {
        "type": "boolean",
        "description": "include diff stats for every commit (disable for speedup, default 'true')"
      },
      "page": {
        "type": "integer",
        "description": "page number of results to return (1-based)"
      },
      "limit": {
        "type": "integer",
        "description": "page size of results (ignored if used with 'path')"
      }
    },
    "required": [
      "owner",
      "repo"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "/api/v1/repos/{owner}/{repo}/commits{?sha,path,stat,page,limit}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Commit contains information generated from a Git commit. list"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**author**: User represents a user",
              {
                "$ul": [
                  "**active**: Is user active",
                  "**avatar_url**: URL to the user's avatar",
                  "**created**",
                  "**description**: the user's description",
                  "**email**",
                  "**followers_count**: user counts",
                  "**following_count**",
                  "**full_name**: the user's full name",
                  "**id**: the user's id",
                  "**is_admin**: Is the user an administrator",
                  "**language**: User locale",
                  "**last_login**",
                  "**location**: the user's location",
                  "**login**: the user's username",
                  "**login_name**: the user's authentication sign-in name. (default: empty)",
                  "**prohibit_login**: Is user login prohibited",
                  "**restricted**: Is user restricted",
                  "**starred_repos_count**",
                  "**visibility**: User visibility level option: public, limited, private",
                  "**website**: the user's website"
                ]
              }
            ],
            [
              "**commit**",
              {
                "$ul": [
                  [
                    "**author**",
                    {
                      "$ul": [
                        "**date**",
                        "**email**",
                        "**name**"
                      ]
                    }
                  ],
                  [
                    "**committer**",
                    {
                      "$ul": [
                        "**date**",
                        "**email**",
                        "**name**"
                      ]
                    }
                  ],
                  "**message**",
                  [
                    "**tree**",
                    {
                      "$ul": [
                        "**created**",
                        "**sha**",
                        "**url**"
                      ]
                    }
                  ],
                  "**url**",
                  [
                    "**verification**: PayloadCommitVerification represents the GPG verification of a commit",
                    {
                      "$ul": [
                        "**payload**",
                        "**reason**",
                        "**signature**",
                        [
                          "**signer**: PayloadUser represents the author or committer of a commit",
                          {
                            "$ul": [
                              "**email**",
                              "**name**: Full name of the commit author",
                              "**username**"
                            ]
                          }
                        ],
                        "**verified**"
                      ]
                    }
                  ]
                ]
              }
            ],
            [
              "**committer**: User represents a user",
              {
                "$ul": [
                  "**active**: Is user active",
                  "**avatar_url**: URL to the user's avatar",
                  "**created**",
                  "**description**: the user's description",
                  "**email**",
                  "**followers_count**: user counts",
                  "**following_count**",
                  "**full_name**: the user's full name",
                  "**id**: the user's id",
                  "**is_admin**: Is the user an administrator",
                  "**language**: User locale",
                  "**last_login**",
                  "**location**: the user's location",
                  "**login**: the user's username",
                  "**login_name**: the user's authentication sign-in name. (default: empty)",
                  "**prohibit_login**: Is user login prohibited",
                  "**restricted**: Is user restricted",
                  "**starred_repos_count**",
                  "**visibility**: User visibility level option: public, limited, private",
                  "**website**: the user's website"
                ]
              }
            ],
            "**created**",
            "**files**",
            "**html_url**",
            "**parents**",
            "**sha**",
            [
              "**stats**: CommitStats is statistics for a RepoCommit",
              {
                "$ul": [
                  "**additions**",
                  "**deletions**",
                  "**total**"
                ]
              }
            ],
            "**url**"
          ]
        },
        {
          "$each": "$.body.*",
          "$as": "item",
          "$block": [
            {
              "$h2": "Item"
            },
            {
              "$lang": "json",
              "$code": {
                "$encode": "json",
                "$indent": true,
                "$content": {
                  "$": "$.item"
                }
              }
            }
          ]
        }
      ]
    },
    "409": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "APIError is an api error with a message",
        "**Key properties:**",
        {
          "$ul": [
            "**message**",
            "**url**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
