{
  "name": "repoCreateBranch",
  "description": "Create a branch",
  "parameters": {
    "type": "object",
    "properties": {
      "owner": {
        "type": "string",
        "description": "owner of the repo"
      },
      "repo": {
        "type": "string",
        "description": "name of the repo"
      },
      "body": {
        "$ref": "#/$defs/CreateBranchRepoOption"
      }
    },
    "required": [
      "owner",
      "repo"
    ],
    "$defs": {
      "CreateBranchRepoOption": {
        "description": "CreateBranchRepoOption options when creating a branch in a repository",
        "properties": {
          "new_branch_name": {
            "description": "Name of the branch to create",
            "type": "string",
            "uniqueItems": true,
            "x-go-name": "BranchName"
          },
          "old_branch_name": {
            "description": "Name of the old branch to create from",
            "type": "string",
            "uniqueItems": true,
            "x-go-name": "OldBranchName"
          }
        },
        "required": [
          "new_branch_name"
        ],
        "type": "object",
        "x-go-package": "code.gitea.io/gitea/modules/structs"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "/api/v1/repos/{owner}/{repo}/branches"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Branch represents a repository branch",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**commit**: PayloadCommit represents a commit",
              {
                "$ul": [
                  "**added**",
                  [
                    "**author**: PayloadUser represents the author or committer of a commit",
                    {
                      "$ul": [
                        "**email**",
                        "**name**: Full name of the commit author",
                        "**username**"
                      ]
                    }
                  ],
                  [
                    "**committer**: PayloadUser represents the author or committer of a commit",
                    {
                      "$ul": [
                        "**email**",
                        "**name**: Full name of the commit author",
                        "**username**"
                      ]
                    }
                  ],
                  "**id**: sha1 hash of the commit",
                  "**message**",
                  "**modified**",
                  "**removed**",
                  "**timestamp**",
                  "**url**",
                  [
                    "**verification**: PayloadCommitVerification represents the GPG verification of a commit",
                    {
                      "$ul": [
                        "**payload**",
                        "**reason**",
                        "**signature**",
                        [
                          "**signer**: PayloadUser represents the author or committer of a commit",
                          {
                            "$ul": [
                              "**email**",
                              "**name**: Full name of the commit author",
                              "**username**"
                            ]
                          }
                        ],
                        "**verified**"
                      ]
                    }
                  ]
                ]
              }
            ],
            "**effective_branch_protection_name**",
            "**enable_status_check**",
            "**name**",
            "**protected**",
            "**required_approvals**",
            "**status_check_contexts**",
            "**user_can_merge**",
            "**user_can_push**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
