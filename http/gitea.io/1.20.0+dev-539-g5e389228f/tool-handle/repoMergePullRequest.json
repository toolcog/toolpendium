{
  "name": "repoMergePullRequest",
  "description": "Merge a pull request",
  "parameters": {
    "type": "object",
    "properties": {
      "owner": {
        "type": "string",
        "description": "owner of the repo"
      },
      "repo": {
        "type": "string",
        "description": "name of the repo"
      },
      "index": {
        "format": "int64",
        "type": "integer",
        "description": "index of the pull request to merge"
      },
      "body": {
        "$ref": "#/$defs/MergePullRequestOption"
      }
    },
    "required": [
      "owner",
      "repo",
      "index"
    ],
    "$defs": {
      "MergePullRequestOption": {
        "description": "MergePullRequestForm form for merging Pull Request",
        "properties": {
          "Do": {
            "enum": [
              "merge",
              "rebase",
              "rebase-merge",
              "squash",
              "manually-merged"
            ],
            "type": "string"
          },
          "MergeCommitID": {
            "type": "string"
          },
          "MergeMessageField": {
            "type": "string"
          },
          "MergeTitleField": {
            "type": "string"
          },
          "delete_branch_after_merge": {
            "type": "boolean",
            "x-go-name": "DeleteBranchAfterMerge"
          },
          "force_merge": {
            "type": "boolean",
            "x-go-name": "ForceMerge"
          },
          "head_commit_id": {
            "type": "string",
            "x-go-name": "HeadCommitID"
          },
          "merge_when_checks_succeed": {
            "type": "boolean",
            "x-go-name": "MergeWhenChecksSucceed"
          }
        },
        "required": [
          "Do"
        ],
        "type": "object",
        "x-go-name": "MergePullRequestForm",
        "x-go-package": "code.gitea.io/gitea/services/forms"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "/api/v1/repos/{owner}/{repo}/pulls/{index}/merge"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {}
}
