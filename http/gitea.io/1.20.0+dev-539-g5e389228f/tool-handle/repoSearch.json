{
  "name": "repoSearch",
  "description": "Search for repositories",
  "parameters": {
    "type": "object",
    "properties": {
      "q": {
        "type": "string",
        "description": "keyword"
      },
      "topic": {
        "type": "boolean",
        "description": "Limit search to repositories with keyword as topic"
      },
      "includeDesc": {
        "type": "boolean",
        "description": "include search of keyword within repository description"
      },
      "uid": {
        "format": "int64",
        "type": "integer",
        "description": "search only for repos that the user with the given id owns or contributes to"
      },
      "priority_owner_id": {
        "format": "int64",
        "type": "integer",
        "description": "repo owner to prioritize in the results"
      },
      "team_id": {
        "format": "int64",
        "type": "integer",
        "description": "search only for repos that belong to the given team id"
      },
      "starredBy": {
        "format": "int64",
        "type": "integer",
        "description": "search only for repos that the user with the given id has starred"
      },
      "private": {
        "type": "boolean",
        "description": "include private repositories this user has access to (defaults to true)"
      },
      "is_private": {
        "type": "boolean",
        "description": "show only pubic, private or all repositories (defaults to all)"
      },
      "template": {
        "type": "boolean",
        "description": "include template repositories this user has access to (defaults to true)"
      },
      "archived": {
        "type": "boolean",
        "description": "show only archived, non-archived or all repositories (defaults to all)"
      },
      "mode": {
        "type": "string",
        "description": "type of repository to search for. Supported values are \"fork\", \"source\", \"mirror\" and \"collaborative\""
      },
      "exclusive": {
        "type": "boolean",
        "description": "if `uid` is given, search only for repos that the user owns"
      },
      "sort": {
        "type": "string",
        "description": "sort repos by attribute. Supported values are \"alpha\", \"created\", \"updated\", \"size\", and \"id\". Default is \"alpha\""
      },
      "order": {
        "type": "string",
        "description": "sort order, either \"asc\" (ascending) or \"desc\" (descending). Default is \"asc\", ignored if \"sort\" is not specified."
      },
      "page": {
        "type": "integer",
        "description": "page number of results to return (1-based)"
      },
      "limit": {
        "type": "integer",
        "description": "page size of results"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "/api/v1/repos/search{?q,topic,includeDesc,uid,priority_owner_id,team_id,starredBy,private,is_private,template,archived,mode,exclusive,sort,order,page,limit}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "SearchResults results of a successful search",
        "**Key properties:**",
        {
          "$ul": [
            "**data**",
            "**ok**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
