{
  "name": "issueSearchIssues",
  "description": "Search for issues across the repositories that the user has access to",
  "parameters": {
    "type": "object",
    "properties": {
      "state": {
        "type": "string",
        "description": "whether issue is open or closed"
      },
      "labels": {
        "type": "string",
        "description": "comma separated list of labels. Fetch only issues that have any of this labels. Non existent labels are discarded"
      },
      "milestones": {
        "type": "string",
        "description": "comma separated list of milestone names. Fetch only issues that have any of this milestones. Non existent are discarded"
      },
      "q": {
        "type": "string",
        "description": "search string"
      },
      "priority_repo_id": {
        "format": "int64",
        "type": "integer",
        "description": "repository to prioritize in the results"
      },
      "type": {
        "type": "string",
        "description": "filter by type (issues / pulls) if set"
      },
      "since": {
        "format": "date-time",
        "type": "string",
        "description": "Only show notifications updated after the given time. This is a timestamp in RFC 3339 format"
      },
      "before": {
        "format": "date-time",
        "type": "string",
        "description": "Only show notifications updated before the given time. This is a timestamp in RFC 3339 format"
      },
      "assigned": {
        "type": "boolean",
        "description": "filter (issues / pulls) assigned to you, default is false"
      },
      "created": {
        "type": "boolean",
        "description": "filter (issues / pulls) created by you, default is false"
      },
      "mentioned": {
        "type": "boolean",
        "description": "filter (issues / pulls) mentioning you, default is false"
      },
      "review_requested": {
        "type": "boolean",
        "description": "filter pulls requesting your review, default is false"
      },
      "reviewed": {
        "type": "boolean",
        "description": "filter pulls reviewed by you, default is false"
      },
      "owner": {
        "type": "string",
        "description": "filter by owner"
      },
      "team": {
        "type": "string",
        "description": "filter by team (requires organization owner parameter to be provided)"
      },
      "page": {
        "type": "integer",
        "description": "page number of results to return (1-based)"
      },
      "limit": {
        "type": "integer",
        "description": "page size of results"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "/api/v1/repos/issues/search{?state,labels,milestones,q,priority_repo_id,type,since,before,assigned,created,mentioned,review_requested,reviewed,owner,team,page,limit}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "List"
        },
        "Issue represents an issue in a repository",
        "**Key properties:**",
        {
          "$ul": [
            "**assets**",
            [
              "**assignee**: User represents a user",
              {
                "$ul": [
                  "**active**: Is user active",
                  "**avatar_url**: URL to the user's avatar",
                  "**created**",
                  "**description**: the user's description",
                  "**email**",
                  "**followers_count**: user counts",
                  "**following_count**",
                  "**full_name**: the user's full name",
                  "**id**: the user's id",
                  "**is_admin**: Is the user an administrator",
                  "**language**: User locale",
                  "**last_login**",
                  "**location**: the user's location",
                  "**login**: the user's username",
                  "**login_name**: the user's authentication sign-in name. (default: empty)",
                  "**prohibit_login**: Is user login prohibited",
                  "**restricted**: Is user restricted",
                  "**starred_repos_count**",
                  "**visibility**: User visibility level option: public, limited, private",
                  "**website**: the user's website"
                ]
              }
            ],
            "**assignees**",
            "**body**",
            "**closed_at**",
            "**comments**",
            "**created_at**",
            "**due_date**",
            "**html_url**",
            "**id**",
            "**is_locked**",
            "**labels**",
            [
              "**milestone**: Milestone milestone is a collection of issues on one repository",
              {
                "$ul": [
                  "**closed_at**",
                  "**closed_issues**",
                  "**created_at**",
                  "**description**",
                  "**due_on**",
                  "**id**",
                  "**open_issues**",
                  "**state**: StateType issue state type",
                  "**title**",
                  "**updated_at**"
                ]
              }
            ],
            "**number**",
            "**original_author**",
            "**original_author_id**",
            [
              "**pull_request**: PullRequestMeta PR info if an issue is a PR",
              {
                "$ul": [
                  "**merged**",
                  "**merged_at**"
                ]
              }
            ],
            "**ref**",
            [
              "**repository**: RepositoryMeta basic repository information",
              {
                "$ul": [
                  "**full_name**",
                  "**id**",
                  "**name**",
                  "**owner**"
                ]
              }
            ],
            "**state**: StateType issue state type",
            "**title**",
            "**updated_at**",
            "**url**",
            [
              "**user**: User represents a user",
              {
                "$ul": [
                  "**active**: Is user active",
                  "**avatar_url**: URL to the user's avatar",
                  "**created**",
                  "**description**: the user's description",
                  "**email**",
                  "**followers_count**: user counts",
                  "**following_count**",
                  "**full_name**: the user's full name",
                  "**id**: the user's id",
                  "**is_admin**: Is the user an administrator",
                  "**language**: User locale",
                  "**last_login**",
                  "**location**: the user's location",
                  "**login**: the user's username",
                  "**login_name**: the user's authentication sign-in name. (default: empty)",
                  "**prohibit_login**: Is user login prohibited",
                  "**restricted**: Is user restricted",
                  "**starred_repos_count**",
                  "**visibility**: User visibility level option: public, limited, private",
                  "**website**: the user's website"
                ]
              }
            ]
          ]
        },
        {
          "$each": "$.body.*",
          "$as": "item",
          "$block": [
            {
              "$h2": {
                "$": "$.item.title"
              }
            },
            {
              "$lang": "json",
              "$code": {
                "$encode": "json",
                "$indent": true,
                "$content": {
                  "$": "$.item"
                }
              }
            }
          ]
        }
      ]
    }
  }
}
