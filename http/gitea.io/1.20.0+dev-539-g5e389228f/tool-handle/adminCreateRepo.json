{
  "name": "adminCreateRepo",
  "description": "Create a repository on behalf of a user",
  "parameters": {
    "type": "object",
    "properties": {
      "username": {
        "type": "string",
        "description": "username of the user. This user will own the created repository"
      },
      "body": {
        "$ref": "#/$defs/CreateRepoOption"
      }
    },
    "required": [
      "username",
      "body"
    ],
    "$defs": {
      "CreateRepoOption": {
        "description": "CreateRepoOption options when creating repository",
        "properties": {
          "auto_init": {
            "description": "Whether the repository should be auto-initialized?",
            "type": "boolean",
            "x-go-name": "AutoInit"
          },
          "default_branch": {
            "description": "DefaultBranch of the repository (used when initializes and in template)",
            "type": "string",
            "x-go-name": "DefaultBranch"
          },
          "description": {
            "description": "Description of the repository to create",
            "type": "string",
            "x-go-name": "Description"
          },
          "gitignores": {
            "description": "Gitignores to use",
            "type": "string",
            "x-go-name": "Gitignores"
          },
          "issue_labels": {
            "description": "Label-Set to use",
            "type": "string",
            "x-go-name": "IssueLabels"
          },
          "license": {
            "description": "License to use",
            "type": "string",
            "x-go-name": "License"
          },
          "name": {
            "description": "Name of the repository to create",
            "type": "string",
            "uniqueItems": true,
            "x-go-name": "Name"
          },
          "private": {
            "description": "Whether the repository is private",
            "type": "boolean",
            "x-go-name": "Private"
          },
          "readme": {
            "description": "Readme of the repository to create",
            "type": "string",
            "x-go-name": "Readme"
          },
          "template": {
            "description": "Whether the repository is template",
            "type": "boolean",
            "x-go-name": "Template"
          },
          "trust_model": {
            "description": "TrustModel of the repository",
            "enum": [
              "default",
              "collaborator",
              "committer",
              "collaboratorcommitter"
            ],
            "type": "string",
            "x-go-name": "TrustModel"
          }
        },
        "required": [
          "name"
        ],
        "type": "object",
        "x-go-package": "code.gitea.io/gitea/modules/structs"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "/api/v1/admin/users/{username}/repos"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Repository represents a repository",
        "**Key properties:**",
        {
          "$ul": [
            "**allow_merge_commits**",
            "**allow_rebase**",
            "**allow_rebase_explicit**",
            "**allow_rebase_update**",
            "**allow_squash_merge**",
            "**archived**",
            "**avatar_url**",
            "**clone_url**",
            "**created_at**",
            "**default_allow_maintainer_edit**",
            "**default_branch**",
            "**default_delete_branch_after_merge**",
            "**default_merge_style**",
            "**description**",
            "**empty**",
            [
              "**external_tracker**: ExternalTracker represents settings for external tracker",
              {
                "$ul": [
                  "**external_tracker_format**: External Issue Tracker URL Format. Use the placeholders {user}, {repo} and {index} for the username, repository name and issue index.",
                  "**external_tracker_regexp_pattern**: External Issue Tracker issue regular expression",
                  "**external_tracker_style**: External Issue Tracker Number Format, either `numeric`, `alphanumeric`, or `regexp`",
                  "**external_tracker_url**: URL of external issue tracker."
                ]
              }
            ],
            [
              "**external_wiki**: ExternalWiki represents setting for external wiki",
              {
                "$ul": [
                  "**external_wiki_url**: URL of external wiki."
                ]
              }
            ],
            "**fork**",
            "**forks_count**",
            "**full_name**",
            "**has_actions**",
            "**has_issues**",
            "**has_packages**",
            "**has_projects**",
            "**has_pull_requests**",
            "**has_releases**",
            "**has_wiki**",
            "**html_url**",
            "**id**",
            "**ignore_whitespace_conflicts**",
            "**internal**",
            [
              "**internal_tracker**: InternalTracker represents settings for internal tracker",
              {
                "$ul": [
                  "**allow_only_contributors_to_track_time**: Let only contributors track time (Built-in issue tracker)",
                  "**enable_issue_dependencies**: Enable dependencies for issues and pull requests (Built-in issue tracker)",
                  "**enable_time_tracker**: Enable time tracking (Built-in issue tracker)"
                ]
              }
            ],
            "**language**",
            "**languages_url**",
            "**link**",
            "**mirror**",
            "**mirror_interval**",
            "**mirror_updated**",
            "**name**",
            "**open_issues_count**",
            "**open_pr_counter**",
            "**original_url**",
            [
              "**owner**: User represents a user",
              {
                "$ul": [
                  "**active**: Is user active",
                  "**avatar_url**: URL to the user's avatar",
                  "**created**",
                  "**description**: the user's description",
                  "**email**",
                  "**followers_count**: user counts",
                  "**following_count**",
                  "**full_name**: the user's full name",
                  "**id**: the user's id",
                  "**is_admin**: Is the user an administrator",
                  "**language**: User locale",
                  "**last_login**",
                  "**location**: the user's location",
                  "**login**: the user's username",
                  "**login_name**: the user's authentication sign-in name. (default: empty)",
                  "**prohibit_login**: Is user login prohibited",
                  "**restricted**: Is user restricted",
                  "**starred_repos_count**",
                  "**visibility**: User visibility level option: public, limited, private",
                  "**website**: the user's website"
                ]
              }
            ],
            "**parent**",
            [
              "**permissions**: Permission represents a set of permissions",
              {
                "$ul": [
                  "**admin**",
                  "**pull**",
                  "**push**"
                ]
              }
            ],
            "**private**",
            "**release_counter**",
            [
              "**repo_transfer**: RepoTransfer represents a pending repo transfer",
              {
                "$ul": [
                  [
                    "**doer**: User represents a user",
                    {
                      "$ul": [
                        "**active**: Is user active",
                        "**avatar_url**: URL to the user's avatar",
                        "**created**",
                        "**description**: the user's description",
                        "**email**",
                        "**followers_count**: user counts",
                        "**following_count**",
                        "**full_name**: the user's full name",
                        "**id**: the user's id",
                        "**is_admin**: Is the user an administrator",
                        "**language**: User locale",
                        "**last_login**",
                        "**location**: the user's location",
                        "**login**: the user's username",
                        "**login_name**: the user's authentication sign-in name. (default: empty)",
                        "**prohibit_login**: Is user login prohibited",
                        "**restricted**: Is user restricted",
                        "**starred_repos_count**",
                        "**visibility**: User visibility level option: public, limited, private",
                        "**website**: the user's website"
                      ]
                    }
                  ],
                  [
                    "**recipient**: User represents a user",
                    {
                      "$ul": [
                        "**active**: Is user active",
                        "**avatar_url**: URL to the user's avatar",
                        "**created**",
                        "**description**: the user's description",
                        "**email**",
                        "**followers_count**: user counts",
                        "**following_count**",
                        "**full_name**: the user's full name",
                        "**id**: the user's id",
                        "**is_admin**: Is the user an administrator",
                        "**language**: User locale",
                        "**last_login**",
                        "**location**: the user's location",
                        "**login**: the user's username",
                        "**login_name**: the user's authentication sign-in name. (default: empty)",
                        "**prohibit_login**: Is user login prohibited",
                        "**restricted**: Is user restricted",
                        "**starred_repos_count**",
                        "**visibility**: User visibility level option: public, limited, private",
                        "**website**: the user's website"
                      ]
                    }
                  ],
                  "**teams**"
                ]
              }
            ],
            "**size**",
            "**ssh_url**",
            "**stars_count**",
            "**template**",
            "**updated_at**",
            "**watchers_count**",
            "**website**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
