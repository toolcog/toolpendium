{
  "name": "createFirewalls",
  "description": "Creates a Firewall to filter network traffic.\n\n* Use the `rules` property to create inbound and outbound access rules.\n\n* Use the `devices` property to assign the Firewall to a service and apply its Rules to the device. Requires `read_write` [User's Grants](/docs/api/account/#users-grants-view) to the device.\nCurrently, Firewalls can only be assigned to Linode instances.\n\n* A Firewall can be assigned to multiple Linode instances at a time.\n\n* A Linode instance can have one active, assigned Firewall at a time.\nAdditional disabled Firewalls can be assigned to a service, but they cannot be enabled if another active Firewall is already assigned to the same service.\n\n* A `firewall_create` Event is generated when this endpoint returns successfully.\n",
  "parameters": {
    "type": "object",
    "properties": {
      "body": {
        "allOf": [
          {
            "$ref": "#/$defs/Firewall"
          }
        ],
        "properties": {
          "devices": {
            "description": "Devices to create for this Firewall.\nWhen a Device is created, the Firewall is assigned to its associated service.\nCurrently, Devices can only be created for Linode instances.\n",
            "properties": {
              "linodes": {
                "description": "An array of Linode IDs. A Firewall Device is created for each ID.\n",
                "example": [
                  123,
                  456
                ],
                "items": {
                  "type": "integer"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "rules": {
            "properties": {
              "inbound": {
                "required": [
                  "action",
                  "addresses",
                  "protocol"
                ]
              },
              "outbound": {
                "required": [
                  "action",
                  "addresses",
                  "protocol"
                ]
              }
            },
            "required": [
              "inbound_policy",
              "outbound_policy"
            ]
          }
        },
        "required": [
          "label",
          "rules"
        ],
        "description": "Creates a Firewall object that can be applied to a Linode service to filter the service's network traffic."
      }
    },
    "$defs": {
      "Firewall": {
        "description": "A resource that controls incoming and outgoing network traffic to a Linode service. Only one Firewall can be attached to a Linode at any given time. [Create a Firewall Device](/docs/api/networking/#firewall-create) to assign a Firewall to a Linode service. Currently, Firewalls can only be assigned to Linode instances.\n",
        "properties": {
          "created": {
            "description": "When this Firewall was created.\n",
            "example": "2018-01-01T00:01:01",
            "format": "date-time",
            "readOnly": true,
            "type": "string",
            "x-linode-cli-display": 4,
            "x-linode-filterable": true
          },
          "id": {
            "description": "The Firewall's unique ID.\n",
            "example": 123,
            "readOnly": true,
            "type": "integer",
            "x-linode-cli-display": 1,
            "x-linode-filterable": true
          },
          "label": {
            "description": "The Firewall's label, for display purposes only.\n\nFirewall labels have the following constraints:\n\n  * Must begin and end with an alphanumeric character.\n  * May only consist of alphanumeric characters, dashes (`-`), underscores (`_`) or periods (`.`).\n  * Cannot have two dashes (`--`), underscores (`__`) or periods (`..`) in a row.\n  * Must be between 3 and 32 characters.\n  * Must be unique.\n",
            "example": "firewall123",
            "maxLength": 32,
            "minLength": 3,
            "pattern": "^[a-zA-Z]((?!--|__|..)[a-zA-Z0-9-_.])+$",
            "type": "string",
            "x-linode-cli-display": 2,
            "x-linode-filterable": true
          },
          "rules": {
            "description": "The inbound and outbound access rules to apply to the Firewall.\n\nA Firewall may have up to 25 rules across its inbound and outbound rulesets.\n",
            "properties": {
              "inbound": {
                "description": "The inbound rules for the firewall, as a JSON array.\n",
                "items": {
                  "$ref": "#/$defs/FirewallRuleConfig"
                },
                "type": "array",
                "x-linode-cli-format": "json"
              },
              "inbound_policy": {
                "description": "The default behavior for inbound traffic. This setting can be overridden by [updating](/docs/api/networking/#firewall-rules-update) the `inbound.action` property of the Firewall Rule.\n",
                "enum": [
                  "ACCEPT",
                  "DROP"
                ],
                "example": "DROP",
                "type": "string"
              },
              "outbound": {
                "description": "The outbound rules for the firewall, as a JSON array.\n",
                "items": {
                  "$ref": "#/$defs/FirewallRuleConfig"
                },
                "type": "array",
                "x-linode-cli-format": "json"
              },
              "outbound_policy": {
                "description": "The default behavior for outbound traffic. This setting can be overridden by [updating](/docs/api/networking/#firewall-rules-update) the `outbound.action` property of the Firewall Rule.\n",
                "enum": [
                  "ACCEPT",
                  "DROP"
                ],
                "example": "DROP",
                "type": "string"
              }
            },
            "type": "object"
          },
          "status": {
            "description": "The status of this Firewall.\n\n  * When a Firewall is first created its status is `enabled`.\n  * Use the [Update Firewall](/docs/api/networking/#firewall-update) endpoint to set a Firewall's status to `enabled` or `disabled`.\n  * Use the [Delete Firewall](/docs/api/networking/#firewall-delete) endpoint to delete a Firewall.\n",
            "enum": [
              "enabled",
              "disabled",
              "deleted"
            ],
            "example": "enabled",
            "readOnly": true,
            "type": "string",
            "x-linode-cli-display": 3
          },
          "tags": {
            "description": "An array of tags applied to this object. Tags are for organizational purposes only.\n",
            "example": [
              "example tag",
              "another example"
            ],
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-linode-filterable": true
          },
          "updated": {
            "description": "When this Firewall was last updated.\n",
            "example": "2018-01-02T00:01:01",
            "format": "date-time",
            "readOnly": true,
            "type": "string",
            "x-linode-cli-display": 5,
            "x-linode-filterable": true
          }
        },
        "type": "object"
      },
      "FirewallRuleConfig": {
        "description": "One of a Firewall's inbound or outbound access rules. The `ports` property can be used to allow traffic on a comma-separated list of different ports.\n",
        "properties": {
          "action": {
            "description": "Controls whether traffic is accepted or dropped by this rule. Overrides the Firewall's `inbound_policy` if this is an inbound rule, or the `outbound_policy` if this is an outbound rule.\n",
            "enum": [
              "ACCEPT",
              "DROP"
            ],
            "example": "ACCEPT",
            "type": "string"
          },
          "addresses": {
            "description": "Allowed IPv4 or IPv6 addresses. A Rule can have up to 255 addresses or networks listed across its IPv4 and IPv6 arrays. A network and a single IP are treated as equivalent when accounting for this limit.\n",
            "properties": {
              "ipv4": {
                "description": "A list of IPv4 addresses or networks. Must be in IP/mask format.",
                "example": [
                  "192.0.2.0/24"
                ],
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "ipv6": {
                "description": "A list of IPv6 addresses or networks. Must be in IP/mask format.",
                "example": [
                  "2001:DB8::/32"
                ],
                "items": {
                  "type": "string"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "description": {
            "description": "Used to describe this rule. For display purposes only.\n",
            "example": "An example firewall rule description.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "label": {
            "description": "Used to identify this rule. For display purposes only.\n",
            "example": "firewallrule123",
            "maxLength": 32,
            "minLength": 3,
            "type": "string"
          },
          "ports": {
            "description": "A string representing the port or ports on which traffic will be allowed:\n\n- The string may be a single port, a range of ports, or a comma-separated list of single ports and port ranges. A space is permitted following each comma.\n- A range of ports is inclusive of the start and end values for the range. The end value of the range must be greater than the start value.\n- Ports must be within 1 and 65535, and may not contain any leading zeroes. For example, port \"080\" is not allowed.\n- Ports may not be specified if a rule's protocol is `ICMP` or `IPENCAP`.\n- At least one port must be specified if a rule's protocol is `TCP` or `UDP`.\n- The ports string can have up to 15 *pieces*, where a single port is treated as one piece, and a port range is treated as two pieces. For example, the string \"22-24, 80, 443\" has four pieces.\n",
            "example": "22-24, 80, 443",
            "type": "string"
          },
          "protocol": {
            "description": "The type of network traffic to allow.\n",
            "enum": [
              "TCP",
              "UDP",
              "ICMP",
              "IPENCAP"
            ],
            "example": "TCP",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://api.linode.com/v4/networking/firewalls"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A resource that controls incoming and outgoing network traffic to a Linode service. Only one Firewall can be attached to a Linode at any given time. [Create a Firewall Device](/docs/api/networking/#firewall-create) to assign a Firewall to a Linode service. Currently, Firewalls can only be assigned to Linode instances.\n",
        "**Key properties:**",
        {
          "$ul": [
            "**created**: When this Firewall was created.",
            "**id**: The Firewall's unique ID.",
            "**label**: The Firewall's label, for display purposes only.",
            [
              "**rules**: The inbound and outbound access rules to apply to the Firewall.",
              {
                "$ul": [
                  "**inbound**: The inbound rules for the firewall, as a JSON array.",
                  "**inbound_policy**: The default behavior for inbound traffic. This setting can be overridden by [updating](/docs/api/networking/#firewall-rules-update) the `inbound.action` property of the Firewall Rule.",
                  "**outbound**: The outbound rules for the firewall, as a JSON array.",
                  "**outbound_policy**: The default behavior for outbound traffic. This setting can be overridden by [updating](/docs/api/networking/#firewall-rules-update) the `outbound.action` property of the Firewall Rule."
                ]
              }
            ],
            "**status**: The status of this Firewall.",
            "**tags**: An array of tags applied to this object. Tags are for organizational purposes only.",
            "**updated**: When this Firewall was last updated."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "default": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**errors**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
