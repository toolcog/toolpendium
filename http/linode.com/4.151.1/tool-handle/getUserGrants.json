{
  "name": "getUserGrants",
  "description": "Returns the full grants structure for the specified account User\n(other than the account owner, see below for details). This includes all entities\non the Account alongside the level of access this User has to each of them.\n\nThis command can only be accessed by the unrestricted users of an account.\n\nThe current authenticated User, including the account owner, may view their\nown grants at the [/profile/grants](/docs/api/profile/#grants-list)\nendpoint, but will not see entities that they do not have access to.\n",
  "parameters": {
    "type": "object",
    "properties": {
      "username": {
        "type": "string",
        "description": "The username to look up."
      }
    },
    "required": [
      "username"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://api.linode.com/v4/account/users/{username}/grants"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A structure representing all grants a restricted User has on the Account. Not available for unrestricted users, as they have access to everything without grants. If retrieved from the `/profile/grants` endpoint, entities to which a User has no access will be omitted.\n",
        "**Key properties:**",
        {
          "$ul": [
            "**database**: The grants this User has for each Database that is owned by this Account.",
            "**domain**: The grants this User has for each Domain that is owned by this Account.",
            [
              "**global**: A structure containing the Account-level grants a User has.",
              {
                "$ul": [
                  "**account_access**: The level of access this User has to Account-level actions, like billing information. A restricted User will never be able to manage users.",
                  "**add_databases**: if true, this User may add Managed Databases.",
                  "**add_domains**: If true, this User may add Domains.",
                  "**add_firewalls**: If true, this User may add Firewalls.",
                  "**add_images**: If true, this User may add Images.",
                  "**add_linodes**: If true, this User may create Linodes.",
                  "**add_longview**: If true, this User may create Longview clients and view the current plan.",
                  "**add_nodebalancers**: If true, this User may add NodeBalancers.",
                  "**add_stackscripts**: If true, this User may add StackScripts.",
                  "**add_volumes**: If true, this User may add Volumes.",
                  "**cancel_account**: If true, this User may cancel the entire Account.",
                  "**longview_subscription**: If true, this User may manage the Account's Longview subscription."
                ]
              }
            ],
            "**image**: The grants this User has for each Image that is owned by this Account.",
            "**linode**: The grants this User has for each Linode that is owned by this Account.",
            "**longview**: The grants this User has for each Longview Client that is owned by this Account.",
            "**nodebalancer**: The grants this User has for each NodeBalancer that is owned by this Account.",
            "**stackscript**: The grants this User has for each StackScript that is owned by this Account.",
            "**volume**: The grants this User has for each Block Storage Volume that is owned by this Account."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "default": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**errors**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
