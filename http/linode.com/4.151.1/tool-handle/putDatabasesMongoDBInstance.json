{
  "name": "putDatabasesMongoDBInstance",
  "description": "Update a Managed MongoDB Database.\n\nRequires `read_write` access to the Database.\n\nThe Database must have an `active` status to perform this command.\n\nUpdating addresses in the `allow_list` overwrites any existing addresses.\n\n* IP addresses and ranges on this list can access the Managed Database. All other sources are blocked.\n\n* If `0.0.0.0/0` is a value in this list, then all IP addresses can access the Managed Database.\n\n* Entering an empty array (`[]`) blocks all connections (both public and private) to the Managed Database.\n\n* **Note**: Updates to the `allow_list` may take a short period of time to complete, making this command inappropriate for rapid successive updates to this property.\n\nAll Managed Databases include automatic patch updates, which apply security patches and updates to the underlying operating system of the Managed MongoDB Database. The maintenance window for these updates is configured with the Managed Database's `updates` property.\n\n* If your database cluster is configured with a single node, you will experience downtime during this maintenance window when any updates occur. It's recommended that you adjust this window to match a time that will be the least disruptive for your application and users. You may also want to consider upgrading to a high availability plan to avoid any downtime due to maintenance.\n\n* **The database software is not updated automatically.** To upgrade to a new database engine version, consider deploying a new Managed Database with your preferred version. You can then migrate your databases from the original Managed Database cluster to the new one.\n\n**Note**: New MongoDB Databases cannot currently be created.\n",
  "parameters": {
    "type": "object",
    "properties": {
      "instanceId": {
        "type": "integer",
        "description": "The ID of the Managed MongoDB Database."
      },
      "body": {
        "description": "Updated information for the Managed MongoDB Database.",
        "properties": {
          "allow_list": {
            "$ref": "#/$defs/allow_list"
          },
          "label": {
            "$ref": "#/$defs/label"
          },
          "updates": {
            "$ref": "#/$defs/updates"
          }
        },
        "type": "object"
      }
    },
    "required": [
      "instanceId",
      "body"
    ],
    "$defs": {
      "allow_list": {
        "$ref": "#/$defs/allow_list"
      },
      "label": {
        "$ref": "#/$defs/label"
      },
      "updates": {
        "$ref": "#/$defs/updates"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "https://api.linode.com/v4/databases/mongodb/instances/{instanceId}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Managed MongoDB Databases object.",
        "**Key properties:**",
        {
          "$ul": [
            "**allow_list**: A list of IP addresses that can access the Managed Database. Each item can be a single IP address or a range in CIDR format.",
            "**cluster_size**: The number of Linode Instance nodes deployed to the Managed Database. (default: 1)",
            "**compression_type**: The type of data compression for this Database. (default: none)",
            "**created**: When this Managed Database was created.",
            "**encrypted**: Whether the Managed Databases is encrypted. (default: false)",
            "**engine**: The Managed Database engine type.",
            [
              "**hosts**: The primary and secondary hosts for the Managed Database. These are assigned after provisioning is complete.",
              {
                "$ul": [
                  "**primary**: The primary host for the Managed Database.",
                  "**secondary**: The secondary/private network host for the Managed Database."
                ]
              }
            ],
            "**id**: A unique ID that can be used to identify and reference the Managed Database.",
            "**label**: A unique, user-defined string referring to the Managed Database.",
            "**peers**: An array of peer addresses for this Database.",
            "**port**: The access port for this Managed Database.",
            "**region**: The [Region](/docs/api/regions/) ID for the Managed Database.",
            "**replica_set**: Label for configuring a MongoDB [replica set](https://www.mongodb.com/docs/manual/replication/). Choose the same label on multiple Databases to include them in the same replica set. (default: null)",
            "**ssl_connection**: Whether to require SSL credentials to establish a connection to the Managed Database. (default: true)",
            "**status**: The operating status of the Managed Database.",
            "**storage_engine**: The type of storage engine for this Database. (default: wiredtiger)",
            "**type**: The Linode Instance type used by the Managed Database for its nodes.",
            "**updated**: When this Managed Database was last updated.",
            [
              "**updates**: Configuration settings for automated patch update maintenance for the Managed Database.",
              {
                "$ul": [
                  "**day_of_week**: The day to perform maintenance. 1=Monday, 2=Tuesday, etc.",
                  "**duration**: The maximum maintenance window time in hours.",
                  "**frequency**: Whether maintenance occurs on a weekly or monthly basis. (default: weekly)",
                  "**hour_of_day**: The hour to begin maintenance based in UTC time.",
                  "**week_of_month**: The week of the month to perform `monthly` frequency updates. Defaults to `null`."
                ]
              }
            ],
            "**version**: The Managed Database engine version."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "default": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**errors**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
