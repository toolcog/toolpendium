{
  "name": "mergeTemplate",
  "description": "Merges template with data and returns base64 encoded document or a public URL to a document. You can send json encoded data in request body or a public URL to your json file as the data parameter. NB! When the public URL option is used, the document is stored for 30 days and automatically deleted.",
  "parameters": {
    "type": "object",
    "properties": {
      "templateId": {
        "example": 19375,
        "type": "integer",
        "description": "Template unique identifier"
      },
      "name": {
        "example": "My document",
        "type": "string",
        "description": "Document name, returned in the meta data."
      },
      "format": {
        "default": "pdf",
        "enum": [
          "pdf",
          "html",
          "zip",
          "xlsx"
        ],
        "example": "pdf",
        "type": "string",
        "description": "Document format. The zip option will return a ZIP file with PDF files."
      },
      "output": {
        "default": "base64",
        "enum": [
          "base64",
          "url",
          "I"
        ],
        "example": "base64",
        "type": "string",
        "description": "Response format. With the url option, the document is stored for 30 days and automatically deleted."
      },
      "body": {
        "$ref": "#/components/schemas/Data",
        "description": "Data used to generate the PDF. This can be JSON encoded string or a public URL to your JSON file."
      }
    },
    "required": [
      "templateId",
      "body"
    ]
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://us1.pdfgeneratorapi.com/api/v3/templates/templateId/output{?templateId,name,format,output}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**meta**",
              {
                "$ul": [
                  "**content-type**: Document content type.",
                  "**display_name**: Document name without the file extension.",
                  "**encoding**: Document encoding",
                  "**name**: Document name. This value is automatically generated if name attribute is not defined in request."
                ]
              }
            ],
            "**response**: Base64 encoded document if the output=base64 is used or URL to the document when the output=url is used."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**error**: Error description",
            "**status**: HTTP Error code"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**error**: Error description",
            "**status**: HTTP Error code"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**error**: Error description",
            "**status**: HTTP Error code"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "422": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**error**: Error description",
            "**status**: HTTP Error code"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "500": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**error**: Error description",
            "**status**: HTTP Error code"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
