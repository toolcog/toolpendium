{
  "name": "createTemplate",
  "description": "Creates a new template. If template configuration is not specified in the request body then an empty template is created. Template is placed to the workspace specified in authentication params. Template configuration must be sent in the request body.",
  "parameters": {
    "type": "object",
    "properties": {
      "body": {
        "$ref": "#/components/schemas/TemplateDefinitionNew",
        "description": "Template configuration as JSON string"
      }
    },
    "required": [
      "body"
    ]
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://us1.pdfgeneratorapi.com/api/v3/templates"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**response**",
              {
                "$ul": [
                  [
                    "**dataSettings**: Defines filter and sort option for root data set.",
                    {
                      "$ul": [
                        "**filterBy**",
                        "**sortBy**"
                      ]
                    }
                  ],
                  [
                    "**editor**: Configuration preferences for the editor",
                    {
                      "$ul": [
                        "**heightMultiplier**"
                      ]
                    }
                  ],
                  "**id**: Unique identifier",
                  "**isDraft**: Indicates if the template is a draft or published.",
                  [
                    "**layout**: Defines template layout (e.g page format, margins).",
                    {
                      "$ul": [
                        "**emptyLabels**: Defines how many pages or labels should be empty",
                        "**format**: Defines template page size",
                        "**height**: Page height in units",
                        [
                          "**margins**: Page margins in units",
                          {
                            "$ul": [
                              "**bottom**",
                              "**left**",
                              "**right**",
                              "**top**"
                            ]
                          }
                        ],
                        "**orientation**: Page orientation",
                        [
                          "**repeatLayout**: Defines page size if layout is repeated on the page e.g sheet labels",
                          {
                            "$ul": [
                              "**format**: Defines template page size",
                              "**height**: Page height in units",
                              "**width**: Page width in units"
                            ]
                          }
                        ],
                        "**rotation**: Page rotation in degrees",
                        "**unit**: Measure unit",
                        "**width**: Page width in units"
                      ]
                    }
                  ],
                  "**name**: Template name",
                  "**pages**: Defines page or label size, margins and components on page or label",
                  "**tags**: A list of tags assigned to a template"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**error**: Error description",
            "**status**: HTTP Error code"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**error**: Error description",
            "**status**: HTTP Error code"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**error**: Error description",
            "**status**: HTTP Error code"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "422": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**error**: Error description",
            "**status**: HTTP Error code"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "500": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**error**: Error description",
            "**status**: HTTP Error code"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
