{
  "name": "PutWageByWageId",
  "description": "__Activity name :__ PutWageByWageId\n\nEdit the details of a wage \n\n__Metadata :__ Possible options for fields of the type 'metadata' can be acquired (GET) by adding `/metadata` to the PUT wage URL.\n\n        \nThe possible options for `payGrade` are scoped by a `payScale`. To obtain the pay grades for a pay scale a metadata call has to be performed with the following format `../wages/metadata/payscale/{key}`. Where {key} is the key of the `payScale` (obtained via the first metadata call) for which the pay grades are to be returned.\n",
  "parameters": {
    "type": "object",
    "properties": {
      "wageId": {
        "format": "uuid",
        "type": "string",
        "description": "The unique identifier of a wage"
      },
      "Authorization": {
        "example": "Bearer <TOKEN>",
        "pattern": "^Bearer\\s[\\w-]+$",
        "type": "string",
        "description": "A valid Bearer token for authorizing the request."
      },
      "Accept": {
        "example": "application/json;version=2018-01-01",
        "type": "string",
        "description": "The accept header is used to influence what type of output is returned and in most cases the version of the output"
      }
    },
    "required": [
      "wageId",
      "Authorization",
      "Accept"
    ]
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "https://api.loket.nl/v2/providers/employers/employees/employments/wages/{wageId}"
    },
    "headers": {
      "Authorization": {
        "$": "Authorization"
      },
      "Accept": {
        "$": "Accept"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The version of the resource",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**version**",
              {
                "$ul": [
                  "**obsoleteDate**: The date (can be null) on which the `resourceVersion` is no longer supported/available",
                  "**resourceVersion**: The resource version of the object in the response"
                ]
              }
            ],
            "**messages**",
            [
              "**content**",
              {
                "$ul": [
                  "**applyPayGrade**: Apply pay grade indicates that after submitting the record the server will replace the value of `grossWage` with the value represented by the selected `payGrade`. A pay grade contains time based values, the value that is active on the `start date` of the record will be selected.",
                  "**employerCosts**: The cost for the employer for this employee.",
                  [
                    "**employerCostsType**: Indicates whether the employer costs are hourly costs or periodic costs. Periodic can represent a week, four weeks or a month. Which period is active for the employment can be found in the payroll administration resource.",
                    {
                      "$ul": [
                        "**key**",
                        "**value**"
                      ]
                    }
                  ],
                  "**endDate**: The end date for the information in the record.",
                  "**grossWage**: The gross wage for the employee",
                  [
                    "**grossWageType**: Indicates whether the `grossWage` is an hourly wage or a Periodic wage. Periodic can represent a week, four weeks or a month. Which period is active for the employment can be found in wagePeriodType.",
                    {
                      "$ul": [
                        "**key**",
                        "**value**"
                      ]
                    }
                  ],
                  "**id**: The unique identifier of an object (GUID/UUID)",
                  "**isGrossWageFullTime**: Indicates whether the given grossWage is either a full-time wage or a part-time wage. Full-time wage is the default value (isGrossWageFulltime = true) and Loket.nl recommends to use this option. A full-time wage takes into account the part-time percentage of an employment. While a part-time wage does not. E.g. A full-time wage of 2400 euro’s is registered. The employments works 20 out of 40 hours (40 fours is a full-time shift) thus having a 20/40 = 50% part-time percentage. The part-time hours (deviatingHoursPerWeek) are accessible through the endpoint for working hours of an employement. In the wage calculation Loket.nl will divide the grossWage component by 50% resulting in a grossWage of 1200 euro’s. In the case of a part-time wage the part-time percentage will be ignored.",
                  "**netWage**: Net wage for the employment",
                  [
                    "**netWageType**: Indicates whether the net wage is an hourly wage or a periodic wage. Periodic can represent a week, four weeks or a month. Which period is active for the employment can be found in the payroll administration resource.",
                    {
                      "$ul": [
                        "**key**",
                        "**value**"
                      ]
                    }
                  ],
                  [
                    "**payGrade**: The pay grade indicates on what level (cel) of the paygrade the employment is.  The level is multi dimensional where the description indicates both the level and for example the number of years of service within the given level. ",
                    {
                      "$ul": [
                        "**key**",
                        "**value**"
                      ]
                    }
                  ],
                  [
                    "**payScale**: A pay scale (also known as a salary structure) is a system that determines how much an employee is to be paid as a wage or salary, based on one or more factors such as the employee's level, rank or status within the employer's organization, the length of time that the employee has been employed, and the difficulty of the specific work performed.  After selecting a pay scale a pay grade needs to be selected to determine the actual wage. Only works with `grossWage`. The value of `grossWage` will be updated server side after the submit.",
                    {
                      "$ul": [
                        "**key**",
                        "**value**"
                      ]
                    }
                  ],
                  [
                    "**payrollPeriodType**: Indicates the frequence of the payrolling process. Payrolling can be done on a montly (key 1), 4-weekly (key 3) or weekly basis (key 4). The value of this field is used to further specify the meaning of grossWageType, netWageType and employerCostsType. When the key fields of these three wage types have a value 1 (meaning periodic wage), the payrollPeriodType field shows the period type (month, 4 weeks or week) applicable to the wages for the employment. E.g. If the value for grossWageType.key = 1 (periodic wage) and the value for payrollPeriodType.key = 1 (meaning Month), then the wage registerd in grossWage is a monthly wage. Note that in cases where the wage type is an hourly wage (grossWageType.key = 2), the payrollPeriodType should be ignored.",
                    {
                      "$ul": [
                        "**key**",
                        "**value**"
                      ]
                    }
                  ],
                  "**startDate**: The start date for the information in the record."
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The version of the resource",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**version**",
              {
                "$ul": [
                  "**obsoleteDate**: The date (can be null) on which the `resourceVersion` is no longer supported/available",
                  "**resourceVersion**: The resource version of the object in the response"
                ]
              }
            ],
            "**messages**",
            "**content**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**message**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**message**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "409": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**content**",
            "**messages**",
            [
              "**version**",
              {
                "$ul": [
                  "**obsoleteDate**: The date (can be null) on which the `resourceVersion` is no longer supported/available",
                  "**resourceVersion**: The resource version of the object in the response"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
