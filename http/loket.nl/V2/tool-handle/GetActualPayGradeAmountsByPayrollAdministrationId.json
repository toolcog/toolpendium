{
  "name": "GetActualPayGradeAmountsByPayrollAdministrationId",
  "description": "__Activity name :__ GetActualPayGradeAmountsByPayrollAdministrationId\n\nProvides the PayGradeAmounts on a specific date for all PayScales of the payrolladministration's employments. This information can be used to create new wage records.\n",
  "parameters": {
    "type": "object",
    "properties": {
      "payrollAdministrationId": {
        "format": "uuid",
        "type": "string",
        "description": "The unique identifier of an administration"
      },
      "Authorization": {
        "example": "Bearer <TOKEN>",
        "pattern": "^Bearer\\s[\\w-]+$",
        "type": "string",
        "description": "A valid Bearer token for authorizing the request."
      },
      "Accept": {
        "example": "application/json;version=2018-01-01",
        "type": "string",
        "description": "The accept header is used to influence what type of output is returned and in most cases the version of the output"
      },
      "filter": {
        "example": "cancellationPeriodTimeUnit.key eq 4",
        "type": "string",
        "description": "Filter the collection"
      },
      "orderBy": {
        "example": "-companyName,address.houseNumber",
        "pattern": "^-?\\w+(,-?\\w+)*$",
        "type": "string",
        "description": "Order the collection on one or more fields"
      },
      "pageNumber": {
        "default": 1,
        "example": 2,
        "format": "int32",
        "type": "integer",
        "description": "Specifies which page should be returned"
      },
      "pageSize": {
        "default": 250,
        "example": 20,
        "format": "int32",
        "type": "integer",
        "description": "Specifies the number of objects per page"
      }
    },
    "required": [
      "payrollAdministrationId",
      "Authorization",
      "Accept"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://api.loket.nl/v2/providers/employers/payrolladministrations/{payrollAdministrationId}/employees/employments/actualpaygradeamounts{?filter,orderBy,pageNumber,pageSize}"
    },
    "headers": {
      "Authorization": {
        "$": "Authorization"
      },
      "Accept": {
        "$": "Accept"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "List"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**employmentId**: The unique identifier of an object (GUID/UUID)",
            [
              "**payGrade**: The pay grade indicates on what level (cel) of the paygrade the employment is.  The level is multi dimensional where the description indicates both the level and for example the number of years of service within the given level. ",
              {
                "$ul": [
                  "**key**",
                  [
                    "**payGradeAmount**: The pay grade indicates on what level (cel) of the paygrade the employment is.  The level is multi dimensional where the description indicates both the level and for example the number of years of service within the given level. ",
                    {
                      "$ul": [
                        "**startDate**: Start date of the record.",
                        "**value**: Amount for given paygrade"
                      ]
                    }
                  ],
                  "**value**"
                ]
              }
            ],
            [
              "**payScale**: A pay scale (also known as a salary structure) is a system that determines how much an employee is to be paid as a wage or salary, based on one or more factors such as the employee's level, rank or status within the employer's organization, the length of time that the employee has been employed, and the difficulty of the specific work performed.  After selecting a pay scale a pay grade needs to be selected to determine the actual wage. Only works with `grossWage`. The value of `grossWage` will be updated server side after the submit.",
              {
                "$ul": [
                  "**key**",
                  "**value**"
                ]
              }
            ]
          ]
        },
        {
          "$each": "$.body.*",
          "$as": "item",
          "$block": [
            {
              "$h2": "Item"
            },
            {
              "$lang": "json",
              "$code": {
                "$encode": "json",
                "$indent": true,
                "$content": {
                  "$": "$.item"
                }
              }
            }
          ]
        }
      ]
    }
  }
}
