{
  "name": "PostEmploymentByEmployeeId",
  "description": "__Activity name :__ PostEmploymentByEmployeeId\n\nCreate an additional employment for an already existing employee.\n\nPlease note that the creation of an Employment is not RESTful by design.\n\nIn Loket, when a new Employee is created it will have to be created including its underlying Employment and its accessory resources. This specific endpoint is relevant in the following scenario: there is already an Employee with at least one Employment, and one wishes to create an additional Employment for that currently existing Employee. When successfully calling this endpoint, an Employment with its accessory resources will be created.\n\n__Metadata :__ \n* Possible options (metadata) for generic fields of the type \"metadata\" can be acquired (GET) by adding `/metadata` to the URL.\n* Possible options dependent on a specific payrollAdministration can be acquired by adding `/metadata/payrolladministration/{payrollAdministrationId}` to the url.\n* Possible options for payGrade can be acquired by adding `metadata/payrolladministration/{payrollAdministrationId}/payscale/{payScaleKey}` to the url.\n\nA `payGrade` has time based values dictating the wage for a given period. These values can be acquired by performing another metadata request by adding `/metadata/payrolladministration/{payrollAdministrationId}/payscale/{payScaleKey}/paygrade/{payGradeKey}` to the url. This endpoint has the optional parameter \"date\" that may be used to specifying a measure date.\n\n__Defaults :__ Default values for a new object can be acquired by adding `/defaults` to the URL. \n\n        \nDefault values that are dependent on the selected payroll administration can be acquired by adding `../providers/employers/employees/employments/defaults/payrolladministration/{payrollAdministrationId}` to the URL.\n\n__NonPayrollAdministrations__ For nonPayrollAdministrations the equivalent metaData-endpoints are also available as described above.  Also, a defaults endpoint is available for the nonPayrollAdministration.  Please note that this requires `../nonpayrolladministrations/{nonPayrollAdministrationId}` in the path.\n",
  "parameters": {
    "type": "object",
    "properties": {
      "employeeId": {
        "format": "uuid",
        "type": "string",
        "description": "The unique identifier of the employee"
      },
      "Authorization": {
        "example": "Bearer <TOKEN>",
        "pattern": "^Bearer\\s[\\w-]+$",
        "type": "string",
        "description": "A valid Bearer token for authorizing the request."
      },
      "Accept": {
        "example": "application/json;version=2018-01-01",
        "type": "string",
        "description": "The accept header is used to influence what type of output is returned and in most cases the version of the output"
      }
    },
    "required": [
      "employeeId",
      "Authorization",
      "Accept"
    ]
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://api.loket.nl/v2/providers/employers/employees/{employeeId}/employments"
    },
    "headers": {
      "Authorization": {
        "$": "Authorization"
      },
      "Accept": {
        "$": "Accept"
      }
    }
  },
  "responses": {
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "data to be used for paging",
        "**Key properties:**",
        {
          "$ul": [
            "**currentPage**: Current page returned in the response",
            "**pageSize**: Number of records in the response",
            "**totalPages**: Number of pages available",
            "**totalSize**: Total number of records, taking into account the given filter.",
            [
              "**version**",
              {
                "$ul": [
                  "**obsoleteDate**: The date (can be null) on which the `resourceVersion` is no longer supported/available",
                  "**resourceVersion**: The resource version of the object in the response"
                ]
              }
            ],
            "**messages**",
            "**id**: The unique identifier of an object (GUID/UUID)"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The version of the resource",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**version**",
              {
                "$ul": [
                  "**obsoleteDate**: The date (can be null) on which the `resourceVersion` is no longer supported/available",
                  "**resourceVersion**: The resource version of the object in the response"
                ]
              }
            ],
            "**messages**",
            "**content**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**message**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**message**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
