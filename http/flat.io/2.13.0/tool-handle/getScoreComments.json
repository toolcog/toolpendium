{
  "name": "getScoreComments",
  "description": "This method lists the different comments added on a music score (documents and inline) sorted by their post dates.",
  "parameters": {
    "type": "object",
    "properties": {
      "type": {
        "enum": [
          "document",
          "inline"
        ],
        "type": "string",
        "description": "Filter the comments by type"
      },
      "sort": {
        "enum": [
          "date"
        ],
        "type": "string",
        "description": "Sort"
      },
      "direction": {
        "enum": [
          "asc",
          "desc"
        ],
        "type": "string",
        "description": "Sort direction"
      },
      "score": {
        "type": "string",
        "description": "Unique identifier of the score document. This can be a Flat Score unique identifier (i.e. `ScoreDetails.id`) or, if the score is also a Google Drive file, the Drive file unique identifier prefixed with `drive-` (e.g. `drive-0B000000000`).\n"
      },
      "sharingKey": {
        "type": "string",
        "description": "This sharing key must be specified to access to a score or collection with a `privacy` mode set to `privateLink` and the current user is not a collaborator of the document.\n"
      }
    },
    "required": [
      "score"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://api.flat.io/v2/scores/{score}/comments{?type,sort,direction,sharingKey}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "List"
        },
        "Comment added on a sheet music",
        "**Key properties:**",
        {
          "$ul": [
            "**comment**: The comment text that can includes mentions using the following",
            [
              "**context**: The context of the comment (for inline/contextualized comments). A context will include all the information related to the location of the comment (i.e. score parts, range of measure, time position).",
              {
                "$ul": [
                  "**measureUuids**: The list of measure UUIds",
                  "**partUuid**: The unique identifier (UUID) of the score part",
                  "**staffIdx**: (Deprecated, use `staffUuid`) The identififer of the staff",
                  "**staffUuid**: The unique identififer (UUID) of the staff",
                  "**startDpq**",
                  "**startTimePos**",
                  "**stopDpq**",
                  "**stopTimePos**"
                ]
              }
            ],
            "**date**: The date when the comment was posted",
            "**id**: The comment unique identifier",
            "**mentions**: The list of user identifier mentioned on the score",
            "**modificationDate**: The date of the last comment modification",
            "**rawComment**: A raw version of the comment, that can be displayed without parsing",
            "**replyTo**: When the comment is a reply to another comment, the unique identifier of the parent comment",
            "**resolved**: For inline comments, the comment can be marked as resolved and will be hidden in the future responses",
            "**resolvedBy**: If the user is marked as resolved, this will contain the unique identifier of the User who marked this comment as resolved",
            "**revision**: The unique identifier of revision the comment was posted",
            "**score**: The unique identifier of the score where the comment was posted",
            "**spam**: `true  if the message has been detected as spam and hidden from other users",
            "**type**: The type of the comment",
            "**user**: The author unique identifier"
          ]
        },
        {
          "$each": "$.body.*",
          "$as": "item",
          "$block": [
            {
              "$h2": {
                "$": "$.item.id"
              }
            },
            {
              "$lang": "json",
              "$code": {
                "$encode": "json",
                "$indent": true,
                "$content": {
                  "$": "$.item"
                }
              }
            }
          ]
        }
      ]
    },
    "402": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "An API Error response",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: A corresponding code for this error",
            "**id**: An unique error identifier generated for the request",
            "**message**: A printable message for this message",
            "**param**: The related parameter that caused the error"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "An API Error response",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: A corresponding code for this error",
            "**id**: An unique error identifier generated for the request",
            "**message**: A printable message for this message",
            "**param**: The related parameter that caused the error"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "An API Error response",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: A corresponding code for this error",
            "**id**: An unique error identifier generated for the request",
            "**message**: A printable message for this message",
            "**param**: The related parameter that caused the error"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "default": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "An API Error response",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: A corresponding code for this error",
            "**id**: An unique error identifier generated for the request",
            "**message**: A printable message for this message",
            "**param**: The related parameter that caused the error"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
