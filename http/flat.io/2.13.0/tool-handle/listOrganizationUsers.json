{
  "name": "listOrganizationUsers",
  "description": "List the organization users",
  "parameters": {
    "type": "object",
    "properties": {
      "sort": {
        "items": {
          "enum": [
            "firstname",
            "lastname",
            "lastActivityDate",
            "licenseExpirationDate"
          ],
          "type": "string"
        },
        "type": "string",
        "description": "The order to sort the user list"
      },
      "direction": {
        "enum": [
          "asc",
          "desc"
        ],
        "type": "string",
        "description": "Sort direction"
      },
      "next": {
        "type": "string",
        "description": "An opaque string cursor to fetch the next page of data.\nThe paginated API URLs are returned in the `Link` header when requesting the API. These URLs will contain a `next` and `previous` cursor based on the available data.\n"
      },
      "previous": {
        "type": "string",
        "description": "An opaque string cursor to fetch the previous page of data.\nThe paginated API URLs are returned in the `Link` header when requesting the API. These URLs will contain a `next` and `previous` cursor based on the available data.\n"
      },
      "role": {
        "items": {
          "enum": [
            "user",
            "teacher",
            "admin"
          ],
          "type": "string"
        },
        "type": "array",
        "description": "Filter users by role"
      },
      "q": {
        "type": "string",
        "description": "The query to search"
      },
      "group": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "Filter users by group"
      },
      "noActiveLicense": {
        "type": "boolean",
        "description": "Filter users who don't have an active license"
      },
      "licenseExpirationDate": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "Filter users by license expiration date or `active` / `notActive`"
      },
      "onlyIds": {
        "type": "boolean",
        "description": "Return only user ids"
      },
      "limit": {
        "default": 25,
        "maximum": 1000,
        "minimum": 1,
        "type": "integer",
        "description": "This is the maximum number of objects that may be returned"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://api.flat.io/v2/organizations/users{?sort,direction,next,previous,role,q,group,noActiveLicense,licenseExpirationDate,onlyIds,limit}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "List"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**firstname**: Firstname of the user (for education users)",
            "**id**: The user unique identifier",
            "**isFlatTeam**: Will be 'true' if user is part of the Flat Team",
            "**isPowerUser**: User license status. 'true' if user is an individual Power user",
            "**lastname**: Lastname of the user (for education users)",
            "**name**: A displayable name for the user (for consumer users)",
            "**picture**: The URL of the picture to display",
            "**printableName**: The name that can be directly printed (name, firstname & lastname, or username)",
            "**type**: The type of user account",
            "**username**: The user name (unique for the organization)",
            "**classRole**: User's Class Role (for Edu users only)",
            "**htmlUrl**: Link to user profile (for Indiv. users only)",
            "**organization**: Organization ID (for Edu users only)",
            "**organizationRole**: User's Organization Role (for Edu users only)",
            "**email**: Email of the user",
            "**lastActivityDate**: Date of the last user activity",
            [
              "**license**: Current active license of the user",
              {
                "$ul": [
                  "**active**: ID of the current license",
                  "**expirationDate**: Date when the license expires",
                  "**id**: ID of the current license",
                  "**mode**: Mode of the license",
                  "**source**: Source of the license (default: order)"
                ]
              }
            ]
          ]
        },
        {
          "$each": "$.body.*",
          "$as": "item",
          "$block": [
            {
              "$h2": {
                "$": "$.item.name"
              }
            },
            {
              "$lang": "json",
              "$code": {
                "$encode": "json",
                "$indent": true,
                "$content": {
                  "$": "$.item"
                }
              }
            }
          ]
        }
      ]
    },
    "default": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "An API Error response",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: A corresponding code for this error",
            "**id**: An unique error identifier generated for the request",
            "**message**: A printable message for this message",
            "**param**: The related parameter that caused the error"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
