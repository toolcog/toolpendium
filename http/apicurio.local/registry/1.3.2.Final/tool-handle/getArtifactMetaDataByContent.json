{
  "name": "getArtifactMetaDataByContent",
  "description": "Gets the metadata for an artifact that matches the raw content.  Searches the registry\nfor a version of the given artifact matching the content provided in the body of the\nPOST.\n\nThis operation can fail for the following reasons:\n\n* Provided content (request body) was empty (HTTP error `400`)\n* No artifact with the `artifactId` exists (HTTP error `404`)\n* No artifact version matching the provided content exists (HTTP error `404`)\n* A server error occurred (HTTP error `500`)\n",
  "parameters": {
    "type": "object",
    "properties": {
      "artifactId": {
        "type": "string",
        "description": "The artifact ID.  Can be a string (client-provided) or integer (server-generated) representing the unique artifact identifier."
      }
    },
    "required": [
      "artifactId"
    ]
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://apicurio.local/artifacts/{artifactId}/meta"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Root Type for ArtifactMetaData"
        },
        "",
        "**Key properties:**",
        {
          "$ul": [
            "**createdBy**",
            "**createdOn**",
            "**description**",
            "**globalId**: ",
            "**id**: ",
            "**labels**: ",
            "**modifiedBy**",
            "**modifiedOn**",
            "**name**",
            "**properties**: User-defined name-value pairs. Name and value must be strings.",
            "**state**: Describes the state of an artifact or artifact version.  The following states",
            "**type**: ",
            "**version**: "
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Root Type for Error"
        },
        "All error responses, whether `4xx` or `5xx` will include one of these as the response\nbody.",
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Full details about the error.  This might contain a server stack trace, for example.",
            "**error_code**: The server-side error code.",
            "**message**: The short error message."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "500": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Root Type for Error"
        },
        "All error responses, whether `4xx` or `5xx` will include one of these as the response\nbody.",
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Full details about the error.  This might contain a server stack trace, for example.",
            "**error_code**: The server-side error code.",
            "**message**: The short error message."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
