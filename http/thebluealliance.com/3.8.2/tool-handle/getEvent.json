{
  "name": "getEvent",
  "description": "Gets an Event.",
  "parameters": {
    "type": "object",
    "properties": {
      "If-None-Match": {
        "type": "string",
        "description": "Value of the `ETag` header in the most recently cached response by the client."
      },
      "event_key": {
        "type": "string",
        "description": "TBA Event Key, eg `2016nytr`"
      }
    },
    "required": [
      "event_key"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://www.thebluealliance.com/api/v3/event/{event_key}"
    },
    "headers": {
      "If-None-Match": {
        "$": "If-None-Match"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**address**: Address of the event's venue, if available.",
            "**city**: City, town, village, etc. the event is located in.",
            "**country**: Country the event is located in.",
            [
              "**district**",
              {
                "$ul": [
                  "**abbreviation**: The short identifier for the district.",
                  "**display_name**: The long name for the district.",
                  "**key**: Key for this district, e.g. `2016ne`.",
                  "**year**: Year this district participated."
                ]
              }
            ],
            "**division_keys**: An array of event keys for the divisions at this event.",
            "**end_date**: Event end date in `yyyy-mm-dd` format.",
            "**event_code**: Event short code, as provided by FIRST.",
            "**event_type**: Event Type, as defined here: https://github.com/the-blue-alliance/the-blue-alliance/blob/master/consts/event_type.py#L2",
            "**event_type_string**: Event Type, eg Regional, District, or Offseason.",
            "**first_event_code**: Public facing event code used by FIRST (on frc-events.firstinspires.org, for example)",
            "**first_event_id**: The FIRST internal Event ID, used to link to the event on the FRC webpage.",
            "**gmaps_place_id**: Google Maps Place ID for the event address.",
            "**gmaps_url**: Link to address location on Google Maps.",
            "**key**: TBA event key with the format yyyy[EVENT_CODE], where yyyy is the year, and EVENT_CODE is the event code of the event.",
            "**lat**: Latitude for the event address.",
            "**lng**: Longitude for the event address.",
            "**location_name**: Name of the location at the address for the event, eg. Blue Alliance High School.",
            "**name**: Official name of event on record either provided by FIRST or organizers of offseason event.",
            "**parent_event_key**: The TBA Event key that represents the event's parent. Used to link back to the event from a division event. It is also the inverse relation of `divison_keys`.",
            "**playoff_type**: Playoff Type, as defined here: https://github.com/the-blue-alliance/the-blue-alliance/blob/master/consts/playoff_type.py#L4, or null.",
            "**playoff_type_string**: String representation of the `playoff_type`, or null.",
            "**postal_code**: Postal code from the event address.",
            "**short_name**: Same as `name` but doesn't include event specifiers, such as 'Regional' or 'District'. May be null.",
            "**start_date**: Event start date in `yyyy-mm-dd` format.",
            "**state_prov**: State or Province the event is located in.",
            "**timezone**: Timezone name.",
            "**webcasts**",
            "**website**: The event's website, if any.",
            "**week**: Week of the event relative to the first official season event, zero-indexed. Only valid for Regionals, Districts, and District Championships. Null otherwise. (Eg. A season with a week 0 'preseason' event does not count, and week 1 events will show 0 here. Seasons with a week 0.5 regional event will show week 0 for those event(s) and week 1 for week 1 events and so on.)",
            "**year**: Year the event data is for."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
