{
  "name": "calendar_settings_watch",
  "description": "Watch for changes to Settings resources.",
  "parameters": {
    "type": "object",
    "properties": {
      "maxResults": {
        "minimum": 1,
        "type": "integer",
        "description": "Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional."
      },
      "pageToken": {
        "type": "string",
        "description": "Token specifying which result page to return. Optional."
      },
      "syncToken": {
        "type": "string",
        "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then.\nIf the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.\nLearn more about incremental synchronization.\nOptional. The default is to return all entries."
      },
      "alt": {
        "enum": [
          "json"
        ],
        "type": "string",
        "description": "Data format for the response."
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "An opaque string that represents a user for quota purposes. Must not exceed 40 characters."
      },
      "userIp": {
        "type": "string",
        "description": "Deprecated. Please use quotaUser instead."
      },
      "body": {
        "$ref": "#/$defs/Channel"
      }
    },
    "$defs": {
      "Channel": {
        "properties": {
          "address": {
            "description": "The address where notifications are delivered for this channel.",
            "type": "string"
          },
          "expiration": {
            "description": "Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.",
            "format": "int64",
            "type": "string"
          },
          "id": {
            "description": "A UUID or similar unique string that identifies this channel.",
            "type": "string"
          },
          "kind": {
            "default": "api#channel",
            "description": "Identifies this as a notification channel used to watch for changes to a resource, which is \"api#channel\".",
            "type": "string"
          },
          "params": {
            "additionalProperties": {
              "description": "Declares a new parameter by name.",
              "type": "string"
            },
            "description": "Additional parameters controlling delivery channel behavior. Optional.",
            "type": "object"
          },
          "payload": {
            "description": "A Boolean value to indicate whether payload is wanted. Optional.",
            "type": "boolean"
          },
          "resourceId": {
            "description": "An opaque ID that identifies the resource being watched on this channel. Stable across different API versions.",
            "type": "string"
          },
          "resourceUri": {
            "description": "A version-specific identifier for the watched resource.",
            "type": "string"
          },
          "token": {
            "description": "An arbitrary string delivered to the target address with each notification delivered over this channel. Optional.",
            "type": "string"
          },
          "type": {
            "description": "The type of delivery mechanism used for this channel. Valid values are \"web_hook\" (or \"webhook\"). Both values refer to a channel where Http requests are used to deliver messages.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://www.googleapis.com/calendar/v3/users/me/settings/watch{?maxResults,pageToken,syncToken,alt,fields,key,oauth_token,prettyPrint,quotaUser,userIp}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**address**: The address where notifications are delivered for this channel.",
            "**expiration**: Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.",
            "**id**: A UUID or similar unique string that identifies this channel.",
            "**kind**: Identifies this as a notification channel used to watch for changes to a resource, which is \"api#channel\". (default: api#channel)",
            "**params**: Additional parameters controlling delivery channel behavior. Optional.",
            "**payload**: A Boolean value to indicate whether payload is wanted. Optional.",
            "**resourceId**: An opaque ID that identifies the resource being watched on this channel. Stable across different API versions.",
            "**resourceUri**: A version-specific identifier for the watched resource.",
            "**token**: An arbitrary string delivered to the target address with each notification delivered over this channel. Optional.",
            "**type**: The type of delivery mechanism used for this channel. Valid values are \"web_hook\" (or \"webhook\"). Both values refer to a channel where Http requests are used to deliver messages."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
