{
  "name": "calendar_events_move",
  "description": "Moves an event to another calendar, i.e. changes an event's organizer. Note that only default events can be moved; outOfOffice, focusTime and workingLocation events cannot be moved.",
  "parameters": {
    "type": "object",
    "properties": {
      "calendarId": {
        "type": "string",
        "description": "Calendar identifier of the source calendar where the event currently is on."
      },
      "eventId": {
        "type": "string",
        "description": "Event identifier."
      },
      "destination": {
        "type": "string",
        "description": "Calendar identifier of the target calendar where the event is to be moved to."
      },
      "sendNotifications": {
        "type": "boolean",
        "description": "Deprecated. Please use sendUpdates instead.\n\nWhether to send notifications about the change of the event's organizer. Note that some emails might still be sent even if you set the value to false. The default is false."
      },
      "sendUpdates": {
        "enum": [
          "all",
          "externalOnly",
          "none"
        ],
        "type": "string",
        "description": "Guests who should receive notifications about the change of the event's organizer."
      },
      "alt": {
        "enum": [
          "json"
        ],
        "type": "string",
        "description": "Data format for the response."
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "An opaque string that represents a user for quota purposes. Must not exceed 40 characters."
      },
      "userIp": {
        "type": "string",
        "description": "Deprecated. Please use quotaUser instead."
      }
    },
    "required": [
      "calendarId",
      "eventId",
      "destination"
    ]
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://www.googleapis.com/calendar/v3/calendars/{calendarId}/events/{eventId}/move{?destination,sendNotifications,sendUpdates,alt,fields,key,oauth_token,prettyPrint,quotaUser,userIp}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**anyoneCanAddSelf**: Whether anyone can invite themselves to the event (deprecated). Optional. The default is False. (default: false)",
            "**attachments**: File attachments for the event.",
            "**attendees**: The attendees of the event. See the Events with attendees guide for more information on scheduling events with other calendar users. Service accounts need to use domain-wide delegation of authority to populate the attendee list.",
            "**attendeesOmitted**: Whether attendees may have been omitted from the event's representation. When retrieving an event, this may be due to a restriction specified by the maxAttendee query parameter. When updating an event, this can be used to only update the participant's response. Optional. The default is False. (default: false)",
            "**colorId**: The color of the event. This is an ID referring to an entry in the event section of the colors definition (see the  colors endpoint). Optional.",
            [
              "**conferenceData**",
              {
                "$ul": [
                  "**conferenceId**: The ID of the conference.",
                  [
                    "**conferenceSolution**",
                    {
                      "$ul": [
                        "**iconUri**: The user-visible icon for this solution.",
                        [
                          "**key**",
                          {
                            "$ul": [
                              "**type**: The conference solution type."
                            ]
                          }
                        ],
                        "**name**: The user-visible name of this solution. Not localized."
                      ]
                    }
                  ],
                  [
                    "**createRequest**",
                    {
                      "$ul": [
                        [
                          "**conferenceSolutionKey**",
                          {
                            "$ul": [
                              "**type**: The conference solution type."
                            ]
                          }
                        ],
                        "**requestId**: The client-generated unique ID for this request.",
                        [
                          "**status**",
                          {
                            "$ul": [
                              "**statusCode**: The current status of the conference create request. Read-only."
                            ]
                          }
                        ]
                      ]
                    }
                  ],
                  "**entryPoints**: Information about individual conference entry points, such as URLs or phone numbers.",
                  "**notes**: Additional notes (such as instructions from the domain administrator, legal notices) to display to the user. Can contain HTML. The maximum length is 2048 characters. Optional.",
                  [
                    "**parameters**",
                    {
                      "$ul": [
                        [
                          "**addOnParameters**",
                          {
                            "$ul": [
                              "**parameters**"
                            ]
                          }
                        ]
                      ]
                    }
                  ],
                  "**signature**: The signature of the conference data."
                ]
              }
            ],
            "**created**: Creation time of the event (as a RFC3339 timestamp). Read-only.",
            [
              "**creator**: The creator of the event. Read-only.",
              {
                "$ul": [
                  "**displayName**: The creator's name, if available.",
                  "**email**: The creator's email address, if available.",
                  "**id**: The creator's Profile ID, if available.",
                  "**self**: Whether the creator corresponds to the calendar on which this copy of the event appears. Read-only. The default is False. (default: false)"
                ]
              }
            ],
            "**description**: Description of the event. Can contain HTML. Optional.",
            [
              "**end**",
              {
                "$ul": [
                  "**date**: The date, in the format \"yyyy-mm-dd\", if this is an all-day event.",
                  "**dateTime**: The time, as a combined date-time value (formatted according to RFC3339). A time zone offset is required unless a time zone is explicitly specified in timeZone.",
                  "**timeZone**: The time zone in which the time is specified. (Formatted as an IANA Time Zone Database name, e.g. \"Europe/Zurich\".) For recurring events this field is required and specifies the time zone in which the recurrence is expanded. For single events this field is optional and indicates a custom time zone for the event start/end."
                ]
              }
            ],
            "**endTimeUnspecified**: Whether the end time is actually unspecified. An end time is still provided for compatibility reasons, even if this attribute is set to True. The default is False. (default: false)",
            "**etag**: ETag of the resource.",
            "**eventType**: Specific type of the event. This cannot be modified after the event is created. Possible values are:   (default: default)",
            [
              "**extendedProperties**: Extended properties of the event.",
              {
                "$ul": [
                  "**private**: Properties that are private to the copy of the event that appears on this calendar.",
                  "**shared**: Properties that are shared between copies of the event on other attendees' calendars."
                ]
              }
            ],
            [
              "**focusTimeProperties**",
              {
                "$ul": [
                  "**autoDeclineMode**: Whether to decline meeting invitations which overlap Focus Time events. Valid values are declineNone, meaning that no meeting invitations are declined; declineAllConflictingInvitations, meaning that all conflicting meeting invitations that conflict with the event are declined; and declineOnlyNewConflictingInvitations, meaning that only new conflicting meeting invitations which arrive while the Focus Time event is present are to be declined.",
                  "**chatStatus**: The status to mark the user in Chat and related products. This can be available or doNotDisturb.",
                  "**declineMessage**: Response message to set if an existing event or new invitation is automatically declined by Calendar."
                ]
              }
            ],
            [
              "**gadget**: A gadget that extends this event. Gadgets are deprecated; this structure is instead only used for returning birthday calendar metadata.",
              {
                "$ul": [
                  "**display**: The gadget's display mode. Deprecated. Possible values are:  ",
                  "**height**: The gadget's height in pixels. The height must be an integer greater than 0. Optional. Deprecated.",
                  "**iconLink**: The gadget's icon URL. The URL scheme must be HTTPS. Deprecated.",
                  "**link**: The gadget's URL. The URL scheme must be HTTPS. Deprecated.",
                  "**preferences**: Preferences.",
                  "**title**: The gadget's title. Deprecated.",
                  "**type**: The gadget's type. Deprecated.",
                  "**width**: The gadget's width in pixels. The width must be an integer greater than 0. Optional. Deprecated."
                ]
              }
            ],
            "**guestsCanInviteOthers**: Whether attendees other than the organizer can invite others to the event. Optional. The default is True. (default: true)",
            "**guestsCanModify**: Whether attendees other than the organizer can modify the event. Optional. The default is False. (default: false)",
            "**guestsCanSeeOtherGuests**: Whether attendees other than the organizer can see who the event's attendees are. Optional. The default is True. (default: true)",
            "**hangoutLink**: An absolute link to the Google Hangout associated with this event. Read-only.",
            "**htmlLink**: An absolute link to this event in the Google Calendar Web UI. Read-only.",
            "**iCalUID**: Event unique identifier as defined in RFC5545. It is used to uniquely identify events accross calendaring systems and must be supplied when importing events via the import method.",
            "**id**: Opaque identifier of the event. When creating new single or recurring events, you can specify their IDs. Provided IDs must follow these rules:  ",
            "**kind**: Type of the resource (\"calendar#event\"). (default: calendar#event)",
            "**location**: Geographic location of the event as free-form text. Optional.",
            "**locked**: Whether this is a locked event copy where no changes can be made to the main event fields \"summary\", \"description\", \"location\", \"start\", \"end\" or \"recurrence\". The default is False. Read-Only. (default: false)",
            [
              "**organizer**: The organizer of the event. If the organizer is also an attendee, this is indicated with a separate entry in attendees with the organizer field set to True. To change the organizer, use the move operation. Read-only, except when importing an event.",
              {
                "$ul": [
                  "**displayName**: The organizer's name, if available.",
                  "**email**: The organizer's email address, if available. It must be a valid email address as per RFC5322.",
                  "**id**: The organizer's Profile ID, if available.",
                  "**self**: Whether the organizer corresponds to the calendar on which this copy of the event appears. Read-only. The default is False. (default: false)"
                ]
              }
            ],
            [
              "**originalStartTime**",
              {
                "$ul": [
                  "**date**: The date, in the format \"yyyy-mm-dd\", if this is an all-day event.",
                  "**dateTime**: The time, as a combined date-time value (formatted according to RFC3339). A time zone offset is required unless a time zone is explicitly specified in timeZone.",
                  "**timeZone**: The time zone in which the time is specified. (Formatted as an IANA Time Zone Database name, e.g. \"Europe/Zurich\".) For recurring events this field is required and specifies the time zone in which the recurrence is expanded. For single events this field is optional and indicates a custom time zone for the event start/end."
                ]
              }
            ],
            [
              "**outOfOfficeProperties**",
              {
                "$ul": [
                  "**autoDeclineMode**: Whether to decline meeting invitations which overlap Out of office events. Valid values are declineNone, meaning that no meeting invitations are declined; declineAllConflictingInvitations, meaning that all conflicting meeting invitations that conflict with the event are declined; and declineOnlyNewConflictingInvitations, meaning that only new conflicting meeting invitations which arrive while the Out of office event is present are to be declined.",
                  "**declineMessage**: Response message to set if an existing event or new invitation is automatically declined by Calendar."
                ]
              }
            ],
            "**privateCopy**: If set to True, Event propagation is disabled. Note that it is not the same thing as Private event properties. Optional. Immutable. The default is False. (default: false)",
            "**recurrence**: List of RRULE, EXRULE, RDATE and EXDATE lines for a recurring event, as specified in RFC5545. Note that DTSTART and DTEND lines are not allowed in this field; event start and end times are specified in the start and end fields. This field is omitted for single events or instances of recurring events.",
            "**recurringEventId**: For an instance of a recurring event, this is the id of the recurring event to which this instance belongs. Immutable.",
            [
              "**reminders**: Information about the event's reminders for the authenticated user.",
              {
                "$ul": [
                  "**overrides**: If the event doesn't use the default reminders, this lists the reminders specific to the event, or, if not set, indicates that no reminders are set for this event. The maximum number of override reminders is 5.",
                  "**useDefault**: Whether the default reminders of the calendar apply to the event."
                ]
              }
            ],
            "**sequence**: Sequence number as per iCalendar.",
            [
              "**source**: Source from which the event was created. For example, a web page, an email message or any document identifiable by an URL with HTTP or HTTPS scheme. Can only be seen or modified by the creator of the event.",
              {
                "$ul": [
                  "**title**: Title of the source; for example a title of a web page or an email subject.",
                  "**url**: URL of the source pointing to a resource. The URL scheme must be HTTP or HTTPS."
                ]
              }
            ],
            [
              "**start**",
              {
                "$ul": [
                  "**date**: The date, in the format \"yyyy-mm-dd\", if this is an all-day event.",
                  "**dateTime**: The time, as a combined date-time value (formatted according to RFC3339). A time zone offset is required unless a time zone is explicitly specified in timeZone.",
                  "**timeZone**: The time zone in which the time is specified. (Formatted as an IANA Time Zone Database name, e.g. \"Europe/Zurich\".) For recurring events this field is required and specifies the time zone in which the recurrence is expanded. For single events this field is optional and indicates a custom time zone for the event start/end."
                ]
              }
            ],
            "**status**: Status of the event. Optional. Possible values are:  ",
            "**summary**: Title of the event.",
            "**transparency**: Whether the event blocks time on the calendar. Optional. Possible values are:   (default: opaque)",
            "**updated**: Last modification time of the event (as a RFC3339 timestamp). Read-only.",
            "**visibility**: Visibility of the event. Optional. Possible values are:   (default: default)",
            [
              "**workingLocationProperties**",
              {
                "$ul": [
                  [
                    "**customLocation**: If present, specifies that the user is working from a custom location.",
                    {
                      "$ul": [
                        "**label**: An optional extra label for additional information."
                      ]
                    }
                  ],
                  "**homeOffice**: If present, specifies that the user is working at home.",
                  [
                    "**officeLocation**: If present, specifies that the user is working from an office.",
                    {
                      "$ul": [
                        "**buildingId**: An optional building identifier. This should reference a building ID in the organization's Resources database.",
                        "**deskId**: An optional desk identifier.",
                        "**floorId**: An optional floor identifier.",
                        "**floorSectionId**: An optional floor section identifier.",
                        "**label**: The office name that's displayed in Calendar Web and Mobile clients. We recommend you reference a building name in the organization's Resources database."
                      ]
                    }
                  ],
                  "**type**: Type of the working location. Possible values are:  "
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
