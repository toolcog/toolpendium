{
  "name": "securitycenter_organizations_sources_findings_create",
  "description": "Creates a finding. The corresponding source must exist for finding creation to succeed.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. Resource name of the new finding's parent. Its format should be \"organizations/[organization_id]/sources/[source_id]\"."
      },
      "findingId": {
        "type": "string",
        "description": "Required. Unique identifier provided by the client within the parent scope. It must be alphanumeric and less than or equal to 32 characters and greater than 0 characters in length."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/Finding"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "Finding": {
        "description": "Security Command Center finding. A finding is a record of assessment data like security, risk, health, or privacy, that is ingested into Security Command Center for presentation, notification, analysis, policy testing, and enforcement. For example, a cross-site scripting (XSS) vulnerability in an App Engine application is a finding.",
        "properties": {
          "access": {
            "$ref": "#/$defs/Access"
          },
          "application": {
            "$ref": "#/$defs/Application"
          },
          "attackExposure": {
            "$ref": "#/$defs/AttackExposure"
          },
          "backupDisasterRecovery": {
            "$ref": "#/$defs/BackupDisasterRecovery"
          },
          "canonicalName": {
            "description": "The canonical name of the finding. It's either \"organizations/{organization_id}/sources/{source_id}/findings/{finding_id}\", \"folders/{folder_id}/sources/{source_id}/findings/{finding_id}\" or \"projects/{project_number}/sources/{source_id}/findings/{finding_id}\", depending on the closest CRM ancestor of the resource associated with the finding.",
            "type": "string"
          },
          "category": {
            "description": "The additional taxonomy group within findings from a given source. This field is immutable after creation time. Example: \"XSS_FLASH_INJECTION\"",
            "type": "string"
          },
          "cloudDlpDataProfile": {
            "$ref": "#/$defs/CloudDlpDataProfile"
          },
          "cloudDlpInspection": {
            "$ref": "#/$defs/CloudDlpInspection"
          },
          "compliances": {
            "description": "Contains compliance information for security standards associated to the finding.",
            "items": {
              "$ref": "#/$defs/Compliance"
            },
            "type": "array"
          },
          "connections": {
            "description": "Contains information about the IP connection associated with the finding.",
            "items": {
              "$ref": "#/$defs/Connection"
            },
            "type": "array"
          },
          "contacts": {
            "additionalProperties": {
              "$ref": "#/$defs/ContactDetails"
            },
            "description": "Output only. Map containing the points of contact for the given finding. The key represents the type of contact, while the value contains a list of all the contacts that pertain. Please refer to: https://cloud.google.com/resource-manager/docs/managing-notification-contacts#notification-categories { \"security\": { \"contacts\": [ { \"email\": \"person1@company.com\" }, { \"email\": \"person2@company.com\" } ] } }",
            "readOnly": true,
            "type": "object"
          },
          "containers": {
            "description": "Containers associated with the finding. This field provides information for both Kubernetes and non-Kubernetes containers.",
            "items": {
              "$ref": "#/$defs/Container"
            },
            "type": "array"
          },
          "createTime": {
            "description": "The time at which the finding was created in Security Command Center.",
            "format": "google-datetime",
            "type": "string"
          },
          "database": {
            "$ref": "#/$defs/Database"
          },
          "description": {
            "description": "Contains more details about the finding.",
            "type": "string"
          },
          "eventTime": {
            "description": "The time the finding was first detected. If an existing finding is updated, then this is the time the update occurred. For example, if the finding represents an open firewall, this property captures the time the detector believes the firewall became open. The accuracy is determined by the detector. If the finding is later resolved, then this time reflects when the finding was resolved. This must not be set to a value greater than the current timestamp.",
            "format": "google-datetime",
            "type": "string"
          },
          "exfiltration": {
            "$ref": "#/$defs/Exfiltration"
          },
          "externalSystems": {
            "additionalProperties": {
              "$ref": "#/$defs/GoogleCloudSecuritycenterV1ExternalSystem"
            },
            "description": "Output only. Third party SIEM/SOAR fields within SCC, contains external system information and external system finding fields.",
            "readOnly": true,
            "type": "object"
          },
          "externalUri": {
            "description": "The URI that, if available, points to a web page outside of Security Command Center where additional information about the finding can be found. This field is guaranteed to be either empty or a well formed URL.",
            "type": "string"
          },
          "files": {
            "description": "File associated with the finding.",
            "items": {
              "$ref": "#/$defs/File"
            },
            "type": "array"
          },
          "findingClass": {
            "description": "The class of the finding.",
            "enum": [
              "FINDING_CLASS_UNSPECIFIED",
              "THREAT",
              "VULNERABILITY",
              "MISCONFIGURATION",
              "OBSERVATION",
              "SCC_ERROR",
              "POSTURE_VIOLATION"
            ],
            "type": "string"
          },
          "iamBindings": {
            "description": "Represents IAM bindings associated with the finding.",
            "items": {
              "$ref": "#/$defs/IamBinding"
            },
            "type": "array"
          },
          "indicator": {
            "$ref": "#/$defs/Indicator"
          },
          "kernelRootkit": {
            "$ref": "#/$defs/KernelRootkit"
          },
          "kubernetes": {
            "$ref": "#/$defs/Kubernetes"
          },
          "loadBalancers": {
            "description": "The load balancers associated with the finding.",
            "items": {
              "$ref": "#/$defs/LoadBalancer"
            },
            "type": "array"
          },
          "logEntries": {
            "description": "Log entries that are relevant to the finding.",
            "items": {
              "$ref": "#/$defs/LogEntry"
            },
            "type": "array"
          },
          "mitreAttack": {
            "$ref": "#/$defs/MitreAttack"
          },
          "moduleName": {
            "description": "Unique identifier of the module which generated the finding. Example: folders/598186756061/securityHealthAnalyticsSettings/customModules/56799441161885",
            "type": "string"
          },
          "mute": {
            "description": "Indicates the mute state of a finding (either muted, unmuted or undefined). Unlike other attributes of a finding, a finding provider shouldn't set the value of mute.",
            "enum": [
              "MUTE_UNSPECIFIED",
              "MUTED",
              "UNMUTED",
              "UNDEFINED"
            ],
            "type": "string"
          },
          "muteInitiator": {
            "description": "Records additional information about the mute operation, for example, the [mute configuration](/security-command-center/docs/how-to-mute-findings) that muted the finding and the user who muted the finding.",
            "type": "string"
          },
          "muteUpdateTime": {
            "description": "Output only. The most recent time this finding was muted or unmuted.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "The [relative resource name](https://cloud.google.com/apis/design/resource_names#relative_resource_name) of the finding. Example: \"organizations/{organization_id}/sources/{source_id}/findings/{finding_id}\", \"folders/{folder_id}/sources/{source_id}/findings/{finding_id}\", \"projects/{project_id}/sources/{source_id}/findings/{finding_id}\".",
            "type": "string"
          },
          "nextSteps": {
            "description": "Steps to address the finding.",
            "type": "string"
          },
          "orgPolicies": {
            "description": "Contains information about the org policies associated with the finding.",
            "items": {
              "$ref": "#/$defs/OrgPolicy"
            },
            "type": "array"
          },
          "parent": {
            "description": "The relative resource name of the source the finding belongs to. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name This field is immutable after creation time. For example: \"organizations/{organization_id}/sources/{source_id}\"",
            "type": "string"
          },
          "parentDisplayName": {
            "description": "Output only. The human readable display name of the finding source such as \"Event Threat Detection\" or \"Security Health Analytics\".",
            "readOnly": true,
            "type": "string"
          },
          "processes": {
            "description": "Represents operating system processes associated with the Finding.",
            "items": {
              "$ref": "#/$defs/Process"
            },
            "type": "array"
          },
          "resourceName": {
            "description": "For findings on Google Cloud resources, the full resource name of the Google Cloud resource this finding is for. See: https://cloud.google.com/apis/design/resource_names#full_resource_name When the finding is for a non-Google Cloud resource, the resourceName can be a customer or partner defined string. This field is immutable after creation time.",
            "type": "string"
          },
          "securityMarks": {
            "$ref": "#/$defs/SecurityMarks"
          },
          "securityPosture": {
            "$ref": "#/$defs/SecurityPosture"
          },
          "severity": {
            "description": "The severity of the finding. This field is managed by the source that writes the finding.",
            "enum": [
              "SEVERITY_UNSPECIFIED",
              "CRITICAL",
              "HIGH",
              "MEDIUM",
              "LOW"
            ],
            "type": "string"
          },
          "sourceProperties": {
            "additionalProperties": {},
            "description": "Source specific properties. These properties are managed by the source that writes the finding. The key names in the source_properties map must be between 1 and 255 characters, and must start with a letter and contain alphanumeric characters or underscores only.",
            "type": "object"
          },
          "state": {
            "description": "The state of the finding.",
            "enum": [
              "STATE_UNSPECIFIED",
              "ACTIVE",
              "INACTIVE"
            ],
            "type": "string"
          },
          "vulnerability": {
            "$ref": "#/$defs/Vulnerability"
          }
        },
        "type": "object"
      },
      "Access": {
        "description": "Represents an access event.",
        "properties": {
          "callerIp": {
            "description": "Caller's IP address, such as \"1.1.1.1\".",
            "type": "string"
          },
          "callerIpGeo": {
            "$ref": "#/$defs/Geolocation"
          },
          "methodName": {
            "description": "The method that the service account called, e.g. \"SetIamPolicy\".",
            "type": "string"
          },
          "principalEmail": {
            "description": "Associated email, such as \"foo@google.com\". The email address of the authenticated user or a service account acting on behalf of a third party principal making the request. For third party identity callers, the `principal_subject` field is populated instead of this field. For privacy reasons, the principal email address is sometimes redacted. For more information, see [Caller identities in audit logs](https://cloud.google.com/logging/docs/audit#user-id).",
            "type": "string"
          },
          "principalSubject": {
            "description": "A string that represents the principal_subject that is associated with the identity. Unlike `principal_email`, `principal_subject` supports principals that aren't associated with email addresses, such as third party principals. For most identities, the format is `principal://iam.googleapis.com/{identity pool name}/subject/{subject}`. Some GKE identities, such as GKE_WORKLOAD, FREEFORM, and GKE_HUB_WORKLOAD, still use the legacy format `serviceAccount:{identity pool name}[{subject}]`.",
            "type": "string"
          },
          "serviceAccountDelegationInfo": {
            "description": "The identity delegation history of an authenticated service account that made the request. The `serviceAccountDelegationInfo[]` object contains information about the real authorities that try to access Google Cloud resources by delegating on a service account. When multiple authorities are present, they are guaranteed to be sorted based on the original ordering of the identity delegation events.",
            "items": {
              "$ref": "#/$defs/ServiceAccountDelegationInfo"
            },
            "type": "array"
          },
          "serviceAccountKeyName": {
            "description": "The name of the service account key that was used to create or exchange credentials when authenticating the service account that made the request. This is a scheme-less URI full resource name. For example: \"//iam.googleapis.com/projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}/keys/{key}\". ",
            "type": "string"
          },
          "serviceName": {
            "description": "This is the API service that the service account made a call to, e.g. \"iam.googleapis.com\"",
            "type": "string"
          },
          "userAgent": {
            "description": "The caller's user agent string associated with the finding.",
            "type": "string"
          },
          "userAgentFamily": {
            "description": "Type of user agent associated with the finding. For example, an operating system shell or an embedded or standalone application.",
            "type": "string"
          },
          "userName": {
            "description": "A string that represents a username. The username provided depends on the type of the finding and is likely not an IAM principal. For example, this can be a system username if the finding is related to a virtual machine, or it can be an application login username.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Geolocation": {
        "description": "Represents a geographical location for a given access.",
        "properties": {
          "regionCode": {
            "description": "A CLDR.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServiceAccountDelegationInfo": {
        "description": "Identity delegation history of an authenticated service account.",
        "properties": {
          "principalEmail": {
            "description": "The email address of a Google account.",
            "type": "string"
          },
          "principalSubject": {
            "description": "A string representing the principal_subject associated with the identity. As compared to `principal_email`, supports principals that aren't associated with email addresses, such as third party principals. For most identities, the format will be `principal://iam.googleapis.com/{identity pool name}/subjects/{subject}` except for some GKE identities (GKE_WORKLOAD, FREEFORM, GKE_HUB_WORKLOAD) that are still in the legacy format `serviceAccount:{identity pool name}[{subject}]`",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Application": {
        "description": "Represents an application associated with a finding.",
        "properties": {
          "baseUri": {
            "description": "The base URI that identifies the network location of the application in which the vulnerability was detected. For example, `http://example.com`.",
            "type": "string"
          },
          "fullUri": {
            "description": "The full URI with payload that can be used to reproduce the vulnerability. For example, `http://example.com?p=aMmYgI6H`.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AttackExposure": {
        "description": "An attack exposure contains the results of an attack path simulation run.",
        "properties": {
          "attackExposureResult": {
            "description": "The resource name of the attack path simulation result that contains the details regarding this attack exposure score. Example: organizations/123/simulations/456/attackExposureResults/789",
            "type": "string"
          },
          "exposedHighValueResourcesCount": {
            "description": "The number of high value resources that are exposed as a result of this finding.",
            "format": "int32",
            "type": "integer"
          },
          "exposedLowValueResourcesCount": {
            "description": "The number of high value resources that are exposed as a result of this finding.",
            "format": "int32",
            "type": "integer"
          },
          "exposedMediumValueResourcesCount": {
            "description": "The number of medium value resources that are exposed as a result of this finding.",
            "format": "int32",
            "type": "integer"
          },
          "latestCalculationTime": {
            "description": "The most recent time the attack exposure was updated on this finding.",
            "format": "google-datetime",
            "type": "string"
          },
          "score": {
            "description": "A number between 0 (inclusive) and infinity that represents how important this finding is to remediate. The higher the score, the more important it is to remediate.",
            "format": "double",
            "type": "number"
          },
          "state": {
            "description": "What state this AttackExposure is in. This captures whether or not an attack exposure has been calculated or not.",
            "enum": [
              "STATE_UNSPECIFIED",
              "CALCULATED",
              "NOT_CALCULATED"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "BackupDisasterRecovery": {
        "description": "Information related to Google Cloud Backup and DR Service findings.",
        "properties": {
          "appliance": {
            "description": "The name of the Backup and DR appliance that captures, moves, and manages the lifecycle of backup data. For example, `backup-server-57137`.",
            "type": "string"
          },
          "applications": {
            "description": "The names of Backup and DR applications. An application is a VM, database, or file system on a managed host monitored by a backup and recovery appliance. For example, `centos7-01-vol00`, `centos7-01-vol01`, `centos7-01-vol02`.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "backupCreateTime": {
            "description": "The timestamp at which the Backup and DR backup was created.",
            "format": "google-datetime",
            "type": "string"
          },
          "backupTemplate": {
            "description": "The name of a Backup and DR template which comprises one or more backup policies. See the [Backup and DR documentation](https://cloud.google.com/backup-disaster-recovery/docs/concepts/backup-plan#temp) for more information. For example, `snap-ov`.",
            "type": "string"
          },
          "backupType": {
            "description": "The backup type of the Backup and DR image. For example, `Snapshot`, `Remote Snapshot`, `OnVault`.",
            "type": "string"
          },
          "host": {
            "description": "The name of a Backup and DR host, which is managed by the backup and recovery appliance and known to the management console. The host can be of type Generic (for example, Compute Engine, SQL Server, Oracle DB, SMB file system, etc.), vCenter, or an ESX server. See the [Backup and DR documentation on hosts](https://cloud.google.com/backup-disaster-recovery/docs/configuration/manage-hosts-and-their-applications) for more information. For example, `centos7-01`.",
            "type": "string"
          },
          "policies": {
            "description": "The names of Backup and DR policies that are associated with a template and that define when to run a backup, how frequently to run a backup, and how long to retain the backup image. For example, `onvaults`.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "policyOptions": {
            "description": "The names of Backup and DR advanced policy options of a policy applying to an application. See the [Backup and DR documentation on policy options](https://cloud.google.com/backup-disaster-recovery/docs/create-plan/policy-settings). For example, `skipofflineappsincongrp, nounmap`.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "profile": {
            "description": "The name of the Backup and DR resource profile that specifies the storage media for backups of application and VM data. See the [Backup and DR documentation on profiles](https://cloud.google.com/backup-disaster-recovery/docs/concepts/backup-plan#profile). For example, `GCP`.",
            "type": "string"
          },
          "storagePool": {
            "description": "The name of the Backup and DR storage pool that the backup and recovery appliance is storing data in. The storage pool could be of type Cloud, Primary, Snapshot, or OnVault. See the [Backup and DR documentation on storage pools](https://cloud.google.com/backup-disaster-recovery/docs/concepts/storage-pools). For example, `DiskPoolOne`.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CloudDlpDataProfile": {
        "description": "The [data profile](https://cloud.google.com/dlp/docs/data-profiles) associated with the finding.",
        "properties": {
          "dataProfile": {
            "description": "Name of the data profile, for example, `projects/123/locations/europe/tableProfiles/8383929`.",
            "type": "string"
          },
          "parentType": {
            "description": "The resource hierarchy level at which the data profile was generated.",
            "enum": [
              "PARENT_TYPE_UNSPECIFIED",
              "ORGANIZATION",
              "PROJECT"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "CloudDlpInspection": {
        "description": "Details about the Cloud Data Loss Prevention (Cloud DLP) [inspection job](https://cloud.google.com/dlp/docs/concepts-job-triggers) that produced the finding.",
        "properties": {
          "fullScan": {
            "description": "Whether Cloud DLP scanned the complete resource or a sampled subset.",
            "type": "boolean"
          },
          "infoType": {
            "description": "The type of information (or *[infoType](https://cloud.google.com/dlp/docs/infotypes-reference)*) found, for example, `EMAIL_ADDRESS` or `STREET_ADDRESS`.",
            "type": "string"
          },
          "infoTypeCount": {
            "description": "The number of times Cloud DLP found this infoType within this job and resource.",
            "format": "int64",
            "type": "string"
          },
          "inspectJob": {
            "description": "Name of the inspection job, for example, `projects/123/locations/europe/dlpJobs/i-8383929`.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Compliance": {
        "description": "Contains compliance information about a security standard indicating unmet recommendations.",
        "properties": {
          "ids": {
            "description": "Policies within the standard or benchmark, for example, A.12.4.1",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "standard": {
            "description": "Industry-wide compliance standards or benchmarks, such as CIS, PCI, and OWASP.",
            "type": "string"
          },
          "version": {
            "description": "Version of the standard or benchmark, for example, 1.1",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Connection": {
        "description": "Contains information about the IP connection associated with the finding.",
        "properties": {
          "destinationIp": {
            "description": "Destination IP address. Not present for sockets that are listening and not connected.",
            "type": "string"
          },
          "destinationPort": {
            "description": "Destination port. Not present for sockets that are listening and not connected.",
            "format": "int32",
            "type": "integer"
          },
          "protocol": {
            "description": "IANA Internet Protocol Number such as TCP(6) and UDP(17).",
            "enum": [
              "PROTOCOL_UNSPECIFIED",
              "ICMP",
              "TCP",
              "UDP",
              "GRE",
              "ESP"
            ],
            "type": "string"
          },
          "sourceIp": {
            "description": "Source IP address.",
            "type": "string"
          },
          "sourcePort": {
            "description": "Source port.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ContactDetails": {
        "description": "Details about specific contacts",
        "properties": {
          "contacts": {
            "description": "A list of contacts",
            "items": {
              "$ref": "#/$defs/Contact"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Contact": {
        "description": "The email address of a contact.",
        "properties": {
          "email": {
            "description": "An email address. For example, \"`person123@company.com`\".",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Container": {
        "description": "Container associated with the finding.",
        "properties": {
          "createTime": {
            "description": "The time that the container was created.",
            "format": "google-datetime",
            "type": "string"
          },
          "imageId": {
            "description": "Optional container image ID, if provided by the container runtime. Uniquely identifies the container image launched using a container image digest.",
            "type": "string"
          },
          "labels": {
            "description": "Container labels, as provided by the container runtime.",
            "items": {
              "$ref": "#/$defs/Label"
            },
            "type": "array"
          },
          "name": {
            "description": "Name of the container.",
            "type": "string"
          },
          "uri": {
            "description": "Container image URI provided when configuring a pod or container. This string can identify a container image version using mutable tags.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Label": {
        "description": "Represents a generic name-value label. A label has separate name and value fields to support filtering with the `contains()` function. For more information, see [Filtering on array-type fields](https://cloud.google.com/security-command-center/docs/how-to-api-list-findings#array-contains-filtering).",
        "properties": {
          "name": {
            "description": "Name of the label.",
            "type": "string"
          },
          "value": {
            "description": "Value that corresponds to the label's name.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Database": {
        "description": "Represents database access information, such as queries. A database may be a sub-resource of an instance (as in the case of Cloud SQL instances or Cloud Spanner instances), or the database instance itself. Some database resources might not have the [full resource name](https://google.aip.dev/122#full-resource-names) populated because these resource types, such as Cloud SQL databases, are not yet supported by Cloud Asset Inventory. In these cases only the display name is provided.",
        "properties": {
          "displayName": {
            "description": "The human-readable name of the database that the user connected to.",
            "type": "string"
          },
          "grantees": {
            "description": "The target usernames, roles, or groups of an SQL privilege grant, which is not an IAM policy change.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "name": {
            "description": "Some database resources may not have the [full resource name](https://google.aip.dev/122#full-resource-names) populated because these resource types are not yet supported by Cloud Asset Inventory (e.g. Cloud SQL databases). In these cases only the display name will be provided. The [full resource name](https://google.aip.dev/122#full-resource-names) of the database that the user connected to, if it is supported by Cloud Asset Inventory.",
            "type": "string"
          },
          "query": {
            "description": "The SQL statement that is associated with the database access.",
            "type": "string"
          },
          "userName": {
            "description": "The username used to connect to the database. The username might not be an IAM principal and does not have a set format.",
            "type": "string"
          },
          "version": {
            "description": "The version of the database, for example, POSTGRES_14. See [the complete list](https://cloud.google.com/sql/docs/mysql/admin-api/rest/v1/SqlDatabaseVersion).",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Exfiltration": {
        "description": "Exfiltration represents a data exfiltration attempt from one or more sources to one or more targets. The `sources` attribute lists the sources of the exfiltrated data. The `targets` attribute lists the destinations the data was copied to.",
        "properties": {
          "sources": {
            "description": "If there are multiple sources, then the data is considered \"joined\" between them. For instance, BigQuery can join multiple tables, and each table would be considered a source.",
            "items": {
              "$ref": "#/$defs/ExfilResource"
            },
            "type": "array"
          },
          "targets": {
            "description": "If there are multiple targets, each target would get a complete copy of the \"joined\" source data.",
            "items": {
              "$ref": "#/$defs/ExfilResource"
            },
            "type": "array"
          },
          "totalExfiltratedBytes": {
            "description": "Total exfiltrated bytes processed for the entire job.",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ExfilResource": {
        "description": "Resource where data was exfiltrated from or exfiltrated to.",
        "properties": {
          "components": {
            "description": "Subcomponents of the asset that was exfiltrated, like URIs used during exfiltration, table names, databases, and filenames. For example, multiple tables might have been exfiltrated from the same Cloud SQL instance, or multiple files might have been exfiltrated from the same Cloud Storage bucket.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "name": {
            "description": "The resource's [full resource name](https://cloud.google.com/apis/design/resource_names#full_resource_name).",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudSecuritycenterV1ExternalSystem": {
        "description": "Representation of third party SIEM/SOAR fields within SCC.",
        "properties": {
          "assignees": {
            "description": "References primary/secondary etc assignees in the external system.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "caseCloseTime": {
            "description": "The time when the case was closed, as reported by the external system.",
            "format": "google-datetime",
            "type": "string"
          },
          "caseCreateTime": {
            "description": "The time when the case was created, as reported by the external system.",
            "format": "google-datetime",
            "type": "string"
          },
          "casePriority": {
            "description": "The priority of the finding's corresponding case in the external system.",
            "type": "string"
          },
          "caseSla": {
            "description": "The SLA of the finding's corresponding case in the external system.",
            "format": "google-datetime",
            "type": "string"
          },
          "caseUri": {
            "description": "The link to the finding's corresponding case in the external system.",
            "type": "string"
          },
          "externalSystemUpdateTime": {
            "description": "The time when the case was last updated, as reported by the external system.",
            "format": "google-datetime",
            "type": "string"
          },
          "externalUid": {
            "description": "The identifier that's used to track the finding's corresponding case in the external system.",
            "type": "string"
          },
          "name": {
            "description": "Full resource name of the external system, for example: \"organizations/1234/sources/5678/findings/123456/externalSystems/jira\", \"folders/1234/sources/5678/findings/123456/externalSystems/jira\", \"projects/1234/sources/5678/findings/123456/externalSystems/jira\"",
            "type": "string"
          },
          "status": {
            "description": "The most recent status of the finding's corresponding case, as reported by the external system.",
            "type": "string"
          },
          "ticketInfo": {
            "$ref": "#/$defs/TicketInfo"
          }
        },
        "type": "object"
      },
      "TicketInfo": {
        "description": "Information about the ticket, if any, that is being used to track the resolution of the issue that is identified by this finding.",
        "properties": {
          "assignee": {
            "description": "The assignee of the ticket in the ticket system.",
            "type": "string"
          },
          "description": {
            "description": "The description of the ticket in the ticket system.",
            "type": "string"
          },
          "id": {
            "description": "The identifier of the ticket in the ticket system.",
            "type": "string"
          },
          "status": {
            "description": "The latest status of the ticket, as reported by the ticket system.",
            "type": "string"
          },
          "updateTime": {
            "description": "The time when the ticket was last updated, as reported by the ticket system.",
            "format": "google-datetime",
            "type": "string"
          },
          "uri": {
            "description": "The link to the ticket in the ticket system.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "File": {
        "description": "File information about the related binary/library used by an executable, or the script used by a script interpreter",
        "properties": {
          "contents": {
            "description": "Prefix of the file contents as a JSON-encoded string.",
            "type": "string"
          },
          "diskPath": {
            "$ref": "#/$defs/DiskPath"
          },
          "hashedSize": {
            "description": "The length in bytes of the file prefix that was hashed. If hashed_size == size, any hashes reported represent the entire file.",
            "format": "int64",
            "type": "string"
          },
          "partiallyHashed": {
            "description": "True when the hash covers only a prefix of the file.",
            "type": "boolean"
          },
          "path": {
            "description": "Absolute path of the file as a JSON encoded string.",
            "type": "string"
          },
          "sha256": {
            "description": "SHA256 hash of the first hashed_size bytes of the file encoded as a hex string. If hashed_size == size, sha256 represents the SHA256 hash of the entire file.",
            "type": "string"
          },
          "size": {
            "description": "Size of the file in bytes.",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DiskPath": {
        "description": "Path of the file in terms of underlying disk/partition identifiers.",
        "properties": {
          "partitionUuid": {
            "description": "UUID of the partition (format https://wiki.archlinux.org/title/persistent_block_device_naming#by-uuid)",
            "type": "string"
          },
          "relativePath": {
            "description": "Relative path of the file in the partition as a JSON encoded string. Example: /home/user1/executable_file.sh",
            "type": "string"
          }
        },
        "type": "object"
      },
      "IamBinding": {
        "description": "Represents a particular IAM binding, which captures a member's role addition, removal, or state.",
        "properties": {
          "action": {
            "description": "The action that was performed on a Binding.",
            "enum": [
              "ACTION_UNSPECIFIED",
              "ADD",
              "REMOVE"
            ],
            "type": "string"
          },
          "member": {
            "description": "A single identity requesting access for a Cloud Platform resource, for example, \"foo@google.com\".",
            "type": "string"
          },
          "role": {
            "description": "Role that is assigned to \"members\". For example, \"roles/viewer\", \"roles/editor\", or \"roles/owner\".",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Indicator": {
        "description": "Represents what's commonly known as an _indicator of compromise_ (IoC) in computer forensics. This is an artifact observed on a network or in an operating system that, with high confidence, indicates a computer intrusion. For more information, see [Indicator of compromise](https://en.wikipedia.org/wiki/Indicator_of_compromise).",
        "properties": {
          "domains": {
            "description": "List of domains associated to the Finding.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "ipAddresses": {
            "description": "The list of IP addresses that are associated with the finding.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "signatures": {
            "description": "The list of matched signatures indicating that the given process is present in the environment.",
            "items": {
              "$ref": "#/$defs/ProcessSignature"
            },
            "type": "array"
          },
          "uris": {
            "description": "The list of URIs associated to the Findings.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ProcessSignature": {
        "description": "Indicates what signature matched this process.",
        "properties": {
          "memoryHashSignature": {
            "$ref": "#/$defs/MemoryHashSignature"
          },
          "signatureType": {
            "description": "Describes the type of resource associated with the signature.",
            "enum": [
              "SIGNATURE_TYPE_UNSPECIFIED",
              "SIGNATURE_TYPE_PROCESS",
              "SIGNATURE_TYPE_FILE"
            ],
            "type": "string"
          },
          "yaraRuleSignature": {
            "$ref": "#/$defs/YaraRuleSignature"
          }
        },
        "type": "object"
      },
      "MemoryHashSignature": {
        "description": "A signature corresponding to memory page hashes.",
        "properties": {
          "binaryFamily": {
            "description": "The binary family.",
            "type": "string"
          },
          "detections": {
            "description": "The list of memory hash detections contributing to the binary family match.",
            "items": {
              "$ref": "#/$defs/Detection"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Detection": {
        "description": "Memory hash detection contributing to the binary family match.",
        "properties": {
          "binary": {
            "description": "The name of the binary associated with the memory hash signature detection.",
            "type": "string"
          },
          "percentPagesMatched": {
            "description": "The percentage of memory page hashes in the signature that were matched.",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "YaraRuleSignature": {
        "description": "A signature corresponding to a YARA rule.",
        "properties": {
          "yaraRule": {
            "description": "The name of the YARA rule.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "KernelRootkit": {
        "description": "Kernel mode rootkit signatures.",
        "properties": {
          "name": {
            "description": "Rootkit name, when available.",
            "type": "string"
          },
          "unexpectedCodeModification": {
            "description": "True if unexpected modifications of kernel code memory are present.",
            "type": "boolean"
          },
          "unexpectedFtraceHandler": {
            "description": "True if `ftrace` points are present with callbacks pointing to regions that are not in the expected kernel or module code range.",
            "type": "boolean"
          },
          "unexpectedInterruptHandler": {
            "description": "True if interrupt handlers that are are not in the expected kernel or module code regions are present.",
            "type": "boolean"
          },
          "unexpectedKernelCodePages": {
            "description": "True if kernel code pages that are not in the expected kernel or module code regions are present.",
            "type": "boolean"
          },
          "unexpectedKprobeHandler": {
            "description": "True if `kprobe` points are present with callbacks pointing to regions that are not in the expected kernel or module code range.",
            "type": "boolean"
          },
          "unexpectedProcessesInRunqueue": {
            "description": "True if unexpected processes in the scheduler run queue are present. Such processes are in the run queue, but not in the process task list.",
            "type": "boolean"
          },
          "unexpectedReadOnlyDataModification": {
            "description": "True if unexpected modifications of kernel read-only data memory are present.",
            "type": "boolean"
          },
          "unexpectedSystemCallHandler": {
            "description": "True if system call handlers that are are not in the expected kernel or module code regions are present.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "Kubernetes": {
        "description": "Kubernetes-related attributes.",
        "properties": {
          "accessReviews": {
            "description": "Provides information on any Kubernetes access reviews (privilege checks) relevant to the finding.",
            "items": {
              "$ref": "#/$defs/AccessReview"
            },
            "type": "array"
          },
          "bindings": {
            "description": "Provides Kubernetes role binding information for findings that involve [RoleBindings or ClusterRoleBindings](https://cloud.google.com/kubernetes-engine/docs/how-to/role-based-access-control).",
            "items": {
              "$ref": "#/$defs/GoogleCloudSecuritycenterV1Binding"
            },
            "type": "array"
          },
          "nodePools": {
            "description": "GKE [node pools](https://cloud.google.com/kubernetes-engine/docs/concepts/node-pools) associated with the finding. This field contains node pool information for each node, when it is available.",
            "items": {
              "$ref": "#/$defs/NodePool"
            },
            "type": "array"
          },
          "nodes": {
            "description": "Provides Kubernetes [node](https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-architecture#nodes) information.",
            "items": {
              "$ref": "#/$defs/Node"
            },
            "type": "array"
          },
          "objects": {
            "description": "Kubernetes objects related to the finding.",
            "items": {
              "$ref": "#/$defs/Object"
            },
            "type": "array"
          },
          "pods": {
            "description": "Kubernetes [Pods](https://cloud.google.com/kubernetes-engine/docs/concepts/pod) associated with the finding. This field contains Pod records for each container that is owned by a Pod.",
            "items": {
              "$ref": "#/$defs/Pod"
            },
            "type": "array"
          },
          "roles": {
            "description": "Provides Kubernetes role information for findings that involve [Roles or ClusterRoles](https://cloud.google.com/kubernetes-engine/docs/how-to/role-based-access-control).",
            "items": {
              "$ref": "#/$defs/Role"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AccessReview": {
        "description": "Conveys information about a Kubernetes access review (such as one returned by a [`kubectl auth can-i`](https://kubernetes.io/docs/reference/access-authn-authz/authorization/#checking-api-access) command) that was involved in a finding.",
        "properties": {
          "group": {
            "description": "The API group of the resource. \"*\" means all.",
            "type": "string"
          },
          "name": {
            "description": "The name of the resource being requested. Empty means all.",
            "type": "string"
          },
          "ns": {
            "description": "Namespace of the action being requested. Currently, there is no distinction between no namespace and all namespaces. Both are represented by \"\" (empty).",
            "type": "string"
          },
          "resource": {
            "description": "The optional resource type requested. \"*\" means all.",
            "type": "string"
          },
          "subresource": {
            "description": "The optional subresource type.",
            "type": "string"
          },
          "verb": {
            "description": "A Kubernetes resource API verb, like get, list, watch, create, update, delete, proxy. \"*\" means all.",
            "type": "string"
          },
          "version": {
            "description": "The API version of the resource. \"*\" means all.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudSecuritycenterV1Binding": {
        "description": "Represents a Kubernetes RoleBinding or ClusterRoleBinding.",
        "properties": {
          "name": {
            "description": "Name for the binding.",
            "type": "string"
          },
          "ns": {
            "description": "Namespace for the binding.",
            "type": "string"
          },
          "role": {
            "$ref": "#/$defs/Role"
          },
          "subjects": {
            "description": "Represents one or more subjects that are bound to the role. Not always available for PATCH requests.",
            "items": {
              "$ref": "#/$defs/Subject"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Role": {
        "description": "Kubernetes Role or ClusterRole.",
        "properties": {
          "kind": {
            "description": "Role type.",
            "enum": [
              "KIND_UNSPECIFIED",
              "ROLE",
              "CLUSTER_ROLE"
            ],
            "type": "string"
          },
          "name": {
            "description": "Role name.",
            "type": "string"
          },
          "ns": {
            "description": "Role namespace.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Subject": {
        "description": "Represents a Kubernetes subject.",
        "properties": {
          "kind": {
            "description": "Authentication type for the subject.",
            "enum": [
              "AUTH_TYPE_UNSPECIFIED",
              "USER",
              "SERVICEACCOUNT",
              "GROUP"
            ],
            "type": "string"
          },
          "name": {
            "description": "Name for the subject.",
            "type": "string"
          },
          "ns": {
            "description": "Namespace for the subject.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "NodePool": {
        "description": "Provides GKE node pool information.",
        "properties": {
          "name": {
            "description": "Kubernetes node pool name.",
            "type": "string"
          },
          "nodes": {
            "description": "Nodes associated with the finding.",
            "items": {
              "$ref": "#/$defs/Node"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Node": {
        "description": "Kubernetes nodes associated with the finding.",
        "properties": {
          "name": {
            "description": "[Full resource name](https://google.aip.dev/122#full-resource-names) of the Compute Engine VM running the cluster node.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Object": {
        "description": "Kubernetes object related to the finding, uniquely identified by GKNN. Used if the object Kind is not one of Pod, Node, NodePool, Binding, or AccessReview.",
        "properties": {
          "containers": {
            "description": "Pod containers associated with this finding, if any.",
            "items": {
              "$ref": "#/$defs/Container"
            },
            "type": "array"
          },
          "group": {
            "description": "Kubernetes object group, such as \"policy.k8s.io/v1\".",
            "type": "string"
          },
          "kind": {
            "description": "Kubernetes object kind, such as \"Namespace\".",
            "type": "string"
          },
          "name": {
            "description": "Kubernetes object name. For details see https://kubernetes.io/docs/concepts/overview/working-with-objects/names/.",
            "type": "string"
          },
          "ns": {
            "description": "Kubernetes object namespace. Must be a valid DNS label. Named \"ns\" to avoid collision with C++ namespace keyword. For details see https://kubernetes.io/docs/tasks/administer-cluster/namespaces/.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Pod": {
        "description": "A Kubernetes Pod.",
        "properties": {
          "containers": {
            "description": "Pod containers associated with this finding, if any.",
            "items": {
              "$ref": "#/$defs/Container"
            },
            "type": "array"
          },
          "labels": {
            "description": "Pod labels. For Kubernetes containers, these are applied to the container.",
            "items": {
              "$ref": "#/$defs/Label"
            },
            "type": "array"
          },
          "name": {
            "description": "Kubernetes Pod name.",
            "type": "string"
          },
          "ns": {
            "description": "Kubernetes Pod namespace.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "LoadBalancer": {
        "description": "Contains information related to the load balancer associated with the finding.",
        "properties": {
          "name": {
            "description": "The name of the load balancer associated with the finding.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "LogEntry": {
        "description": "An individual entry in a log.",
        "properties": {
          "cloudLoggingEntry": {
            "$ref": "#/$defs/CloudLoggingEntry"
          }
        },
        "type": "object"
      },
      "CloudLoggingEntry": {
        "description": "Metadata taken from a [Cloud Logging LogEntry](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry)",
        "properties": {
          "insertId": {
            "description": "A unique identifier for the log entry.",
            "type": "string"
          },
          "logId": {
            "description": "The type of the log (part of `log_name`. `log_name` is the resource name of the log to which this log entry belongs). For example: `cloudresourcemanager.googleapis.com/activity`. Note that this field is not URL-encoded, unlike the `LOG_ID` field in `LogEntry`.",
            "type": "string"
          },
          "resourceContainer": {
            "description": "The organization, folder, or project of the monitored resource that produced this log entry.",
            "type": "string"
          },
          "timestamp": {
            "description": "The time the event described by the log entry occurred.",
            "format": "google-datetime",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MitreAttack": {
        "description": "MITRE ATT&CK tactics and techniques related to this finding. See: https://attack.mitre.org",
        "properties": {
          "additionalTactics": {
            "description": "Additional MITRE ATT&CK tactics related to this finding, if any.",
            "items": {
              "enum": [
                "TACTIC_UNSPECIFIED",
                "RECONNAISSANCE",
                "RESOURCE_DEVELOPMENT",
                "INITIAL_ACCESS",
                "EXECUTION",
                "PERSISTENCE",
                "PRIVILEGE_ESCALATION",
                "DEFENSE_EVASION",
                "CREDENTIAL_ACCESS",
                "DISCOVERY",
                "LATERAL_MOVEMENT",
                "COLLECTION",
                "COMMAND_AND_CONTROL",
                "EXFILTRATION",
                "IMPACT"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "additionalTechniques": {
            "description": "Additional MITRE ATT&CK techniques related to this finding, if any, along with any of their respective parent techniques.",
            "items": {
              "enum": [
                "TECHNIQUE_UNSPECIFIED",
                "MASQUERADING",
                "MATCH_LEGITIMATE_NAME_OR_LOCATION",
                "BOOT_OR_LOGON_INITIALIZATION_SCRIPTS",
                "STARTUP_ITEMS",
                "NETWORK_SERVICE_DISCOVERY",
                "PROCESS_DISCOVERY",
                "COMMAND_AND_SCRIPTING_INTERPRETER",
                "UNIX_SHELL",
                "PERMISSION_GROUPS_DISCOVERY",
                "CLOUD_GROUPS",
                "APPLICATION_LAYER_PROTOCOL",
                "DNS",
                "SOFTWARE_DEPLOYMENT_TOOLS",
                "VALID_ACCOUNTS",
                "DEFAULT_ACCOUNTS",
                "LOCAL_ACCOUNTS",
                "CLOUD_ACCOUNTS",
                "PROXY",
                "EXTERNAL_PROXY",
                "MULTI_HOP_PROXY",
                "ACCOUNT_MANIPULATION",
                "ADDITIONAL_CLOUD_CREDENTIALS",
                "SSH_AUTHORIZED_KEYS",
                "ADDITIONAL_CONTAINER_CLUSTER_ROLES",
                "INGRESS_TOOL_TRANSFER",
                "NATIVE_API",
                "BRUTE_FORCE",
                "SHARED_MODULES",
                "ACCESS_TOKEN_MANIPULATION",
                "TOKEN_IMPERSONATION_OR_THEFT",
                "EXPLOIT_PUBLIC_FACING_APPLICATION",
                "DOMAIN_POLICY_MODIFICATION",
                "DATA_DESTRUCTION",
                "SERVICE_STOP",
                "INHIBIT_SYSTEM_RECOVERY",
                "RESOURCE_HIJACKING",
                "NETWORK_DENIAL_OF_SERVICE",
                "CLOUD_SERVICE_DISCOVERY",
                "STEAL_APPLICATION_ACCESS_TOKEN",
                "ACCOUNT_ACCESS_REMOVAL",
                "STEAL_WEB_SESSION_COOKIE",
                "CREATE_OR_MODIFY_SYSTEM_PROCESS",
                "ABUSE_ELEVATION_CONTROL_MECHANISM",
                "UNSECURED_CREDENTIALS",
                "MODIFY_AUTHENTICATION_PROCESS",
                "IMPAIR_DEFENSES",
                "DISABLE_OR_MODIFY_TOOLS",
                "EXFILTRATION_OVER_WEB_SERVICE",
                "EXFILTRATION_TO_CLOUD_STORAGE",
                "DYNAMIC_RESOLUTION",
                "LATERAL_TOOL_TRANSFER",
                "MODIFY_CLOUD_COMPUTE_INFRASTRUCTURE",
                "CREATE_SNAPSHOT",
                "CLOUD_INFRASTRUCTURE_DISCOVERY",
                "OBTAIN_CAPABILITIES",
                "ACTIVE_SCANNING",
                "SCANNING_IP_BLOCKS",
                "CONTAINER_AND_RESOURCE_DISCOVERY"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "primaryTactic": {
            "description": "The MITRE ATT&CK tactic most closely represented by this finding, if any.",
            "enum": [
              "TACTIC_UNSPECIFIED",
              "RECONNAISSANCE",
              "RESOURCE_DEVELOPMENT",
              "INITIAL_ACCESS",
              "EXECUTION",
              "PERSISTENCE",
              "PRIVILEGE_ESCALATION",
              "DEFENSE_EVASION",
              "CREDENTIAL_ACCESS",
              "DISCOVERY",
              "LATERAL_MOVEMENT",
              "COLLECTION",
              "COMMAND_AND_CONTROL",
              "EXFILTRATION",
              "IMPACT"
            ],
            "type": "string"
          },
          "primaryTechniques": {
            "description": "The MITRE ATT&CK technique most closely represented by this finding, if any. primary_techniques is a repeated field because there are multiple levels of MITRE ATT&CK techniques. If the technique most closely represented by this finding is a sub-technique (e.g. `SCANNING_IP_BLOCKS`), both the sub-technique and its parent technique(s) will be listed (e.g. `SCANNING_IP_BLOCKS`, `ACTIVE_SCANNING`).",
            "items": {
              "enum": [
                "TECHNIQUE_UNSPECIFIED",
                "MASQUERADING",
                "MATCH_LEGITIMATE_NAME_OR_LOCATION",
                "BOOT_OR_LOGON_INITIALIZATION_SCRIPTS",
                "STARTUP_ITEMS",
                "NETWORK_SERVICE_DISCOVERY",
                "PROCESS_DISCOVERY",
                "COMMAND_AND_SCRIPTING_INTERPRETER",
                "UNIX_SHELL",
                "PERMISSION_GROUPS_DISCOVERY",
                "CLOUD_GROUPS",
                "APPLICATION_LAYER_PROTOCOL",
                "DNS",
                "SOFTWARE_DEPLOYMENT_TOOLS",
                "VALID_ACCOUNTS",
                "DEFAULT_ACCOUNTS",
                "LOCAL_ACCOUNTS",
                "CLOUD_ACCOUNTS",
                "PROXY",
                "EXTERNAL_PROXY",
                "MULTI_HOP_PROXY",
                "ACCOUNT_MANIPULATION",
                "ADDITIONAL_CLOUD_CREDENTIALS",
                "SSH_AUTHORIZED_KEYS",
                "ADDITIONAL_CONTAINER_CLUSTER_ROLES",
                "INGRESS_TOOL_TRANSFER",
                "NATIVE_API",
                "BRUTE_FORCE",
                "SHARED_MODULES",
                "ACCESS_TOKEN_MANIPULATION",
                "TOKEN_IMPERSONATION_OR_THEFT",
                "EXPLOIT_PUBLIC_FACING_APPLICATION",
                "DOMAIN_POLICY_MODIFICATION",
                "DATA_DESTRUCTION",
                "SERVICE_STOP",
                "INHIBIT_SYSTEM_RECOVERY",
                "RESOURCE_HIJACKING",
                "NETWORK_DENIAL_OF_SERVICE",
                "CLOUD_SERVICE_DISCOVERY",
                "STEAL_APPLICATION_ACCESS_TOKEN",
                "ACCOUNT_ACCESS_REMOVAL",
                "STEAL_WEB_SESSION_COOKIE",
                "CREATE_OR_MODIFY_SYSTEM_PROCESS",
                "ABUSE_ELEVATION_CONTROL_MECHANISM",
                "UNSECURED_CREDENTIALS",
                "MODIFY_AUTHENTICATION_PROCESS",
                "IMPAIR_DEFENSES",
                "DISABLE_OR_MODIFY_TOOLS",
                "EXFILTRATION_OVER_WEB_SERVICE",
                "EXFILTRATION_TO_CLOUD_STORAGE",
                "DYNAMIC_RESOLUTION",
                "LATERAL_TOOL_TRANSFER",
                "MODIFY_CLOUD_COMPUTE_INFRASTRUCTURE",
                "CREATE_SNAPSHOT",
                "CLOUD_INFRASTRUCTURE_DISCOVERY",
                "OBTAIN_CAPABILITIES",
                "ACTIVE_SCANNING",
                "SCANNING_IP_BLOCKS",
                "CONTAINER_AND_RESOURCE_DISCOVERY"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "version": {
            "description": "The MITRE ATT&CK version referenced by the above fields. E.g. \"8\".",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OrgPolicy": {
        "description": "Contains information about the org policies associated with the finding.",
        "properties": {
          "name": {
            "description": "The resource name of the org policy. Example: \"organizations/{organization_id}/policies/{constraint_name}\"",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Process": {
        "description": "Represents an operating system process.",
        "properties": {
          "args": {
            "description": "Process arguments as JSON encoded strings.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "argumentsTruncated": {
            "description": "True if `args` is incomplete.",
            "type": "boolean"
          },
          "binary": {
            "$ref": "#/$defs/File"
          },
          "envVariables": {
            "description": "Process environment variables.",
            "items": {
              "$ref": "#/$defs/EnvironmentVariable"
            },
            "type": "array"
          },
          "envVariablesTruncated": {
            "description": "True if `env_variables` is incomplete.",
            "type": "boolean"
          },
          "libraries": {
            "description": "File information for libraries loaded by the process.",
            "items": {
              "$ref": "#/$defs/File"
            },
            "type": "array"
          },
          "name": {
            "description": "The process name, as displayed in utilities like `top` and `ps`. This name can be accessed through `/proc/[pid]/comm` and changed with `prctl(PR_SET_NAME)`.",
            "type": "string"
          },
          "parentPid": {
            "description": "The parent process ID.",
            "format": "int64",
            "type": "string"
          },
          "pid": {
            "description": "The process ID.",
            "format": "int64",
            "type": "string"
          },
          "script": {
            "$ref": "#/$defs/File"
          }
        },
        "type": "object"
      },
      "EnvironmentVariable": {
        "description": "A name-value pair representing an environment variable used in an operating system process.",
        "properties": {
          "name": {
            "description": "Environment variable name as a JSON encoded string.",
            "type": "string"
          },
          "val": {
            "description": "Environment variable value as a JSON encoded string.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SecurityMarks": {
        "description": "User specified security marks that are attached to the parent Security Command Center resource. Security marks are scoped within a Security Command Center organization -- they can be modified and viewed by all users who have proper permissions on the organization.",
        "properties": {
          "canonicalName": {
            "description": "The canonical name of the marks. Examples: \"organizations/{organization_id}/assets/{asset_id}/securityMarks\" \"folders/{folder_id}/assets/{asset_id}/securityMarks\" \"projects/{project_number}/assets/{asset_id}/securityMarks\" \"organizations/{organization_id}/sources/{source_id}/findings/{finding_id}/securityMarks\" \"folders/{folder_id}/sources/{source_id}/findings/{finding_id}/securityMarks\" \"projects/{project_number}/sources/{source_id}/findings/{finding_id}/securityMarks\"",
            "type": "string"
          },
          "marks": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Mutable user specified security marks belonging to the parent resource. Constraints are as follows: * Keys and values are treated as case insensitive * Keys must be between 1 - 256 characters (inclusive) * Keys must be letters, numbers, underscores, or dashes * Values have leading and trailing whitespace trimmed, remaining characters must be between 1 - 4096 characters (inclusive)",
            "type": "object"
          },
          "name": {
            "description": "The relative resource name of the SecurityMarks. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name Examples: \"organizations/{organization_id}/assets/{asset_id}/securityMarks\" \"organizations/{organization_id}/sources/{source_id}/findings/{finding_id}/securityMarks\".",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SecurityPosture": {
        "description": "Represents a posture that is deployed on Google Cloud by the Security Command Center Posture Management service. A posture contains one or more policy sets. A policy set is a group of policies that enforce a set of security rules on Google Cloud.",
        "properties": {
          "changedPolicy": {
            "description": "The name of the updated policy, for example, `projects/{project_id}/policies/{constraint_name}`.",
            "type": "string"
          },
          "name": {
            "description": "Name of the posture, for example, `CIS-Posture`.",
            "type": "string"
          },
          "policy": {
            "description": "The ID of the updated policy, for example, `compute-policy-1`.",
            "type": "string"
          },
          "policyDriftDetails": {
            "description": "The details about a change in an updated policy that violates the deployed posture.",
            "items": {
              "$ref": "#/$defs/PolicyDriftDetails"
            },
            "type": "array"
          },
          "policySet": {
            "description": "The name of the updated policyset, for example, `cis-policyset`.",
            "type": "string"
          },
          "postureDeployment": {
            "description": "The name of the posture deployment, for example, `organizations/{org_id}/posturedeployments/{posture_deployment_id}`.",
            "type": "string"
          },
          "postureDeploymentResource": {
            "description": "The project, folder, or organization on which the posture is deployed, for example, `projects/{project_number}`.",
            "type": "string"
          },
          "revisionId": {
            "description": "The version of the posture, for example, `c7cfa2a8`.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PolicyDriftDetails": {
        "description": "The policy field that violates the deployed posture and its expected and detected values.",
        "properties": {
          "detectedValue": {
            "description": "The detected value that violates the deployed posture, for example, `false` or `allowed_values={\"projects/22831892\"}`.",
            "type": "string"
          },
          "expectedValue": {
            "description": "The value of this field that was configured in a posture, for example, `true` or `allowed_values={\"projects/29831892\"}`.",
            "type": "string"
          },
          "field": {
            "description": "The name of the updated field, for example constraint.implementation.policy_rules[0].enforce",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Vulnerability": {
        "description": "Refers to common vulnerability fields e.g. cve, cvss, cwe etc.",
        "properties": {
          "cve": {
            "$ref": "#/$defs/Cve"
          },
          "fixedPackage": {
            "$ref": "#/$defs/Package"
          },
          "offendingPackage": {
            "$ref": "#/$defs/Package"
          },
          "securityBulletin": {
            "$ref": "#/$defs/SecurityBulletin"
          }
        },
        "type": "object"
      },
      "Cve": {
        "description": "CVE stands for Common Vulnerabilities and Exposures. Information from the [CVE record](https://www.cve.org/ResourcesSupport/Glossary) that describes this vulnerability.",
        "properties": {
          "cvssv3": {
            "$ref": "#/$defs/Cvssv3"
          },
          "exploitationActivity": {
            "description": "The exploitation activity of the vulnerability in the wild.",
            "enum": [
              "EXPLOITATION_ACTIVITY_UNSPECIFIED",
              "WIDE",
              "CONFIRMED",
              "AVAILABLE",
              "ANTICIPATED",
              "NO_KNOWN"
            ],
            "type": "string"
          },
          "id": {
            "description": "The unique identifier for the vulnerability. e.g. CVE-2021-34527",
            "type": "string"
          },
          "impact": {
            "description": "The potential impact of the vulnerability if it was to be exploited.",
            "enum": [
              "RISK_RATING_UNSPECIFIED",
              "LOW",
              "MEDIUM",
              "HIGH",
              "CRITICAL"
            ],
            "type": "string"
          },
          "observedInTheWild": {
            "description": "Whether or not the vulnerability has been observed in the wild.",
            "type": "boolean"
          },
          "references": {
            "description": "Additional information about the CVE. e.g. https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-34527",
            "items": {
              "$ref": "#/$defs/Reference"
            },
            "type": "array"
          },
          "upstreamFixAvailable": {
            "description": "Whether upstream fix is available for the CVE.",
            "type": "boolean"
          },
          "zeroDay": {
            "description": "Whether or not the vulnerability was zero day when the finding was published.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "Cvssv3": {
        "description": "Common Vulnerability Scoring System version 3.",
        "properties": {
          "attackComplexity": {
            "description": "This metric describes the conditions beyond the attacker's control that must exist in order to exploit the vulnerability.",
            "enum": [
              "ATTACK_COMPLEXITY_UNSPECIFIED",
              "ATTACK_COMPLEXITY_LOW",
              "ATTACK_COMPLEXITY_HIGH"
            ],
            "type": "string"
          },
          "attackVector": {
            "description": "Base Metrics Represents the intrinsic characteristics of a vulnerability that are constant over time and across user environments. This metric reflects the context by which vulnerability exploitation is possible.",
            "enum": [
              "ATTACK_VECTOR_UNSPECIFIED",
              "ATTACK_VECTOR_NETWORK",
              "ATTACK_VECTOR_ADJACENT",
              "ATTACK_VECTOR_LOCAL",
              "ATTACK_VECTOR_PHYSICAL"
            ],
            "type": "string"
          },
          "availabilityImpact": {
            "description": "This metric measures the impact to the availability of the impacted component resulting from a successfully exploited vulnerability.",
            "enum": [
              "IMPACT_UNSPECIFIED",
              "IMPACT_HIGH",
              "IMPACT_LOW",
              "IMPACT_NONE"
            ],
            "type": "string"
          },
          "baseScore": {
            "description": "The base score is a function of the base metric scores.",
            "format": "double",
            "type": "number"
          },
          "confidentialityImpact": {
            "description": "This metric measures the impact to the confidentiality of the information resources managed by a software component due to a successfully exploited vulnerability.",
            "enum": [
              "IMPACT_UNSPECIFIED",
              "IMPACT_HIGH",
              "IMPACT_LOW",
              "IMPACT_NONE"
            ],
            "type": "string"
          },
          "integrityImpact": {
            "description": "This metric measures the impact to integrity of a successfully exploited vulnerability.",
            "enum": [
              "IMPACT_UNSPECIFIED",
              "IMPACT_HIGH",
              "IMPACT_LOW",
              "IMPACT_NONE"
            ],
            "type": "string"
          },
          "privilegesRequired": {
            "description": "This metric describes the level of privileges an attacker must possess before successfully exploiting the vulnerability.",
            "enum": [
              "PRIVILEGES_REQUIRED_UNSPECIFIED",
              "PRIVILEGES_REQUIRED_NONE",
              "PRIVILEGES_REQUIRED_LOW",
              "PRIVILEGES_REQUIRED_HIGH"
            ],
            "type": "string"
          },
          "scope": {
            "description": "The Scope metric captures whether a vulnerability in one vulnerable component impacts resources in components beyond its security scope.",
            "enum": [
              "SCOPE_UNSPECIFIED",
              "SCOPE_UNCHANGED",
              "SCOPE_CHANGED"
            ],
            "type": "string"
          },
          "userInteraction": {
            "description": "This metric captures the requirement for a human user, other than the attacker, to participate in the successful compromise of the vulnerable component.",
            "enum": [
              "USER_INTERACTION_UNSPECIFIED",
              "USER_INTERACTION_NONE",
              "USER_INTERACTION_REQUIRED"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "Reference": {
        "description": "Additional Links",
        "properties": {
          "source": {
            "description": "Source of the reference e.g. NVD",
            "type": "string"
          },
          "uri": {
            "description": "Uri for the mentioned source e.g. https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-34527.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Package": {
        "description": "Package is a generic definition of a package.",
        "properties": {
          "cpeUri": {
            "description": "The CPE URI where the vulnerability was detected.",
            "type": "string"
          },
          "packageName": {
            "description": "The name of the package where the vulnerability was detected.",
            "type": "string"
          },
          "packageType": {
            "description": "Type of package, for example, os, maven, or go.",
            "type": "string"
          },
          "packageVersion": {
            "description": "The version of the package.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SecurityBulletin": {
        "description": "SecurityBulletin are notifications of vulnerabilities of Google products.",
        "properties": {
          "bulletinId": {
            "description": "ID of the bulletin corresponding to the vulnerability.",
            "type": "string"
          },
          "submissionTime": {
            "description": "Submission time of this Security Bulletin.",
            "format": "google-datetime",
            "type": "string"
          },
          "suggestedUpgradeVersion": {
            "description": "This represents a version that the cluster receiving this notification should be upgraded to, based on its current version. For example, 1.15.0",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://securitycenter.googleapis.com//v1/{parent}/findings{?findingId,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Security Command Center finding. A finding is a record of assessment data like security, risk, health, or privacy, that is ingested into Security Command Center for presentation, notification, analysis, policy testing, and enforcement. For example, a cross-site scripting (XSS) vulnerability in an App Engine application is a finding.",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**access**: Represents an access event.",
              {
                "$ul": [
                  "**callerIp**: Caller's IP address, such as \"1.1.1.1\".",
                  [
                    "**callerIpGeo**: Represents a geographical location for a given access.",
                    {
                      "$ul": [
                        "**regionCode**: A CLDR."
                      ]
                    }
                  ],
                  "**methodName**: The method that the service account called, e.g. \"SetIamPolicy\".",
                  "**principalEmail**: Associated email, such as \"foo@google.com\". The email address of the authenticated user or a service account acting on behalf of a third party principal making the request. For third party identity callers, the `principal_subject` field is populated instead of this field. For privacy reasons, the principal email address is sometimes redacted. For more information, see [Caller identities in audit logs](https://cloud.google.com/logging/docs/audit#user-id).",
                  "**principalSubject**: A string that represents the principal_subject that is associated with the identity. Unlike `principal_email`, `principal_subject` supports principals that aren't associated with email addresses, such as third party principals. For most identities, the format is `principal://iam.googleapis.com/{identity pool name}/subject/{subject}`. Some GKE identities, such as GKE_WORKLOAD, FREEFORM, and GKE_HUB_WORKLOAD, still use the legacy format `serviceAccount:{identity pool name}[{subject}]`.",
                  "**serviceAccountDelegationInfo**: The identity delegation history of an authenticated service account that made the request. The `serviceAccountDelegationInfo[]` object contains information about the real authorities that try to access Google Cloud resources by delegating on a service account. When multiple authorities are present, they are guaranteed to be sorted based on the original ordering of the identity delegation events.",
                  "**serviceAccountKeyName**: The name of the service account key that was used to create or exchange credentials when authenticating the service account that made the request. This is a scheme-less URI full resource name. For example: \"//iam.googleapis.com/projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}/keys/{key}\". ",
                  "**serviceName**: This is the API service that the service account made a call to, e.g. \"iam.googleapis.com\"",
                  "**userAgent**: The caller's user agent string associated with the finding.",
                  "**userAgentFamily**: Type of user agent associated with the finding. For example, an operating system shell or an embedded or standalone application.",
                  "**userName**: A string that represents a username. The username provided depends on the type of the finding and is likely not an IAM principal. For example, this can be a system username if the finding is related to a virtual machine, or it can be an application login username."
                ]
              }
            ],
            [
              "**application**: Represents an application associated with a finding.",
              {
                "$ul": [
                  "**baseUri**: The base URI that identifies the network location of the application in which the vulnerability was detected. For example, `http://example.com`.",
                  "**fullUri**: The full URI with payload that can be used to reproduce the vulnerability. For example, `http://example.com?p=aMmYgI6H`."
                ]
              }
            ],
            [
              "**attackExposure**: An attack exposure contains the results of an attack path simulation run.",
              {
                "$ul": [
                  "**attackExposureResult**: The resource name of the attack path simulation result that contains the details regarding this attack exposure score. Example: organizations/123/simulations/456/attackExposureResults/789",
                  "**exposedHighValueResourcesCount**: The number of high value resources that are exposed as a result of this finding.",
                  "**exposedLowValueResourcesCount**: The number of high value resources that are exposed as a result of this finding.",
                  "**exposedMediumValueResourcesCount**: The number of medium value resources that are exposed as a result of this finding.",
                  "**latestCalculationTime**: The most recent time the attack exposure was updated on this finding.",
                  "**score**: A number between 0 (inclusive) and infinity that represents how important this finding is to remediate. The higher the score, the more important it is to remediate.",
                  "**state**: What state this AttackExposure is in. This captures whether or not an attack exposure has been calculated or not."
                ]
              }
            ],
            [
              "**backupDisasterRecovery**: Information related to Google Cloud Backup and DR Service findings.",
              {
                "$ul": [
                  "**appliance**: The name of the Backup and DR appliance that captures, moves, and manages the lifecycle of backup data. For example, `backup-server-57137`.",
                  "**applications**: The names of Backup and DR applications. An application is a VM, database, or file system on a managed host monitored by a backup and recovery appliance. For example, `centos7-01-vol00`, `centos7-01-vol01`, `centos7-01-vol02`.",
                  "**backupCreateTime**: The timestamp at which the Backup and DR backup was created.",
                  "**backupTemplate**: The name of a Backup and DR template which comprises one or more backup policies. See the [Backup and DR documentation](https://cloud.google.com/backup-disaster-recovery/docs/concepts/backup-plan#temp) for more information. For example, `snap-ov`.",
                  "**backupType**: The backup type of the Backup and DR image. For example, `Snapshot`, `Remote Snapshot`, `OnVault`.",
                  "**host**: The name of a Backup and DR host, which is managed by the backup and recovery appliance and known to the management console. The host can be of type Generic (for example, Compute Engine, SQL Server, Oracle DB, SMB file system, etc.), vCenter, or an ESX server. See the [Backup and DR documentation on hosts](https://cloud.google.com/backup-disaster-recovery/docs/configuration/manage-hosts-and-their-applications) for more information. For example, `centos7-01`.",
                  "**policies**: The names of Backup and DR policies that are associated with a template and that define when to run a backup, how frequently to run a backup, and how long to retain the backup image. For example, `onvaults`.",
                  "**policyOptions**: The names of Backup and DR advanced policy options of a policy applying to an application. See the [Backup and DR documentation on policy options](https://cloud.google.com/backup-disaster-recovery/docs/create-plan/policy-settings). For example, `skipofflineappsincongrp, nounmap`.",
                  "**profile**: The name of the Backup and DR resource profile that specifies the storage media for backups of application and VM data. See the [Backup and DR documentation on profiles](https://cloud.google.com/backup-disaster-recovery/docs/concepts/backup-plan#profile). For example, `GCP`.",
                  "**storagePool**: The name of the Backup and DR storage pool that the backup and recovery appliance is storing data in. The storage pool could be of type Cloud, Primary, Snapshot, or OnVault. See the [Backup and DR documentation on storage pools](https://cloud.google.com/backup-disaster-recovery/docs/concepts/storage-pools). For example, `DiskPoolOne`."
                ]
              }
            ],
            "**canonicalName**: The canonical name of the finding. It's either \"organizations/{organization_id}/sources/{source_id}/findings/{finding_id}\", \"folders/{folder_id}/sources/{source_id}/findings/{finding_id}\" or \"projects/{project_number}/sources/{source_id}/findings/{finding_id}\", depending on the closest CRM ancestor of the resource associated with the finding.",
            "**category**: The additional taxonomy group within findings from a given source. This field is immutable after creation time. Example: \"XSS_FLASH_INJECTION\"",
            [
              "**cloudDlpDataProfile**: The [data profile](https://cloud.google.com/dlp/docs/data-profiles) associated with the finding.",
              {
                "$ul": [
                  "**dataProfile**: Name of the data profile, for example, `projects/123/locations/europe/tableProfiles/8383929`.",
                  "**parentType**: The resource hierarchy level at which the data profile was generated."
                ]
              }
            ],
            [
              "**cloudDlpInspection**: Details about the Cloud Data Loss Prevention (Cloud DLP) [inspection job](https://cloud.google.com/dlp/docs/concepts-job-triggers) that produced the finding.",
              {
                "$ul": [
                  "**fullScan**: Whether Cloud DLP scanned the complete resource or a sampled subset.",
                  "**infoType**: The type of information (or *[infoType](https://cloud.google.com/dlp/docs/infotypes-reference)*) found, for example, `EMAIL_ADDRESS` or `STREET_ADDRESS`.",
                  "**infoTypeCount**: The number of times Cloud DLP found this infoType within this job and resource.",
                  "**inspectJob**: Name of the inspection job, for example, `projects/123/locations/europe/dlpJobs/i-8383929`."
                ]
              }
            ],
            "**compliances**: Contains compliance information for security standards associated to the finding.",
            "**connections**: Contains information about the IP connection associated with the finding.",
            "**contacts**: Output only. Map containing the points of contact for the given finding. The key represents the type of contact, while the value contains a list of all the contacts that pertain. Please refer to: https://cloud.google.com/resource-manager/docs/managing-notification-contacts#notification-categories { \"security\": { \"contacts\": [ { \"email\": \"person1@company.com\" }, { \"email\": \"person2@company.com\" } ] } }",
            "**containers**: Containers associated with the finding. This field provides information for both Kubernetes and non-Kubernetes containers.",
            "**createTime**: The time at which the finding was created in Security Command Center.",
            [
              "**database**: Represents database access information, such as queries. A database may be a sub-resource of an instance (as in the case of Cloud SQL instances or Cloud Spanner instances), or the database instance itself. Some database resources might not have the [full resource name](https://google.aip.dev/122#full-resource-names) populated because these resource types, such as Cloud SQL databases, are not yet supported by Cloud Asset Inventory. In these cases only the display name is provided.",
              {
                "$ul": [
                  "**displayName**: The human-readable name of the database that the user connected to.",
                  "**grantees**: The target usernames, roles, or groups of an SQL privilege grant, which is not an IAM policy change.",
                  "**name**: Some database resources may not have the [full resource name](https://google.aip.dev/122#full-resource-names) populated because these resource types are not yet supported by Cloud Asset Inventory (e.g. Cloud SQL databases). In these cases only the display name will be provided. The [full resource name](https://google.aip.dev/122#full-resource-names) of the database that the user connected to, if it is supported by Cloud Asset Inventory.",
                  "**query**: The SQL statement that is associated with the database access.",
                  "**userName**: The username used to connect to the database. The username might not be an IAM principal and does not have a set format.",
                  "**version**: The version of the database, for example, POSTGRES_14. See [the complete list](https://cloud.google.com/sql/docs/mysql/admin-api/rest/v1/SqlDatabaseVersion)."
                ]
              }
            ],
            "**description**: Contains more details about the finding.",
            "**eventTime**: The time the finding was first detected. If an existing finding is updated, then this is the time the update occurred. For example, if the finding represents an open firewall, this property captures the time the detector believes the firewall became open. The accuracy is determined by the detector. If the finding is later resolved, then this time reflects when the finding was resolved. This must not be set to a value greater than the current timestamp.",
            [
              "**exfiltration**: Exfiltration represents a data exfiltration attempt from one or more sources to one or more targets. The `sources` attribute lists the sources of the exfiltrated data. The `targets` attribute lists the destinations the data was copied to.",
              {
                "$ul": [
                  "**sources**: If there are multiple sources, then the data is considered \"joined\" between them. For instance, BigQuery can join multiple tables, and each table would be considered a source.",
                  "**targets**: If there are multiple targets, each target would get a complete copy of the \"joined\" source data.",
                  "**totalExfiltratedBytes**: Total exfiltrated bytes processed for the entire job."
                ]
              }
            ],
            "**externalSystems**: Output only. Third party SIEM/SOAR fields within SCC, contains external system information and external system finding fields.",
            "**externalUri**: The URI that, if available, points to a web page outside of Security Command Center where additional information about the finding can be found. This field is guaranteed to be either empty or a well formed URL.",
            "**files**: File associated with the finding.",
            "**findingClass**: The class of the finding.",
            "**iamBindings**: Represents IAM bindings associated with the finding.",
            [
              "**indicator**: Represents what's commonly known as an _indicator of compromise_ (IoC) in computer forensics. This is an artifact observed on a network or in an operating system that, with high confidence, indicates a computer intrusion. For more information, see [Indicator of compromise](https://en.wikipedia.org/wiki/Indicator_of_compromise).",
              {
                "$ul": [
                  "**domains**: List of domains associated to the Finding.",
                  "**ipAddresses**: The list of IP addresses that are associated with the finding.",
                  "**signatures**: The list of matched signatures indicating that the given process is present in the environment.",
                  "**uris**: The list of URIs associated to the Findings."
                ]
              }
            ],
            [
              "**kernelRootkit**: Kernel mode rootkit signatures.",
              {
                "$ul": [
                  "**name**: Rootkit name, when available.",
                  "**unexpectedCodeModification**: True if unexpected modifications of kernel code memory are present.",
                  "**unexpectedFtraceHandler**: True if `ftrace` points are present with callbacks pointing to regions that are not in the expected kernel or module code range.",
                  "**unexpectedInterruptHandler**: True if interrupt handlers that are are not in the expected kernel or module code regions are present.",
                  "**unexpectedKernelCodePages**: True if kernel code pages that are not in the expected kernel or module code regions are present.",
                  "**unexpectedKprobeHandler**: True if `kprobe` points are present with callbacks pointing to regions that are not in the expected kernel or module code range.",
                  "**unexpectedProcessesInRunqueue**: True if unexpected processes in the scheduler run queue are present. Such processes are in the run queue, but not in the process task list.",
                  "**unexpectedReadOnlyDataModification**: True if unexpected modifications of kernel read-only data memory are present.",
                  "**unexpectedSystemCallHandler**: True if system call handlers that are are not in the expected kernel or module code regions are present."
                ]
              }
            ],
            [
              "**kubernetes**: Kubernetes-related attributes.",
              {
                "$ul": [
                  "**accessReviews**: Provides information on any Kubernetes access reviews (privilege checks) relevant to the finding.",
                  "**bindings**: Provides Kubernetes role binding information for findings that involve [RoleBindings or ClusterRoleBindings](https://cloud.google.com/kubernetes-engine/docs/how-to/role-based-access-control).",
                  "**nodePools**: GKE [node pools](https://cloud.google.com/kubernetes-engine/docs/concepts/node-pools) associated with the finding. This field contains node pool information for each node, when it is available.",
                  "**nodes**: Provides Kubernetes [node](https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-architecture#nodes) information.",
                  "**objects**: Kubernetes objects related to the finding.",
                  "**pods**: Kubernetes [Pods](https://cloud.google.com/kubernetes-engine/docs/concepts/pod) associated with the finding. This field contains Pod records for each container that is owned by a Pod.",
                  "**roles**: Provides Kubernetes role information for findings that involve [Roles or ClusterRoles](https://cloud.google.com/kubernetes-engine/docs/how-to/role-based-access-control)."
                ]
              }
            ],
            "**loadBalancers**: The load balancers associated with the finding.",
            "**logEntries**: Log entries that are relevant to the finding.",
            [
              "**mitreAttack**: MITRE ATT&CK tactics and techniques related to this finding. See: https://attack.mitre.org",
              {
                "$ul": [
                  "**additionalTactics**: Additional MITRE ATT&CK tactics related to this finding, if any.",
                  "**additionalTechniques**: Additional MITRE ATT&CK techniques related to this finding, if any, along with any of their respective parent techniques.",
                  "**primaryTactic**: The MITRE ATT&CK tactic most closely represented by this finding, if any.",
                  "**primaryTechniques**: The MITRE ATT&CK technique most closely represented by this finding, if any. primary_techniques is a repeated field because there are multiple levels of MITRE ATT&CK techniques. If the technique most closely represented by this finding is a sub-technique (e.g. `SCANNING_IP_BLOCKS`), both the sub-technique and its parent technique(s) will be listed (e.g. `SCANNING_IP_BLOCKS`, `ACTIVE_SCANNING`).",
                  "**version**: The MITRE ATT&CK version referenced by the above fields. E.g. \"8\"."
                ]
              }
            ],
            "**moduleName**: Unique identifier of the module which generated the finding. Example: folders/598186756061/securityHealthAnalyticsSettings/customModules/56799441161885",
            "**mute**: Indicates the mute state of a finding (either muted, unmuted or undefined). Unlike other attributes of a finding, a finding provider shouldn't set the value of mute.",
            "**muteInitiator**: Records additional information about the mute operation, for example, the [mute configuration](/security-command-center/docs/how-to-mute-findings) that muted the finding and the user who muted the finding.",
            "**muteUpdateTime**: Output only. The most recent time this finding was muted or unmuted.",
            "**name**: The [relative resource name](https://cloud.google.com/apis/design/resource_names#relative_resource_name) of the finding. Example: \"organizations/{organization_id}/sources/{source_id}/findings/{finding_id}\", \"folders/{folder_id}/sources/{source_id}/findings/{finding_id}\", \"projects/{project_id}/sources/{source_id}/findings/{finding_id}\".",
            "**nextSteps**: Steps to address the finding.",
            "**orgPolicies**: Contains information about the org policies associated with the finding.",
            "**parent**: The relative resource name of the source the finding belongs to. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name This field is immutable after creation time. For example: \"organizations/{organization_id}/sources/{source_id}\"",
            "**parentDisplayName**: Output only. The human readable display name of the finding source such as \"Event Threat Detection\" or \"Security Health Analytics\".",
            "**processes**: Represents operating system processes associated with the Finding.",
            "**resourceName**: For findings on Google Cloud resources, the full resource name of the Google Cloud resource this finding is for. See: https://cloud.google.com/apis/design/resource_names#full_resource_name When the finding is for a non-Google Cloud resource, the resourceName can be a customer or partner defined string. This field is immutable after creation time.",
            [
              "**securityMarks**: User specified security marks that are attached to the parent Security Command Center resource. Security marks are scoped within a Security Command Center organization -- they can be modified and viewed by all users who have proper permissions on the organization.",
              {
                "$ul": [
                  "**canonicalName**: The canonical name of the marks. Examples: \"organizations/{organization_id}/assets/{asset_id}/securityMarks\" \"folders/{folder_id}/assets/{asset_id}/securityMarks\" \"projects/{project_number}/assets/{asset_id}/securityMarks\" \"organizations/{organization_id}/sources/{source_id}/findings/{finding_id}/securityMarks\" \"folders/{folder_id}/sources/{source_id}/findings/{finding_id}/securityMarks\" \"projects/{project_number}/sources/{source_id}/findings/{finding_id}/securityMarks\"",
                  "**marks**: Mutable user specified security marks belonging to the parent resource. Constraints are as follows: * Keys and values are treated as case insensitive * Keys must be between 1 - 256 characters (inclusive) * Keys must be letters, numbers, underscores, or dashes * Values have leading and trailing whitespace trimmed, remaining characters must be between 1 - 4096 characters (inclusive)",
                  "**name**: The relative resource name of the SecurityMarks. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name Examples: \"organizations/{organization_id}/assets/{asset_id}/securityMarks\" \"organizations/{organization_id}/sources/{source_id}/findings/{finding_id}/securityMarks\"."
                ]
              }
            ],
            [
              "**securityPosture**: Represents a posture that is deployed on Google Cloud by the Security Command Center Posture Management service. A posture contains one or more policy sets. A policy set is a group of policies that enforce a set of security rules on Google Cloud.",
              {
                "$ul": [
                  "**changedPolicy**: The name of the updated policy, for example, `projects/{project_id}/policies/{constraint_name}`.",
                  "**name**: Name of the posture, for example, `CIS-Posture`.",
                  "**policy**: The ID of the updated policy, for example, `compute-policy-1`.",
                  "**policyDriftDetails**: The details about a change in an updated policy that violates the deployed posture.",
                  "**policySet**: The name of the updated policyset, for example, `cis-policyset`.",
                  "**postureDeployment**: The name of the posture deployment, for example, `organizations/{org_id}/posturedeployments/{posture_deployment_id}`.",
                  "**postureDeploymentResource**: The project, folder, or organization on which the posture is deployed, for example, `projects/{project_number}`.",
                  "**revisionId**: The version of the posture, for example, `c7cfa2a8`."
                ]
              }
            ],
            "**severity**: The severity of the finding. This field is managed by the source that writes the finding.",
            "**sourceProperties**: Source specific properties. These properties are managed by the source that writes the finding. The key names in the source_properties map must be between 1 and 255 characters, and must start with a letter and contain alphanumeric characters or underscores only.",
            "**state**: The state of the finding.",
            [
              "**vulnerability**: Refers to common vulnerability fields e.g. cve, cvss, cwe etc.",
              {
                "$ul": [
                  [
                    "**cve**: CVE stands for Common Vulnerabilities and Exposures. Information from the [CVE record](https://www.cve.org/ResourcesSupport/Glossary) that describes this vulnerability.",
                    {
                      "$ul": [
                        [
                          "**cvssv3**: Common Vulnerability Scoring System version 3.",
                          {
                            "$ul": [
                              "**attackComplexity**: This metric describes the conditions beyond the attacker's control that must exist in order to exploit the vulnerability.",
                              "**attackVector**: Base Metrics Represents the intrinsic characteristics of a vulnerability that are constant over time and across user environments. This metric reflects the context by which vulnerability exploitation is possible.",
                              "**availabilityImpact**: This metric measures the impact to the availability of the impacted component resulting from a successfully exploited vulnerability.",
                              "**baseScore**: The base score is a function of the base metric scores.",
                              "**confidentialityImpact**: This metric measures the impact to the confidentiality of the information resources managed by a software component due to a successfully exploited vulnerability.",
                              "**integrityImpact**: This metric measures the impact to integrity of a successfully exploited vulnerability.",
                              "**privilegesRequired**: This metric describes the level of privileges an attacker must possess before successfully exploiting the vulnerability.",
                              "**scope**: The Scope metric captures whether a vulnerability in one vulnerable component impacts resources in components beyond its security scope.",
                              "**userInteraction**: This metric captures the requirement for a human user, other than the attacker, to participate in the successful compromise of the vulnerable component."
                            ]
                          }
                        ],
                        "**exploitationActivity**: The exploitation activity of the vulnerability in the wild.",
                        "**id**: The unique identifier for the vulnerability. e.g. CVE-2021-34527",
                        "**impact**: The potential impact of the vulnerability if it was to be exploited.",
                        "**observedInTheWild**: Whether or not the vulnerability has been observed in the wild.",
                        "**references**: Additional information about the CVE. e.g. https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-34527",
                        "**upstreamFixAvailable**: Whether upstream fix is available for the CVE.",
                        "**zeroDay**: Whether or not the vulnerability was zero day when the finding was published."
                      ]
                    }
                  ],
                  [
                    "**fixedPackage**: Package is a generic definition of a package.",
                    {
                      "$ul": [
                        "**cpeUri**: The CPE URI where the vulnerability was detected.",
                        "**packageName**: The name of the package where the vulnerability was detected.",
                        "**packageType**: Type of package, for example, os, maven, or go.",
                        "**packageVersion**: The version of the package."
                      ]
                    }
                  ],
                  [
                    "**offendingPackage**: Package is a generic definition of a package.",
                    {
                      "$ul": [
                        "**cpeUri**: The CPE URI where the vulnerability was detected.",
                        "**packageName**: The name of the package where the vulnerability was detected.",
                        "**packageType**: Type of package, for example, os, maven, or go.",
                        "**packageVersion**: The version of the package."
                      ]
                    }
                  ],
                  [
                    "**securityBulletin**: SecurityBulletin are notifications of vulnerabilities of Google products.",
                    {
                      "$ul": [
                        "**bulletinId**: ID of the bulletin corresponding to the vulnerability.",
                        "**submissionTime**: Submission time of this Security Bulletin.",
                        "**suggestedUpgradeVersion**: This represents a version that the cluster receiving this notification should be upgraded to, based on its current version. For example, 1.15.0"
                      ]
                    }
                  ]
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
