{
  "name": "securitycenter_projects_securityHealthAnalyticsSettings_customModules_simulate",
  "description": "Simulates a given SecurityHealthAnalyticsCustomModule and Resource.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The relative resource name of the organization, project, or folder. For more information about relative resource names, see [Relative Resource Name](https://cloud.google.com/apis/design/resource_names#relative_resource_name) Example: `organizations/{organization_id}`"
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/SimulateSecurityHealthAnalyticsCustomModuleRequest"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "SimulateSecurityHealthAnalyticsCustomModuleRequest": {
        "description": "Request message to simulate a CustomConfig against a given test resource. Maximum size of the request is 4 MB by default.",
        "properties": {
          "customConfig": {
            "$ref": "#/$defs/GoogleCloudSecuritycenterV1CustomConfig"
          },
          "resource": {
            "$ref": "#/$defs/SimulatedResource"
          }
        },
        "type": "object"
      },
      "GoogleCloudSecuritycenterV1CustomConfig": {
        "description": "Defines the properties in a custom module configuration for Security Health Analytics. Use the custom module configuration to create custom detectors that generate custom findings for resources that you specify.",
        "properties": {
          "customOutput": {
            "$ref": "#/$defs/GoogleCloudSecuritycenterV1CustomOutputSpec"
          },
          "description": {
            "description": "Text that describes the vulnerability or misconfiguration that the custom module detects. This explanation is returned with each finding instance to help investigators understand the detected issue. The text must be enclosed in quotation marks.",
            "type": "string"
          },
          "predicate": {
            "$ref": "#/$defs/Expr"
          },
          "recommendation": {
            "description": "An explanation of the recommended steps that security teams can take to resolve the detected issue. This explanation is returned with each finding generated by this module in the `nextSteps` property of the finding JSON.",
            "type": "string"
          },
          "resourceSelector": {
            "$ref": "#/$defs/GoogleCloudSecuritycenterV1ResourceSelector"
          },
          "severity": {
            "description": "The severity to assign to findings generated by the module.",
            "enum": [
              "SEVERITY_UNSPECIFIED",
              "CRITICAL",
              "HIGH",
              "MEDIUM",
              "LOW"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudSecuritycenterV1CustomOutputSpec": {
        "description": "A set of optional name-value pairs that define custom source properties to return with each finding that is generated by the custom module. The custom source properties that are defined here are included in the finding JSON under `sourceProperties`.",
        "properties": {
          "properties": {
            "description": "A list of custom output properties to add to the finding.",
            "items": {
              "$ref": "#/$defs/GoogleCloudSecuritycenterV1Property"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudSecuritycenterV1Property": {
        "description": "An individual name-value pair that defines a custom source property.",
        "properties": {
          "name": {
            "description": "Name of the property for the custom output.",
            "type": "string"
          },
          "valueExpression": {
            "$ref": "#/$defs/Expr"
          }
        },
        "type": "object"
      },
      "Expr": {
        "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() < 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
        "properties": {
          "description": {
            "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.",
            "type": "string"
          },
          "expression": {
            "description": "Textual representation of an expression in Common Expression Language syntax.",
            "type": "string"
          },
          "location": {
            "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.",
            "type": "string"
          },
          "title": {
            "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudSecuritycenterV1ResourceSelector": {
        "description": "Resource for selecting resource type.",
        "properties": {
          "resourceTypes": {
            "description": "The resource types to run the detector on.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "SimulatedResource": {
        "description": "Manually constructed resource name. If the custom module evaluates against only the resource data, you can omit the `iam_policy_data` field. If it evaluates only the `iam_policy_data` field, you can omit the resource data.",
        "properties": {
          "iamPolicyData": {
            "$ref": "#/$defs/Policy"
          },
          "resourceData": {
            "additionalProperties": {
              "description": "Properties of the object."
            },
            "description": "Optional. A representation of the Google Cloud resource. Should match the Google Cloud resource JSON format.",
            "type": "object"
          },
          "resourceType": {
            "description": "Required. The type of the resource, for example, `compute.googleapis.com/Disk`.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Policy": {
        "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** ``` { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } ``` **YAML example:** ``` bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
        "properties": {
          "auditConfigs": {
            "description": "Specifies cloud audit logging configuration for this policy.",
            "items": {
              "$ref": "#/$defs/AuditConfig"
            },
            "type": "array"
          },
          "bindings": {
            "description": "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
            "items": {
              "$ref": "#/$defs/Binding"
            },
            "type": "array"
          },
          "etag": {
            "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
            "format": "byte",
            "type": "string"
          },
          "version": {
            "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "AuditConfig": {
        "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.",
        "properties": {
          "auditLogConfigs": {
            "description": "The configuration for logging of each type of permission.",
            "items": {
              "$ref": "#/$defs/AuditLogConfig"
            },
            "type": "array"
          },
          "service": {
            "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AuditLogConfig": {
        "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.",
        "properties": {
          "exemptedMembers": {
            "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "logType": {
            "description": "The log type that this config enables.",
            "enum": [
              "LOG_TYPE_UNSPECIFIED",
              "ADMIN_READ",
              "DATA_WRITE",
              "DATA_READ"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "Binding": {
        "description": "Associates `members`, or principals, with a `role`.",
        "properties": {
          "condition": {
            "$ref": "#/$defs/Expr"
          },
          "members": {
            "description": "Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`: A single identity in a workforce identity pool. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`: All workforce identities in a group. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`: All workforce identities with a specific attribute value. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/*`: All identities in a workforce identity pool. * `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`: A single identity in a workload identity pool. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`: A workload identity pool group. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`: All identities in a workload identity pool with a certain attribute. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/*`: All identities in a workload identity pool. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`: Deleted single identity in a workforce identity pool. For example, `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "role": {
            "description": "Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`. For an overview of the IAM roles and permissions, see the [IAM documentation](https://cloud.google.com/iam/docs/roles-overview). For a list of the available pre-defined roles, see [here](https://cloud.google.com/iam/docs/understanding-roles).",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://securitycenter.googleapis.com//v1/{parent}/customModules:simulate{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Response message for simulating a `SecurityHealthAnalyticsCustomModule` against a given resource.",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**result**: Possible test result.",
              {
                "$ul": [
                  [
                    "**error**: The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
                    {
                      "$ul": [
                        "**code**: The status code, which should be an enum value of google.rpc.Code.",
                        "**details**: A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                        "**message**: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                      ]
                    }
                  ],
                  [
                    "**finding**: Security Command Center finding. A finding is a record of assessment data like security, risk, health, or privacy, that is ingested into Security Command Center for presentation, notification, analysis, policy testing, and enforcement. For example, a cross-site scripting (XSS) vulnerability in an App Engine application is a finding.",
                    {
                      "$ul": [
                        [
                          "**access**: Represents an access event.",
                          {
                            "$ul": [
                              "**callerIp**: Caller's IP address, such as \"1.1.1.1\".",
                              [
                                "**callerIpGeo**: Represents a geographical location for a given access.",
                                {
                                  "$ul": [
                                    "**regionCode**: A CLDR."
                                  ]
                                }
                              ],
                              "**methodName**: The method that the service account called, e.g. \"SetIamPolicy\".",
                              "**principalEmail**: Associated email, such as \"foo@google.com\". The email address of the authenticated user or a service account acting on behalf of a third party principal making the request. For third party identity callers, the `principal_subject` field is populated instead of this field. For privacy reasons, the principal email address is sometimes redacted. For more information, see [Caller identities in audit logs](https://cloud.google.com/logging/docs/audit#user-id).",
                              "**principalSubject**: A string that represents the principal_subject that is associated with the identity. Unlike `principal_email`, `principal_subject` supports principals that aren't associated with email addresses, such as third party principals. For most identities, the format is `principal://iam.googleapis.com/{identity pool name}/subject/{subject}`. Some GKE identities, such as GKE_WORKLOAD, FREEFORM, and GKE_HUB_WORKLOAD, still use the legacy format `serviceAccount:{identity pool name}[{subject}]`.",
                              "**serviceAccountDelegationInfo**: The identity delegation history of an authenticated service account that made the request. The `serviceAccountDelegationInfo[]` object contains information about the real authorities that try to access Google Cloud resources by delegating on a service account. When multiple authorities are present, they are guaranteed to be sorted based on the original ordering of the identity delegation events.",
                              "**serviceAccountKeyName**: The name of the service account key that was used to create or exchange credentials when authenticating the service account that made the request. This is a scheme-less URI full resource name. For example: \"//iam.googleapis.com/projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}/keys/{key}\". ",
                              "**serviceName**: This is the API service that the service account made a call to, e.g. \"iam.googleapis.com\"",
                              "**userAgent**: The caller's user agent string associated with the finding.",
                              "**userAgentFamily**: Type of user agent associated with the finding. For example, an operating system shell or an embedded or standalone application.",
                              "**userName**: A string that represents a username. The username provided depends on the type of the finding and is likely not an IAM principal. For example, this can be a system username if the finding is related to a virtual machine, or it can be an application login username."
                            ]
                          }
                        ],
                        [
                          "**application**: Represents an application associated with a finding.",
                          {
                            "$ul": [
                              "**baseUri**: The base URI that identifies the network location of the application in which the vulnerability was detected. For example, `http://example.com`.",
                              "**fullUri**: The full URI with payload that can be used to reproduce the vulnerability. For example, `http://example.com?p=aMmYgI6H`."
                            ]
                          }
                        ],
                        [
                          "**attackExposure**: An attack exposure contains the results of an attack path simulation run.",
                          {
                            "$ul": [
                              "**attackExposureResult**: The resource name of the attack path simulation result that contains the details regarding this attack exposure score. Example: organizations/123/simulations/456/attackExposureResults/789",
                              "**exposedHighValueResourcesCount**: The number of high value resources that are exposed as a result of this finding.",
                              "**exposedLowValueResourcesCount**: The number of high value resources that are exposed as a result of this finding.",
                              "**exposedMediumValueResourcesCount**: The number of medium value resources that are exposed as a result of this finding.",
                              "**latestCalculationTime**: The most recent time the attack exposure was updated on this finding.",
                              "**score**: A number between 0 (inclusive) and infinity that represents how important this finding is to remediate. The higher the score, the more important it is to remediate.",
                              "**state**: What state this AttackExposure is in. This captures whether or not an attack exposure has been calculated or not."
                            ]
                          }
                        ],
                        [
                          "**backupDisasterRecovery**: Information related to Google Cloud Backup and DR Service findings.",
                          {
                            "$ul": [
                              "**appliance**: The name of the Backup and DR appliance that captures, moves, and manages the lifecycle of backup data. For example, `backup-server-57137`.",
                              "**applications**: The names of Backup and DR applications. An application is a VM, database, or file system on a managed host monitored by a backup and recovery appliance. For example, `centos7-01-vol00`, `centos7-01-vol01`, `centos7-01-vol02`.",
                              "**backupCreateTime**: The timestamp at which the Backup and DR backup was created.",
                              "**backupTemplate**: The name of a Backup and DR template which comprises one or more backup policies. See the [Backup and DR documentation](https://cloud.google.com/backup-disaster-recovery/docs/concepts/backup-plan#temp) for more information. For example, `snap-ov`.",
                              "**backupType**: The backup type of the Backup and DR image. For example, `Snapshot`, `Remote Snapshot`, `OnVault`.",
                              "**host**: The name of a Backup and DR host, which is managed by the backup and recovery appliance and known to the management console. The host can be of type Generic (for example, Compute Engine, SQL Server, Oracle DB, SMB file system, etc.), vCenter, or an ESX server. See the [Backup and DR documentation on hosts](https://cloud.google.com/backup-disaster-recovery/docs/configuration/manage-hosts-and-their-applications) for more information. For example, `centos7-01`.",
                              "**policies**: The names of Backup and DR policies that are associated with a template and that define when to run a backup, how frequently to run a backup, and how long to retain the backup image. For example, `onvaults`.",
                              "**policyOptions**: The names of Backup and DR advanced policy options of a policy applying to an application. See the [Backup and DR documentation on policy options](https://cloud.google.com/backup-disaster-recovery/docs/create-plan/policy-settings). For example, `skipofflineappsincongrp, nounmap`.",
                              "**profile**: The name of the Backup and DR resource profile that specifies the storage media for backups of application and VM data. See the [Backup and DR documentation on profiles](https://cloud.google.com/backup-disaster-recovery/docs/concepts/backup-plan#profile). For example, `GCP`.",
                              "**storagePool**: The name of the Backup and DR storage pool that the backup and recovery appliance is storing data in. The storage pool could be of type Cloud, Primary, Snapshot, or OnVault. See the [Backup and DR documentation on storage pools](https://cloud.google.com/backup-disaster-recovery/docs/concepts/storage-pools). For example, `DiskPoolOne`."
                            ]
                          }
                        ],
                        "**canonicalName**: The canonical name of the finding. It's either \"organizations/{organization_id}/sources/{source_id}/findings/{finding_id}\", \"folders/{folder_id}/sources/{source_id}/findings/{finding_id}\" or \"projects/{project_number}/sources/{source_id}/findings/{finding_id}\", depending on the closest CRM ancestor of the resource associated with the finding.",
                        "**category**: The additional taxonomy group within findings from a given source. This field is immutable after creation time. Example: \"XSS_FLASH_INJECTION\"",
                        [
                          "**cloudDlpDataProfile**: The [data profile](https://cloud.google.com/dlp/docs/data-profiles) associated with the finding.",
                          {
                            "$ul": [
                              "**dataProfile**: Name of the data profile, for example, `projects/123/locations/europe/tableProfiles/8383929`.",
                              "**parentType**: The resource hierarchy level at which the data profile was generated."
                            ]
                          }
                        ],
                        [
                          "**cloudDlpInspection**: Details about the Cloud Data Loss Prevention (Cloud DLP) [inspection job](https://cloud.google.com/dlp/docs/concepts-job-triggers) that produced the finding.",
                          {
                            "$ul": [
                              "**fullScan**: Whether Cloud DLP scanned the complete resource or a sampled subset.",
                              "**infoType**: The type of information (or *[infoType](https://cloud.google.com/dlp/docs/infotypes-reference)*) found, for example, `EMAIL_ADDRESS` or `STREET_ADDRESS`.",
                              "**infoTypeCount**: The number of times Cloud DLP found this infoType within this job and resource.",
                              "**inspectJob**: Name of the inspection job, for example, `projects/123/locations/europe/dlpJobs/i-8383929`."
                            ]
                          }
                        ],
                        "**compliances**: Contains compliance information for security standards associated to the finding.",
                        "**connections**: Contains information about the IP connection associated with the finding.",
                        "**contacts**: Output only. Map containing the points of contact for the given finding. The key represents the type of contact, while the value contains a list of all the contacts that pertain. Please refer to: https://cloud.google.com/resource-manager/docs/managing-notification-contacts#notification-categories { \"security\": { \"contacts\": [ { \"email\": \"person1@company.com\" }, { \"email\": \"person2@company.com\" } ] } }",
                        "**containers**: Containers associated with the finding. This field provides information for both Kubernetes and non-Kubernetes containers.",
                        "**createTime**: The time at which the finding was created in Security Command Center.",
                        [
                          "**database**: Represents database access information, such as queries. A database may be a sub-resource of an instance (as in the case of Cloud SQL instances or Cloud Spanner instances), or the database instance itself. Some database resources might not have the [full resource name](https://google.aip.dev/122#full-resource-names) populated because these resource types, such as Cloud SQL databases, are not yet supported by Cloud Asset Inventory. In these cases only the display name is provided.",
                          {
                            "$ul": [
                              "**displayName**: The human-readable name of the database that the user connected to.",
                              "**grantees**: The target usernames, roles, or groups of an SQL privilege grant, which is not an IAM policy change.",
                              "**name**: Some database resources may not have the [full resource name](https://google.aip.dev/122#full-resource-names) populated because these resource types are not yet supported by Cloud Asset Inventory (e.g. Cloud SQL databases). In these cases only the display name will be provided. The [full resource name](https://google.aip.dev/122#full-resource-names) of the database that the user connected to, if it is supported by Cloud Asset Inventory.",
                              "**query**: The SQL statement that is associated with the database access.",
                              "**userName**: The username used to connect to the database. The username might not be an IAM principal and does not have a set format.",
                              "**version**: The version of the database, for example, POSTGRES_14. See [the complete list](https://cloud.google.com/sql/docs/mysql/admin-api/rest/v1/SqlDatabaseVersion)."
                            ]
                          }
                        ],
                        "**description**: Contains more details about the finding.",
                        "**eventTime**: The time the finding was first detected. If an existing finding is updated, then this is the time the update occurred. For example, if the finding represents an open firewall, this property captures the time the detector believes the firewall became open. The accuracy is determined by the detector. If the finding is later resolved, then this time reflects when the finding was resolved. This must not be set to a value greater than the current timestamp.",
                        [
                          "**exfiltration**: Exfiltration represents a data exfiltration attempt from one or more sources to one or more targets. The `sources` attribute lists the sources of the exfiltrated data. The `targets` attribute lists the destinations the data was copied to.",
                          {
                            "$ul": [
                              "**sources**: If there are multiple sources, then the data is considered \"joined\" between them. For instance, BigQuery can join multiple tables, and each table would be considered a source.",
                              "**targets**: If there are multiple targets, each target would get a complete copy of the \"joined\" source data.",
                              "**totalExfiltratedBytes**: Total exfiltrated bytes processed for the entire job."
                            ]
                          }
                        ],
                        "**externalSystems**: Output only. Third party SIEM/SOAR fields within SCC, contains external system information and external system finding fields.",
                        "**externalUri**: The URI that, if available, points to a web page outside of Security Command Center where additional information about the finding can be found. This field is guaranteed to be either empty or a well formed URL.",
                        "**files**: File associated with the finding.",
                        "**findingClass**: The class of the finding.",
                        "**iamBindings**: Represents IAM bindings associated with the finding.",
                        [
                          "**indicator**: Represents what's commonly known as an _indicator of compromise_ (IoC) in computer forensics. This is an artifact observed on a network or in an operating system that, with high confidence, indicates a computer intrusion. For more information, see [Indicator of compromise](https://en.wikipedia.org/wiki/Indicator_of_compromise).",
                          {
                            "$ul": [
                              "**domains**: List of domains associated to the Finding.",
                              "**ipAddresses**: The list of IP addresses that are associated with the finding.",
                              "**signatures**: The list of matched signatures indicating that the given process is present in the environment.",
                              "**uris**: The list of URIs associated to the Findings."
                            ]
                          }
                        ],
                        [
                          "**kernelRootkit**: Kernel mode rootkit signatures.",
                          {
                            "$ul": [
                              "**name**: Rootkit name, when available.",
                              "**unexpectedCodeModification**: True if unexpected modifications of kernel code memory are present.",
                              "**unexpectedFtraceHandler**: True if `ftrace` points are present with callbacks pointing to regions that are not in the expected kernel or module code range.",
                              "**unexpectedInterruptHandler**: True if interrupt handlers that are are not in the expected kernel or module code regions are present.",
                              "**unexpectedKernelCodePages**: True if kernel code pages that are not in the expected kernel or module code regions are present.",
                              "**unexpectedKprobeHandler**: True if `kprobe` points are present with callbacks pointing to regions that are not in the expected kernel or module code range.",
                              "**unexpectedProcessesInRunqueue**: True if unexpected processes in the scheduler run queue are present. Such processes are in the run queue, but not in the process task list.",
                              "**unexpectedReadOnlyDataModification**: True if unexpected modifications of kernel read-only data memory are present.",
                              "**unexpectedSystemCallHandler**: True if system call handlers that are are not in the expected kernel or module code regions are present."
                            ]
                          }
                        ],
                        [
                          "**kubernetes**: Kubernetes-related attributes.",
                          {
                            "$ul": [
                              "**accessReviews**: Provides information on any Kubernetes access reviews (privilege checks) relevant to the finding.",
                              "**bindings**: Provides Kubernetes role binding information for findings that involve [RoleBindings or ClusterRoleBindings](https://cloud.google.com/kubernetes-engine/docs/how-to/role-based-access-control).",
                              "**nodePools**: GKE [node pools](https://cloud.google.com/kubernetes-engine/docs/concepts/node-pools) associated with the finding. This field contains node pool information for each node, when it is available.",
                              "**nodes**: Provides Kubernetes [node](https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-architecture#nodes) information.",
                              "**objects**: Kubernetes objects related to the finding.",
                              "**pods**: Kubernetes [Pods](https://cloud.google.com/kubernetes-engine/docs/concepts/pod) associated with the finding. This field contains Pod records for each container that is owned by a Pod.",
                              "**roles**: Provides Kubernetes role information for findings that involve [Roles or ClusterRoles](https://cloud.google.com/kubernetes-engine/docs/how-to/role-based-access-control)."
                            ]
                          }
                        ],
                        "**loadBalancers**: The load balancers associated with the finding.",
                        "**logEntries**: Log entries that are relevant to the finding.",
                        [
                          "**mitreAttack**: MITRE ATT&CK tactics and techniques related to this finding. See: https://attack.mitre.org",
                          {
                            "$ul": [
                              "**additionalTactics**: Additional MITRE ATT&CK tactics related to this finding, if any.",
                              "**additionalTechniques**: Additional MITRE ATT&CK techniques related to this finding, if any, along with any of their respective parent techniques.",
                              "**primaryTactic**: The MITRE ATT&CK tactic most closely represented by this finding, if any.",
                              "**primaryTechniques**: The MITRE ATT&CK technique most closely represented by this finding, if any. primary_techniques is a repeated field because there are multiple levels of MITRE ATT&CK techniques. If the technique most closely represented by this finding is a sub-technique (e.g. `SCANNING_IP_BLOCKS`), both the sub-technique and its parent technique(s) will be listed (e.g. `SCANNING_IP_BLOCKS`, `ACTIVE_SCANNING`).",
                              "**version**: The MITRE ATT&CK version referenced by the above fields. E.g. \"8\"."
                            ]
                          }
                        ],
                        "**moduleName**: Unique identifier of the module which generated the finding. Example: folders/598186756061/securityHealthAnalyticsSettings/customModules/56799441161885",
                        "**mute**: Indicates the mute state of a finding (either muted, unmuted or undefined). Unlike other attributes of a finding, a finding provider shouldn't set the value of mute.",
                        "**muteInitiator**: Records additional information about the mute operation, for example, the [mute configuration](/security-command-center/docs/how-to-mute-findings) that muted the finding and the user who muted the finding.",
                        "**muteUpdateTime**: Output only. The most recent time this finding was muted or unmuted.",
                        "**name**: The [relative resource name](https://cloud.google.com/apis/design/resource_names#relative_resource_name) of the finding. Example: \"organizations/{organization_id}/sources/{source_id}/findings/{finding_id}\", \"folders/{folder_id}/sources/{source_id}/findings/{finding_id}\", \"projects/{project_id}/sources/{source_id}/findings/{finding_id}\".",
                        "**nextSteps**: Steps to address the finding.",
                        "**orgPolicies**: Contains information about the org policies associated with the finding.",
                        "**parent**: The relative resource name of the source the finding belongs to. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name This field is immutable after creation time. For example: \"organizations/{organization_id}/sources/{source_id}\"",
                        "**parentDisplayName**: Output only. The human readable display name of the finding source such as \"Event Threat Detection\" or \"Security Health Analytics\".",
                        "**processes**: Represents operating system processes associated with the Finding.",
                        "**resourceName**: For findings on Google Cloud resources, the full resource name of the Google Cloud resource this finding is for. See: https://cloud.google.com/apis/design/resource_names#full_resource_name When the finding is for a non-Google Cloud resource, the resourceName can be a customer or partner defined string. This field is immutable after creation time.",
                        [
                          "**securityMarks**: User specified security marks that are attached to the parent Security Command Center resource. Security marks are scoped within a Security Command Center organization -- they can be modified and viewed by all users who have proper permissions on the organization.",
                          {
                            "$ul": [
                              "**canonicalName**: The canonical name of the marks. Examples: \"organizations/{organization_id}/assets/{asset_id}/securityMarks\" \"folders/{folder_id}/assets/{asset_id}/securityMarks\" \"projects/{project_number}/assets/{asset_id}/securityMarks\" \"organizations/{organization_id}/sources/{source_id}/findings/{finding_id}/securityMarks\" \"folders/{folder_id}/sources/{source_id}/findings/{finding_id}/securityMarks\" \"projects/{project_number}/sources/{source_id}/findings/{finding_id}/securityMarks\"",
                              "**marks**: Mutable user specified security marks belonging to the parent resource. Constraints are as follows: * Keys and values are treated as case insensitive * Keys must be between 1 - 256 characters (inclusive) * Keys must be letters, numbers, underscores, or dashes * Values have leading and trailing whitespace trimmed, remaining characters must be between 1 - 4096 characters (inclusive)",
                              "**name**: The relative resource name of the SecurityMarks. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name Examples: \"organizations/{organization_id}/assets/{asset_id}/securityMarks\" \"organizations/{organization_id}/sources/{source_id}/findings/{finding_id}/securityMarks\"."
                            ]
                          }
                        ],
                        [
                          "**securityPosture**: Represents a posture that is deployed on Google Cloud by the Security Command Center Posture Management service. A posture contains one or more policy sets. A policy set is a group of policies that enforce a set of security rules on Google Cloud.",
                          {
                            "$ul": [
                              "**changedPolicy**: The name of the updated policy, for example, `projects/{project_id}/policies/{constraint_name}`.",
                              "**name**: Name of the posture, for example, `CIS-Posture`.",
                              "**policy**: The ID of the updated policy, for example, `compute-policy-1`.",
                              "**policyDriftDetails**: The details about a change in an updated policy that violates the deployed posture.",
                              "**policySet**: The name of the updated policyset, for example, `cis-policyset`.",
                              "**postureDeployment**: The name of the posture deployment, for example, `organizations/{org_id}/posturedeployments/{posture_deployment_id}`.",
                              "**postureDeploymentResource**: The project, folder, or organization on which the posture is deployed, for example, `projects/{project_number}`.",
                              "**revisionId**: The version of the posture, for example, `c7cfa2a8`."
                            ]
                          }
                        ],
                        "**severity**: The severity of the finding. This field is managed by the source that writes the finding.",
                        "**sourceProperties**: Source specific properties. These properties are managed by the source that writes the finding. The key names in the source_properties map must be between 1 and 255 characters, and must start with a letter and contain alphanumeric characters or underscores only.",
                        "**state**: The state of the finding.",
                        [
                          "**vulnerability**: Refers to common vulnerability fields e.g. cve, cvss, cwe etc.",
                          {
                            "$ul": [
                              [
                                "**cve**: CVE stands for Common Vulnerabilities and Exposures. Information from the [CVE record](https://www.cve.org/ResourcesSupport/Glossary) that describes this vulnerability.",
                                {
                                  "$ul": [
                                    [
                                      "**cvssv3**: Common Vulnerability Scoring System version 3.",
                                      {
                                        "$ul": [
                                          "**attackComplexity**: This metric describes the conditions beyond the attacker's control that must exist in order to exploit the vulnerability.",
                                          "**attackVector**: Base Metrics Represents the intrinsic characteristics of a vulnerability that are constant over time and across user environments. This metric reflects the context by which vulnerability exploitation is possible.",
                                          "**availabilityImpact**: This metric measures the impact to the availability of the impacted component resulting from a successfully exploited vulnerability.",
                                          "**baseScore**: The base score is a function of the base metric scores.",
                                          "**confidentialityImpact**: This metric measures the impact to the confidentiality of the information resources managed by a software component due to a successfully exploited vulnerability.",
                                          "**integrityImpact**: This metric measures the impact to integrity of a successfully exploited vulnerability.",
                                          "**privilegesRequired**: This metric describes the level of privileges an attacker must possess before successfully exploiting the vulnerability.",
                                          "**scope**: The Scope metric captures whether a vulnerability in one vulnerable component impacts resources in components beyond its security scope.",
                                          "**userInteraction**: This metric captures the requirement for a human user, other than the attacker, to participate in the successful compromise of the vulnerable component."
                                        ]
                                      }
                                    ],
                                    "**exploitationActivity**: The exploitation activity of the vulnerability in the wild.",
                                    "**id**: The unique identifier for the vulnerability. e.g. CVE-2021-34527",
                                    "**impact**: The potential impact of the vulnerability if it was to be exploited.",
                                    "**observedInTheWild**: Whether or not the vulnerability has been observed in the wild.",
                                    "**references**: Additional information about the CVE. e.g. https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-34527",
                                    "**upstreamFixAvailable**: Whether upstream fix is available for the CVE.",
                                    "**zeroDay**: Whether or not the vulnerability was zero day when the finding was published."
                                  ]
                                }
                              ],
                              [
                                "**fixedPackage**: Package is a generic definition of a package.",
                                {
                                  "$ul": [
                                    "**cpeUri**: The CPE URI where the vulnerability was detected.",
                                    "**packageName**: The name of the package where the vulnerability was detected.",
                                    "**packageType**: Type of package, for example, os, maven, or go.",
                                    "**packageVersion**: The version of the package."
                                  ]
                                }
                              ],
                              [
                                "**offendingPackage**: Package is a generic definition of a package.",
                                {
                                  "$ul": [
                                    "**cpeUri**: The CPE URI where the vulnerability was detected.",
                                    "**packageName**: The name of the package where the vulnerability was detected.",
                                    "**packageType**: Type of package, for example, os, maven, or go.",
                                    "**packageVersion**: The version of the package."
                                  ]
                                }
                              ],
                              [
                                "**securityBulletin**: SecurityBulletin are notifications of vulnerabilities of Google products.",
                                {
                                  "$ul": [
                                    "**bulletinId**: ID of the bulletin corresponding to the vulnerability.",
                                    "**submissionTime**: Submission time of this Security Bulletin.",
                                    "**suggestedUpgradeVersion**: This represents a version that the cluster receiving this notification should be upgraded to, based on its current version. For example, 1.15.0"
                                  ]
                                }
                              ]
                            ]
                          }
                        ]
                      ]
                    }
                  ],
                  "**noViolation**: A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
