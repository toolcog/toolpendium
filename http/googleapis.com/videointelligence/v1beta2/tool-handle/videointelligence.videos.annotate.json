{
  "name": "videointelligence_videos_annotate",
  "description": "Performs asynchronous video annotation. Progress and results can be retrieved through the `google.longrunning.Operations` interface. `Operation.metadata` contains `AnnotateVideoProgress` (progress). `Operation.response` contains `AnnotateVideoResponse` (results).",
  "parameters": {
    "type": "object",
    "properties": {
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleCloudVideointelligenceV1beta2_AnnotateVideoRequest"
      }
    },
    "$defs": {
      "GoogleCloudVideointelligenceV1beta2_AnnotateVideoRequest": {
        "description": "Video annotation request.",
        "properties": {
          "features": {
            "description": "Required. Requested video annotation features.",
            "items": {
              "enum": [
                "FEATURE_UNSPECIFIED",
                "LABEL_DETECTION",
                "SHOT_CHANGE_DETECTION",
                "EXPLICIT_CONTENT_DETECTION",
                "FACE_DETECTION",
                "SPEECH_TRANSCRIPTION",
                "TEXT_DETECTION",
                "OBJECT_TRACKING",
                "LOGO_RECOGNITION",
                "PERSON_DETECTION"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "inputContent": {
            "description": "The video data bytes. If unset, the input video(s) should be specified via the `input_uri`. If set, `input_uri` must be unset.",
            "format": "byte",
            "type": "string"
          },
          "inputUri": {
            "description": "Input video location. Currently, only [Cloud Storage](https://cloud.google.com/storage/) URIs are supported. URIs must be specified in the following format: `gs://bucket-id/object-id` (other URI formats return google.rpc.Code.INVALID_ARGUMENT). For more information, see [Request URIs](https://cloud.google.com/storage/docs/request-endpoints). To identify multiple videos, a video URI may include wildcards in the `object-id`. Supported wildcards: '*' to match 0 or more characters; '?' to match 1 character. If unset, the input video should be embedded in the request as `input_content`. If set, `input_content` must be unset.",
            "type": "string"
          },
          "locationId": {
            "description": "Optional. Cloud region where annotation should take place. Supported cloud regions are: `us-east1`, `us-west1`, `europe-west1`, `asia-east1`. If no region is specified, the region will be determined based on video file location.",
            "type": "string"
          },
          "outputUri": {
            "description": "Optional. Location where the output (in JSON format) should be stored. Currently, only [Cloud Storage](https://cloud.google.com/storage/) URIs are supported. These must be specified in the following format: `gs://bucket-id/object-id` (other URI formats return google.rpc.Code.INVALID_ARGUMENT). For more information, see [Request URIs](https://cloud.google.com/storage/docs/request-endpoints).",
            "type": "string"
          },
          "videoContext": {
            "$ref": "#/$defs/GoogleCloudVideointelligenceV1beta2_VideoContext"
          }
        },
        "type": "object"
      },
      "GoogleCloudVideointelligenceV1beta2_VideoContext": {
        "description": "Video context and/or feature-specific parameters.",
        "properties": {
          "explicitContentDetectionConfig": {
            "$ref": "#/$defs/GoogleCloudVideointelligenceV1beta2_ExplicitContentDetectionConfig"
          },
          "faceDetectionConfig": {
            "$ref": "#/$defs/GoogleCloudVideointelligenceV1beta2_FaceDetectionConfig"
          },
          "labelDetectionConfig": {
            "$ref": "#/$defs/GoogleCloudVideointelligenceV1beta2_LabelDetectionConfig"
          },
          "objectTrackingConfig": {
            "$ref": "#/$defs/GoogleCloudVideointelligenceV1beta2_ObjectTrackingConfig"
          },
          "personDetectionConfig": {
            "$ref": "#/$defs/GoogleCloudVideointelligenceV1beta2_PersonDetectionConfig"
          },
          "segments": {
            "description": "Video segments to annotate. The segments may overlap and are not required to be contiguous or span the whole video. If unspecified, each video is treated as a single segment.",
            "items": {
              "$ref": "#/$defs/GoogleCloudVideointelligenceV1beta2_VideoSegment"
            },
            "type": "array"
          },
          "shotChangeDetectionConfig": {
            "$ref": "#/$defs/GoogleCloudVideointelligenceV1beta2_ShotChangeDetectionConfig"
          },
          "speechTranscriptionConfig": {
            "$ref": "#/$defs/GoogleCloudVideointelligenceV1beta2_SpeechTranscriptionConfig"
          },
          "textDetectionConfig": {
            "$ref": "#/$defs/GoogleCloudVideointelligenceV1beta2_TextDetectionConfig"
          }
        },
        "type": "object"
      },
      "GoogleCloudVideointelligenceV1beta2_ExplicitContentDetectionConfig": {
        "description": "Config for EXPLICIT_CONTENT_DETECTION.",
        "properties": {
          "model": {
            "description": "Model to use for explicit content detection. Supported values: \"builtin/stable\" (the default if unset) and \"builtin/latest\".",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudVideointelligenceV1beta2_FaceDetectionConfig": {
        "description": "Config for FACE_DETECTION.",
        "properties": {
          "includeAttributes": {
            "description": "Whether to enable face attributes detection, such as glasses, dark_glasses, mouth_open etc. Ignored if 'include_bounding_boxes' is set to false.",
            "type": "boolean"
          },
          "includeBoundingBoxes": {
            "description": "Whether bounding boxes are included in the face annotation output.",
            "type": "boolean"
          },
          "model": {
            "description": "Model to use for face detection. Supported values: \"builtin/stable\" (the default if unset) and \"builtin/latest\".",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudVideointelligenceV1beta2_LabelDetectionConfig": {
        "description": "Config for LABEL_DETECTION.",
        "properties": {
          "frameConfidenceThreshold": {
            "description": "The confidence threshold we perform filtering on the labels from frame-level detection. If not set, it is set to 0.4 by default. The valid range for this threshold is [0.1, 0.9]. Any value set outside of this range will be clipped. Note: For best results, follow the default threshold. We will update the default threshold everytime when we release a new model.",
            "format": "float",
            "type": "number"
          },
          "labelDetectionMode": {
            "description": "What labels should be detected with LABEL_DETECTION, in addition to video-level labels or segment-level labels. If unspecified, defaults to `SHOT_MODE`.",
            "enum": [
              "LABEL_DETECTION_MODE_UNSPECIFIED",
              "SHOT_MODE",
              "FRAME_MODE",
              "SHOT_AND_FRAME_MODE"
            ],
            "type": "string"
          },
          "model": {
            "description": "Model to use for label detection. Supported values: \"builtin/stable\" (the default if unset) and \"builtin/latest\".",
            "type": "string"
          },
          "stationaryCamera": {
            "description": "Whether the video has been shot from a stationary (i.e., non-moving) camera. When set to true, might improve detection accuracy for moving objects. Should be used with `SHOT_AND_FRAME_MODE` enabled.",
            "type": "boolean"
          },
          "videoConfidenceThreshold": {
            "description": "The confidence threshold we perform filtering on the labels from video-level and shot-level detections. If not set, it's set to 0.3 by default. The valid range for this threshold is [0.1, 0.9]. Any value set outside of this range will be clipped. Note: For best results, follow the default threshold. We will update the default threshold everytime when we release a new model.",
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "GoogleCloudVideointelligenceV1beta2_ObjectTrackingConfig": {
        "description": "Config for OBJECT_TRACKING.",
        "properties": {
          "model": {
            "description": "Model to use for object tracking. Supported values: \"builtin/stable\" (the default if unset) and \"builtin/latest\".",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudVideointelligenceV1beta2_PersonDetectionConfig": {
        "description": "Config for PERSON_DETECTION.",
        "properties": {
          "includeAttributes": {
            "description": "Whether to enable person attributes detection, such as cloth color (black, blue, etc), type (coat, dress, etc), pattern (plain, floral, etc), hair, etc. Ignored if 'include_bounding_boxes' is set to false.",
            "type": "boolean"
          },
          "includeBoundingBoxes": {
            "description": "Whether bounding boxes are included in the person detection annotation output.",
            "type": "boolean"
          },
          "includePoseLandmarks": {
            "description": "Whether to enable pose landmarks detection. Ignored if 'include_bounding_boxes' is set to false.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GoogleCloudVideointelligenceV1beta2_VideoSegment": {
        "description": "Video segment.",
        "properties": {
          "endTimeOffset": {
            "description": "Time-offset, relative to the beginning of the video, corresponding to the end of the segment (inclusive).",
            "format": "google-duration",
            "type": "string"
          },
          "startTimeOffset": {
            "description": "Time-offset, relative to the beginning of the video, corresponding to the start of the segment (inclusive).",
            "format": "google-duration",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudVideointelligenceV1beta2_ShotChangeDetectionConfig": {
        "description": "Config for SHOT_CHANGE_DETECTION.",
        "properties": {
          "model": {
            "description": "Model to use for shot change detection. Supported values: \"builtin/stable\" (the default if unset), \"builtin/latest\", and \"builtin/legacy\".",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudVideointelligenceV1beta2_SpeechTranscriptionConfig": {
        "description": "Config for SPEECH_TRANSCRIPTION.",
        "properties": {
          "audioTracks": {
            "description": "Optional. For file formats, such as MXF or MKV, supporting multiple audio tracks, specify up to two tracks. Default: track 0.",
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array"
          },
          "diarizationSpeakerCount": {
            "description": "Optional. If set, specifies the estimated number of speakers in the conversation. If not set, defaults to '2'. Ignored unless enable_speaker_diarization is set to true.",
            "format": "int32",
            "type": "integer"
          },
          "enableAutomaticPunctuation": {
            "description": "Optional. If 'true', adds punctuation to recognition result hypotheses. This feature is only available in select languages. Setting this for requests in other languages has no effect at all. The default 'false' value does not add punctuation to result hypotheses. NOTE: \"This is currently offered as an experimental service, complimentary to all users. In the future this may be exclusively available as a premium feature.\"",
            "type": "boolean"
          },
          "enableSpeakerDiarization": {
            "description": "Optional. If 'true', enables speaker detection for each recognized word in the top alternative of the recognition result using a speaker_tag provided in the WordInfo. Note: When this is true, we send all the words from the beginning of the audio for the top alternative in every consecutive response. This is done in order to improve our speaker tags as our models learn to identify the speakers in the conversation over time.",
            "type": "boolean"
          },
          "enableWordConfidence": {
            "description": "Optional. If `true`, the top result includes a list of words and the confidence for those words. If `false`, no word-level confidence information is returned. The default is `false`.",
            "type": "boolean"
          },
          "filterProfanity": {
            "description": "Optional. If set to `true`, the server will attempt to filter out profanities, replacing all but the initial character in each filtered word with asterisks, e.g. \"f***\". If set to `false` or omitted, profanities won't be filtered out.",
            "type": "boolean"
          },
          "languageCode": {
            "description": "Required. *Required* The language of the supplied audio as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: \"en-US\". See [Language Support](https://cloud.google.com/speech/docs/languages) for a list of the currently supported language codes.",
            "type": "string"
          },
          "maxAlternatives": {
            "description": "Optional. Maximum number of recognition hypotheses to be returned. Specifically, the maximum number of `SpeechRecognitionAlternative` messages within each `SpeechTranscription`. The server may return fewer than `max_alternatives`. Valid values are `0`-`30`. A value of `0` or `1` will return a maximum of one. If omitted, will return a maximum of one.",
            "format": "int32",
            "type": "integer"
          },
          "speechContexts": {
            "description": "Optional. A means to provide context to assist the speech recognition.",
            "items": {
              "$ref": "#/$defs/GoogleCloudVideointelligenceV1beta2_SpeechContext"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudVideointelligenceV1beta2_SpeechContext": {
        "description": "Provides \"hints\" to the speech recognizer to favor specific words and phrases in the results.",
        "properties": {
          "phrases": {
            "description": "Optional. A list of strings containing words and phrases \"hints\" so that the speech recognition is more likely to recognize them. This can be used to improve the accuracy for specific words and phrases, for example, if specific commands are typically spoken by the user. This can also be used to add additional words to the vocabulary of the recognizer. See [usage limits](https://cloud.google.com/speech/limits#content).",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudVideointelligenceV1beta2_TextDetectionConfig": {
        "description": "Config for TEXT_DETECTION.",
        "properties": {
          "languageHints": {
            "description": "Language hint can be specified if the language to be detected is known a priori. It can increase the accuracy of the detection. Language hint must be language code in BCP-47 format. Automatic language detection is performed if no hint is provided.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "model": {
            "description": "Model to use for text detection. Supported values: \"builtin/stable\" (the default if unset) and \"builtin/latest\".",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://videointelligence.googleapis.com//v1beta2/videos:annotate{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "This resource represents a long-running operation that is the result of a network API call.",
        "**Key properties:**",
        {
          "$ul": [
            "**done**: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
            [
              "**error**: The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
              {
                "$ul": [
                  "**code**: The status code, which should be an enum value of google.rpc.Code.",
                  "**details**: A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                  "**message**: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                ]
              }
            ],
            "**metadata**: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
            "**name**: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
            "**response**: The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
