{
  "name": "bigqueryconnection_projects_locations_connections_get",
  "description": "Returns specified connection.",
  "parameters": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "Required. Name of the requested connection, for example: `projects/{project_id}/locations/{location_id}/connections/{connection_id}`"
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      }
    },
    "required": [
      "name"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://bigqueryconnection.googleapis.com//v1/{name}{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Configuration parameters to establish connection with an external data source, except the credential attributes.",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**aws**: Connection properties specific to Amazon Web Services (AWS).",
              {
                "$ul": [
                  [
                    "**accessRole**: Authentication method for Amazon Web Services (AWS) that uses Google owned Google service account to assume into customer's AWS IAM Role.",
                    {
                      "$ul": [
                        "**iamRoleId**: The userâ€™s AWS IAM Role that trusts the Google-owned AWS IAM user Connection.",
                        "**identity**: A unique Google-owned and Google-generated identity for the Connection. This identity will be used to access the user's AWS IAM Role."
                      ]
                    }
                  ]
                ]
              }
            ],
            [
              "**azure**: Container for connection properties specific to Azure.",
              {
                "$ul": [
                  "**application**: Output only. The name of the Azure Active Directory Application.",
                  "**clientId**: Output only. The client id of the Azure Active Directory Application.",
                  "**customerTenantId**: The id of customer's directory that host the data.",
                  "**federatedApplicationClientId**: The client ID of the user's Azure Active Directory Application used for a federated connection.",
                  "**identity**: Output only. A unique Google-owned and Google-generated identity for the Connection. This identity will be used to access the user's Azure Active Directory Application.",
                  "**objectId**: Output only. The object id of the Azure Active Directory Application.",
                  "**redirectUri**: The URL user will be redirected to after granting consent during connection setup."
                ]
              }
            ],
            [
              "**cloudResource**: Container for connection properties for delegation of access to GCP resources.",
              {
                "$ul": [
                  "**serviceAccountId**: Output only. The account ID of the service created for the purpose of this connection. The service account does not have any permissions associated with it when it is created. After creation, customers delegate permissions to the service account. When the connection is used in the context of an operation in BigQuery, the service account will be used to connect to the desired resources in GCP. The account ID is in the form of: @gcp-sa-bigquery-cloudresource.iam.gserviceaccount.com"
                ]
              }
            ],
            [
              "**cloudSpanner**: Connection properties specific to Cloud Spanner.",
              {
                "$ul": [
                  "**database**: Cloud Spanner database in the form `project/instance/database'",
                  "**databaseRole**: Optional. Cloud Spanner database role for fine-grained access control. The Cloud Spanner admin should have provisioned the database role with appropriate permissions, such as `SELECT` and `INSERT`. Other users should only use roles provided by their Cloud Spanner admins. For more details, see [About fine-grained access control] (https://cloud.google.com/spanner/docs/fgac-about). REQUIRES: The database role name must start with a letter, and can only contain letters, numbers, and underscores.",
                  "**maxParallelism**: Allows setting max parallelism per query when executing on Spanner independent compute resources. If unspecified, default values of parallelism are chosen that are dependent on the Cloud Spanner instance configuration. REQUIRES: `use_parallelism` must be set. REQUIRES: `use_data_boost` must be set.",
                  "**useDataBoost**: If set, the request will be executed via Spanner independent compute resources. REQUIRES: `use_parallelism` must be set.",
                  "**useParallelism**: If parallelism should be used when reading from Cloud Spanner",
                  "**useServerlessAnalytics**: Deprecated: prefer use_data_boost instead. If the serverless analytics service should be used to read data from Cloud Spanner. Note: `use_parallelism` must be set when using serverless analytics."
                ]
              }
            ],
            [
              "**cloudSql**: Connection properties specific to the Cloud SQL.",
              {
                "$ul": [
                  [
                    "**credential**: Credential info for the Cloud SQL.",
                    {
                      "$ul": [
                        "**password**: The password for the credential.",
                        "**username**: The username for the credential."
                      ]
                    }
                  ],
                  "**database**: Database name.",
                  "**instanceId**: Cloud SQL instance ID in the form `project:location:instance`.",
                  "**serviceAccountId**: Output only. The account ID of the service used for the purpose of this connection. When the connection is used in the context of an operation in BigQuery, this service account will serve as the identity being used for connecting to the CloudSQL instance specified in this connection.",
                  "**type**: Type of the Cloud SQL database."
                ]
              }
            ],
            [
              "**configuration**: Represents concrete parameter values for Connector Configuration.",
              {
                "$ul": [
                  [
                    "**authentication**: Client authentication.",
                    {
                      "$ul": [
                        [
                          "**usernamePassword**: Username and Password authentication.",
                          {
                            "$ul": [
                              [
                                "**password**: Secret value parameter.",
                                {
                                  "$ul": [
                                    "**plaintext**: Input only. Secret as plaintext.",
                                    "**secretType**: Output only. Indicates type of secret. Can be used to check type of stored secret value even if it's `INPUT_ONLY`."
                                  ]
                                }
                              ],
                              "**username**: Required. Username."
                            ]
                          }
                        ]
                      ]
                    }
                  ],
                  "**connectorId**: Required. Immutable. The ID of the Connector these parameters are configured for.",
                  [
                    "**endpoint**: Remote endpoint specification.",
                    {
                      "$ul": [
                        "**hostPort**: Host and port in a format of `hostname:port` as defined in https://www.ietf.org/rfc/rfc3986.html#section-3.2.2 and https://www.ietf.org/rfc/rfc3986.html#section-3.2.3."
                      ]
                    }
                  ]
                ]
              }
            ],
            "**creationTime**: Output only. The creation timestamp of the connection.",
            "**description**: User provided description.",
            "**friendlyName**: User provided display name for the connection.",
            "**hasCredential**: Output only. True, if credential is configured for this connection.",
            "**kmsKeyName**: Optional. The Cloud KMS key that is used for encryption. Example: `projects/[kms_project_id]/locations/[region]/keyRings/[key_region]/cryptoKeys/[key]`",
            "**lastModifiedTime**: Output only. The last update timestamp of the connection.",
            "**name**: Output only. The resource name of the connection in the form of: `projects/{project_id}/locations/{location_id}/connections/{connection_id}`",
            [
              "**salesforceDataCloud**: Connection properties specific to Salesforce DataCloud. This is intended for use only by Salesforce partner projects.",
              {
                "$ul": [
                  "**identity**: Output only. A unique Google-owned and Google-generated service account identity for the connection.",
                  "**instanceUri**: The URL to the user's Salesforce DataCloud instance.",
                  "**tenantId**: The ID of the user's Salesforce tenant."
                ]
              }
            ],
            [
              "**spark**: Container for connection properties to execute stored procedures for Apache Spark.",
              {
                "$ul": [
                  [
                    "**metastoreServiceConfig**: Configuration of the Dataproc Metastore Service.",
                    {
                      "$ul": [
                        "**metastoreService**: Optional. Resource name of an existing Dataproc Metastore service. Example: * `projects/[project_id]/locations/[region]/services/[service_id]`"
                      ]
                    }
                  ],
                  "**serviceAccountId**: Output only. The account ID of the service created for the purpose of this connection. The service account does not have any permissions associated with it when it is created. After creation, customers delegate permissions to the service account. When the connection is used in the context of a stored procedure for Apache Spark in BigQuery, the service account is used to connect to the desired resources in Google Cloud. The account ID is in the form of: bqcx--@gcp-sa-bigquery-consp.iam.gserviceaccount.com",
                  [
                    "**sparkHistoryServerConfig**: Configuration of the Spark History Server.",
                    {
                      "$ul": [
                        "**dataprocCluster**: Optional. Resource name of an existing Dataproc Cluster to act as a Spark History Server for the connection. Example: * `projects/[project_id]/regions/[region]/clusters/[cluster_name]`"
                      ]
                    }
                  ]
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
