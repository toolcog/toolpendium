{
  "name": "sourcerepo_projects_updateConfig",
  "description": "Updates the Cloud Source Repositories configuration of the project.",
  "parameters": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "The name of the requested project. Values are of the form `projects/`."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/UpdateProjectConfigRequest"
      }
    },
    "required": [
      "name"
    ],
    "$defs": {
      "UpdateProjectConfigRequest": {
        "description": "Request for UpdateProjectConfig.",
        "properties": {
          "projectConfig": {
            "$ref": "#/$defs/ProjectConfig"
          },
          "updateMask": {
            "description": "A FieldMask specifying which fields of the project_config to modify. Only the fields in the mask will be modified. If no mask is provided, this request is no-op.",
            "format": "google-fieldmask",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProjectConfig": {
        "description": "Cloud Source Repositories configuration of a project.",
        "properties": {
          "enablePrivateKeyCheck": {
            "description": "Reject a Git push that contains a private key.",
            "type": "boolean"
          },
          "name": {
            "description": "The name of the project. Values are of the form `projects/`.",
            "type": "string"
          },
          "pubsubConfigs": {
            "additionalProperties": {
              "$ref": "#/$defs/PubsubConfig"
            },
            "description": "How this project publishes a change in the repositories through Cloud Pub/Sub. Keyed by the topic names.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "PubsubConfig": {
        "description": "Configuration to publish a Cloud Pub/Sub message.",
        "properties": {
          "messageFormat": {
            "description": "The format of the Cloud Pub/Sub messages.",
            "enum": [
              "MESSAGE_FORMAT_UNSPECIFIED",
              "PROTOBUF",
              "JSON"
            ],
            "type": "string"
          },
          "serviceAccountEmail": {
            "description": "Email address of the service account used for publishing Cloud Pub/Sub messages. This service account needs to be in the same project as the PubsubConfig. When added, the caller needs to have iam.serviceAccounts.actAs permission on this service account. If unspecified, it defaults to the compute engine default service account.",
            "type": "string"
          },
          "topic": {
            "description": "A topic of Cloud Pub/Sub. Values are of the form `projects//topics/`. The project needs to be the same project as this config is in.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PATCH",
    "url": {
      "$uri": "https://sourcerepo.googleapis.com//v1/{name}/config{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Cloud Source Repositories configuration of a project.",
        "**Key properties:**",
        {
          "$ul": [
            "**enablePrivateKeyCheck**: Reject a Git push that contains a private key.",
            "**name**: The name of the project. Values are of the form `projects/`.",
            "**pubsubConfigs**: How this project publishes a change in the repositories through Cloud Pub/Sub. Keyed by the topic names."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
