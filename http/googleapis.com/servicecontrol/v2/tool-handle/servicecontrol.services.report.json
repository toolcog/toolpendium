{
  "name": "servicecontrol_services_report",
  "description": "Private Preview. This feature is only available for approved services. This method provides telemetry reporting for services that are integrated with [Service Infrastructure](https://cloud.google.com/service-infrastructure). It reports a list of operations that have occurred on a service. It must be called after the operations have been executed. For more information, see [Telemetry Reporting](https://cloud.google.com/service-infrastructure/docs/telemetry-reporting). NOTE: The telemetry reporting has a hard limit of 1000 operations and 1MB per Report call. It is recommended to have no more than 100 operations per call. This method requires the `servicemanagement.services.report` permission on the specified service. For more information, see [Service Control API Access Control](https://cloud.google.com/service-infrastructure/docs/service-control/access-control).",
  "parameters": {
    "type": "object",
    "properties": {
      "serviceName": {
        "type": "string",
        "description": "The service name as specified in its service configuration. For example, `\"pubsub.googleapis.com\"`. See [google.api.Service](https://cloud.google.com/service-management/reference/rpc/google.api#google.api.Service) for the definition of a service name."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/ReportRequest"
      }
    },
    "required": [
      "serviceName"
    ],
    "$defs": {
      "ReportRequest": {
        "description": "Request message for the Report method.",
        "properties": {
          "operations": {
            "description": "Describes the list of operations to be reported. Each operation is represented as an AttributeContext, and contains all attributes around an API access.",
            "items": {
              "$ref": "#/$defs/AttributeContext"
            },
            "type": "array"
          },
          "serviceConfigId": {
            "description": "Specifies the version of the service configuration that should be used to process the request. Must not be empty. Set this field to 'latest' to specify using the latest configuration.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AttributeContext": {
        "description": "This message defines the standard attribute vocabulary for Google APIs. An attribute is a piece of metadata that describes an activity on a network service. For example, the size of an HTTP request, or the status code of an HTTP response. Each attribute has a type and a name, which is logically defined as a proto message field in `AttributeContext`. The field type becomes the attribute type, and the field path becomes the attribute name. For example, the attribute `source.ip` maps to field `AttributeContext.source.ip`. This message definition is guaranteed not to have any wire breaking change. So you can use it directly for passing attributes across different systems. NOTE: Different system may generate different subset of attributes. Please verify the system specification before relying on an attribute generated a system.",
        "properties": {
          "api": {
            "$ref": "#/$defs/Api"
          },
          "destination": {
            "$ref": "#/$defs/Peer"
          },
          "extensions": {
            "description": "Supports extensions for advanced use cases, such as logs and metrics.",
            "items": {
              "additionalProperties": {
                "description": "Properties of the object. Contains field @type with type URL."
              },
              "type": "object"
            },
            "type": "array"
          },
          "origin": {
            "$ref": "#/$defs/Peer"
          },
          "request": {
            "$ref": "#/$defs/Request"
          },
          "resource": {
            "$ref": "#/$defs/Resource"
          },
          "response": {
            "$ref": "#/$defs/Response"
          },
          "source": {
            "$ref": "#/$defs/Peer"
          }
        },
        "type": "object"
      },
      "Api": {
        "description": "This message defines attributes associated with API operations, such as a network API request. The terminology is based on the conventions used by Google APIs, Istio, and OpenAPI.",
        "properties": {
          "operation": {
            "description": "The API operation name. For gRPC requests, it is the fully qualified API method name, such as \"google.pubsub.v1.Publisher.Publish\". For OpenAPI requests, it is the `operationId`, such as \"getPet\".",
            "type": "string"
          },
          "protocol": {
            "description": "The API protocol used for sending the request, such as \"http\", \"https\", \"grpc\", or \"internal\".",
            "type": "string"
          },
          "service": {
            "description": "The API service name. It is a logical identifier for a networked API, such as \"pubsub.googleapis.com\". The naming syntax depends on the API management system being used for handling the request.",
            "type": "string"
          },
          "version": {
            "description": "The API version associated with the API operation above, such as \"v1\" or \"v1alpha1\".",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Peer": {
        "description": "This message defines attributes for a node that handles a network request. The node can be either a service or an application that sends, forwards, or receives the request. Service peers should fill in `principal` and `labels` as appropriate.",
        "properties": {
          "ip": {
            "description": "The IP address of the peer.",
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The labels associated with the peer.",
            "type": "object"
          },
          "port": {
            "description": "The network port of the peer.",
            "format": "int64",
            "type": "string"
          },
          "principal": {
            "description": "The identity of this peer. Similar to `Request.auth.principal`, but relative to the peer instead of the request. For example, the identity associated with a load balancer that forwarded the request.",
            "type": "string"
          },
          "regionCode": {
            "description": "The CLDR country/region code associated with the above IP address. If the IP address is private, the `region_code` should reflect the physical location where this peer is running.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Request": {
        "description": "This message defines attributes for an HTTP request. If the actual request is not an HTTP request, the runtime system should try to map the actual request to an equivalent HTTP request.",
        "properties": {
          "auth": {
            "$ref": "#/$defs/Auth"
          },
          "headers": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The HTTP request headers. If multiple headers share the same key, they must be merged according to the HTTP spec. All header keys must be lowercased, because HTTP header keys are case-insensitive.",
            "type": "object"
          },
          "host": {
            "description": "The HTTP request `Host` header value.",
            "type": "string"
          },
          "id": {
            "description": "The unique ID for a request, which can be propagated to downstream systems. The ID should have low probability of collision within a single day for a specific service.",
            "type": "string"
          },
          "method": {
            "description": "The HTTP request method, such as `GET`, `POST`.",
            "type": "string"
          },
          "path": {
            "description": "The HTTP URL path, excluding the query parameters.",
            "type": "string"
          },
          "protocol": {
            "description": "The network protocol used with the request, such as \"http/1.1\", \"spdy/3\", \"h2\", \"h2c\", \"webrtc\", \"tcp\", \"udp\", \"quic\". See https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml#alpn-protocol-ids for details.",
            "type": "string"
          },
          "query": {
            "description": "The HTTP URL query in the format of `name1=value1&name2=value2`, as it appears in the first line of the HTTP request. No decoding is performed.",
            "type": "string"
          },
          "reason": {
            "description": "A special parameter for request reason. It is used by security systems to associate auditing information with a request.",
            "type": "string"
          },
          "scheme": {
            "description": "The HTTP URL scheme, such as `http` and `https`.",
            "type": "string"
          },
          "size": {
            "description": "The HTTP request size in bytes. If unknown, it must be -1.",
            "format": "int64",
            "type": "string"
          },
          "time": {
            "description": "The timestamp when the `destination` service receives the last byte of the request.",
            "format": "google-datetime",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Auth": {
        "description": "This message defines request authentication attributes. Terminology is based on the JSON Web Token (JWT) standard, but the terms also correlate to concepts in other standards.",
        "properties": {
          "accessLevels": {
            "description": "A list of access level resource names that allow resources to be accessed by authenticated requester. It is part of Secure GCP processing for the incoming request. An access level string has the format: \"//{api_service_name}/accessPolicies/{policy_id}/accessLevels/{short_name}\" Example: \"//accesscontextmanager.googleapis.com/accessPolicies/MY_POLICY_ID/accessLevels/MY_LEVEL\"",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "audiences": {
            "description": "The intended audience(s) for this authentication information. Reflects the audience (`aud`) claim within a JWT. The audience value(s) depends on the `issuer`, but typically include one or more of the following pieces of information: * The services intended to receive the credential. For example, [\"https://pubsub.googleapis.com/\", \"https://storage.googleapis.com/\"]. * A set of service-based scopes. For example, [\"https://www.googleapis.com/auth/cloud-platform\"]. * The client id of an app, such as the Firebase project id for JWTs from Firebase Auth. Consult the documentation for the credential issuer to determine the information provided.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "claims": {
            "additionalProperties": {
              "description": "Properties of the object."
            },
            "description": "Structured claims presented with the credential. JWTs include `{key: value}` pairs for standard and private claims. The following is a subset of the standard required and optional claims that would typically be presented for a Google-based JWT: {'iss': 'accounts.google.com', 'sub': '113289723416554971153', 'aud': ['123456789012', 'pubsub.googleapis.com'], 'azp': '123456789012.apps.googleusercontent.com', 'email': 'jsmith@example.com', 'iat': 1353601026, 'exp': 1353604926} SAML assertions are similarly specified, but with an identity provider dependent structure.",
            "type": "object"
          },
          "presenter": {
            "description": "The authorized presenter of the credential. Reflects the optional Authorized Presenter (`azp`) claim within a JWT or the OAuth client id. For example, a Google Cloud Platform client id looks as follows: \"123456789012.apps.googleusercontent.com\".",
            "type": "string"
          },
          "principal": {
            "description": "The authenticated principal. Reflects the issuer (`iss`) and subject (`sub`) claims within a JWT. The issuer and subject should be `/` delimited, with `/` percent-encoded within the subject fragment. For Google accounts, the principal format is: \"https://accounts.google.com/{id}\"",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Resource": {
        "description": "This message defines core attributes for a resource. A resource is an addressable (named) entity provided by the destination service. For example, a file stored on a network storage service.",
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Annotations is an unstructured key-value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/",
            "type": "object"
          },
          "createTime": {
            "description": "Output only. The timestamp when the resource was created. This may be either the time creation was initiated or when it was completed.",
            "format": "google-datetime",
            "type": "string"
          },
          "deleteTime": {
            "description": "Output only. The timestamp when the resource was deleted. If the resource is not deleted, this must be empty.",
            "format": "google-datetime",
            "type": "string"
          },
          "displayName": {
            "description": "Mutable. The display name set by clients. Must be <= 63 characters.",
            "type": "string"
          },
          "etag": {
            "description": "Output only. An opaque value that uniquely identifies a version or generation of a resource. It can be used to confirm that the client and server agree on the ordering of a resource being written.",
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The labels or tags on the resource, such as AWS resource tags and Kubernetes resource labels.",
            "type": "object"
          },
          "location": {
            "description": "Immutable. The location of the resource. The location encoding is specific to the service provider, and new encoding may be introduced as the service evolves. For Google Cloud products, the encoding is what is used by Google Cloud APIs, such as `us-east1`, `aws-us-east-1`, and `azure-eastus2`. The semantics of `location` is identical to the `cloud.googleapis.com/location` label used by some Google Cloud APIs.",
            "type": "string"
          },
          "name": {
            "description": "The stable identifier (name) of a resource on the `service`. A resource can be logically identified as \"//{resource.service}/{resource.name}\". The differences between a resource name and a URI are: * Resource name is a logical identifier, independent of network protocol and API version. For example, `//pubsub.googleapis.com/projects/123/topics/news-feed`. * URI often includes protocol and version information, so it can be used directly by applications. For example, `https://pubsub.googleapis.com/v1/projects/123/topics/news-feed`. See https://cloud.google.com/apis/design/resource_names for details.",
            "type": "string"
          },
          "service": {
            "description": "The name of the service that this resource belongs to, such as `pubsub.googleapis.com`. The service may be different from the DNS hostname that actually serves the request.",
            "type": "string"
          },
          "type": {
            "description": "The type of the resource. The syntax is platform-specific because different platforms define their resources differently. For Google APIs, the type format must be \"{service}/{kind}\", such as \"pubsub.googleapis.com/Topic\".",
            "type": "string"
          },
          "uid": {
            "description": "The unique identifier of the resource. UID is unique in the time and space for this resource within the scope of the service. It is typically generated by the server on successful creation of a resource and must not be changed. UID is used to uniquely identify resources with resource name reuses. This should be a UUID4.",
            "type": "string"
          },
          "updateTime": {
            "description": "Output only. The timestamp when the resource was last updated. Any change to the resource made by users must refresh this value. Changes to a resource made by the service should refresh this value.",
            "format": "google-datetime",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Response": {
        "description": "This message defines attributes for a typical network response. It generally models semantics of an HTTP response.",
        "properties": {
          "backendLatency": {
            "description": "The amount of time it takes the backend service to fully respond to a request. Measured from when the destination service starts to send the request to the backend until when the destination service receives the complete response from the backend.",
            "format": "google-duration",
            "type": "string"
          },
          "code": {
            "description": "The HTTP response status code, such as `200` and `404`.",
            "format": "int64",
            "type": "string"
          },
          "headers": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The HTTP response headers. If multiple headers share the same key, they must be merged according to HTTP spec. All header keys must be lowercased, because HTTP header keys are case-insensitive.",
            "type": "object"
          },
          "size": {
            "description": "The HTTP response size in bytes. If unknown, it must be -1.",
            "format": "int64",
            "type": "string"
          },
          "time": {
            "description": "The timestamp when the `destination` service sends the last byte of the response.",
            "format": "google-datetime",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://servicecontrol.googleapis.com//v2/services/{serviceName}:report{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Response message for the Report method.",
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
