{
  "name": "authorizedbuyersmarketplace_buyers_proposals_deals_patch",
  "description": "Updates the given deal at the buyer known revision number. If the server revision has advanced since the passed-in proposal.proposal_revision an ABORTED error message will be returned. The revision number is incremented by the server whenever the proposal or its constituent deals are updated. Note: The revision number is kept at a proposal level. The buyer of the API is expected to keep track of the revision number after the last update operation and send it in as part of the next update request. This way, if there are further changes on the server (for example, seller making new updates), then the server can detect conflicts and reject the proposed changes.",
  "parameters": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "Immutable. The unique identifier of the deal. Auto-generated by the server when a deal is created. Format: buyers/{accountId}/proposals/{proposalId}/deals/{dealId}"
      },
      "updateMask": {
        "type": "string",
        "description": "List of fields to be updated. If empty or unspecified, the service will update all fields populated in the update request excluding the output only fields and primitive fields with default value. Note that explicit field mask is required in order to reset a primitive field back to its default value, for example, false for boolean fields, 0 for integer fields. A special field mask consisting of a single path \"*\" can be used to indicate full replacement(the equivalent of PUT method), updatable fields unset or unspecified in the input will be cleared or set to default value. Output only fields will be ignored regardless of the value of updateMask."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/Deal"
      }
    },
    "required": [
      "name"
    ],
    "$defs": {
      "Deal": {
        "description": "A deal represents a segment of inventory for displaying ads that contains the terms and targeting information that is used for serving as well as the deal stats and status. Note: A proposal may contain multiple deals.",
        "properties": {
          "billedBuyer": {
            "description": "Output only. When the client field is populated, this field refers to the buyer who creates and manages the client buyer and gets billed on behalf of the client buyer; when the buyer field is populated, this field is the same value as buyer. Format : `buyers/{buyerAccountId}`",
            "readOnly": true,
            "type": "string"
          },
          "buyer": {
            "description": "Output only. Refers to a buyer in The Realtime-bidding API. Format: `buyers/{buyerAccountId}`",
            "readOnly": true,
            "type": "string"
          },
          "client": {
            "description": "Output only. Refers to a Client. Format: `buyers/{buyerAccountId}/clients/{clientAccountid}`",
            "readOnly": true,
            "type": "string"
          },
          "createTime": {
            "description": "Output only. The time of the deal creation.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "creativeRequirements": {
            "$ref": "#/$defs/CreativeRequirements"
          },
          "dealType": {
            "description": "Output only. Type of deal.",
            "enum": [
              "DEAL_TYPE_UNSPECIFIED",
              "PREFERRED_DEAL",
              "PRIVATE_AUCTION",
              "PROGRAMMATIC_GUARANTEED"
            ],
            "readOnly": true,
            "type": "string"
          },
          "deliveryControl": {
            "$ref": "#/$defs/DeliveryControl"
          },
          "description": {
            "description": "Output only. Free text description for the deal terms.",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "Output only. The name of the deal. Maximum length of 255 unicode characters is allowed. Control characters are not allowed. Buyers cannot update this field. Note: Not to be confused with name, which is a unique identifier of the deal.",
            "readOnly": true,
            "type": "string"
          },
          "estimatedGrossSpend": {
            "$ref": "#/$defs/Money"
          },
          "flightEndTime": {
            "description": "Proposed flight end time of the deal. This will generally be stored in a granularity of a second. A value is not necessary for Private Auction deals.",
            "format": "google-datetime",
            "type": "string"
          },
          "flightStartTime": {
            "description": "Proposed flight start time of the deal. This will generally be stored in the granularity of one second since deal serving starts at seconds boundary. Any time specified with more granularity (for example, in milliseconds) will be truncated towards the start of time in seconds.",
            "format": "google-datetime",
            "type": "string"
          },
          "name": {
            "description": "Immutable. The unique identifier of the deal. Auto-generated by the server when a deal is created. Format: buyers/{accountId}/proposals/{proposalId}/deals/{dealId}",
            "type": "string"
          },
          "preferredDealTerms": {
            "$ref": "#/$defs/PreferredDealTerms"
          },
          "privateAuctionTerms": {
            "$ref": "#/$defs/PrivateAuctionTerms"
          },
          "programmaticGuaranteedTerms": {
            "$ref": "#/$defs/ProgrammaticGuaranteedTerms"
          },
          "proposalRevision": {
            "description": "Output only. The revision number for the proposal and is the same value as proposal.proposal_revision. Each update to deal causes the proposal revision number to auto-increment. The buyer keeps track of the last revision number they know of and pass it in when making an update. If the head revision number on the server has since incremented, then an ABORTED error is returned during the update operation to let the buyer know that a subsequent update was made.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "publisherProfile": {
            "description": "Immutable. Reference to the seller on the deal. Format: `buyers/{buyerAccountId}/publisherProfiles/{publisherProfileId}`",
            "type": "string"
          },
          "sellerTimeZone": {
            "$ref": "#/$defs/TimeZone"
          },
          "targeting": {
            "$ref": "#/$defs/MarketplaceTargeting"
          },
          "updateTime": {
            "description": "Output only. The time when the deal was last updated.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreativeRequirements": {
        "description": "Message captures data about the creatives in the deal.",
        "properties": {
          "creativeFormat": {
            "description": "Output only. The format of the creative, only applicable for programmatic guaranteed and preferred deals.",
            "enum": [
              "CREATIVE_FORMAT_UNSPECIFIED",
              "DISPLAY",
              "VIDEO",
              "AUDIO"
            ],
            "readOnly": true,
            "type": "string"
          },
          "creativePreApprovalPolicy": {
            "description": "Output only. Specifies the creative pre-approval policy.",
            "enum": [
              "CREATIVE_PRE_APPROVAL_POLICY_UNSPECIFIED",
              "SELLER_PRE_APPROVAL_REQUIRED",
              "SELLER_PRE_APPROVAL_NOT_REQUIRED"
            ],
            "readOnly": true,
            "type": "string"
          },
          "creativeSafeFrameCompatibility": {
            "description": "Output only. Specifies whether the creative is safeFrame compatible.",
            "enum": [
              "CREATIVE_SAFE_FRAME_COMPATIBILITY_UNSPECIFIED",
              "COMPATIBLE",
              "INCOMPATIBLE"
            ],
            "readOnly": true,
            "type": "string"
          },
          "maxAdDurationMs": {
            "description": "Output only. The max duration of the video creative in milliseconds. only applicable for deals with video creatives.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "programmaticCreativeSource": {
            "description": "Output only. Specifies the creative source for programmatic deals. PUBLISHER means creative is provided by seller and ADVERTISER means creative is provided by the buyer.",
            "enum": [
              "PROGRAMMATIC_CREATIVE_SOURCE_UNSPECIFIED",
              "ADVERTISER",
              "PUBLISHER"
            ],
            "readOnly": true,
            "type": "string"
          },
          "skippableAdType": {
            "description": "Output only. Skippable video ads allow viewers to skip ads after 5 seconds. Only applicable for deals with video creatives.",
            "enum": [
              "SKIPPABLE_AD_TYPE_UNSPECIFIED",
              "SKIPPABLE",
              "INSTREAM_SELECT",
              "NOT_SKIPPABLE",
              "ANY"
            ],
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeliveryControl": {
        "description": "Message contains details about how the deal will be paced.",
        "properties": {
          "companionDeliveryType": {
            "description": "Output only. Specifies roadblocking in a main companion lineitem.",
            "enum": [
              "COMPANION_DELIVERY_TYPE_UNSPECIFIED",
              "DELIVERY_OPTIONAL",
              "DELIVERY_AT_LEAST_ONE",
              "DELIVERY_ALL"
            ],
            "readOnly": true,
            "type": "string"
          },
          "creativeRotationType": {
            "description": "Output only. Specifies strategy to use for selecting a creative when multiple creatives of the same size are available.",
            "enum": [
              "CREATIVE_ROTATION_TYPE_UNSPECIFIED",
              "ROTATION_EVEN",
              "ROTATION_OPTIMIZED",
              "ROTATION_MANUAL",
              "ROTATION_SEQUENTIAL"
            ],
            "readOnly": true,
            "type": "string"
          },
          "deliveryRateType": {
            "description": "Output only. Specifies how the impression delivery will be paced.",
            "enum": [
              "DELIVERY_RATE_TYPE_UNSPECIFIED",
              "EVENLY",
              "FRONT_LOADED",
              "AS_FAST_AS_POSSIBLE"
            ],
            "readOnly": true,
            "type": "string"
          },
          "frequencyCap": {
            "description": "Output only. Specifies any frequency caps. Cannot be filtered within ListDealsRequest.",
            "items": {
              "$ref": "#/$defs/FrequencyCap"
            },
            "readOnly": true,
            "type": "array"
          },
          "roadblockingType": {
            "description": "Output only. Specifies the roadblocking type in display creatives.",
            "enum": [
              "ROADBLOCKING_TYPE_UNSPECIFIED",
              "ONLY_ONE",
              "ONE_OR_MORE",
              "AS_MANY_AS_POSSIBLE",
              "ALL_ROADBLOCK",
              "CREATIVE_SET"
            ],
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "FrequencyCap": {
        "description": "Message contains details about publisher-set frequency caps of the delivery.",
        "properties": {
          "maxImpressions": {
            "description": "The maximum number of impressions that can be served to a user within the specified time period.",
            "format": "int32",
            "type": "integer"
          },
          "timeUnitType": {
            "description": "The time unit. Along with num_time_units defines the amount of time over which impressions per user are counted and capped.",
            "enum": [
              "TIME_UNIT_TYPE_UNSPECIFIED",
              "MINUTE",
              "HOUR",
              "DAY",
              "WEEK",
              "MONTH",
              "LIFETIME",
              "POD",
              "STREAM"
            ],
            "type": "string"
          },
          "timeUnitsCount": {
            "description": "The amount of time, in the units specified by time_unit_type. Defines the amount of time over which impressions per user are counted and capped.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Money": {
        "description": "Represents an amount of money with its currency type.",
        "properties": {
          "currencyCode": {
            "description": "The three-letter currency code defined in ISO 4217.",
            "type": "string"
          },
          "nanos": {
            "description": "Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.",
            "format": "int32",
            "type": "integer"
          },
          "units": {
            "description": "The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar.",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PreferredDealTerms": {
        "description": "Pricing terms for Preferred Deals.",
        "properties": {
          "fixedPrice": {
            "$ref": "#/$defs/Price"
          }
        },
        "type": "object"
      },
      "Price": {
        "description": "Represents a price and a pricing type for a deal.",
        "properties": {
          "amount": {
            "$ref": "#/$defs/Money"
          },
          "type": {
            "description": "The pricing type for the deal.",
            "enum": [
              "TYPE_UNSPECIFIED",
              "CPM",
              "CPD"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "PrivateAuctionTerms": {
        "description": "Pricing terms for Private Auctions.",
        "properties": {
          "floorPrice": {
            "$ref": "#/$defs/Price"
          },
          "openAuctionAllowed": {
            "description": "Output only. True if open auction buyers are allowed to compete with invited buyers in this private auction.",
            "readOnly": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ProgrammaticGuaranteedTerms": {
        "description": "Pricing terms for Programmatic Guaranteed Deals.",
        "properties": {
          "fixedPrice": {
            "$ref": "#/$defs/Price"
          },
          "guaranteedLooks": {
            "description": "Count of guaranteed looks. For CPD deals, buyer changes to guaranteed_looks will be ignored.",
            "format": "int64",
            "type": "string"
          },
          "impressionCap": {
            "description": "The lifetime impression cap for CPM Sponsorship deals. Deal will stop serving when cap is reached.",
            "format": "int64",
            "type": "string"
          },
          "minimumDailyLooks": {
            "description": "Daily minimum looks for CPD deal types. For CPD deals, buyer should negotiate on this field instead of guaranteed_looks.",
            "format": "int64",
            "type": "string"
          },
          "percentShareOfVoice": {
            "description": "For sponsorship deals, this is the percentage of the seller's eligible impressions that the deal will serve until the cap is reached. Valid value is within range 0~100.",
            "format": "int64",
            "type": "string"
          },
          "reservationType": {
            "description": "The reservation type for a Programmatic Guaranteed deal. This indicates whether the number of impressions is fixed, or a percent of available impressions. If not specified, the default reservation type is STANDARD.",
            "enum": [
              "RESERVATION_TYPE_UNSPECIFIED",
              "STANDARD",
              "SPONSORSHIP"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "TimeZone": {
        "description": "Represents a time zone from the [IANA Time Zone Database](https://www.iana.org/time-zones).",
        "properties": {
          "id": {
            "description": "IANA Time Zone Database time zone, e.g. \"America/New_York\".",
            "type": "string"
          },
          "version": {
            "description": "Optional. IANA Time Zone Database version number, e.g. \"2019a\".",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MarketplaceTargeting": {
        "description": "Targeting represents different criteria that can be used to target inventory. For example, they can choose to target inventory only if the user is in the US. Multiple types of targeting are always applied as a logical AND, unless noted otherwise.",
        "properties": {
          "daypartTargeting": {
            "$ref": "#/$defs/DayPartTargeting"
          },
          "geoTargeting": {
            "$ref": "#/$defs/CriteriaTargeting"
          },
          "inventorySizeTargeting": {
            "$ref": "#/$defs/InventorySizeTargeting"
          },
          "inventoryTypeTargeting": {
            "$ref": "#/$defs/InventoryTypeTargeting"
          },
          "placementTargeting": {
            "$ref": "#/$defs/PlacementTargeting"
          },
          "technologyTargeting": {
            "$ref": "#/$defs/TechnologyTargeting"
          },
          "userListTargeting": {
            "$ref": "#/$defs/CriteriaTargeting"
          },
          "videoTargeting": {
            "$ref": "#/$defs/VideoTargeting"
          }
        },
        "type": "object"
      },
      "DayPartTargeting": {
        "description": "Represents Daypart targeting.",
        "properties": {
          "dayParts": {
            "description": "The targeted weekdays and times",
            "items": {
              "$ref": "#/$defs/DayPart"
            },
            "type": "array"
          },
          "timeZoneType": {
            "description": "The time zone type of the day parts",
            "enum": [
              "TIME_ZONE_TYPE_UNSPECIFIED",
              "SELLER",
              "USER"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "DayPart": {
        "description": "Defines targeting for a period of time on a specific week day.",
        "properties": {
          "dayOfWeek": {
            "description": "Day of week for the period.",
            "enum": [
              "DAY_OF_WEEK_UNSPECIFIED",
              "MONDAY",
              "TUESDAY",
              "WEDNESDAY",
              "THURSDAY",
              "FRIDAY",
              "SATURDAY",
              "SUNDAY"
            ],
            "type": "string"
          },
          "endTime": {
            "$ref": "#/$defs/TimeOfDay"
          },
          "startTime": {
            "$ref": "#/$defs/TimeOfDay"
          }
        },
        "type": "object"
      },
      "TimeOfDay": {
        "description": "Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.",
        "properties": {
          "hours": {
            "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \"24:00:00\" for scenarios like business closing time.",
            "format": "int32",
            "type": "integer"
          },
          "minutes": {
            "description": "Minutes of hour of day. Must be from 0 to 59.",
            "format": "int32",
            "type": "integer"
          },
          "nanos": {
            "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.",
            "format": "int32",
            "type": "integer"
          },
          "seconds": {
            "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "CriteriaTargeting": {
        "description": "Generic targeting used for targeting dimensions that contains a list of included and excluded numeric IDs. This cannot be filtered using list filter syntax.",
        "properties": {
          "excludedCriteriaIds": {
            "description": "A list of numeric IDs to be excluded.",
            "items": {
              "format": "int64",
              "type": "string"
            },
            "type": "array"
          },
          "targetedCriteriaIds": {
            "description": "A list of numeric IDs to be included.",
            "items": {
              "format": "int64",
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "InventorySizeTargeting": {
        "description": "Represents the size of an ad unit that can be targeted on a bid request.",
        "properties": {
          "excludedInventorySizes": {
            "description": "A list of inventory sizes to be excluded.",
            "items": {
              "$ref": "#/$defs/AdSize"
            },
            "type": "array"
          },
          "targetedInventorySizes": {
            "description": "A list of inventory sizes to be included.",
            "items": {
              "$ref": "#/$defs/AdSize"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AdSize": {
        "description": "Represents size of a single ad slot, or a creative.",
        "properties": {
          "height": {
            "description": "The height of the ad slot in pixels. This field will be present only when size type is `PIXEL`.",
            "format": "int64",
            "type": "string"
          },
          "type": {
            "description": "The type of the ad slot size.",
            "enum": [
              "TYPE_UNSPECIFIED",
              "PIXEL",
              "INTERSTITIAL",
              "NATIVE",
              "FLUID"
            ],
            "type": "string"
          },
          "width": {
            "description": "The width of the ad slot in pixels. This field will be present only when size type is `PIXEL`.",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "InventoryTypeTargeting": {
        "description": "Targeting of the inventory types a bid request can originate from.",
        "properties": {
          "inventoryTypes": {
            "description": "The list of targeted inventory types for the bid request.",
            "items": {
              "enum": [
                "INVENTORY_TYPE_UNSPECIFIED",
                "BROWSER",
                "MOBILE_APP",
                "VIDEO_PLAYER"
              ],
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PlacementTargeting": {
        "description": "Represents targeting about where the ads can appear, for example, certain sites or mobile applications. Different placement targeting types will be logically OR'ed.",
        "properties": {
          "mobileApplicationTargeting": {
            "$ref": "#/$defs/MobileApplicationTargeting"
          },
          "uriTargeting": {
            "$ref": "#/$defs/UriTargeting"
          }
        },
        "type": "object"
      },
      "MobileApplicationTargeting": {
        "description": "Mobile application targeting settings.",
        "properties": {
          "firstPartyTargeting": {
            "$ref": "#/$defs/FirstPartyMobileApplicationTargeting"
          }
        },
        "type": "object"
      },
      "FirstPartyMobileApplicationTargeting": {
        "description": "Represents a list of targeted and excluded mobile application IDs that publishers own. Android App ID, for example, com.google.android.apps.maps, can be found in Google Play Store URL. iOS App ID (which is a number) can be found at the end of iTunes store URL. First party mobile applications is either included or excluded.",
        "properties": {
          "excludedAppIds": {
            "description": "A list of application IDs to be excluded.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "targetedAppIds": {
            "description": "A list of application IDs to be included.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "UriTargeting": {
        "description": "Represents a list of targeted and excluded URLs (for example, google.com). For Private Auction Deals, URLs are either included or excluded. For Programmatic Guaranteed and Preferred Deals, this doesn't apply.",
        "properties": {
          "excludedUris": {
            "description": "A list of URLs to be excluded.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "targetedUris": {
            "description": "A list of URLs to be included.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "TechnologyTargeting": {
        "description": "Represents targeting about various types of technology.",
        "properties": {
          "deviceCapabilityTargeting": {
            "$ref": "#/$defs/CriteriaTargeting"
          },
          "deviceCategoryTargeting": {
            "$ref": "#/$defs/CriteriaTargeting"
          },
          "operatingSystemTargeting": {
            "$ref": "#/$defs/OperatingSystemTargeting"
          }
        },
        "type": "object"
      },
      "OperatingSystemTargeting": {
        "description": "Represents targeting information for operating systems.",
        "properties": {
          "operatingSystemCriteria": {
            "$ref": "#/$defs/CriteriaTargeting"
          },
          "operatingSystemVersionCriteria": {
            "$ref": "#/$defs/CriteriaTargeting"
          }
        },
        "type": "object"
      },
      "VideoTargeting": {
        "description": "Represents targeting information about video.",
        "properties": {
          "excludedPositionTypes": {
            "description": "A list of video positions to be excluded. When this field is populated, the targeted_position_types field must be empty.",
            "items": {
              "enum": [
                "POSITION_TYPE_UNSPECIFIED",
                "PREROLL",
                "MIDROLL",
                "POSTROLL"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "targetedPositionTypes": {
            "description": "A list of video positions to be included. When this field is populated, the excluded_position_types field must be empty.",
            "items": {
              "enum": [
                "POSITION_TYPE_UNSPECIFIED",
                "PREROLL",
                "MIDROLL",
                "POSTROLL"
              ],
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PATCH",
    "url": {
      "$uri": "https://authorizedbuyersmarketplace.googleapis.com//v1/{name}{?updateMask,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A deal represents a segment of inventory for displaying ads that contains the terms and targeting information that is used for serving as well as the deal stats and status. Note: A proposal may contain multiple deals.",
        "**Key properties:**",
        {
          "$ul": [
            "**billedBuyer**: Output only. When the client field is populated, this field refers to the buyer who creates and manages the client buyer and gets billed on behalf of the client buyer; when the buyer field is populated, this field is the same value as buyer. Format : `buyers/{buyerAccountId}`",
            "**buyer**: Output only. Refers to a buyer in The Realtime-bidding API. Format: `buyers/{buyerAccountId}`",
            "**client**: Output only. Refers to a Client. Format: `buyers/{buyerAccountId}/clients/{clientAccountid}`",
            "**createTime**: Output only. The time of the deal creation.",
            [
              "**creativeRequirements**: Message captures data about the creatives in the deal.",
              {
                "$ul": [
                  "**creativeFormat**: Output only. The format of the creative, only applicable for programmatic guaranteed and preferred deals.",
                  "**creativePreApprovalPolicy**: Output only. Specifies the creative pre-approval policy.",
                  "**creativeSafeFrameCompatibility**: Output only. Specifies whether the creative is safeFrame compatible.",
                  "**maxAdDurationMs**: Output only. The max duration of the video creative in milliseconds. only applicable for deals with video creatives.",
                  "**programmaticCreativeSource**: Output only. Specifies the creative source for programmatic deals. PUBLISHER means creative is provided by seller and ADVERTISER means creative is provided by the buyer.",
                  "**skippableAdType**: Output only. Skippable video ads allow viewers to skip ads after 5 seconds. Only applicable for deals with video creatives."
                ]
              }
            ],
            "**dealType**: Output only. Type of deal.",
            [
              "**deliveryControl**: Message contains details about how the deal will be paced.",
              {
                "$ul": [
                  "**companionDeliveryType**: Output only. Specifies roadblocking in a main companion lineitem.",
                  "**creativeRotationType**: Output only. Specifies strategy to use for selecting a creative when multiple creatives of the same size are available.",
                  "**deliveryRateType**: Output only. Specifies how the impression delivery will be paced.",
                  "**frequencyCap**: Output only. Specifies any frequency caps. Cannot be filtered within ListDealsRequest.",
                  "**roadblockingType**: Output only. Specifies the roadblocking type in display creatives."
                ]
              }
            ],
            "**description**: Output only. Free text description for the deal terms.",
            "**displayName**: Output only. The name of the deal. Maximum length of 255 unicode characters is allowed. Control characters are not allowed. Buyers cannot update this field. Note: Not to be confused with name, which is a unique identifier of the deal.",
            [
              "**estimatedGrossSpend**: Represents an amount of money with its currency type.",
              {
                "$ul": [
                  "**currencyCode**: The three-letter currency code defined in ISO 4217.",
                  "**nanos**: Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.",
                  "**units**: The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar."
                ]
              }
            ],
            "**flightEndTime**: Proposed flight end time of the deal. This will generally be stored in a granularity of a second. A value is not necessary for Private Auction deals.",
            "**flightStartTime**: Proposed flight start time of the deal. This will generally be stored in the granularity of one second since deal serving starts at seconds boundary. Any time specified with more granularity (for example, in milliseconds) will be truncated towards the start of time in seconds.",
            "**name**: Immutable. The unique identifier of the deal. Auto-generated by the server when a deal is created. Format: buyers/{accountId}/proposals/{proposalId}/deals/{dealId}",
            [
              "**preferredDealTerms**: Pricing terms for Preferred Deals.",
              {
                "$ul": [
                  [
                    "**fixedPrice**: Represents a price and a pricing type for a deal.",
                    {
                      "$ul": [
                        [
                          "**amount**: Represents an amount of money with its currency type.",
                          {
                            "$ul": [
                              "**currencyCode**: The three-letter currency code defined in ISO 4217.",
                              "**nanos**: Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.",
                              "**units**: The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar."
                            ]
                          }
                        ],
                        "**type**: The pricing type for the deal."
                      ]
                    }
                  ]
                ]
              }
            ],
            [
              "**privateAuctionTerms**: Pricing terms for Private Auctions.",
              {
                "$ul": [
                  [
                    "**floorPrice**: Represents a price and a pricing type for a deal.",
                    {
                      "$ul": [
                        [
                          "**amount**: Represents an amount of money with its currency type.",
                          {
                            "$ul": [
                              "**currencyCode**: The three-letter currency code defined in ISO 4217.",
                              "**nanos**: Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.",
                              "**units**: The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar."
                            ]
                          }
                        ],
                        "**type**: The pricing type for the deal."
                      ]
                    }
                  ],
                  "**openAuctionAllowed**: Output only. True if open auction buyers are allowed to compete with invited buyers in this private auction."
                ]
              }
            ],
            [
              "**programmaticGuaranteedTerms**: Pricing terms for Programmatic Guaranteed Deals.",
              {
                "$ul": [
                  [
                    "**fixedPrice**: Represents a price and a pricing type for a deal.",
                    {
                      "$ul": [
                        [
                          "**amount**: Represents an amount of money with its currency type.",
                          {
                            "$ul": [
                              "**currencyCode**: The three-letter currency code defined in ISO 4217.",
                              "**nanos**: Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.",
                              "**units**: The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar."
                            ]
                          }
                        ],
                        "**type**: The pricing type for the deal."
                      ]
                    }
                  ],
                  "**guaranteedLooks**: Count of guaranteed looks. For CPD deals, buyer changes to guaranteed_looks will be ignored.",
                  "**impressionCap**: The lifetime impression cap for CPM Sponsorship deals. Deal will stop serving when cap is reached.",
                  "**minimumDailyLooks**: Daily minimum looks for CPD deal types. For CPD deals, buyer should negotiate on this field instead of guaranteed_looks.",
                  "**percentShareOfVoice**: For sponsorship deals, this is the percentage of the seller's eligible impressions that the deal will serve until the cap is reached. Valid value is within range 0~100.",
                  "**reservationType**: The reservation type for a Programmatic Guaranteed deal. This indicates whether the number of impressions is fixed, or a percent of available impressions. If not specified, the default reservation type is STANDARD."
                ]
              }
            ],
            "**proposalRevision**: Output only. The revision number for the proposal and is the same value as proposal.proposal_revision. Each update to deal causes the proposal revision number to auto-increment. The buyer keeps track of the last revision number they know of and pass it in when making an update. If the head revision number on the server has since incremented, then an ABORTED error is returned during the update operation to let the buyer know that a subsequent update was made.",
            "**publisherProfile**: Immutable. Reference to the seller on the deal. Format: `buyers/{buyerAccountId}/publisherProfiles/{publisherProfileId}`",
            [
              "**sellerTimeZone**: Represents a time zone from the [IANA Time Zone Database](https://www.iana.org/time-zones).",
              {
                "$ul": [
                  "**id**: IANA Time Zone Database time zone, e.g. \"America/New_York\".",
                  "**version**: Optional. IANA Time Zone Database version number, e.g. \"2019a\"."
                ]
              }
            ],
            [
              "**targeting**: Targeting represents different criteria that can be used to target inventory. For example, they can choose to target inventory only if the user is in the US. Multiple types of targeting are always applied as a logical AND, unless noted otherwise.",
              {
                "$ul": [
                  [
                    "**daypartTargeting**: Represents Daypart targeting.",
                    {
                      "$ul": [
                        "**dayParts**: The targeted weekdays and times",
                        "**timeZoneType**: The time zone type of the day parts"
                      ]
                    }
                  ],
                  [
                    "**geoTargeting**: Generic targeting used for targeting dimensions that contains a list of included and excluded numeric IDs. This cannot be filtered using list filter syntax.",
                    {
                      "$ul": [
                        "**excludedCriteriaIds**: A list of numeric IDs to be excluded.",
                        "**targetedCriteriaIds**: A list of numeric IDs to be included."
                      ]
                    }
                  ],
                  [
                    "**inventorySizeTargeting**: Represents the size of an ad unit that can be targeted on a bid request.",
                    {
                      "$ul": [
                        "**excludedInventorySizes**: A list of inventory sizes to be excluded.",
                        "**targetedInventorySizes**: A list of inventory sizes to be included."
                      ]
                    }
                  ],
                  [
                    "**inventoryTypeTargeting**: Targeting of the inventory types a bid request can originate from.",
                    {
                      "$ul": [
                        "**inventoryTypes**: The list of targeted inventory types for the bid request."
                      ]
                    }
                  ],
                  [
                    "**placementTargeting**: Represents targeting about where the ads can appear, for example, certain sites or mobile applications. Different placement targeting types will be logically OR'ed.",
                    {
                      "$ul": [
                        [
                          "**mobileApplicationTargeting**: Mobile application targeting settings.",
                          {
                            "$ul": [
                              [
                                "**firstPartyTargeting**: Represents a list of targeted and excluded mobile application IDs that publishers own. Android App ID, for example, com.google.android.apps.maps, can be found in Google Play Store URL. iOS App ID (which is a number) can be found at the end of iTunes store URL. First party mobile applications is either included or excluded.",
                                {
                                  "$ul": [
                                    "**excludedAppIds**: A list of application IDs to be excluded.",
                                    "**targetedAppIds**: A list of application IDs to be included."
                                  ]
                                }
                              ]
                            ]
                          }
                        ],
                        [
                          "**uriTargeting**: Represents a list of targeted and excluded URLs (for example, google.com). For Private Auction Deals, URLs are either included or excluded. For Programmatic Guaranteed and Preferred Deals, this doesn't apply.",
                          {
                            "$ul": [
                              "**excludedUris**: A list of URLs to be excluded.",
                              "**targetedUris**: A list of URLs to be included."
                            ]
                          }
                        ]
                      ]
                    }
                  ],
                  [
                    "**technologyTargeting**: Represents targeting about various types of technology.",
                    {
                      "$ul": [
                        [
                          "**deviceCapabilityTargeting**: Generic targeting used for targeting dimensions that contains a list of included and excluded numeric IDs. This cannot be filtered using list filter syntax.",
                          {
                            "$ul": [
                              "**excludedCriteriaIds**: A list of numeric IDs to be excluded.",
                              "**targetedCriteriaIds**: A list of numeric IDs to be included."
                            ]
                          }
                        ],
                        [
                          "**deviceCategoryTargeting**: Generic targeting used for targeting dimensions that contains a list of included and excluded numeric IDs. This cannot be filtered using list filter syntax.",
                          {
                            "$ul": [
                              "**excludedCriteriaIds**: A list of numeric IDs to be excluded.",
                              "**targetedCriteriaIds**: A list of numeric IDs to be included."
                            ]
                          }
                        ],
                        [
                          "**operatingSystemTargeting**: Represents targeting information for operating systems.",
                          {
                            "$ul": [
                              [
                                "**operatingSystemCriteria**: Generic targeting used for targeting dimensions that contains a list of included and excluded numeric IDs. This cannot be filtered using list filter syntax.",
                                {
                                  "$ul": [
                                    "**excludedCriteriaIds**: A list of numeric IDs to be excluded.",
                                    "**targetedCriteriaIds**: A list of numeric IDs to be included."
                                  ]
                                }
                              ],
                              [
                                "**operatingSystemVersionCriteria**: Generic targeting used for targeting dimensions that contains a list of included and excluded numeric IDs. This cannot be filtered using list filter syntax.",
                                {
                                  "$ul": [
                                    "**excludedCriteriaIds**: A list of numeric IDs to be excluded.",
                                    "**targetedCriteriaIds**: A list of numeric IDs to be included."
                                  ]
                                }
                              ]
                            ]
                          }
                        ]
                      ]
                    }
                  ],
                  [
                    "**userListTargeting**: Generic targeting used for targeting dimensions that contains a list of included and excluded numeric IDs. This cannot be filtered using list filter syntax.",
                    {
                      "$ul": [
                        "**excludedCriteriaIds**: A list of numeric IDs to be excluded.",
                        "**targetedCriteriaIds**: A list of numeric IDs to be included."
                      ]
                    }
                  ],
                  [
                    "**videoTargeting**: Represents targeting information about video.",
                    {
                      "$ul": [
                        "**excludedPositionTypes**: A list of video positions to be excluded. When this field is populated, the targeted_position_types field must be empty.",
                        "**targetedPositionTypes**: A list of video positions to be included. When this field is populated, the excluded_position_types field must be empty."
                      ]
                    }
                  ]
                ]
              }
            ],
            "**updateTime**: Output only. The time when the deal was last updated."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
