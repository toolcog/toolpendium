{
  "name": "authorizedbuyersmarketplace_buyers_proposals_cancelNegotiation",
  "description": "Cancels an ongoing negotiation on a proposal. This does not cancel or end serving for the deals if the proposal has been finalized. If the proposal has not been finalized before, calling this method will set the Proposal.state to `TERMINATED` and increment the Proposal.proposal_revision. If the proposal has been finalized before and is under renegotiation now, calling this method will reset the Proposal.state to `FINALIZED` and increment the Proposal.proposal_revision. This method does not support private auction proposals whose Proposal.deal_type is 'PRIVATE_AUCTION'.",
  "parameters": {
    "type": "object",
    "properties": {
      "proposal": {
        "type": "string",
        "description": "Name of the proposal. Format: `buyers/{accountId}/proposals/{proposalId}`"
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/CancelNegotiationRequest"
      }
    },
    "required": [
      "proposal"
    ],
    "$defs": {
      "CancelNegotiationRequest": {
        "description": "Request to cancel an ongoing negotiation.",
        "properties": {},
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://authorizedbuyersmarketplace.googleapis.com//v1/{proposal}:cancelNegotiation{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Represents a proposal in the Marketplace. A proposal is the unit of negotiation between a seller and a buyer.",
        "**Key properties:**",
        {
          "$ul": [
            "**billedBuyer**: Output only. When the client field is populated, this field refers to the buyer who creates and manages the client buyer and gets billed on behalf of the client buyer; when the buyer field is populated, this field is the same value as buyer. Format : `buyers/{buyerAccountId}`",
            "**buyer**: Output only. Refers to a buyer in The Realtime-bidding API. Format: `buyers/{buyerAccountId}`",
            "**buyerContacts**: Contact information for the buyer.",
            [
              "**buyerPrivateData**: Buyers are allowed to store certain types of private data in a proposal or deal.",
              {
                "$ul": [
                  "**referenceId**: A buyer specified reference ID. This can be queried in the list operations (max-length: 1024 unicode code units)."
                ]
              }
            ],
            "**client**: Output only. Refers to a Client. Format: `buyers/{buyerAccountId}/clients/{clientAccountid}`",
            "**dealType**: Output only. Type of deal the proposal contains.",
            "**displayName**: Output only. The descriptive name for the proposal. Maximum length of 255 unicode characters is allowed. Control characters are not allowed. Buyers cannot update this field. Note: Not to be confused with name, which is a unique identifier of the proposal.",
            "**isRenegotiating**: Output only. True if the proposal was previously finalized and is now being renegotiated.",
            "**lastUpdaterOrCommentorRole**: Output only. The role of the last user that either updated the proposal or left a comment.",
            "**name**: Immutable. The name of the proposal serving as a unique identifier. Format: buyers/{accountId}/proposals/{proposalId}",
            "**notes**: A list of notes from the buyer and the seller attached to this proposal.",
            "**originatorRole**: Output only. Indicates whether the buyer/seller created the proposal.",
            "**pausingConsented**: Whether pausing is allowed for the proposal. This is a negotiable term between buyers and publishers.",
            "**proposalRevision**: Output only. The revision number for the proposal. Each update to the proposal or deal causes the proposal revision number to auto-increment. The buyer keeps track of the last revision number they know of and pass it in when making an update. If the head revision number on the server has since incremented, then an ABORTED error is returned during the update operation to let the buyer know that a subsequent update was made.",
            "**publisherProfile**: Immutable. Reference to the seller on the proposal. Format: `buyers/{buyerAccountId}/publisherProfiles/{publisherProfileId}` Note: This field may be set only when creating the resource. Modifying this field while updating the resource will result in an error.",
            "**sellerContacts**: Output only. Contact information for the seller.",
            "**state**: Output only. Indicates the state of the proposal.",
            "**termsAndConditions**: Output only. The terms and conditions associated with this proposal. Accepting a proposal implies acceptance of this field. This is created by the seller, the buyer can only view it.",
            "**updateTime**: Output only. The time when the proposal was last revised."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
