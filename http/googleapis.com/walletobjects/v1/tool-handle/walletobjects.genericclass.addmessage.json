{
  "name": "walletobjects_genericclass_addmessage",
  "description": "Adds a message to the generic class referenced by the given class ID.",
  "parameters": {
    "type": "object",
    "properties": {
      "resourceId": {
        "type": "string",
        "description": "The unique identifier for a class. This ID must be unique across all classes from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/AddMessageRequest"
      }
    },
    "required": [
      "resourceId"
    ],
    "$defs": {
      "AddMessageRequest": {
        "description": "Resource used when the AddMessage endpoints are called.",
        "properties": {
          "message": {
            "$ref": "#/$defs/Message"
          }
        },
        "type": "object"
      },
      "Message": {
        "description": "A message that will be displayed with a Valuable",
        "properties": {
          "body": {
            "description": "The message body.",
            "type": "string"
          },
          "displayInterval": {
            "$ref": "#/$defs/TimeInterval"
          },
          "header": {
            "description": "The message header.",
            "type": "string"
          },
          "id": {
            "description": "The ID associated with a message. This field is here to enable ease of management of messages. Notice ID values could possibly duplicate across multiple messages in the same class/instance, and care must be taken to select a reasonable ID for each message.",
            "type": "string"
          },
          "kind": {
            "deprecated": true,
            "description": "Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#walletObjectMessage\"`.",
            "type": "string"
          },
          "localizedBody": {
            "$ref": "#/$defs/LocalizedString"
          },
          "localizedHeader": {
            "$ref": "#/$defs/LocalizedString"
          },
          "messageType": {
            "description": "The message type.",
            "enum": [
              "MESSAGE_TYPE_UNSPECIFIED",
              "TEXT",
              "text",
              "EXPIRATION_NOTIFICATION",
              "expirationNotification"
            ],
            "type": "string",
            "x-enumDeprecated": [
              false,
              false,
              true,
              false,
              true
            ]
          }
        },
        "type": "object"
      },
      "TimeInterval": {
        "properties": {
          "end": {
            "$ref": "#/$defs/DateTime"
          },
          "kind": {
            "deprecated": true,
            "description": "Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#timeInterval\"`.",
            "type": "string"
          },
          "start": {
            "$ref": "#/$defs/DateTime"
          }
        },
        "type": "object"
      },
      "DateTime": {
        "properties": {
          "date": {
            "description": "An ISO 8601 extended format date/time. Offset may or may not be required (refer to the parent field's documentation). Time may be specified up to nanosecond precision. Offsets may be specified with seconds precision (even though offset seconds is not part of ISO 8601). For example: `1985-04-12T23:20:50.52Z` would be 20 minutes and 50.52 seconds after the 23rd hour of April 12th, 1985 in UTC. `1985-04-12T19:20:50.52-04:00` would be 20 minutes and 50.52 seconds after the 19th hour of April 12th, 1985, 4 hours before UTC (same instant in time as the above example). If the date/time is intended for a physical location in New York, this would be the equivalent of Eastern Daylight Time (EDT). Remember that offset varies in regions that observe Daylight Saving Time (or Summer Time), depending on the time of the year. `1985-04-12T19:20:50.52` would be 20 minutes and 50.52 seconds after the 19th hour of April 12th, 1985 with no offset information. Providing an offset makes this an absolute instant in time around the world. The date/time will be adjusted based on the user's time zone. For example, a time of `2018-06-19T18:30:00-04:00` will be 18:30:00 for a user in New York and 15:30:00 for a user in Los Angeles. Omitting the offset makes this a local date/time, representing several instants in time around the world. The date/time will always be in the user's current time zone. For example, a time of `2018-06-19T18:30:00` will be 18:30:00 for a user in New York and also 18:30:00 for a user in Los Angeles. This is useful when the same local date/time should apply to many physical locations across several time zones.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "LocalizedString": {
        "properties": {
          "defaultValue": {
            "$ref": "#/$defs/TranslatedString"
          },
          "kind": {
            "deprecated": true,
            "description": "Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#localizedString\"`.",
            "type": "string"
          },
          "translatedValues": {
            "description": "Contains the translations for the string.",
            "items": {
              "$ref": "#/$defs/TranslatedString"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "TranslatedString": {
        "properties": {
          "kind": {
            "deprecated": true,
            "description": "Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#translatedString\"`.",
            "type": "string"
          },
          "language": {
            "description": "Represents the BCP 47 language tag. Example values are \"en-US\", \"en-GB\", \"de\", or \"de-AT\".",
            "type": "string"
          },
          "value": {
            "description": "The UTF-8 encoded translated string.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://walletobjects.googleapis.com//walletobjects/v1/genericClass/{resourceId}/addMessage{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Response to adding a new issuer message to the class. This contains the entire updated GenericClass.",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**resource**: Generic Class",
              {
                "$ul": [
                  [
                    "**callbackOptions**",
                    {
                      "$ul": [
                        "**updateRequestUrl**: URL for the merchant endpoint that would be called to request updates. The URL should be hosted on HTTPS and robots.txt should allow the URL path to be accessible by UserAgent:Google-Valuables. Deprecated.",
                        "**url**: The HTTPS url configured by the merchant. The URL should be hosted on HTTPS and robots.txt should allow the URL path to be accessible by UserAgent:Google-Valuables."
                      ]
                    }
                  ],
                  [
                    "**classTemplateInfo**",
                    {
                      "$ul": [
                        [
                          "**cardBarcodeSectionDetails**",
                          {
                            "$ul": [
                              [
                                "**firstBottomDetail**",
                                {
                                  "$ul": [
                                    [
                                      "**fieldSelector**: Custom field selector to use with field overrides.",
                                      {
                                        "$ul": [
                                          "**fields**: If more than one reference is supplied, then the first one that references a non-empty field will be displayed."
                                        ]
                                      }
                                    ]
                                  ]
                                }
                              ],
                              [
                                "**firstTopDetail**",
                                {
                                  "$ul": [
                                    [
                                      "**fieldSelector**: Custom field selector to use with field overrides.",
                                      {
                                        "$ul": [
                                          "**fields**: If more than one reference is supplied, then the first one that references a non-empty field will be displayed."
                                        ]
                                      }
                                    ]
                                  ]
                                }
                              ],
                              [
                                "**secondTopDetail**",
                                {
                                  "$ul": [
                                    [
                                      "**fieldSelector**: Custom field selector to use with field overrides.",
                                      {
                                        "$ul": [
                                          "**fields**: If more than one reference is supplied, then the first one that references a non-empty field will be displayed."
                                        ]
                                      }
                                    ]
                                  ]
                                }
                              ]
                            ]
                          }
                        ],
                        [
                          "**cardTemplateOverride**",
                          {
                            "$ul": [
                              "**cardRowTemplateInfos**: Template information for rows in the card view. At most three rows are allowed to be specified."
                            ]
                          }
                        ],
                        [
                          "**detailsTemplateOverride**",
                          {
                            "$ul": [
                              "**detailsItemInfos**: Information for the \"nth\" item displayed in the details list."
                            ]
                          }
                        ],
                        [
                          "**listTemplateOverride**",
                          {
                            "$ul": [
                              [
                                "**firstRowOption**",
                                {
                                  "$ul": [
                                    [
                                      "**fieldOption**: Custom field selector to use with field overrides.",
                                      {
                                        "$ul": [
                                          "**fields**: If more than one reference is supplied, then the first one that references a non-empty field will be displayed."
                                        ]
                                      }
                                    ],
                                    "**transitOption**"
                                  ]
                                }
                              ],
                              [
                                "**secondRowOption**: Custom field selector to use with field overrides.",
                                {
                                  "$ul": [
                                    "**fields**: If more than one reference is supplied, then the first one that references a non-empty field will be displayed."
                                  ]
                                }
                              ],
                              [
                                "**thirdRowOption**: Custom field selector to use with field overrides.",
                                {
                                  "$ul": [
                                    "**fields**: If more than one reference is supplied, then the first one that references a non-empty field will be displayed."
                                  ]
                                }
                              ]
                            ]
                          }
                        ]
                      ]
                    }
                  ],
                  "**enableSmartTap**: Available only to Smart Tap enabled partners. Contact support for additional guidance.",
                  "**id**: Required. The unique identifier for the class. This ID must be unique across all from an issuer. This value needs to follow the format `issuerID.identifier` where `issuerID` is issued by Google and `identifier` is chosen by you. The unique identifier can only include alphanumeric characters, `.`, `_`, or `-`.",
                  "**imageModulesData**: Image module data. If `imageModulesData` is also defined on the object, both will be displayed. Only one of the image from class and one from object level will be rendered when both set.",
                  [
                    "**linksModuleData**",
                    {
                      "$ul": [
                        "**uris**: The list of URIs."
                      ]
                    }
                  ],
                  "**messages**: An array of messages displayed in the app. All users of this object will receive its associated messages. The maximum number of these fields is 10.",
                  "**multipleDevicesAndHoldersAllowedStatus**: Identifies whether multiple users and devices will save the same object referencing this class.",
                  "**redemptionIssuers**: Identifies which redemption issuers can redeem the pass over Smart Tap. Redemption issuers are identified by their issuer ID. Redemption issuers must have at least one Smart Tap key configured. The `enableSmartTap` and object level `smartTapRedemptionLevel` fields must also be set up correctly in order for a pass to support Smart Tap.",
                  [
                    "**securityAnimation**",
                    {
                      "$ul": [
                        "**animationType**: Type of animation."
                      ]
                    }
                  ],
                  "**textModulesData**: Text module data. If `textModulesData` is also defined on the object, both will be displayed. The maximum number of these fields displayed is 10 from class and 10 from object.",
                  "**viewUnlockRequirement**: View Unlock Requirement options for the generic pass."
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
