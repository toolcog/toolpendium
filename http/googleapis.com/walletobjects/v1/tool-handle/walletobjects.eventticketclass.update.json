{
  "name": "walletobjects_eventticketclass_update",
  "description": "Updates the event ticket class referenced by the given class ID.",
  "parameters": {
    "type": "object",
    "properties": {
      "resourceId": {
        "type": "string",
        "description": "The unique identifier for a class. This ID must be unique across all classes from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/EventTicketClass"
      }
    },
    "required": [
      "resourceId"
    ],
    "$defs": {
      "EventTicketClass": {
        "properties": {
          "allowMultipleUsersPerObject": {
            "deprecated": true,
            "description": "Deprecated. Use `multipleDevicesAndHoldersAllowedStatus` instead.",
            "type": "boolean"
          },
          "callbackOptions": {
            "$ref": "#/$defs/CallbackOptions"
          },
          "classTemplateInfo": {
            "$ref": "#/$defs/ClassTemplateInfo"
          },
          "confirmationCodeLabel": {
            "description": "The label to use for the confirmation code value (`eventTicketObject.reservationInfo.confirmationCode`) on the card detail view. Each available option maps to a set of localized strings, so that translations are shown to the user based on their locale. Both `confirmationCodeLabel` and `customConfirmationCodeLabel` may not be set. If neither is set, the label will default to \"Confirmation Code\", localized. If the confirmation code field is unset, this label will not be used.",
            "enum": [
              "CONFIRMATION_CODE_LABEL_UNSPECIFIED",
              "CONFIRMATION_CODE",
              "confirmationCode",
              "CONFIRMATION_NUMBER",
              "confirmationNumber",
              "ORDER_NUMBER",
              "orderNumber",
              "RESERVATION_NUMBER",
              "reservationNumber"
            ],
            "type": "string",
            "x-enumDeprecated": [
              false,
              false,
              true,
              false,
              true,
              false,
              true,
              false,
              true
            ]
          },
          "countryCode": {
            "description": "Country code used to display the card's country (when the user is not in that country), as well as to display localized content when content is not available in the user's locale.",
            "type": "string"
          },
          "customConfirmationCodeLabel": {
            "$ref": "#/$defs/LocalizedString"
          },
          "customGateLabel": {
            "$ref": "#/$defs/LocalizedString"
          },
          "customRowLabel": {
            "$ref": "#/$defs/LocalizedString"
          },
          "customSeatLabel": {
            "$ref": "#/$defs/LocalizedString"
          },
          "customSectionLabel": {
            "$ref": "#/$defs/LocalizedString"
          },
          "dateTime": {
            "$ref": "#/$defs/EventDateTime"
          },
          "enableSmartTap": {
            "description": "Identifies whether this class supports Smart Tap. The `redemptionIssuers` and object level `smartTapRedemptionLevel` fields must also be set up correctly in order for a pass to support Smart Tap.",
            "type": "boolean"
          },
          "eventId": {
            "description": "The ID of the event. This ID should be unique for every event in an account. It is used to group tickets together if the user has saved multiple tickets for the same event. It can be at most 64 characters. If provided, the grouping will be stable. Be wary of unintentional collision to avoid grouping tickets that should not be grouped. If you use only one class per event, you can simply set this to the `classId` (with or without the issuer ID portion). If not provided, the platform will attempt to use other data to group tickets (potentially unstable).",
            "type": "string"
          },
          "eventName": {
            "$ref": "#/$defs/LocalizedString"
          },
          "finePrint": {
            "$ref": "#/$defs/LocalizedString"
          },
          "gateLabel": {
            "description": "The label to use for the gate value (`eventTicketObject.seatInfo.gate`) on the card detail view. Each available option maps to a set of localized strings, so that translations are shown to the user based on their locale. Both `gateLabel` and `customGateLabel` may not be set. If neither is set, the label will default to \"Gate\", localized. If the gate field is unset, this label will not be used.",
            "enum": [
              "GATE_LABEL_UNSPECIFIED",
              "GATE",
              "gate",
              "DOOR",
              "door",
              "ENTRANCE",
              "entrance"
            ],
            "type": "string",
            "x-enumDeprecated": [
              false,
              false,
              true,
              false,
              true,
              false,
              true
            ]
          },
          "heroImage": {
            "$ref": "#/$defs/Image"
          },
          "hexBackgroundColor": {
            "description": "The background color for the card. If not set the dominant color of the hero image is used, and if no hero image is set, the dominant color of the logo is used. The format is #rrggbb where rrggbb is a hex RGB triplet, such as `#ffcc00`. You can also use the shorthand version of the RGB triplet which is #rgb, such as `#fc0`.",
            "type": "string"
          },
          "homepageUri": {
            "$ref": "#/$defs/Uri"
          },
          "id": {
            "description": "Required. The unique identifier for a class. This ID must be unique across all classes from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'.",
            "type": "string"
          },
          "imageModulesData": {
            "description": "Image module data. The maximum number of these fields displayed is 1 from object level and 1 for class object level.",
            "items": {
              "$ref": "#/$defs/ImageModuleData"
            },
            "type": "array"
          },
          "infoModuleData": {
            "$ref": "#/$defs/InfoModuleData"
          },
          "issuerName": {
            "description": "Required. The issuer name. Recommended maximum length is 20 characters to ensure full string is displayed on smaller screens.",
            "type": "string"
          },
          "kind": {
            "deprecated": true,
            "description": "Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#eventTicketClass\"`.",
            "type": "string"
          },
          "linksModuleData": {
            "$ref": "#/$defs/LinksModuleData"
          },
          "localizedIssuerName": {
            "$ref": "#/$defs/LocalizedString"
          },
          "locations": {
            "description": "Note: This field is currently not supported to trigger geo notifications.",
            "items": {
              "$ref": "#/$defs/LatLongPoint"
            },
            "type": "array"
          },
          "logo": {
            "$ref": "#/$defs/Image"
          },
          "messages": {
            "description": "An array of messages displayed in the app. All users of this object will receive its associated messages. The maximum number of these fields is 10.",
            "items": {
              "$ref": "#/$defs/Message"
            },
            "type": "array"
          },
          "multipleDevicesAndHoldersAllowedStatus": {
            "description": "Identifies whether multiple users and devices will save the same object referencing this class.",
            "enum": [
              "STATUS_UNSPECIFIED",
              "MULTIPLE_HOLDERS",
              "ONE_USER_ALL_DEVICES",
              "ONE_USER_ONE_DEVICE",
              "multipleHolders",
              "oneUserAllDevices",
              "oneUserOneDevice"
            ],
            "type": "string",
            "x-enumDeprecated": [
              false,
              false,
              false,
              false,
              true,
              true,
              true
            ]
          },
          "redemptionIssuers": {
            "description": "Identifies which redemption issuers can redeem the pass over Smart Tap. Redemption issuers are identified by their issuer ID. Redemption issuers must have at least one Smart Tap key configured. The `enableSmartTap` and object level `smartTapRedemptionLevel` fields must also be set up correctly in order for a pass to support Smart Tap.",
            "items": {
              "format": "int64",
              "type": "string"
            },
            "type": "array"
          },
          "review": {
            "$ref": "#/$defs/Review"
          },
          "reviewStatus": {
            "description": "Required. The status of the class. This field can be set to `draft` or `underReview` using the insert, patch, or update API calls. Once the review state is changed from `draft` it may not be changed back to `draft`. You should keep this field to `draft` when the class is under development. A `draft` class cannot be used to create any object. You should set this field to `underReview` when you believe the class is ready for use. The platform will automatically set this field to `approved` and it can be immediately used to create or migrate objects. When updating an already `approved` class you should keep setting this field to `underReview`.",
            "enum": [
              "REVIEW_STATUS_UNSPECIFIED",
              "UNDER_REVIEW",
              "underReview",
              "APPROVED",
              "approved",
              "REJECTED",
              "rejected",
              "DRAFT",
              "draft"
            ],
            "type": "string",
            "x-enumDeprecated": [
              false,
              false,
              true,
              false,
              true,
              false,
              true,
              false,
              true
            ]
          },
          "rowLabel": {
            "description": "The label to use for the row value (`eventTicketObject.seatInfo.row`) on the card detail view. Each available option maps to a set of localized strings, so that translations are shown to the user based on their locale. Both `rowLabel` and `customRowLabel` may not be set. If neither is set, the label will default to \"Row\", localized. If the row field is unset, this label will not be used.",
            "enum": [
              "ROW_LABEL_UNSPECIFIED",
              "ROW",
              "row"
            ],
            "type": "string",
            "x-enumDeprecated": [
              false,
              false,
              true
            ]
          },
          "seatLabel": {
            "description": "The label to use for the seat value (`eventTicketObject.seatInfo.seat`) on the card detail view. Each available option maps to a set of localized strings, so that translations are shown to the user based on their locale. Both `seatLabel` and `customSeatLabel` may not be set. If neither is set, the label will default to \"Seat\", localized. If the seat field is unset, this label will not be used.",
            "enum": [
              "SEAT_LABEL_UNSPECIFIED",
              "SEAT",
              "seat"
            ],
            "type": "string",
            "x-enumDeprecated": [
              false,
              false,
              true
            ]
          },
          "sectionLabel": {
            "description": "The label to use for the section value (`eventTicketObject.seatInfo.section`) on the card detail view. Each available option maps to a set of localized strings, so that translations are shown to the user based on their locale. Both `sectionLabel` and `customSectionLabel` may not be set. If neither is set, the label will default to \"Section\", localized. If the section field is unset, this label will not be used.",
            "enum": [
              "SECTION_LABEL_UNSPECIFIED",
              "SECTION",
              "section",
              "THEATER",
              "theater"
            ],
            "type": "string",
            "x-enumDeprecated": [
              false,
              false,
              true,
              false,
              true
            ]
          },
          "securityAnimation": {
            "$ref": "#/$defs/SecurityAnimation"
          },
          "textModulesData": {
            "description": "Text module data. If text module data is also defined on the class, both will be displayed. The maximum number of these fields displayed is 10 from the object and 10 from the class.",
            "items": {
              "$ref": "#/$defs/TextModuleData"
            },
            "type": "array"
          },
          "venue": {
            "$ref": "#/$defs/EventVenue"
          },
          "version": {
            "deprecated": true,
            "description": "Deprecated",
            "format": "int64",
            "type": "string"
          },
          "viewUnlockRequirement": {
            "description": "View Unlock Requirement options for the event ticket.",
            "enum": [
              "VIEW_UNLOCK_REQUIREMENT_UNSPECIFIED",
              "UNLOCK_NOT_REQUIRED",
              "UNLOCK_REQUIRED_TO_VIEW"
            ],
            "type": "string"
          },
          "wideLogo": {
            "$ref": "#/$defs/Image"
          },
          "wordMark": {
            "$ref": "#/$defs/Image"
          }
        },
        "type": "object"
      },
      "CallbackOptions": {
        "properties": {
          "updateRequestUrl": {
            "deprecated": true,
            "description": "URL for the merchant endpoint that would be called to request updates. The URL should be hosted on HTTPS and robots.txt should allow the URL path to be accessible by UserAgent:Google-Valuables. Deprecated.",
            "type": "string"
          },
          "url": {
            "description": "The HTTPS url configured by the merchant. The URL should be hosted on HTTPS and robots.txt should allow the URL path to be accessible by UserAgent:Google-Valuables.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ClassTemplateInfo": {
        "properties": {
          "cardBarcodeSectionDetails": {
            "$ref": "#/$defs/CardBarcodeSectionDetails"
          },
          "cardTemplateOverride": {
            "$ref": "#/$defs/CardTemplateOverride"
          },
          "detailsTemplateOverride": {
            "$ref": "#/$defs/DetailsTemplateOverride"
          },
          "listTemplateOverride": {
            "$ref": "#/$defs/ListTemplateOverride"
          }
        },
        "type": "object"
      },
      "CardBarcodeSectionDetails": {
        "properties": {
          "firstBottomDetail": {
            "$ref": "#/$defs/BarcodeSectionDetail"
          },
          "firstTopDetail": {
            "$ref": "#/$defs/BarcodeSectionDetail"
          },
          "secondTopDetail": {
            "$ref": "#/$defs/BarcodeSectionDetail"
          }
        },
        "type": "object"
      },
      "BarcodeSectionDetail": {
        "properties": {
          "fieldSelector": {
            "$ref": "#/$defs/FieldSelector"
          }
        },
        "type": "object"
      },
      "FieldSelector": {
        "description": "Custom field selector to use with field overrides.",
        "properties": {
          "fields": {
            "description": "If more than one reference is supplied, then the first one that references a non-empty field will be displayed.",
            "items": {
              "$ref": "#/$defs/FieldReference"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "FieldReference": {
        "description": "Reference definition to use with field overrides.",
        "properties": {
          "dateFormat": {
            "description": "Only valid if the `fieldPath` references a date field. Chooses how the date field will be formatted and displayed in the UI.",
            "enum": [
              "DATE_FORMAT_UNSPECIFIED",
              "DATE_TIME",
              "dateTime",
              "DATE_ONLY",
              "dateOnly",
              "TIME_ONLY",
              "timeOnly",
              "DATE_TIME_YEAR",
              "dateTimeYear",
              "DATE_YEAR",
              "dateYear",
              "YEAR_MONTH",
              "YEAR_MONTH_DAY"
            ],
            "type": "string",
            "x-enumDeprecated": [
              false,
              false,
              true,
              false,
              true,
              false,
              true,
              false,
              true,
              false,
              true,
              false,
              false
            ]
          },
          "fieldPath": {
            "description": "Path to the field being referenced, prefixed with \"object\" or \"class\" and separated with dots. For example, it may be the string \"object.purchaseDetails.purchasePrice\".",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CardTemplateOverride": {
        "properties": {
          "cardRowTemplateInfos": {
            "description": "Template information for rows in the card view. At most three rows are allowed to be specified.",
            "items": {
              "$ref": "#/$defs/CardRowTemplateInfo"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "CardRowTemplateInfo": {
        "properties": {
          "oneItem": {
            "$ref": "#/$defs/CardRowOneItem"
          },
          "threeItems": {
            "$ref": "#/$defs/CardRowThreeItems"
          },
          "twoItems": {
            "$ref": "#/$defs/CardRowTwoItems"
          }
        },
        "type": "object"
      },
      "CardRowOneItem": {
        "properties": {
          "item": {
            "$ref": "#/$defs/TemplateItem"
          }
        },
        "type": "object"
      },
      "TemplateItem": {
        "properties": {
          "firstValue": {
            "$ref": "#/$defs/FieldSelector"
          },
          "predefinedItem": {
            "description": "A predefined item to display. Only one of `firstValue` or `predefinedItem` may be set.",
            "enum": [
              "PREDEFINED_ITEM_UNSPECIFIED",
              "FREQUENT_FLYER_PROGRAM_NAME_AND_NUMBER",
              "frequentFlyerProgramNameAndNumber",
              "FLIGHT_NUMBER_AND_OPERATING_FLIGHT_NUMBER",
              "flightNumberAndOperatingFlightNumber"
            ],
            "type": "string",
            "x-enumDeprecated": [
              false,
              false,
              true,
              false,
              true
            ]
          },
          "secondValue": {
            "$ref": "#/$defs/FieldSelector"
          }
        },
        "type": "object"
      },
      "CardRowThreeItems": {
        "properties": {
          "endItem": {
            "$ref": "#/$defs/TemplateItem"
          },
          "middleItem": {
            "$ref": "#/$defs/TemplateItem"
          },
          "startItem": {
            "$ref": "#/$defs/TemplateItem"
          }
        },
        "type": "object"
      },
      "CardRowTwoItems": {
        "properties": {
          "endItem": {
            "$ref": "#/$defs/TemplateItem"
          },
          "startItem": {
            "$ref": "#/$defs/TemplateItem"
          }
        },
        "type": "object"
      },
      "DetailsTemplateOverride": {
        "properties": {
          "detailsItemInfos": {
            "description": "Information for the \"nth\" item displayed in the details list.",
            "items": {
              "$ref": "#/$defs/DetailsItemInfo"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DetailsItemInfo": {
        "properties": {
          "item": {
            "$ref": "#/$defs/TemplateItem"
          }
        },
        "type": "object"
      },
      "ListTemplateOverride": {
        "properties": {
          "firstRowOption": {
            "$ref": "#/$defs/FirstRowOption"
          },
          "secondRowOption": {
            "$ref": "#/$defs/FieldSelector"
          },
          "thirdRowOption": {
            "$ref": "#/$defs/FieldSelector"
          }
        },
        "type": "object"
      },
      "FirstRowOption": {
        "properties": {
          "fieldOption": {
            "$ref": "#/$defs/FieldSelector"
          },
          "transitOption": {
            "enum": [
              "TRANSIT_OPTION_UNSPECIFIED",
              "ORIGIN_AND_DESTINATION_NAMES",
              "originAndDestinationNames",
              "ORIGIN_AND_DESTINATION_CODES",
              "originAndDestinationCodes",
              "ORIGIN_NAME",
              "originName"
            ],
            "type": "string",
            "x-enumDeprecated": [
              false,
              false,
              true,
              false,
              true,
              false,
              true
            ]
          }
        },
        "type": "object"
      },
      "LocalizedString": {
        "properties": {
          "defaultValue": {
            "$ref": "#/$defs/TranslatedString"
          },
          "kind": {
            "deprecated": true,
            "description": "Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#localizedString\"`.",
            "type": "string"
          },
          "translatedValues": {
            "description": "Contains the translations for the string.",
            "items": {
              "$ref": "#/$defs/TranslatedString"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "TranslatedString": {
        "properties": {
          "kind": {
            "deprecated": true,
            "description": "Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#translatedString\"`.",
            "type": "string"
          },
          "language": {
            "description": "Represents the BCP 47 language tag. Example values are \"en-US\", \"en-GB\", \"de\", or \"de-AT\".",
            "type": "string"
          },
          "value": {
            "description": "The UTF-8 encoded translated string.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EventDateTime": {
        "properties": {
          "customDoorsOpenLabel": {
            "$ref": "#/$defs/LocalizedString"
          },
          "doorsOpen": {
            "description": "The date/time when the doors open at the venue. This is an ISO 8601 extended format date/time, with or without an offset. Time may be specified up to nanosecond precision. Offsets may be specified with seconds precision (even though offset seconds is not part of ISO 8601). For example: `1985-04-12T23:20:50.52Z` would be 20 minutes and 50.52 seconds after the 23rd hour of April 12th, 1985 in UTC. `1985-04-12T19:20:50.52-04:00` would be 20 minutes and 50.52 seconds after the 19th hour of April 12th, 1985, 4 hours before UTC (same instant in time as the above example). If the event were in New York, this would be the equivalent of Eastern Daylight Time (EDT). Remember that offset varies in regions that observe Daylight Saving Time (or Summer Time), depending on the time of the year. `1985-04-12T19:20:50.52` would be 20 minutes and 50.52 seconds after the 19th hour of April 12th, 1985 with no offset information. The portion of the date/time without the offset is considered the \"local date/time\". This should be the local date/time at the venue. For example, if the event occurs at the 20th hour of June 5th, 2018 at the venue, the local date/time portion should be `2018-06-05T20:00:00`. If the local date/time at the venue is 4 hours before UTC, an offset of `-04:00` may be appended. Without offset information, some rich features may not be available.",
            "type": "string"
          },
          "doorsOpenLabel": {
            "description": "The label to use for the doors open value (`doorsOpen`) on the card detail view. Each available option maps to a set of localized strings, so that translations are shown to the user based on their locale. Both `doorsOpenLabel` and `customDoorsOpenLabel` may not be set. If neither is set, the label will default to \"Doors Open\", localized. If the doors open field is unset, this label will not be used.",
            "enum": [
              "DOORS_OPEN_LABEL_UNSPECIFIED",
              "DOORS_OPEN",
              "doorsOpen",
              "GATES_OPEN",
              "gatesOpen"
            ],
            "type": "string",
            "x-enumDeprecated": [
              false,
              false,
              true,
              false,
              true
            ]
          },
          "end": {
            "description": "The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day. This is an ISO 8601 extended format date/time, with or without an offset. Time may be specified up to nanosecond precision. Offsets may be specified with seconds precision (even though offset seconds is not part of ISO 8601). For example: `1985-04-12T23:20:50.52Z` would be 20 minutes and 50.52 seconds after the 23rd hour of April 12th, 1985 in UTC. `1985-04-12T19:20:50.52-04:00` would be 20 minutes and 50.52 seconds after the 19th hour of April 12th, 1985, 4 hours before UTC (same instant in time as the above example). If the event were in New York, this would be the equivalent of Eastern Daylight Time (EDT). Remember that offset varies in regions that observe Daylight Saving Time (or Summer Time), depending on the time of the year. `1985-04-12T19:20:50.52` would be 20 minutes and 50.52 seconds after the 19th hour of April 12th, 1985 with no offset information. The portion of the date/time without the offset is considered the \"local date/time\". This should be the local date/time at the venue. For example, if the event occurs at the 20th hour of June 5th, 2018 at the venue, the local date/time portion should be `2018-06-05T20:00:00`. If the local date/time at the venue is 4 hours before UTC, an offset of `-04:00` may be appended. Without offset information, some rich features may not be available.",
            "type": "string"
          },
          "kind": {
            "deprecated": true,
            "description": "Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#eventDateTime\"`.",
            "type": "string"
          },
          "start": {
            "description": "The date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. This is an ISO 8601 extended format date/time, with or without an offset. Time may be specified up to nanosecond precision. Offsets may be specified with seconds precision (even though offset seconds is not part of ISO 8601). For example: `1985-04-12T23:20:50.52Z` would be 20 minutes and 50.52 seconds after the 23rd hour of April 12th, 1985 in UTC. `1985-04-12T19:20:50.52-04:00` would be 20 minutes and 50.52 seconds after the 19th hour of April 12th, 1985, 4 hours before UTC (same instant in time as the above example). If the event were in New York, this would be the equivalent of Eastern Daylight Time (EDT). Remember that offset varies in regions that observe Daylight Saving Time (or Summer Time), depending on the time of the year. `1985-04-12T19:20:50.52` would be 20 minutes and 50.52 seconds after the 19th hour of April 12th, 1985 with no offset information. The portion of the date/time without the offset is considered the \"local date/time\". This should be the local date/time at the venue. For example, if the event occurs at the 20th hour of June 5th, 2018 at the venue, the local date/time portion should be `2018-06-05T20:00:00`. If the local date/time at the venue is 4 hours before UTC, an offset of `-04:00` may be appended. Without offset information, some rich features may not be available.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Image": {
        "description": "Wrapping type for Google hosted images. Next ID: 7",
        "properties": {
          "contentDescription": {
            "$ref": "#/$defs/LocalizedString"
          },
          "kind": {
            "deprecated": true,
            "description": "Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#image\"`.",
            "type": "string"
          },
          "sourceUri": {
            "$ref": "#/$defs/ImageUri"
          }
        },
        "type": "object"
      },
      "ImageUri": {
        "properties": {
          "description": {
            "deprecated": true,
            "description": "Additional information about the image, which is unused and retained only for backward compatibility.",
            "type": "string"
          },
          "localizedDescription": {
            "$ref": "#/$defs/LocalizedString"
          },
          "uri": {
            "description": "The location of the image. URIs must have a scheme.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Uri": {
        "properties": {
          "description": {
            "description": "The URI's title appearing in the app as text. Recommended maximum is 20 characters to ensure full string is displayed on smaller screens. Note that in some contexts this text is not used, such as when `description` is part of an image.",
            "type": "string"
          },
          "id": {
            "description": "The ID associated with a uri. This field is here to enable ease of management of uris.",
            "type": "string"
          },
          "kind": {
            "deprecated": true,
            "description": "Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#uri\"`.",
            "type": "string"
          },
          "localizedDescription": {
            "$ref": "#/$defs/LocalizedString"
          },
          "uri": {
            "description": "The location of a web page, image, or other resource. URIs in the `LinksModuleData` module can have different prefixes indicating the type of URI (a link to a web page, a link to a map, a telephone number, or an email address). URIs must have a scheme.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ImageModuleData": {
        "properties": {
          "id": {
            "description": "The ID associated with an image module. This field is here to enable ease of management of image modules.",
            "type": "string"
          },
          "mainImage": {
            "$ref": "#/$defs/Image"
          }
        },
        "type": "object"
      },
      "InfoModuleData": {
        "properties": {
          "labelValueRows": {
            "description": "A list of collections of labels and values. These will be displayed one after the other in a singular column.",
            "items": {
              "$ref": "#/$defs/LabelValueRow"
            },
            "type": "array"
          },
          "showLastUpdateTime": {
            "deprecated": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "LabelValueRow": {
        "properties": {
          "columns": {
            "description": "A list of labels and values. These will be displayed in a singular column, one after the other, not in multiple columns, despite the field name.",
            "items": {
              "$ref": "#/$defs/LabelValue"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "LabelValue": {
        "description": "A pair of text strings to be displayed in the details view. Note we no longer display LabelValue/LabelValueRow as a table, instead a list of items.",
        "properties": {
          "label": {
            "description": "The label for a specific row and column. Recommended maximum is 15 characters for a two-column layout and 30 characters for a one-column layout.",
            "type": "string"
          },
          "localizedLabel": {
            "$ref": "#/$defs/LocalizedString"
          },
          "localizedValue": {
            "$ref": "#/$defs/LocalizedString"
          },
          "value": {
            "description": "The value for a specific row and column. Recommended maximum is 15 characters for a two-column layout and 30 characters for a one-column layout.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "LinksModuleData": {
        "properties": {
          "uris": {
            "description": "The list of URIs.",
            "items": {
              "$ref": "#/$defs/Uri"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "LatLongPoint": {
        "properties": {
          "kind": {
            "deprecated": true,
            "description": "Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#latLongPoint\"`.",
            "type": "string"
          },
          "latitude": {
            "description": "The latitude specified as any value in the range of -90.0 through +90.0, both inclusive. Values outside these bounds will be rejected.",
            "format": "double",
            "type": "number"
          },
          "longitude": {
            "description": "The longitude specified in the range -180.0 through +180.0, both inclusive. Values outside these bounds will be rejected.",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "Message": {
        "description": "A message that will be displayed with a Valuable",
        "properties": {
          "body": {
            "description": "The message body.",
            "type": "string"
          },
          "displayInterval": {
            "$ref": "#/$defs/TimeInterval"
          },
          "header": {
            "description": "The message header.",
            "type": "string"
          },
          "id": {
            "description": "The ID associated with a message. This field is here to enable ease of management of messages. Notice ID values could possibly duplicate across multiple messages in the same class/instance, and care must be taken to select a reasonable ID for each message.",
            "type": "string"
          },
          "kind": {
            "deprecated": true,
            "description": "Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#walletObjectMessage\"`.",
            "type": "string"
          },
          "localizedBody": {
            "$ref": "#/$defs/LocalizedString"
          },
          "localizedHeader": {
            "$ref": "#/$defs/LocalizedString"
          },
          "messageType": {
            "description": "The message type.",
            "enum": [
              "MESSAGE_TYPE_UNSPECIFIED",
              "TEXT",
              "text",
              "EXPIRATION_NOTIFICATION",
              "expirationNotification"
            ],
            "type": "string",
            "x-enumDeprecated": [
              false,
              false,
              true,
              false,
              true
            ]
          }
        },
        "type": "object"
      },
      "TimeInterval": {
        "properties": {
          "end": {
            "$ref": "#/$defs/DateTime"
          },
          "kind": {
            "deprecated": true,
            "description": "Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#timeInterval\"`.",
            "type": "string"
          },
          "start": {
            "$ref": "#/$defs/DateTime"
          }
        },
        "type": "object"
      },
      "DateTime": {
        "properties": {
          "date": {
            "description": "An ISO 8601 extended format date/time. Offset may or may not be required (refer to the parent field's documentation). Time may be specified up to nanosecond precision. Offsets may be specified with seconds precision (even though offset seconds is not part of ISO 8601). For example: `1985-04-12T23:20:50.52Z` would be 20 minutes and 50.52 seconds after the 23rd hour of April 12th, 1985 in UTC. `1985-04-12T19:20:50.52-04:00` would be 20 minutes and 50.52 seconds after the 19th hour of April 12th, 1985, 4 hours before UTC (same instant in time as the above example). If the date/time is intended for a physical location in New York, this would be the equivalent of Eastern Daylight Time (EDT). Remember that offset varies in regions that observe Daylight Saving Time (or Summer Time), depending on the time of the year. `1985-04-12T19:20:50.52` would be 20 minutes and 50.52 seconds after the 19th hour of April 12th, 1985 with no offset information. Providing an offset makes this an absolute instant in time around the world. The date/time will be adjusted based on the user's time zone. For example, a time of `2018-06-19T18:30:00-04:00` will be 18:30:00 for a user in New York and 15:30:00 for a user in Los Angeles. Omitting the offset makes this a local date/time, representing several instants in time around the world. The date/time will always be in the user's current time zone. For example, a time of `2018-06-19T18:30:00` will be 18:30:00 for a user in New York and also 18:30:00 for a user in Los Angeles. This is useful when the same local date/time should apply to many physical locations across several time zones.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Review": {
        "properties": {
          "comments": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "SecurityAnimation": {
        "properties": {
          "animationType": {
            "description": "Type of animation.",
            "enum": [
              "ANIMATION_UNSPECIFIED",
              "FOIL_SHIMMER",
              "foilShimmer"
            ],
            "type": "string",
            "x-enumDeprecated": [
              false,
              false,
              true
            ]
          }
        },
        "type": "object"
      },
      "TextModuleData": {
        "description": "Data for Text module. All fields are optional. Header will be displayed if available, different types of bodies will be concatenated if they are defined.",
        "properties": {
          "body": {
            "description": "The body of the Text Module, which is defined as an uninterrupted string. Recommended maximum length is 500 characters to ensure full string is displayed on smaller screens.",
            "type": "string"
          },
          "header": {
            "description": "The header of the Text Module. Recommended maximum length is 35 characters to ensure full string is displayed on smaller screens.",
            "type": "string"
          },
          "id": {
            "description": "The ID associated with a text module. This field is here to enable ease of management of text modules.",
            "type": "string"
          },
          "localizedBody": {
            "$ref": "#/$defs/LocalizedString"
          },
          "localizedHeader": {
            "$ref": "#/$defs/LocalizedString"
          }
        },
        "type": "object"
      },
      "EventVenue": {
        "properties": {
          "address": {
            "$ref": "#/$defs/LocalizedString"
          },
          "kind": {
            "deprecated": true,
            "description": "Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#eventVenue\"`.",
            "type": "string"
          },
          "name": {
            "$ref": "#/$defs/LocalizedString"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "https://walletobjects.googleapis.com//walletobjects/v1/eventTicketClass/{resourceId}{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**allowMultipleUsersPerObject**: Deprecated. Use `multipleDevicesAndHoldersAllowedStatus` instead.",
            [
              "**callbackOptions**",
              {
                "$ul": [
                  "**updateRequestUrl**: URL for the merchant endpoint that would be called to request updates. The URL should be hosted on HTTPS and robots.txt should allow the URL path to be accessible by UserAgent:Google-Valuables. Deprecated.",
                  "**url**: The HTTPS url configured by the merchant. The URL should be hosted on HTTPS and robots.txt should allow the URL path to be accessible by UserAgent:Google-Valuables."
                ]
              }
            ],
            [
              "**classTemplateInfo**",
              {
                "$ul": [
                  [
                    "**cardBarcodeSectionDetails**",
                    {
                      "$ul": [
                        [
                          "**firstBottomDetail**",
                          {
                            "$ul": [
                              [
                                "**fieldSelector**: Custom field selector to use with field overrides.",
                                {
                                  "$ul": [
                                    "**fields**: If more than one reference is supplied, then the first one that references a non-empty field will be displayed."
                                  ]
                                }
                              ]
                            ]
                          }
                        ],
                        [
                          "**firstTopDetail**",
                          {
                            "$ul": [
                              [
                                "**fieldSelector**: Custom field selector to use with field overrides.",
                                {
                                  "$ul": [
                                    "**fields**: If more than one reference is supplied, then the first one that references a non-empty field will be displayed."
                                  ]
                                }
                              ]
                            ]
                          }
                        ],
                        [
                          "**secondTopDetail**",
                          {
                            "$ul": [
                              [
                                "**fieldSelector**: Custom field selector to use with field overrides.",
                                {
                                  "$ul": [
                                    "**fields**: If more than one reference is supplied, then the first one that references a non-empty field will be displayed."
                                  ]
                                }
                              ]
                            ]
                          }
                        ]
                      ]
                    }
                  ],
                  [
                    "**cardTemplateOverride**",
                    {
                      "$ul": [
                        "**cardRowTemplateInfos**: Template information for rows in the card view. At most three rows are allowed to be specified."
                      ]
                    }
                  ],
                  [
                    "**detailsTemplateOverride**",
                    {
                      "$ul": [
                        "**detailsItemInfos**: Information for the \"nth\" item displayed in the details list."
                      ]
                    }
                  ],
                  [
                    "**listTemplateOverride**",
                    {
                      "$ul": [
                        [
                          "**firstRowOption**",
                          {
                            "$ul": [
                              [
                                "**fieldOption**: Custom field selector to use with field overrides.",
                                {
                                  "$ul": [
                                    "**fields**: If more than one reference is supplied, then the first one that references a non-empty field will be displayed."
                                  ]
                                }
                              ],
                              "**transitOption**"
                            ]
                          }
                        ],
                        [
                          "**secondRowOption**: Custom field selector to use with field overrides.",
                          {
                            "$ul": [
                              "**fields**: If more than one reference is supplied, then the first one that references a non-empty field will be displayed."
                            ]
                          }
                        ],
                        [
                          "**thirdRowOption**: Custom field selector to use with field overrides.",
                          {
                            "$ul": [
                              "**fields**: If more than one reference is supplied, then the first one that references a non-empty field will be displayed."
                            ]
                          }
                        ]
                      ]
                    }
                  ]
                ]
              }
            ],
            "**confirmationCodeLabel**: The label to use for the confirmation code value (`eventTicketObject.reservationInfo.confirmationCode`) on the card detail view. Each available option maps to a set of localized strings, so that translations are shown to the user based on their locale. Both `confirmationCodeLabel` and `customConfirmationCodeLabel` may not be set. If neither is set, the label will default to \"Confirmation Code\", localized. If the confirmation code field is unset, this label will not be used.",
            "**countryCode**: Country code used to display the card's country (when the user is not in that country), as well as to display localized content when content is not available in the user's locale.",
            [
              "**customConfirmationCodeLabel**",
              {
                "$ul": [
                  [
                    "**defaultValue**",
                    {
                      "$ul": [
                        "**kind**: Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#translatedString\"`.",
                        "**language**: Represents the BCP 47 language tag. Example values are \"en-US\", \"en-GB\", \"de\", or \"de-AT\".",
                        "**value**: The UTF-8 encoded translated string."
                      ]
                    }
                  ],
                  "**kind**: Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#localizedString\"`.",
                  "**translatedValues**: Contains the translations for the string."
                ]
              }
            ],
            [
              "**customGateLabel**",
              {
                "$ul": [
                  [
                    "**defaultValue**",
                    {
                      "$ul": [
                        "**kind**: Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#translatedString\"`.",
                        "**language**: Represents the BCP 47 language tag. Example values are \"en-US\", \"en-GB\", \"de\", or \"de-AT\".",
                        "**value**: The UTF-8 encoded translated string."
                      ]
                    }
                  ],
                  "**kind**: Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#localizedString\"`.",
                  "**translatedValues**: Contains the translations for the string."
                ]
              }
            ],
            [
              "**customRowLabel**",
              {
                "$ul": [
                  [
                    "**defaultValue**",
                    {
                      "$ul": [
                        "**kind**: Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#translatedString\"`.",
                        "**language**: Represents the BCP 47 language tag. Example values are \"en-US\", \"en-GB\", \"de\", or \"de-AT\".",
                        "**value**: The UTF-8 encoded translated string."
                      ]
                    }
                  ],
                  "**kind**: Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#localizedString\"`.",
                  "**translatedValues**: Contains the translations for the string."
                ]
              }
            ],
            [
              "**customSeatLabel**",
              {
                "$ul": [
                  [
                    "**defaultValue**",
                    {
                      "$ul": [
                        "**kind**: Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#translatedString\"`.",
                        "**language**: Represents the BCP 47 language tag. Example values are \"en-US\", \"en-GB\", \"de\", or \"de-AT\".",
                        "**value**: The UTF-8 encoded translated string."
                      ]
                    }
                  ],
                  "**kind**: Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#localizedString\"`.",
                  "**translatedValues**: Contains the translations for the string."
                ]
              }
            ],
            [
              "**customSectionLabel**",
              {
                "$ul": [
                  [
                    "**defaultValue**",
                    {
                      "$ul": [
                        "**kind**: Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#translatedString\"`.",
                        "**language**: Represents the BCP 47 language tag. Example values are \"en-US\", \"en-GB\", \"de\", or \"de-AT\".",
                        "**value**: The UTF-8 encoded translated string."
                      ]
                    }
                  ],
                  "**kind**: Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#localizedString\"`.",
                  "**translatedValues**: Contains the translations for the string."
                ]
              }
            ],
            [
              "**dateTime**",
              {
                "$ul": [
                  [
                    "**customDoorsOpenLabel**",
                    {
                      "$ul": [
                        [
                          "**defaultValue**",
                          {
                            "$ul": [
                              "**kind**: Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#translatedString\"`.",
                              "**language**: Represents the BCP 47 language tag. Example values are \"en-US\", \"en-GB\", \"de\", or \"de-AT\".",
                              "**value**: The UTF-8 encoded translated string."
                            ]
                          }
                        ],
                        "**kind**: Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#localizedString\"`.",
                        "**translatedValues**: Contains the translations for the string."
                      ]
                    }
                  ],
                  "**doorsOpen**: The date/time when the doors open at the venue. This is an ISO 8601 extended format date/time, with or without an offset. Time may be specified up to nanosecond precision. Offsets may be specified with seconds precision (even though offset seconds is not part of ISO 8601). For example: `1985-04-12T23:20:50.52Z` would be 20 minutes and 50.52 seconds after the 23rd hour of April 12th, 1985 in UTC. `1985-04-12T19:20:50.52-04:00` would be 20 minutes and 50.52 seconds after the 19th hour of April 12th, 1985, 4 hours before UTC (same instant in time as the above example). If the event were in New York, this would be the equivalent of Eastern Daylight Time (EDT). Remember that offset varies in regions that observe Daylight Saving Time (or Summer Time), depending on the time of the year. `1985-04-12T19:20:50.52` would be 20 minutes and 50.52 seconds after the 19th hour of April 12th, 1985 with no offset information. The portion of the date/time without the offset is considered the \"local date/time\". This should be the local date/time at the venue. For example, if the event occurs at the 20th hour of June 5th, 2018 at the venue, the local date/time portion should be `2018-06-05T20:00:00`. If the local date/time at the venue is 4 hours before UTC, an offset of `-04:00` may be appended. Without offset information, some rich features may not be available.",
                  "**doorsOpenLabel**: The label to use for the doors open value (`doorsOpen`) on the card detail view. Each available option maps to a set of localized strings, so that translations are shown to the user based on their locale. Both `doorsOpenLabel` and `customDoorsOpenLabel` may not be set. If neither is set, the label will default to \"Doors Open\", localized. If the doors open field is unset, this label will not be used.",
                  "**end**: The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day. This is an ISO 8601 extended format date/time, with or without an offset. Time may be specified up to nanosecond precision. Offsets may be specified with seconds precision (even though offset seconds is not part of ISO 8601). For example: `1985-04-12T23:20:50.52Z` would be 20 minutes and 50.52 seconds after the 23rd hour of April 12th, 1985 in UTC. `1985-04-12T19:20:50.52-04:00` would be 20 minutes and 50.52 seconds after the 19th hour of April 12th, 1985, 4 hours before UTC (same instant in time as the above example). If the event were in New York, this would be the equivalent of Eastern Daylight Time (EDT). Remember that offset varies in regions that observe Daylight Saving Time (or Summer Time), depending on the time of the year. `1985-04-12T19:20:50.52` would be 20 minutes and 50.52 seconds after the 19th hour of April 12th, 1985 with no offset information. The portion of the date/time without the offset is considered the \"local date/time\". This should be the local date/time at the venue. For example, if the event occurs at the 20th hour of June 5th, 2018 at the venue, the local date/time portion should be `2018-06-05T20:00:00`. If the local date/time at the venue is 4 hours before UTC, an offset of `-04:00` may be appended. Without offset information, some rich features may not be available.",
                  "**kind**: Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#eventDateTime\"`.",
                  "**start**: The date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. This is an ISO 8601 extended format date/time, with or without an offset. Time may be specified up to nanosecond precision. Offsets may be specified with seconds precision (even though offset seconds is not part of ISO 8601). For example: `1985-04-12T23:20:50.52Z` would be 20 minutes and 50.52 seconds after the 23rd hour of April 12th, 1985 in UTC. `1985-04-12T19:20:50.52-04:00` would be 20 minutes and 50.52 seconds after the 19th hour of April 12th, 1985, 4 hours before UTC (same instant in time as the above example). If the event were in New York, this would be the equivalent of Eastern Daylight Time (EDT). Remember that offset varies in regions that observe Daylight Saving Time (or Summer Time), depending on the time of the year. `1985-04-12T19:20:50.52` would be 20 minutes and 50.52 seconds after the 19th hour of April 12th, 1985 with no offset information. The portion of the date/time without the offset is considered the \"local date/time\". This should be the local date/time at the venue. For example, if the event occurs at the 20th hour of June 5th, 2018 at the venue, the local date/time portion should be `2018-06-05T20:00:00`. If the local date/time at the venue is 4 hours before UTC, an offset of `-04:00` may be appended. Without offset information, some rich features may not be available."
                ]
              }
            ],
            "**enableSmartTap**: Identifies whether this class supports Smart Tap. The `redemptionIssuers` and object level `smartTapRedemptionLevel` fields must also be set up correctly in order for a pass to support Smart Tap.",
            "**eventId**: The ID of the event. This ID should be unique for every event in an account. It is used to group tickets together if the user has saved multiple tickets for the same event. It can be at most 64 characters. If provided, the grouping will be stable. Be wary of unintentional collision to avoid grouping tickets that should not be grouped. If you use only one class per event, you can simply set this to the `classId` (with or without the issuer ID portion). If not provided, the platform will attempt to use other data to group tickets (potentially unstable).",
            [
              "**eventName**",
              {
                "$ul": [
                  [
                    "**defaultValue**",
                    {
                      "$ul": [
                        "**kind**: Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#translatedString\"`.",
                        "**language**: Represents the BCP 47 language tag. Example values are \"en-US\", \"en-GB\", \"de\", or \"de-AT\".",
                        "**value**: The UTF-8 encoded translated string."
                      ]
                    }
                  ],
                  "**kind**: Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#localizedString\"`.",
                  "**translatedValues**: Contains the translations for the string."
                ]
              }
            ],
            [
              "**finePrint**",
              {
                "$ul": [
                  [
                    "**defaultValue**",
                    {
                      "$ul": [
                        "**kind**: Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#translatedString\"`.",
                        "**language**: Represents the BCP 47 language tag. Example values are \"en-US\", \"en-GB\", \"de\", or \"de-AT\".",
                        "**value**: The UTF-8 encoded translated string."
                      ]
                    }
                  ],
                  "**kind**: Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#localizedString\"`.",
                  "**translatedValues**: Contains the translations for the string."
                ]
              }
            ],
            "**gateLabel**: The label to use for the gate value (`eventTicketObject.seatInfo.gate`) on the card detail view. Each available option maps to a set of localized strings, so that translations are shown to the user based on their locale. Both `gateLabel` and `customGateLabel` may not be set. If neither is set, the label will default to \"Gate\", localized. If the gate field is unset, this label will not be used.",
            [
              "**heroImage**: Wrapping type for Google hosted images. Next ID: 7",
              {
                "$ul": [
                  [
                    "**contentDescription**",
                    {
                      "$ul": [
                        [
                          "**defaultValue**",
                          {
                            "$ul": [
                              "**kind**: Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#translatedString\"`.",
                              "**language**: Represents the BCP 47 language tag. Example values are \"en-US\", \"en-GB\", \"de\", or \"de-AT\".",
                              "**value**: The UTF-8 encoded translated string."
                            ]
                          }
                        ],
                        "**kind**: Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#localizedString\"`.",
                        "**translatedValues**: Contains the translations for the string."
                      ]
                    }
                  ],
                  "**kind**: Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#image\"`.",
                  [
                    "**sourceUri**",
                    {
                      "$ul": [
                        "**description**: Additional information about the image, which is unused and retained only for backward compatibility.",
                        [
                          "**localizedDescription**",
                          {
                            "$ul": [
                              [
                                "**defaultValue**",
                                {
                                  "$ul": [
                                    "**kind**: Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#translatedString\"`.",
                                    "**language**: Represents the BCP 47 language tag. Example values are \"en-US\", \"en-GB\", \"de\", or \"de-AT\".",
                                    "**value**: The UTF-8 encoded translated string."
                                  ]
                                }
                              ],
                              "**kind**: Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#localizedString\"`.",
                              "**translatedValues**: Contains the translations for the string."
                            ]
                          }
                        ],
                        "**uri**: The location of the image. URIs must have a scheme."
                      ]
                    }
                  ]
                ]
              }
            ],
            "**hexBackgroundColor**: The background color for the card. If not set the dominant color of the hero image is used, and if no hero image is set, the dominant color of the logo is used. The format is #rrggbb where rrggbb is a hex RGB triplet, such as `#ffcc00`. You can also use the shorthand version of the RGB triplet which is #rgb, such as `#fc0`.",
            [
              "**homepageUri**",
              {
                "$ul": [
                  "**description**: The URI's title appearing in the app as text. Recommended maximum is 20 characters to ensure full string is displayed on smaller screens. Note that in some contexts this text is not used, such as when `description` is part of an image.",
                  "**id**: The ID associated with a uri. This field is here to enable ease of management of uris.",
                  "**kind**: Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#uri\"`.",
                  [
                    "**localizedDescription**",
                    {
                      "$ul": [
                        [
                          "**defaultValue**",
                          {
                            "$ul": [
                              "**kind**: Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#translatedString\"`.",
                              "**language**: Represents the BCP 47 language tag. Example values are \"en-US\", \"en-GB\", \"de\", or \"de-AT\".",
                              "**value**: The UTF-8 encoded translated string."
                            ]
                          }
                        ],
                        "**kind**: Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#localizedString\"`.",
                        "**translatedValues**: Contains the translations for the string."
                      ]
                    }
                  ],
                  "**uri**: The location of a web page, image, or other resource. URIs in the `LinksModuleData` module can have different prefixes indicating the type of URI (a link to a web page, a link to a map, a telephone number, or an email address). URIs must have a scheme."
                ]
              }
            ],
            "**id**: Required. The unique identifier for a class. This ID must be unique across all classes from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'.",
            "**imageModulesData**: Image module data. The maximum number of these fields displayed is 1 from object level and 1 for class object level.",
            [
              "**infoModuleData**",
              {
                "$ul": [
                  "**labelValueRows**: A list of collections of labels and values. These will be displayed one after the other in a singular column.",
                  "**showLastUpdateTime**"
                ]
              }
            ],
            "**issuerName**: Required. The issuer name. Recommended maximum length is 20 characters to ensure full string is displayed on smaller screens.",
            "**kind**: Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#eventTicketClass\"`.",
            [
              "**linksModuleData**",
              {
                "$ul": [
                  "**uris**: The list of URIs."
                ]
              }
            ],
            [
              "**localizedIssuerName**",
              {
                "$ul": [
                  [
                    "**defaultValue**",
                    {
                      "$ul": [
                        "**kind**: Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#translatedString\"`.",
                        "**language**: Represents the BCP 47 language tag. Example values are \"en-US\", \"en-GB\", \"de\", or \"de-AT\".",
                        "**value**: The UTF-8 encoded translated string."
                      ]
                    }
                  ],
                  "**kind**: Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#localizedString\"`.",
                  "**translatedValues**: Contains the translations for the string."
                ]
              }
            ],
            "**locations**: Note: This field is currently not supported to trigger geo notifications.",
            [
              "**logo**: Wrapping type for Google hosted images. Next ID: 7",
              {
                "$ul": [
                  [
                    "**contentDescription**",
                    {
                      "$ul": [
                        [
                          "**defaultValue**",
                          {
                            "$ul": [
                              "**kind**: Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#translatedString\"`.",
                              "**language**: Represents the BCP 47 language tag. Example values are \"en-US\", \"en-GB\", \"de\", or \"de-AT\".",
                              "**value**: The UTF-8 encoded translated string."
                            ]
                          }
                        ],
                        "**kind**: Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#localizedString\"`.",
                        "**translatedValues**: Contains the translations for the string."
                      ]
                    }
                  ],
                  "**kind**: Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#image\"`.",
                  [
                    "**sourceUri**",
                    {
                      "$ul": [
                        "**description**: Additional information about the image, which is unused and retained only for backward compatibility.",
                        [
                          "**localizedDescription**",
                          {
                            "$ul": [
                              [
                                "**defaultValue**",
                                {
                                  "$ul": [
                                    "**kind**: Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#translatedString\"`.",
                                    "**language**: Represents the BCP 47 language tag. Example values are \"en-US\", \"en-GB\", \"de\", or \"de-AT\".",
                                    "**value**: The UTF-8 encoded translated string."
                                  ]
                                }
                              ],
                              "**kind**: Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#localizedString\"`.",
                              "**translatedValues**: Contains the translations for the string."
                            ]
                          }
                        ],
                        "**uri**: The location of the image. URIs must have a scheme."
                      ]
                    }
                  ]
                ]
              }
            ],
            "**messages**: An array of messages displayed in the app. All users of this object will receive its associated messages. The maximum number of these fields is 10.",
            "**multipleDevicesAndHoldersAllowedStatus**: Identifies whether multiple users and devices will save the same object referencing this class.",
            "**redemptionIssuers**: Identifies which redemption issuers can redeem the pass over Smart Tap. Redemption issuers are identified by their issuer ID. Redemption issuers must have at least one Smart Tap key configured. The `enableSmartTap` and object level `smartTapRedemptionLevel` fields must also be set up correctly in order for a pass to support Smart Tap.",
            [
              "**review**",
              {
                "$ul": [
                  "**comments**"
                ]
              }
            ],
            "**reviewStatus**: Required. The status of the class. This field can be set to `draft` or `underReview` using the insert, patch, or update API calls. Once the review state is changed from `draft` it may not be changed back to `draft`. You should keep this field to `draft` when the class is under development. A `draft` class cannot be used to create any object. You should set this field to `underReview` when you believe the class is ready for use. The platform will automatically set this field to `approved` and it can be immediately used to create or migrate objects. When updating an already `approved` class you should keep setting this field to `underReview`.",
            "**rowLabel**: The label to use for the row value (`eventTicketObject.seatInfo.row`) on the card detail view. Each available option maps to a set of localized strings, so that translations are shown to the user based on their locale. Both `rowLabel` and `customRowLabel` may not be set. If neither is set, the label will default to \"Row\", localized. If the row field is unset, this label will not be used.",
            "**seatLabel**: The label to use for the seat value (`eventTicketObject.seatInfo.seat`) on the card detail view. Each available option maps to a set of localized strings, so that translations are shown to the user based on their locale. Both `seatLabel` and `customSeatLabel` may not be set. If neither is set, the label will default to \"Seat\", localized. If the seat field is unset, this label will not be used.",
            "**sectionLabel**: The label to use for the section value (`eventTicketObject.seatInfo.section`) on the card detail view. Each available option maps to a set of localized strings, so that translations are shown to the user based on their locale. Both `sectionLabel` and `customSectionLabel` may not be set. If neither is set, the label will default to \"Section\", localized. If the section field is unset, this label will not be used.",
            [
              "**securityAnimation**",
              {
                "$ul": [
                  "**animationType**: Type of animation."
                ]
              }
            ],
            "**textModulesData**: Text module data. If text module data is also defined on the class, both will be displayed. The maximum number of these fields displayed is 10 from the object and 10 from the class.",
            [
              "**venue**",
              {
                "$ul": [
                  [
                    "**address**",
                    {
                      "$ul": [
                        [
                          "**defaultValue**",
                          {
                            "$ul": [
                              "**kind**: Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#translatedString\"`.",
                              "**language**: Represents the BCP 47 language tag. Example values are \"en-US\", \"en-GB\", \"de\", or \"de-AT\".",
                              "**value**: The UTF-8 encoded translated string."
                            ]
                          }
                        ],
                        "**kind**: Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#localizedString\"`.",
                        "**translatedValues**: Contains the translations for the string."
                      ]
                    }
                  ],
                  "**kind**: Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#eventVenue\"`.",
                  [
                    "**name**",
                    {
                      "$ul": [
                        [
                          "**defaultValue**",
                          {
                            "$ul": [
                              "**kind**: Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#translatedString\"`.",
                              "**language**: Represents the BCP 47 language tag. Example values are \"en-US\", \"en-GB\", \"de\", or \"de-AT\".",
                              "**value**: The UTF-8 encoded translated string."
                            ]
                          }
                        ],
                        "**kind**: Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#localizedString\"`.",
                        "**translatedValues**: Contains the translations for the string."
                      ]
                    }
                  ]
                ]
              }
            ],
            "**version**: Deprecated",
            "**viewUnlockRequirement**: View Unlock Requirement options for the event ticket.",
            [
              "**wideLogo**: Wrapping type for Google hosted images. Next ID: 7",
              {
                "$ul": [
                  [
                    "**contentDescription**",
                    {
                      "$ul": [
                        [
                          "**defaultValue**",
                          {
                            "$ul": [
                              "**kind**: Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#translatedString\"`.",
                              "**language**: Represents the BCP 47 language tag. Example values are \"en-US\", \"en-GB\", \"de\", or \"de-AT\".",
                              "**value**: The UTF-8 encoded translated string."
                            ]
                          }
                        ],
                        "**kind**: Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#localizedString\"`.",
                        "**translatedValues**: Contains the translations for the string."
                      ]
                    }
                  ],
                  "**kind**: Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#image\"`.",
                  [
                    "**sourceUri**",
                    {
                      "$ul": [
                        "**description**: Additional information about the image, which is unused and retained only for backward compatibility.",
                        [
                          "**localizedDescription**",
                          {
                            "$ul": [
                              [
                                "**defaultValue**",
                                {
                                  "$ul": [
                                    "**kind**: Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#translatedString\"`.",
                                    "**language**: Represents the BCP 47 language tag. Example values are \"en-US\", \"en-GB\", \"de\", or \"de-AT\".",
                                    "**value**: The UTF-8 encoded translated string."
                                  ]
                                }
                              ],
                              "**kind**: Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#localizedString\"`.",
                              "**translatedValues**: Contains the translations for the string."
                            ]
                          }
                        ],
                        "**uri**: The location of the image. URIs must have a scheme."
                      ]
                    }
                  ]
                ]
              }
            ],
            [
              "**wordMark**: Wrapping type for Google hosted images. Next ID: 7",
              {
                "$ul": [
                  [
                    "**contentDescription**",
                    {
                      "$ul": [
                        [
                          "**defaultValue**",
                          {
                            "$ul": [
                              "**kind**: Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#translatedString\"`.",
                              "**language**: Represents the BCP 47 language tag. Example values are \"en-US\", \"en-GB\", \"de\", or \"de-AT\".",
                              "**value**: The UTF-8 encoded translated string."
                            ]
                          }
                        ],
                        "**kind**: Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#localizedString\"`.",
                        "**translatedValues**: Contains the translations for the string."
                      ]
                    }
                  ],
                  "**kind**: Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#image\"`.",
                  [
                    "**sourceUri**",
                    {
                      "$ul": [
                        "**description**: Additional information about the image, which is unused and retained only for backward compatibility.",
                        [
                          "**localizedDescription**",
                          {
                            "$ul": [
                              [
                                "**defaultValue**",
                                {
                                  "$ul": [
                                    "**kind**: Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#translatedString\"`.",
                                    "**language**: Represents the BCP 47 language tag. Example values are \"en-US\", \"en-GB\", \"de\", or \"de-AT\".",
                                    "**value**: The UTF-8 encoded translated string."
                                  ]
                                }
                              ],
                              "**kind**: Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#localizedString\"`.",
                              "**translatedValues**: Contains the translations for the string."
                            ]
                          }
                        ],
                        "**uri**: The location of the image. URIs must have a scheme."
                      ]
                    }
                  ]
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
