{
  "name": "servicebroker_projects_brokers_v2_service_instances_service_bindings_get",
  "description": "GetBinding returns the binding information.",
  "parameters": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "Name must match\n`projects/[PROJECT_ID]/brokers/[BROKER_ID]/v2/service_instances/[INSTANCE_ID]/service_bindings`."
      },
      "planId": {
        "type": "string",
        "description": "Plan id."
      },
      "serviceId": {
        "type": "string",
        "description": "Service id."
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "alt": {
        "default": "json",
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "prettyPrint": {
        "default": true,
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      }
    },
    "required": [
      "name"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://servicebroker.googleapis.com//v1beta1/{name}{?planId,serviceId,fields,uploadType,callback,oauth_token,$.xgafv,alt,access_token,key,upload_protocol,quotaUser,prettyPrint}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Response for the `GetBinding()` method.",
        "**Key properties:**",
        {
          "$ul": [
            "**credentials**: Credentials to use the binding.",
            "**deploymentName**: String containing the Deployment Manager deployment name that was created",
            "**description**: Used to communicate description of the response. Usually for non-standard",
            "**resourceName**: Output only. The resource name of the binding, e.g.",
            "**route_service_url**: A URL to which the platform may proxy requests for the address sent with",
            "**syslog_drain_url**: From where to read system logs.",
            "**volume_mounts**: An array of configurations for mounting volumes."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
