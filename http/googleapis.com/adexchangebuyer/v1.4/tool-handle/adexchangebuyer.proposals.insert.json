{
  "name": "adexchangebuyer_proposals_insert",
  "description": "Create the given list of proposals",
  "parameters": {
    "type": "object",
    "properties": {
      "alt": {
        "enum": [
          "json"
        ],
        "type": "string",
        "description": "Data format for the response."
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "An opaque string that represents a user for quota purposes. Must not exceed 40 characters."
      },
      "userIp": {
        "type": "string",
        "description": "Deprecated. Please use quotaUser instead."
      },
      "body": {
        "$ref": "#/$defs/CreateOrdersRequest"
      }
    },
    "$defs": {
      "CreateOrdersRequest": {
        "properties": {
          "proposals": {
            "description": "The list of proposals to create.",
            "items": {
              "$ref": "#/$defs/Proposal"
            },
            "type": "array"
          },
          "webPropertyCode": {
            "description": "Web property id of the seller creating these orders",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Proposal": {
        "description": "Represents a proposal in the marketplace. A proposal is the unit of negotiation between a seller and a buyer and contains deals which are served. Each field in a proposal can have one of the following setting:\n\n(readonly) - It is an error to try and set this field. (buyer-readonly) - Only the seller can set this field. (seller-readonly) - Only the buyer can set this field. (updatable) - The field is updatable at all times by either buyer or the seller.",
        "properties": {
          "billedBuyer": {
            "$ref": "#/$defs/Buyer"
          },
          "buyer": {
            "$ref": "#/$defs/Buyer"
          },
          "buyerContacts": {
            "description": "Optional contact information of the buyer. (seller-readonly)",
            "items": {
              "$ref": "#/$defs/ContactInformation"
            },
            "type": "array"
          },
          "buyerPrivateData": {
            "$ref": "#/$defs/PrivateData"
          },
          "dbmAdvertiserIds": {
            "description": "IDs of DBM advertisers permission to this proposal.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "hasBuyerSignedOff": {
            "description": "When an proposal is in an accepted state, indicates whether the buyer has signed off. Once both sides have signed off on a deal, the proposal can be finalized by the seller. (seller-readonly)",
            "type": "boolean"
          },
          "hasSellerSignedOff": {
            "description": "When an proposal is in an accepted state, indicates whether the buyer has signed off Once both sides have signed off on a deal, the proposal can be finalized by the seller. (buyer-readonly)",
            "type": "boolean"
          },
          "inventorySource": {
            "description": "What exchange will provide this inventory (readonly, except on create).",
            "type": "string"
          },
          "isRenegotiating": {
            "description": "True if the proposal is being renegotiated (readonly).",
            "type": "boolean"
          },
          "isSetupComplete": {
            "description": "True, if the buyside inventory setup is complete for this proposal. (readonly, except via OrderSetupCompleted action) Deprecated in favor of deal level setup complete flag.",
            "type": "boolean"
          },
          "kind": {
            "default": "adexchangebuyer#proposal",
            "description": "Identifies what kind of resource this is. Value: the fixed string \"adexchangebuyer#proposal\".",
            "type": "string"
          },
          "labels": {
            "description": "List of labels associated with the proposal. (readonly)",
            "items": {
              "$ref": "#/$defs/MarketplaceLabel"
            },
            "type": "array"
          },
          "lastUpdaterOrCommentorRole": {
            "description": "The role of the last user that either updated the proposal or left a comment. (readonly)",
            "type": "string"
          },
          "name": {
            "description": "The name for the proposal (updatable)",
            "type": "string"
          },
          "negotiationId": {
            "description": "Optional negotiation id if this proposal is a preferred deal proposal.",
            "type": "string"
          },
          "originatorRole": {
            "description": "Indicates whether the buyer/seller created the proposal.(readonly)",
            "type": "string"
          },
          "privateAuctionId": {
            "description": "Optional private auction id if this proposal is a private auction proposal.",
            "type": "string"
          },
          "proposalId": {
            "description": "The unique id of the proposal. (readonly).",
            "type": "string"
          },
          "proposalState": {
            "description": "The current state of the proposal. (readonly)",
            "type": "string"
          },
          "revisionNumber": {
            "description": "The revision number for the proposal (readonly).",
            "format": "int64",
            "type": "string"
          },
          "revisionTimeMs": {
            "description": "The time (ms since epoch) when the proposal was last revised (readonly).",
            "format": "int64",
            "type": "string"
          },
          "seller": {
            "$ref": "#/$defs/Seller"
          },
          "sellerContacts": {
            "description": "Optional contact information of the seller (buyer-readonly).",
            "items": {
              "$ref": "#/$defs/ContactInformation"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Buyer": {
        "properties": {
          "accountId": {
            "description": "Adx account id of the buyer.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ContactInformation": {
        "properties": {
          "email": {
            "description": "Email address of the contact.",
            "type": "string"
          },
          "name": {
            "description": "The name of the contact.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PrivateData": {
        "properties": {
          "referenceId": {
            "type": "string"
          },
          "referencePayload": {
            "format": "byte",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MarketplaceLabel": {
        "properties": {
          "accountId": {
            "description": "The accountId of the party that created the label.",
            "type": "string"
          },
          "createTimeMs": {
            "description": "The creation time (in ms since epoch) for the label.",
            "format": "int64",
            "type": "string"
          },
          "deprecatedMarketplaceDealParty": {
            "$ref": "#/$defs/MarketplaceDealParty"
          },
          "label": {
            "description": "The label to use.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MarketplaceDealParty": {
        "properties": {
          "buyer": {
            "$ref": "#/$defs/Buyer"
          },
          "seller": {
            "$ref": "#/$defs/Seller"
          }
        },
        "type": "object"
      },
      "Seller": {
        "properties": {
          "accountId": {
            "description": "The unique id for the seller. The seller fills in this field. The seller account id is then available to buyer in the product.",
            "type": "string"
          },
          "subAccountId": {
            "description": "Optional sub-account id for the seller.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://www.googleapis.com/adexchangebuyer/v1.4/proposals/insert{?alt,fields,key,oauth_token,prettyPrint,quotaUser,userIp}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**proposals**: The list of proposals successfully created."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
