{
  "name": "contentwarehouse_projects_locations_documentSchemas_create",
  "description": "Creates a document schema.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The parent name."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleCloudContentwarehouseV1DocumentSchema"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "GoogleCloudContentwarehouseV1DocumentSchema": {
        "description": "A document schema used to define document structure.",
        "properties": {
          "createTime": {
            "description": "Output only. The time when the document schema is created.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "description": {
            "description": "Schema description.",
            "type": "string"
          },
          "displayName": {
            "description": "Required. Name of the schema given by the user. Must be unique per project.",
            "type": "string"
          },
          "documentIsFolder": {
            "description": "Document Type, true refers the document is a folder, otherwise it is a typical document.",
            "type": "boolean"
          },
          "name": {
            "description": "The resource name of the document schema. Format: projects/{project_number}/locations/{location}/documentSchemas/{document_schema_id}. The name is ignored when creating a document schema.",
            "type": "string"
          },
          "propertyDefinitions": {
            "description": "Document details.",
            "items": {
              "$ref": "#/$defs/GoogleCloudContentwarehouseV1PropertyDefinition"
            },
            "type": "array"
          },
          "updateTime": {
            "description": "Output only. The time when the document schema is last updated.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudContentwarehouseV1PropertyDefinition": {
        "description": "Defines the metadata for a schema property.",
        "properties": {
          "dateTimeTypeOptions": {
            "$ref": "#/$defs/GoogleCloudContentwarehouseV1DateTimeTypeOptions"
          },
          "displayName": {
            "description": "The display-name for the property, used for front-end.",
            "type": "string"
          },
          "enumTypeOptions": {
            "$ref": "#/$defs/GoogleCloudContentwarehouseV1EnumTypeOptions"
          },
          "floatTypeOptions": {
            "$ref": "#/$defs/GoogleCloudContentwarehouseV1FloatTypeOptions"
          },
          "integerTypeOptions": {
            "$ref": "#/$defs/GoogleCloudContentwarehouseV1IntegerTypeOptions"
          },
          "isFilterable": {
            "description": "Whether the property can be filtered. If this is a sub-property, all the parent properties must be marked filterable.",
            "type": "boolean"
          },
          "isMetadata": {
            "description": "Whether the property is user supplied metadata. This out-of-the box placeholder setting can be used to tag derived properties. Its value and interpretation logic should be implemented by API user.",
            "type": "boolean"
          },
          "isRepeatable": {
            "description": "Whether the property can have multiple values.",
            "type": "boolean"
          },
          "isRequired": {
            "description": "Whether the property is mandatory. Default is 'false', i.e. populating property value can be skipped. If 'true' then user must populate the value for this property.",
            "type": "boolean"
          },
          "isSearchable": {
            "description": "Indicates that the property should be included in a global search.",
            "type": "boolean"
          },
          "mapTypeOptions": {
            "$ref": "#/$defs/GoogleCloudContentwarehouseV1MapTypeOptions"
          },
          "name": {
            "description": "Required. The name of the metadata property. Must be unique within a document schema and is case insensitive. Names must be non-blank, start with a letter, and can contain alphanumeric characters and: /, :, -, _, and .",
            "type": "string"
          },
          "propertyTypeOptions": {
            "$ref": "#/$defs/GoogleCloudContentwarehouseV1PropertyTypeOptions"
          },
          "retrievalImportance": {
            "description": "The retrieval importance of the property during search.",
            "enum": [
              "RETRIEVAL_IMPORTANCE_UNSPECIFIED",
              "HIGHEST",
              "HIGHER",
              "HIGH",
              "MEDIUM",
              "LOW",
              "LOWEST"
            ],
            "type": "string"
          },
          "schemaSources": {
            "description": "The mapping information between this property to another schema source.",
            "items": {
              "$ref": "#/$defs/GoogleCloudContentwarehouseV1PropertyDefinitionSchemaSource"
            },
            "type": "array"
          },
          "textTypeOptions": {
            "$ref": "#/$defs/GoogleCloudContentwarehouseV1TextTypeOptions"
          },
          "timestampTypeOptions": {
            "$ref": "#/$defs/GoogleCloudContentwarehouseV1TimestampTypeOptions"
          }
        },
        "type": "object"
      },
      "GoogleCloudContentwarehouseV1DateTimeTypeOptions": {
        "description": "Configurations for a date time property.",
        "properties": {},
        "type": "object"
      },
      "GoogleCloudContentwarehouseV1EnumTypeOptions": {
        "description": "Configurations for an enum/categorical property.",
        "properties": {
          "possibleValues": {
            "description": "Required. List of possible enum values.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "validationCheckDisabled": {
            "description": "Make sure the Enum property value provided in the document is in the possile value list during document creation. The validation check runs by default.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GoogleCloudContentwarehouseV1FloatTypeOptions": {
        "description": "Configurations for a float property.",
        "properties": {},
        "type": "object"
      },
      "GoogleCloudContentwarehouseV1IntegerTypeOptions": {
        "description": "Configurations for an integer property.",
        "properties": {},
        "type": "object"
      },
      "GoogleCloudContentwarehouseV1MapTypeOptions": {
        "description": "Configurations for a Map property.",
        "properties": {},
        "type": "object"
      },
      "GoogleCloudContentwarehouseV1PropertyTypeOptions": {
        "description": "Configurations for a nested structured data property.",
        "properties": {
          "propertyDefinitions": {
            "description": "Required. List of property definitions.",
            "items": {
              "$ref": "#/$defs/GoogleCloudContentwarehouseV1PropertyDefinition"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudContentwarehouseV1PropertyDefinitionSchemaSource": {
        "description": "The schema source information.",
        "properties": {
          "name": {
            "description": "The schema name in the source.",
            "type": "string"
          },
          "processorType": {
            "description": "The Doc AI processor type name.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudContentwarehouseV1TextTypeOptions": {
        "description": "Configurations for a text property.",
        "properties": {},
        "type": "object"
      },
      "GoogleCloudContentwarehouseV1TimestampTypeOptions": {
        "description": "Configurations for a timestamp property.",
        "properties": {},
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://contentwarehouse.googleapis.com//v1/{parent}/documentSchemas{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A document schema used to define document structure.",
        "**Key properties:**",
        {
          "$ul": [
            "**createTime**: Output only. The time when the document schema is created.",
            "**description**: Schema description.",
            "**displayName**: Required. Name of the schema given by the user. Must be unique per project.",
            "**documentIsFolder**: Document Type, true refers the document is a folder, otherwise it is a typical document.",
            "**name**: The resource name of the document schema. Format: projects/{project_number}/locations/{location}/documentSchemas/{document_schema_id}. The name is ignored when creating a document schema.",
            "**propertyDefinitions**: Document details.",
            "**updateTime**: Output only. The time when the document schema is last updated."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
