{
  "name": "tagmanager_accounts_containers_update",
  "description": "Updates a Container.",
  "parameters": {
    "type": "object",
    "properties": {
      "accountId": {
        "type": "string",
        "description": "The GTM Account ID."
      },
      "containerId": {
        "type": "string",
        "description": "The GTM Container ID."
      },
      "fingerprint": {
        "type": "string",
        "description": "When provided, this fingerprint must match the fingerprint of the container in storage."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/Container"
      }
    },
    "required": [
      "accountId",
      "containerId"
    ],
    "$defs": {
      "Container": {
        "description": "Represents a Google Tag Manager Container.",
        "properties": {
          "accountId": {
            "description": "GTM Account ID.",
            "type": "string"
          },
          "containerId": {
            "description": "The Container ID uniquely identifies the GTM Container.",
            "type": "string"
          },
          "domainName": {
            "description": "Optional list of domain names associated with the Container. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "enabledBuiltInVariable": {
            "description": "List of enabled built-in variables. Valid values include: pageUrl, pageHostname, pagePath, referrer, event, clickElement, clickClasses, clickId, clickTarget, clickUrl, clickText, formElement, formClasses, formId, formTarget, formUrl, formText, errorMessage, errorUrl, errorLine, newHistoryFragment, oldHistoryFragment, newHistoryState, oldHistoryState, historySource, containerVersion, debugMode, randomNumber, containerId. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update",
            "items": {
              "enum": [
                "pageUrl",
                "pageHostname",
                "pagePath",
                "referrer",
                "event",
                "clickElement",
                "clickClasses",
                "clickId",
                "clickTarget",
                "clickUrl",
                "clickText",
                "firstPartyServingUrl",
                "formElement",
                "formClasses",
                "formId",
                "formTarget",
                "formUrl",
                "formText",
                "environmentName",
                "errorMessage",
                "errorUrl",
                "errorLine",
                "newHistoryUrl",
                "oldHistoryUrl",
                "newHistoryFragment",
                "oldHistoryFragment",
                "newHistoryState",
                "oldHistoryState",
                "historySource",
                "containerVersion",
                "debugMode",
                "randomNumber",
                "containerId",
                "appId",
                "appName",
                "appVersionCode",
                "appVersionName",
                "language",
                "osVersion",
                "platform",
                "sdkVersion",
                "deviceName",
                "resolution",
                "advertiserId",
                "advertisingTrackingEnabled",
                "htmlId",
                "ampBrowserLanguage",
                "ampCanonicalPath",
                "ampCanonicalUrl",
                "ampCanonicalHost",
                "ampReferrer",
                "ampTitle",
                "ampClientId",
                "ampClientTimezone",
                "ampClientTimestamp",
                "ampClientScreenWidth",
                "ampClientScreenHeight",
                "ampClientScrollX",
                "ampClientScrollY",
                "ampClientMaxScrollX",
                "ampClientMaxScrollY",
                "ampTotalEngagedTime",
                "ampPageViewId",
                "ampPageLoadTime",
                "ampPageDownloadTime",
                "ampGtmEvent",
                "eventName",
                "firebaseEventParameterCampaign",
                "firebaseEventParameterCampaignAclid",
                "firebaseEventParameterCampaignAnid",
                "firebaseEventParameterCampaignClickTimestamp",
                "firebaseEventParameterCampaignContent",
                "firebaseEventParameterCampaignCp1",
                "firebaseEventParameterCampaignGclid",
                "firebaseEventParameterCampaignSource",
                "firebaseEventParameterCampaignTerm",
                "firebaseEventParameterCurrency",
                "firebaseEventParameterDynamicLinkAcceptTime",
                "firebaseEventParameterDynamicLinkLinkid",
                "firebaseEventParameterNotificationMessageDeviceTime",
                "firebaseEventParameterNotificationMessageId",
                "firebaseEventParameterNotificationMessageName",
                "firebaseEventParameterNotificationMessageTime",
                "firebaseEventParameterNotificationTopic",
                "firebaseEventParameterPreviousAppVersion",
                "firebaseEventParameterPreviousOsVersion",
                "firebaseEventParameterPrice",
                "firebaseEventParameterProductId",
                "firebaseEventParameterQuantity",
                "firebaseEventParameterValue",
                "videoProvider",
                "videoUrl",
                "videoTitle",
                "videoDuration",
                "videoPercent",
                "videoVisible",
                "videoStatus",
                "videoCurrentTime",
                "scrollDepthThreshold",
                "scrollDepthUnits",
                "scrollDepthDirection",
                "elementVisibilityRatio",
                "elementVisibilityTime",
                "elementVisibilityFirstTime",
                "elementVisibilityRecentTime"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "fingerprint": {
            "description": "The fingerprint of the GTM Container as computed at storage time. This value is recomputed whenever the account is modified.",
            "type": "string"
          },
          "name": {
            "description": "Container display name. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update",
            "type": "string"
          },
          "notes": {
            "description": "Container Notes. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update",
            "type": "string"
          },
          "publicId": {
            "description": "Container Public ID.",
            "type": "string"
          },
          "timeZoneCountryId": {
            "description": "Container Country ID. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update",
            "type": "string"
          },
          "timeZoneId": {
            "description": "Container Time Zone ID. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update",
            "type": "string"
          },
          "usageContext": {
            "description": "List of Usage Contexts for the Container. Valid values include: web, android, ios. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update",
            "items": {
              "enum": [
                "web",
                "android",
                "ios",
                "androidSdk5",
                "iosSdk5",
                "amp"
              ],
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "https://tagmanager.googleapis.com//tagmanager/v1/accounts/{accountId}/containers/{containerId}{?fingerprint,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Represents a Google Tag Manager Container.",
        "**Key properties:**",
        {
          "$ul": [
            "**accountId**: GTM Account ID.",
            "**containerId**: The Container ID uniquely identifies the GTM Container.",
            "**domainName**: Optional list of domain names associated with the Container. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update",
            "**enabledBuiltInVariable**: List of enabled built-in variables. Valid values include: pageUrl, pageHostname, pagePath, referrer, event, clickElement, clickClasses, clickId, clickTarget, clickUrl, clickText, formElement, formClasses, formId, formTarget, formUrl, formText, errorMessage, errorUrl, errorLine, newHistoryFragment, oldHistoryFragment, newHistoryState, oldHistoryState, historySource, containerVersion, debugMode, randomNumber, containerId. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update",
            "**fingerprint**: The fingerprint of the GTM Container as computed at storage time. This value is recomputed whenever the account is modified.",
            "**name**: Container display name. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update",
            "**notes**: Container Notes. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update",
            "**publicId**: Container Public ID.",
            "**timeZoneCountryId**: Container Country ID. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update",
            "**timeZoneId**: Container Time Zone ID. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update",
            "**usageContext**: List of Usage Contexts for the Container. Valid values include: web, android, ios. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
