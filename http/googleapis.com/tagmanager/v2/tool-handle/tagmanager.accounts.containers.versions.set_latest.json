{
  "name": "tagmanager_accounts_containers_versions_set_latest",
  "description": "Sets the latest version used for synchronization of workspaces when detecting conflicts and errors.",
  "parameters": {
    "type": "object",
    "properties": {
      "path": {
        "type": "string",
        "description": "GTM ContainerVersion's API relative path. Example: accounts/{account_id}/containers/{container_id}/versions/{version_id}"
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      }
    },
    "required": [
      "path"
    ]
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://tagmanager.googleapis.com//tagmanager/v2/{path}:set_latest{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Represents a Google Tag Manager Container Version.",
        "**Key properties:**",
        {
          "$ul": [
            "**accountId**: GTM Account ID.",
            "**builtInVariable**: The built-in variables in the container that this version was taken from.",
            "**client**: The clients in the container that this version was taken from.",
            [
              "**container**: Represents a Google Tag Manager Container, which specifies the platform tags will run on, manages workspaces, and retains container versions.",
              {
                "$ul": [
                  "**accountId**: GTM Account ID.",
                  "**containerId**: The Container ID uniquely identifies the GTM Container.",
                  "**domainName**: List of domain names associated with the Container. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update",
                  [
                    "**features**",
                    {
                      "$ul": [
                        "**supportBuiltInVariables**: Whether this Container supports built-in variables",
                        "**supportClients**: Whether this Container supports clients.",
                        "**supportEnvironments**: Whether this Container supports environments.",
                        "**supportFolders**: Whether this Container supports folders.",
                        "**supportGtagConfigs**: Whether this Container supports Google tag config.",
                        "**supportTags**: Whether this Container supports tags.",
                        "**supportTemplates**: Whether this Container supports templates.",
                        "**supportTransformations**: Whether this Container supports transformations.",
                        "**supportTriggers**: Whether this Container supports triggers.",
                        "**supportUserPermissions**: Whether this Container supports user permissions managed by GTM.",
                        "**supportVariables**: Whether this Container supports variables.",
                        "**supportVersions**: Whether this Container supports Container versions.",
                        "**supportWorkspaces**: Whether this Container supports workspaces.",
                        "**supportZones**: Whether this Container supports zones."
                      ]
                    }
                  ],
                  "**fingerprint**: The fingerprint of the GTM Container as computed at storage time. This value is recomputed whenever the account is modified.",
                  "**name**: Container display name. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update",
                  "**notes**: Container Notes. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update",
                  "**path**: GTM Container's API relative path.",
                  "**publicId**: Container Public ID.",
                  "**tagIds**: All Tag IDs that refer to this Container.",
                  "**tagManagerUrl**: Auto generated link to the tag manager UI",
                  "**taggingServerUrls**: List of server-side container URLs for the Container. If multiple URLs are provided, all URL paths must match. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update",
                  "**usageContext**: List of Usage Contexts for the Container. Valid values include: web, android, or ios. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update"
                ]
              }
            ],
            "**containerId**: GTM Container ID.",
            "**containerVersionId**: The Container Version ID uniquely identifies the GTM Container Version.",
            "**customTemplate**: The custom templates in the container that this version was taken from.",
            "**deleted**: A value of true indicates this container version has been deleted.",
            "**description**: Container version description. @mutable tagmanager.accounts.containers.versions.update",
            "**fingerprint**: The fingerprint of the GTM Container Version as computed at storage time. This value is recomputed whenever the container version is modified.",
            "**folder**: The folders in the container that this version was taken from.",
            "**gtagConfig**: The Google tag configs in the container that this version was taken from.",
            "**name**: Container version display name. @mutable tagmanager.accounts.containers.versions.update",
            "**path**: GTM Container Version's API relative path.",
            "**tag**: The tags in the container that this version was taken from.",
            "**tagManagerUrl**: Auto generated link to the tag manager UI",
            "**transformation**: The transformations in the container that this version was taken from.",
            "**trigger**: The triggers in the container that this version was taken from.",
            "**variable**: The variables in the container that this version was taken from.",
            "**zone**: The zones in the container that this version was taken from."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
