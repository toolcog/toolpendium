{
  "name": "dataflow_projects_templates_get",
  "description": "Get the template associated with a template.",
  "parameters": {
    "type": "object",
    "properties": {
      "projectId": {
        "type": "string",
        "description": "Required. The ID of the Cloud Platform project that the job belongs to."
      },
      "gcsPath": {
        "type": "string",
        "description": "Required. A Cloud Storage path to the template from which to create the job. Must be valid Cloud Storage URL, beginning with 'gs://'."
      },
      "location": {
        "type": "string",
        "description": "The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to which to direct the request."
      },
      "view": {
        "enum": [
          "METADATA_ONLY"
        ],
        "type": "string",
        "description": "The view to retrieve. Defaults to METADATA_ONLY."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      }
    },
    "required": [
      "projectId"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://dataflow.googleapis.com//v1b3/projects/{projectId}/templates:get{?gcsPath,location,view,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The response to a GetTemplate request.",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**metadata**: Metadata describing a template.",
              {
                "$ul": [
                  "**description**: Optional. A description of the template.",
                  "**name**: Required. The name of the template.",
                  "**parameters**: The parameters for the template.",
                  "**streaming**: Optional. Indicates if the template is streaming or not.",
                  "**supportsAtLeastOnce**: Optional. Indicates if the streaming template supports at least once mode.",
                  "**supportsExactlyOnce**: Optional. Indicates if the streaming template supports exactly once mode."
                ]
              }
            ],
            [
              "**runtimeMetadata**: RuntimeMetadata describing a runtime environment.",
              {
                "$ul": [
                  "**parameters**: The parameters for the template.",
                  [
                    "**sdkInfo**: SDK Information.",
                    {
                      "$ul": [
                        "**language**: Required. The SDK Language.",
                        "**version**: Optional. The SDK version."
                      ]
                    }
                  ]
                ]
              }
            ],
            [
              "**status**: The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
              {
                "$ul": [
                  "**code**: The status code, which should be an enum value of google.rpc.Code.",
                  "**details**: A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                  "**message**: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                ]
              }
            ],
            "**templateType**: Template Type."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
