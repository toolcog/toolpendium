{
  "name": "dataflow_projects_locations_flexTemplates_launch",
  "description": "Launch a job with a FlexTemplate.",
  "parameters": {
    "type": "object",
    "properties": {
      "projectId": {
        "type": "string",
        "description": "Required. The ID of the Cloud Platform project that the job belongs to."
      },
      "location": {
        "type": "string",
        "description": "Required. The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to which to direct the request. E.g., us-central1, us-west1."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/LaunchFlexTemplateRequest"
      }
    },
    "required": [
      "projectId",
      "location"
    ],
    "$defs": {
      "LaunchFlexTemplateRequest": {
        "description": "A request to launch a Cloud Dataflow job from a FlexTemplate.",
        "properties": {
          "launchParameter": {
            "$ref": "#/$defs/LaunchFlexTemplateParameter"
          },
          "validateOnly": {
            "description": "If true, the request is validated but not actually executed. Defaults to false.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "LaunchFlexTemplateParameter": {
        "description": "Launch FlexTemplate Parameter.",
        "properties": {
          "containerSpec": {
            "$ref": "#/$defs/ContainerSpec"
          },
          "containerSpecGcsPath": {
            "description": "Cloud Storage path to a file with json serialized ContainerSpec as content.",
            "type": "string"
          },
          "environment": {
            "$ref": "#/$defs/FlexTemplateRuntimeEnvironment"
          },
          "jobName": {
            "description": "Required. The job name to use for the created job. For update job request, job name should be same as the existing running job.",
            "type": "string"
          },
          "launchOptions": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Launch options for this flex template job. This is a common set of options across languages and templates. This should not be used to pass job parameters.",
            "type": "object"
          },
          "parameters": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The parameters for FlexTemplate. Ex. {\"num_workers\":\"5\"}",
            "type": "object"
          },
          "transformNameMappings": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Use this to pass transform_name_mappings for streaming update jobs. Ex:{\"oldTransformName\":\"newTransformName\",...}'",
            "type": "object"
          },
          "update": {
            "description": "Set this to true if you are sending a request to update a running streaming job. When set, the job name should be the same as the running job.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ContainerSpec": {
        "description": "Container Spec.",
        "properties": {
          "defaultEnvironment": {
            "$ref": "#/$defs/FlexTemplateRuntimeEnvironment"
          },
          "image": {
            "description": "Name of the docker container image. E.g., gcr.io/project/some-image",
            "type": "string"
          },
          "imageRepositoryCertPath": {
            "description": "Cloud Storage path to self-signed certificate of private registry.",
            "type": "string"
          },
          "imageRepositoryPasswordSecretId": {
            "description": "Secret Manager secret id for password to authenticate to private registry.",
            "type": "string"
          },
          "imageRepositoryUsernameSecretId": {
            "description": "Secret Manager secret id for username to authenticate to private registry.",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/$defs/TemplateMetadata"
          },
          "sdkInfo": {
            "$ref": "#/$defs/SDKInfo"
          }
        },
        "type": "object"
      },
      "FlexTemplateRuntimeEnvironment": {
        "description": "The environment values to be set at runtime for flex template. LINT.IfChange",
        "properties": {
          "additionalExperiments": {
            "description": "Additional experiment flags for the job.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "additionalUserLabels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional user labels to be specified for the job. Keys and values must follow the restrictions specified in the [labeling restrictions](https://cloud.google.com/compute/docs/labeling-resources#restrictions) page. An object containing a list of \"key\": value pairs. Example: { \"name\": \"wrench\", \"mass\": \"1kg\", \"count\": \"3\" }.",
            "type": "object"
          },
          "autoscalingAlgorithm": {
            "description": "The algorithm to use for autoscaling",
            "enum": [
              "AUTOSCALING_ALGORITHM_UNKNOWN",
              "AUTOSCALING_ALGORITHM_NONE",
              "AUTOSCALING_ALGORITHM_BASIC"
            ],
            "type": "string"
          },
          "diskSizeGb": {
            "description": "Worker disk size, in gigabytes.",
            "format": "int32",
            "type": "integer"
          },
          "dumpHeapOnOom": {
            "description": "If true, when processing time is spent almost entirely on garbage collection (GC), saves a heap dump before ending the thread or process. If false, ends the thread or process without saving a heap dump. Does not save a heap dump when the Java Virtual Machine (JVM) has an out of memory error during processing. The location of the heap file is either echoed back to the user, or the user is given the opportunity to download the heap file.",
            "type": "boolean"
          },
          "enableLauncherVmSerialPortLogging": {
            "description": "If true serial port logging will be enabled for the launcher VM.",
            "type": "boolean"
          },
          "enableStreamingEngine": {
            "description": "Whether to enable Streaming Engine for the job.",
            "type": "boolean"
          },
          "flexrsGoal": {
            "description": "Set FlexRS goal for the job. https://cloud.google.com/dataflow/docs/guides/flexrs",
            "enum": [
              "FLEXRS_UNSPECIFIED",
              "FLEXRS_SPEED_OPTIMIZED",
              "FLEXRS_COST_OPTIMIZED"
            ],
            "type": "string"
          },
          "ipConfiguration": {
            "description": "Configuration for VM IPs.",
            "enum": [
              "WORKER_IP_UNSPECIFIED",
              "WORKER_IP_PUBLIC",
              "WORKER_IP_PRIVATE"
            ],
            "type": "string"
          },
          "kmsKeyName": {
            "description": "Name for the Cloud KMS key for the job. Key format is: projects//locations//keyRings//cryptoKeys/",
            "type": "string"
          },
          "launcherMachineType": {
            "description": "The machine type to use for launching the job. The default is n1-standard-1.",
            "type": "string"
          },
          "machineType": {
            "description": "The machine type to use for the job. Defaults to the value from the template if not specified.",
            "type": "string"
          },
          "maxWorkers": {
            "description": "The maximum number of Google Compute Engine instances to be made available to your pipeline during execution, from 1 to 1000.",
            "format": "int32",
            "type": "integer"
          },
          "network": {
            "description": "Network to which VMs will be assigned. If empty or unspecified, the service will use the network \"default\".",
            "type": "string"
          },
          "numWorkers": {
            "description": "The initial number of Google Compute Engine instances for the job.",
            "format": "int32",
            "type": "integer"
          },
          "saveHeapDumpsToGcsPath": {
            "description": "Cloud Storage bucket (directory) to upload heap dumps to. Enabling this field implies that `dump_heap_on_oom` is set to true.",
            "type": "string"
          },
          "sdkContainerImage": {
            "description": "Docker registry location of container image to use for the 'worker harness. Default is the container for the version of the SDK. Note this field is only valid for portable pipelines.",
            "type": "string"
          },
          "serviceAccountEmail": {
            "description": "The email address of the service account to run the job as.",
            "type": "string"
          },
          "stagingLocation": {
            "description": "The Cloud Storage path for staging local files. Must be a valid Cloud Storage URL, beginning with `gs://`.",
            "type": "string"
          },
          "streamingMode": {
            "description": "Optional. Specifies the Streaming Engine message processing guarantees. Reduces cost and latency but might result in duplicate messages committed to storage. Designed to run simple mapping streaming ETL jobs at the lowest cost. For example, Change Data Capture (CDC) to BigQuery is a canonical use case.",
            "enum": [
              "STREAMING_MODE_UNSPECIFIED",
              "STREAMING_MODE_EXACTLY_ONCE",
              "STREAMING_MODE_AT_LEAST_ONCE"
            ],
            "type": "string"
          },
          "subnetwork": {
            "description": "Subnetwork to which VMs will be assigned, if desired. You can specify a subnetwork using either a complete URL or an abbreviated path. Expected to be of the form \"https://www.googleapis.com/compute/v1/projects/HOST_PROJECT_ID/regions/REGION/subnetworks/SUBNETWORK\" or \"regions/REGION/subnetworks/SUBNETWORK\". If the subnetwork is located in a Shared VPC network, you must use the complete URL.",
            "type": "string"
          },
          "tempLocation": {
            "description": "The Cloud Storage path to use for temporary files. Must be a valid Cloud Storage URL, beginning with `gs://`.",
            "type": "string"
          },
          "workerRegion": {
            "description": "The Compute Engine region (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. \"us-west1\". Mutually exclusive with worker_zone. If neither worker_region nor worker_zone is specified, default to the control plane's region.",
            "type": "string"
          },
          "workerZone": {
            "description": "The Compute Engine zone (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. \"us-west1-a\". Mutually exclusive with worker_region. If neither worker_region nor worker_zone is specified, a zone in the control plane's region is chosen based on available capacity. If both `worker_zone` and `zone` are set, `worker_zone` takes precedence.",
            "type": "string"
          },
          "zone": {
            "description": "The Compute Engine [availability zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones) for launching worker instances to run your pipeline. In the future, worker_zone will take precedence.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "TemplateMetadata": {
        "description": "Metadata describing a template.",
        "properties": {
          "description": {
            "description": "Optional. A description of the template.",
            "type": "string"
          },
          "name": {
            "description": "Required. The name of the template.",
            "type": "string"
          },
          "parameters": {
            "description": "The parameters for the template.",
            "items": {
              "$ref": "#/$defs/ParameterMetadata"
            },
            "type": "array"
          },
          "streaming": {
            "description": "Optional. Indicates if the template is streaming or not.",
            "type": "boolean"
          },
          "supportsAtLeastOnce": {
            "description": "Optional. Indicates if the streaming template supports at least once mode.",
            "type": "boolean"
          },
          "supportsExactlyOnce": {
            "description": "Optional. Indicates if the streaming template supports exactly once mode.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ParameterMetadata": {
        "description": "Metadata for a specific parameter.",
        "properties": {
          "customMetadata": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Optional. Additional metadata for describing this parameter.",
            "type": "object"
          },
          "defaultValue": {
            "description": "Optional. The default values will pre-populate the parameter with the given value from the proto. If default_value is left empty, the parameter will be populated with a default of the relevant type, e.g. false for a boolean.",
            "type": "string"
          },
          "enumOptions": {
            "description": "Optional. The options shown when ENUM ParameterType is specified.",
            "items": {
              "$ref": "#/$defs/ParameterMetadataEnumOption"
            },
            "type": "array"
          },
          "groupName": {
            "description": "Optional. Specifies a group name for this parameter to be rendered under. Group header text will be rendered exactly as specified in this field. Only considered when parent_name is NOT provided.",
            "type": "string"
          },
          "helpText": {
            "description": "Required. The help text to display for the parameter.",
            "type": "string"
          },
          "hiddenUi": {
            "description": "Optional. Whether the parameter should be hidden in the UI.",
            "type": "boolean"
          },
          "isOptional": {
            "description": "Optional. Whether the parameter is optional. Defaults to false.",
            "type": "boolean"
          },
          "label": {
            "description": "Required. The label to display for the parameter.",
            "type": "string"
          },
          "name": {
            "description": "Required. The name of the parameter.",
            "type": "string"
          },
          "paramType": {
            "description": "Optional. The type of the parameter. Used for selecting input picker.",
            "enum": [
              "DEFAULT",
              "TEXT",
              "GCS_READ_BUCKET",
              "GCS_WRITE_BUCKET",
              "GCS_READ_FILE",
              "GCS_WRITE_FILE",
              "GCS_READ_FOLDER",
              "GCS_WRITE_FOLDER",
              "PUBSUB_TOPIC",
              "PUBSUB_SUBSCRIPTION",
              "BIGQUERY_TABLE",
              "JAVASCRIPT_UDF_FILE",
              "SERVICE_ACCOUNT",
              "MACHINE_TYPE",
              "KMS_KEY_NAME",
              "WORKER_REGION",
              "WORKER_ZONE",
              "BOOLEAN",
              "ENUM",
              "NUMBER"
            ],
            "type": "string"
          },
          "parentName": {
            "description": "Optional. Specifies the name of the parent parameter. Used in conjunction with 'parent_trigger_values' to make this parameter conditional (will only be rendered conditionally). Should be mappable to a ParameterMetadata.name field.",
            "type": "string"
          },
          "parentTriggerValues": {
            "description": "Optional. The value(s) of the 'parent_name' parameter which will trigger this parameter to be shown. If left empty, ANY non-empty value in parent_name will trigger this parameter to be shown. Only considered when this parameter is conditional (when 'parent_name' has been provided).",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "regexes": {
            "description": "Optional. Regexes that the parameter must match.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ParameterMetadataEnumOption": {
        "description": "ParameterMetadataEnumOption specifies the option shown in the enum form.",
        "properties": {
          "description": {
            "description": "Optional. The description to display for the enum option.",
            "type": "string"
          },
          "label": {
            "description": "Optional. The label to display for the enum option.",
            "type": "string"
          },
          "value": {
            "description": "Required. The value of the enum option.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SDKInfo": {
        "description": "SDK Information.",
        "properties": {
          "language": {
            "description": "Required. The SDK Language.",
            "enum": [
              "UNKNOWN",
              "JAVA",
              "PYTHON",
              "GO"
            ],
            "type": "string"
          },
          "version": {
            "description": "Optional. The SDK version.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://dataflow.googleapis.com//v1b3/projects/{projectId}/locations/{location}/flexTemplates:launch{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Response to the request to launch a job from Flex Template.",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**job**: Defines a job to be run by the Cloud Dataflow service. Do not enter confidential information when you supply string values using the API.",
              {
                "$ul": [
                  "**clientRequestId**: The client's unique identifier of the job, re-used across retried attempts. If this field is set, the service will ensure its uniqueness. The request to create a job will fail if the service has knowledge of a previously submitted job with the same client's ID and job name. The caller may use this field to ensure idempotence of job creation across retried attempts to create a job. By default, the field is empty and, in that case, the service ignores it.",
                  "**createTime**: The timestamp when the job was initially created. Immutable and set by the Cloud Dataflow service.",
                  "**createdFromSnapshotId**: If this is specified, the job's initial state is populated from the given snapshot.",
                  "**currentState**: The current state of the job. Jobs are created in the `JOB_STATE_STOPPED` state unless otherwise specified. A job in the `JOB_STATE_RUNNING` state may asynchronously enter a terminal state. After a job has reached a terminal state, no further state updates may be made. This field might be mutated by the Dataflow service; callers cannot mutate it.",
                  "**currentStateTime**: The timestamp associated with the current state.",
                  [
                    "**environment**: Describes the environment in which a Dataflow Job runs.",
                    {
                      "$ul": [
                        "**clusterManagerApiService**: The type of cluster manager API to use. If unknown or unspecified, the service will attempt to choose a reasonable default. This should be in the form of the API service name, e.g. \"compute.googleapis.com\".",
                        "**dataset**: The dataset for the current project where various workflow related tables are stored. The supported resource type is: Google BigQuery: bigquery.googleapis.com/{dataset}",
                        [
                          "**debugOptions**: Describes any options that have an effect on the debugging of pipelines.",
                          {
                            "$ul": [
                              [
                                "**dataSampling**: Configuration options for sampling elements.",
                                {
                                  "$ul": [
                                    "**behaviors**: List of given sampling behaviors to enable. For example, specifying behaviors = [ALWAYS_ON] samples in-flight elements but does not sample exceptions. Can be used to specify multiple behaviors like, behaviors = [ALWAYS_ON, EXCEPTIONS] for specifying periodic sampling and exception sampling. If DISABLED is in the list, then sampling will be disabled and ignore the other given behaviors. Ordering does not matter."
                                  ]
                                }
                              ],
                              "**enableHotKeyLogging**: When true, enables the logging of the literal hot key to the user's Cloud Logging."
                            ]
                          }
                        ],
                        "**experiments**: The list of experiments to enable. This field should be used for SDK related experiments and not for service related experiments. The proper field for service related experiments is service_options.",
                        "**flexResourceSchedulingGoal**: Which Flexible Resource Scheduling mode to run in.",
                        "**internalExperiments**: Experimental settings.",
                        "**sdkPipelineOptions**: The Cloud Dataflow SDK pipeline options specified by the user. These options are passed through the service and are used to recreate the SDK pipeline options on the worker in a language agnostic and platform independent way.",
                        "**serviceAccountEmail**: Identity to run virtual machines as. Defaults to the default account.",
                        "**serviceKmsKeyName**: If set, contains the Cloud KMS key identifier used to encrypt data at rest, AKA a Customer Managed Encryption Key (CMEK). Format: projects/PROJECT_ID/locations/LOCATION/keyRings/KEY_RING/cryptoKeys/KEY",
                        "**serviceOptions**: The list of service options to enable. This field should be used for service related experiments only. These experiments, when graduating to GA, should be replaced by dedicated fields or become default (i.e. always on).",
                        "**shuffleMode**: Output only. The shuffle mode used for the job.",
                        "**streamingMode**: Optional. Specifies the Streaming Engine message processing guarantees. Reduces cost and latency but might result in duplicate messages committed to storage. Designed to run simple mapping streaming ETL jobs at the lowest cost. For example, Change Data Capture (CDC) to BigQuery is a canonical use case.",
                        "**tempStoragePrefix**: The prefix of the resources the system should use for temporary storage. The system will append the suffix \"/temp-{JOBNAME} to this resource prefix, where {JOBNAME} is the value of the job_name field. The resulting bucket and object prefix is used as the prefix of the resources used to store temporary data needed during the job execution. NOTE: This will override the value in taskrunner_settings. The supported resource type is: Google Cloud Storage: storage.googleapis.com/{bucket}/{object} bucket.storage.googleapis.com/{object}",
                        "**useStreamingEngineResourceBasedBilling**: Output only. Whether the job uses the Streaming Engine resource-based billing model.",
                        "**userAgent**: A description of the process that generated the request.",
                        "**version**: A structure describing which components and their versions of the service are required in order to run the job.",
                        "**workerPools**: The worker pools. At least one \"harness\" worker pool must be specified in order for the job to have workers.",
                        "**workerRegion**: The Compute Engine region (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. \"us-west1\". Mutually exclusive with worker_zone. If neither worker_region nor worker_zone is specified, default to the control plane's region.",
                        "**workerZone**: The Compute Engine zone (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. \"us-west1-a\". Mutually exclusive with worker_region. If neither worker_region nor worker_zone is specified, a zone in the control plane's region is chosen based on available capacity."
                      ]
                    }
                  ],
                  [
                    "**executionInfo**: Additional information about how a Cloud Dataflow job will be executed that isn't contained in the submitted job.",
                    {
                      "$ul": [
                        "**stages**: A mapping from each stage to the information about that stage."
                      ]
                    }
                  ],
                  "**id**: The unique ID of this job. This field is set by the Dataflow service when the job is created, and is immutable for the life of the job.",
                  [
                    "**jobMetadata**: Metadata available primarily for filtering jobs. Will be included in the ListJob response and Job SUMMARY view.",
                    {
                      "$ul": [
                        "**bigTableDetails**: Identification of a Cloud Bigtable source used in the Dataflow job.",
                        "**bigqueryDetails**: Identification of a BigQuery source used in the Dataflow job.",
                        "**datastoreDetails**: Identification of a Datastore source used in the Dataflow job.",
                        "**fileDetails**: Identification of a File source used in the Dataflow job.",
                        "**pubsubDetails**: Identification of a Pub/Sub source used in the Dataflow job.",
                        [
                          "**sdkVersion**: The version of the SDK used to run the job.",
                          {
                            "$ul": [
                              "**bugs**: Output only. Known bugs found in this SDK version.",
                              "**sdkSupportStatus**: The support status for this SDK version.",
                              "**version**: The version of the SDK used to run the job.",
                              "**versionDisplayName**: A readable string describing the version of the SDK."
                            ]
                          }
                        ],
                        "**spannerDetails**: Identification of a Spanner source used in the Dataflow job.",
                        "**userDisplayProperties**: List of display properties to help UI filter jobs."
                      ]
                    }
                  ],
                  "**labels**: User-defined labels for this job. The labels map can contain no more than 64 entries. Entries of the labels map are UTF8 strings that comply with the following restrictions: * Keys must conform to regexp: \\p{Ll}\\p{Lo}{0,62} * Values must conform to regexp: [\\p{Ll}\\p{Lo}\\p{N}_-]{0,63} * Both keys and values are additionally constrained to be <= 128 bytes in size.",
                  "**location**: The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains this job.",
                  "**name**: The user-specified Dataflow job name. Only one active job with a given name can exist in a project within one region at any given time. Jobs in different regions can have the same name. If a caller attempts to create a job with the same name as an active job that already exists, the attempt returns the existing job. The name must match the regular expression `[a-z]([-a-z0-9]{0,1022}[a-z0-9])?`",
                  [
                    "**pipelineDescription**: A descriptive representation of submitted pipeline as well as the executed form. This data is provided by the Dataflow service for ease of visualizing the pipeline and interpreting Dataflow provided metrics.",
                    {
                      "$ul": [
                        "**displayData**: Pipeline level display data.",
                        "**executionPipelineStage**: Description of each stage of execution of the pipeline.",
                        "**originalPipelineTransform**: Description of each transform in the pipeline and collections between them.",
                        "**stepNamesHash**: A hash value of the submitted pipeline portable graph step names if exists."
                      ]
                    }
                  ],
                  "**projectId**: The ID of the Google Cloud project that the job belongs to.",
                  "**replaceJobId**: If this job is an update of an existing job, this field is the job ID of the job it replaced. When sending a `CreateJobRequest`, you can update a job by specifying it here. The job named here is stopped, and its intermediate state is transferred to this job.",
                  "**replacedByJobId**: If another job is an update of this job (and thus, this job is in `JOB_STATE_UPDATED`), this field contains the ID of that job.",
                  "**requestedState**: The job's requested state. Applies to `UpdateJob` requests. Set `requested_state` with `UpdateJob` requests to switch between the states `JOB_STATE_STOPPED` and `JOB_STATE_RUNNING`. You can also use `UpdateJob` requests to change a job's state from `JOB_STATE_RUNNING` to `JOB_STATE_CANCELLED`, `JOB_STATE_DONE`, or `JOB_STATE_DRAINED`. These states irrevocably terminate the job if it hasn't already reached a terminal state. This field has no effect on `CreateJob` requests.",
                  [
                    "**runtimeUpdatableParams**: Additional job parameters that can only be updated during runtime using the projects.jobs.update method. These fields have no effect when specified during job creation.",
                    {
                      "$ul": [
                        "**maxNumWorkers**: The maximum number of workers to cap autoscaling at. This field is currently only supported for Streaming Engine jobs.",
                        "**minNumWorkers**: The minimum number of workers to scale down to. This field is currently only supported for Streaming Engine jobs.",
                        "**workerUtilizationHint**: Target worker utilization, compared against the aggregate utilization of the worker pool by autoscaler, to determine upscaling and downscaling when absent other constraints such as backlog."
                      ]
                    }
                  ],
                  "**satisfiesPzi**: Output only. Reserved for future use. This field is set only in responses from the server; it is ignored if it is set in any requests.",
                  "**satisfiesPzs**: Reserved for future use. This field is set only in responses from the server; it is ignored if it is set in any requests.",
                  "**stageStates**: This field may be mutated by the Cloud Dataflow service; callers cannot mutate it.",
                  "**startTime**: The timestamp when the job was started (transitioned to JOB_STATE_PENDING). Flexible resource scheduling jobs are started with some delay after job creation, so start_time is unset before start and is updated when the job is started by the Cloud Dataflow service. For other jobs, start_time always equals to create_time and is immutable and set by the Cloud Dataflow service.",
                  "**steps**: Exactly one of step or steps_location should be specified. The top-level steps that constitute the entire job. Only retrieved with JOB_VIEW_ALL.",
                  "**stepsLocation**: The Cloud Storage location where the steps are stored.",
                  "**tempFiles**: A set of files the system should be aware of that are used for temporary storage. These temporary files will be removed on job completion. No duplicates are allowed. No file patterns are supported. The supported files are: Google Cloud Storage: storage.googleapis.com/{bucket}/{object} bucket.storage.googleapis.com/{object}",
                  "**transformNameMapping**: The map of transform name prefixes of the job to be replaced to the corresponding name prefixes of the new job.",
                  "**type**: The type of Dataflow job."
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
