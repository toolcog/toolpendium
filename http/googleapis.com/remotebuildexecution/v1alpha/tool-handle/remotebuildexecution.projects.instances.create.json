{
  "name": "remotebuildexecution_projects_instances_create",
  "description": "Creates a new instance in the specified region. Returns a long running operation which contains an instance on completion. While the long running operation is in progress, any call to `GetInstance` returns an instance in state `CREATING`.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. Resource name of the project containing the instance. Format: `projects/[PROJECT_ID]`."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateInstanceRequest"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "GoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateInstanceRequest": {
        "description": "The request used for `CreateInstance`.",
        "properties": {
          "instance": {
            "$ref": "#/$defs/GoogleDevtoolsRemotebuildexecutionAdminV1alphaInstance"
          },
          "instanceId": {
            "description": "Required. ID of the created instance. A valid `instance_id` must: be 6-50 characters long, contain only lowercase letters, digits, hyphens and underscores, start with a lowercase letter, and end with a lowercase letter or a digit.",
            "type": "string"
          },
          "parent": {
            "description": "Required. Resource name of the project containing the instance. Format: `projects/[PROJECT_ID]`.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleDevtoolsRemotebuildexecutionAdminV1alphaInstance": {
        "description": "Instance conceptually encapsulates all Remote Build Execution resources for remote builds. An instance consists of storage and compute resources (for example, `ContentAddressableStorage`, `ActionCache`, `WorkerPools`) used for running remote builds. All Remote Build Execution API calls are scoped to an instance.",
        "properties": {
          "featurePolicy": {
            "$ref": "#/$defs/GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy"
          },
          "location": {
            "description": "The location is a GCP region. Currently only `us-central1` is supported.",
            "type": "string"
          },
          "loggingEnabled": {
            "description": "Output only. Whether stack driver logging is enabled for the instance.",
            "readOnly": true,
            "type": "boolean"
          },
          "name": {
            "description": "Output only. Instance resource name formatted as: `projects/[PROJECT_ID]/instances/[INSTANCE_ID]`. Name should not be populated when creating an instance since it is provided in the `instance_id` field.",
            "readOnly": true,
            "type": "string"
          },
          "schedulerNotificationConfig": {
            "$ref": "#/$defs/GoogleDevtoolsRemotebuildexecutionAdminV1alphaSchedulerNotificationConfig"
          },
          "state": {
            "description": "Output only. State of the instance.",
            "enum": [
              "STATE_UNSPECIFIED",
              "CREATING",
              "RUNNING",
              "INACTIVE"
            ],
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicy": {
        "description": "FeaturePolicy defines features allowed to be used on RBE instances, as well as instance-wide behavior changes that take effect without opt-in or opt-out at usage time.",
        "properties": {
          "actionHermeticity": {
            "description": "Defines the hermeticity policy for actions on this instance. DO NOT USE: Experimental / unlaunched feature.",
            "enum": [
              "ACTION_HERMETICITY_UNSPECIFIED",
              "ACTION_HERMETICITY_OFF",
              "ACTION_HERMETICITY_ENFORCED",
              "ACTION_HERMETICITY_BEST_EFFORT"
            ],
            "type": "string"
          },
          "actionIsolation": {
            "description": "Defines the isolation policy for actions on this instance. DO NOT USE: Experimental / unlaunched feature.",
            "enum": [
              "ACTION_ISOLATION_UNSPECIFIED",
              "ACTION_ISOLATION_OFF",
              "ACTION_ISOLATION_ENFORCED"
            ],
            "type": "string"
          },
          "containerImageSources": {
            "$ref": "#/$defs/GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature"
          },
          "dockerAddCapabilities": {
            "$ref": "#/$defs/GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature"
          },
          "dockerChrootPath": {
            "$ref": "#/$defs/GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature"
          },
          "dockerNetwork": {
            "$ref": "#/$defs/GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature"
          },
          "dockerPrivileged": {
            "$ref": "#/$defs/GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature"
          },
          "dockerRunAsContainerProvidedUser": {
            "$ref": "#/$defs/GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature"
          },
          "dockerRunAsRoot": {
            "$ref": "#/$defs/GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature"
          },
          "dockerRuntime": {
            "$ref": "#/$defs/GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature"
          },
          "dockerSiblingContainers": {
            "$ref": "#/$defs/GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature"
          },
          "dockerUlimits": {
            "$ref": "#/$defs/GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature"
          },
          "linuxExecution": {
            "description": "Defines how Linux actions are allowed to execute. DO NOT USE: Experimental / unlaunched feature.",
            "enum": [
              "LINUX_EXECUTION_UNSPECIFIED",
              "LINUX_EXECUTION_FORBIDDEN",
              "LINUX_EXECUTION_UNRESTRICTED",
              "LINUX_EXECUTION_HARDENED_GVISOR",
              "LINUX_EXECUTION_HARDENED_GVISOR_OR_TERMINAL"
            ],
            "type": "string"
          },
          "linuxIsolation": {
            "description": "linux_isolation allows overriding the docker runtime used for containers started on Linux.",
            "enum": [
              "LINUX_ISOLATION_UNSPECIFIED",
              "GVISOR",
              "OFF"
            ],
            "type": "string"
          },
          "macExecution": {
            "description": "Defines how Windows actions are allowed to execute. DO NOT USE: Experimental / unlaunched feature.",
            "enum": [
              "MAC_EXECUTION_UNSPECIFIED",
              "MAC_EXECUTION_FORBIDDEN"
            ],
            "type": "string"
          },
          "vmVerification": {
            "description": "Whether to verify CreateBotSession and UpdateBotSession from the bot.",
            "enum": [
              "VM_VERIFICATION_UNSPECIFIED",
              "VM_VERIFICATION_GCP_TOKEN",
              "VM_VERIFICATION_OFF"
            ],
            "type": "string"
          },
          "windowsExecution": {
            "description": "Defines how Windows actions are allowed to execute. DO NOT USE: Experimental / unlaunched feature.",
            "enum": [
              "WINDOWS_EXECUTION_UNSPECIFIED",
              "WINDOWS_EXECUTION_FORBIDDEN",
              "WINDOWS_EXECUTION_UNRESTRICTED",
              "WINDOWS_EXECUTION_TERMINAL"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature": {
        "description": "Defines whether a feature can be used or what values are accepted.",
        "properties": {
          "allowedValues": {
            "description": "A list of acceptable values. Only effective when the policy is `RESTRICTED`.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "policy": {
            "description": "The policy of the feature.",
            "enum": [
              "POLICY_UNSPECIFIED",
              "ALLOWED",
              "FORBIDDEN",
              "RESTRICTED"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleDevtoolsRemotebuildexecutionAdminV1alphaSchedulerNotificationConfig": {
        "description": "Defines configurations for an instance's scheduler notifications, where a target Pub/Sub topic will be notified whenever a task (e.g. an action or reservation) completes on this instance.",
        "properties": {
          "topic": {
            "description": "The Pub/Sub topic resource name to issue notifications to. Note that the topic does not need to be owned by the same project as this instance. Format: `projects//topics/`.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://admin-remotebuildexecution.googleapis.com//v1alpha/{parent}/instances{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "This resource represents a long-running operation that is the result of a network API call.",
        "**Key properties:**",
        {
          "$ul": [
            "**done**: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
            [
              "**error**: The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
              {
                "$ul": [
                  "**code**: The status code, which should be an enum value of google.rpc.Code.",
                  "**details**: A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                  "**message**: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                ]
              }
            ],
            "**metadata**: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
            "**name**: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
            "**response**: The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
