{
  "name": "workflowexecutions_projects_locations_workflows_executions_stepEntries_get",
  "description": "Gets a step entry.",
  "parameters": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "Required. The name of the step entry to retrieve. Format: projects/{project}/locations/{location}/workflows/{workflow}/executions/{execution}/stepEntries/{step_entry}"
      },
      "view": {
        "enum": [
          "EXECUTION_VIEW_UNSPECIFIED",
          "BASIC",
          "FULL"
        ],
        "type": "string",
        "description": "Optional. A view defining which fields should be filled in the returned execution. The API will default to the FULL view."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      }
    },
    "required": [
      "name"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://workflowexecutions.googleapis.com//v1/{name}{?view,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "An StepEntry contains debugging information for a step transition in a workflow execution.",
        "**Key properties:**",
        {
          "$ul": [
            "**createTime**: Output only. The creation time of the step entry.",
            "**entryId**: Output only. The numeric ID of this step entry, used for navigation.",
            [
              "**exception**: Exception describes why the step entry failed.",
              {
                "$ul": [
                  "**payload**: Error message represented as a JSON string."
                ]
              }
            ],
            "**name**: Output only. The full resource name of the step entry. Each step entry has a unique entry ID, which is a monotonically increasing counter. Step entry names have the format: `projects/{project}/locations/{location}/workflows/{workflow}/executions/{execution}/stepEntries/{step_entry}`.",
            [
              "**navigationInfo**: NavigationInfo describes what steps if any come before or after this step, or what steps are parents or children of this step.",
              {
                "$ul": [
                  "**children**: Step entries that can be reached by \"stepping into\" e.g. a subworkflow call.",
                  "**next**: The index of the next step in the current workflow, if any.",
                  "**parent**: The step entry, if any, that can be reached by \"stepping out\" of the current workflow being executed.",
                  "**previous**: The index of the previous step in the current workflow, if any."
                ]
              }
            ],
            "**routine**: Output only. The name of the routine this step entry belongs to. A routine name is the subworkflow name defined in the YAML source code. The top level routine name is `main`.",
            "**state**: Output only. The state of the step entry.",
            "**step**: Output only. The name of the step this step entry belongs to.",
            [
              "**stepEntryMetadata**: StepEntryMetadata contains metadata information about this step.",
              {
                "$ul": [
                  "**progressNumber**: Progress number represents the current state of the current progress. eg: A step entry represents the 4th iteration in a progress of PROGRESS_TYPE_FOR.",
                  "**progressType**: Progress type of this step entry.",
                  "**threadId**: Child thread id that this step entry belongs to."
                ]
              }
            ],
            "**stepType**: Output only. The type of the step this step entry belongs to.",
            "**updateTime**: Output only. The most recently updated time of the step entry."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
