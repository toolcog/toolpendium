{
  "name": "workflowexecutions_projects_locations_workflows_executions_cancel",
  "description": "Cancels an execution of the given name.",
  "parameters": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "Required. Name of the execution to be cancelled. Format: projects/{project}/locations/{location}/workflows/{workflow}/executions/{execution}"
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/CancelExecutionRequest"
      }
    },
    "required": [
      "name"
    ],
    "$defs": {
      "CancelExecutionRequest": {
        "description": "Request for the CancelExecution method.",
        "properties": {},
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://workflowexecutions.googleapis.com//v1/{name}:cancel{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A running instance of a [Workflow](/workflows/docs/reference/rest/v1/projects.locations.workflows).",
        "**Key properties:**",
        {
          "$ul": [
            "**argument**: Input parameters of the execution represented as a JSON string. The size limit is 32KB. *Note*: If you are using the REST API directly to run your workflow, you must escape any JSON string value of `argument`. Example: `'{\"argument\":\"{\\\"firstName\\\":\\\"FIRST\\\",\\\"lastName\\\":\\\"LAST\\\"}\"}'`",
            "**callLogLevel**: The call logging level associated to this execution.",
            "**createTime**: Output only. Marks the creation of the execution.",
            "**disableConcurrencyQuotaOverflowBuffering**: Optional. If set to true, the execution will not be backlogged when the concurrency quota is exhausted. The backlog execution starts when the concurrency quota becomes available.",
            "**duration**: Output only. Measures the duration of the execution.",
            "**endTime**: Output only. Marks the end of execution, successful or not.",
            [
              "**error**: Error describes why the execution was abnormally terminated.",
              {
                "$ul": [
                  "**context**: Human-readable stack trace string.",
                  "**payload**: Error message and data returned represented as a JSON string.",
                  [
                    "**stackTrace**: A collection of stack elements (frames) where an error occurred.",
                    {
                      "$ul": [
                        "**elements**: An array of stack elements."
                      ]
                    }
                  ]
                ]
              }
            ],
            "**labels**: Labels associated with this execution. Labels can contain at most 64 entries. Keys and values can be no longer than 63 characters and can only contain lowercase letters, numeric characters, underscores, and dashes. Label keys must start with a letter. International characters are allowed. By default, labels are inherited from the workflow but are overridden by any labels associated with the execution.",
            "**name**: Output only. The resource name of the execution. Format: projects/{project}/locations/{location}/workflows/{workflow}/executions/{execution}",
            "**result**: Output only. Output of the execution represented as a JSON string. The value can only be present if the execution's state is `SUCCEEDED`.",
            "**startTime**: Output only. Marks the beginning of execution.",
            "**state**: Output only. Current state of the execution.",
            [
              "**stateError**: Describes an error related to the current state of the Execution resource.",
              {
                "$ul": [
                  "**details**: Provides specifics about the error.",
                  "**type**: The type of this state error."
                ]
              }
            ],
            [
              "**status**: Represents the current status of this execution.",
              {
                "$ul": [
                  "**currentSteps**: A list of currently executing or last executed step names for the workflow execution currently running. If the workflow has succeeded or failed, this is the last attempted or executed step. Presently, if the current step is inside a subworkflow, the list only includes that step. In the future, the list will contain items for each step in the call stack, starting with the outermost step in the `main` subworkflow, and ending with the most deeply nested step."
                ]
              }
            ],
            "**workflowRevisionId**: Output only. Revision of the workflow this execution is using."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
