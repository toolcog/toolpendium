{
  "name": "analyticsdata_properties_runPivotReport",
  "description": "Returns a customized pivot report of your Google Analytics event data. Pivot reports are more advanced and expressive formats than regular reports. In a pivot report, dimensions are only visible if they are included in a pivot. Multiple pivots can be specified to further dissect your data.",
  "parameters": {
    "type": "object",
    "properties": {
      "property": {
        "type": "string",
        "description": "A Google Analytics GA4 property identifier whose events are tracked. Specified in the URL path and not the body. To learn more, see [where to find your Property ID](https://developers.google.com/analytics/devguides/reporting/data/v1/property-id). Within a batch request, this property should either be unspecified or consistent with the batch-level property. Example: properties/1234"
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/RunPivotReportRequest"
      }
    },
    "required": [
      "property"
    ],
    "$defs": {
      "RunPivotReportRequest": {
        "description": "The request to generate a pivot report.",
        "properties": {
          "cohortSpec": {
            "$ref": "#/$defs/CohortSpec"
          },
          "currencyCode": {
            "description": "A currency code in ISO4217 format, such as \"AED\", \"USD\", \"JPY\". If the field is empty, the report uses the property's default currency.",
            "type": "string"
          },
          "dateRanges": {
            "description": "The date range to retrieve event data for the report. If multiple date ranges are specified, event data from each date range is used in the report. A special dimension with field name \"dateRange\" can be included in a Pivot's field names; if included, the report compares between date ranges. In a cohort request, this `dateRanges` must be unspecified.",
            "items": {
              "$ref": "#/$defs/DateRange"
            },
            "type": "array"
          },
          "dimensionFilter": {
            "$ref": "#/$defs/FilterExpression"
          },
          "dimensions": {
            "description": "The dimensions requested. All defined dimensions must be used by one of the following: dimension_expression, dimension_filter, pivots, order_bys.",
            "items": {
              "$ref": "#/$defs/Dimension"
            },
            "type": "array"
          },
          "keepEmptyRows": {
            "description": "If false or unspecified, each row with all metrics equal to 0 will not be returned. If true, these rows will be returned if they are not separately removed by a filter. Regardless of this `keep_empty_rows` setting, only data recorded by the Google Analytics (GA4) property can be displayed in a report. For example if a property never logs a `purchase` event, then a query for the `eventName` dimension and `eventCount` metric will not have a row eventName: \"purchase\" and eventCount: 0.",
            "type": "boolean"
          },
          "metricFilter": {
            "$ref": "#/$defs/FilterExpression"
          },
          "metrics": {
            "description": "The metrics requested, at least one metric needs to be specified. All defined metrics must be used by one of the following: metric_expression, metric_filter, order_bys.",
            "items": {
              "$ref": "#/$defs/Metric"
            },
            "type": "array"
          },
          "pivots": {
            "description": "Describes the visual format of the report's dimensions in columns or rows. The union of the fieldNames (dimension names) in all pivots must be a subset of dimension names defined in Dimensions. No two pivots can share a dimension. A dimension is only visible if it appears in a pivot.",
            "items": {
              "$ref": "#/$defs/Pivot"
            },
            "type": "array"
          },
          "property": {
            "description": "A Google Analytics GA4 property identifier whose events are tracked. Specified in the URL path and not the body. To learn more, see [where to find your Property ID](https://developers.google.com/analytics/devguides/reporting/data/v1/property-id). Within a batch request, this property should either be unspecified or consistent with the batch-level property. Example: properties/1234",
            "type": "string"
          },
          "returnPropertyQuota": {
            "description": "Toggles whether to return the current state of this Analytics Property's quota. Quota is returned in [PropertyQuota](#PropertyQuota).",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "CohortSpec": {
        "description": "The specification of cohorts for a cohort report. Cohort reports create a time series of user retention for the cohort. For example, you could select the cohort of users that were acquired in the first week of September and follow that cohort for the next six weeks. Selecting the users acquired in the first week of September cohort is specified in the `cohort` object. Following that cohort for the next six weeks is specified in the `cohortsRange` object. For examples, see [Cohort Report Examples](https://developers.google.com/analytics/devguides/reporting/data/v1/advanced#cohort_report_examples). The report response could show a weekly time series where say your app has retained 60% of this cohort after three weeks and 25% of this cohort after six weeks. These two percentages can be calculated by the metric `cohortActiveUsers/cohortTotalUsers` and will be separate rows in the report.",
        "properties": {
          "cohortReportSettings": {
            "$ref": "#/$defs/CohortReportSettings"
          },
          "cohorts": {
            "description": "Defines the selection criteria to group users into cohorts. Most cohort reports define only a single cohort. If multiple cohorts are specified, each cohort can be recognized in the report by their name.",
            "items": {
              "$ref": "#/$defs/Cohort"
            },
            "type": "array"
          },
          "cohortsRange": {
            "$ref": "#/$defs/CohortsRange"
          }
        },
        "type": "object"
      },
      "CohortReportSettings": {
        "description": "Optional settings of a cohort report.",
        "properties": {
          "accumulate": {
            "description": "If true, accumulates the result from first touch day to the end day. Not supported in `RunReportRequest`.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "Cohort": {
        "description": "Defines a cohort selection criteria. A cohort is a group of users who share a common characteristic. For example, users with the same `firstSessionDate` belong to the same cohort.",
        "properties": {
          "dateRange": {
            "$ref": "#/$defs/DateRange"
          },
          "dimension": {
            "description": "Dimension used by the cohort. Required and only supports `firstSessionDate`.",
            "type": "string"
          },
          "name": {
            "description": "Assigns a name to this cohort. The dimension `cohort` is valued to this name in a report response. If set, cannot begin with `cohort_` or `RESERVED_`. If not set, cohorts are named by their zero based index `cohort_0`, `cohort_1`, etc.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DateRange": {
        "description": "A contiguous set of days: `startDate`, `startDate + 1`, ..., `endDate`. Requests are allowed up to 4 date ranges.",
        "properties": {
          "endDate": {
            "description": "The inclusive end date for the query in the format `YYYY-MM-DD`. Cannot be before `start_date`. The format `NdaysAgo`, `yesterday`, or `today` is also accepted, and in that case, the date is inferred based on the property's reporting time zone.",
            "type": "string"
          },
          "name": {
            "description": "Assigns a name to this date range. The dimension `dateRange` is valued to this name in a report response. If set, cannot begin with `date_range_` or `RESERVED_`. If not set, date ranges are named by their zero based index in the request: `date_range_0`, `date_range_1`, etc.",
            "type": "string"
          },
          "startDate": {
            "description": "The inclusive start date for the query in the format `YYYY-MM-DD`. Cannot be after `end_date`. The format `NdaysAgo`, `yesterday`, or `today` is also accepted, and in that case, the date is inferred based on the property's reporting time zone.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CohortsRange": {
        "description": "Configures the extended reporting date range for a cohort report. Specifies an offset duration to follow the cohorts over.",
        "properties": {
          "endOffset": {
            "description": "Required. `endOffset` specifies the end date of the extended reporting date range for a cohort report. `endOffset` can be any positive integer but is commonly set to 5 to 10 so that reports contain data on the cohort for the next several granularity time periods. If `granularity` is `DAILY`, the `endDate` of the extended reporting date range is `endDate` of the cohort plus `endOffset` days. If `granularity` is `WEEKLY`, the `endDate` of the extended reporting date range is `endDate` of the cohort plus `endOffset * 7` days. If `granularity` is `MONTHLY`, the `endDate` of the extended reporting date range is `endDate` of the cohort plus `endOffset * 30` days.",
            "format": "int32",
            "type": "integer"
          },
          "granularity": {
            "description": "Required. The granularity used to interpret the `startOffset` and `endOffset` for the extended reporting date range for a cohort report.",
            "enum": [
              "GRANULARITY_UNSPECIFIED",
              "DAILY",
              "WEEKLY",
              "MONTHLY"
            ],
            "type": "string"
          },
          "startOffset": {
            "description": "`startOffset` specifies the start date of the extended reporting date range for a cohort report. `startOffset` is commonly set to 0 so that reports contain data from the acquisition of the cohort forward. If `granularity` is `DAILY`, the `startDate` of the extended reporting date range is `startDate` of the cohort plus `startOffset` days. If `granularity` is `WEEKLY`, the `startDate` of the extended reporting date range is `startDate` of the cohort plus `startOffset * 7` days. If `granularity` is `MONTHLY`, the `startDate` of the extended reporting date range is `startDate` of the cohort plus `startOffset * 30` days.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "FilterExpression": {
        "description": "To express dimension or metric filters. The fields in the same FilterExpression need to be either all dimensions or all metrics.",
        "properties": {
          "andGroup": {
            "$ref": "#/$defs/FilterExpressionList"
          },
          "filter": {
            "$ref": "#/$defs/Filter"
          },
          "notExpression": {
            "$ref": "#/$defs/FilterExpression"
          },
          "orGroup": {
            "$ref": "#/$defs/FilterExpressionList"
          }
        },
        "type": "object"
      },
      "FilterExpressionList": {
        "description": "A list of filter expressions.",
        "properties": {
          "expressions": {
            "description": "A list of filter expressions.",
            "items": {
              "$ref": "#/$defs/FilterExpression"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Filter": {
        "description": "An expression to filter dimension or metric values.",
        "properties": {
          "betweenFilter": {
            "$ref": "#/$defs/BetweenFilter"
          },
          "fieldName": {
            "description": "The dimension name or metric name. In most methods, dimensions & metrics can be used for the first time in this field. However in a RunPivotReportRequest, this field must be additionally specified by name in the RunPivotReportRequest's dimensions or metrics.",
            "type": "string"
          },
          "inListFilter": {
            "$ref": "#/$defs/InListFilter"
          },
          "numericFilter": {
            "$ref": "#/$defs/NumericFilter"
          },
          "stringFilter": {
            "$ref": "#/$defs/StringFilter"
          }
        },
        "type": "object"
      },
      "BetweenFilter": {
        "description": "To express that the result needs to be between two numbers (inclusive).",
        "properties": {
          "fromValue": {
            "$ref": "#/$defs/NumericValue"
          },
          "toValue": {
            "$ref": "#/$defs/NumericValue"
          }
        },
        "type": "object"
      },
      "NumericValue": {
        "description": "To represent a number.",
        "properties": {
          "doubleValue": {
            "description": "Double value",
            "format": "double",
            "type": "number"
          },
          "int64Value": {
            "description": "Integer value",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "InListFilter": {
        "description": "The result needs to be in a list of string values.",
        "properties": {
          "caseSensitive": {
            "description": "If true, the string value is case sensitive.",
            "type": "boolean"
          },
          "values": {
            "description": "The list of string values. Must be non-empty.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "NumericFilter": {
        "description": "Filters for numeric or date values.",
        "properties": {
          "operation": {
            "description": "The operation type for this filter.",
            "enum": [
              "OPERATION_UNSPECIFIED",
              "EQUAL",
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL"
            ],
            "type": "string"
          },
          "value": {
            "$ref": "#/$defs/NumericValue"
          }
        },
        "type": "object"
      },
      "StringFilter": {
        "description": "The filter for string",
        "properties": {
          "caseSensitive": {
            "description": "If true, the string value is case sensitive.",
            "type": "boolean"
          },
          "matchType": {
            "description": "The match type for this filter.",
            "enum": [
              "MATCH_TYPE_UNSPECIFIED",
              "EXACT",
              "BEGINS_WITH",
              "ENDS_WITH",
              "CONTAINS",
              "FULL_REGEXP",
              "PARTIAL_REGEXP"
            ],
            "type": "string"
          },
          "value": {
            "description": "The string value used for the matching.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Dimension": {
        "description": "Dimensions are attributes of your data. For example, the dimension city indicates the city from which an event originates. Dimension values in report responses are strings; for example, the city could be \"Paris\" or \"New York\". Requests are allowed up to 9 dimensions.",
        "properties": {
          "dimensionExpression": {
            "$ref": "#/$defs/DimensionExpression"
          },
          "name": {
            "description": "The name of the dimension. See the [API Dimensions](https://developers.google.com/analytics/devguides/reporting/data/v1/api-schema#dimensions) for the list of dimension names supported by core reporting methods such as `runReport` and `batchRunReports`. See [Realtime Dimensions](https://developers.google.com/analytics/devguides/reporting/data/v1/realtime-api-schema#dimensions) for the list of dimension names supported by the `runRealtimeReport` method. See [Funnel Dimensions](https://developers.google.com/analytics/devguides/reporting/data/v1/exploration-api-schema#dimensions) for the list of dimension names supported by the `runFunnelReport` method. If `dimensionExpression` is specified, `name` can be any string that you would like within the allowed character set. For example if a `dimensionExpression` concatenates `country` and `city`, you could call that dimension `countryAndCity`. Dimension names that you choose must match the regular expression `^[a-zA-Z0-9_]$`. Dimensions are referenced by `name` in `dimensionFilter`, `orderBys`, `dimensionExpression`, and `pivots`.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DimensionExpression": {
        "description": "Used to express a dimension which is the result of a formula of multiple dimensions. Example usages: 1) lower_case(dimension) 2) concatenate(dimension1, symbol, dimension2).",
        "properties": {
          "concatenate": {
            "$ref": "#/$defs/ConcatenateExpression"
          },
          "lowerCase": {
            "$ref": "#/$defs/CaseExpression"
          },
          "upperCase": {
            "$ref": "#/$defs/CaseExpression"
          }
        },
        "type": "object"
      },
      "ConcatenateExpression": {
        "description": "Used to combine dimension values to a single dimension.",
        "properties": {
          "delimiter": {
            "description": "The delimiter placed between dimension names. Delimiters are often single characters such as \"|\" or \",\" but can be longer strings. If a dimension value contains the delimiter, both will be present in response with no distinction. For example if dimension 1 value = \"US,FR\", dimension 2 value = \"JP\", and delimiter = \",\", then the response will contain \"US,FR,JP\".",
            "type": "string"
          },
          "dimensionNames": {
            "description": "Names of dimensions. The names must refer back to names in the dimensions field of the request.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "CaseExpression": {
        "description": "Used to convert a dimension value to a single case.",
        "properties": {
          "dimensionName": {
            "description": "Name of a dimension. The name must refer back to a name in dimensions field of the request.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Metric": {
        "description": "The quantitative measurements of a report. For example, the metric `eventCount` is the total number of events. Requests are allowed up to 10 metrics.",
        "properties": {
          "expression": {
            "description": "A mathematical expression for derived metrics. For example, the metric Event count per user is `eventCount/totalUsers`.",
            "type": "string"
          },
          "invisible": {
            "description": "Indicates if a metric is invisible in the report response. If a metric is invisible, the metric will not produce a column in the response, but can be used in `metricFilter`, `orderBys`, or a metric `expression`.",
            "type": "boolean"
          },
          "name": {
            "description": "The name of the metric. See the [API Metrics](https://developers.google.com/analytics/devguides/reporting/data/v1/api-schema#metrics) for the list of metric names supported by core reporting methods such as `runReport` and `batchRunReports`. See [Realtime Metrics](https://developers.google.com/analytics/devguides/reporting/data/v1/realtime-api-schema#metrics) for the list of metric names supported by the `runRealtimeReport` method. See [Funnel Metrics](https://developers.google.com/analytics/devguides/reporting/data/v1/exploration-api-schema#metrics) for the list of metric names supported by the `runFunnelReport` method. If `expression` is specified, `name` can be any string that you would like within the allowed character set. For example if `expression` is `screenPageViews/sessions`, you could call that metric's name = `viewsPerSession`. Metric names that you choose must match the regular expression `^[a-zA-Z0-9_]$`. Metrics are referenced by `name` in `metricFilter`, `orderBys`, and metric `expression`.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Pivot": {
        "description": "Describes the visible dimension columns and rows in the report response.",
        "properties": {
          "fieldNames": {
            "description": "Dimension names for visible columns in the report response. Including \"dateRange\" produces a date range column; for each row in the response, dimension values in the date range column will indicate the corresponding date range from the request.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "limit": {
            "description": "The number of unique combinations of dimension values to return in this pivot. The `limit` parameter is required. A `limit` of 10,000 is common for single pivot requests. The product of the `limit` for each `pivot` in a `RunPivotReportRequest` must not exceed 250,000. For example, a two pivot request with `limit: 1000` in each pivot will fail because the product is `1,000,000`.",
            "format": "int64",
            "type": "string"
          },
          "metricAggregations": {
            "description": "Aggregate the metrics by dimensions in this pivot using the specified metric_aggregations.",
            "items": {
              "enum": [
                "METRIC_AGGREGATION_UNSPECIFIED",
                "TOTAL",
                "MINIMUM",
                "MAXIMUM",
                "COUNT"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "offset": {
            "description": "The row count of the start row. The first row is counted as row 0.",
            "format": "int64",
            "type": "string"
          },
          "orderBys": {
            "description": "Specifies how dimensions are ordered in the pivot. In the first Pivot, the OrderBys determine Row and PivotDimensionHeader ordering; in subsequent Pivots, the OrderBys determine only PivotDimensionHeader ordering. Dimensions specified in these OrderBys must be a subset of Pivot.field_names.",
            "items": {
              "$ref": "#/$defs/OrderBy"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "OrderBy": {
        "description": "Order bys define how rows will be sorted in the response. For example, ordering rows by descending event count is one ordering, and ordering rows by the event name string is a different ordering.",
        "properties": {
          "desc": {
            "description": "If true, sorts by descending order.",
            "type": "boolean"
          },
          "dimension": {
            "$ref": "#/$defs/DimensionOrderBy"
          },
          "metric": {
            "$ref": "#/$defs/MetricOrderBy"
          },
          "pivot": {
            "$ref": "#/$defs/PivotOrderBy"
          }
        },
        "type": "object"
      },
      "DimensionOrderBy": {
        "description": "Sorts by dimension values.",
        "properties": {
          "dimensionName": {
            "description": "A dimension name in the request to order by.",
            "type": "string"
          },
          "orderType": {
            "description": "Controls the rule for dimension value ordering.",
            "enum": [
              "ORDER_TYPE_UNSPECIFIED",
              "ALPHANUMERIC",
              "CASE_INSENSITIVE_ALPHANUMERIC",
              "NUMERIC"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "MetricOrderBy": {
        "description": "Sorts by metric values.",
        "properties": {
          "metricName": {
            "description": "A metric name in the request to order by.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PivotOrderBy": {
        "description": "Sorts by a pivot column group.",
        "properties": {
          "metricName": {
            "description": "In the response to order by, order rows by this column. Must be a metric name from the request.",
            "type": "string"
          },
          "pivotSelections": {
            "description": "Used to select a dimension name and value pivot. If multiple pivot selections are given, the sort occurs on rows where all pivot selection dimension name and value pairs match the row's dimension name and value pair.",
            "items": {
              "$ref": "#/$defs/PivotSelection"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PivotSelection": {
        "description": "A pair of dimension names and values. Rows with this dimension pivot pair are ordered by the metric's value. For example if pivots = {{\"browser\", \"Chrome\"}} and metric_name = \"Sessions\", then the rows will be sorted based on Sessions in Chrome. ---------|----------|----------------|----------|---------------- | Chrome | Chrome | Safari | Safari ---------|----------|----------------|----------|---------------- Country | Sessions | Pages/Sessions | Sessions | Pages/Sessions ---------|----------|----------------|----------|---------------- US | 2 | 2 | 3 | 1 ---------|----------|----------------|----------|---------------- Canada | 3 | 1 | 4 | 1 ---------|----------|----------------|----------|----------------",
        "properties": {
          "dimensionName": {
            "description": "Must be a dimension name from the request.",
            "type": "string"
          },
          "dimensionValue": {
            "description": "Order by only when the named dimension is this value.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://analyticsdata.googleapis.com//v1beta/{property}:runPivotReport{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The response pivot report table corresponding to a pivot request.",
        "**Key properties:**",
        {
          "$ul": [
            "**aggregates**: Aggregation of metric values. Can be totals, minimums, or maximums. The returned aggregations are controlled by the metric_aggregations in the pivot. The type of aggregation returned in each row is shown by the dimension_values which are set to \"RESERVED_\".",
            "**dimensionHeaders**: Describes dimension columns. The number of DimensionHeaders and ordering of DimensionHeaders matches the dimensions present in rows.",
            "**kind**: Identifies what kind of resource this message is. This `kind` is always the fixed string \"analyticsData#runPivotReport\". Useful to distinguish between response types in JSON.",
            [
              "**metadata**: Response's metadata carrying additional information about the report content.",
              {
                "$ul": [
                  "**currencyCode**: The currency code used in this report. Intended to be used in formatting currency metrics like `purchaseRevenue` for visualization. If currency_code was specified in the request, this response parameter will echo the request parameter; otherwise, this response parameter is the property's current currency_code. Currency codes are string encodings of currency types from the ISO 4217 standard (https://en.wikipedia.org/wiki/ISO_4217); for example \"USD\", \"EUR\", \"JPY\". To learn more, see https://support.google.com/analytics/answer/9796179.",
                  "**dataLossFromOtherRow**: If true, indicates some buckets of dimension combinations are rolled into \"(other)\" row. This can happen for high cardinality reports. The metadata parameter dataLossFromOtherRow is populated based on the aggregated data table used in the report. The parameter will be accurately populated regardless of the filters and limits in the report. For example, the (other) row could be dropped from the report because the request contains a filter on sessionSource = google. This parameter will still be populated if data loss from other row was present in the input aggregate data used to generate this report. To learn more, see [About the (other) row and data sampling](https://support.google.com/analytics/answer/13208658#reports).",
                  "**emptyReason**: If empty reason is specified, the report is empty for this reason.",
                  "**samplingMetadatas**: If this report results is [sampled](https://support.google.com/analytics/answer/13331292), this describes the percentage of events used in this report. One `samplingMetadatas` is populated for each date range. Each `samplingMetadatas` corresponds to a date range in order that date ranges were specified in the request. However if the results are not sampled, this field will not be defined.",
                  [
                    "**schemaRestrictionResponse**: The schema restrictions actively enforced in creating this report. To learn more, see [Access and data-restriction management](https://support.google.com/analytics/answer/10851388).",
                    {
                      "$ul": [
                        "**activeMetricRestrictions**: All restrictions actively enforced in creating the report. For example, `purchaseRevenue` always has the restriction type `REVENUE_DATA`. However, this active response restriction is only populated if the user's custom role disallows access to `REVENUE_DATA`."
                      ]
                    }
                  ],
                  "**subjectToThresholding**: If `subjectToThresholding` is true, this report is subject to thresholding and only returns data that meets the minimum aggregation thresholds. It is possible for a request to be subject to thresholding thresholding and no data is absent from the report, and this happens when all data is above the thresholds. To learn more, see [Data thresholds](https://support.google.com/analytics/answer/9383630).",
                  "**timeZone**: The property's current timezone. Intended to be used to interpret time-based dimensions like `hour` and `minute`. Formatted as strings from the IANA Time Zone database (https://www.iana.org/time-zones); for example \"America/New_York\" or \"Asia/Tokyo\"."
                ]
              }
            ],
            "**metricHeaders**: Describes metric columns. The number of MetricHeaders and ordering of MetricHeaders matches the metrics present in rows.",
            "**pivotHeaders**: Summarizes the columns and rows created by a pivot. Each pivot in the request produces one header in the response. If we have a request like this: \"pivots\": [{ \"fieldNames\": [\"country\", \"city\"] }, { \"fieldNames\": \"eventName\" }] We will have the following `pivotHeaders` in the response: \"pivotHeaders\" : [{ \"dimensionHeaders\": [{ \"dimensionValues\": [ { \"value\": \"United Kingdom\" }, { \"value\": \"London\" } ] }, { \"dimensionValues\": [ { \"value\": \"Japan\" }, { \"value\": \"Osaka\" } ] }] }, { \"dimensionHeaders\": [{ \"dimensionValues\": [{ \"value\": \"session_start\" }] }, { \"dimensionValues\": [{ \"value\": \"scroll\" }] }] }]",
            [
              "**propertyQuota**: Current state of all quotas for this Analytics Property. If any quota for a property is exhausted, all requests to that property will return Resource Exhausted errors.",
              {
                "$ul": [
                  [
                    "**concurrentRequests**: Current state for a particular quota group.",
                    {
                      "$ul": [
                        "**consumed**: Quota consumed by this request.",
                        "**remaining**: Quota remaining after this request."
                      ]
                    }
                  ],
                  [
                    "**potentiallyThresholdedRequestsPerHour**: Current state for a particular quota group.",
                    {
                      "$ul": [
                        "**consumed**: Quota consumed by this request.",
                        "**remaining**: Quota remaining after this request."
                      ]
                    }
                  ],
                  [
                    "**serverErrorsPerProjectPerHour**: Current state for a particular quota group.",
                    {
                      "$ul": [
                        "**consumed**: Quota consumed by this request.",
                        "**remaining**: Quota remaining after this request."
                      ]
                    }
                  ],
                  [
                    "**tokensPerDay**: Current state for a particular quota group.",
                    {
                      "$ul": [
                        "**consumed**: Quota consumed by this request.",
                        "**remaining**: Quota remaining after this request."
                      ]
                    }
                  ],
                  [
                    "**tokensPerHour**: Current state for a particular quota group.",
                    {
                      "$ul": [
                        "**consumed**: Quota consumed by this request.",
                        "**remaining**: Quota remaining after this request."
                      ]
                    }
                  ],
                  [
                    "**tokensPerProjectPerHour**: Current state for a particular quota group.",
                    {
                      "$ul": [
                        "**consumed**: Quota consumed by this request.",
                        "**remaining**: Quota remaining after this request."
                      ]
                    }
                  ]
                ]
              }
            ],
            "**rows**: Rows of dimension value combinations and metric values in the report."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
