{
  "name": "analyticsdata_properties_checkCompatibility",
  "description": "This compatibility method lists dimensions and metrics that can be added to a report request and maintain compatibility. This method fails if the request's dimensions and metrics are incompatible. In Google Analytics, reports fail if they request incompatible dimensions and/or metrics; in that case, you will need to remove dimensions and/or metrics from the incompatible report until the report is compatible. The Realtime and Core reports have different compatibility rules. This method checks compatibility for Core reports.",
  "parameters": {
    "type": "object",
    "properties": {
      "property": {
        "type": "string",
        "description": "A Google Analytics GA4 property identifier whose events are tracked. To learn more, see [where to find your Property ID](https://developers.google.com/analytics/devguides/reporting/data/v1/property-id). `property` should be the same value as in your `runReport` request. Example: properties/1234"
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/CheckCompatibilityRequest"
      }
    },
    "required": [
      "property"
    ],
    "$defs": {
      "CheckCompatibilityRequest": {
        "description": "The request for compatibility information for a report's dimensions and metrics. Check compatibility provides a preview of the compatibility of a report; fields shared with the `runReport` request should be the same values as in your `runReport` request.",
        "properties": {
          "compatibilityFilter": {
            "description": "Filters the dimensions and metrics in the response to just this compatibility. Commonly used as `”compatibilityFilter”: “COMPATIBLE”` to only return compatible dimensions & metrics.",
            "enum": [
              "COMPATIBILITY_UNSPECIFIED",
              "COMPATIBLE",
              "INCOMPATIBLE"
            ],
            "type": "string"
          },
          "dimensionFilter": {
            "$ref": "#/$defs/FilterExpression"
          },
          "dimensions": {
            "description": "The dimensions in this report. `dimensions` should be the same value as in your `runReport` request.",
            "items": {
              "$ref": "#/$defs/Dimension"
            },
            "type": "array"
          },
          "metricFilter": {
            "$ref": "#/$defs/FilterExpression"
          },
          "metrics": {
            "description": "The metrics in this report. `metrics` should be the same value as in your `runReport` request.",
            "items": {
              "$ref": "#/$defs/Metric"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "FilterExpression": {
        "description": "To express dimension or metric filters. The fields in the same FilterExpression need to be either all dimensions or all metrics.",
        "properties": {
          "andGroup": {
            "$ref": "#/$defs/FilterExpressionList"
          },
          "filter": {
            "$ref": "#/$defs/Filter"
          },
          "notExpression": {
            "$ref": "#/$defs/FilterExpression"
          },
          "orGroup": {
            "$ref": "#/$defs/FilterExpressionList"
          }
        },
        "type": "object"
      },
      "FilterExpressionList": {
        "description": "A list of filter expressions.",
        "properties": {
          "expressions": {
            "description": "A list of filter expressions.",
            "items": {
              "$ref": "#/$defs/FilterExpression"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Filter": {
        "description": "An expression to filter dimension or metric values.",
        "properties": {
          "betweenFilter": {
            "$ref": "#/$defs/BetweenFilter"
          },
          "fieldName": {
            "description": "The dimension name or metric name. In most methods, dimensions & metrics can be used for the first time in this field. However in a RunPivotReportRequest, this field must be additionally specified by name in the RunPivotReportRequest's dimensions or metrics.",
            "type": "string"
          },
          "inListFilter": {
            "$ref": "#/$defs/InListFilter"
          },
          "numericFilter": {
            "$ref": "#/$defs/NumericFilter"
          },
          "stringFilter": {
            "$ref": "#/$defs/StringFilter"
          }
        },
        "type": "object"
      },
      "BetweenFilter": {
        "description": "To express that the result needs to be between two numbers (inclusive).",
        "properties": {
          "fromValue": {
            "$ref": "#/$defs/NumericValue"
          },
          "toValue": {
            "$ref": "#/$defs/NumericValue"
          }
        },
        "type": "object"
      },
      "NumericValue": {
        "description": "To represent a number.",
        "properties": {
          "doubleValue": {
            "description": "Double value",
            "format": "double",
            "type": "number"
          },
          "int64Value": {
            "description": "Integer value",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "InListFilter": {
        "description": "The result needs to be in a list of string values.",
        "properties": {
          "caseSensitive": {
            "description": "If true, the string value is case sensitive.",
            "type": "boolean"
          },
          "values": {
            "description": "The list of string values. Must be non-empty.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "NumericFilter": {
        "description": "Filters for numeric or date values.",
        "properties": {
          "operation": {
            "description": "The operation type for this filter.",
            "enum": [
              "OPERATION_UNSPECIFIED",
              "EQUAL",
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL"
            ],
            "type": "string"
          },
          "value": {
            "$ref": "#/$defs/NumericValue"
          }
        },
        "type": "object"
      },
      "StringFilter": {
        "description": "The filter for string",
        "properties": {
          "caseSensitive": {
            "description": "If true, the string value is case sensitive.",
            "type": "boolean"
          },
          "matchType": {
            "description": "The match type for this filter.",
            "enum": [
              "MATCH_TYPE_UNSPECIFIED",
              "EXACT",
              "BEGINS_WITH",
              "ENDS_WITH",
              "CONTAINS",
              "FULL_REGEXP",
              "PARTIAL_REGEXP"
            ],
            "type": "string"
          },
          "value": {
            "description": "The string value used for the matching.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Dimension": {
        "description": "Dimensions are attributes of your data. For example, the dimension city indicates the city from which an event originates. Dimension values in report responses are strings; for example, the city could be \"Paris\" or \"New York\". Requests are allowed up to 9 dimensions.",
        "properties": {
          "dimensionExpression": {
            "$ref": "#/$defs/DimensionExpression"
          },
          "name": {
            "description": "The name of the dimension. See the [API Dimensions](https://developers.google.com/analytics/devguides/reporting/data/v1/api-schema#dimensions) for the list of dimension names supported by core reporting methods such as `runReport` and `batchRunReports`. See [Realtime Dimensions](https://developers.google.com/analytics/devguides/reporting/data/v1/realtime-api-schema#dimensions) for the list of dimension names supported by the `runRealtimeReport` method. See [Funnel Dimensions](https://developers.google.com/analytics/devguides/reporting/data/v1/exploration-api-schema#dimensions) for the list of dimension names supported by the `runFunnelReport` method. If `dimensionExpression` is specified, `name` can be any string that you would like within the allowed character set. For example if a `dimensionExpression` concatenates `country` and `city`, you could call that dimension `countryAndCity`. Dimension names that you choose must match the regular expression `^[a-zA-Z0-9_]$`. Dimensions are referenced by `name` in `dimensionFilter`, `orderBys`, `dimensionExpression`, and `pivots`.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DimensionExpression": {
        "description": "Used to express a dimension which is the result of a formula of multiple dimensions. Example usages: 1) lower_case(dimension) 2) concatenate(dimension1, symbol, dimension2).",
        "properties": {
          "concatenate": {
            "$ref": "#/$defs/ConcatenateExpression"
          },
          "lowerCase": {
            "$ref": "#/$defs/CaseExpression"
          },
          "upperCase": {
            "$ref": "#/$defs/CaseExpression"
          }
        },
        "type": "object"
      },
      "ConcatenateExpression": {
        "description": "Used to combine dimension values to a single dimension.",
        "properties": {
          "delimiter": {
            "description": "The delimiter placed between dimension names. Delimiters are often single characters such as \"|\" or \",\" but can be longer strings. If a dimension value contains the delimiter, both will be present in response with no distinction. For example if dimension 1 value = \"US,FR\", dimension 2 value = \"JP\", and delimiter = \",\", then the response will contain \"US,FR,JP\".",
            "type": "string"
          },
          "dimensionNames": {
            "description": "Names of dimensions. The names must refer back to names in the dimensions field of the request.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "CaseExpression": {
        "description": "Used to convert a dimension value to a single case.",
        "properties": {
          "dimensionName": {
            "description": "Name of a dimension. The name must refer back to a name in dimensions field of the request.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Metric": {
        "description": "The quantitative measurements of a report. For example, the metric `eventCount` is the total number of events. Requests are allowed up to 10 metrics.",
        "properties": {
          "expression": {
            "description": "A mathematical expression for derived metrics. For example, the metric Event count per user is `eventCount/totalUsers`.",
            "type": "string"
          },
          "invisible": {
            "description": "Indicates if a metric is invisible in the report response. If a metric is invisible, the metric will not produce a column in the response, but can be used in `metricFilter`, `orderBys`, or a metric `expression`.",
            "type": "boolean"
          },
          "name": {
            "description": "The name of the metric. See the [API Metrics](https://developers.google.com/analytics/devguides/reporting/data/v1/api-schema#metrics) for the list of metric names supported by core reporting methods such as `runReport` and `batchRunReports`. See [Realtime Metrics](https://developers.google.com/analytics/devguides/reporting/data/v1/realtime-api-schema#metrics) for the list of metric names supported by the `runRealtimeReport` method. See [Funnel Metrics](https://developers.google.com/analytics/devguides/reporting/data/v1/exploration-api-schema#metrics) for the list of metric names supported by the `runFunnelReport` method. If `expression` is specified, `name` can be any string that you would like within the allowed character set. For example if `expression` is `screenPageViews/sessions`, you could call that metric's name = `viewsPerSession`. Metric names that you choose must match the regular expression `^[a-zA-Z0-9_]$`. Metrics are referenced by `name` in `metricFilter`, `orderBys`, and metric `expression`.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://analyticsdata.googleapis.com//v1beta/{property}:checkCompatibility{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The compatibility response with the compatibility of each dimension & metric.",
        "**Key properties:**",
        {
          "$ul": [
            "**dimensionCompatibilities**: The compatibility of each dimension.",
            "**metricCompatibilities**: The compatibility of each metric."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
