{
  "name": "analyticsdata_properties_runRealtimeReport",
  "description": "Returns a customized report of realtime event data for your property. Events appear in realtime reports seconds after they have been sent to the Google Analytics. Realtime reports show events and usage data for the periods of time ranging from the present moment to 30 minutes ago (up to 60 minutes for Google Analytics 360 properties). For a guide to constructing realtime requests & understanding responses, see [Creating a Realtime Report](https://developers.google.com/analytics/devguides/reporting/data/v1/realtime-basics).",
  "parameters": {
    "type": "object",
    "properties": {
      "property": {
        "type": "string",
        "description": "A Google Analytics GA4 property identifier whose events are tracked. Specified in the URL path and not the body. To learn more, see [where to find your Property ID](https://developers.google.com/analytics/devguides/reporting/data/v1/property-id). Example: properties/1234"
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/RunRealtimeReportRequest"
      }
    },
    "required": [
      "property"
    ],
    "$defs": {
      "RunRealtimeReportRequest": {
        "description": "The request to generate a realtime report.",
        "properties": {
          "dimensionFilter": {
            "$ref": "#/$defs/FilterExpression"
          },
          "dimensions": {
            "description": "The dimensions requested and displayed.",
            "items": {
              "$ref": "#/$defs/Dimension"
            },
            "type": "array"
          },
          "limit": {
            "description": "The number of rows to return. If unspecified, 10,000 rows are returned. The API returns a maximum of 250,000 rows per request, no matter how many you ask for. `limit` must be positive. The API can also return fewer rows than the requested `limit`, if there aren't as many dimension values as the `limit`. For instance, there are fewer than 300 possible values for the dimension `country`, so when reporting on only `country`, you can't get more than 300 rows, even if you set `limit` to a higher value.",
            "format": "int64",
            "type": "string"
          },
          "metricAggregations": {
            "description": "Aggregation of metrics. Aggregated metric values will be shown in rows where the dimension_values are set to \"RESERVED_(MetricAggregation)\".",
            "items": {
              "enum": [
                "METRIC_AGGREGATION_UNSPECIFIED",
                "TOTAL",
                "MINIMUM",
                "MAXIMUM",
                "COUNT"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "metricFilter": {
            "$ref": "#/$defs/FilterExpression"
          },
          "metrics": {
            "description": "The metrics requested and displayed.",
            "items": {
              "$ref": "#/$defs/Metric"
            },
            "type": "array"
          },
          "minuteRanges": {
            "description": "The minute ranges of event data to read. If unspecified, one minute range for the last 30 minutes will be used. If multiple minute ranges are requested, each response row will contain a zero based minute range index. If two minute ranges overlap, the event data for the overlapping minutes is included in the response rows for both minute ranges.",
            "items": {
              "$ref": "#/$defs/MinuteRange"
            },
            "type": "array"
          },
          "orderBys": {
            "description": "Specifies how rows are ordered in the response.",
            "items": {
              "$ref": "#/$defs/OrderBy"
            },
            "type": "array"
          },
          "returnPropertyQuota": {
            "description": "Toggles whether to return the current state of this Analytics Property's Realtime quota. Quota is returned in [PropertyQuota](#PropertyQuota).",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "FilterExpression": {
        "description": "To express dimension or metric filters. The fields in the same FilterExpression need to be either all dimensions or all metrics.",
        "properties": {
          "andGroup": {
            "$ref": "#/$defs/FilterExpressionList"
          },
          "filter": {
            "$ref": "#/$defs/Filter"
          },
          "notExpression": {
            "$ref": "#/$defs/FilterExpression"
          },
          "orGroup": {
            "$ref": "#/$defs/FilterExpressionList"
          }
        },
        "type": "object"
      },
      "FilterExpressionList": {
        "description": "A list of filter expressions.",
        "properties": {
          "expressions": {
            "description": "A list of filter expressions.",
            "items": {
              "$ref": "#/$defs/FilterExpression"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Filter": {
        "description": "An expression to filter dimension or metric values.",
        "properties": {
          "betweenFilter": {
            "$ref": "#/$defs/BetweenFilter"
          },
          "fieldName": {
            "description": "The dimension name or metric name. In most methods, dimensions & metrics can be used for the first time in this field. However in a RunPivotReportRequest, this field must be additionally specified by name in the RunPivotReportRequest's dimensions or metrics.",
            "type": "string"
          },
          "inListFilter": {
            "$ref": "#/$defs/InListFilter"
          },
          "numericFilter": {
            "$ref": "#/$defs/NumericFilter"
          },
          "stringFilter": {
            "$ref": "#/$defs/StringFilter"
          }
        },
        "type": "object"
      },
      "BetweenFilter": {
        "description": "To express that the result needs to be between two numbers (inclusive).",
        "properties": {
          "fromValue": {
            "$ref": "#/$defs/NumericValue"
          },
          "toValue": {
            "$ref": "#/$defs/NumericValue"
          }
        },
        "type": "object"
      },
      "NumericValue": {
        "description": "To represent a number.",
        "properties": {
          "doubleValue": {
            "description": "Double value",
            "format": "double",
            "type": "number"
          },
          "int64Value": {
            "description": "Integer value",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "InListFilter": {
        "description": "The result needs to be in a list of string values.",
        "properties": {
          "caseSensitive": {
            "description": "If true, the string value is case sensitive.",
            "type": "boolean"
          },
          "values": {
            "description": "The list of string values. Must be non-empty.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "NumericFilter": {
        "description": "Filters for numeric or date values.",
        "properties": {
          "operation": {
            "description": "The operation type for this filter.",
            "enum": [
              "OPERATION_UNSPECIFIED",
              "EQUAL",
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL"
            ],
            "type": "string"
          },
          "value": {
            "$ref": "#/$defs/NumericValue"
          }
        },
        "type": "object"
      },
      "StringFilter": {
        "description": "The filter for string",
        "properties": {
          "caseSensitive": {
            "description": "If true, the string value is case sensitive.",
            "type": "boolean"
          },
          "matchType": {
            "description": "The match type for this filter.",
            "enum": [
              "MATCH_TYPE_UNSPECIFIED",
              "EXACT",
              "BEGINS_WITH",
              "ENDS_WITH",
              "CONTAINS",
              "FULL_REGEXP",
              "PARTIAL_REGEXP"
            ],
            "type": "string"
          },
          "value": {
            "description": "The string value used for the matching.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Dimension": {
        "description": "Dimensions are attributes of your data. For example, the dimension city indicates the city from which an event originates. Dimension values in report responses are strings; for example, the city could be \"Paris\" or \"New York\". Requests are allowed up to 9 dimensions.",
        "properties": {
          "dimensionExpression": {
            "$ref": "#/$defs/DimensionExpression"
          },
          "name": {
            "description": "The name of the dimension. See the [API Dimensions](https://developers.google.com/analytics/devguides/reporting/data/v1/api-schema#dimensions) for the list of dimension names supported by core reporting methods such as `runReport` and `batchRunReports`. See [Realtime Dimensions](https://developers.google.com/analytics/devguides/reporting/data/v1/realtime-api-schema#dimensions) for the list of dimension names supported by the `runRealtimeReport` method. See [Funnel Dimensions](https://developers.google.com/analytics/devguides/reporting/data/v1/exploration-api-schema#dimensions) for the list of dimension names supported by the `runFunnelReport` method. If `dimensionExpression` is specified, `name` can be any string that you would like within the allowed character set. For example if a `dimensionExpression` concatenates `country` and `city`, you could call that dimension `countryAndCity`. Dimension names that you choose must match the regular expression `^[a-zA-Z0-9_]$`. Dimensions are referenced by `name` in `dimensionFilter`, `orderBys`, `dimensionExpression`, and `pivots`.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DimensionExpression": {
        "description": "Used to express a dimension which is the result of a formula of multiple dimensions. Example usages: 1) lower_case(dimension) 2) concatenate(dimension1, symbol, dimension2).",
        "properties": {
          "concatenate": {
            "$ref": "#/$defs/ConcatenateExpression"
          },
          "lowerCase": {
            "$ref": "#/$defs/CaseExpression"
          },
          "upperCase": {
            "$ref": "#/$defs/CaseExpression"
          }
        },
        "type": "object"
      },
      "ConcatenateExpression": {
        "description": "Used to combine dimension values to a single dimension.",
        "properties": {
          "delimiter": {
            "description": "The delimiter placed between dimension names. Delimiters are often single characters such as \"|\" or \",\" but can be longer strings. If a dimension value contains the delimiter, both will be present in response with no distinction. For example if dimension 1 value = \"US,FR\", dimension 2 value = \"JP\", and delimiter = \",\", then the response will contain \"US,FR,JP\".",
            "type": "string"
          },
          "dimensionNames": {
            "description": "Names of dimensions. The names must refer back to names in the dimensions field of the request.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "CaseExpression": {
        "description": "Used to convert a dimension value to a single case.",
        "properties": {
          "dimensionName": {
            "description": "Name of a dimension. The name must refer back to a name in dimensions field of the request.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Metric": {
        "description": "The quantitative measurements of a report. For example, the metric `eventCount` is the total number of events. Requests are allowed up to 10 metrics.",
        "properties": {
          "expression": {
            "description": "A mathematical expression for derived metrics. For example, the metric Event count per user is `eventCount/totalUsers`.",
            "type": "string"
          },
          "invisible": {
            "description": "Indicates if a metric is invisible in the report response. If a metric is invisible, the metric will not produce a column in the response, but can be used in `metricFilter`, `orderBys`, or a metric `expression`.",
            "type": "boolean"
          },
          "name": {
            "description": "The name of the metric. See the [API Metrics](https://developers.google.com/analytics/devguides/reporting/data/v1/api-schema#metrics) for the list of metric names supported by core reporting methods such as `runReport` and `batchRunReports`. See [Realtime Metrics](https://developers.google.com/analytics/devguides/reporting/data/v1/realtime-api-schema#metrics) for the list of metric names supported by the `runRealtimeReport` method. See [Funnel Metrics](https://developers.google.com/analytics/devguides/reporting/data/v1/exploration-api-schema#metrics) for the list of metric names supported by the `runFunnelReport` method. If `expression` is specified, `name` can be any string that you would like within the allowed character set. For example if `expression` is `screenPageViews/sessions`, you could call that metric's name = `viewsPerSession`. Metric names that you choose must match the regular expression `^[a-zA-Z0-9_]$`. Metrics are referenced by `name` in `metricFilter`, `orderBys`, and metric `expression`.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MinuteRange": {
        "description": "A contiguous set of minutes: `startMinutesAgo`, `startMinutesAgo + 1`, ..., `endMinutesAgo`. Requests are allowed up to 2 minute ranges.",
        "properties": {
          "endMinutesAgo": {
            "description": "The inclusive end minute for the query as a number of minutes before now. Cannot be before `startMinutesAgo`. For example, `\"endMinutesAgo\": 15` specifies the report should include event data from prior to 15 minutes ago. If unspecified, `endMinutesAgo` is defaulted to 0. Standard Analytics properties can request any minute in the last 30 minutes of event data (`endMinutesAgo <= 29`), and 360 Analytics properties can request any minute in the last 60 minutes of event data (`endMinutesAgo <= 59`).",
            "format": "int32",
            "type": "integer"
          },
          "name": {
            "description": "Assigns a name to this minute range. The dimension `dateRange` is valued to this name in a report response. If set, cannot begin with `date_range_` or `RESERVED_`. If not set, minute ranges are named by their zero based index in the request: `date_range_0`, `date_range_1`, etc.",
            "type": "string"
          },
          "startMinutesAgo": {
            "description": "The inclusive start minute for the query as a number of minutes before now. For example, `\"startMinutesAgo\": 29` specifies the report should include event data from 29 minutes ago and after. Cannot be after `endMinutesAgo`. If unspecified, `startMinutesAgo` is defaulted to 29. Standard Analytics properties can request up to the last 30 minutes of event data (`startMinutesAgo <= 29`), and 360 Analytics properties can request up to the last 60 minutes of event data (`startMinutesAgo <= 59`).",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "OrderBy": {
        "description": "Order bys define how rows will be sorted in the response. For example, ordering rows by descending event count is one ordering, and ordering rows by the event name string is a different ordering.",
        "properties": {
          "desc": {
            "description": "If true, sorts by descending order.",
            "type": "boolean"
          },
          "dimension": {
            "$ref": "#/$defs/DimensionOrderBy"
          },
          "metric": {
            "$ref": "#/$defs/MetricOrderBy"
          },
          "pivot": {
            "$ref": "#/$defs/PivotOrderBy"
          }
        },
        "type": "object"
      },
      "DimensionOrderBy": {
        "description": "Sorts by dimension values.",
        "properties": {
          "dimensionName": {
            "description": "A dimension name in the request to order by.",
            "type": "string"
          },
          "orderType": {
            "description": "Controls the rule for dimension value ordering.",
            "enum": [
              "ORDER_TYPE_UNSPECIFIED",
              "ALPHANUMERIC",
              "CASE_INSENSITIVE_ALPHANUMERIC",
              "NUMERIC"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "MetricOrderBy": {
        "description": "Sorts by metric values.",
        "properties": {
          "metricName": {
            "description": "A metric name in the request to order by.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PivotOrderBy": {
        "description": "Sorts by a pivot column group.",
        "properties": {
          "metricName": {
            "description": "In the response to order by, order rows by this column. Must be a metric name from the request.",
            "type": "string"
          },
          "pivotSelections": {
            "description": "Used to select a dimension name and value pivot. If multiple pivot selections are given, the sort occurs on rows where all pivot selection dimension name and value pairs match the row's dimension name and value pair.",
            "items": {
              "$ref": "#/$defs/PivotSelection"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PivotSelection": {
        "description": "A pair of dimension names and values. Rows with this dimension pivot pair are ordered by the metric's value. For example if pivots = {{\"browser\", \"Chrome\"}} and metric_name = \"Sessions\", then the rows will be sorted based on Sessions in Chrome. ---------|----------|----------------|----------|---------------- | Chrome | Chrome | Safari | Safari ---------|----------|----------------|----------|---------------- Country | Sessions | Pages/Sessions | Sessions | Pages/Sessions ---------|----------|----------------|----------|---------------- US | 2 | 2 | 3 | 1 ---------|----------|----------------|----------|---------------- Canada | 3 | 1 | 4 | 1 ---------|----------|----------------|----------|----------------",
        "properties": {
          "dimensionName": {
            "description": "Must be a dimension name from the request.",
            "type": "string"
          },
          "dimensionValue": {
            "description": "Order by only when the named dimension is this value.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://analyticsdata.googleapis.com//v1beta/{property}:runRealtimeReport{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The response realtime report table corresponding to a request.",
        "**Key properties:**",
        {
          "$ul": [
            "**dimensionHeaders**: Describes dimension columns. The number of DimensionHeaders and ordering of DimensionHeaders matches the dimensions present in rows.",
            "**kind**: Identifies what kind of resource this message is. This `kind` is always the fixed string \"analyticsData#runRealtimeReport\". Useful to distinguish between response types in JSON.",
            "**maximums**: If requested, the maximum values of metrics.",
            "**metricHeaders**: Describes metric columns. The number of MetricHeaders and ordering of MetricHeaders matches the metrics present in rows.",
            "**minimums**: If requested, the minimum values of metrics.",
            [
              "**propertyQuota**: Current state of all quotas for this Analytics Property. If any quota for a property is exhausted, all requests to that property will return Resource Exhausted errors.",
              {
                "$ul": [
                  [
                    "**concurrentRequests**: Current state for a particular quota group.",
                    {
                      "$ul": [
                        "**consumed**: Quota consumed by this request.",
                        "**remaining**: Quota remaining after this request."
                      ]
                    }
                  ],
                  [
                    "**potentiallyThresholdedRequestsPerHour**: Current state for a particular quota group.",
                    {
                      "$ul": [
                        "**consumed**: Quota consumed by this request.",
                        "**remaining**: Quota remaining after this request."
                      ]
                    }
                  ],
                  [
                    "**serverErrorsPerProjectPerHour**: Current state for a particular quota group.",
                    {
                      "$ul": [
                        "**consumed**: Quota consumed by this request.",
                        "**remaining**: Quota remaining after this request."
                      ]
                    }
                  ],
                  [
                    "**tokensPerDay**: Current state for a particular quota group.",
                    {
                      "$ul": [
                        "**consumed**: Quota consumed by this request.",
                        "**remaining**: Quota remaining after this request."
                      ]
                    }
                  ],
                  [
                    "**tokensPerHour**: Current state for a particular quota group.",
                    {
                      "$ul": [
                        "**consumed**: Quota consumed by this request.",
                        "**remaining**: Quota remaining after this request."
                      ]
                    }
                  ],
                  [
                    "**tokensPerProjectPerHour**: Current state for a particular quota group.",
                    {
                      "$ul": [
                        "**consumed**: Quota consumed by this request.",
                        "**remaining**: Quota remaining after this request."
                      ]
                    }
                  ]
                ]
              }
            ],
            "**rowCount**: The total number of rows in the query result. `rowCount` is independent of the number of rows returned in the response and the `limit` request parameter. For example if a query returns 175 rows and includes `limit` of 50 in the API request, the response will contain `rowCount` of 175 but only 50 rows.",
            "**rows**: Rows of dimension value combinations and metric values in the report.",
            "**totals**: If requested, the totaled values of metrics."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
