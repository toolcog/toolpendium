{
  "name": "alloydb_projects_locations_clusters_createsecondary",
  "description": "Creates a cluster of type SECONDARY in the given location using the primary cluster as the source.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The location of the new cluster. For the required format, see the comment on the Cluster.name field."
      },
      "clusterId": {
        "type": "string",
        "description": "Required. ID of the requesting object (the secondary cluster)."
      },
      "requestId": {
        "type": "string",
        "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
      },
      "validateOnly": {
        "type": "boolean",
        "description": "Optional. If set, performs request validation (e.g. permission checks and any other type of validation), but do not actually execute the create request."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/Cluster"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "Cluster": {
        "description": "A cluster is a collection of regional AlloyDB resources. It can include a primary instance and one or more read pool instances. All cluster resources share a storage layer, which scales as needed.",
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Annotations to allow client tools to store small amount of arbitrary data. This is distinct from labels. https://google.aip.dev/128",
            "type": "object"
          },
          "automatedBackupPolicy": {
            "$ref": "#/$defs/AutomatedBackupPolicy"
          },
          "backupSource": {
            "$ref": "#/$defs/BackupSource"
          },
          "clusterType": {
            "description": "Output only. The type of the cluster. This is an output-only field and it's populated at the Cluster creation time or the Cluster promotion time. The cluster type is determined by which RPC was used to create the cluster (i.e. `CreateCluster` vs. `CreateSecondaryCluster`",
            "enum": [
              "CLUSTER_TYPE_UNSPECIFIED",
              "PRIMARY",
              "SECONDARY"
            ],
            "readOnly": true,
            "type": "string"
          },
          "continuousBackupConfig": {
            "$ref": "#/$defs/ContinuousBackupConfig"
          },
          "continuousBackupInfo": {
            "$ref": "#/$defs/ContinuousBackupInfo"
          },
          "createTime": {
            "description": "Output only. Create time stamp",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "databaseVersion": {
            "description": "Optional. The database engine major version. This is an optional field and it is populated at the Cluster creation time. If a database version is not supplied at cluster creation time, then a default database version will be used.",
            "enum": [
              "DATABASE_VERSION_UNSPECIFIED",
              "POSTGRES_13",
              "POSTGRES_14",
              "POSTGRES_15"
            ],
            "type": "string",
            "x-enumDeprecated": [
              false,
              true,
              false,
              false
            ]
          },
          "deleteTime": {
            "description": "Output only. Delete time stamp",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "User-settable and human-readable display name for the Cluster.",
            "type": "string"
          },
          "encryptionConfig": {
            "$ref": "#/$defs/EncryptionConfig"
          },
          "encryptionInfo": {
            "$ref": "#/$defs/EncryptionInfo"
          },
          "etag": {
            "description": "For Resource freshness validation (https://google.aip.dev/154)",
            "type": "string"
          },
          "initialUser": {
            "$ref": "#/$defs/UserPassword"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Labels as key value pairs",
            "type": "object"
          },
          "migrationSource": {
            "$ref": "#/$defs/MigrationSource"
          },
          "name": {
            "description": "Output only. The name of the cluster resource with the format: * projects/{project}/locations/{region}/clusters/{cluster_id} where the cluster ID segment should satisfy the regex expression `[a-z0-9-]+`. For more details see https://google.aip.dev/122. The prefix of the cluster resource name is the name of the parent resource: * projects/{project}/locations/{region}",
            "readOnly": true,
            "type": "string"
          },
          "network": {
            "deprecated": true,
            "description": "Required. The resource link for the VPC network in which cluster resources are created and from which they are accessible via Private IP. The network must belong to the same project as the cluster. It is specified in the form: `projects/{project}/global/networks/{network_id}`. This is required to create a cluster. Deprecated, use network_config.network instead.",
            "type": "string"
          },
          "networkConfig": {
            "$ref": "#/$defs/NetworkConfig"
          },
          "primaryConfig": {
            "$ref": "#/$defs/PrimaryConfig"
          },
          "reconciling": {
            "description": "Output only. Reconciling (https://google.aip.dev/128#reconciliation). Set to true if the current state of Cluster does not match the user's intended state, and the service is actively updating the resource to reconcile them. This can happen due to user-triggered updates or system actions like failover or maintenance.",
            "readOnly": true,
            "type": "boolean"
          },
          "satisfiesPzs": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          },
          "secondaryConfig": {
            "$ref": "#/$defs/SecondaryConfig"
          },
          "sslConfig": {
            "$ref": "#/$defs/SslConfig"
          },
          "state": {
            "description": "Output only. The current serving state of the cluster.",
            "enum": [
              "STATE_UNSPECIFIED",
              "READY",
              "STOPPED",
              "EMPTY",
              "CREATING",
              "DELETING",
              "FAILED",
              "BOOTSTRAPPING",
              "MAINTENANCE",
              "PROMOTING"
            ],
            "readOnly": true,
            "type": "string"
          },
          "uid": {
            "description": "Output only. The system-generated UID of the resource. The UID is assigned when the resource is created, and it is retained until it is deleted.",
            "readOnly": true,
            "type": "string"
          },
          "updateTime": {
            "description": "Output only. Update time stamp",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "AutomatedBackupPolicy": {
        "description": "Message describing the user-specified automated backup policy. All fields in the automated backup policy are optional. Defaults for each field are provided if they are not set.",
        "properties": {
          "backupWindow": {
            "description": "The length of the time window during which a backup can be taken. If a backup does not succeed within this time window, it will be canceled and considered failed. The backup window must be at least 5 minutes long. There is no upper bound on the window. If not set, it defaults to 1 hour.",
            "format": "google-duration",
            "type": "string"
          },
          "enabled": {
            "description": "Whether automated automated backups are enabled. If not set, defaults to true.",
            "type": "boolean"
          },
          "encryptionConfig": {
            "$ref": "#/$defs/EncryptionConfig"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Labels to apply to backups created using this configuration.",
            "type": "object"
          },
          "location": {
            "description": "The location where the backup will be stored. Currently, the only supported option is to store the backup in the same region as the cluster. If empty, defaults to the region of the cluster.",
            "type": "string"
          },
          "quantityBasedRetention": {
            "$ref": "#/$defs/QuantityBasedRetention"
          },
          "timeBasedRetention": {
            "$ref": "#/$defs/TimeBasedRetention"
          },
          "weeklySchedule": {
            "$ref": "#/$defs/WeeklySchedule"
          }
        },
        "type": "object"
      },
      "EncryptionConfig": {
        "description": "EncryptionConfig describes the encryption config of a cluster or a backup that is encrypted with a CMEK (customer-managed encryption key).",
        "properties": {
          "kmsKeyName": {
            "description": "The fully-qualified resource name of the KMS key. Each Cloud KMS key is regionalized and has the following format: projects/[PROJECT]/locations/[REGION]/keyRings/[RING]/cryptoKeys/[KEY_NAME]",
            "type": "string"
          }
        },
        "type": "object"
      },
      "QuantityBasedRetention": {
        "description": "A quantity based policy specifies that a certain number of the most recent successful backups should be retained.",
        "properties": {
          "count": {
            "description": "The number of backups to retain.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TimeBasedRetention": {
        "description": "A time based retention policy specifies that all backups within a certain time period should be retained.",
        "properties": {
          "retentionPeriod": {
            "description": "The retention period.",
            "format": "google-duration",
            "type": "string"
          }
        },
        "type": "object"
      },
      "WeeklySchedule": {
        "description": "A weekly schedule starts a backup at prescribed start times within a day, for the specified days of the week. The weekly schedule message is flexible and can be used to create many types of schedules. For example, to have a daily backup that starts at 22:00, configure the `start_times` field to have one element \"22:00\" and the `days_of_week` field to have all seven days of the week.",
        "properties": {
          "daysOfWeek": {
            "description": "The days of the week to perform a backup. If this field is left empty, the default of every day of the week is used.",
            "items": {
              "enum": [
                "DAY_OF_WEEK_UNSPECIFIED",
                "MONDAY",
                "TUESDAY",
                "WEDNESDAY",
                "THURSDAY",
                "FRIDAY",
                "SATURDAY",
                "SUNDAY"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "startTimes": {
            "description": "The times during the day to start a backup. The start times are assumed to be in UTC and to be an exact hour (e.g., 04:00:00). If no start times are provided, a single fixed start time is chosen arbitrarily.",
            "items": {
              "$ref": "#/$defs/GoogleTypeTimeOfDay"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleTypeTimeOfDay": {
        "description": "Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.",
        "properties": {
          "hours": {
            "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \"24:00:00\" for scenarios like business closing time.",
            "format": "int32",
            "type": "integer"
          },
          "minutes": {
            "description": "Minutes of hour of day. Must be from 0 to 59.",
            "format": "int32",
            "type": "integer"
          },
          "nanos": {
            "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.",
            "format": "int32",
            "type": "integer"
          },
          "seconds": {
            "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "BackupSource": {
        "description": "Message describing a BackupSource.",
        "properties": {
          "backupName": {
            "description": "Required. The name of the backup resource with the format: * projects/{project}/locations/{region}/backups/{backup_id}",
            "type": "string"
          },
          "backupUid": {
            "description": "Output only. The system-generated UID of the backup which was used to create this resource. The UID is generated when the backup is created, and it is retained until the backup is deleted.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ContinuousBackupConfig": {
        "description": "ContinuousBackupConfig describes the continuous backups recovery configurations of a cluster.",
        "properties": {
          "enabled": {
            "description": "Whether ContinuousBackup is enabled.",
            "type": "boolean"
          },
          "encryptionConfig": {
            "$ref": "#/$defs/EncryptionConfig"
          },
          "recoveryWindowDays": {
            "description": "The number of days that are eligible to restore from using PITR. To support the entire recovery window, backups and logs are retained for one day more than the recovery window. If not set, defaults to 14 days.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ContinuousBackupInfo": {
        "description": "ContinuousBackupInfo describes the continuous backup properties of a cluster.",
        "properties": {
          "earliestRestorableTime": {
            "description": "Output only. The earliest restorable time that can be restored to. Output only field.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "enabledTime": {
            "description": "Output only. When ContinuousBackup was most recently enabled. Set to null if ContinuousBackup is not enabled.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "encryptionInfo": {
            "$ref": "#/$defs/EncryptionInfo"
          },
          "schedule": {
            "description": "Output only. Days of the week on which a continuous backup is taken. Output only field. Ignored if passed into the request.",
            "items": {
              "enum": [
                "DAY_OF_WEEK_UNSPECIFIED",
                "MONDAY",
                "TUESDAY",
                "WEDNESDAY",
                "THURSDAY",
                "FRIDAY",
                "SATURDAY",
                "SUNDAY"
              ],
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "EncryptionInfo": {
        "description": "EncryptionInfo describes the encryption information of a cluster or a backup.",
        "properties": {
          "encryptionType": {
            "description": "Output only. Type of encryption.",
            "enum": [
              "TYPE_UNSPECIFIED",
              "GOOGLE_DEFAULT_ENCRYPTION",
              "CUSTOMER_MANAGED_ENCRYPTION"
            ],
            "readOnly": true,
            "type": "string"
          },
          "kmsKeyVersions": {
            "description": "Output only. Cloud KMS key versions that are being used to protect the database or the backup.",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "UserPassword": {
        "description": "The username/password for a database user. Used for specifying initial users at cluster creation time.",
        "properties": {
          "password": {
            "description": "The initial password for the user.",
            "type": "string"
          },
          "user": {
            "description": "The database username.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MigrationSource": {
        "description": "Subset of the source instance configuration that is available when reading the cluster resource.",
        "properties": {
          "hostPort": {
            "description": "Output only. The host and port of the on-premises instance in host:port format",
            "readOnly": true,
            "type": "string"
          },
          "referenceId": {
            "description": "Output only. Place holder for the external source identifier(e.g DMS job name) that created the cluster.",
            "readOnly": true,
            "type": "string"
          },
          "sourceType": {
            "description": "Output only. Type of migration source.",
            "enum": [
              "MIGRATION_SOURCE_TYPE_UNSPECIFIED",
              "DMS"
            ],
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NetworkConfig": {
        "description": "Metadata related to network configuration.",
        "properties": {
          "allocatedIpRange": {
            "description": "Optional. Name of the allocated IP range for the private IP AlloyDB cluster, for example: \"google-managed-services-default\". If set, the instance IPs for this cluster will be created in the allocated range. The range name must comply with RFC 1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?`. Field name is intended to be consistent with Cloud SQL.",
            "type": "string"
          },
          "network": {
            "description": "Optional. The resource link for the VPC network in which cluster resources are created and from which they are accessible via Private IP. The network must belong to the same project as the cluster. It is specified in the form: `projects/{project_number}/global/networks/{network_id}`. This is required to create a cluster.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PrimaryConfig": {
        "description": "Configuration for the primary cluster. It has the list of clusters that are replicating from this cluster. This should be set if and only if the cluster is of type PRIMARY.",
        "properties": {
          "secondaryClusterNames": {
            "description": "Output only. Names of the clusters that are replicating from this cluster.",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "SecondaryConfig": {
        "description": "Configuration information for the secondary cluster. This should be set if and only if the cluster is of type SECONDARY.",
        "properties": {
          "primaryClusterName": {
            "description": "The name of the primary cluster name with the format: * projects/{project}/locations/{region}/clusters/{cluster_id}",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SslConfig": {
        "description": "SSL configuration.",
        "properties": {
          "caSource": {
            "description": "Optional. Certificate Authority (CA) source. Only CA_SOURCE_MANAGED is supported currently, and is the default value.",
            "enum": [
              "CA_SOURCE_UNSPECIFIED",
              "CA_SOURCE_MANAGED"
            ],
            "type": "string"
          },
          "sslMode": {
            "description": "Optional. SSL mode. Specifies client-server SSL/TLS connection behavior.",
            "enum": [
              "SSL_MODE_UNSPECIFIED",
              "SSL_MODE_ALLOW",
              "SSL_MODE_REQUIRE",
              "SSL_MODE_VERIFY_CA",
              "ALLOW_UNENCRYPTED_AND_ENCRYPTED",
              "ENCRYPTED_ONLY"
            ],
            "type": "string",
            "x-enumDeprecated": [
              false,
              true,
              true,
              true,
              false,
              false
            ]
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://alloydb.googleapis.com//v1/{parent}/clusters:createsecondary{?clusterId,requestId,validateOnly,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "This resource represents a long-running operation that is the result of a network API call.",
        "**Key properties:**",
        {
          "$ul": [
            "**done**: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
            [
              "**error**: The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
              {
                "$ul": [
                  "**code**: The status code, which should be an enum value of google.rpc.Code.",
                  "**details**: A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                  "**message**: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                ]
              }
            ],
            "**metadata**: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
            "**name**: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
            "**response**: The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
