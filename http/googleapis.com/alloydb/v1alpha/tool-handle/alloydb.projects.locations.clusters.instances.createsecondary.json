{
  "name": "alloydb_projects_locations_clusters_instances_createsecondary",
  "description": "Creates a new SECONDARY Instance in a given project and location.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The name of the parent resource. For the required format, see the comment on the Instance.name field."
      },
      "instanceId": {
        "type": "string",
        "description": "Required. ID of the requesting object."
      },
      "requestId": {
        "type": "string",
        "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
      },
      "validateOnly": {
        "type": "boolean",
        "description": "Optional. If set, performs request validation (e.g. permission checks and any other type of validation), but do not actually execute the create request."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/Instance"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "Instance": {
        "description": "An Instance is a computing unit that an end customer can connect to. It's the main unit of computing resources in AlloyDB.",
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Annotations to allow client tools to store small amount of arbitrary data. This is distinct from labels. https://google.aip.dev/128",
            "type": "object"
          },
          "availabilityType": {
            "description": "Availability type of an Instance. If empty, defaults to REGIONAL for primary instances. For read pools, availability_type is always UNSPECIFIED. Instances in the read pools are evenly distributed across available zones within the region (i.e. read pools with more than one node will have a node in at least two zones).",
            "enum": [
              "AVAILABILITY_TYPE_UNSPECIFIED",
              "ZONAL",
              "REGIONAL"
            ],
            "type": "string"
          },
          "clientConnectionConfig": {
            "$ref": "#/$defs/ClientConnectionConfig"
          },
          "createTime": {
            "description": "Output only. Create time stamp",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "databaseFlags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Database flags. Set at instance level. * They are copied from primary instance on read instance creation. * Read instances can set new or override existing flags that are relevant for reads, e.g. for enabling columnar cache on a read instance. Flags set on read instance may or may not be present on primary. This is a list of \"key\": \"value\" pairs. \"key\": The name of the flag. These flags are passed at instance setup time, so include both server options and system variables for Postgres. Flags are specified with underscores, not hyphens. \"value\": The value of the flag. Booleans are set to **on** for true and **off** for false. This field must be omitted if the flag doesn't take a value.",
            "type": "object"
          },
          "deleteTime": {
            "description": "Output only. Delete time stamp",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "User-settable and human-readable display name for the Instance.",
            "type": "string"
          },
          "etag": {
            "description": "For Resource freshness validation (https://google.aip.dev/154)",
            "type": "string"
          },
          "gceZone": {
            "description": "The Compute Engine zone that the instance should serve from, per https://cloud.google.com/compute/docs/regions-zones This can ONLY be specified for ZONAL instances. If present for a REGIONAL instance, an error will be thrown. If this is absent for a ZONAL instance, instance is created in a random zone with available capacity.",
            "type": "string"
          },
          "instanceType": {
            "description": "Required. The type of the instance. Specified at creation time.",
            "enum": [
              "INSTANCE_TYPE_UNSPECIFIED",
              "PRIMARY",
              "READ_POOL",
              "SECONDARY"
            ],
            "type": "string"
          },
          "ipAddress": {
            "description": "Output only. The IP address for the Instance. This is the connection endpoint for an end-user application.",
            "readOnly": true,
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Labels as key value pairs",
            "type": "object"
          },
          "machineConfig": {
            "$ref": "#/$defs/MachineConfig"
          },
          "name": {
            "description": "Output only. The name of the instance resource with the format: * projects/{project}/locations/{region}/clusters/{cluster_id}/instances/{instance_id} where the cluster and instance ID segments should satisfy the regex expression `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`, e.g. 1-63 characters of lowercase letters, numbers, and dashes, starting with a letter, and ending with a letter or number. For more details see https://google.aip.dev/122. The prefix of the instance resource name is the name of the parent resource: * projects/{project}/locations/{region}/clusters/{cluster_id}",
            "readOnly": true,
            "type": "string"
          },
          "networkConfig": {
            "$ref": "#/$defs/InstanceNetworkConfig"
          },
          "nodes": {
            "description": "Output only. List of available read-only VMs in this instance, including the standby for a PRIMARY instance.",
            "items": {
              "$ref": "#/$defs/Node"
            },
            "readOnly": true,
            "type": "array"
          },
          "pscInstanceConfig": {
            "$ref": "#/$defs/PscInstanceConfig"
          },
          "publicIpAddress": {
            "description": "Output only. The public IP addresses for the Instance. This is available ONLY when enable_public_ip is set. This is the connection endpoint for an end-user application.",
            "readOnly": true,
            "type": "string"
          },
          "queryInsightsConfig": {
            "$ref": "#/$defs/QueryInsightsInstanceConfig"
          },
          "readPoolConfig": {
            "$ref": "#/$defs/ReadPoolConfig"
          },
          "reconciling": {
            "description": "Output only. Reconciling (https://google.aip.dev/128#reconciliation). Set to true if the current state of Instance does not match the user's intended state, and the service is actively updating the resource to reconcile them. This can happen due to user-triggered updates or system actions like failover or maintenance.",
            "readOnly": true,
            "type": "boolean"
          },
          "satisfiesPzi": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          },
          "satisfiesPzs": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          },
          "state": {
            "description": "Output only. The current serving state of the instance.",
            "enum": [
              "STATE_UNSPECIFIED",
              "READY",
              "STOPPED",
              "CREATING",
              "DELETING",
              "MAINTENANCE",
              "FAILED",
              "BOOTSTRAPPING",
              "PROMOTING"
            ],
            "readOnly": true,
            "type": "string"
          },
          "uid": {
            "description": "Output only. The system-generated UID of the resource. The UID is assigned when the resource is created, and it is retained until it is deleted.",
            "readOnly": true,
            "type": "string"
          },
          "updatePolicy": {
            "$ref": "#/$defs/UpdatePolicy"
          },
          "updateTime": {
            "description": "Output only. Update time stamp",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "writableNode": {
            "$ref": "#/$defs/Node"
          }
        },
        "type": "object"
      },
      "ClientConnectionConfig": {
        "description": "Client connection configuration",
        "properties": {
          "requireConnectors": {
            "description": "Optional. Configuration to enforce connectors only (ex: AuthProxy) connections to the database.",
            "type": "boolean"
          },
          "sslConfig": {
            "$ref": "#/$defs/SslConfig"
          }
        },
        "type": "object"
      },
      "SslConfig": {
        "description": "SSL configuration.",
        "properties": {
          "caSource": {
            "description": "Optional. Certificate Authority (CA) source. Only CA_SOURCE_MANAGED is supported currently, and is the default value.",
            "enum": [
              "CA_SOURCE_UNSPECIFIED",
              "CA_SOURCE_MANAGED"
            ],
            "type": "string"
          },
          "sslMode": {
            "description": "Optional. SSL mode. Specifies client-server SSL/TLS connection behavior.",
            "enum": [
              "SSL_MODE_UNSPECIFIED",
              "SSL_MODE_ALLOW",
              "SSL_MODE_REQUIRE",
              "SSL_MODE_VERIFY_CA",
              "ALLOW_UNENCRYPTED_AND_ENCRYPTED",
              "ENCRYPTED_ONLY"
            ],
            "type": "string",
            "x-enumDeprecated": [
              false,
              true,
              true,
              true,
              false,
              false
            ]
          }
        },
        "type": "object"
      },
      "MachineConfig": {
        "description": "MachineConfig describes the configuration of a machine.",
        "properties": {
          "cpuCount": {
            "description": "The number of CPU's in the VM instance.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "InstanceNetworkConfig": {
        "description": "Metadata related to instance level network configuration.",
        "properties": {
          "authorizedExternalNetworks": {
            "description": "Optional. A list of external network authorized to access this instance.",
            "items": {
              "$ref": "#/$defs/AuthorizedNetwork"
            },
            "type": "array"
          },
          "enablePublicIp": {
            "description": "Optional. Enabling public ip for the instance.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "AuthorizedNetwork": {
        "description": "AuthorizedNetwork contains metadata for an authorized network.",
        "properties": {
          "cidrRange": {
            "description": "CIDR range for one authorzied network of the instance.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Node": {
        "description": "Details of a single node in the instance. Nodes in an AlloyDB instance are ephemereal, they can change during update, failover, autohealing and resize operations.",
        "properties": {
          "id": {
            "description": "The identifier of the VM e.g. \"test-read-0601-407e52be-ms3l\".",
            "type": "string"
          },
          "ip": {
            "description": "The private IP address of the VM e.g. \"10.57.0.34\".",
            "type": "string"
          },
          "state": {
            "description": "Determined by state of the compute VM and postgres-service health. Compute VM state can have values listed in https://cloud.google.com/compute/docs/instances/instance-life-cycle and postgres-service health can have values: HEALTHY and UNHEALTHY.",
            "type": "string"
          },
          "zoneId": {
            "description": "The Compute Engine zone of the VM e.g. \"us-central1-b\".",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PscInstanceConfig": {
        "description": "PscInstanceConfig contains PSC related configuration at an instance level.",
        "properties": {
          "allowedConsumerNetworks": {
            "description": "Optional. List of consumer networks that are allowed to create PSC endpoints to service-attachments to this instance.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "allowedConsumerProjects": {
            "description": "Optional. List of consumer projects that are allowed to create PSC endpoints to service-attachments to this instance.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "outgoingServiceAttachmentLinks": {
            "description": "Optional. List of service attachments that this instance has created endpoints to connect with. Currently, only a single outgoing service attachment is supported per instance.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "pscEnabled": {
            "description": "Optional. Whether PSC connectivity is enabled for this instance. This is populated by referencing the value from the parent cluster.",
            "type": "boolean"
          },
          "pscInterfaceConfigs": {
            "description": "Optional. Configurations for setting up PSC interfaces attached to the instance which are used for outbound connectivity. Only primary instances can have PSC interface attached. All the VMs created for the primary instance will share the same configurations. Currently we only support 0 or 1 PSC interface.",
            "items": {
              "$ref": "#/$defs/PscInterfaceConfig"
            },
            "type": "array"
          },
          "serviceAttachmentLink": {
            "description": "Output only. The service attachment created when Private Service Connect (PSC) is enabled for the instance. The name of the resource will be in the format of `projects//regions//serviceAttachments/`",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "PscInterfaceConfig": {
        "description": "Configuration for setting up a PSC interface. This information needs to be provided by the customer. PSC interfaces will be created and added to VMs via SLM (adding a network interface will require recreating the VM). For HA instances this will be done via LDTM.",
        "properties": {
          "consumerEndpointIps": {
            "description": "A list of endpoints in the consumer VPC the interface might initiate outbound connections to. This list has to be provided when the PSC interface is created.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "networkAttachment": {
            "description": "The NetworkAttachment resource created in the consumer VPC to which the PSC interface will be linked, in the form of: `projects/${CONSUMER_PROJECT}/regions/${REGION}/networkAttachments/${NETWORK_ATTACHMENT_NAME}`. NetworkAttachment has to be provided when the PSC interface is created.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "QueryInsightsInstanceConfig": {
        "description": "QueryInsights Instance specific configuration.",
        "properties": {
          "queryPlansPerMinute": {
            "description": "Number of query execution plans captured by Insights per minute for all queries combined. The default value is 5. Any integer between 0 and 20 is considered valid.",
            "format": "uint32",
            "type": "integer"
          },
          "queryStringLength": {
            "description": "Query string length. The default value is 1024. Any integer between 256 and 4500 is considered valid.",
            "format": "uint32",
            "type": "integer"
          },
          "recordApplicationTags": {
            "description": "Record application tags for an instance. This flag is turned \"on\" by default.",
            "type": "boolean"
          },
          "recordClientAddress": {
            "description": "Record client address for an instance. Client address is PII information. This flag is turned \"on\" by default.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ReadPoolConfig": {
        "description": "Configuration for a read pool instance.",
        "properties": {
          "nodeCount": {
            "description": "Read capacity, i.e. number of nodes in a read pool instance.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "UpdatePolicy": {
        "description": "Policy to be used while updating the instance.",
        "properties": {
          "mode": {
            "description": "Mode for updating the instance.",
            "enum": [
              "MODE_UNSPECIFIED",
              "DEFAULT",
              "FORCE_APPLY"
            ],
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://alloydb.googleapis.com//v1alpha/{parent}/instances:createsecondary{?instanceId,requestId,validateOnly,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "This resource represents a long-running operation that is the result of a network API call.",
        "**Key properties:**",
        {
          "$ul": [
            "**done**: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
            [
              "**error**: The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
              {
                "$ul": [
                  "**code**: The status code, which should be an enum value of google.rpc.Code.",
                  "**details**: A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                  "**message**: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                ]
              }
            ],
            "**metadata**: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
            "**name**: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
            "**response**: The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
