{
  "name": "documentai_projects_locations_documents_process",
  "description": "Processes a single document.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Target project and location to make a call. Format: `projects/{project-id}/locations/{location-id}`. If no location is specified, a region will be chosen automatically. This field is only populated when used in ProcessDocument method."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleCloudDocumentaiV1beta2ProcessDocumentRequest"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "GoogleCloudDocumentaiV1beta2ProcessDocumentRequest": {
        "description": "Request to process one document.",
        "properties": {
          "automlParams": {
            "$ref": "#/$defs/GoogleCloudDocumentaiV1beta2AutoMlParams"
          },
          "documentType": {
            "description": "Specifies a known document type for deeper structure detection. Valid values are currently \"general\" and \"invoice\". If not provided, \"general\"\\ is used as default. If any other value is given, the request is rejected.",
            "type": "string"
          },
          "entityExtractionParams": {
            "$ref": "#/$defs/GoogleCloudDocumentaiV1beta2EntityExtractionParams"
          },
          "formExtractionParams": {
            "$ref": "#/$defs/GoogleCloudDocumentaiV1beta2FormExtractionParams"
          },
          "inputConfig": {
            "$ref": "#/$defs/GoogleCloudDocumentaiV1beta2InputConfig"
          },
          "ocrParams": {
            "$ref": "#/$defs/GoogleCloudDocumentaiV1beta2OcrParams"
          },
          "outputConfig": {
            "$ref": "#/$defs/GoogleCloudDocumentaiV1beta2OutputConfig"
          },
          "parent": {
            "description": "Target project and location to make a call. Format: `projects/{project-id}/locations/{location-id}`. If no location is specified, a region will be chosen automatically. This field is only populated when used in ProcessDocument method.",
            "type": "string"
          },
          "tableExtractionParams": {
            "$ref": "#/$defs/GoogleCloudDocumentaiV1beta2TableExtractionParams"
          }
        },
        "type": "object"
      },
      "GoogleCloudDocumentaiV1beta2AutoMlParams": {
        "description": "Parameters to control AutoML model prediction behavior.",
        "properties": {
          "model": {
            "description": "Resource name of the AutoML model. Format: `projects/{project-id}/locations/{location-id}/models/{model-id}`.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDocumentaiV1beta2EntityExtractionParams": {
        "description": "Parameters to control entity extraction behavior.",
        "properties": {
          "enabled": {
            "description": "Whether to enable entity extraction.",
            "type": "boolean"
          },
          "modelVersion": {
            "description": "Model version of the entity extraction. Default is \"builtin/stable\". Specify \"builtin/latest\" for the latest model.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDocumentaiV1beta2FormExtractionParams": {
        "description": "Parameters to control form extraction behavior.",
        "properties": {
          "enabled": {
            "description": "Whether to enable form extraction.",
            "type": "boolean"
          },
          "keyValuePairHints": {
            "description": "Reserved for future use.",
            "items": {
              "$ref": "#/$defs/GoogleCloudDocumentaiV1beta2KeyValuePairHint"
            },
            "type": "array"
          },
          "modelVersion": {
            "description": "Model version of the form extraction system. Default is \"builtin/stable\". Specify \"builtin/latest\" for the latest model. For custom form models, specify: \"custom/{model_name}\". Model name format is \"bucket_name/path/to/modeldir\" corresponding to \"gs://bucket_name/path/to/modeldir\" where annotated examples are stored.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDocumentaiV1beta2KeyValuePairHint": {
        "description": "Reserved for future use.",
        "properties": {
          "key": {
            "description": "The key text for the hint.",
            "type": "string"
          },
          "valueTypes": {
            "description": "Type of the value. This is case-insensitive, and could be one of: ADDRESS, LOCATION, ORGANIZATION, PERSON, PHONE_NUMBER, ID, NUMBER, EMAIL, PRICE, TERMS, DATE, NAME. Types not in this list will be ignored.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudDocumentaiV1beta2InputConfig": {
        "description": "The desired input location and metadata.",
        "properties": {
          "contents": {
            "description": "Content in bytes, represented as a stream of bytes. Note: As with all `bytes` fields, proto buffer messages use a pure binary representation, whereas JSON representations use base64. This field only works for synchronous ProcessDocument method.",
            "format": "byte",
            "type": "string"
          },
          "gcsSource": {
            "$ref": "#/$defs/GoogleCloudDocumentaiV1beta2GcsSource"
          },
          "mimeType": {
            "description": "Required. Mimetype of the input. Current supported mimetypes are application/pdf, image/tiff, and image/gif. In addition, application/json type is supported for requests with ProcessDocumentRequest.automl_params field set. The JSON file needs to be in Document format.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDocumentaiV1beta2GcsSource": {
        "description": "The Google Cloud Storage location where the input file will be read from.",
        "properties": {
          "uri": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDocumentaiV1beta2OcrParams": {
        "description": "Parameters to control Optical Character Recognition (OCR) behavior.",
        "properties": {
          "languageHints": {
            "description": "List of languages to use for OCR. In most cases, an empty value yields the best results since it enables automatic language detection. For languages based on the Latin alphabet, setting `language_hints` is not needed. In rare cases, when the language of the text in the image is known, setting a hint will help get better results (although it will be a significant hindrance if the hint is wrong). Document processing returns an error if one or more of the specified languages is not one of the supported languages.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudDocumentaiV1beta2OutputConfig": {
        "description": "The desired output location and metadata.",
        "properties": {
          "gcsDestination": {
            "$ref": "#/$defs/GoogleCloudDocumentaiV1beta2GcsDestination"
          },
          "pagesPerShard": {
            "description": "The max number of pages to include into each output Document shard JSON on Google Cloud Storage. The valid range is [1, 100]. If not specified, the default value is 20. For example, for one pdf file with 100 pages, 100 parsed pages will be produced. If `pages_per_shard` = 20, then 5 Document shard JSON files each containing 20 parsed pages will be written under the prefix OutputConfig.gcs_destination.uri and suffix pages-x-to-y.json where x and y are 1-indexed page numbers. Example GCS outputs with 157 pages and pages_per_shard = 50: pages-001-to-050.json pages-051-to-100.json pages-101-to-150.json pages-151-to-157.json",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GoogleCloudDocumentaiV1beta2GcsDestination": {
        "description": "The Google Cloud Storage location where the output file will be written to.",
        "properties": {
          "uri": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDocumentaiV1beta2TableExtractionParams": {
        "description": "Parameters to control table extraction behavior.",
        "properties": {
          "enabled": {
            "description": "Whether to enable table extraction.",
            "type": "boolean"
          },
          "headerHints": {
            "description": "Optional. Reserved for future use.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "modelVersion": {
            "description": "Model version of the table extraction system. Default is \"builtin/stable\". Specify \"builtin/latest\" for the latest model.",
            "type": "string"
          },
          "tableBoundHints": {
            "description": "Optional. Table bounding box hints that can be provided to complex cases which our algorithm cannot locate the table(s) in.",
            "items": {
              "$ref": "#/$defs/GoogleCloudDocumentaiV1beta2TableBoundHint"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudDocumentaiV1beta2TableBoundHint": {
        "description": "A hint for a table bounding box on the page for table parsing.",
        "properties": {
          "boundingBox": {
            "$ref": "#/$defs/GoogleCloudDocumentaiV1beta2BoundingPoly"
          },
          "pageNumber": {
            "description": "Optional. Page number for multi-paged inputs this hint applies to. If not provided, this hint will apply to all pages by default. This value is 1-based.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GoogleCloudDocumentaiV1beta2BoundingPoly": {
        "description": "A bounding polygon for the detected image annotation.",
        "properties": {
          "normalizedVertices": {
            "description": "The bounding polygon normalized vertices.",
            "items": {
              "$ref": "#/$defs/GoogleCloudDocumentaiV1beta2NormalizedVertex"
            },
            "type": "array"
          },
          "vertices": {
            "description": "The bounding polygon vertices.",
            "items": {
              "$ref": "#/$defs/GoogleCloudDocumentaiV1beta2Vertex"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudDocumentaiV1beta2NormalizedVertex": {
        "description": "A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1.",
        "properties": {
          "x": {
            "description": "X coordinate.",
            "format": "float",
            "type": "number"
          },
          "y": {
            "description": "Y coordinate (starts from the top of the image).",
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "GoogleCloudDocumentaiV1beta2Vertex": {
        "description": "A vertex represents a 2D point in the image. NOTE: the vertex coordinates are in the same scale as the original image.",
        "properties": {
          "x": {
            "description": "X coordinate.",
            "format": "int32",
            "type": "integer"
          },
          "y": {
            "description": "Y coordinate (starts from the top of the image).",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://documentai.googleapis.com//v1beta2/{parent}/documents:process{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Document represents the canonical document resource in Document AI. It is an interchange format that provides insights into documents and allows for collaboration between users and Document AI to iterate and optimize for quality.",
        "**Key properties:**",
        {
          "$ul": [
            "**content**: Optional. Inline document content, represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations use base64.",
            "**entities**: A list of entities detected on Document.text. For document shards, entities in this list may cross shard boundaries.",
            "**entityRelations**: Placeholder. Relationship among Document.entities.",
            [
              "**error**: The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
              {
                "$ul": [
                  "**code**: The status code, which should be an enum value of google.rpc.Code.",
                  "**details**: A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                  "**message**: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                ]
              }
            ],
            "**labels**: Labels for this document.",
            "**mimeType**: An IANA published [media type (MIME type)](https://www.iana.org/assignments/media-types/media-types.xhtml).",
            "**pages**: Visual page layout for the Document.",
            "**revisions**: Placeholder. Revision history of this document.",
            [
              "**shardInfo**: For a large document, sharding may be performed to produce several document shards. Each document shard contains this field to detail which shard it is.",
              {
                "$ul": [
                  "**shardCount**: Total number of shards.",
                  "**shardIndex**: The 0-based index of this shard.",
                  "**textOffset**: The index of the first character in Document.text in the overall document global text."
                ]
              }
            ],
            "**text**: Optional. UTF-8 encoded text in reading order from the document.",
            "**textChanges**: Placeholder. A list of text corrections made to Document.text. This is usually used for annotating corrections to OCR mistakes. Text changes for a given revision may not overlap with each other.",
            "**textStyles**: Styles for the Document.text.",
            "**uri**: Optional. Currently supports Google Cloud Storage URI of the form `gs://bucket_name/object_name`. Object versioning is not supported. For more information, refer to [Google Cloud Storage Request URIs](https://cloud.google.com/storage/docs/reference-uris)."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
