{
  "name": "genomics_workers_checkIn",
  "description": "The worker uses this method to retrieve the assigned operation and provide periodic status updates.",
  "parameters": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "The VM identity token for authenticating the VM instance. https://cloud.google.com/compute/docs/instances/verifying-instance-identity"
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/CheckInRequest"
      }
    },
    "required": [
      "id"
    ],
    "$defs": {
      "CheckInRequest": {
        "description": "The parameters to the CheckIn method.",
        "properties": {
          "deadlineExpired": {
            "$ref": "#/$defs/Empty"
          },
          "event": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "description": "A workflow specific event occurred.",
            "type": "object"
          },
          "events": {
            "description": "A list of timestamped events.",
            "items": {
              "$ref": "#/$defs/TimestampedEvent"
            },
            "type": "array"
          },
          "result": {
            "$ref": "#/$defs/Status"
          },
          "sosReport": {
            "description": "An SOS report for an unexpected VM failure.",
            "format": "byte",
            "type": "string"
          },
          "workerStatus": {
            "$ref": "#/$defs/WorkerStatus"
          }
        },
        "type": "object"
      },
      "Empty": {
        "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
        "properties": {},
        "type": "object"
      },
      "TimestampedEvent": {
        "description": "An event that occured in the operation assigned to the worker and the time of occurance.",
        "properties": {
          "data": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "description": "The event data.",
            "type": "object"
          },
          "timestamp": {
            "description": "The time when the event happened.",
            "format": "google-datetime",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Status": {
        "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
        "properties": {
          "code": {
            "description": "The status code, which should be an enum value of google.rpc.Code.",
            "format": "int32",
            "type": "integer"
          },
          "details": {
            "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
            "items": {
              "additionalProperties": {
                "description": "Properties of the object. Contains field @type with type URL."
              },
              "type": "object"
            },
            "type": "array"
          },
          "message": {
            "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "WorkerStatus": {
        "description": "The status of the worker VM.",
        "properties": {
          "attachedDisks": {
            "additionalProperties": {
              "$ref": "#/$defs/DiskStatus"
            },
            "description": "Status of attached disks.",
            "type": "object"
          },
          "bootDisk": {
            "$ref": "#/$defs/DiskStatus"
          },
          "freeRamBytes": {
            "description": "Free RAM.",
            "format": "uint64",
            "type": "string"
          },
          "totalRamBytes": {
            "description": "Total RAM.",
            "format": "uint64",
            "type": "string"
          },
          "uptimeSeconds": {
            "description": "System uptime.",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DiskStatus": {
        "description": "The status of a disk on a VM.",
        "properties": {
          "freeSpaceBytes": {
            "description": "Free disk space.",
            "format": "uint64",
            "type": "string"
          },
          "totalSpaceBytes": {
            "description": "Total disk space.",
            "format": "uint64",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://genomics.googleapis.com//v2alpha1/workers/{id}:checkIn{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The response to the CheckIn method.",
        "**Key properties:**",
        {
          "$ul": [
            "**deadline**: The deadline by which the worker must request an extension. The backend will allow for network transmission time and other delays, but the worker must attempt to transmit the extension request no later than the deadline.",
            "**features**: Feature configuration for the operation.",
            "**metadata**: The metadata that describes the operation assigned to the worker."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
