{
  "name": "localservices_accountReports_search",
  "description": "Get account reports containing aggregate account data of all linked GLS accounts. Caller needs to provide their manager customer id and the associated auth credential that allows them read permissions on their linked accounts.",
  "parameters": {
    "type": "object",
    "properties": {
      "endDate.day": {
        "type": "integer",
        "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant."
      },
      "endDate.month": {
        "type": "integer",
        "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day."
      },
      "endDate.year": {
        "type": "integer",
        "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year."
      },
      "pageSize": {
        "type": "integer",
        "description": "The maximum number of accounts to return. If the page size is unset, page size will default to 1000. Maximum page_size is 10000. Optional."
      },
      "pageToken": {
        "type": "string",
        "description": "The `next_page_token` value returned from a previous request to SearchAccountReports that indicates where listing should continue. Optional."
      },
      "query": {
        "type": "string",
        "description": "A query string for searching for account reports. Caller must provide a customer id of their MCC account with an associated Gaia Mint that allows read permission on their linked accounts. Search expressions are case insensitive. Example query: | Query | Description | |-------------------------|-----------------------------------------------| | manager_customer_id:123 | Get Account Report for Manager with id 123. | Required."
      },
      "startDate.day": {
        "type": "integer",
        "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant."
      },
      "startDate.month": {
        "type": "integer",
        "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day."
      },
      "startDate.year": {
        "type": "integer",
        "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://localservices.googleapis.com//v1/accountReports:search{?endDate.day,endDate.month,endDate.year,pageSize,pageToken,query,startDate.day,startDate.month,startDate.year,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A page of the response received from the SearchAccountReports method. A paginated response where more pages are available has `next_page_token` set. This token can be used in a subsequent request to retrieve the next request page.",
        "**Key properties:**",
        {
          "$ul": [
            "**accountReports**: List of account reports which maps 1:1 to a particular linked GLS account.",
            "**nextPageToken**: Pagination token to retrieve the next page of results. When `next_page_token` is not filled in, there is no next page and the list returned is the last page in the result set."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
