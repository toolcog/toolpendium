{
  "name": "pubsublite_admin_projects_locations_subscriptions_create",
  "description": "Creates a new subscription.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The parent location in which to create the subscription. Structured like `projects/{project_number}/locations/{location}`."
      },
      "skipBacklog": {
        "type": "boolean",
        "description": "If true, the newly created subscription will only receive messages published after the subscription was created. Otherwise, the entire message backlog will be received on the subscription. Defaults to false."
      },
      "subscriptionId": {
        "type": "string",
        "description": "Required. The ID to use for the subscription, which will become the final component of the subscription's name. This value is structured like: `my-sub-name`."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/Subscription"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "Subscription": {
        "description": "Metadata about a subscription resource.",
        "properties": {
          "deliveryConfig": {
            "$ref": "#/$defs/DeliveryConfig"
          },
          "exportConfig": {
            "$ref": "#/$defs/ExportConfig"
          },
          "name": {
            "description": "The name of the subscription. Structured like: projects/{project_number}/locations/{location}/subscriptions/{subscription_id}",
            "type": "string"
          },
          "topic": {
            "description": "The name of the topic this subscription is attached to. Structured like: projects/{project_number}/locations/{location}/topics/{topic_id}",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeliveryConfig": {
        "description": "The settings for a subscription's message delivery.",
        "properties": {
          "deliveryRequirement": {
            "description": "The DeliveryRequirement for this subscription.",
            "enum": [
              "DELIVERY_REQUIREMENT_UNSPECIFIED",
              "DELIVER_IMMEDIATELY",
              "DELIVER_AFTER_STORED"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "ExportConfig": {
        "description": "Configuration for a Pub/Sub Lite subscription that writes messages to a destination. User subscriber clients must not connect to this subscription.",
        "properties": {
          "currentState": {
            "description": "Output only. The current state of the export, which may be different to the desired state due to errors. This field is output only.",
            "enum": [
              "STATE_UNSPECIFIED",
              "ACTIVE",
              "PAUSED",
              "PERMISSION_DENIED",
              "NOT_FOUND"
            ],
            "readOnly": true,
            "type": "string"
          },
          "deadLetterTopic": {
            "description": "Optional. The name of an optional Pub/Sub Lite topic to publish messages that can not be exported to the destination. For example, the message can not be published to the Pub/Sub service because it does not satisfy the constraints documented at https://cloud.google.com/pubsub/docs/publisher. Structured like: projects/{project_number}/locations/{location}/topics/{topic_id}. Must be within the same project and location as the subscription. The topic may be changed or removed.",
            "type": "string"
          },
          "desiredState": {
            "description": "The desired state of this export. Setting this to values other than `ACTIVE` and `PAUSED` will result in an error.",
            "enum": [
              "STATE_UNSPECIFIED",
              "ACTIVE",
              "PAUSED",
              "PERMISSION_DENIED",
              "NOT_FOUND"
            ],
            "type": "string"
          },
          "pubsubConfig": {
            "$ref": "#/$defs/PubSubConfig"
          }
        },
        "type": "object"
      },
      "PubSubConfig": {
        "description": "Configuration for exporting to a Pub/Sub topic.",
        "properties": {
          "topic": {
            "description": "The name of the Pub/Sub topic. Structured like: projects/{project_number}/topics/{topic_id}. The topic may be changed.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://pubsublite.googleapis.com//v1/admin/{parent}/subscriptions{?skipBacklog,subscriptionId,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Metadata about a subscription resource.",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**deliveryConfig**: The settings for a subscription's message delivery.",
              {
                "$ul": [
                  "**deliveryRequirement**: The DeliveryRequirement for this subscription."
                ]
              }
            ],
            [
              "**exportConfig**: Configuration for a Pub/Sub Lite subscription that writes messages to a destination. User subscriber clients must not connect to this subscription.",
              {
                "$ul": [
                  "**currentState**: Output only. The current state of the export, which may be different to the desired state due to errors. This field is output only.",
                  "**deadLetterTopic**: Optional. The name of an optional Pub/Sub Lite topic to publish messages that can not be exported to the destination. For example, the message can not be published to the Pub/Sub service because it does not satisfy the constraints documented at https://cloud.google.com/pubsub/docs/publisher. Structured like: projects/{project_number}/locations/{location}/topics/{topic_id}. Must be within the same project and location as the subscription. The topic may be changed or removed.",
                  "**desiredState**: The desired state of this export. Setting this to values other than `ACTIVE` and `PAUSED` will result in an error.",
                  [
                    "**pubsubConfig**: Configuration for exporting to a Pub/Sub topic.",
                    {
                      "$ul": [
                        "**topic**: The name of the Pub/Sub topic. Structured like: projects/{project_number}/topics/{topic_id}. The topic may be changed."
                      ]
                    }
                  ]
                ]
              }
            ],
            "**name**: The name of the subscription. Structured like: projects/{project_number}/locations/{location}/subscriptions/{subscription_id}",
            "**topic**: The name of the topic this subscription is attached to. Structured like: projects/{project_number}/locations/{location}/topics/{topic_id}"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
