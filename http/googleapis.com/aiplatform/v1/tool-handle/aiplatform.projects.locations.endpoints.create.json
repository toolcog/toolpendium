{
  "name": "aiplatform_projects_locations_endpoints_create",
  "description": "Creates an Endpoint.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The resource name of the Location to create the Endpoint in. Format: `projects/{project}/locations/{location}`"
      },
      "endpointId": {
        "type": "string",
        "description": "Immutable. The ID to use for endpoint, which will become the final component of the endpoint resource name. If not provided, Vertex AI will generate a value for this ID. If the first character is a letter, this value may be up to 63 characters, and valid characters are `[a-z0-9-]`. The last character must be a letter or number. If the first character is a number, this value may be up to 9 characters, and valid characters are `[0-9]` with no leading zeros. When using HTTP/JSON, this field is populated based on a query string argument, such as `?endpoint_id=12345`. This is the fallback for fields that are not included in either the URI or the body."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleCloudAiplatformV1Endpoint"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "GoogleCloudAiplatformV1Endpoint": {
        "description": "Models are deployed into it, and afterwards Endpoint is called to obtain predictions and explanations.",
        "properties": {
          "createTime": {
            "description": "Output only. Timestamp when this Endpoint was created.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "deployedModels": {
            "description": "Output only. The models deployed in this Endpoint. To add or remove DeployedModels use EndpointService.DeployModel and EndpointService.UndeployModel respectively.",
            "items": {
              "$ref": "#/$defs/GoogleCloudAiplatformV1DeployedModel"
            },
            "readOnly": true,
            "type": "array"
          },
          "description": {
            "description": "The description of the Endpoint.",
            "type": "string"
          },
          "displayName": {
            "description": "Required. The display name of the Endpoint. The name can be up to 128 characters long and can consist of any UTF-8 characters.",
            "type": "string"
          },
          "enablePrivateServiceConnect": {
            "deprecated": true,
            "description": "Deprecated: If true, expose the Endpoint via private service connect. Only one of the fields, network or enable_private_service_connect, can be set.",
            "type": "boolean"
          },
          "encryptionSpec": {
            "$ref": "#/$defs/GoogleCloudAiplatformV1EncryptionSpec"
          },
          "etag": {
            "description": "Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The labels with user-defined metadata to organize your Endpoints. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.",
            "type": "object"
          },
          "modelDeploymentMonitoringJob": {
            "description": "Output only. Resource name of the Model Monitoring job associated with this Endpoint if monitoring is enabled by JobService.CreateModelDeploymentMonitoringJob. Format: `projects/{project}/locations/{location}/modelDeploymentMonitoringJobs/{model_deployment_monitoring_job}`",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "Output only. The resource name of the Endpoint.",
            "readOnly": true,
            "type": "string"
          },
          "network": {
            "description": "Optional. The full name of the Google Compute Engine [network](https://cloud.google.com//compute/docs/networks-and-firewalls#networks) to which the Endpoint should be peered. Private services access must already be configured for the network. If left unspecified, the Endpoint is not peered with any network. Only one of the fields, network or enable_private_service_connect, can be set. [Format](https://cloud.google.com/compute/docs/reference/rest/v1/networks/insert): `projects/{project}/global/networks/{network}`. Where `{project}` is a project number, as in `12345`, and `{network}` is network name.",
            "type": "string"
          },
          "predictRequestResponseLoggingConfig": {
            "$ref": "#/$defs/GoogleCloudAiplatformV1PredictRequestResponseLoggingConfig"
          },
          "privateServiceConnectConfig": {
            "$ref": "#/$defs/GoogleCloudAiplatformV1PrivateServiceConnectConfig"
          },
          "trafficSplit": {
            "additionalProperties": {
              "format": "int32",
              "type": "integer"
            },
            "description": "A map from a DeployedModel's ID to the percentage of this Endpoint's traffic that should be forwarded to that DeployedModel. If a DeployedModel's ID is not listed in this map, then it receives no traffic. The traffic percentage values must add up to 100, or map must be empty if the Endpoint is to not accept any traffic at a moment.",
            "type": "object"
          },
          "updateTime": {
            "description": "Output only. Timestamp when this Endpoint was last updated.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1DeployedModel": {
        "description": "A deployment of a Model. Endpoints contain one or more DeployedModels.",
        "properties": {
          "automaticResources": {
            "$ref": "#/$defs/GoogleCloudAiplatformV1AutomaticResources"
          },
          "createTime": {
            "description": "Output only. Timestamp when the DeployedModel was created.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "dedicatedResources": {
            "$ref": "#/$defs/GoogleCloudAiplatformV1DedicatedResources"
          },
          "disableContainerLogging": {
            "description": "For custom-trained Models and AutoML Tabular Models, the container of the DeployedModel instances will send `stderr` and `stdout` streams to Cloud Logging by default. Please note that the logs incur cost, which are subject to [Cloud Logging pricing](https://cloud.google.com/logging/pricing). User can disable container logging by setting this flag to true.",
            "type": "boolean"
          },
          "displayName": {
            "description": "The display name of the DeployedModel. If not provided upon creation, the Model's display_name is used.",
            "type": "string"
          },
          "enableAccessLogging": {
            "description": "If true, online prediction access logs are sent to Cloud Logging. These logs are like standard server access logs, containing information like timestamp and latency for each prediction request. Note that logs may incur a cost, especially if your project receives prediction requests at a high queries per second rate (QPS). Estimate your costs before enabling this option.",
            "type": "boolean"
          },
          "explanationSpec": {
            "$ref": "#/$defs/GoogleCloudAiplatformV1ExplanationSpec"
          },
          "id": {
            "description": "Immutable. The ID of the DeployedModel. If not provided upon deployment, Vertex AI will generate a value for this ID. This value should be 1-10 characters, and valid characters are `/[0-9]/`.",
            "type": "string"
          },
          "model": {
            "description": "Required. The resource name of the Model that this is the deployment of. Note that the Model may be in a different location than the DeployedModel's Endpoint. The resource name may contain version id or version alias to specify the version. Example: `projects/{project}/locations/{location}/models/{model}@2` or `projects/{project}/locations/{location}/models/{model}@golden` if no version is specified, the default version will be deployed.",
            "type": "string"
          },
          "modelVersionId": {
            "description": "Output only. The version ID of the model that is deployed.",
            "readOnly": true,
            "type": "string"
          },
          "privateEndpoints": {
            "$ref": "#/$defs/GoogleCloudAiplatformV1PrivateEndpoints"
          },
          "serviceAccount": {
            "description": "The service account that the DeployedModel's container runs as. Specify the email address of the service account. If this service account is not specified, the container runs as a service account that doesn't have access to the resource project. Users deploying the Model must have the `iam.serviceAccounts.actAs` permission on this service account.",
            "type": "string"
          },
          "sharedResources": {
            "description": "The resource name of the shared DeploymentResourcePool to deploy on. Format: `projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool}`",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1AutomaticResources": {
        "description": "A description of resources that to large degree are decided by Vertex AI, and require only a modest additional configuration. Each Model supporting these resources documents its specific guidelines.",
        "properties": {
          "maxReplicaCount": {
            "description": "Immutable. The maximum number of replicas this DeployedModel may be deployed on when the traffic against it increases. If the requested value is too large, the deployment will error, but if deployment succeeds then the ability to scale the model to that many replicas is guaranteed (barring service outages). If traffic against the DeployedModel increases beyond what its replicas at maximum may handle, a portion of the traffic will be dropped. If this value is not provided, a no upper bound for scaling under heavy traffic will be assume, though Vertex AI may be unable to scale beyond certain replica number.",
            "format": "int32",
            "type": "integer"
          },
          "minReplicaCount": {
            "description": "Immutable. The minimum number of replicas this DeployedModel will be always deployed on. If traffic against it increases, it may dynamically be deployed onto more replicas up to max_replica_count, and as traffic decreases, some of these extra replicas may be freed. If the requested value is too large, the deployment will error.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1DedicatedResources": {
        "description": "A description of resources that are dedicated to a DeployedModel, and that need a higher degree of manual configuration.",
        "properties": {
          "autoscalingMetricSpecs": {
            "description": "Immutable. The metric specifications that overrides a resource utilization metric (CPU utilization, accelerator's duty cycle, and so on) target value (default to 60 if not set). At most one entry is allowed per metric. If machine_spec.accelerator_count is above 0, the autoscaling will be based on both CPU utilization and accelerator's duty cycle metrics and scale up when either metrics exceeds its target value while scale down if both metrics are under their target value. The default target value is 60 for both metrics. If machine_spec.accelerator_count is 0, the autoscaling will be based on CPU utilization metric only with default target value 60 if not explicitly set. For example, in the case of Online Prediction, if you want to override target CPU utilization to 80, you should set autoscaling_metric_specs.metric_name to `aiplatform.googleapis.com/prediction/online/cpu/utilization` and autoscaling_metric_specs.target to `80`.",
            "items": {
              "$ref": "#/$defs/GoogleCloudAiplatformV1AutoscalingMetricSpec"
            },
            "type": "array"
          },
          "machineSpec": {
            "$ref": "#/$defs/GoogleCloudAiplatformV1MachineSpec"
          },
          "maxReplicaCount": {
            "description": "Immutable. The maximum number of replicas this DeployedModel may be deployed on when the traffic against it increases. If the requested value is too large, the deployment will error, but if deployment succeeds then the ability to scale the model to that many replicas is guaranteed (barring service outages). If traffic against the DeployedModel increases beyond what its replicas at maximum may handle, a portion of the traffic will be dropped. If this value is not provided, will use min_replica_count as the default value. The value of this field impacts the charge against Vertex CPU and GPU quotas. Specifically, you will be charged for (max_replica_count * number of cores in the selected machine type) and (max_replica_count * number of GPUs per replica in the selected machine type).",
            "format": "int32",
            "type": "integer"
          },
          "minReplicaCount": {
            "description": "Required. Immutable. The minimum number of machine replicas this DeployedModel will be always deployed on. This value must be greater than or equal to 1. If traffic against the DeployedModel increases, it may dynamically be deployed onto more replicas, and as traffic decreases, some of these extra replicas may be freed.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1AutoscalingMetricSpec": {
        "description": "The metric specification that defines the target resource utilization (CPU utilization, accelerator's duty cycle, and so on) for calculating the desired replica count.",
        "properties": {
          "metricName": {
            "description": "Required. The resource metric name. Supported metrics: * For Online Prediction: * `aiplatform.googleapis.com/prediction/online/accelerator/duty_cycle` * `aiplatform.googleapis.com/prediction/online/cpu/utilization`",
            "type": "string"
          },
          "target": {
            "description": "The target resource utilization in percentage (1% - 100%) for the given metric; once the real usage deviates from the target by a certain percentage, the machine replicas change. The default value is 60 (representing 60%) if not provided.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1MachineSpec": {
        "description": "Specification of a single machine.",
        "properties": {
          "acceleratorCount": {
            "description": "The number of accelerators to attach to the machine.",
            "format": "int32",
            "type": "integer"
          },
          "acceleratorType": {
            "description": "Immutable. The type of accelerator(s) that may be attached to the machine as per accelerator_count.",
            "enum": [
              "ACCELERATOR_TYPE_UNSPECIFIED",
              "NVIDIA_TESLA_K80",
              "NVIDIA_TESLA_P100",
              "NVIDIA_TESLA_V100",
              "NVIDIA_TESLA_P4",
              "NVIDIA_TESLA_T4",
              "NVIDIA_TESLA_A100",
              "NVIDIA_A100_80GB",
              "NVIDIA_L4",
              "NVIDIA_H100_80GB",
              "TPU_V2",
              "TPU_V3",
              "TPU_V4_POD"
            ],
            "type": "string"
          },
          "machineType": {
            "description": "Immutable. The type of the machine. See the [list of machine types supported for prediction](https://cloud.google.com/vertex-ai/docs/predictions/configure-compute#machine-types) See the [list of machine types supported for custom training](https://cloud.google.com/vertex-ai/docs/training/configure-compute#machine-types). For DeployedModel this field is optional, and the default value is `n1-standard-2`. For BatchPredictionJob or as part of WorkerPoolSpec this field is required.",
            "type": "string"
          },
          "tpuTopology": {
            "description": "Immutable. The topology of the TPUs. Corresponds to the TPU topologies available from GKE. (Example: tpu_topology: \"2x2x1\").",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1ExplanationSpec": {
        "description": "Specification of Model explanation.",
        "properties": {
          "metadata": {
            "$ref": "#/$defs/GoogleCloudAiplatformV1ExplanationMetadata"
          },
          "parameters": {
            "$ref": "#/$defs/GoogleCloudAiplatformV1ExplanationParameters"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1ExplanationMetadata": {
        "description": "Metadata describing the Model's input and output for explanation.",
        "properties": {
          "featureAttributionsSchemaUri": {
            "description": "Points to a YAML file stored on Google Cloud Storage describing the format of the feature attributions. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). AutoML tabular Models always have this field populated by Vertex AI. Note: The URI given on output may be different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access.",
            "type": "string"
          },
          "inputs": {
            "additionalProperties": {
              "$ref": "#/$defs/GoogleCloudAiplatformV1ExplanationMetadataInputMetadata"
            },
            "description": "Required. Map from feature names to feature input metadata. Keys are the name of the features. Values are the specification of the feature. An empty InputMetadata is valid. It describes a text feature which has the name specified as the key in ExplanationMetadata.inputs. The baseline of the empty feature is chosen by Vertex AI. For Vertex AI-provided Tensorflow images, the key can be any friendly name of the feature. Once specified, featureAttributions are keyed by this key (if not grouped with another feature). For custom images, the key must match with the key in instance.",
            "type": "object"
          },
          "latentSpaceSource": {
            "description": "Name of the source to generate embeddings for example based explanations.",
            "type": "string"
          },
          "outputs": {
            "additionalProperties": {
              "$ref": "#/$defs/GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata"
            },
            "description": "Required. Map from output names to output metadata. For Vertex AI-provided Tensorflow images, keys can be any user defined string that consists of any UTF-8 characters. For custom images, keys are the name of the output field in the prediction to be explained. Currently only one key is allowed.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1ExplanationMetadataInputMetadata": {
        "description": "Metadata of the input of a feature. Fields other than InputMetadata.input_baselines are applicable only for Models that are using Vertex AI-provided images for Tensorflow.",
        "properties": {
          "denseShapeTensorName": {
            "description": "Specifies the shape of the values of the input if the input is a sparse representation. Refer to Tensorflow documentation for more details: https://www.tensorflow.org/api_docs/python/tf/sparse/SparseTensor.",
            "type": "string"
          },
          "encodedBaselines": {
            "description": "A list of baselines for the encoded tensor. The shape of each baseline should match the shape of the encoded tensor. If a scalar is provided, Vertex AI broadcasts to the same shape as the encoded tensor.",
            "items": {},
            "type": "array"
          },
          "encodedTensorName": {
            "description": "Encoded tensor is a transformation of the input tensor. Must be provided if choosing Integrated Gradients attribution or XRAI attribution and the input tensor is not differentiable. An encoded tensor is generated if the input tensor is encoded by a lookup table.",
            "type": "string"
          },
          "encoding": {
            "description": "Defines how the feature is encoded into the input tensor. Defaults to IDENTITY.",
            "enum": [
              "ENCODING_UNSPECIFIED",
              "IDENTITY",
              "BAG_OF_FEATURES",
              "BAG_OF_FEATURES_SPARSE",
              "INDICATOR",
              "COMBINED_EMBEDDING",
              "CONCAT_EMBEDDING"
            ],
            "type": "string"
          },
          "featureValueDomain": {
            "$ref": "#/$defs/GoogleCloudAiplatformV1ExplanationMetadataInputMetadataFeatureValueDomain"
          },
          "groupName": {
            "description": "Name of the group that the input belongs to. Features with the same group name will be treated as one feature when computing attributions. Features grouped together can have different shapes in value. If provided, there will be one single attribution generated in Attribution.feature_attributions, keyed by the group name.",
            "type": "string"
          },
          "indexFeatureMapping": {
            "description": "A list of feature names for each index in the input tensor. Required when the input InputMetadata.encoding is BAG_OF_FEATURES, BAG_OF_FEATURES_SPARSE, INDICATOR.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "indicesTensorName": {
            "description": "Specifies the index of the values of the input tensor. Required when the input tensor is a sparse representation. Refer to Tensorflow documentation for more details: https://www.tensorflow.org/api_docs/python/tf/sparse/SparseTensor.",
            "type": "string"
          },
          "inputBaselines": {
            "description": "Baseline inputs for this feature. If no baseline is specified, Vertex AI chooses the baseline for this feature. If multiple baselines are specified, Vertex AI returns the average attributions across them in Attribution.feature_attributions. For Vertex AI-provided Tensorflow images (both 1.x and 2.x), the shape of each baseline must match the shape of the input tensor. If a scalar is provided, we broadcast to the same shape as the input tensor. For custom images, the element of the baselines must be in the same format as the feature's input in the instance[]. The schema of any single instance may be specified via Endpoint's DeployedModels' Model's PredictSchemata's instance_schema_uri.",
            "items": {},
            "type": "array"
          },
          "inputTensorName": {
            "description": "Name of the input tensor for this feature. Required and is only applicable to Vertex AI-provided images for Tensorflow.",
            "type": "string"
          },
          "modality": {
            "description": "Modality of the feature. Valid values are: numeric, image. Defaults to numeric.",
            "type": "string"
          },
          "visualization": {
            "$ref": "#/$defs/GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualization"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1ExplanationMetadataInputMetadataFeatureValueDomain": {
        "description": "Domain details of the input feature value. Provides numeric information about the feature, such as its range (min, max). If the feature has been pre-processed, for example with z-scoring, then it provides information about how to recover the original feature. For example, if the input feature is an image and it has been pre-processed to obtain 0-mean and stddev = 1 values, then original_mean, and original_stddev refer to the mean and stddev of the original feature (e.g. image tensor) from which input feature (with mean = 0 and stddev = 1) was obtained.",
        "properties": {
          "maxValue": {
            "description": "The maximum permissible value for this feature.",
            "format": "float",
            "type": "number"
          },
          "minValue": {
            "description": "The minimum permissible value for this feature.",
            "format": "float",
            "type": "number"
          },
          "originalMean": {
            "description": "If this input feature has been normalized to a mean value of 0, the original_mean specifies the mean value of the domain prior to normalization.",
            "format": "float",
            "type": "number"
          },
          "originalStddev": {
            "description": "If this input feature has been normalized to a standard deviation of 1.0, the original_stddev specifies the standard deviation of the domain prior to normalization.",
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualization": {
        "description": "Visualization configurations for image explanation.",
        "properties": {
          "clipPercentLowerbound": {
            "description": "Excludes attributions below the specified percentile, from the highlighted areas. Defaults to 62.",
            "format": "float",
            "type": "number"
          },
          "clipPercentUpperbound": {
            "description": "Excludes attributions above the specified percentile from the highlighted areas. Using the clip_percent_upperbound and clip_percent_lowerbound together can be useful for filtering out noise and making it easier to see areas of strong attribution. Defaults to 99.9.",
            "format": "float",
            "type": "number"
          },
          "colorMap": {
            "description": "The color scheme used for the highlighted areas. Defaults to PINK_GREEN for Integrated Gradients attribution, which shows positive attributions in green and negative in pink. Defaults to VIRIDIS for XRAI attribution, which highlights the most influential regions in yellow and the least influential in blue.",
            "enum": [
              "COLOR_MAP_UNSPECIFIED",
              "PINK_GREEN",
              "VIRIDIS",
              "RED",
              "GREEN",
              "RED_GREEN",
              "PINK_WHITE_GREEN"
            ],
            "type": "string"
          },
          "overlayType": {
            "description": "How the original image is displayed in the visualization. Adjusting the overlay can help increase visual clarity if the original image makes it difficult to view the visualization. Defaults to NONE.",
            "enum": [
              "OVERLAY_TYPE_UNSPECIFIED",
              "NONE",
              "ORIGINAL",
              "GRAYSCALE",
              "MASK_BLACK"
            ],
            "type": "string"
          },
          "polarity": {
            "description": "Whether to only highlight pixels with positive contributions, negative or both. Defaults to POSITIVE.",
            "enum": [
              "POLARITY_UNSPECIFIED",
              "POSITIVE",
              "NEGATIVE",
              "BOTH"
            ],
            "type": "string"
          },
          "type": {
            "description": "Type of the image visualization. Only applicable to Integrated Gradients attribution. OUTLINES shows regions of attribution, while PIXELS shows per-pixel attribution. Defaults to OUTLINES.",
            "enum": [
              "TYPE_UNSPECIFIED",
              "PIXELS",
              "OUTLINES"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata": {
        "description": "Metadata of the prediction output to be explained.",
        "properties": {
          "displayNameMappingKey": {
            "description": "Specify a field name in the prediction to look for the display name. Use this if the prediction contains the display names for the outputs. The display names in the prediction must have the same shape of the outputs, so that it can be located by Attribution.output_index for a specific output.",
            "type": "string"
          },
          "indexDisplayNameMapping": {
            "description": "Static mapping between the index and display name. Use this if the outputs are a deterministic n-dimensional array, e.g. a list of scores of all the classes in a pre-defined order for a multi-classification Model. It's not feasible if the outputs are non-deterministic, e.g. the Model produces top-k classes or sort the outputs by their values. The shape of the value must be an n-dimensional array of strings. The number of dimensions must match that of the outputs to be explained. The Attribution.output_display_name is populated by locating in the mapping with Attribution.output_index."
          },
          "outputTensorName": {
            "description": "Name of the output tensor. Required and is only applicable to Vertex AI provided images for Tensorflow.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1ExplanationParameters": {
        "description": "Parameters to configure explaining for Model's predictions.",
        "properties": {
          "examples": {
            "$ref": "#/$defs/GoogleCloudAiplatformV1Examples"
          },
          "integratedGradientsAttribution": {
            "$ref": "#/$defs/GoogleCloudAiplatformV1IntegratedGradientsAttribution"
          },
          "outputIndices": {
            "description": "If populated, only returns attributions that have output_index contained in output_indices. It must be an ndarray of integers, with the same shape of the output it's explaining. If not populated, returns attributions for top_k indices of outputs. If neither top_k nor output_indices is populated, returns the argmax index of the outputs. Only applicable to Models that predict multiple outputs (e,g, multi-class Models that predict multiple classes).",
            "items": {},
            "type": "array"
          },
          "sampledShapleyAttribution": {
            "$ref": "#/$defs/GoogleCloudAiplatformV1SampledShapleyAttribution"
          },
          "topK": {
            "description": "If populated, returns attributions for top K indices of outputs (defaults to 1). Only applies to Models that predicts more than one outputs (e,g, multi-class Models). When set to -1, returns explanations for all outputs.",
            "format": "int32",
            "type": "integer"
          },
          "xraiAttribution": {
            "$ref": "#/$defs/GoogleCloudAiplatformV1XraiAttribution"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1Examples": {
        "description": "Example-based explainability that returns the nearest neighbors from the provided dataset.",
        "properties": {
          "exampleGcsSource": {
            "$ref": "#/$defs/GoogleCloudAiplatformV1ExamplesExampleGcsSource"
          },
          "nearestNeighborSearchConfig": {
            "description": "The full configuration for the generated index, the semantics are the same as metadata and should match [NearestNeighborSearchConfig](https://cloud.google.com/vertex-ai/docs/explainable-ai/configuring-explanations-example-based#nearest-neighbor-search-config)."
          },
          "neighborCount": {
            "description": "The number of neighbors to return when querying for examples.",
            "format": "int32",
            "type": "integer"
          },
          "presets": {
            "$ref": "#/$defs/GoogleCloudAiplatformV1Presets"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1ExamplesExampleGcsSource": {
        "description": "The Cloud Storage input instances.",
        "properties": {
          "dataFormat": {
            "description": "The format in which instances are given, if not specified, assume it's JSONL format. Currently only JSONL format is supported.",
            "enum": [
              "DATA_FORMAT_UNSPECIFIED",
              "JSONL"
            ],
            "type": "string"
          },
          "gcsSource": {
            "$ref": "#/$defs/GoogleCloudAiplatformV1GcsSource"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1GcsSource": {
        "description": "The Google Cloud Storage location for the input content.",
        "properties": {
          "uris": {
            "description": "Required. Google Cloud Storage URI(-s) to the input file(s). May contain wildcards. For more information on wildcards, see https://cloud.google.com/storage/docs/gsutil/addlhelp/WildcardNames.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1Presets": {
        "description": "Preset configuration for example-based explanations",
        "properties": {
          "modality": {
            "description": "The modality of the uploaded model, which automatically configures the distance measurement and feature normalization for the underlying example index and queries. If your model does not precisely fit one of these types, it is okay to choose the closest type.",
            "enum": [
              "MODALITY_UNSPECIFIED",
              "IMAGE",
              "TEXT",
              "TABULAR"
            ],
            "type": "string"
          },
          "query": {
            "description": "Preset option controlling parameters for speed-precision trade-off when querying for examples. If omitted, defaults to `PRECISE`.",
            "enum": [
              "PRECISE",
              "FAST"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1IntegratedGradientsAttribution": {
        "description": "An attribution method that computes the Aumann-Shapley value taking advantage of the model's fully differentiable structure. Refer to this paper for more details: https://arxiv.org/abs/1703.01365",
        "properties": {
          "blurBaselineConfig": {
            "$ref": "#/$defs/GoogleCloudAiplatformV1BlurBaselineConfig"
          },
          "smoothGradConfig": {
            "$ref": "#/$defs/GoogleCloudAiplatformV1SmoothGradConfig"
          },
          "stepCount": {
            "description": "Required. The number of steps for approximating the path integral. A good value to start is 50 and gradually increase until the sum to diff property is within the desired error range. Valid range of its value is [1, 100], inclusively.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1BlurBaselineConfig": {
        "description": "Config for blur baseline. When enabled, a linear path from the maximally blurred image to the input image is created. Using a blurred baseline instead of zero (black image) is motivated by the BlurIG approach explained here: https://arxiv.org/abs/2004.03383",
        "properties": {
          "maxBlurSigma": {
            "description": "The standard deviation of the blur kernel for the blurred baseline. The same blurring parameter is used for both the height and the width dimension. If not set, the method defaults to the zero (i.e. black for images) baseline.",
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1SmoothGradConfig": {
        "description": "Config for SmoothGrad approximation of gradients. When enabled, the gradients are approximated by averaging the gradients from noisy samples in the vicinity of the inputs. Adding noise can help improve the computed gradients. Refer to this paper for more details: https://arxiv.org/pdf/1706.03825.pdf",
        "properties": {
          "featureNoiseSigma": {
            "$ref": "#/$defs/GoogleCloudAiplatformV1FeatureNoiseSigma"
          },
          "noiseSigma": {
            "description": "This is a single float value and will be used to add noise to all the features. Use this field when all features are normalized to have the same distribution: scale to range [0, 1], [-1, 1] or z-scoring, where features are normalized to have 0-mean and 1-variance. Learn more about [normalization](https://developers.google.com/machine-learning/data-prep/transform/normalization). For best results the recommended value is about 10% - 20% of the standard deviation of the input feature. Refer to section 3.2 of the SmoothGrad paper: https://arxiv.org/pdf/1706.03825.pdf. Defaults to 0.1. If the distribution is different per feature, set feature_noise_sigma instead for each feature.",
            "format": "float",
            "type": "number"
          },
          "noisySampleCount": {
            "description": "The number of gradient samples to use for approximation. The higher this number, the more accurate the gradient is, but the runtime complexity increases by this factor as well. Valid range of its value is [1, 50]. Defaults to 3.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1FeatureNoiseSigma": {
        "description": "Noise sigma by features. Noise sigma represents the standard deviation of the gaussian kernel that will be used to add noise to interpolated inputs prior to computing gradients.",
        "properties": {
          "noiseSigma": {
            "description": "Noise sigma per feature. No noise is added to features that are not set.",
            "items": {
              "$ref": "#/$defs/GoogleCloudAiplatformV1FeatureNoiseSigmaNoiseSigmaForFeature"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1FeatureNoiseSigmaNoiseSigmaForFeature": {
        "description": "Noise sigma for a single feature.",
        "properties": {
          "name": {
            "description": "The name of the input feature for which noise sigma is provided. The features are defined in explanation metadata inputs.",
            "type": "string"
          },
          "sigma": {
            "description": "This represents the standard deviation of the Gaussian kernel that will be used to add noise to the feature prior to computing gradients. Similar to noise_sigma but represents the noise added to the current feature. Defaults to 0.1.",
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1SampledShapleyAttribution": {
        "description": "An attribution method that approximates Shapley values for features that contribute to the label being predicted. A sampling strategy is used to approximate the value rather than considering all subsets of features.",
        "properties": {
          "pathCount": {
            "description": "Required. The number of feature permutations to consider when approximating the Shapley values. Valid range of its value is [1, 50], inclusively.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1XraiAttribution": {
        "description": "An explanation method that redistributes Integrated Gradients attributions to segmented regions, taking advantage of the model's fully differentiable structure. Refer to this paper for more details: https://arxiv.org/abs/1906.02825 Supported only by image Models.",
        "properties": {
          "blurBaselineConfig": {
            "$ref": "#/$defs/GoogleCloudAiplatformV1BlurBaselineConfig"
          },
          "smoothGradConfig": {
            "$ref": "#/$defs/GoogleCloudAiplatformV1SmoothGradConfig"
          },
          "stepCount": {
            "description": "Required. The number of steps for approximating the path integral. A good value to start is 50 and gradually increase until the sum to diff property is met within the desired error range. Valid range of its value is [1, 100], inclusively.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1PrivateEndpoints": {
        "description": "PrivateEndpoints proto is used to provide paths for users to send requests privately. To send request via private service access, use predict_http_uri, explain_http_uri or health_http_uri. To send request via private service connect, use service_attachment.",
        "properties": {
          "explainHttpUri": {
            "description": "Output only. Http(s) path to send explain requests.",
            "readOnly": true,
            "type": "string"
          },
          "healthHttpUri": {
            "description": "Output only. Http(s) path to send health check requests.",
            "readOnly": true,
            "type": "string"
          },
          "predictHttpUri": {
            "description": "Output only. Http(s) path to send prediction requests.",
            "readOnly": true,
            "type": "string"
          },
          "serviceAttachment": {
            "description": "Output only. The name of the service attachment resource. Populated if private service connect is enabled.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1EncryptionSpec": {
        "description": "Represents a customer-managed encryption key spec that can be applied to a top-level resource.",
        "properties": {
          "kmsKeyName": {
            "description": "Required. The Cloud KMS resource identifier of the customer managed encryption key used to protect a resource. Has the form: `projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key`. The key needs to be in the same region as where the compute resource is created.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1PredictRequestResponseLoggingConfig": {
        "description": "Configuration for logging request-response to a BigQuery table.",
        "properties": {
          "bigqueryDestination": {
            "$ref": "#/$defs/GoogleCloudAiplatformV1BigQueryDestination"
          },
          "enabled": {
            "description": "If logging is enabled or not.",
            "type": "boolean"
          },
          "samplingRate": {
            "description": "Percentage of requests to be logged, expressed as a fraction in range(0,1].",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1BigQueryDestination": {
        "description": "The BigQuery location for the output content.",
        "properties": {
          "outputUri": {
            "description": "Required. BigQuery URI to a project or table, up to 2000 characters long. When only the project is specified, the Dataset and Table is created. When the full table reference is specified, the Dataset must exist and table must not exist. Accepted forms: * BigQuery path. For example: `bq://projectId` or `bq://projectId.bqDatasetId` or `bq://projectId.bqDatasetId.bqTableId`.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1PrivateServiceConnectConfig": {
        "description": "Represents configuration for private service connect.",
        "properties": {
          "enablePrivateServiceConnect": {
            "description": "Required. If true, expose the IndexEndpoint via private service connect.",
            "type": "boolean"
          },
          "projectAllowlist": {
            "description": "A list of Projects from which the forwarding rule will target the service attachment.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://aiplatform.googleapis.com//v1/{parent}/endpoints{?endpointId,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "This resource represents a long-running operation that is the result of a network API call.",
        "**Key properties:**",
        {
          "$ul": [
            "**done**: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
            [
              "**error**: The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
              {
                "$ul": [
                  "**code**: The status code, which should be an enum value of google.rpc.Code.",
                  "**details**: A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                  "**message**: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                ]
              }
            ],
            "**metadata**: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
            "**name**: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
            "**response**: The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
