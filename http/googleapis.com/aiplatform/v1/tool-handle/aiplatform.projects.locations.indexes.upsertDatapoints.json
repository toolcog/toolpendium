{
  "name": "aiplatform_projects_locations_indexes_upsertDatapoints",
  "description": "Add/update Datapoints into an Index.",
  "parameters": {
    "type": "object",
    "properties": {
      "index": {
        "type": "string",
        "description": "Required. The name of the Index resource to be updated. Format: `projects/{project}/locations/{location}/indexes/{index}`"
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleCloudAiplatformV1UpsertDatapointsRequest"
      }
    },
    "required": [
      "index"
    ],
    "$defs": {
      "GoogleCloudAiplatformV1UpsertDatapointsRequest": {
        "description": "Request message for IndexService.UpsertDatapoints",
        "properties": {
          "datapoints": {
            "description": "A list of datapoints to be created/updated.",
            "items": {
              "$ref": "#/$defs/GoogleCloudAiplatformV1IndexDatapoint"
            },
            "type": "array"
          },
          "updateMask": {
            "description": "Optional. Update mask is used to specify the fields to be overwritten in the datapoints by the update. The fields specified in the update_mask are relative to each IndexDatapoint inside datapoints, not the full request. Updatable fields: * Use `all_restricts` to update both restricts and numeric_restricts.",
            "format": "google-fieldmask",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1IndexDatapoint": {
        "description": "A datapoint of Index.",
        "properties": {
          "crowdingTag": {
            "$ref": "#/$defs/GoogleCloudAiplatformV1IndexDatapointCrowdingTag"
          },
          "datapointId": {
            "description": "Required. Unique identifier of the datapoint.",
            "type": "string"
          },
          "featureVector": {
            "description": "Required. Feature embedding vector. An array of numbers with the length of [NearestNeighborSearchConfig.dimensions].",
            "items": {
              "format": "float",
              "type": "number"
            },
            "type": "array"
          },
          "numericRestricts": {
            "description": "Optional. List of Restrict of the datapoint, used to perform \"restricted searches\" where boolean rule are used to filter the subset of the database eligible for matching. This uses numeric comparisons.",
            "items": {
              "$ref": "#/$defs/GoogleCloudAiplatformV1IndexDatapointNumericRestriction"
            },
            "type": "array"
          },
          "restricts": {
            "description": "Optional. List of Restrict of the datapoint, used to perform \"restricted searches\" where boolean rule are used to filter the subset of the database eligible for matching. This uses categorical tokens. See: https://cloud.google.com/vertex-ai/docs/matching-engine/filtering",
            "items": {
              "$ref": "#/$defs/GoogleCloudAiplatformV1IndexDatapointRestriction"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1IndexDatapointCrowdingTag": {
        "description": "Crowding tag is a constraint on a neighbor list produced by nearest neighbor search requiring that no more than some value k' of the k neighbors returned have the same value of crowding_attribute.",
        "properties": {
          "crowdingAttribute": {
            "description": "The attribute value used for crowding. The maximum number of neighbors to return per crowding attribute value (per_crowding_attribute_num_neighbors) is configured per-query. This field is ignored if per_crowding_attribute_num_neighbors is larger than the total number of neighbors to return for a given query.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1IndexDatapointNumericRestriction": {
        "description": "This field allows restricts to be based on numeric comparisons rather than categorical tokens.",
        "properties": {
          "namespace": {
            "description": "The namespace of this restriction. e.g.: cost.",
            "type": "string"
          },
          "op": {
            "description": "This MUST be specified for queries and must NOT be specified for datapoints.",
            "enum": [
              "OPERATOR_UNSPECIFIED",
              "LESS",
              "LESS_EQUAL",
              "EQUAL",
              "GREATER_EQUAL",
              "GREATER",
              "NOT_EQUAL"
            ],
            "type": "string"
          },
          "valueDouble": {
            "description": "Represents 64 bit float.",
            "format": "double",
            "type": "number"
          },
          "valueFloat": {
            "description": "Represents 32 bit float.",
            "format": "float",
            "type": "number"
          },
          "valueInt": {
            "description": "Represents 64 bit integer.",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1IndexDatapointRestriction": {
        "description": "Restriction of a datapoint which describe its attributes(tokens) from each of several attribute categories(namespaces).",
        "properties": {
          "allowList": {
            "description": "The attributes to allow in this namespace. e.g.: 'red'",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "denyList": {
            "description": "The attributes to deny in this namespace. e.g.: 'blue'",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "namespace": {
            "description": "The namespace of this restriction. e.g.: color.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://aiplatform.googleapis.com//v1/{index}:upsertDatapoints{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Response message for IndexService.UpsertDatapoints",
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
