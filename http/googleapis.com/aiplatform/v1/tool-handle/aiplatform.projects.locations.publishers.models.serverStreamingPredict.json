{
  "name": "aiplatform_projects_locations_publishers_models_serverStreamingPredict",
  "description": "Perform a server-side streaming online prediction request for Vertex LLM streaming.",
  "parameters": {
    "type": "object",
    "properties": {
      "endpoint": {
        "type": "string",
        "description": "Required. The name of the Endpoint requested to serve the prediction. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`"
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleCloudAiplatformV1StreamingPredictRequest"
      }
    },
    "required": [
      "endpoint"
    ],
    "$defs": {
      "GoogleCloudAiplatformV1StreamingPredictRequest": {
        "description": "Request message for PredictionService.StreamingPredict. The first message must contain endpoint field and optionally input. The subsequent messages must contain input.",
        "properties": {
          "inputs": {
            "description": "The prediction input.",
            "items": {
              "$ref": "#/$defs/GoogleCloudAiplatformV1Tensor"
            },
            "type": "array"
          },
          "parameters": {
            "$ref": "#/$defs/GoogleCloudAiplatformV1Tensor"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1Tensor": {
        "description": "A tensor value type.",
        "properties": {
          "boolVal": {
            "description": "Type specific representations that make it easy to create tensor protos in all languages. Only the representation corresponding to \"dtype\" can be set. The values hold the flattened representation of the tensor in row major order. BOOL",
            "items": {
              "type": "boolean"
            },
            "type": "array"
          },
          "bytesVal": {
            "description": "STRING",
            "items": {
              "format": "byte",
              "type": "string"
            },
            "type": "array"
          },
          "doubleVal": {
            "description": "DOUBLE",
            "items": {
              "format": "double",
              "type": "number"
            },
            "type": "array"
          },
          "dtype": {
            "description": "The data type of tensor.",
            "enum": [
              "DATA_TYPE_UNSPECIFIED",
              "BOOL",
              "STRING",
              "FLOAT",
              "DOUBLE",
              "INT8",
              "INT16",
              "INT32",
              "INT64",
              "UINT8",
              "UINT16",
              "UINT32",
              "UINT64"
            ],
            "type": "string"
          },
          "floatVal": {
            "description": "FLOAT",
            "items": {
              "format": "float",
              "type": "number"
            },
            "type": "array"
          },
          "int64Val": {
            "description": "INT64",
            "items": {
              "format": "int64",
              "type": "string"
            },
            "type": "array"
          },
          "intVal": {
            "description": "INT_8 INT_16 INT_32",
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array"
          },
          "listVal": {
            "description": "A list of tensor values.",
            "items": {
              "$ref": "#/$defs/GoogleCloudAiplatformV1Tensor"
            },
            "type": "array"
          },
          "shape": {
            "description": "Shape of the tensor.",
            "items": {
              "format": "int64",
              "type": "string"
            },
            "type": "array"
          },
          "stringVal": {
            "description": "STRING",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "structVal": {
            "additionalProperties": {
              "$ref": "#/$defs/GoogleCloudAiplatformV1Tensor"
            },
            "description": "A map of string to tensor.",
            "type": "object"
          },
          "tensorVal": {
            "description": "Serialized raw tensor content.",
            "format": "byte",
            "type": "string"
          },
          "uint64Val": {
            "description": "UINT64",
            "items": {
              "format": "uint64",
              "type": "string"
            },
            "type": "array"
          },
          "uintVal": {
            "description": "UINT8 UINT16 UINT32",
            "items": {
              "format": "uint32",
              "type": "integer"
            },
            "type": "array"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://aiplatform.googleapis.com//v1/{endpoint}:serverStreamingPredict{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Response message for PredictionService.StreamingPredict.",
        "**Key properties:**",
        {
          "$ul": [
            "**outputs**: The prediction output.",
            [
              "**parameters**: A tensor value type.",
              {
                "$ul": [
                  "**boolVal**: Type specific representations that make it easy to create tensor protos in all languages. Only the representation corresponding to \"dtype\" can be set. The values hold the flattened representation of the tensor in row major order. BOOL",
                  "**bytesVal**: STRING",
                  "**doubleVal**: DOUBLE",
                  "**dtype**: The data type of tensor.",
                  "**floatVal**: FLOAT",
                  "**int64Val**: INT64",
                  "**intVal**: INT_8 INT_16 INT_32",
                  "**listVal**: A list of tensor values.",
                  "**shape**: Shape of the tensor.",
                  "**stringVal**: STRING",
                  "**structVal**: A map of string to tensor.",
                  "**tensorVal**: Serialized raw tensor content.",
                  "**uint64Val**: UINT64",
                  "**uintVal**: UINT8 UINT16 UINT32"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
