{
  "name": "aiplatform_projects_locations_datasets_searchDataItems",
  "description": "Searches DataItems in a Dataset.",
  "parameters": {
    "type": "object",
    "properties": {
      "dataset": {
        "type": "string",
        "description": "Required. The resource name of the Dataset from which to search DataItems. Format: `projects/{project}/locations/{location}/datasets/{dataset}`"
      },
      "annotationFilters": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "An expression that specifies what Annotations will be returned per DataItem. Annotations satisfied either of the conditions will be returned. * `annotation_spec_id` - for = or !=. Must specify `saved_query_id=` - saved query id that annotations should belong to."
      },
      "annotationsFilter": {
        "type": "string",
        "description": "An expression for filtering the Annotations that will be returned per DataItem. * `annotation_spec_id` - for = or !=."
      },
      "annotationsLimit": {
        "type": "integer",
        "description": "If set, only up to this many of Annotations will be returned per DataItemView. The maximum value is 1000. If not set, the maximum value will be used."
      },
      "dataItemFilter": {
        "type": "string",
        "description": "An expression for filtering the DataItem that will be returned. * `data_item_id` - for = or !=. * `labeled` - for = or !=. * `has_annotation(ANNOTATION_SPEC_ID)` - true only for DataItem that have at least one annotation with annotation_spec_id = `ANNOTATION_SPEC_ID` in the context of SavedQuery or DataLabelingJob. For example: * `data_item=1` * `has_annotation(5)`"
      },
      "dataLabelingJob": {
        "type": "string",
        "description": "The resource name of a DataLabelingJob. Format: `projects/{project}/locations/{location}/dataLabelingJobs/{data_labeling_job}` If this field is set, all of the search will be done in the context of this DataLabelingJob."
      },
      "fieldMask": {
        "type": "string",
        "description": "Mask specifying which fields of DataItemView to read."
      },
      "orderBy": {
        "type": "string",
        "description": "A comma-separated list of fields to order by, sorted in ascending order. Use \"desc\" after a field name for descending."
      },
      "orderByAnnotation.orderBy": {
        "type": "string",
        "description": "A comma-separated list of annotation fields to order by, sorted in ascending order. Use \"desc\" after a field name for descending. Must also specify saved_query."
      },
      "orderByAnnotation.savedQuery": {
        "type": "string",
        "description": "Required. Saved query of the Annotation. Only Annotations belong to this saved query will be considered for ordering."
      },
      "orderByDataItem": {
        "type": "string",
        "description": "A comma-separated list of data item fields to order by, sorted in ascending order. Use \"desc\" after a field name for descending."
      },
      "pageSize": {
        "type": "integer",
        "description": "Requested page size. Server may return fewer results than requested. Default and maximum page size is 100."
      },
      "pageToken": {
        "type": "string",
        "description": "A token identifying a page of results for the server to return Typically obtained via SearchDataItemsResponse.next_page_token of the previous DatasetService.SearchDataItems call."
      },
      "savedQuery": {
        "type": "string",
        "description": "The resource name of a SavedQuery(annotation set in UI). Format: `projects/{project}/locations/{location}/datasets/{dataset}/savedQueries/{saved_query}` All of the search will be done in the context of this SavedQuery."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      }
    },
    "required": [
      "dataset"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://aiplatform.googleapis.com//v1/{dataset}:searchDataItems{?annotationFilters,annotationsFilter,annotationsLimit,dataItemFilter,dataLabelingJob,fieldMask,orderBy,orderByAnnotation.orderBy,orderByAnnotation.savedQuery,orderByDataItem,pageSize,pageToken,savedQuery,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Response message for DatasetService.SearchDataItems.",
        "**Key properties:**",
        {
          "$ul": [
            "**dataItemViews**: The DataItemViews read.",
            "**nextPageToken**: A token to retrieve next page of results. Pass to SearchDataItemsRequest.page_token to obtain that page."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
