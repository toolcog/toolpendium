{
  "name": "aiplatform_projects_locations_notebookRuntimes_assign",
  "description": "Assigns a NotebookRuntime to a user for a particular Notebook file. This method will either returns an existing assignment or generates a new one.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The resource name of the Location to get the NotebookRuntime assignment. Format: `projects/{project}/locations/{location}`"
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleCloudAiplatformV1AssignNotebookRuntimeRequest"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "GoogleCloudAiplatformV1AssignNotebookRuntimeRequest": {
        "description": "Request message for NotebookService.AssignNotebookRuntime.",
        "properties": {
          "notebookRuntime": {
            "$ref": "#/$defs/GoogleCloudAiplatformV1NotebookRuntime"
          },
          "notebookRuntimeId": {
            "description": "Optional. User specified ID for the notebook runtime.",
            "type": "string"
          },
          "notebookRuntimeTemplate": {
            "description": "Required. The resource name of the NotebookRuntimeTemplate based on which a NotebookRuntime will be assigned (reuse or create a new one).",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1NotebookRuntime": {
        "description": "A runtime is a virtual machine allocated to a particular user for a particular Notebook file on temporary basis with lifetime limited to 24 hours.",
        "properties": {
          "createTime": {
            "description": "Output only. Timestamp when this NotebookRuntime was created.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "description": {
            "description": "The description of the NotebookRuntime.",
            "type": "string"
          },
          "displayName": {
            "description": "Required. The display name of the NotebookRuntime. The name can be up to 128 characters long and can consist of any UTF-8 characters.",
            "type": "string"
          },
          "expirationTime": {
            "description": "Output only. Timestamp when this NotebookRuntime will be expired: 1. System Predefined NotebookRuntime: 24 hours after creation. After expiration, system predifined runtime will be deleted. 2. User created NotebookRuntime: 6 months after last upgrade. After expiration, user created runtime will be stopped and allowed for upgrade.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "healthState": {
            "description": "Output only. The health state of the NotebookRuntime.",
            "enum": [
              "HEALTH_STATE_UNSPECIFIED",
              "HEALTHY",
              "UNHEALTHY"
            ],
            "readOnly": true,
            "type": "string"
          },
          "isUpgradable": {
            "description": "Output only. Whether NotebookRuntime is upgradable.",
            "readOnly": true,
            "type": "boolean"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The labels with user-defined metadata to organize your NotebookRuntime. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one NotebookRuntime (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with \"aiplatform.googleapis.com/\" and are immutable. Following system labels exist for NotebookRuntime: * \"aiplatform.googleapis.com/notebook_runtime_gce_instance_id\": output only, its value is the Compute Engine instance id. * \"aiplatform.googleapis.com/colab_enterprise_entry_service\": its value is either \"bigquery\" or \"vertex\"; if absent, it should be \"vertex\". This is to describe the entry service, either BigQuery or Vertex.",
            "type": "object"
          },
          "name": {
            "description": "Output only. The resource name of the NotebookRuntime.",
            "readOnly": true,
            "type": "string"
          },
          "networkTags": {
            "description": "Optional. The Compute Engine tags to add to runtime (see [Tagging instances](https://cloud.google.com/vpc/docs/add-remove-network-tags)).",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "notebookRuntimeTemplateRef": {
            "$ref": "#/$defs/GoogleCloudAiplatformV1NotebookRuntimeTemplateRef"
          },
          "notebookRuntimeType": {
            "description": "Output only. The type of the notebook runtime.",
            "enum": [
              "NOTEBOOK_RUNTIME_TYPE_UNSPECIFIED",
              "USER_DEFINED",
              "ONE_CLICK"
            ],
            "readOnly": true,
            "type": "string"
          },
          "proxyUri": {
            "description": "Output only. The proxy endpoint used to access the NotebookRuntime.",
            "readOnly": true,
            "type": "string"
          },
          "reservationAffinity": {
            "$ref": "#/$defs/GoogleCloudAiplatformV1NotebookReservationAffinity"
          },
          "runtimeState": {
            "description": "Output only. The runtime (instance) state of the NotebookRuntime.",
            "enum": [
              "RUNTIME_STATE_UNSPECIFIED",
              "RUNNING",
              "BEING_STARTED",
              "BEING_STOPPED",
              "STOPPED",
              "BEING_UPGRADED"
            ],
            "readOnly": true,
            "type": "string"
          },
          "runtimeUser": {
            "description": "Required. The user email of the NotebookRuntime.",
            "type": "string"
          },
          "serviceAccount": {
            "description": "Output only. The service account that the NotebookRuntime workload runs as.",
            "readOnly": true,
            "type": "string"
          },
          "updateTime": {
            "description": "Output only. Timestamp when this NotebookRuntime was most recently updated.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "version": {
            "description": "Output only. The VM os image version of NotebookRuntime.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1NotebookRuntimeTemplateRef": {
        "description": "Points to a NotebookRuntimeTemplateRef.",
        "properties": {
          "notebookRuntimeTemplate": {
            "description": "Immutable. A resource name of the NotebookRuntimeTemplate.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1NotebookReservationAffinity": {
        "description": "Notebook Reservation Affinity for consuming Zonal reservation.",
        "properties": {
          "consumeReservationType": {
            "description": "Required. Specifies the type of reservation from which this instance can consume resources: RESERVATION_ANY (default), RESERVATION_SPECIFIC, or RESERVATION_NONE. See Consuming reserved instances for examples.",
            "enum": [
              "RESERVATION_AFFINITY_TYPE_UNSPECIFIED",
              "RESERVATION_NONE",
              "RESERVATION_ANY",
              "RESERVATION_SPECIFIC"
            ],
            "type": "string"
          },
          "key": {
            "description": "Optional. Corresponds to the label key of a reservation resource. To target a RESERVATION_SPECIFIC by name, use compute.googleapis.com/reservation-name as the key and specify the name of your reservation as its value.",
            "type": "string"
          },
          "values": {
            "description": "Optional. Corresponds to the label values of a reservation resource. This must be the full path name of Reservation.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://aiplatform.googleapis.com//v1/{parent}/notebookRuntimes:assign{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "This resource represents a long-running operation that is the result of a network API call.",
        "**Key properties:**",
        {
          "$ul": [
            "**done**: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
            [
              "**error**: The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
              {
                "$ul": [
                  "**code**: The status code, which should be an enum value of google.rpc.Code.",
                  "**details**: A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                  "**message**: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                ]
              }
            ],
            "**metadata**: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
            "**name**: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
            "**response**: The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
