{
  "name": "aiplatform_projects_locations_indexes_create",
  "description": "Creates an Index.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The resource name of the Location to create the Index in. Format: `projects/{project}/locations/{location}`"
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleCloudAiplatformV1Index"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "GoogleCloudAiplatformV1Index": {
        "description": "A representation of a collection of database items organized in a way that allows for approximate nearest neighbor (a.k.a ANN) algorithms search.",
        "properties": {
          "createTime": {
            "description": "Output only. Timestamp when this Index was created.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "deployedIndexes": {
            "description": "Output only. The pointers to DeployedIndexes created from this Index. An Index can be only deleted if all its DeployedIndexes had been undeployed first.",
            "items": {
              "$ref": "#/$defs/GoogleCloudAiplatformV1DeployedIndexRef"
            },
            "readOnly": true,
            "type": "array"
          },
          "description": {
            "description": "The description of the Index.",
            "type": "string"
          },
          "displayName": {
            "description": "Required. The display name of the Index. The name can be up to 128 characters long and can consist of any UTF-8 characters.",
            "type": "string"
          },
          "encryptionSpec": {
            "$ref": "#/$defs/GoogleCloudAiplatformV1EncryptionSpec"
          },
          "etag": {
            "description": "Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
            "type": "string"
          },
          "indexStats": {
            "$ref": "#/$defs/GoogleCloudAiplatformV1IndexStats"
          },
          "indexUpdateMethod": {
            "description": "Immutable. The update method to use with this Index. If not set, BATCH_UPDATE will be used by default.",
            "enum": [
              "INDEX_UPDATE_METHOD_UNSPECIFIED",
              "BATCH_UPDATE",
              "STREAM_UPDATE"
            ],
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The labels with user-defined metadata to organize your Indexes. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.",
            "type": "object"
          },
          "metadata": {
            "description": "An additional information about the Index; the schema of the metadata can be found in metadata_schema."
          },
          "metadataSchemaUri": {
            "description": "Immutable. Points to a YAML file stored on Google Cloud Storage describing additional information about the Index, that is specific to it. Unset if the Index does not have any additional information. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). Note: The URI given on output will be immutable and probably different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access.",
            "type": "string"
          },
          "name": {
            "description": "Output only. The resource name of the Index.",
            "readOnly": true,
            "type": "string"
          },
          "updateTime": {
            "description": "Output only. Timestamp when this Index was most recently updated. This also includes any update to the contents of the Index. Note that Operations working on this Index may have their Operations.metadata.generic_metadata.update_time a little after the value of this timestamp, yet that does not mean their results are not already reflected in the Index. Result of any successfully completed Operation on the Index is reflected in it.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1DeployedIndexRef": {
        "description": "Points to a DeployedIndex.",
        "properties": {
          "deployedIndexId": {
            "description": "Immutable. The ID of the DeployedIndex in the above IndexEndpoint.",
            "type": "string"
          },
          "displayName": {
            "description": "Output only. The display name of the DeployedIndex.",
            "readOnly": true,
            "type": "string"
          },
          "indexEndpoint": {
            "description": "Immutable. A resource name of the IndexEndpoint.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1EncryptionSpec": {
        "description": "Represents a customer-managed encryption key spec that can be applied to a top-level resource.",
        "properties": {
          "kmsKeyName": {
            "description": "Required. The Cloud KMS resource identifier of the customer managed encryption key used to protect a resource. Has the form: `projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key`. The key needs to be in the same region as where the compute resource is created.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1IndexStats": {
        "description": "Stats of the Index.",
        "properties": {
          "shardsCount": {
            "description": "Output only. The number of shards in the Index.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "vectorsCount": {
            "description": "Output only. The number of vectors in the Index.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://aiplatform.googleapis.com//v1/{parent}/indexes{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "This resource represents a long-running operation that is the result of a network API call.",
        "**Key properties:**",
        {
          "$ul": [
            "**done**: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
            [
              "**error**: The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
              {
                "$ul": [
                  "**code**: The status code, which should be an enum value of google.rpc.Code.",
                  "**details**: A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                  "**message**: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                ]
              }
            ],
            "**metadata**: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
            "**name**: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
            "**response**: The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
