{
  "name": "aiplatform_projects_locations_featurestores_entityTypes_readFeatureValues",
  "description": "Reads Feature values of a specific entity of an EntityType. For reading feature values of multiple entities of an EntityType, please use StreamingReadFeatureValues.",
  "parameters": {
    "type": "object",
    "properties": {
      "entityType": {
        "type": "string",
        "description": "Required. The resource name of the EntityType for the entity being read. Value format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entityType}`. For example, for a machine learning model predicting user clicks on a website, an EntityType ID could be `user`."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleCloudAiplatformV1ReadFeatureValuesRequest"
      }
    },
    "required": [
      "entityType"
    ],
    "$defs": {
      "GoogleCloudAiplatformV1ReadFeatureValuesRequest": {
        "description": "Request message for FeaturestoreOnlineServingService.ReadFeatureValues.",
        "properties": {
          "entityId": {
            "description": "Required. ID for a specific entity. For example, for a machine learning model predicting user clicks on a website, an entity ID could be `user_123`.",
            "type": "string"
          },
          "featureSelector": {
            "$ref": "#/$defs/GoogleCloudAiplatformV1FeatureSelector"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1FeatureSelector": {
        "description": "Selector for Features of an EntityType.",
        "properties": {
          "idMatcher": {
            "$ref": "#/$defs/GoogleCloudAiplatformV1IdMatcher"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1IdMatcher": {
        "description": "Matcher for Features of an EntityType by Feature ID.",
        "properties": {
          "ids": {
            "description": "Required. The following are accepted as `ids`: * A single-element list containing only `*`, which selects all Features in the target EntityType, or * A list containing only Feature IDs, which selects only Features with those IDs in the target EntityType.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://aiplatform.googleapis.com//v1/{entityType}:readFeatureValues{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Response message for FeaturestoreOnlineServingService.ReadFeatureValues.",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**entityView**: Entity view with Feature values.",
              {
                "$ul": [
                  "**data**: Each piece of data holds the k requested values for one requested Feature. If no values for the requested Feature exist, the corresponding cell will be empty. This has the same size and is in the same order as the features from the header ReadFeatureValuesResponse.header.",
                  "**entityId**: ID of the requested entity."
                ]
              }
            ],
            [
              "**header**: Response header with metadata for the requested ReadFeatureValuesRequest.entity_type and Features.",
              {
                "$ul": [
                  "**entityType**: The resource name of the EntityType from the ReadFeatureValuesRequest. Value format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entityType}`.",
                  "**featureDescriptors**: List of Feature metadata corresponding to each piece of ReadFeatureValuesResponse.EntityView.data."
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
