{
  "name": "aiplatform_projects_locations_notebookRuntimes_reportEvent",
  "description": "",
  "parameters": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "Required. The name of the NotebookRuntime resource. Format: `projects/{project}/locations/{location}/notebookRuntimes/{notebook_runtime}`"
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleCloudAiplatformV1beta1ReportRuntimeEventRequest"
      }
    },
    "required": [
      "name"
    ],
    "$defs": {
      "GoogleCloudAiplatformV1beta1ReportRuntimeEventRequest": {
        "description": "Request message for NotebookInternalService.ReportRuntimeEvent.",
        "properties": {
          "eventDetails": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Optional. The details of the request for debug.",
            "type": "object"
          },
          "eventType": {
            "description": "Required. The type of the event.",
            "enum": [
              "EVENT_TYPE_UNSPECIFIED",
              "HEARTBEAT",
              "IDLE"
            ],
            "type": "string"
          },
          "internalOsServiceStateInstance": {
            "deprecated": true,
            "description": "The details of the internal os service states.",
            "items": {
              "$ref": "#/$defs/GoogleCloudAiplatformV1beta1InternalOsServiceStateInstance"
            },
            "type": "array"
          },
          "internalOsServiceStateInstances": {
            "description": "Optional. The details of the internal os service states.",
            "items": {
              "$ref": "#/$defs/GoogleCloudAiplatformV1beta1InternalOsServiceStateInstance"
            },
            "type": "array"
          },
          "vmToken": {
            "description": "Required. The VM identity token (a JWT) for authenticating the VM. https://cloud.google.com/compute/docs/instances/verifying-instance-identity",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1beta1InternalOsServiceStateInstance": {
        "description": "Request message for [InternalOsServiceStateInstance].",
        "properties": {
          "serviceName": {
            "description": "Required. internal service name.",
            "enum": [
              "INTERNAL_OS_SERVICE_ENUM_UNSPECIFIED",
              "DOCKER_SERVICE_STATE",
              "CONTROL_PLANE_API_DNS_STATE",
              "PROXY_REGISTRATION_DNS_STATE",
              "JUPYTER_STATE",
              "JUPYTER_API_STATE",
              "EUC_METADATA_API_STATE",
              "EUC_AGENT_API_STATE",
              "IDLE_SHUTDOWN_AGENT_STATE",
              "PROXY_AGENT_STATE"
            ],
            "type": "string"
          },
          "serviceState": {
            "description": "Required. internal service state.",
            "enum": [
              "UNKNOWN",
              "HEALTHY",
              "UNHEALTHY"
            ],
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://aiplatform.googleapis.com//v1beta1/{name}:reportEvent{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Response message for NotebookInternalService.ReportRuntimeEvent.",
        "**Key properties:**",
        {
          "$ul": [
            "**idleShutdownMessage**: If the idle shutdown is blocked by CP, CP will send the block message. Otherwise, this field is not set."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
