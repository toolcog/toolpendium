{
  "name": "aiplatform_projects_locations_featurestores_entityTypes_writeFeatureValues",
  "description": "Writes Feature values of one or more entities of an EntityType. The Feature values are merged into existing entities if any. The Feature values to be written must have timestamp within the online storage retention.",
  "parameters": {
    "type": "object",
    "properties": {
      "entityType": {
        "type": "string",
        "description": "Required. The resource name of the EntityType for the entities being written. Value format: `projects/{project}/locations/{location}/featurestores/ {featurestore}/entityTypes/{entityType}`. For example, for a machine learning model predicting user clicks on a website, an EntityType ID could be `user`."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleCloudAiplatformV1beta1WriteFeatureValuesRequest"
      }
    },
    "required": [
      "entityType"
    ],
    "$defs": {
      "GoogleCloudAiplatformV1beta1WriteFeatureValuesRequest": {
        "description": "Request message for FeaturestoreOnlineServingService.WriteFeatureValues.",
        "properties": {
          "payloads": {
            "description": "Required. The entities to be written. Up to 100,000 feature values can be written across all `payloads`.",
            "items": {
              "$ref": "#/$defs/GoogleCloudAiplatformV1beta1WriteFeatureValuesPayload"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1beta1WriteFeatureValuesPayload": {
        "description": "Contains Feature values to be written for a specific entity.",
        "properties": {
          "entityId": {
            "description": "Required. The ID of the entity.",
            "type": "string"
          },
          "featureValues": {
            "additionalProperties": {
              "$ref": "#/$defs/GoogleCloudAiplatformV1beta1FeatureValue"
            },
            "description": "Required. Feature values to be written, mapping from Feature ID to value. Up to 100,000 `feature_values` entries may be written across all payloads. The feature generation time, aligned by days, must be no older than five years (1825 days) and no later than one year (366 days) in the future.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1beta1FeatureValue": {
        "description": "Value for a feature.",
        "properties": {
          "boolArrayValue": {
            "$ref": "#/$defs/GoogleCloudAiplatformV1beta1BoolArray"
          },
          "boolValue": {
            "description": "Bool type feature value.",
            "type": "boolean"
          },
          "bytesValue": {
            "description": "Bytes feature value.",
            "format": "byte",
            "type": "string"
          },
          "doubleArrayValue": {
            "$ref": "#/$defs/GoogleCloudAiplatformV1beta1DoubleArray"
          },
          "doubleValue": {
            "description": "Double type feature value.",
            "format": "double",
            "type": "number"
          },
          "int64ArrayValue": {
            "$ref": "#/$defs/GoogleCloudAiplatformV1beta1Int64Array"
          },
          "int64Value": {
            "description": "Int64 feature value.",
            "format": "int64",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/$defs/GoogleCloudAiplatformV1beta1FeatureValueMetadata"
          },
          "stringArrayValue": {
            "$ref": "#/$defs/GoogleCloudAiplatformV1beta1StringArray"
          },
          "stringValue": {
            "description": "String feature value.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1beta1BoolArray": {
        "description": "A list of boolean values.",
        "properties": {
          "values": {
            "description": "A list of bool values.",
            "items": {
              "type": "boolean"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1beta1DoubleArray": {
        "description": "A list of double values.",
        "properties": {
          "values": {
            "description": "A list of double values.",
            "items": {
              "format": "double",
              "type": "number"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1beta1Int64Array": {
        "description": "A list of int64 values.",
        "properties": {
          "values": {
            "description": "A list of int64 values.",
            "items": {
              "format": "int64",
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1beta1FeatureValueMetadata": {
        "description": "Metadata of feature value.",
        "properties": {
          "generateTime": {
            "description": "Feature generation timestamp. Typically, it is provided by user at feature ingestion time. If not, feature store will use the system timestamp when the data is ingested into feature store. For streaming ingestion, the time, aligned by days, must be no older than five years (1825 days) and no later than one year (366 days) in the future.",
            "format": "google-datetime",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1beta1StringArray": {
        "description": "A list of string values.",
        "properties": {
          "values": {
            "description": "A list of string values.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://aiplatform.googleapis.com//v1beta1/{entityType}:writeFeatureValues{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Response message for FeaturestoreOnlineServingService.WriteFeatureValues.",
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
