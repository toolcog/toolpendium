{
  "name": "aiplatform_projects_locations_indexEndpoints_findNeighbors",
  "description": "Finds the nearest neighbors of each vector within the request.",
  "parameters": {
    "type": "object",
    "properties": {
      "indexEndpoint": {
        "type": "string",
        "description": "Required. The name of the index endpoint. Format: `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`"
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleCloudAiplatformV1beta1FindNeighborsRequest"
      }
    },
    "required": [
      "indexEndpoint"
    ],
    "$defs": {
      "GoogleCloudAiplatformV1beta1FindNeighborsRequest": {
        "description": "The request message for MatchService.FindNeighbors.",
        "properties": {
          "deployedIndexId": {
            "description": "The ID of the DeployedIndex that will serve the request. This request is sent to a specific IndexEndpoint, as per the IndexEndpoint.network. That IndexEndpoint also has IndexEndpoint.deployed_indexes, and each such index has a DeployedIndex.id field. The value of the field below must equal one of the DeployedIndex.id fields of the IndexEndpoint that is being called for this request.",
            "type": "string"
          },
          "queries": {
            "description": "The list of queries.",
            "items": {
              "$ref": "#/$defs/GoogleCloudAiplatformV1beta1FindNeighborsRequestQuery"
            },
            "type": "array"
          },
          "returnFullDatapoint": {
            "description": "If set to true, the full datapoints (including all vector values and restricts) of the nearest neighbors are returned. Note that returning full datapoint will significantly increase the latency and cost of the query.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1beta1FindNeighborsRequestQuery": {
        "description": "A query to find a number of the nearest neighbors (most similar vectors) of a vector.",
        "properties": {
          "approximateNeighborCount": {
            "description": "The number of neighbors to find via approximate search before exact reordering is performed. If not set, the default value from scam config is used; if set, this value must be > 0.",
            "format": "int32",
            "type": "integer"
          },
          "datapoint": {
            "$ref": "#/$defs/GoogleCloudAiplatformV1beta1IndexDatapoint"
          },
          "fractionLeafNodesToSearchOverride": {
            "description": "The fraction of the number of leaves to search, set at query time allows user to tune search performance. This value increase result in both search accuracy and latency increase. The value should be between 0.0 and 1.0. If not set or set to 0.0, query uses the default value specified in NearestNeighborSearchConfig.TreeAHConfig.fraction_leaf_nodes_to_search.",
            "format": "double",
            "type": "number"
          },
          "neighborCount": {
            "description": "The number of nearest neighbors to be retrieved from database for each query. If not set, will use the default from the service configuration (https://cloud.google.com/vertex-ai/docs/matching-engine/configuring-indexes#nearest-neighbor-search-config).",
            "format": "int32",
            "type": "integer"
          },
          "perCrowdingAttributeNeighborCount": {
            "description": "Crowding is a constraint on a neighbor list produced by nearest neighbor search requiring that no more than some value k' of the k neighbors returned have the same value of crowding_attribute. It's used for improving result diversity. This field is the maximum number of matches with the same crowding tag.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1beta1IndexDatapoint": {
        "description": "A datapoint of Index.",
        "properties": {
          "crowdingTag": {
            "$ref": "#/$defs/GoogleCloudAiplatformV1beta1IndexDatapointCrowdingTag"
          },
          "datapointId": {
            "description": "Required. Unique identifier of the datapoint.",
            "type": "string"
          },
          "featureVector": {
            "description": "Required. Feature embedding vector. An array of numbers with the length of [NearestNeighborSearchConfig.dimensions].",
            "items": {
              "format": "float",
              "type": "number"
            },
            "type": "array"
          },
          "numericRestricts": {
            "description": "Optional. List of Restrict of the datapoint, used to perform \"restricted searches\" where boolean rule are used to filter the subset of the database eligible for matching. This uses numeric comparisons.",
            "items": {
              "$ref": "#/$defs/GoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction"
            },
            "type": "array"
          },
          "restricts": {
            "description": "Optional. List of Restrict of the datapoint, used to perform \"restricted searches\" where boolean rule are used to filter the subset of the database eligible for matching. This uses categorical tokens. See: https://cloud.google.com/vertex-ai/docs/matching-engine/filtering",
            "items": {
              "$ref": "#/$defs/GoogleCloudAiplatformV1beta1IndexDatapointRestriction"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1beta1IndexDatapointCrowdingTag": {
        "description": "Crowding tag is a constraint on a neighbor list produced by nearest neighbor search requiring that no more than some value k' of the k neighbors returned have the same value of crowding_attribute.",
        "properties": {
          "crowdingAttribute": {
            "description": "The attribute value used for crowding. The maximum number of neighbors to return per crowding attribute value (per_crowding_attribute_num_neighbors) is configured per-query. This field is ignored if per_crowding_attribute_num_neighbors is larger than the total number of neighbors to return for a given query.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction": {
        "description": "This field allows restricts to be based on numeric comparisons rather than categorical tokens.",
        "properties": {
          "namespace": {
            "description": "The namespace of this restriction. e.g.: cost.",
            "type": "string"
          },
          "op": {
            "description": "This MUST be specified for queries and must NOT be specified for datapoints.",
            "enum": [
              "OPERATOR_UNSPECIFIED",
              "LESS",
              "LESS_EQUAL",
              "EQUAL",
              "GREATER_EQUAL",
              "GREATER",
              "NOT_EQUAL"
            ],
            "type": "string"
          },
          "valueDouble": {
            "description": "Represents 64 bit float.",
            "format": "double",
            "type": "number"
          },
          "valueFloat": {
            "description": "Represents 32 bit float.",
            "format": "float",
            "type": "number"
          },
          "valueInt": {
            "description": "Represents 64 bit integer.",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1beta1IndexDatapointRestriction": {
        "description": "Restriction of a datapoint which describe its attributes(tokens) from each of several attribute categories(namespaces).",
        "properties": {
          "allowList": {
            "description": "The attributes to allow in this namespace. e.g.: 'red'",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "denyList": {
            "description": "The attributes to deny in this namespace. e.g.: 'blue'",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "namespace": {
            "description": "The namespace of this restriction. e.g.: color.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://aiplatform.googleapis.com//v1beta1/{indexEndpoint}:findNeighbors{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The response message for MatchService.FindNeighbors.",
        "**Key properties:**",
        {
          "$ul": [
            "**nearestNeighbors**: The nearest neighbors of the query datapoints."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
