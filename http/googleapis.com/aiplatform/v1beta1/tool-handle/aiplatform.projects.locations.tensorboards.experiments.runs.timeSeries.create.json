{
  "name": "aiplatform_projects_locations_tensorboards_experiments_runs_timeSeries_create",
  "description": "Creates a TensorboardTimeSeries.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The resource name of the TensorboardRun to create the TensorboardTimeSeries in. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`"
      },
      "tensorboardTimeSeriesId": {
        "type": "string",
        "description": "Optional. The user specified unique ID to use for the TensorboardTimeSeries, which becomes the final component of the TensorboardTimeSeries's resource name. This value should match \"a-z0-9{0, 127}\""
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleCloudAiplatformV1beta1TensorboardTimeSeries"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "GoogleCloudAiplatformV1beta1TensorboardTimeSeries": {
        "description": "TensorboardTimeSeries maps to times series produced in training runs",
        "properties": {
          "createTime": {
            "description": "Output only. Timestamp when this TensorboardTimeSeries was created.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "description": {
            "description": "Description of this TensorboardTimeSeries.",
            "type": "string"
          },
          "displayName": {
            "description": "Required. User provided name of this TensorboardTimeSeries. This value should be unique among all TensorboardTimeSeries resources belonging to the same TensorboardRun resource (parent resource).",
            "type": "string"
          },
          "etag": {
            "description": "Used to perform a consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/$defs/GoogleCloudAiplatformV1beta1TensorboardTimeSeriesMetadata"
          },
          "name": {
            "description": "Output only. Name of the TensorboardTimeSeries.",
            "readOnly": true,
            "type": "string"
          },
          "pluginData": {
            "description": "Data of the current plugin, with the size limited to 65KB.",
            "format": "byte",
            "type": "string"
          },
          "pluginName": {
            "description": "Immutable. Name of the plugin this time series pertain to. Such as Scalar, Tensor, Blob",
            "type": "string"
          },
          "updateTime": {
            "description": "Output only. Timestamp when this TensorboardTimeSeries was last updated.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "valueType": {
            "description": "Required. Immutable. Type of TensorboardTimeSeries value.",
            "enum": [
              "VALUE_TYPE_UNSPECIFIED",
              "SCALAR",
              "TENSOR",
              "BLOB_SEQUENCE"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1beta1TensorboardTimeSeriesMetadata": {
        "description": "Describes metadata for a TensorboardTimeSeries.",
        "properties": {
          "maxBlobSequenceLength": {
            "description": "Output only. The largest blob sequence length (number of blobs) of all data points in this time series, if its ValueType is BLOB_SEQUENCE.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "maxStep": {
            "description": "Output only. Max step index of all data points within a TensorboardTimeSeries.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "maxWallTime": {
            "description": "Output only. Max wall clock timestamp of all data points within a TensorboardTimeSeries.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://aiplatform.googleapis.com//v1beta1/{parent}/timeSeries{?tensorboardTimeSeriesId,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "TensorboardTimeSeries maps to times series produced in training runs",
        "**Key properties:**",
        {
          "$ul": [
            "**createTime**: Output only. Timestamp when this TensorboardTimeSeries was created.",
            "**description**: Description of this TensorboardTimeSeries.",
            "**displayName**: Required. User provided name of this TensorboardTimeSeries. This value should be unique among all TensorboardTimeSeries resources belonging to the same TensorboardRun resource (parent resource).",
            "**etag**: Used to perform a consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
            [
              "**metadata**: Describes metadata for a TensorboardTimeSeries.",
              {
                "$ul": [
                  "**maxBlobSequenceLength**: Output only. The largest blob sequence length (number of blobs) of all data points in this time series, if its ValueType is BLOB_SEQUENCE.",
                  "**maxStep**: Output only. Max step index of all data points within a TensorboardTimeSeries.",
                  "**maxWallTime**: Output only. Max wall clock timestamp of all data points within a TensorboardTimeSeries."
                ]
              }
            ],
            "**name**: Output only. Name of the TensorboardTimeSeries.",
            "**pluginData**: Data of the current plugin, with the size limited to 65KB.",
            "**pluginName**: Immutable. Name of the plugin this time series pertain to. Such as Scalar, Tensor, Blob",
            "**updateTime**: Output only. Timestamp when this TensorboardTimeSeries was last updated.",
            "**valueType**: Required. Immutable. Type of TensorboardTimeSeries value."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
