{
  "name": "aiplatform_projects_locations_dataLabelingJobs_create",
  "description": "Creates a DataLabelingJob.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The parent of the DataLabelingJob. Format: `projects/{project}/locations/{location}`"
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleCloudAiplatformV1beta1DataLabelingJob"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "GoogleCloudAiplatformV1beta1DataLabelingJob": {
        "description": "DataLabelingJob is used to trigger a human labeling job on unlabeled data from the following Dataset:",
        "properties": {
          "activeLearningConfig": {
            "$ref": "#/$defs/GoogleCloudAiplatformV1beta1ActiveLearningConfig"
          },
          "annotationLabels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Labels to assign to annotations generated by this DataLabelingJob. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with \"aiplatform.googleapis.com/\" and are immutable.",
            "type": "object"
          },
          "createTime": {
            "description": "Output only. Timestamp when this DataLabelingJob was created.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "currentSpend": {
            "$ref": "#/$defs/GoogleTypeMoney"
          },
          "datasets": {
            "description": "Required. Dataset resource names. Right now we only support labeling from a single Dataset. Format: `projects/{project}/locations/{location}/datasets/{dataset}`",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "displayName": {
            "description": "Required. The user-defined name of the DataLabelingJob. The name can be up to 128 characters long and can consist of any UTF-8 characters. Display name of a DataLabelingJob.",
            "type": "string"
          },
          "encryptionSpec": {
            "$ref": "#/$defs/GoogleCloudAiplatformV1beta1EncryptionSpec"
          },
          "error": {
            "$ref": "#/$defs/GoogleRpcStatus"
          },
          "inputs": {
            "description": "Required. Input config parameters for the DataLabelingJob."
          },
          "inputsSchemaUri": {
            "description": "Required. Points to a YAML file stored on Google Cloud Storage describing the config for a specific type of DataLabelingJob. The schema files that can be used here are found in the https://storage.googleapis.com/google-cloud-aiplatform bucket in the /schema/datalabelingjob/inputs/ folder.",
            "type": "string"
          },
          "instructionUri": {
            "description": "Required. The Google Cloud Storage location of the instruction pdf. This pdf is shared with labelers, and provides detailed description on how to label DataItems in Datasets.",
            "type": "string"
          },
          "labelerCount": {
            "description": "Required. Number of labelers to work on each DataItem.",
            "format": "int32",
            "type": "integer"
          },
          "labelingProgress": {
            "description": "Output only. Current labeling job progress percentage scaled in interval [0, 100], indicating the percentage of DataItems that has been finished.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The labels with user-defined metadata to organize your DataLabelingJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with \"aiplatform.googleapis.com/\" and are immutable. Following system labels exist for each DataLabelingJob: * \"aiplatform.googleapis.com/schema\": output only, its value is the inputs_schema's title.",
            "type": "object"
          },
          "name": {
            "description": "Output only. Resource name of the DataLabelingJob.",
            "readOnly": true,
            "type": "string"
          },
          "specialistPools": {
            "description": "The SpecialistPools' resource names associated with this job.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "state": {
            "description": "Output only. The detailed state of the job.",
            "enum": [
              "JOB_STATE_UNSPECIFIED",
              "JOB_STATE_QUEUED",
              "JOB_STATE_PENDING",
              "JOB_STATE_RUNNING",
              "JOB_STATE_SUCCEEDED",
              "JOB_STATE_FAILED",
              "JOB_STATE_CANCELLING",
              "JOB_STATE_CANCELLED",
              "JOB_STATE_PAUSED",
              "JOB_STATE_EXPIRED",
              "JOB_STATE_UPDATING",
              "JOB_STATE_PARTIALLY_SUCCEEDED"
            ],
            "readOnly": true,
            "type": "string"
          },
          "updateTime": {
            "description": "Output only. Timestamp when this DataLabelingJob was updated most recently.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1beta1ActiveLearningConfig": {
        "description": "Parameters that configure the active learning pipeline. Active learning will label the data incrementally by several iterations. For every iteration, it will select a batch of data based on the sampling strategy.",
        "properties": {
          "maxDataItemCount": {
            "description": "Max number of human labeled DataItems.",
            "format": "int64",
            "type": "string"
          },
          "maxDataItemPercentage": {
            "description": "Max percent of total DataItems for human labeling.",
            "format": "int32",
            "type": "integer"
          },
          "sampleConfig": {
            "$ref": "#/$defs/GoogleCloudAiplatformV1beta1SampleConfig"
          },
          "trainingConfig": {
            "$ref": "#/$defs/GoogleCloudAiplatformV1beta1TrainingConfig"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1beta1SampleConfig": {
        "description": "Active learning data sampling config. For every active learning labeling iteration, it will select a batch of data based on the sampling strategy.",
        "properties": {
          "followingBatchSamplePercentage": {
            "description": "The percentage of data needed to be labeled in each following batch (except the first batch).",
            "format": "int32",
            "type": "integer"
          },
          "initialBatchSamplePercentage": {
            "description": "The percentage of data needed to be labeled in the first batch.",
            "format": "int32",
            "type": "integer"
          },
          "sampleStrategy": {
            "description": "Field to choose sampling strategy. Sampling strategy will decide which data should be selected for human labeling in every batch.",
            "enum": [
              "SAMPLE_STRATEGY_UNSPECIFIED",
              "UNCERTAINTY"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1beta1TrainingConfig": {
        "description": "CMLE training config. For every active learning labeling iteration, system will train a machine learning model on CMLE. The trained model will be used by data sampling algorithm to select DataItems.",
        "properties": {
          "timeoutTrainingMilliHours": {
            "description": "The timeout hours for the CMLE training job, expressed in milli hours i.e. 1,000 value in this field means 1 hour.",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleTypeMoney": {
        "description": "Represents an amount of money with its currency type.",
        "properties": {
          "currencyCode": {
            "description": "The three-letter currency code defined in ISO 4217.",
            "type": "string"
          },
          "nanos": {
            "description": "Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.",
            "format": "int32",
            "type": "integer"
          },
          "units": {
            "description": "The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar.",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1beta1EncryptionSpec": {
        "description": "Represents a customer-managed encryption key spec that can be applied to a top-level resource.",
        "properties": {
          "kmsKeyName": {
            "description": "Required. The Cloud KMS resource identifier of the customer managed encryption key used to protect a resource. Has the form: `projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key`. The key needs to be in the same region as where the compute resource is created.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleRpcStatus": {
        "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
        "properties": {
          "code": {
            "description": "The status code, which should be an enum value of google.rpc.Code.",
            "format": "int32",
            "type": "integer"
          },
          "details": {
            "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
            "items": {
              "additionalProperties": {
                "description": "Properties of the object. Contains field @type with type URL."
              },
              "type": "object"
            },
            "type": "array"
          },
          "message": {
            "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://aiplatform.googleapis.com//v1beta1/{parent}/dataLabelingJobs{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "DataLabelingJob is used to trigger a human labeling job on unlabeled data from the following Dataset:",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**activeLearningConfig**: Parameters that configure the active learning pipeline. Active learning will label the data incrementally by several iterations. For every iteration, it will select a batch of data based on the sampling strategy.",
              {
                "$ul": [
                  "**maxDataItemCount**: Max number of human labeled DataItems.",
                  "**maxDataItemPercentage**: Max percent of total DataItems for human labeling.",
                  [
                    "**sampleConfig**: Active learning data sampling config. For every active learning labeling iteration, it will select a batch of data based on the sampling strategy.",
                    {
                      "$ul": [
                        "**followingBatchSamplePercentage**: The percentage of data needed to be labeled in each following batch (except the first batch).",
                        "**initialBatchSamplePercentage**: The percentage of data needed to be labeled in the first batch.",
                        "**sampleStrategy**: Field to choose sampling strategy. Sampling strategy will decide which data should be selected for human labeling in every batch."
                      ]
                    }
                  ],
                  [
                    "**trainingConfig**: CMLE training config. For every active learning labeling iteration, system will train a machine learning model on CMLE. The trained model will be used by data sampling algorithm to select DataItems.",
                    {
                      "$ul": [
                        "**timeoutTrainingMilliHours**: The timeout hours for the CMLE training job, expressed in milli hours i.e. 1,000 value in this field means 1 hour."
                      ]
                    }
                  ]
                ]
              }
            ],
            "**annotationLabels**: Labels to assign to annotations generated by this DataLabelingJob. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with \"aiplatform.googleapis.com/\" and are immutable.",
            "**createTime**: Output only. Timestamp when this DataLabelingJob was created.",
            [
              "**currentSpend**: Represents an amount of money with its currency type.",
              {
                "$ul": [
                  "**currencyCode**: The three-letter currency code defined in ISO 4217.",
                  "**nanos**: Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.",
                  "**units**: The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar."
                ]
              }
            ],
            "**datasets**: Required. Dataset resource names. Right now we only support labeling from a single Dataset. Format: `projects/{project}/locations/{location}/datasets/{dataset}`",
            "**displayName**: Required. The user-defined name of the DataLabelingJob. The name can be up to 128 characters long and can consist of any UTF-8 characters. Display name of a DataLabelingJob.",
            [
              "**encryptionSpec**: Represents a customer-managed encryption key spec that can be applied to a top-level resource.",
              {
                "$ul": [
                  "**kmsKeyName**: Required. The Cloud KMS resource identifier of the customer managed encryption key used to protect a resource. Has the form: `projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key`. The key needs to be in the same region as where the compute resource is created."
                ]
              }
            ],
            [
              "**error**: The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
              {
                "$ul": [
                  "**code**: The status code, which should be an enum value of google.rpc.Code.",
                  "**details**: A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                  "**message**: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                ]
              }
            ],
            "**inputs**: Required. Input config parameters for the DataLabelingJob.",
            "**inputsSchemaUri**: Required. Points to a YAML file stored on Google Cloud Storage describing the config for a specific type of DataLabelingJob. The schema files that can be used here are found in the https://storage.googleapis.com/google-cloud-aiplatform bucket in the /schema/datalabelingjob/inputs/ folder.",
            "**instructionUri**: Required. The Google Cloud Storage location of the instruction pdf. This pdf is shared with labelers, and provides detailed description on how to label DataItems in Datasets.",
            "**labelerCount**: Required. Number of labelers to work on each DataItem.",
            "**labelingProgress**: Output only. Current labeling job progress percentage scaled in interval [0, 100], indicating the percentage of DataItems that has been finished.",
            "**labels**: The labels with user-defined metadata to organize your DataLabelingJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with \"aiplatform.googleapis.com/\" and are immutable. Following system labels exist for each DataLabelingJob: * \"aiplatform.googleapis.com/schema\": output only, its value is the inputs_schema's title.",
            "**name**: Output only. Resource name of the DataLabelingJob.",
            "**specialistPools**: The SpecialistPools' resource names associated with this job.",
            "**state**: Output only. The detailed state of the job.",
            "**updateTime**: Output only. Timestamp when this DataLabelingJob was updated most recently."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
