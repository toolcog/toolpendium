{
  "name": "aiplatform_projects_locations_featureOnlineStores_create",
  "description": "Creates a new FeatureOnlineStore in a given project and location.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The resource name of the Location to create FeatureOnlineStores. Format: `projects/{project}/locations/{location}`"
      },
      "featureOnlineStoreId": {
        "type": "string",
        "description": "Required. The ID to use for this FeatureOnlineStore, which will become the final component of the FeatureOnlineStore's resource name. This value may be up to 60 characters, and valid characters are `[a-z0-9_]`. The first character cannot be a number. The value must be unique within the project and location."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleCloudAiplatformV1beta1FeatureOnlineStore"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "GoogleCloudAiplatformV1beta1FeatureOnlineStore": {
        "description": "Vertex AI Feature Online Store provides a centralized repository for serving ML features and embedding indexes at low latency. The Feature Online Store is a top-level container.",
        "properties": {
          "bigtable": {
            "$ref": "#/$defs/GoogleCloudAiplatformV1beta1FeatureOnlineStoreBigtable"
          },
          "createTime": {
            "description": "Output only. Timestamp when this FeatureOnlineStore was created.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "dedicatedServingEndpoint": {
            "$ref": "#/$defs/GoogleCloudAiplatformV1beta1FeatureOnlineStoreDedicatedServingEndpoint"
          },
          "embeddingManagement": {
            "$ref": "#/$defs/GoogleCloudAiplatformV1beta1FeatureOnlineStoreEmbeddingManagement"
          },
          "etag": {
            "description": "Optional. Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Optional. The labels with user-defined metadata to organize your FeatureOnlineStore. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one FeatureOnlineStore(System labels are excluded).\" System reserved label keys are prefixed with \"aiplatform.googleapis.com/\" and are immutable.",
            "type": "object"
          },
          "name": {
            "description": "Identifier. Name of the FeatureOnlineStore. Format: `projects/{project}/locations/{location}/featureOnlineStores/{featureOnlineStore}`",
            "type": "string"
          },
          "optimized": {
            "$ref": "#/$defs/GoogleCloudAiplatformV1beta1FeatureOnlineStoreOptimized"
          },
          "state": {
            "description": "Output only. State of the featureOnlineStore.",
            "enum": [
              "STATE_UNSPECIFIED",
              "STABLE",
              "UPDATING"
            ],
            "readOnly": true,
            "type": "string"
          },
          "updateTime": {
            "description": "Output only. Timestamp when this FeatureOnlineStore was last updated.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1beta1FeatureOnlineStoreBigtable": {
        "properties": {
          "autoScaling": {
            "$ref": "#/$defs/GoogleCloudAiplatformV1beta1FeatureOnlineStoreBigtableAutoScaling"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1beta1FeatureOnlineStoreBigtableAutoScaling": {
        "properties": {
          "cpuUtilizationTarget": {
            "description": "Optional. A percentage of the cluster's CPU capacity. Can be from 10% to 80%. When a cluster's CPU utilization exceeds the target that you have set, Bigtable immediately adds nodes to the cluster. When CPU utilization is substantially lower than the target, Bigtable removes nodes. If not set will default to 50%.",
            "format": "int32",
            "type": "integer"
          },
          "maxNodeCount": {
            "description": "Required. The maximum number of nodes to scale up to. Must be greater than or equal to min_node_count, and less than or equal to 10 times of 'min_node_count'.",
            "format": "int32",
            "type": "integer"
          },
          "minNodeCount": {
            "description": "Required. The minimum number of nodes to scale down to. Must be greater than or equal to 1.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1beta1FeatureOnlineStoreDedicatedServingEndpoint": {
        "description": "The dedicated serving endpoint for this FeatureOnlineStore. Only need to set when you choose Optimized storage type or enable EmbeddingManagement. Will use public endpoint by default. Note, for EmbeddingManagement use case, only [DedicatedServingEndpoint.public_endpoint_domain_name] is available now.",
        "properties": {
          "privateServiceConnectConfig": {
            "$ref": "#/$defs/GoogleCloudAiplatformV1beta1PrivateServiceConnectConfig"
          },
          "publicEndpointDomainName": {
            "description": "Output only. This field will be populated with the domain name to use for this FeatureOnlineStore",
            "readOnly": true,
            "type": "string"
          },
          "serviceAttachment": {
            "description": "Output only. The name of the service attachment resource. Populated if private service connect is enabled and after FeatureViewSync is created.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1beta1PrivateServiceConnectConfig": {
        "description": "Represents configuration for private service connect.",
        "properties": {
          "enablePrivateServiceConnect": {
            "description": "Required. If true, expose the IndexEndpoint via private service connect.",
            "type": "boolean"
          },
          "projectAllowlist": {
            "description": "A list of Projects from which the forwarding rule will target the service attachment.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1beta1FeatureOnlineStoreEmbeddingManagement": {
        "description": "Contains settings for embedding management.",
        "properties": {
          "enabled": {
            "description": "Optional. Immutable. Whether to enable embedding management in this FeatureOnlineStore. It's immutable after creation to ensure the FeatureOnlineStore availability.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GoogleCloudAiplatformV1beta1FeatureOnlineStoreOptimized": {
        "description": "Optimized storage type",
        "properties": {},
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://aiplatform.googleapis.com//v1beta1/{parent}/featureOnlineStores{?featureOnlineStoreId,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "This resource represents a long-running operation that is the result of a network API call.",
        "**Key properties:**",
        {
          "$ul": [
            "**done**: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
            [
              "**error**: The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
              {
                "$ul": [
                  "**code**: The status code, which should be an enum value of google.rpc.Code.",
                  "**details**: A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                  "**message**: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                ]
              }
            ],
            "**metadata**: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
            "**name**: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
            "**response**: The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
