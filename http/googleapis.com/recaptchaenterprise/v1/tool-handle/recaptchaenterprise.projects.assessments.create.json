{
  "name": "recaptchaenterprise_projects_assessments_create",
  "description": "Creates an Assessment of the likelihood an event is legitimate.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The name of the project in which the assessment will be created, in the format `projects/{project}`."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleCloudRecaptchaenterpriseV1Assessment"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "GoogleCloudRecaptchaenterpriseV1Assessment": {
        "description": "A reCAPTCHA Enterprise assessment resource.",
        "properties": {
          "accountDefenderAssessment": {
            "$ref": "#/$defs/GoogleCloudRecaptchaenterpriseV1AccountDefenderAssessment"
          },
          "accountVerification": {
            "$ref": "#/$defs/GoogleCloudRecaptchaenterpriseV1AccountVerificationInfo"
          },
          "event": {
            "$ref": "#/$defs/GoogleCloudRecaptchaenterpriseV1Event"
          },
          "firewallPolicyAssessment": {
            "$ref": "#/$defs/GoogleCloudRecaptchaenterpriseV1FirewallPolicyAssessment"
          },
          "fraudPreventionAssessment": {
            "$ref": "#/$defs/GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessment"
          },
          "fraudSignals": {
            "$ref": "#/$defs/GoogleCloudRecaptchaenterpriseV1FraudSignals"
          },
          "name": {
            "description": "Output only. Identifier. The resource name for the Assessment in the format `projects/{project}/assessments/{assessment}`.",
            "readOnly": true,
            "type": "string"
          },
          "privatePasswordLeakVerification": {
            "$ref": "#/$defs/GoogleCloudRecaptchaenterpriseV1PrivatePasswordLeakVerification"
          },
          "riskAnalysis": {
            "$ref": "#/$defs/GoogleCloudRecaptchaenterpriseV1RiskAnalysis"
          },
          "tokenProperties": {
            "$ref": "#/$defs/GoogleCloudRecaptchaenterpriseV1TokenProperties"
          }
        },
        "type": "object"
      },
      "GoogleCloudRecaptchaenterpriseV1AccountDefenderAssessment": {
        "description": "Account defender risk assessment.",
        "properties": {
          "labels": {
            "description": "Output only. Labels for this request.",
            "items": {
              "enum": [
                "ACCOUNT_DEFENDER_LABEL_UNSPECIFIED",
                "PROFILE_MATCH",
                "SUSPICIOUS_LOGIN_ACTIVITY",
                "SUSPICIOUS_ACCOUNT_CREATION",
                "RELATED_ACCOUNTS_NUMBER_HIGH"
              ],
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudRecaptchaenterpriseV1AccountVerificationInfo": {
        "description": "Information about account verification, used for identity verification.",
        "properties": {
          "endpoints": {
            "description": "Optional. Endpoints that can be used for identity verification.",
            "items": {
              "$ref": "#/$defs/GoogleCloudRecaptchaenterpriseV1EndpointVerificationInfo"
            },
            "type": "array"
          },
          "languageCode": {
            "description": "Optional. Language code preference for the verification message, set as a IETF BCP 47 language code.",
            "type": "string"
          },
          "latestVerificationResult": {
            "description": "Output only. Result of the latest account verification challenge.",
            "enum": [
              "RESULT_UNSPECIFIED",
              "SUCCESS_USER_VERIFIED",
              "ERROR_USER_NOT_VERIFIED",
              "ERROR_SITE_ONBOARDING_INCOMPLETE",
              "ERROR_RECIPIENT_NOT_ALLOWED",
              "ERROR_RECIPIENT_ABUSE_LIMIT_EXHAUSTED",
              "ERROR_CRITICAL_INTERNAL",
              "ERROR_CUSTOMER_QUOTA_EXHAUSTED",
              "ERROR_VERIFICATION_BYPASSED",
              "ERROR_VERDICT_MISMATCH"
            ],
            "readOnly": true,
            "type": "string"
          },
          "username": {
            "deprecated": true,
            "description": "Username of the account that is being verified. Deprecated. Customers should now provide the `account_id` field in `event.user_info`.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudRecaptchaenterpriseV1EndpointVerificationInfo": {
        "description": "Information about a verification endpoint that can be used for 2FA.",
        "properties": {
          "emailAddress": {
            "description": "Email address for which to trigger a verification request.",
            "type": "string"
          },
          "lastVerificationTime": {
            "description": "Output only. Timestamp of the last successful verification for the endpoint, if any.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "phoneNumber": {
            "description": "Phone number for which to trigger a verification request. Should be given in E.164 format.",
            "type": "string"
          },
          "requestToken": {
            "description": "Output only. Token to provide to the client to trigger endpoint verification. It must be used within 15 minutes.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudRecaptchaenterpriseV1Event": {
        "description": "The event being assessed.",
        "properties": {
          "expectedAction": {
            "description": "Optional. The expected action for this type of event. This should be the same action provided at token generation time on client-side platforms already integrated with recaptcha enterprise.",
            "type": "string"
          },
          "express": {
            "description": "Optional. Flag for a reCAPTCHA express request for an assessment without a token. If enabled, `site_key` must reference a SCORE key with WAF feature set to EXPRESS.",
            "type": "boolean"
          },
          "firewallPolicyEvaluation": {
            "description": "Optional. Flag for enabling firewall policy config assessment. If this flag is enabled, the firewall policy will be evaluated and a suggested firewall action will be returned in the response.",
            "type": "boolean"
          },
          "hashedAccountId": {
            "deprecated": true,
            "description": "Optional. Deprecated: use `user_info.account_id` instead. Unique stable hashed user identifier for the request. The identifier must be hashed using hmac-sha256 with stable secret.",
            "format": "byte",
            "type": "string"
          },
          "headers": {
            "description": "Optional. HTTP header information about the request.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "ja3": {
            "description": "Optional. JA3 fingerprint for SSL clients.",
            "type": "string"
          },
          "requestedUri": {
            "description": "Optional. The URI resource the user requested that triggered an assessment.",
            "type": "string"
          },
          "siteKey": {
            "description": "Optional. The site key that was used to invoke reCAPTCHA Enterprise on your site and generate the token.",
            "type": "string"
          },
          "token": {
            "description": "Optional. The user response token provided by the reCAPTCHA Enterprise client-side integration on your site.",
            "type": "string"
          },
          "transactionData": {
            "$ref": "#/$defs/GoogleCloudRecaptchaenterpriseV1TransactionData"
          },
          "userAgent": {
            "description": "Optional. The user agent present in the request from the user's device related to this event.",
            "type": "string"
          },
          "userInfo": {
            "$ref": "#/$defs/GoogleCloudRecaptchaenterpriseV1UserInfo"
          },
          "userIpAddress": {
            "description": "Optional. The IP address in the request from the user's device related to this event.",
            "type": "string"
          },
          "wafTokenAssessment": {
            "description": "Optional. Flag for running WAF token assessment. If enabled, the token must be specified, and have been created by a WAF-enabled key.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GoogleCloudRecaptchaenterpriseV1TransactionData": {
        "description": "Transaction data associated with a payment protected by reCAPTCHA Enterprise.",
        "properties": {
          "billingAddress": {
            "$ref": "#/$defs/GoogleCloudRecaptchaenterpriseV1TransactionDataAddress"
          },
          "cardBin": {
            "description": "Optional. The Bank Identification Number - generally the first 6 or 8 digits of the card.",
            "type": "string"
          },
          "cardLastFour": {
            "description": "Optional. The last four digits of the card.",
            "type": "string"
          },
          "currencyCode": {
            "description": "Optional. The currency code in ISO-4217 format.",
            "type": "string"
          },
          "gatewayInfo": {
            "$ref": "#/$defs/GoogleCloudRecaptchaenterpriseV1TransactionDataGatewayInfo"
          },
          "items": {
            "description": "Optional. Items purchased in this transaction.",
            "items": {
              "$ref": "#/$defs/GoogleCloudRecaptchaenterpriseV1TransactionDataItem"
            },
            "type": "array"
          },
          "merchants": {
            "description": "Optional. Information about the user or users fulfilling the transaction.",
            "items": {
              "$ref": "#/$defs/GoogleCloudRecaptchaenterpriseV1TransactionDataUser"
            },
            "type": "array"
          },
          "paymentMethod": {
            "description": "Optional. The payment method for the transaction. The allowed values are: * credit-card * debit-card * gift-card * processor-{name} (If a third-party is used, for example, processor-paypal) * custom-{name} (If an alternative method is used, for example, custom-crypto)",
            "type": "string"
          },
          "shippingAddress": {
            "$ref": "#/$defs/GoogleCloudRecaptchaenterpriseV1TransactionDataAddress"
          },
          "shippingValue": {
            "description": "Optional. The value of shipping in the specified currency. 0 for free or no shipping.",
            "format": "double",
            "type": "number"
          },
          "transactionId": {
            "description": "Unique identifier for the transaction. This custom identifier can be used to reference this transaction in the future, for example, labeling a refund or chargeback event. Two attempts at the same transaction should use the same transaction id.",
            "type": "string"
          },
          "user": {
            "$ref": "#/$defs/GoogleCloudRecaptchaenterpriseV1TransactionDataUser"
          },
          "value": {
            "description": "Optional. The decimal value of the transaction in the specified currency.",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "GoogleCloudRecaptchaenterpriseV1TransactionDataAddress": {
        "description": "Structured address format for billing and shipping addresses.",
        "properties": {
          "address": {
            "description": "Optional. The first lines of the address. The first line generally contains the street name and number, and further lines may include information such as an apartment number.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "administrativeArea": {
            "description": "Optional. The state, province, or otherwise administrative area of the address.",
            "type": "string"
          },
          "locality": {
            "description": "Optional. The town/city of the address.",
            "type": "string"
          },
          "postalCode": {
            "description": "Optional. The postal or ZIP code of the address.",
            "type": "string"
          },
          "recipient": {
            "description": "Optional. The recipient name, potentially including information such as \"care of\".",
            "type": "string"
          },
          "regionCode": {
            "description": "Optional. The CLDR country/region of the address.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudRecaptchaenterpriseV1TransactionDataGatewayInfo": {
        "description": "Details about the transaction from the gateway.",
        "properties": {
          "avsResponseCode": {
            "description": "Optional. AVS response code from the gateway (available only when reCAPTCHA Enterprise is called after authorization).",
            "type": "string"
          },
          "cvvResponseCode": {
            "description": "Optional. CVV response code from the gateway (available only when reCAPTCHA Enterprise is called after authorization).",
            "type": "string"
          },
          "gatewayResponseCode": {
            "description": "Optional. Gateway response code describing the state of the transaction.",
            "type": "string"
          },
          "name": {
            "description": "Optional. Name of the gateway service (for example, stripe, square, paypal).",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudRecaptchaenterpriseV1TransactionDataItem": {
        "description": "Line items being purchased in this transaction.",
        "properties": {
          "merchantAccountId": {
            "description": "Optional. When a merchant is specified, its corresponding account_id. Necessary to populate marketplace-style transactions.",
            "type": "string"
          },
          "name": {
            "description": "Optional. The full name of the item.",
            "type": "string"
          },
          "quantity": {
            "description": "Optional. The quantity of this item that is being purchased.",
            "format": "int64",
            "type": "string"
          },
          "value": {
            "description": "Optional. The value per item that the user is paying, in the transaction currency, after discounts.",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "GoogleCloudRecaptchaenterpriseV1TransactionDataUser": {
        "description": "Details about a user's account involved in the transaction.",
        "properties": {
          "accountId": {
            "description": "Optional. Unique account identifier for this user. If using account defender, this should match the hashed_account_id field. Otherwise, a unique and persistent identifier for this account.",
            "type": "string"
          },
          "creationMs": {
            "description": "Optional. The epoch milliseconds of the user's account creation.",
            "format": "int64",
            "type": "string"
          },
          "email": {
            "description": "Optional. The email address of the user.",
            "type": "string"
          },
          "emailVerified": {
            "description": "Optional. Whether the email has been verified to be accessible by the user (OTP or similar).",
            "type": "boolean"
          },
          "phoneNumber": {
            "description": "Optional. The phone number of the user, with country code.",
            "type": "string"
          },
          "phoneVerified": {
            "description": "Optional. Whether the phone number has been verified to be accessible by the user (OTP or similar).",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GoogleCloudRecaptchaenterpriseV1UserInfo": {
        "description": "User information associated with a request protected by reCAPTCHA Enterprise.",
        "properties": {
          "accountId": {
            "description": "Optional. For logged-in requests or login/registration requests, the unique account identifier associated with this user. You can use the username if it is stable (meaning it is the same for every request associated with the same user), or any stable user ID of your choice. Leave blank for non logged-in actions or guest checkout.",
            "type": "string"
          },
          "createAccountTime": {
            "description": "Optional. Creation time for this account associated with this user. Leave blank for non logged-in actions, guest checkout, or when there is no account associated with the current user.",
            "format": "google-datetime",
            "type": "string"
          },
          "userIds": {
            "description": "Optional. Identifiers associated with this user or request.",
            "items": {
              "$ref": "#/$defs/GoogleCloudRecaptchaenterpriseV1UserId"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudRecaptchaenterpriseV1UserId": {
        "description": "An identifier associated with a user.",
        "properties": {
          "email": {
            "description": "Optional. An email address.",
            "type": "string"
          },
          "phoneNumber": {
            "description": "Optional. A phone number. Should use the E.164 format.",
            "type": "string"
          },
          "username": {
            "description": "Optional. A unique username, if different from all the other identifiers and `account_id` that are provided. Can be a unique login handle or display name for a user.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudRecaptchaenterpriseV1FirewallPolicyAssessment": {
        "description": "Policy config assessment.",
        "properties": {
          "error": {
            "$ref": "#/$defs/GoogleRpcStatus"
          },
          "firewallPolicy": {
            "$ref": "#/$defs/GoogleCloudRecaptchaenterpriseV1FirewallPolicy"
          }
        },
        "type": "object"
      },
      "GoogleRpcStatus": {
        "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
        "properties": {
          "code": {
            "description": "The status code, which should be an enum value of google.rpc.Code.",
            "format": "int32",
            "type": "integer"
          },
          "details": {
            "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
            "items": {
              "additionalProperties": {
                "description": "Properties of the object. Contains field @type with type URL."
              },
              "type": "object"
            },
            "type": "array"
          },
          "message": {
            "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudRecaptchaenterpriseV1FirewallPolicy": {
        "description": "A FirewallPolicy represents a single matching pattern and resulting actions to take.",
        "properties": {
          "actions": {
            "description": "Optional. The actions that the caller should take regarding user access. There should be at most one terminal action. A terminal action is any action that forces a response, such as `AllowAction`, `BlockAction` or `SubstituteAction`. Zero or more non-terminal actions such as `SetHeader` might be specified. A single policy can contain up to 16 actions.",
            "items": {
              "$ref": "#/$defs/GoogleCloudRecaptchaenterpriseV1FirewallAction"
            },
            "type": "array"
          },
          "condition": {
            "description": "Optional. A CEL (Common Expression Language) conditional expression that specifies if this policy applies to an incoming user request. If this condition evaluates to true and the requested path matched the path pattern, the associated actions should be executed by the caller. The condition string is checked for CEL syntax correctness on creation. For more information, see the [CEL spec](https://github.com/google/cel-spec) and its [language definition](https://github.com/google/cel-spec/blob/master/doc/langdef.md). A condition has a max length of 500 characters.",
            "type": "string"
          },
          "description": {
            "description": "Optional. A description of what this policy aims to achieve, for convenience purposes. The description can at most include 256 UTF-8 characters.",
            "type": "string"
          },
          "name": {
            "description": "Identifier. The resource name for the FirewallPolicy in the format `projects/{project}/firewallpolicies/{firewallpolicy}`.",
            "type": "string"
          },
          "path": {
            "description": "Optional. The path for which this policy applies, specified as a glob pattern. For more information on glob, see the [manual page](https://man7.org/linux/man-pages/man7/glob.7.html). A path has a max length of 200 characters.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudRecaptchaenterpriseV1FirewallAction": {
        "description": "An individual action. Each action represents what to do if a policy matches.",
        "properties": {
          "allow": {
            "$ref": "#/$defs/GoogleCloudRecaptchaenterpriseV1FirewallActionAllowAction"
          },
          "block": {
            "$ref": "#/$defs/GoogleCloudRecaptchaenterpriseV1FirewallActionBlockAction"
          },
          "includeRecaptchaScript": {
            "$ref": "#/$defs/GoogleCloudRecaptchaenterpriseV1FirewallActionIncludeRecaptchaScriptAction"
          },
          "redirect": {
            "$ref": "#/$defs/GoogleCloudRecaptchaenterpriseV1FirewallActionRedirectAction"
          },
          "setHeader": {
            "$ref": "#/$defs/GoogleCloudRecaptchaenterpriseV1FirewallActionSetHeaderAction"
          },
          "substitute": {
            "$ref": "#/$defs/GoogleCloudRecaptchaenterpriseV1FirewallActionSubstituteAction"
          }
        },
        "type": "object"
      },
      "GoogleCloudRecaptchaenterpriseV1FirewallActionAllowAction": {
        "description": "An allow action continues processing a request unimpeded.",
        "properties": {},
        "type": "object"
      },
      "GoogleCloudRecaptchaenterpriseV1FirewallActionBlockAction": {
        "description": "A block action serves an HTTP error code a prevents the request from hitting the backend.",
        "properties": {},
        "type": "object"
      },
      "GoogleCloudRecaptchaenterpriseV1FirewallActionIncludeRecaptchaScriptAction": {
        "description": "An include reCAPTCHA script action involves injecting reCAPTCHA JavaScript code into the HTML returned by the site backend. This reCAPTCHA script is tasked with collecting user signals on the requested web page, issuing tokens as a cookie within the site domain, and enabling their utilization in subsequent page requests.",
        "properties": {},
        "type": "object"
      },
      "GoogleCloudRecaptchaenterpriseV1FirewallActionRedirectAction": {
        "description": "A redirect action returns a 307 (temporary redirect) response, pointing the user to a ReCaptcha interstitial page to attach a token.",
        "properties": {},
        "type": "object"
      },
      "GoogleCloudRecaptchaenterpriseV1FirewallActionSetHeaderAction": {
        "description": "A set header action sets a header and forwards the request to the backend. This can be used to trigger custom protection implemented on the backend.",
        "properties": {
          "key": {
            "description": "Optional. The header key to set in the request to the backend server.",
            "type": "string"
          },
          "value": {
            "description": "Optional. The header value to set in the request to the backend server.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudRecaptchaenterpriseV1FirewallActionSubstituteAction": {
        "description": "A substitute action transparently serves a different page than the one requested.",
        "properties": {
          "path": {
            "description": "Optional. The address to redirect to. The target is a relative path in the current host. Example: \"/blog/404.html\".",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessment": {
        "description": "Assessment for Fraud Prevention.",
        "properties": {
          "behavioralTrustVerdict": {
            "$ref": "#/$defs/GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessmentBehavioralTrustVerdict"
          },
          "cardTestingVerdict": {
            "$ref": "#/$defs/GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessmentCardTestingVerdict"
          },
          "stolenInstrumentVerdict": {
            "$ref": "#/$defs/GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessmentStolenInstrumentVerdict"
          },
          "transactionRisk": {
            "description": "Output only. Probability of this transaction being fraudulent. Summarizes the combined risk of attack vectors below. Values are from 0.0 (lowest) to 1.0 (highest).",
            "format": "float",
            "readOnly": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessmentBehavioralTrustVerdict": {
        "description": "Information about behavioral trust of the transaction.",
        "properties": {
          "trust": {
            "description": "Output only. Probability of this transaction attempt being executed in a behaviorally trustworthy way. Values are from 0.0 (lowest) to 1.0 (highest).",
            "format": "float",
            "readOnly": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessmentCardTestingVerdict": {
        "description": "Information about card testing fraud, where an adversary is testing fraudulently obtained cards or brute forcing their details.",
        "properties": {
          "risk": {
            "description": "Output only. Probability of this transaction attempt being part of a card testing attack. Values are from 0.0 (lowest) to 1.0 (highest).",
            "format": "float",
            "readOnly": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessmentStolenInstrumentVerdict": {
        "description": "Information about stolen instrument fraud, where the user is not the legitimate owner of the instrument being used for the purchase.",
        "properties": {
          "risk": {
            "description": "Output only. Probability of this transaction being executed with a stolen instrument. Values are from 0.0 (lowest) to 1.0 (highest).",
            "format": "float",
            "readOnly": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "GoogleCloudRecaptchaenterpriseV1FraudSignals": {
        "description": "Fraud signals describing users and cards involved in the transaction.",
        "properties": {
          "cardSignals": {
            "$ref": "#/$defs/GoogleCloudRecaptchaenterpriseV1FraudSignalsCardSignals"
          },
          "userSignals": {
            "$ref": "#/$defs/GoogleCloudRecaptchaenterpriseV1FraudSignalsUserSignals"
          }
        },
        "type": "object"
      },
      "GoogleCloudRecaptchaenterpriseV1FraudSignalsCardSignals": {
        "description": "Signals describing the payment card used in this transaction.",
        "properties": {
          "cardLabels": {
            "description": "Output only. The labels for the payment card in this transaction.",
            "items": {
              "enum": [
                "CARD_LABEL_UNSPECIFIED",
                "PREPAID",
                "VIRTUAL",
                "UNEXPECTED_LOCATION"
              ],
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudRecaptchaenterpriseV1FraudSignalsUserSignals": {
        "description": "Signals describing the user involved in this transaction.",
        "properties": {
          "activeDaysLowerBound": {
            "description": "Output only. This user (based on email, phone, and other identifiers) has been seen on the internet for at least this number of days.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "syntheticRisk": {
            "description": "Output only. Likelihood (from 0.0 to 1.0) this user includes synthetic components in their identity, such as a randomly generated email address, temporary phone number, or fake shipping address.",
            "format": "float",
            "readOnly": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "GoogleCloudRecaptchaenterpriseV1PrivatePasswordLeakVerification": {
        "description": "Private password leak verification info.",
        "properties": {
          "encryptedLeakMatchPrefixes": {
            "description": "Output only. List of prefixes of the encrypted potential password leaks that matched the given parameters. They must be compared with the client-side decryption prefix of `reencrypted_user_credentials_hash`",
            "items": {
              "format": "byte",
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "encryptedUserCredentialsHash": {
            "description": "Optional. Encrypted Scrypt hash of the canonicalized username+password. It is re-encrypted by the server and returned through `reencrypted_user_credentials_hash`.",
            "format": "byte",
            "type": "string"
          },
          "lookupHashPrefix": {
            "description": "Required. Exactly 26-bit prefix of the SHA-256 hash of the canonicalized username. It is used to look up password leaks associated with that hash prefix.",
            "format": "byte",
            "type": "string"
          },
          "reencryptedUserCredentialsHash": {
            "description": "Output only. Corresponds to the re-encryption of the `encrypted_user_credentials_hash` field. It is used to match potential password leaks within `encrypted_leak_match_prefixes`.",
            "format": "byte",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudRecaptchaenterpriseV1RiskAnalysis": {
        "description": "Risk analysis result for an event.",
        "properties": {
          "extendedVerdictReasons": {
            "description": "Output only. Extended verdict reasons to be used for experimentation only. The set of possible reasons is subject to change.",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "reasons": {
            "description": "Output only. Reasons contributing to the risk analysis verdict.",
            "items": {
              "enum": [
                "CLASSIFICATION_REASON_UNSPECIFIED",
                "AUTOMATION",
                "UNEXPECTED_ENVIRONMENT",
                "TOO_MUCH_TRAFFIC",
                "UNEXPECTED_USAGE_PATTERNS",
                "LOW_CONFIDENCE_SCORE",
                "SUSPECTED_CARDING",
                "SUSPECTED_CHARGEBACK"
              ],
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "score": {
            "description": "Output only. Legitimate event score from 0.0 to 1.0. (1.0 means very likely legitimate traffic while 0.0 means very likely non-legitimate traffic).",
            "format": "float",
            "readOnly": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "GoogleCloudRecaptchaenterpriseV1TokenProperties": {
        "description": "Properties of the provided event token.",
        "properties": {
          "action": {
            "description": "Output only. Action name provided at token generation.",
            "readOnly": true,
            "type": "string"
          },
          "androidPackageName": {
            "description": "Output only. The name of the Android package with which the token was generated (Android keys only).",
            "readOnly": true,
            "type": "string"
          },
          "createTime": {
            "description": "Output only. The timestamp corresponding to the generation of the token.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "hostname": {
            "description": "Output only. The hostname of the page on which the token was generated (Web keys only).",
            "readOnly": true,
            "type": "string"
          },
          "invalidReason": {
            "description": "Output only. Reason associated with the response when valid = false.",
            "enum": [
              "INVALID_REASON_UNSPECIFIED",
              "UNKNOWN_INVALID_REASON",
              "MALFORMED",
              "EXPIRED",
              "DUPE",
              "MISSING",
              "BROWSER_ERROR"
            ],
            "readOnly": true,
            "type": "string"
          },
          "iosBundleId": {
            "description": "Output only. The ID of the iOS bundle with which the token was generated (iOS keys only).",
            "readOnly": true,
            "type": "string"
          },
          "valid": {
            "description": "Output only. Whether the provided user response token is valid. When valid = false, the reason could be specified in invalid_reason or it could also be due to a user failing to solve a challenge or a sitekey mismatch (i.e the sitekey used to generate the token was different than the one specified in the assessment).",
            "readOnly": true,
            "type": "boolean"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://recaptchaenterprise.googleapis.com//v1/{parent}/assessments{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A reCAPTCHA Enterprise assessment resource.",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**accountDefenderAssessment**: Account defender risk assessment.",
              {
                "$ul": [
                  "**labels**: Output only. Labels for this request."
                ]
              }
            ],
            [
              "**accountVerification**: Information about account verification, used for identity verification.",
              {
                "$ul": [
                  "**endpoints**: Optional. Endpoints that can be used for identity verification.",
                  "**languageCode**: Optional. Language code preference for the verification message, set as a IETF BCP 47 language code.",
                  "**latestVerificationResult**: Output only. Result of the latest account verification challenge.",
                  "**username**: Username of the account that is being verified. Deprecated. Customers should now provide the `account_id` field in `event.user_info`."
                ]
              }
            ],
            [
              "**event**: The event being assessed.",
              {
                "$ul": [
                  "**expectedAction**: Optional. The expected action for this type of event. This should be the same action provided at token generation time on client-side platforms already integrated with recaptcha enterprise.",
                  "**express**: Optional. Flag for a reCAPTCHA express request for an assessment without a token. If enabled, `site_key` must reference a SCORE key with WAF feature set to EXPRESS.",
                  "**firewallPolicyEvaluation**: Optional. Flag for enabling firewall policy config assessment. If this flag is enabled, the firewall policy will be evaluated and a suggested firewall action will be returned in the response.",
                  "**hashedAccountId**: Optional. Deprecated: use `user_info.account_id` instead. Unique stable hashed user identifier for the request. The identifier must be hashed using hmac-sha256 with stable secret.",
                  "**headers**: Optional. HTTP header information about the request.",
                  "**ja3**: Optional. JA3 fingerprint for SSL clients.",
                  "**requestedUri**: Optional. The URI resource the user requested that triggered an assessment.",
                  "**siteKey**: Optional. The site key that was used to invoke reCAPTCHA Enterprise on your site and generate the token.",
                  "**token**: Optional. The user response token provided by the reCAPTCHA Enterprise client-side integration on your site.",
                  [
                    "**transactionData**: Transaction data associated with a payment protected by reCAPTCHA Enterprise.",
                    {
                      "$ul": [
                        [
                          "**billingAddress**: Structured address format for billing and shipping addresses.",
                          {
                            "$ul": [
                              "**address**: Optional. The first lines of the address. The first line generally contains the street name and number, and further lines may include information such as an apartment number.",
                              "**administrativeArea**: Optional. The state, province, or otherwise administrative area of the address.",
                              "**locality**: Optional. The town/city of the address.",
                              "**postalCode**: Optional. The postal or ZIP code of the address.",
                              "**recipient**: Optional. The recipient name, potentially including information such as \"care of\".",
                              "**regionCode**: Optional. The CLDR country/region of the address."
                            ]
                          }
                        ],
                        "**cardBin**: Optional. The Bank Identification Number - generally the first 6 or 8 digits of the card.",
                        "**cardLastFour**: Optional. The last four digits of the card.",
                        "**currencyCode**: Optional. The currency code in ISO-4217 format.",
                        [
                          "**gatewayInfo**: Details about the transaction from the gateway.",
                          {
                            "$ul": [
                              "**avsResponseCode**: Optional. AVS response code from the gateway (available only when reCAPTCHA Enterprise is called after authorization).",
                              "**cvvResponseCode**: Optional. CVV response code from the gateway (available only when reCAPTCHA Enterprise is called after authorization).",
                              "**gatewayResponseCode**: Optional. Gateway response code describing the state of the transaction.",
                              "**name**: Optional. Name of the gateway service (for example, stripe, square, paypal)."
                            ]
                          }
                        ],
                        "**items**: Optional. Items purchased in this transaction.",
                        "**merchants**: Optional. Information about the user or users fulfilling the transaction.",
                        "**paymentMethod**: Optional. The payment method for the transaction. The allowed values are: * credit-card * debit-card * gift-card * processor-{name} (If a third-party is used, for example, processor-paypal) * custom-{name} (If an alternative method is used, for example, custom-crypto)",
                        [
                          "**shippingAddress**: Structured address format for billing and shipping addresses.",
                          {
                            "$ul": [
                              "**address**: Optional. The first lines of the address. The first line generally contains the street name and number, and further lines may include information such as an apartment number.",
                              "**administrativeArea**: Optional. The state, province, or otherwise administrative area of the address.",
                              "**locality**: Optional. The town/city of the address.",
                              "**postalCode**: Optional. The postal or ZIP code of the address.",
                              "**recipient**: Optional. The recipient name, potentially including information such as \"care of\".",
                              "**regionCode**: Optional. The CLDR country/region of the address."
                            ]
                          }
                        ],
                        "**shippingValue**: Optional. The value of shipping in the specified currency. 0 for free or no shipping.",
                        "**transactionId**: Unique identifier for the transaction. This custom identifier can be used to reference this transaction in the future, for example, labeling a refund or chargeback event. Two attempts at the same transaction should use the same transaction id.",
                        [
                          "**user**: Details about a user's account involved in the transaction.",
                          {
                            "$ul": [
                              "**accountId**: Optional. Unique account identifier for this user. If using account defender, this should match the hashed_account_id field. Otherwise, a unique and persistent identifier for this account.",
                              "**creationMs**: Optional. The epoch milliseconds of the user's account creation.",
                              "**email**: Optional. The email address of the user.",
                              "**emailVerified**: Optional. Whether the email has been verified to be accessible by the user (OTP or similar).",
                              "**phoneNumber**: Optional. The phone number of the user, with country code.",
                              "**phoneVerified**: Optional. Whether the phone number has been verified to be accessible by the user (OTP or similar)."
                            ]
                          }
                        ],
                        "**value**: Optional. The decimal value of the transaction in the specified currency."
                      ]
                    }
                  ],
                  "**userAgent**: Optional. The user agent present in the request from the user's device related to this event.",
                  [
                    "**userInfo**: User information associated with a request protected by reCAPTCHA Enterprise.",
                    {
                      "$ul": [
                        "**accountId**: Optional. For logged-in requests or login/registration requests, the unique account identifier associated with this user. You can use the username if it is stable (meaning it is the same for every request associated with the same user), or any stable user ID of your choice. Leave blank for non logged-in actions or guest checkout.",
                        "**createAccountTime**: Optional. Creation time for this account associated with this user. Leave blank for non logged-in actions, guest checkout, or when there is no account associated with the current user.",
                        "**userIds**: Optional. Identifiers associated with this user or request."
                      ]
                    }
                  ],
                  "**userIpAddress**: Optional. The IP address in the request from the user's device related to this event.",
                  "**wafTokenAssessment**: Optional. Flag for running WAF token assessment. If enabled, the token must be specified, and have been created by a WAF-enabled key."
                ]
              }
            ],
            [
              "**firewallPolicyAssessment**: Policy config assessment.",
              {
                "$ul": [
                  [
                    "**error**: The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
                    {
                      "$ul": [
                        "**code**: The status code, which should be an enum value of google.rpc.Code.",
                        "**details**: A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                        "**message**: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                      ]
                    }
                  ],
                  [
                    "**firewallPolicy**: A FirewallPolicy represents a single matching pattern and resulting actions to take.",
                    {
                      "$ul": [
                        "**actions**: Optional. The actions that the caller should take regarding user access. There should be at most one terminal action. A terminal action is any action that forces a response, such as `AllowAction`, `BlockAction` or `SubstituteAction`. Zero or more non-terminal actions such as `SetHeader` might be specified. A single policy can contain up to 16 actions.",
                        "**condition**: Optional. A CEL (Common Expression Language) conditional expression that specifies if this policy applies to an incoming user request. If this condition evaluates to true and the requested path matched the path pattern, the associated actions should be executed by the caller. The condition string is checked for CEL syntax correctness on creation. For more information, see the [CEL spec](https://github.com/google/cel-spec) and its [language definition](https://github.com/google/cel-spec/blob/master/doc/langdef.md). A condition has a max length of 500 characters.",
                        "**description**: Optional. A description of what this policy aims to achieve, for convenience purposes. The description can at most include 256 UTF-8 characters.",
                        "**name**: Identifier. The resource name for the FirewallPolicy in the format `projects/{project}/firewallpolicies/{firewallpolicy}`.",
                        "**path**: Optional. The path for which this policy applies, specified as a glob pattern. For more information on glob, see the [manual page](https://man7.org/linux/man-pages/man7/glob.7.html). A path has a max length of 200 characters."
                      ]
                    }
                  ]
                ]
              }
            ],
            [
              "**fraudPreventionAssessment**: Assessment for Fraud Prevention.",
              {
                "$ul": [
                  [
                    "**behavioralTrustVerdict**: Information about behavioral trust of the transaction.",
                    {
                      "$ul": [
                        "**trust**: Output only. Probability of this transaction attempt being executed in a behaviorally trustworthy way. Values are from 0.0 (lowest) to 1.0 (highest)."
                      ]
                    }
                  ],
                  [
                    "**cardTestingVerdict**: Information about card testing fraud, where an adversary is testing fraudulently obtained cards or brute forcing their details.",
                    {
                      "$ul": [
                        "**risk**: Output only. Probability of this transaction attempt being part of a card testing attack. Values are from 0.0 (lowest) to 1.0 (highest)."
                      ]
                    }
                  ],
                  [
                    "**stolenInstrumentVerdict**: Information about stolen instrument fraud, where the user is not the legitimate owner of the instrument being used for the purchase.",
                    {
                      "$ul": [
                        "**risk**: Output only. Probability of this transaction being executed with a stolen instrument. Values are from 0.0 (lowest) to 1.0 (highest)."
                      ]
                    }
                  ],
                  "**transactionRisk**: Output only. Probability of this transaction being fraudulent. Summarizes the combined risk of attack vectors below. Values are from 0.0 (lowest) to 1.0 (highest)."
                ]
              }
            ],
            [
              "**fraudSignals**: Fraud signals describing users and cards involved in the transaction.",
              {
                "$ul": [
                  [
                    "**cardSignals**: Signals describing the payment card used in this transaction.",
                    {
                      "$ul": [
                        "**cardLabels**: Output only. The labels for the payment card in this transaction."
                      ]
                    }
                  ],
                  [
                    "**userSignals**: Signals describing the user involved in this transaction.",
                    {
                      "$ul": [
                        "**activeDaysLowerBound**: Output only. This user (based on email, phone, and other identifiers) has been seen on the internet for at least this number of days.",
                        "**syntheticRisk**: Output only. Likelihood (from 0.0 to 1.0) this user includes synthetic components in their identity, such as a randomly generated email address, temporary phone number, or fake shipping address."
                      ]
                    }
                  ]
                ]
              }
            ],
            "**name**: Output only. Identifier. The resource name for the Assessment in the format `projects/{project}/assessments/{assessment}`.",
            [
              "**privatePasswordLeakVerification**: Private password leak verification info.",
              {
                "$ul": [
                  "**encryptedLeakMatchPrefixes**: Output only. List of prefixes of the encrypted potential password leaks that matched the given parameters. They must be compared with the client-side decryption prefix of `reencrypted_user_credentials_hash`",
                  "**encryptedUserCredentialsHash**: Optional. Encrypted Scrypt hash of the canonicalized username+password. It is re-encrypted by the server and returned through `reencrypted_user_credentials_hash`.",
                  "**lookupHashPrefix**: Required. Exactly 26-bit prefix of the SHA-256 hash of the canonicalized username. It is used to look up password leaks associated with that hash prefix.",
                  "**reencryptedUserCredentialsHash**: Output only. Corresponds to the re-encryption of the `encrypted_user_credentials_hash` field. It is used to match potential password leaks within `encrypted_leak_match_prefixes`."
                ]
              }
            ],
            [
              "**riskAnalysis**: Risk analysis result for an event.",
              {
                "$ul": [
                  "**extendedVerdictReasons**: Output only. Extended verdict reasons to be used for experimentation only. The set of possible reasons is subject to change.",
                  "**reasons**: Output only. Reasons contributing to the risk analysis verdict.",
                  "**score**: Output only. Legitimate event score from 0.0 to 1.0. (1.0 means very likely legitimate traffic while 0.0 means very likely non-legitimate traffic)."
                ]
              }
            ],
            [
              "**tokenProperties**: Properties of the provided event token.",
              {
                "$ul": [
                  "**action**: Output only. Action name provided at token generation.",
                  "**androidPackageName**: Output only. The name of the Android package with which the token was generated (Android keys only).",
                  "**createTime**: Output only. The timestamp corresponding to the generation of the token.",
                  "**hostname**: Output only. The hostname of the page on which the token was generated (Web keys only).",
                  "**invalidReason**: Output only. Reason associated with the response when valid = false.",
                  "**iosBundleId**: Output only. The ID of the iOS bundle with which the token was generated (iOS keys only).",
                  "**valid**: Output only. Whether the provided user response token is valid. When valid = false, the reason could be specified in invalid_reason or it could also be due to a user failing to solve a challenge or a sitekey mismatch (i.e the sitekey used to generate the token was different than the one specified in the assessment)."
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
