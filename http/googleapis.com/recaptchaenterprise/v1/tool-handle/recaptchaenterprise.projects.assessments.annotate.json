{
  "name": "recaptchaenterprise_projects_assessments_annotate",
  "description": "Annotates a previously created Assessment to provide additional information on whether the event turned out to be authentic or fraudulent.",
  "parameters": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "Required. The resource name of the Assessment, in the format `projects/{project}/assessments/{assessment}`."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleCloudRecaptchaenterpriseV1AnnotateAssessmentRequest"
      }
    },
    "required": [
      "name"
    ],
    "$defs": {
      "GoogleCloudRecaptchaenterpriseV1AnnotateAssessmentRequest": {
        "description": "The request message to annotate an Assessment.",
        "properties": {
          "accountId": {
            "description": "Optional. A stable account identifier to apply to the assessment. This is an alternative to setting `account_id` in `CreateAssessment`, for example when a stable account identifier is not yet known in the initial request.",
            "type": "string"
          },
          "annotation": {
            "description": "Optional. The annotation that will be assigned to the Event. This field can be left empty to provide reasons that apply to an event without concluding whether the event is legitimate or fraudulent.",
            "enum": [
              "ANNOTATION_UNSPECIFIED",
              "LEGITIMATE",
              "FRAUDULENT",
              "PASSWORD_CORRECT",
              "PASSWORD_INCORRECT"
            ],
            "type": "string",
            "x-enumDeprecated": [
              false,
              false,
              false,
              true,
              true
            ]
          },
          "hashedAccountId": {
            "description": "Optional. A stable hashed account identifier to apply to the assessment. This is an alternative to setting `hashed_account_id` in `CreateAssessment`, for example when a stable account identifier is not yet known in the initial request.",
            "format": "byte",
            "type": "string"
          },
          "reasons": {
            "description": "Optional. Reasons for the annotation that are assigned to the event.",
            "items": {
              "enum": [
                "REASON_UNSPECIFIED",
                "CHARGEBACK",
                "CHARGEBACK_FRAUD",
                "CHARGEBACK_DISPUTE",
                "REFUND",
                "REFUND_FRAUD",
                "TRANSACTION_ACCEPTED",
                "TRANSACTION_DECLINED",
                "PAYMENT_HEURISTICS",
                "INITIATED_TWO_FACTOR",
                "PASSED_TWO_FACTOR",
                "FAILED_TWO_FACTOR",
                "CORRECT_PASSWORD",
                "INCORRECT_PASSWORD",
                "SOCIAL_SPAM"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "transactionEvent": {
            "$ref": "#/$defs/GoogleCloudRecaptchaenterpriseV1TransactionEvent"
          }
        },
        "type": "object"
      },
      "GoogleCloudRecaptchaenterpriseV1TransactionEvent": {
        "description": "Describes an event in the lifecycle of a payment transaction.",
        "properties": {
          "eventTime": {
            "description": "Optional. Timestamp when this transaction event occurred; otherwise assumed to be the time of the API call.",
            "format": "google-datetime",
            "type": "string"
          },
          "eventType": {
            "description": "Optional. The type of this transaction event.",
            "enum": [
              "TRANSACTION_EVENT_TYPE_UNSPECIFIED",
              "MERCHANT_APPROVE",
              "MERCHANT_DENY",
              "MANUAL_REVIEW",
              "AUTHORIZATION",
              "AUTHORIZATION_DECLINE",
              "PAYMENT_CAPTURE",
              "PAYMENT_CAPTURE_DECLINE",
              "CANCEL",
              "CHARGEBACK_INQUIRY",
              "CHARGEBACK_ALERT",
              "FRAUD_NOTIFICATION",
              "CHARGEBACK",
              "CHARGEBACK_REPRESENTMENT",
              "CHARGEBACK_REVERSE",
              "REFUND_REQUEST",
              "REFUND_DECLINE",
              "REFUND",
              "REFUND_REVERSE"
            ],
            "type": "string"
          },
          "reason": {
            "description": "Optional. The reason or standardized code that corresponds with this transaction event, if one exists. For example, a CHARGEBACK event with code 6005.",
            "type": "string"
          },
          "value": {
            "description": "Optional. The value that corresponds with this transaction event, if one exists. For example, a refund event where $5.00 was refunded. Currency is obtained from the original transaction data.",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://recaptchaenterprise.googleapis.com//v1/{name}:annotate{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Empty response for AnnotateAssessment.",
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
