{
  "name": "classroom_courses_courseWork_studentSubmissions_patch",
  "description": "Updates one or more fields of a student submission. See google.classroom.v1.StudentSubmission for details of which fields may be updated and who may change them. This request must be made by the Developer Console project of the [OAuth client ID](https://support.google.com/cloud/answer/6158849) used to create the corresponding course work item. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting developer project did not create the corresponding course work, if the user is not permitted to make the requested modification to the student submission, or for access errors. * `INVALID_ARGUMENT` if the request is malformed. * `NOT_FOUND` if the requested course, course work, or student submission does not exist.",
  "parameters": {
    "type": "object",
    "properties": {
      "courseId": {
        "type": "string",
        "description": "Identifier of the course. This identifier can be either the Classroom-assigned identifier or an alias."
      },
      "courseWorkId": {
        "type": "string",
        "description": "Identifier of the course work."
      },
      "id": {
        "type": "string",
        "description": "Identifier of the student submission."
      },
      "updateMask": {
        "type": "string",
        "description": "Mask that identifies which fields on the student submission to update. This field is required to do an update. The update fails if invalid fields are specified. The following fields may be specified by teachers: * `draft_grade` * `assigned_grade`"
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/StudentSubmission"
      }
    },
    "required": [
      "courseId",
      "courseWorkId",
      "id"
    ],
    "$defs": {
      "StudentSubmission": {
        "description": "Student submission for course work. `StudentSubmission` items are generated when a `CourseWork` item is created. Student submissions that have never been accessed (i.e. with `state` = NEW) may not have a creation time or update time.",
        "properties": {
          "alternateLink": {
            "description": "Absolute link to the submission in the Classroom web UI. Read-only.",
            "type": "string"
          },
          "assignedGrade": {
            "description": "Optional grade. If unset, no grade was set. This value must be non-negative. Decimal (that is, non-integer) values are allowed, but are rounded to two decimal places. This may be modified only by course teachers.",
            "format": "double",
            "type": "number"
          },
          "assignmentSubmission": {
            "$ref": "#/$defs/AssignmentSubmission"
          },
          "associatedWithDeveloper": {
            "description": "Whether this student submission is associated with the Developer Console project making the request. See CreateCourseWork for more details. Read-only.",
            "type": "boolean"
          },
          "courseId": {
            "description": "Identifier of the course. Read-only.",
            "type": "string"
          },
          "courseWorkId": {
            "description": "Identifier for the course work this corresponds to. Read-only.",
            "type": "string"
          },
          "courseWorkType": {
            "description": "Type of course work this submission is for. Read-only.",
            "enum": [
              "COURSE_WORK_TYPE_UNSPECIFIED",
              "ASSIGNMENT",
              "SHORT_ANSWER_QUESTION",
              "MULTIPLE_CHOICE_QUESTION"
            ],
            "type": "string"
          },
          "creationTime": {
            "description": "Creation time of this submission. This may be unset if the student has not accessed this item. Read-only.",
            "format": "google-datetime",
            "type": "string"
          },
          "draftGrade": {
            "description": "Optional pending grade. If unset, no grade was set. This value must be non-negative. Decimal (that is, non-integer) values are allowed, but are rounded to two decimal places. This is only visible to and modifiable by course teachers.",
            "format": "double",
            "type": "number"
          },
          "id": {
            "description": "Classroom-assigned Identifier for the student submission. This is unique among submissions for the relevant course work. Read-only.",
            "type": "string"
          },
          "late": {
            "description": "Whether this submission is late. Read-only.",
            "type": "boolean"
          },
          "multipleChoiceSubmission": {
            "$ref": "#/$defs/MultipleChoiceSubmission"
          },
          "shortAnswerSubmission": {
            "$ref": "#/$defs/ShortAnswerSubmission"
          },
          "state": {
            "description": "State of this submission. Read-only.",
            "enum": [
              "SUBMISSION_STATE_UNSPECIFIED",
              "NEW",
              "CREATED",
              "TURNED_IN",
              "RETURNED",
              "RECLAIMED_BY_STUDENT"
            ],
            "type": "string"
          },
          "submissionHistory": {
            "description": "The history of the submission (includes state and grade histories). Read-only.",
            "items": {
              "$ref": "#/$defs/SubmissionHistory"
            },
            "type": "array"
          },
          "updateTime": {
            "description": "Last update time of this submission. This may be unset if the student has not accessed this item. Read-only.",
            "format": "google-datetime",
            "type": "string"
          },
          "userId": {
            "description": "Identifier for the student that owns this submission. Read-only.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AssignmentSubmission": {
        "description": "Student work for an assignment.",
        "properties": {
          "attachments": {
            "description": "Attachments added by the student. Drive files that correspond to materials with a share mode of STUDENT_COPY may not exist yet if the student has not accessed the assignment in Classroom. Some attachment metadata is only populated if the requesting user has permission to access it. Identifier and alternate_link fields are always available, but others (for example, title) may not be.",
            "items": {
              "$ref": "#/$defs/Attachment"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Attachment": {
        "description": "Attachment added to student assignment work. When creating attachments, setting the `form` field is not supported.",
        "properties": {
          "driveFile": {
            "$ref": "#/$defs/DriveFile"
          },
          "form": {
            "$ref": "#/$defs/Form"
          },
          "link": {
            "$ref": "#/$defs/Link"
          },
          "youTubeVideo": {
            "$ref": "#/$defs/YouTubeVideo"
          }
        },
        "type": "object"
      },
      "DriveFile": {
        "description": "Representation of a Google Drive file.",
        "properties": {
          "alternateLink": {
            "description": "URL that can be used to access the Drive item. Read-only.",
            "type": "string"
          },
          "id": {
            "description": "Drive API resource ID.",
            "type": "string"
          },
          "thumbnailUrl": {
            "description": "URL of a thumbnail image of the Drive item. Read-only.",
            "type": "string"
          },
          "title": {
            "description": "Title of the Drive item. Read-only.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Form": {
        "description": "Google Forms item.",
        "properties": {
          "formUrl": {
            "description": "URL of the form.",
            "type": "string"
          },
          "responseUrl": {
            "description": "URL of the form responses document. Only set if responses have been recorded and only when the requesting user is an editor of the form. Read-only.",
            "type": "string"
          },
          "thumbnailUrl": {
            "description": "URL of a thumbnail image of the Form. Read-only.",
            "type": "string"
          },
          "title": {
            "description": "Title of the Form. Read-only.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Link": {
        "description": "URL item.",
        "properties": {
          "thumbnailUrl": {
            "description": "URL of a thumbnail image of the target URL. Read-only.",
            "type": "string"
          },
          "title": {
            "description": "Title of the target of the URL. Read-only.",
            "type": "string"
          },
          "url": {
            "description": "URL to link to. This must be a valid UTF-8 string containing between 1 and 2024 characters.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "YouTubeVideo": {
        "description": "YouTube video item.",
        "properties": {
          "alternateLink": {
            "description": "URL that can be used to view the YouTube video. Read-only.",
            "type": "string"
          },
          "id": {
            "description": "YouTube API resource ID.",
            "type": "string"
          },
          "thumbnailUrl": {
            "description": "URL of a thumbnail image of the YouTube video. Read-only.",
            "type": "string"
          },
          "title": {
            "description": "Title of the YouTube video. Read-only.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MultipleChoiceSubmission": {
        "description": "Student work for a multiple-choice question.",
        "properties": {
          "answer": {
            "description": "Student's select choice.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ShortAnswerSubmission": {
        "description": "Student work for a short answer question.",
        "properties": {
          "answer": {
            "description": "Student response to a short-answer question.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SubmissionHistory": {
        "description": "The history of the submission. This currently includes state and grade histories.",
        "properties": {
          "gradeHistory": {
            "$ref": "#/$defs/GradeHistory"
          },
          "stateHistory": {
            "$ref": "#/$defs/StateHistory"
          }
        },
        "type": "object"
      },
      "GradeHistory": {
        "description": "The history of each grade on this submission.",
        "properties": {
          "actorUserId": {
            "description": "The teacher who made the grade change.",
            "type": "string"
          },
          "gradeChangeType": {
            "description": "The type of grade change at this time in the submission grade history.",
            "enum": [
              "UNKNOWN_GRADE_CHANGE_TYPE",
              "DRAFT_GRADE_POINTS_EARNED_CHANGE",
              "ASSIGNED_GRADE_POINTS_EARNED_CHANGE",
              "MAX_POINTS_CHANGE"
            ],
            "type": "string"
          },
          "gradeTimestamp": {
            "description": "When the grade of the submission was changed.",
            "format": "google-datetime",
            "type": "string"
          },
          "maxPoints": {
            "description": "The denominator of the grade at this time in the submission grade history.",
            "format": "double",
            "type": "number"
          },
          "pointsEarned": {
            "description": "The numerator of the grade at this time in the submission grade history.",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "StateHistory": {
        "description": "The history of each state this submission has been in.",
        "properties": {
          "actorUserId": {
            "description": "The teacher or student who made the change.",
            "type": "string"
          },
          "state": {
            "description": "The workflow pipeline stage.",
            "enum": [
              "STATE_UNSPECIFIED",
              "CREATED",
              "TURNED_IN",
              "RETURNED",
              "RECLAIMED_BY_STUDENT",
              "STUDENT_EDITED_AFTER_TURN_IN"
            ],
            "type": "string"
          },
          "stateTimestamp": {
            "description": "When the submission entered this state.",
            "format": "google-datetime",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PATCH",
    "url": {
      "$uri": "https://classroom.googleapis.com//v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}{?updateMask,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Student submission for course work. `StudentSubmission` items are generated when a `CourseWork` item is created. Student submissions that have never been accessed (i.e. with `state` = NEW) may not have a creation time or update time.",
        "**Key properties:**",
        {
          "$ul": [
            "**alternateLink**: Absolute link to the submission in the Classroom web UI. Read-only.",
            "**assignedGrade**: Optional grade. If unset, no grade was set. This value must be non-negative. Decimal (that is, non-integer) values are allowed, but are rounded to two decimal places. This may be modified only by course teachers.",
            [
              "**assignmentSubmission**: Student work for an assignment.",
              {
                "$ul": [
                  "**attachments**: Attachments added by the student. Drive files that correspond to materials with a share mode of STUDENT_COPY may not exist yet if the student has not accessed the assignment in Classroom. Some attachment metadata is only populated if the requesting user has permission to access it. Identifier and alternate_link fields are always available, but others (for example, title) may not be."
                ]
              }
            ],
            "**associatedWithDeveloper**: Whether this student submission is associated with the Developer Console project making the request. See CreateCourseWork for more details. Read-only.",
            "**courseId**: Identifier of the course. Read-only.",
            "**courseWorkId**: Identifier for the course work this corresponds to. Read-only.",
            "**courseWorkType**: Type of course work this submission is for. Read-only.",
            "**creationTime**: Creation time of this submission. This may be unset if the student has not accessed this item. Read-only.",
            "**draftGrade**: Optional pending grade. If unset, no grade was set. This value must be non-negative. Decimal (that is, non-integer) values are allowed, but are rounded to two decimal places. This is only visible to and modifiable by course teachers.",
            "**id**: Classroom-assigned Identifier for the student submission. This is unique among submissions for the relevant course work. Read-only.",
            "**late**: Whether this submission is late. Read-only.",
            [
              "**multipleChoiceSubmission**: Student work for a multiple-choice question.",
              {
                "$ul": [
                  "**answer**: Student's select choice."
                ]
              }
            ],
            [
              "**shortAnswerSubmission**: Student work for a short answer question.",
              {
                "$ul": [
                  "**answer**: Student response to a short-answer question."
                ]
              }
            ],
            "**state**: State of this submission. Read-only.",
            "**submissionHistory**: The history of the submission (includes state and grade histories). Read-only.",
            "**updateTime**: Last update time of this submission. This may be unset if the student has not accessed this item. Read-only.",
            "**userId**: Identifier for the student that owns this submission. Read-only."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
