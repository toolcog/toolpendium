{
  "name": "classroom_courses_courseWork_patch",
  "description": "Updates one or more fields of a course work. See google.classroom.v1.CourseWork for details of which fields may be updated and who may change them. This request must be made by the Developer Console project of the [OAuth client ID](https://support.google.com/cloud/answer/6158849) used to create the corresponding course work item. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting developer project did not create the corresponding course work, if the user is not permitted to make the requested modification to the student submission, or for access errors. * `INVALID_ARGUMENT` if the request is malformed. * `FAILED_PRECONDITION` if the requested course work has already been deleted. * `NOT_FOUND` if the requested course, course work, or student submission does not exist.",
  "parameters": {
    "type": "object",
    "properties": {
      "courseId": {
        "type": "string",
        "description": "Identifier of the course. This identifier can be either the Classroom-assigned identifier or an alias."
      },
      "id": {
        "type": "string",
        "description": "Identifier of the course work."
      },
      "updateMask": {
        "type": "string",
        "description": "Mask that identifies which fields on the course work to update. This field is required to do an update. The update fails if invalid fields are specified. If a field supports empty values, it can be cleared by specifying it in the update mask and not in the `CourseWork` object. If a field that does not support empty values is included in the update mask and not set in the `CourseWork` object, an `INVALID_ARGUMENT` error is returned. The following fields may be specified by teachers: * `title` * `description` * `state` * `due_date` * `due_time` * `max_points` * `scheduled_time` * `submission_modification_mode` * `topic_id`"
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/CourseWork"
      }
    },
    "required": [
      "courseId",
      "id"
    ],
    "$defs": {
      "CourseWork": {
        "description": "Course work created by a teacher for students of the course.",
        "properties": {
          "alternateLink": {
            "description": "Absolute link to this course work in the Classroom web UI. This is only populated if `state` is `PUBLISHED`. Read-only.",
            "type": "string"
          },
          "assigneeMode": {
            "description": "Assignee mode of the coursework. If unspecified, the default value is `ALL_STUDENTS`.",
            "enum": [
              "ASSIGNEE_MODE_UNSPECIFIED",
              "ALL_STUDENTS",
              "INDIVIDUAL_STUDENTS"
            ],
            "type": "string"
          },
          "assignment": {
            "$ref": "#/$defs/Assignment"
          },
          "associatedWithDeveloper": {
            "description": "Whether this course work item is associated with the Developer Console project making the request. See CreateCourseWork for more details. Read-only.",
            "type": "boolean"
          },
          "courseId": {
            "description": "Identifier of the course. Read-only.",
            "type": "string"
          },
          "creationTime": {
            "description": "Timestamp when this course work was created. Read-only.",
            "format": "google-datetime",
            "type": "string"
          },
          "creatorUserId": {
            "description": "Identifier for the user that created the coursework. Read-only.",
            "type": "string"
          },
          "description": {
            "description": "Optional description of this course work. If set, the description must be a valid UTF-8 string containing no more than 30,000 characters.",
            "type": "string"
          },
          "dueDate": {
            "$ref": "#/$defs/Date"
          },
          "dueTime": {
            "$ref": "#/$defs/TimeOfDay"
          },
          "gradeCategory": {
            "$ref": "#/$defs/GradeCategory"
          },
          "id": {
            "description": "Classroom-assigned identifier of this course work, unique per course. Read-only.",
            "type": "string"
          },
          "individualStudentsOptions": {
            "$ref": "#/$defs/IndividualStudentsOptions"
          },
          "materials": {
            "description": "Additional materials. CourseWork must have no more than 20 material items.",
            "items": {
              "$ref": "#/$defs/Material"
            },
            "type": "array"
          },
          "maxPoints": {
            "description": "Maximum grade for this course work. If zero or unspecified, this assignment is considered ungraded. This must be a non-negative integer value.",
            "format": "double",
            "type": "number"
          },
          "multipleChoiceQuestion": {
            "$ref": "#/$defs/MultipleChoiceQuestion"
          },
          "scheduledTime": {
            "description": "Optional timestamp when this course work is scheduled to be published.",
            "format": "google-datetime",
            "type": "string"
          },
          "state": {
            "description": "Status of this course work. If unspecified, the default state is `DRAFT`.",
            "enum": [
              "COURSE_WORK_STATE_UNSPECIFIED",
              "PUBLISHED",
              "DRAFT",
              "DELETED"
            ],
            "type": "string"
          },
          "submissionModificationMode": {
            "description": "Setting to determine when students are allowed to modify submissions. If unspecified, the default value is `MODIFIABLE_UNTIL_TURNED_IN`.",
            "enum": [
              "SUBMISSION_MODIFICATION_MODE_UNSPECIFIED",
              "MODIFIABLE_UNTIL_TURNED_IN",
              "MODIFIABLE"
            ],
            "type": "string"
          },
          "title": {
            "description": "Title of this course work. The title must be a valid UTF-8 string containing between 1 and 3000 characters.",
            "type": "string"
          },
          "topicId": {
            "description": "Identifier for the topic that this coursework is associated with. Must match an existing topic in the course.",
            "type": "string"
          },
          "updateTime": {
            "description": "Timestamp of the most recent change to this course work. Read-only.",
            "format": "google-datetime",
            "type": "string"
          },
          "workType": {
            "description": "Type of this course work. The type is set when the course work is created and cannot be changed.",
            "enum": [
              "COURSE_WORK_TYPE_UNSPECIFIED",
              "ASSIGNMENT",
              "SHORT_ANSWER_QUESTION",
              "MULTIPLE_CHOICE_QUESTION"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "Assignment": {
        "description": "Additional details for assignments.",
        "properties": {
          "studentWorkFolder": {
            "$ref": "#/$defs/DriveFolder"
          }
        },
        "type": "object"
      },
      "DriveFolder": {
        "description": "Representation of a Google Drive folder.",
        "properties": {
          "alternateLink": {
            "description": "URL that can be used to access the Drive folder. Read-only.",
            "type": "string"
          },
          "id": {
            "description": "Drive API resource ID.",
            "type": "string"
          },
          "title": {
            "description": "Title of the Drive folder. Read-only.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Date": {
        "description": "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp",
        "properties": {
          "day": {
            "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
            "format": "int32",
            "type": "integer"
          },
          "month": {
            "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
            "format": "int32",
            "type": "integer"
          },
          "year": {
            "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TimeOfDay": {
        "description": "Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.",
        "properties": {
          "hours": {
            "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \"24:00:00\" for scenarios like business closing time.",
            "format": "int32",
            "type": "integer"
          },
          "minutes": {
            "description": "Minutes of hour of day. Must be from 0 to 59.",
            "format": "int32",
            "type": "integer"
          },
          "nanos": {
            "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.",
            "format": "int32",
            "type": "integer"
          },
          "seconds": {
            "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GradeCategory": {
        "description": "Details for a grade category in a course. Coursework may have zero or one grade category, and the category may be used in computing the overall grade. See the [help center article](https://support.google.com/edu/classroom/answer/9184995) for details.",
        "properties": {
          "defaultGradeDenominator": {
            "description": "Default value of denominator. Only applicable when grade calculation type is TOTAL_POINTS.",
            "format": "int32",
            "type": "integer"
          },
          "id": {
            "description": "ID of the grade category.",
            "type": "string"
          },
          "name": {
            "description": "Name of the grade category.",
            "type": "string"
          },
          "weight": {
            "description": "The weight of the category average as part of overall average. A weight of 12.34% is represented as 123400 (100% is 1,000,000). The last two digits should always be zero since we use two decimal precision. Only applicable when grade calculation type is WEIGHTED_CATEGORIES.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "IndividualStudentsOptions": {
        "description": "Assignee details about a coursework/announcement. This field is set if and only if `assigneeMode` is `INDIVIDUAL_STUDENTS`.",
        "properties": {
          "studentIds": {
            "description": "Identifiers for the students that have access to the coursework/announcement.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Material": {
        "description": "Material attached to course work. When creating attachments, setting the `form` field is not supported.",
        "properties": {
          "driveFile": {
            "$ref": "#/$defs/SharedDriveFile"
          },
          "form": {
            "$ref": "#/$defs/Form"
          },
          "link": {
            "$ref": "#/$defs/Link"
          },
          "youtubeVideo": {
            "$ref": "#/$defs/YouTubeVideo"
          }
        },
        "type": "object"
      },
      "SharedDriveFile": {
        "description": "Drive file that is used as material for course work.",
        "properties": {
          "driveFile": {
            "$ref": "#/$defs/DriveFile"
          },
          "shareMode": {
            "description": "Mechanism by which students access the Drive item.",
            "enum": [
              "UNKNOWN_SHARE_MODE",
              "VIEW",
              "EDIT",
              "STUDENT_COPY"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "DriveFile": {
        "description": "Representation of a Google Drive file.",
        "properties": {
          "alternateLink": {
            "description": "URL that can be used to access the Drive item. Read-only.",
            "type": "string"
          },
          "id": {
            "description": "Drive API resource ID.",
            "type": "string"
          },
          "thumbnailUrl": {
            "description": "URL of a thumbnail image of the Drive item. Read-only.",
            "type": "string"
          },
          "title": {
            "description": "Title of the Drive item. Read-only.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Form": {
        "description": "Google Forms item.",
        "properties": {
          "formUrl": {
            "description": "URL of the form.",
            "type": "string"
          },
          "responseUrl": {
            "description": "URL of the form responses document. Only set if responses have been recorded and only when the requesting user is an editor of the form. Read-only.",
            "type": "string"
          },
          "thumbnailUrl": {
            "description": "URL of a thumbnail image of the Form. Read-only.",
            "type": "string"
          },
          "title": {
            "description": "Title of the Form. Read-only.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Link": {
        "description": "URL item.",
        "properties": {
          "thumbnailUrl": {
            "description": "URL of a thumbnail image of the target URL. Read-only.",
            "type": "string"
          },
          "title": {
            "description": "Title of the target of the URL. Read-only.",
            "type": "string"
          },
          "url": {
            "description": "URL to link to. This must be a valid UTF-8 string containing between 1 and 2024 characters.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "YouTubeVideo": {
        "description": "YouTube video item.",
        "properties": {
          "alternateLink": {
            "description": "URL that can be used to view the YouTube video. Read-only.",
            "type": "string"
          },
          "id": {
            "description": "YouTube API resource ID.",
            "type": "string"
          },
          "thumbnailUrl": {
            "description": "URL of a thumbnail image of the YouTube video. Read-only.",
            "type": "string"
          },
          "title": {
            "description": "Title of the YouTube video. Read-only.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MultipleChoiceQuestion": {
        "description": "Additional details for multiple-choice questions.",
        "properties": {
          "choices": {
            "description": "Possible choices.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PATCH",
    "url": {
      "$uri": "https://classroom.googleapis.com//v1/courses/{courseId}/courseWork/{id}{?updateMask,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Course work created by a teacher for students of the course.",
        "**Key properties:**",
        {
          "$ul": [
            "**alternateLink**: Absolute link to this course work in the Classroom web UI. This is only populated if `state` is `PUBLISHED`. Read-only.",
            "**assigneeMode**: Assignee mode of the coursework. If unspecified, the default value is `ALL_STUDENTS`.",
            [
              "**assignment**: Additional details for assignments.",
              {
                "$ul": [
                  [
                    "**studentWorkFolder**: Representation of a Google Drive folder.",
                    {
                      "$ul": [
                        "**alternateLink**: URL that can be used to access the Drive folder. Read-only.",
                        "**id**: Drive API resource ID.",
                        "**title**: Title of the Drive folder. Read-only."
                      ]
                    }
                  ]
                ]
              }
            ],
            "**associatedWithDeveloper**: Whether this course work item is associated with the Developer Console project making the request. See CreateCourseWork for more details. Read-only.",
            "**courseId**: Identifier of the course. Read-only.",
            "**creationTime**: Timestamp when this course work was created. Read-only.",
            "**creatorUserId**: Identifier for the user that created the coursework. Read-only.",
            "**description**: Optional description of this course work. If set, the description must be a valid UTF-8 string containing no more than 30,000 characters.",
            [
              "**dueDate**: Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp",
              {
                "$ul": [
                  "**day**: Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
                  "**month**: Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
                  "**year**: Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year."
                ]
              }
            ],
            [
              "**dueTime**: Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.",
              {
                "$ul": [
                  "**hours**: Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \"24:00:00\" for scenarios like business closing time.",
                  "**minutes**: Minutes of hour of day. Must be from 0 to 59.",
                  "**nanos**: Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.",
                  "**seconds**: Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds."
                ]
              }
            ],
            [
              "**gradeCategory**: Details for a grade category in a course. Coursework may have zero or one grade category, and the category may be used in computing the overall grade. See the [help center article](https://support.google.com/edu/classroom/answer/9184995) for details.",
              {
                "$ul": [
                  "**defaultGradeDenominator**: Default value of denominator. Only applicable when grade calculation type is TOTAL_POINTS.",
                  "**id**: ID of the grade category.",
                  "**name**: Name of the grade category.",
                  "**weight**: The weight of the category average as part of overall average. A weight of 12.34% is represented as 123400 (100% is 1,000,000). The last two digits should always be zero since we use two decimal precision. Only applicable when grade calculation type is WEIGHTED_CATEGORIES."
                ]
              }
            ],
            "**id**: Classroom-assigned identifier of this course work, unique per course. Read-only.",
            [
              "**individualStudentsOptions**: Assignee details about a coursework/announcement. This field is set if and only if `assigneeMode` is `INDIVIDUAL_STUDENTS`.",
              {
                "$ul": [
                  "**studentIds**: Identifiers for the students that have access to the coursework/announcement."
                ]
              }
            ],
            "**materials**: Additional materials. CourseWork must have no more than 20 material items.",
            "**maxPoints**: Maximum grade for this course work. If zero or unspecified, this assignment is considered ungraded. This must be a non-negative integer value.",
            [
              "**multipleChoiceQuestion**: Additional details for multiple-choice questions.",
              {
                "$ul": [
                  "**choices**: Possible choices."
                ]
              }
            ],
            "**scheduledTime**: Optional timestamp when this course work is scheduled to be published.",
            "**state**: Status of this course work. If unspecified, the default state is `DRAFT`.",
            "**submissionModificationMode**: Setting to determine when students are allowed to modify submissions. If unspecified, the default value is `MODIFIABLE_UNTIL_TURNED_IN`.",
            "**title**: Title of this course work. The title must be a valid UTF-8 string containing between 1 and 3000 characters.",
            "**topicId**: Identifier for the topic that this coursework is associated with. Must match an existing topic in the course.",
            "**updateTime**: Timestamp of the most recent change to this course work. Read-only.",
            "**workType**: Type of this course work. The type is set when the course work is created and cannot be changed."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
