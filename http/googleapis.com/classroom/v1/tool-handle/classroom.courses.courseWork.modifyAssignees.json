{
  "name": "classroom_courses_courseWork_modifyAssignees",
  "description": "Modifies assignee mode and options of a coursework. Only a teacher of the course that contains the coursework may call this method. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to access the requested course or course work or for access errors. * `INVALID_ARGUMENT` if the request is malformed. * `NOT_FOUND` if the requested course or course work does not exist.",
  "parameters": {
    "type": "object",
    "properties": {
      "courseId": {
        "type": "string",
        "description": "Identifier of the course. This identifier can be either the Classroom-assigned identifier or an alias."
      },
      "id": {
        "type": "string",
        "description": "Identifier of the coursework."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/ModifyCourseWorkAssigneesRequest"
      }
    },
    "required": [
      "courseId",
      "id"
    ],
    "$defs": {
      "ModifyCourseWorkAssigneesRequest": {
        "description": "Request to modify assignee mode and options of a coursework.",
        "properties": {
          "assigneeMode": {
            "description": "Mode of the coursework describing whether it will be assigned to all students or specified individual students.",
            "enum": [
              "ASSIGNEE_MODE_UNSPECIFIED",
              "ALL_STUDENTS",
              "INDIVIDUAL_STUDENTS"
            ],
            "type": "string"
          },
          "modifyIndividualStudentsOptions": {
            "$ref": "#/$defs/ModifyIndividualStudentsOptions"
          }
        },
        "type": "object"
      },
      "ModifyIndividualStudentsOptions": {
        "description": "Contains fields to add or remove students from a course work or announcement where the `assigneeMode` is set to `INDIVIDUAL_STUDENTS`.",
        "properties": {
          "addStudentIds": {
            "description": "IDs of students to be added as having access to this coursework/announcement.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "removeStudentIds": {
            "description": "IDs of students to be removed from having access to this coursework/announcement.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://classroom.googleapis.com//v1/courses/{courseId}/courseWork/{id}:modifyAssignees{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Course work created by a teacher for students of the course.",
        "**Key properties:**",
        {
          "$ul": [
            "**alternateLink**: Absolute link to this course work in the Classroom web UI. This is only populated if `state` is `PUBLISHED`. Read-only.",
            "**assigneeMode**: Assignee mode of the coursework. If unspecified, the default value is `ALL_STUDENTS`.",
            [
              "**assignment**: Additional details for assignments.",
              {
                "$ul": [
                  [
                    "**studentWorkFolder**: Representation of a Google Drive folder.",
                    {
                      "$ul": [
                        "**alternateLink**: URL that can be used to access the Drive folder. Read-only.",
                        "**id**: Drive API resource ID.",
                        "**title**: Title of the Drive folder. Read-only."
                      ]
                    }
                  ]
                ]
              }
            ],
            "**associatedWithDeveloper**: Whether this course work item is associated with the Developer Console project making the request. See CreateCourseWork for more details. Read-only.",
            "**courseId**: Identifier of the course. Read-only.",
            "**creationTime**: Timestamp when this course work was created. Read-only.",
            "**creatorUserId**: Identifier for the user that created the coursework. Read-only.",
            "**description**: Optional description of this course work. If set, the description must be a valid UTF-8 string containing no more than 30,000 characters.",
            [
              "**dueDate**: Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp",
              {
                "$ul": [
                  "**day**: Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
                  "**month**: Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
                  "**year**: Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year."
                ]
              }
            ],
            [
              "**dueTime**: Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.",
              {
                "$ul": [
                  "**hours**: Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \"24:00:00\" for scenarios like business closing time.",
                  "**minutes**: Minutes of hour of day. Must be from 0 to 59.",
                  "**nanos**: Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.",
                  "**seconds**: Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds."
                ]
              }
            ],
            [
              "**gradeCategory**: Details for a grade category in a course. Coursework may have zero or one grade category, and the category may be used in computing the overall grade. See the [help center article](https://support.google.com/edu/classroom/answer/9184995) for details.",
              {
                "$ul": [
                  "**defaultGradeDenominator**: Default value of denominator. Only applicable when grade calculation type is TOTAL_POINTS.",
                  "**id**: ID of the grade category.",
                  "**name**: Name of the grade category.",
                  "**weight**: The weight of the category average as part of overall average. A weight of 12.34% is represented as 123400 (100% is 1,000,000). The last two digits should always be zero since we use two decimal precision. Only applicable when grade calculation type is WEIGHTED_CATEGORIES."
                ]
              }
            ],
            "**id**: Classroom-assigned identifier of this course work, unique per course. Read-only.",
            [
              "**individualStudentsOptions**: Assignee details about a coursework/announcement. This field is set if and only if `assigneeMode` is `INDIVIDUAL_STUDENTS`.",
              {
                "$ul": [
                  "**studentIds**: Identifiers for the students that have access to the coursework/announcement."
                ]
              }
            ],
            "**materials**: Additional materials. CourseWork must have no more than 20 material items.",
            "**maxPoints**: Maximum grade for this course work. If zero or unspecified, this assignment is considered ungraded. This must be a non-negative integer value.",
            [
              "**multipleChoiceQuestion**: Additional details for multiple-choice questions.",
              {
                "$ul": [
                  "**choices**: Possible choices."
                ]
              }
            ],
            "**scheduledTime**: Optional timestamp when this course work is scheduled to be published.",
            "**state**: Status of this course work. If unspecified, the default state is `DRAFT`.",
            "**submissionModificationMode**: Setting to determine when students are allowed to modify submissions. If unspecified, the default value is `MODIFIABLE_UNTIL_TURNED_IN`.",
            "**title**: Title of this course work. The title must be a valid UTF-8 string containing between 1 and 3000 characters.",
            "**topicId**: Identifier for the topic that this coursework is associated with. Must match an existing topic in the course.",
            "**updateTime**: Timestamp of the most recent change to this course work. Read-only.",
            "**workType**: Type of this course work. The type is set when the course work is created and cannot be changed."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
