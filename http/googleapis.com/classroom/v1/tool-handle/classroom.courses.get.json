{
  "name": "classroom_courses_get",
  "description": "Returns a course. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to access the requested course or for access errors. * `NOT_FOUND` if no course exists with the requested ID.",
  "parameters": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Identifier of the course to return. This identifier can be either the Classroom-assigned identifier or an alias."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      }
    },
    "required": [
      "id"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://classroom.googleapis.com//v1/courses/{id}{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A Course in Classroom.",
        "**Key properties:**",
        {
          "$ul": [
            "**alternateLink**: Absolute link to this course in the Classroom web UI. Read-only.",
            "**calendarId**: The Calendar ID for a calendar that all course members can see, to which Classroom adds events for course work and announcements in the course. The Calendar for a course is created asynchronously when the course is set to `CourseState.ACTIVE` for the first time (at creation time or when it is updated to `ACTIVE` through the UI or the API). The Calendar ID will not be populated until the creation process is completed. Read-only.",
            "**courseGroupEmail**: The email address of a Google group containing all members of the course. This group does not accept email and can only be used for permissions. Read-only.",
            "**courseMaterialSets**: Sets of materials that appear on the \"about\" page of this course. Read-only.",
            "**courseState**: State of the course. If unspecified, the default state is `PROVISIONED`.",
            "**creationTime**: Creation time of the course. Specifying this field in a course update mask results in an error. Read-only.",
            "**description**: Optional description. For example, \"We'll be learning about the structure of living creatures from a combination of textbooks, guest lectures, and lab work. Expect to be excited!\" If set, this field must be a valid UTF-8 string and no longer than 30,000 characters.",
            "**descriptionHeading**: Optional heading for the description. For example, \"Welcome to 10th Grade Biology.\" If set, this field must be a valid UTF-8 string and no longer than 3600 characters.",
            "**enrollmentCode**: Enrollment code to use when joining this course. Specifying this field in a course update mask results in an error. Read-only.",
            [
              "**gradebookSettings**: The gradebook settings for a course. See the [help center article](https://support.google.com/edu/classroom/answer/9184995) for details.",
              {
                "$ul": [
                  "**calculationType**: Indicates how the overall grade is calculated.",
                  "**displaySetting**: Indicates who can see the overall grade..",
                  "**gradeCategories**: Grade categories that are available for coursework in the course."
                ]
              }
            ],
            "**guardiansEnabled**: Whether or not guardian notifications are enabled for this course. Read-only.",
            "**id**: Identifier for this course assigned by Classroom. When creating a course, you may optionally set this identifier to an alias string in the request to create a corresponding alias. The `id` is still assigned by Classroom and cannot be updated after the course is created. Specifying this field in a course update mask results in an error.",
            "**name**: Name of the course. For example, \"10th Grade Biology\". The name is required. It must be between 1 and 750 characters and a valid UTF-8 string.",
            "**ownerId**: The identifier of the owner of a course. When specified as a parameter of a create course request, this field is required. The identifier can be one of the following: * the numeric identifier for the user * the email address of the user * the string literal `\"me\"`, indicating the requesting user This must be set in a create request. Admins can also specify this field in a patch course request to transfer ownership. In other contexts, it is read-only.",
            "**room**: Optional room location. For example, \"301\". If set, this field must be a valid UTF-8 string and no longer than 650 characters.",
            "**section**: Section of the course. For example, \"Period 2\". If set, this field must be a valid UTF-8 string and no longer than 2800 characters.",
            [
              "**teacherFolder**: Representation of a Google Drive folder.",
              {
                "$ul": [
                  "**alternateLink**: URL that can be used to access the Drive folder. Read-only.",
                  "**id**: Drive API resource ID.",
                  "**title**: Title of the Drive folder. Read-only."
                ]
              }
            ],
            "**teacherGroupEmail**: The email address of a Google group containing all teachers of the course. This group does not accept email and can only be used for permissions. Read-only.",
            "**updateTime**: Time of the most recent update to this course. Specifying this field in a course update mask results in an error. Read-only."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
