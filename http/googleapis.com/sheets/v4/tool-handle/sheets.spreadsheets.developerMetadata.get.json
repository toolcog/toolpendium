{
  "name": "sheets_spreadsheets_developerMetadata_get",
  "description": "Returns the developer metadata with the specified ID. The caller must specify the spreadsheet ID and the developer metadata's unique metadataId.",
  "parameters": {
    "type": "object",
    "properties": {
      "spreadsheetId": {
        "type": "string",
        "description": "The ID of the spreadsheet to retrieve metadata from."
      },
      "metadataId": {
        "type": "integer",
        "description": "The ID of the developer metadata to retrieve."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      }
    },
    "required": [
      "spreadsheetId",
      "metadataId"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://sheets.googleapis.com//v4/spreadsheets/{spreadsheetId}/developerMetadata/{metadataId}{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Developer metadata associated with a location or object in a spreadsheet. Developer metadata may be used to associate arbitrary data with various parts of a spreadsheet and will remain associated at those locations as they move around and the spreadsheet is edited. For example, if developer metadata is associated with row 5 and another row is then subsequently inserted above row 5, that original metadata will still be associated with the row it was first associated with (what is now row 6). If the associated object is deleted its metadata is deleted too.",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**location**: A location where metadata may be associated in a spreadsheet.",
              {
                "$ul": [
                  [
                    "**dimensionRange**: A range along a single dimension on a sheet. All indexes are zero-based. Indexes are half open: the start index is inclusive and the end index is exclusive. Missing indexes indicate the range is unbounded on that side.",
                    {
                      "$ul": [
                        "**dimension**: The dimension of the span.",
                        "**endIndex**: The end (exclusive) of the span, or not set if unbounded.",
                        "**sheetId**: The sheet this span is on.",
                        "**startIndex**: The start (inclusive) of the span, or not set if unbounded."
                      ]
                    }
                  ],
                  "**locationType**: The type of location this object represents. This field is read-only.",
                  "**sheetId**: The ID of the sheet when metadata is associated with an entire sheet.",
                  "**spreadsheet**: True when metadata is associated with an entire spreadsheet."
                ]
              }
            ],
            "**metadataId**: The spreadsheet-scoped unique ID that identifies the metadata. IDs may be specified when metadata is created, otherwise one will be randomly generated and assigned. Must be positive.",
            "**metadataKey**: The metadata key. There may be multiple metadata in a spreadsheet with the same key. Developer metadata must always have a key specified.",
            "**metadataValue**: Data associated with the metadata's key.",
            "**visibility**: The metadata visibility. Developer metadata must always have a visibility specified."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
