{
  "name": "sheets_spreadsheets_values_batchGet",
  "description": "Returns one or more ranges of values from a spreadsheet. The caller must specify the spreadsheet ID and one or more ranges.",
  "parameters": {
    "type": "object",
    "properties": {
      "spreadsheetId": {
        "type": "string",
        "description": "The ID of the spreadsheet to retrieve data from."
      },
      "dateTimeRenderOption": {
        "enum": [
          "SERIAL_NUMBER",
          "FORMATTED_STRING"
        ],
        "type": "string",
        "description": "How dates, times, and durations should be represented in the output. This is ignored if value_render_option is FORMATTED_VALUE. The default dateTime render option is SERIAL_NUMBER."
      },
      "majorDimension": {
        "enum": [
          "DIMENSION_UNSPECIFIED",
          "ROWS",
          "COLUMNS"
        ],
        "type": "string",
        "description": "The major dimension that results should use. For example, if the spreadsheet data is: `A1=1,B1=2,A2=3,B2=4`, then requesting `ranges=[\"A1:B2\"],majorDimension=ROWS` returns `[[1,2],[3,4]]`, whereas requesting `ranges=[\"A1:B2\"],majorDimension=COLUMNS` returns `[[1,3],[2,4]]`."
      },
      "ranges": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "The [A1 notation or R1C1 notation](/sheets/api/guides/concepts#cell) of the range to retrieve values from."
      },
      "valueRenderOption": {
        "enum": [
          "FORMATTED_VALUE",
          "UNFORMATTED_VALUE",
          "FORMULA"
        ],
        "type": "string",
        "description": "How values should be represented in the output. The default render option is ValueRenderOption.FORMATTED_VALUE."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      }
    },
    "required": [
      "spreadsheetId"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://sheets.googleapis.com//v4/spreadsheets/{spreadsheetId}/values:batchGet{?dateTimeRenderOption,majorDimension,ranges,valueRenderOption,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The response when retrieving more than one range of values in a spreadsheet.",
        "**Key properties:**",
        {
          "$ul": [
            "**spreadsheetId**: The ID of the spreadsheet the data was retrieved from.",
            "**valueRanges**: The requested values. The order of the ValueRanges is the same as the order of the requested ranges."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
