{
  "name": "beyondcorp_projects_locations_insights_configuredInsight",
  "description": "Gets the value for a selected particular insight based on the provided filters. Use the organization level path for fetching at org level and project level path for fetching the insight value specific to a particular project.",
  "parameters": {
    "type": "object",
    "properties": {
      "insight": {
        "type": "string",
        "description": "Required. The resource name of the insight using the form: `organizations/{organization_id}/locations/{location_id}/insights/{insight_id}` `projects/{project_id}/locations/{location_id}/insights/{insight_id}`."
      },
      "aggregation": {
        "enum": [
          "AGGREGATION_UNSPECIFIED",
          "HOURLY",
          "DAILY",
          "WEEKLY",
          "MONTHLY",
          "CUSTOM_DATE_RANGE"
        ],
        "type": "string",
        "description": "Required. Aggregation type. Available aggregation could be fetched by calling insight list and get APIs in `BASIC` view."
      },
      "customGrouping.fieldFilter": {
        "type": "string",
        "description": "Optional. Filterable parameters to be added to the grouping clause. Available fields could be fetched by calling insight list and get APIs in `BASIC` view. `=` is the only comparison operator supported. `AND` is the only logical operator supported. Usage: field_filter=\"fieldName1=fieldVal1 AND fieldName2=fieldVal2\". NOTE: Only `AND` conditions are allowed. NOTE: Use the `filter_alias` from `Insight.Metadata.Field` message for the filtering the corresponding fields in this filter field. (These expressions are based on the filter language described at https://google.aip.dev/160)."
      },
      "customGrouping.groupFields": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "Required. Fields to be used for grouping. NOTE: Use the `filter_alias` from `Insight.Metadata.Field` message for declaring the fields to be grouped-by here."
      },
      "endTime": {
        "type": "string",
        "description": "Required. Ending time for the duration for which insight is to be pulled."
      },
      "fieldFilter": {
        "type": "string",
        "description": "Optional. Other filterable/configurable parameters as applicable to the selected insight. Available fields could be fetched by calling insight list and get APIs in `BASIC` view. `=` is the only comparison operator supported. `AND` is the only logical operator supported. Usage: field_filter=\"fieldName1=fieldVal1 AND fieldName2=fieldVal2\". NOTE: Only `AND` conditions are allowed. NOTE: Use the `filter_alias` from `Insight.Metadata.Field` message for the filtering the corresponding fields in this filter field. (These expressions are based on the filter language described at https://google.aip.dev/160)."
      },
      "group": {
        "type": "string",
        "description": "Optional. Group id of the available groupings for the insight. Available groupings could be fetched by calling insight list and get APIs in `BASIC` view."
      },
      "pageSize": {
        "type": "integer",
        "description": "Optional. Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default."
      },
      "pageToken": {
        "type": "string",
        "description": "Optional. Used to fetch the page represented by the token. Fetches the first page when not set."
      },
      "startTime": {
        "type": "string",
        "description": "Required. Starting time for the duration for which insight is to be pulled."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      }
    },
    "required": [
      "insight"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://beyondcorp.googleapis.com//v1alpha/{insight}:configuredInsight{?aggregation,customGrouping.fieldFilter,customGrouping.groupFields,endTime,fieldFilter,group,pageSize,pageToken,startTime,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The response for the configured insight.",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**appliedConfig**: The configuration that was applied to generate the result.",
              {
                "$ul": [
                  "**aggregation**: Output only. Aggregation type applied.",
                  [
                    "**customGrouping**: Customised grouping option that allows setting the group_by fields and also the filters togather for a configured insight request.",
                    {
                      "$ul": [
                        "**fieldFilter**: Optional. Filterable parameters to be added to the grouping clause. Available fields could be fetched by calling insight list and get APIs in `BASIC` view. `=` is the only comparison operator supported. `AND` is the only logical operator supported. Usage: field_filter=\"fieldName1=fieldVal1 AND fieldName2=fieldVal2\". NOTE: Only `AND` conditions are allowed. NOTE: Use the `filter_alias` from `Insight.Metadata.Field` message for the filtering the corresponding fields in this filter field. (These expressions are based on the filter language described at https://google.aip.dev/160).",
                        "**groupFields**: Required. Fields to be used for grouping. NOTE: Use the `filter_alias` from `Insight.Metadata.Field` message for declaring the fields to be grouped-by here."
                      ]
                    }
                  ],
                  "**endTime**: Output only. Ending time for the duration for which insight was pulled.",
                  "**fieldFilter**: Output only. Filters applied.",
                  "**group**: Output only. Group id of the grouping applied.",
                  "**startTime**: Output only. Starting time for the duration for which insight was pulled."
                ]
              }
            ],
            "**nextPageToken**: Output only. Next page token to be fetched. Set to empty or NULL if there are no more pages available.",
            "**rows**: Output only. Result rows returned containing the required value(s) for configured insight."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
