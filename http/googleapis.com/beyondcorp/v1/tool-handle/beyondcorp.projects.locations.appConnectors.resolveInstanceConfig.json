{
  "name": "beyondcorp_projects_locations_appConnectors_resolveInstanceConfig",
  "description": "Gets instance configuration for a given AppConnector. An internal method called by a AppConnector to get its container config.",
  "parameters": {
    "type": "object",
    "properties": {
      "appConnector": {
        "type": "string",
        "description": "Required. BeyondCorp AppConnector name using the form: `projects/{project_id}/locations/{location_id}/appConnectors/{app_connector}`"
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      }
    },
    "required": [
      "appConnector"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://beyondcorp.googleapis.com//v1/{appConnector}:resolveInstanceConfig{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Response message for BeyondCorp.ResolveInstanceConfig.",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**instanceConfig**: AppConnectorInstanceConfig defines the instance config of a AppConnector.",
              {
                "$ul": [
                  [
                    "**imageConfig**: ImageConfig defines the control plane images to run.",
                    {
                      "$ul": [
                        "**stableImage**: The stable image that the remote agent will fallback to if the target image fails. Format would be a gcr image path, e.g.: gcr.io/PROJECT-ID/my-image:tag1",
                        "**targetImage**: The initial image the remote agent will attempt to run for the control plane. Format would be a gcr image path, e.g.: gcr.io/PROJECT-ID/my-image:tag1"
                      ]
                    }
                  ],
                  "**instanceConfig**: The SLM instance agent configuration.",
                  [
                    "**notificationConfig**: NotificationConfig defines the mechanisms to notify instance agent.",
                    {
                      "$ul": [
                        [
                          "**pubsubNotification**: The configuration for Pub/Sub messaging for the AppConnector.",
                          {
                            "$ul": [
                              "**pubsubSubscription**: The Pub/Sub subscription the AppConnector uses to receive notifications."
                            ]
                          }
                        ]
                      ]
                    }
                  ],
                  "**sequenceNumber**: Required. A monotonically increasing number generated and maintained by the API provider. Every time a config changes in the backend, the sequenceNumber should be bumped up to reflect the change."
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
