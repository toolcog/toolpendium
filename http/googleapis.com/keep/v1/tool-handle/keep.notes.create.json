{
  "name": "keep_notes_create",
  "description": "Creates a new note.",
  "parameters": {
    "type": "object",
    "properties": {
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/Note"
      }
    },
    "$defs": {
      "Note": {
        "description": "A single note.",
        "properties": {
          "attachments": {
            "description": "Output only. The attachments attached to this note.",
            "items": {
              "$ref": "#/$defs/Attachment"
            },
            "readOnly": true,
            "type": "array"
          },
          "body": {
            "$ref": "#/$defs/Section"
          },
          "createTime": {
            "description": "Output only. When this note was created.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "Output only. The resource name of this note. See general note on identifiers in KeepService.",
            "readOnly": true,
            "type": "string"
          },
          "permissions": {
            "description": "Output only. The list of permissions set on the note. Contains at least one entry for the note owner.",
            "items": {
              "$ref": "#/$defs/Permission"
            },
            "readOnly": true,
            "type": "array"
          },
          "title": {
            "description": "The title of the note. Length must be less than 1,000 characters.",
            "type": "string"
          },
          "trashTime": {
            "description": "Output only. When this note was trashed. If `trashed`, the note is eventually deleted. If the note is not trashed, this field is not set (and the trashed field is `false`).",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "trashed": {
            "description": "Output only. `true` if this note has been trashed. If trashed, the note is eventually deleted.",
            "readOnly": true,
            "type": "boolean"
          },
          "updateTime": {
            "description": "Output only. When this note was last modified.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "Attachment": {
        "description": "An attachment to a note.",
        "properties": {
          "mimeType": {
            "description": "The MIME types (IANA media types) in which the attachment is available.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "name": {
            "description": "The resource name;",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Section": {
        "description": "The content of the note.",
        "properties": {
          "list": {
            "$ref": "#/$defs/ListContent"
          },
          "text": {
            "$ref": "#/$defs/TextContent"
          }
        },
        "type": "object"
      },
      "ListContent": {
        "description": "The list of items for a single list note.",
        "properties": {
          "listItems": {
            "description": "The items in the list. The number of items must be less than 1,000.",
            "items": {
              "$ref": "#/$defs/ListItem"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ListItem": {
        "description": "A single list item in a note's list.",
        "properties": {
          "checked": {
            "description": "Whether this item has been checked off or not.",
            "type": "boolean"
          },
          "childListItems": {
            "description": "If set, list of list items nested under this list item. Only one level of nesting is allowed.",
            "items": {
              "$ref": "#/$defs/ListItem"
            },
            "type": "array"
          },
          "text": {
            "$ref": "#/$defs/TextContent"
          }
        },
        "type": "object"
      },
      "TextContent": {
        "description": "The block of text for a single text section or list item.",
        "properties": {
          "text": {
            "description": "The text of the note. The limits on this vary with the specific field using this type.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Permission": {
        "description": "A single permission on the note. Associates a `member` with a `role`.",
        "properties": {
          "deleted": {
            "description": "Output only. Whether this member has been deleted. If the member is recovered, this value is set to false and the recovered member retains the role on the note.",
            "readOnly": true,
            "type": "boolean"
          },
          "email": {
            "description": "The email associated with the member. If set on create, the `email` field in the `User` or `Group` message must either be empty or match this field. On read, may be unset if the member does not have an associated email.",
            "type": "string"
          },
          "family": {
            "$ref": "#/$defs/Family"
          },
          "group": {
            "$ref": "#/$defs/Group"
          },
          "name": {
            "description": "Output only. The resource name.",
            "readOnly": true,
            "type": "string"
          },
          "role": {
            "description": "The role granted by this permission. The role determines the entityâ€™s ability to read, write, and share notes.",
            "enum": [
              "ROLE_UNSPECIFIED",
              "OWNER",
              "WRITER"
            ],
            "type": "string"
          },
          "user": {
            "$ref": "#/$defs/User"
          }
        },
        "type": "object"
      },
      "Family": {
        "description": "Describes a single Google Family.",
        "properties": {},
        "type": "object"
      },
      "Group": {
        "description": "Describes a single Group.",
        "properties": {
          "email": {
            "description": "The group email.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "User": {
        "description": "Describes a single user.",
        "properties": {
          "email": {
            "description": "The user's email.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://keep.googleapis.com//v1/notes{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A single note.",
        "**Key properties:**",
        {
          "$ul": [
            "**attachments**: Output only. The attachments attached to this note.",
            [
              "**body**: The content of the note.",
              {
                "$ul": [
                  [
                    "**list**: The list of items for a single list note.",
                    {
                      "$ul": [
                        "**listItems**: The items in the list. The number of items must be less than 1,000."
                      ]
                    }
                  ],
                  [
                    "**text**: The block of text for a single text section or list item.",
                    {
                      "$ul": [
                        "**text**: The text of the note. The limits on this vary with the specific field using this type."
                      ]
                    }
                  ]
                ]
              }
            ],
            "**createTime**: Output only. When this note was created.",
            "**name**: Output only. The resource name of this note. See general note on identifiers in KeepService.",
            "**permissions**: Output only. The list of permissions set on the note. Contains at least one entry for the note owner.",
            "**title**: The title of the note. Length must be less than 1,000 characters.",
            "**trashTime**: Output only. When this note was trashed. If `trashed`, the note is eventually deleted. If the note is not trashed, this field is not set (and the trashed field is `false`).",
            "**trashed**: Output only. `true` if this note has been trashed. If trashed, the note is eventually deleted.",
            "**updateTime**: Output only. When this note was last modified."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
