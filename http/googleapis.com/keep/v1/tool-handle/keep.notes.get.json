{
  "name": "keep_notes_get",
  "description": "Gets a note.",
  "parameters": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "Required. Name of the resource."
      },
      "mimeType": {
        "type": "string",
        "description": "The IANA MIME type format requested. The requested MIME type must be one specified in the attachment.mime_type. Required when downloading attachment media and ignored otherwise."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      }
    },
    "required": [
      "name"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://keep.googleapis.com//v1/{name}{?mimeType,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A single note.",
        "**Key properties:**",
        {
          "$ul": [
            "**attachments**: Output only. The attachments attached to this note.",
            [
              "**body**: The content of the note.",
              {
                "$ul": [
                  [
                    "**list**: The list of items for a single list note.",
                    {
                      "$ul": [
                        "**listItems**: The items in the list. The number of items must be less than 1,000."
                      ]
                    }
                  ],
                  [
                    "**text**: The block of text for a single text section or list item.",
                    {
                      "$ul": [
                        "**text**: The text of the note. The limits on this vary with the specific field using this type."
                      ]
                    }
                  ]
                ]
              }
            ],
            "**createTime**: Output only. When this note was created.",
            "**name**: Output only. The resource name of this note. See general note on identifiers in KeepService.",
            "**permissions**: Output only. The list of permissions set on the note. Contains at least one entry for the note owner.",
            "**title**: The title of the note. Length must be less than 1,000 characters.",
            "**trashTime**: Output only. When this note was trashed. If `trashed`, the note is eventually deleted. If the note is not trashed, this field is not set (and the trashed field is `false`).",
            "**trashed**: Output only. `true` if this note has been trashed. If trashed, the note is eventually deleted.",
            "**updateTime**: Output only. When this note was last modified."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
