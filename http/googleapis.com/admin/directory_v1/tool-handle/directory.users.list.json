{
  "name": "directory_users_list",
  "description": "Retrieves a paginated list of either deleted users or all users in a domain.",
  "parameters": {
    "type": "object",
    "properties": {
      "customFieldMask": {
        "type": "string",
        "description": "A comma-separated list of schema names. All fields from these schemas are fetched. This should only be set when `projection=custom`."
      },
      "customer": {
        "type": "string",
        "description": "The unique ID for the customer's Google Workspace account. In case of a multi-domain account, to fetch all groups for a customer, use this field instead of `domain`. You can also use the `my_customer` alias to represent your account's `customerId`. The `customerId` is also returned as part of the [Users](/admin-sdk/directory/v1/reference/users) resource. You must provide either the `customer` or the `domain` parameter."
      },
      "domain": {
        "type": "string",
        "description": "The domain name. Use this field to get groups from only one domain. To return all domains for a customer account, use the `customer` query parameter instead. Either the `customer` or the `domain` parameter must be provided."
      },
      "event": {
        "enum": [
          "add",
          "delete",
          "makeAdmin",
          "undelete",
          "update"
        ],
        "type": "string",
        "description": "Event on which subscription is intended (if subscribing)"
      },
      "maxResults": {
        "maximum": 500,
        "minimum": 1,
        "type": "integer",
        "description": "Maximum number of results to return."
      },
      "orderBy": {
        "enum": [
          "email",
          "familyName",
          "givenName"
        ],
        "type": "string",
        "description": "Property to use for sorting results."
      },
      "pageToken": {
        "type": "string",
        "description": "Token to specify next page in the list"
      },
      "projection": {
        "enum": [
          "basic",
          "custom",
          "full"
        ],
        "type": "string",
        "description": "What subset of fields to fetch for this user."
      },
      "query": {
        "type": "string",
        "description": "Query string for searching user fields. For more information on constructing user queries, see [Search for Users](/admin-sdk/directory/v1/guides/search-users)."
      },
      "showDeleted": {
        "type": "string",
        "description": "If set to `true`, retrieves the list of deleted users. (Default: `false`)"
      },
      "sortOrder": {
        "enum": [
          "ASCENDING",
          "DESCENDING"
        ],
        "type": "string",
        "description": "Whether to return results in ascending or descending order, ignoring case."
      },
      "viewType": {
        "enum": [
          "admin_view",
          "domain_public"
        ],
        "type": "string",
        "description": "Whether to fetch the administrator-only or domain-wide public view of the user. For more information, see [Retrieve a user as a non-administrator](/admin-sdk/directory/v1/guides/manage-users#retrieve_users_non_admin)."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://admin.googleapis.com//admin/directory/v1/users{?customFieldMask,customer,domain,event,maxResults,orderBy,pageToken,projection,query,showDeleted,sortOrder,viewType,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**etag**: ETag of the resource.",
            "**kind**: Kind of resource this is. (default: admin#directory#users)",
            "**nextPageToken**: Token used to access next page of this result.",
            "**trigger_event**: Event that triggered this response (only used in case of Push Response)",
            "**users**: A list of user objects."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
