{
  "name": "directory_resources_buildings_get",
  "description": "Retrieves a building.",
  "parameters": {
    "type": "object",
    "properties": {
      "customer": {
        "type": "string",
        "description": "The unique ID for the customer's Google Workspace account. As an account administrator, you can also use the `my_customer` alias to represent your account's customer ID."
      },
      "buildingId": {
        "type": "string",
        "description": "The unique ID of the building to retrieve."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      }
    },
    "required": [
      "customer",
      "buildingId"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://admin.googleapis.com//admin/directory/v1/customer/{customer}/resources/buildings/{buildingId}{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Public API: Resources.buildings",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**address**: Public API: Resources.buildings",
              {
                "$ul": [
                  "**addressLines**: Unstructured address lines describing the lower levels of an address.",
                  "**administrativeArea**: Optional. Highest administrative subdivision which is used for postal addresses of a country or region.",
                  "**languageCode**: Optional. BCP-47 language code of the contents of this address (if known).",
                  "**locality**: Optional. Generally refers to the city/town portion of the address. Examples: US city, IT comune, UK post town. In regions of the world where localities are not well defined or do not fit into this structure well, leave locality empty and use addressLines.",
                  "**postalCode**: Optional. Postal code of the address.",
                  "**regionCode**: Required. CLDR region code of the country/region of the address.",
                  "**sublocality**: Optional. Sublocality of the address."
                ]
              }
            ],
            "**buildingId**: Unique identifier for the building. The maximum length is 100 characters.",
            "**buildingName**: The building name as seen by users in Calendar. Must be unique for the customer. For example, \"NYC-CHEL\". The maximum length is 100 characters.",
            [
              "**coordinates**: Public API: Resources.buildings",
              {
                "$ul": [
                  "**latitude**: Latitude in decimal degrees.",
                  "**longitude**: Longitude in decimal degrees."
                ]
              }
            ],
            "**description**: A brief description of the building. For example, \"Chelsea Market\".",
            "**etags**: ETag of the resource.",
            "**floorNames**: The display names for all floors in this building. The floors are expected to be sorted in ascending order, from lowest floor to highest floor. For example, [\"B2\", \"B1\", \"L\", \"1\", \"2\", \"2M\", \"3\", \"PH\"] Must contain at least one entry.",
            "**kind**: Kind of resource this is. (default: admin#directory#resources#buildings#Building)"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
