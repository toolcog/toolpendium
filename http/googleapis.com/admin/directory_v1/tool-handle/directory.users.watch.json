{
  "name": "directory_users_watch",
  "description": "Watches for changes in users list.",
  "parameters": {
    "type": "object",
    "properties": {
      "customFieldMask": {
        "type": "string",
        "description": "Comma-separated list of schema names. All fields from these schemas are fetched. This should only be set when projection=custom."
      },
      "customer": {
        "type": "string",
        "description": "Immutable ID of the Google Workspace account. In case of multi-domain, to fetch all users for a customer, fill this field instead of domain."
      },
      "domain": {
        "type": "string",
        "description": "Name of the domain. Fill this field to get users from only this domain. To return all users in a multi-domain fill customer field instead.\""
      },
      "event": {
        "enum": [
          "add",
          "delete",
          "makeAdmin",
          "undelete",
          "update"
        ],
        "type": "string",
        "description": "Events to watch for."
      },
      "maxResults": {
        "maximum": 500,
        "minimum": 1,
        "type": "integer",
        "description": "Maximum number of results to return."
      },
      "orderBy": {
        "enum": [
          "email",
          "familyName",
          "givenName"
        ],
        "type": "string",
        "description": "Column to use for sorting results"
      },
      "pageToken": {
        "type": "string",
        "description": "Token to specify next page in the list"
      },
      "projection": {
        "enum": [
          "basic",
          "custom",
          "full"
        ],
        "type": "string",
        "description": "What subset of fields to fetch for this user."
      },
      "query": {
        "type": "string",
        "description": "Query string search. Should be of the form \"\". Complete documentation is at https: //developers.google.com/admin-sdk/directory/v1/guides/search-users"
      },
      "showDeleted": {
        "type": "string",
        "description": "If set to true, retrieves the list of deleted users. (Default: false)"
      },
      "sortOrder": {
        "enum": [
          "ASCENDING",
          "DESCENDING"
        ],
        "type": "string",
        "description": "Whether to return results in ascending or descending order."
      },
      "viewType": {
        "enum": [
          "admin_view",
          "domain_public"
        ],
        "type": "string",
        "description": "Whether to fetch the administrator-only or domain-wide public view of the user. For more information, see [Retrieve a user as a non-administrator](/admin-sdk/directory/v1/guides/manage-users#retrieve_users_non_admin)."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/Channel"
      }
    },
    "$defs": {
      "Channel": {
        "description": "An notification channel used to watch for resource changes.",
        "properties": {
          "address": {
            "description": "The address where notifications are delivered for this channel.",
            "type": "string"
          },
          "expiration": {
            "description": "Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.",
            "format": "int64",
            "type": "string"
          },
          "id": {
            "description": "A UUID or similar unique string that identifies this channel.",
            "type": "string"
          },
          "kind": {
            "default": "api#channel",
            "description": "Identifies this as a notification channel used to watch for changes to a resource, which is `api#channel`.",
            "type": "string"
          },
          "params": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional parameters controlling delivery channel behavior. Optional. For example, `params.ttl` specifies the time-to-live in seconds for the notification channel, where the default is 2 hours and the maximum TTL is 2 days.",
            "type": "object"
          },
          "payload": {
            "description": "A Boolean value to indicate whether payload is wanted. Optional.",
            "type": "boolean"
          },
          "resourceId": {
            "description": "An opaque ID that identifies the resource being watched on this channel. Stable across different API versions.",
            "type": "string"
          },
          "resourceUri": {
            "description": "A version-specific identifier for the watched resource.",
            "type": "string"
          },
          "token": {
            "description": "An arbitrary string delivered to the target address with each notification delivered over this channel. Optional.",
            "type": "string"
          },
          "type": {
            "description": "The type of delivery mechanism used for this channel.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://admin.googleapis.com//admin/directory/v1/users/watch{?customFieldMask,customer,domain,event,maxResults,orderBy,pageToken,projection,query,showDeleted,sortOrder,viewType,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "An notification channel used to watch for resource changes.",
        "**Key properties:**",
        {
          "$ul": [
            "**address**: The address where notifications are delivered for this channel.",
            "**expiration**: Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.",
            "**id**: A UUID or similar unique string that identifies this channel.",
            "**kind**: Identifies this as a notification channel used to watch for changes to a resource, which is `api#channel`. (default: api#channel)",
            "**params**: Additional parameters controlling delivery channel behavior. Optional. For example, `params.ttl` specifies the time-to-live in seconds for the notification channel, where the default is 2 hours and the maximum TTL is 2 days.",
            "**payload**: A Boolean value to indicate whether payload is wanted. Optional.",
            "**resourceId**: An opaque ID that identifies the resource being watched on this channel. Stable across different API versions.",
            "**resourceUri**: A version-specific identifier for the watched resource.",
            "**token**: An arbitrary string delivered to the target address with each notification delivered over this channel. Optional.",
            "**type**: The type of delivery mechanism used for this channel."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
