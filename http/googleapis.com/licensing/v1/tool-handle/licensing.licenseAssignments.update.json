{
  "name": "licensing_licenseAssignments_update",
  "description": "Reassign a user's product SKU with a different SKU in the same product.",
  "parameters": {
    "type": "object",
    "properties": {
      "productId": {
        "type": "string",
        "description": "A product's unique identifier. For more information about products in this version of the API, see Products and SKUs."
      },
      "skuId": {
        "type": "string",
        "description": "A product SKU's unique identifier. For more information about available SKUs in this version of the API, see Products and SKUs."
      },
      "userId": {
        "type": "string",
        "description": "The user's current primary email address. If the user's email address changes, use the new email address in your API requests. Since a `userId` is subject to change, do not use a `userId` value as a key for persistent data. This key could break if the current user's email address changes. If the `userId` is suspended, the license status changes."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/LicenseAssignment"
      }
    },
    "required": [
      "productId",
      "skuId",
      "userId"
    ],
    "$defs": {
      "LicenseAssignment": {
        "description": "Representation of a license assignment.",
        "properties": {
          "etags": {
            "description": "ETag of the resource.",
            "type": "string"
          },
          "kind": {
            "default": "licensing#licenseAssignment",
            "description": "Identifies the resource as a LicenseAssignment, which is `licensing#licenseAssignment`.",
            "type": "string"
          },
          "productId": {
            "description": "A product's unique identifier. For more information about products in this version of the API, see Product and SKU IDs.",
            "type": "string"
          },
          "productName": {
            "description": "Display Name of the product.",
            "type": "string"
          },
          "selfLink": {
            "description": "Link to this page.",
            "type": "string"
          },
          "skuId": {
            "description": "A product SKU's unique identifier. For more information about available SKUs in this version of the API, see Products and SKUs.",
            "type": "string"
          },
          "skuName": {
            "description": "Display Name of the sku of the product.",
            "type": "string"
          },
          "userId": {
            "description": "The user's current primary email address. If the user's email address changes, use the new email address in your API requests. Since a `userId` is subject to change, do not use a `userId` value as a key for persistent data. This key could break if the current user's email address changes. If the `userId` is suspended, the license status changes.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "https://licensing.googleapis.com//apps/licensing/v1/product/{productId}/sku/{skuId}/user/{userId}{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Representation of a license assignment.",
        "**Key properties:**",
        {
          "$ul": [
            "**etags**: ETag of the resource.",
            "**kind**: Identifies the resource as a LicenseAssignment, which is `licensing#licenseAssignment`. (default: licensing#licenseAssignment)",
            "**productId**: A product's unique identifier. For more information about products in this version of the API, see Product and SKU IDs.",
            "**productName**: Display Name of the product.",
            "**selfLink**: Link to this page.",
            "**skuId**: A product SKU's unique identifier. For more information about available SKUs in this version of the API, see Products and SKUs.",
            "**skuName**: Display Name of the sku of the product.",
            "**userId**: The user's current primary email address. If the user's email address changes, use the new email address in your API requests. Since a `userId` is subject to change, do not use a `userId` value as a key for persistent data. This key could break if the current user's email address changes. If the `userId` is suspended, the license status changes."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
