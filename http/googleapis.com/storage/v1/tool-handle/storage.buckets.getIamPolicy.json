{
  "name": "storage_buckets_getIamPolicy",
  "description": "Returns an IAM policy for the specified bucket.",
  "parameters": {
    "type": "object",
    "properties": {
      "bucket": {
        "type": "string",
        "description": "Name of a bucket."
      },
      "optionsRequestedPolicyVersion": {
        "minimum": 1,
        "type": "integer",
        "description": "The IAM policy format version to be returned. If the optionsRequestedPolicyVersion is for an older version that doesn't support part of the requested IAM policy, the request fails."
      },
      "userProject": {
        "type": "string",
        "description": "The project to be billed for this request. Required for Requester Pays buckets."
      },
      "alt": {
        "enum": [
          "json"
        ],
        "type": "string",
        "description": "Data format for the response."
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "An opaque string that represents a user for quota purposes. Must not exceed 40 characters."
      },
      "uploadType": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"media\", \"multipart\", \"resumable\")."
      },
      "userIp": {
        "type": "string",
        "description": "Deprecated. Please use quotaUser instead."
      }
    },
    "required": [
      "bucket"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://storage.googleapis.com/storage/v1/b/{bucket}/iam{?optionsRequestedPolicyVersion,userProject,alt,fields,key,oauth_token,prettyPrint,quotaUser,uploadType,userIp}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A bucket/object/managedFolder IAM policy.",
        "**Key properties:**",
        {
          "$ul": [
            "**bindings**: An association between a role, which comes with a set of permissions, and members who may assume that role.",
            "**etag**: HTTP 1.1  Entity tag for the policy.",
            "**kind**: The kind of item this is. For policies, this is always storage#policy. This field is ignored on input. (default: storage#policy)",
            "**resourceId**: The ID of the resource to which this policy belongs. Will be of the form projects/_/buckets/bucket for buckets, projects/_/buckets/bucket/objects/object for objects, and projects/_/buckets/bucket/managedFolders/managedFolder. A specific generation may be specified by appending #generationNumber to the end of the object name, e.g. projects/_/buckets/my-bucket/objects/data.txt#17. The current generation can be denoted with #0. This field is ignored on input.",
            "**version**: The IAM policy format version."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
