{
  "name": "storage_managedFolders_get",
  "description": "Returns metadata of the specified managed folder.",
  "parameters": {
    "type": "object",
    "properties": {
      "bucket": {
        "type": "string",
        "description": "Name of the bucket containing the managed folder."
      },
      "managedFolder": {
        "type": "string",
        "description": "The managed folder name/path."
      },
      "ifMetagenerationMatch": {
        "type": "string",
        "description": "Makes the return of the managed folder metadata conditional on whether the managed folder's current metageneration matches the given value."
      },
      "ifMetagenerationNotMatch": {
        "type": "string",
        "description": "Makes the return of the managed folder metadata conditional on whether the managed folder's current metageneration does not match the given value."
      },
      "alt": {
        "enum": [
          "json"
        ],
        "type": "string",
        "description": "Data format for the response."
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "An opaque string that represents a user for quota purposes. Must not exceed 40 characters."
      },
      "uploadType": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"media\", \"multipart\", \"resumable\")."
      },
      "userIp": {
        "type": "string",
        "description": "Deprecated. Please use quotaUser instead."
      }
    },
    "required": [
      "bucket",
      "managedFolder"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://storage.googleapis.com/storage/v1/b/{bucket}/managedFolders/{managedFolder}{?ifMetagenerationMatch,ifMetagenerationNotMatch,alt,fields,key,oauth_token,prettyPrint,quotaUser,uploadType,userIp}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A managed folder.",
        "**Key properties:**",
        {
          "$ul": [
            "**bucket**: The name of the bucket containing this managed folder.",
            "**createTime**: The creation time of the managed folder in RFC 3339 format.",
            "**id**: The ID of the managed folder, including the bucket name and managed folder name.",
            "**kind**: The kind of item this is. For managed folders, this is always storage#managedFolder. (default: storage#managedFolder)",
            "**metageneration**: The version of the metadata for this managed folder. Used for preconditions and for detecting changes in metadata.",
            "**name**: The name of the managed folder. Required if not specified by URL parameter.",
            "**selfLink**: The link to this managed folder.",
            "**updateTime**: The last update time of the managed folder metadata in RFC 3339 format."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
