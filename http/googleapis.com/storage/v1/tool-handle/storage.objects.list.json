{
  "name": "storage_objects_list",
  "description": "Retrieves a list of objects matching the criteria.",
  "parameters": {
    "type": "object",
    "properties": {
      "bucket": {
        "type": "string",
        "description": "Name of the bucket in which to look for objects."
      },
      "delimiter": {
        "type": "string",
        "description": "Returns results in a directory-like mode. items will contain only objects whose names, aside from the prefix, do not contain delimiter. Objects whose names, aside from the prefix, contain delimiter will have their name, truncated after the delimiter, returned in prefixes. Duplicate prefixes are omitted."
      },
      "endOffset": {
        "type": "string",
        "description": "Filter results to objects whose names are lexicographically before endOffset. If startOffset is also set, the objects listed will have names between startOffset (inclusive) and endOffset (exclusive)."
      },
      "includeFoldersAsPrefixes": {
        "type": "boolean",
        "description": "Only applicable if delimiter is set to '/'. If true, will also include folders and managed folders (besides objects) in the returned prefixes."
      },
      "includeTrailingDelimiter": {
        "type": "boolean",
        "description": "If true, objects that end in exactly one instance of delimiter will have their metadata included in items in addition to prefixes."
      },
      "matchGlob": {
        "type": "string",
        "description": "Filter results to objects and prefixes that match this glob pattern."
      },
      "maxResults": {
        "minimum": 0,
        "type": "integer",
        "description": "Maximum number of items plus prefixes to return in a single page of responses. As duplicate prefixes are omitted, fewer total results may be returned than requested. The service will use this parameter or 1,000 items, whichever is smaller."
      },
      "pageToken": {
        "type": "string",
        "description": "A previously-returned page token representing part of the larger set of results to view."
      },
      "prefix": {
        "type": "string",
        "description": "Filter results to objects whose names begin with this prefix."
      },
      "projection": {
        "enum": [
          "full",
          "noAcl"
        ],
        "type": "string",
        "description": "Set of properties to return. Defaults to noAcl."
      },
      "softDeleted": {
        "type": "boolean",
        "description": "If true, only soft-deleted object versions will be listed. The default is false. For more information, see Soft Delete."
      },
      "startOffset": {
        "type": "string",
        "description": "Filter results to objects whose names are lexicographically equal to or after startOffset. If endOffset is also set, the objects listed will have names between startOffset (inclusive) and endOffset (exclusive)."
      },
      "userProject": {
        "type": "string",
        "description": "The project to be billed for this request. Required for Requester Pays buckets."
      },
      "versions": {
        "type": "boolean",
        "description": "If true, lists all versions of an object as distinct results. The default is false. For more information, see Object Versioning."
      },
      "alt": {
        "enum": [
          "json"
        ],
        "type": "string",
        "description": "Data format for the response."
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "An opaque string that represents a user for quota purposes. Must not exceed 40 characters."
      },
      "uploadType": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"media\", \"multipart\", \"resumable\")."
      },
      "userIp": {
        "type": "string",
        "description": "Deprecated. Please use quotaUser instead."
      }
    },
    "required": [
      "bucket"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://storage.googleapis.com/storage/v1/b/{bucket}/o{?delimiter,endOffset,includeFoldersAsPrefixes,includeTrailingDelimiter,matchGlob,maxResults,pageToken,prefix,projection,softDeleted,startOffset,userProject,versions,alt,fields,key,oauth_token,prettyPrint,quotaUser,uploadType,userIp}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A list of objects.",
        "**Key properties:**",
        {
          "$ul": [
            "**items**: The list of items.",
            "**kind**: The kind of item this is. For lists of objects, this is always storage#objects. (default: storage#objects)",
            "**nextPageToken**: The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results.",
            "**prefixes**: The list of prefixes of objects matching-but-not-listed up to and including the requested delimiter."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
