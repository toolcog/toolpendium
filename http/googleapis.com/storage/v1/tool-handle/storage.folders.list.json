{
  "name": "storage_folders_list",
  "description": "Retrieves a list of folders matching the criteria. Only applicable to buckets with hierarchical namespace enabled.",
  "parameters": {
    "type": "object",
    "properties": {
      "bucket": {
        "type": "string",
        "description": "Name of the bucket in which to look for folders."
      },
      "delimiter": {
        "type": "string",
        "description": "Returns results in a directory-like mode. The only supported value is '/'. If set, items will only contain folders that either exactly match the prefix, or are one level below the prefix."
      },
      "endOffset": {
        "type": "string",
        "description": "Filter results to folders whose names are lexicographically before endOffset. If startOffset is also set, the folders listed will have names between startOffset (inclusive) and endOffset (exclusive)."
      },
      "pageSize": {
        "minimum": 0,
        "type": "integer",
        "description": "Maximum number of items to return in a single page of responses."
      },
      "pageToken": {
        "type": "string",
        "description": "A previously-returned page token representing part of the larger set of results to view."
      },
      "prefix": {
        "type": "string",
        "description": "Filter results to folders whose paths begin with this prefix. If set, the value must either be an empty string or end with a '/'."
      },
      "startOffset": {
        "type": "string",
        "description": "Filter results to folders whose names are lexicographically equal to or after startOffset. If endOffset is also set, the folders listed will have names between startOffset (inclusive) and endOffset (exclusive)."
      },
      "alt": {
        "enum": [
          "json"
        ],
        "type": "string",
        "description": "Data format for the response."
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "An opaque string that represents a user for quota purposes. Must not exceed 40 characters."
      },
      "uploadType": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"media\", \"multipart\", \"resumable\")."
      },
      "userIp": {
        "type": "string",
        "description": "Deprecated. Please use quotaUser instead."
      }
    },
    "required": [
      "bucket"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://storage.googleapis.com/storage/v1/b/{bucket}/folders{?delimiter,endOffset,pageSize,pageToken,prefix,startOffset,alt,fields,key,oauth_token,prettyPrint,quotaUser,uploadType,userIp}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A list of folders.",
        "**Key properties:**",
        {
          "$ul": [
            "**items**: The list of items.",
            "**kind**: The kind of item this is. For lists of folders, this is always storage#folders. (default: storage#folders)",
            "**nextPageToken**: The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
