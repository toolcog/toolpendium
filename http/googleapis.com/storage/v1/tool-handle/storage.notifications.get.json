{
  "name": "storage_notifications_get",
  "description": "View a notification configuration.",
  "parameters": {
    "type": "object",
    "properties": {
      "bucket": {
        "type": "string",
        "description": "The parent bucket of the notification."
      },
      "notification": {
        "type": "string",
        "description": "Notification ID"
      },
      "userProject": {
        "type": "string",
        "description": "The project to be billed for this request. Required for Requester Pays buckets."
      },
      "alt": {
        "enum": [
          "json"
        ],
        "type": "string",
        "description": "Data format for the response."
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "An opaque string that represents a user for quota purposes. Must not exceed 40 characters."
      },
      "uploadType": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"media\", \"multipart\", \"resumable\")."
      },
      "userIp": {
        "type": "string",
        "description": "Deprecated. Please use quotaUser instead."
      }
    },
    "required": [
      "bucket",
      "notification"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://storage.googleapis.com/storage/v1/b/{bucket}/notificationConfigs/{notification}{?userProject,alt,fields,key,oauth_token,prettyPrint,quotaUser,uploadType,userIp}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A subscription to receive Google PubSub notifications.",
        "**Key properties:**",
        {
          "$ul": [
            "**custom_attributes**: An optional list of additional attributes to attach to each Cloud PubSub message published for this notification subscription.",
            "**etag**: HTTP 1.1 Entity tag for this subscription notification.",
            "**event_types**: If present, only send notifications about listed event types. If empty, sent notifications for all event types.",
            "**id**: The ID of the notification.",
            "**kind**: The kind of item this is. For notifications, this is always storage#notification. (default: storage#notification)",
            "**object_name_prefix**: If present, only apply this notification configuration to object names that begin with this prefix.",
            "**payload_format**: The desired content of the Payload. (default: JSON_API_V1)",
            "**selfLink**: The canonical URL of this notification.",
            "**topic**: The Cloud PubSub topic to which this subscription publishes. Formatted as: '//pubsub.googleapis.com/projects/{project-identifier}/topics/{my-topic}'"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
