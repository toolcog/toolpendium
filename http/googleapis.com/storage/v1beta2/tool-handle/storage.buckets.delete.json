{
  "name": "storage_buckets_delete",
  "description": "Permanently deletes an empty bucket.",
  "parameters": {
    "type": "object",
    "properties": {
      "bucket": {
        "type": "string",
        "description": "Name of a bucket."
      },
      "ifMetagenerationMatch": {
        "type": "string",
        "description": "Makes the return of the bucket metadata conditional on whether the bucket's current metageneration matches the given value."
      },
      "ifMetagenerationNotMatch": {
        "type": "string",
        "description": "Makes the return of the bucket metadata conditional on whether the bucket's current metageneration does not match the given value."
      },
      "alt": {
        "enum": [
          "json"
        ],
        "type": "string",
        "description": "Data format for the response."
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "An opaque string that represents a user for quota purposes. Must not exceed 40 characters."
      },
      "userIp": {
        "type": "string",
        "description": "Deprecated. Please use quotaUser instead."
      }
    },
    "required": [
      "bucket"
    ]
  },
  "handler": "http",
  "request": {
    "method": "DELETE",
    "url": {
      "$uri": "https://storage.googleapis.com/storage/v1beta2/b/{bucket}{?ifMetagenerationMatch,ifMetagenerationNotMatch,alt,fields,key,oauth_token,prettyPrint,quotaUser,userIp}"
    }
  },
  "responses": {}
}
