{
  "name": "mybusinessbusinessinformation_googleLocations_search",
  "description": "Search all of the possible locations that are a match to the specified request.",
  "parameters": {
    "type": "object",
    "properties": {
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/SearchGoogleLocationsRequest"
      }
    },
    "$defs": {
      "SearchGoogleLocationsRequest": {
        "description": "Request message for GoogleLocations.SearchGoogleLocations.",
        "properties": {
          "location": {
            "$ref": "#/$defs/Location"
          },
          "pageSize": {
            "description": "The number of matches to return. The default value is 3, with a maximum of 10. Note that latency may increase if more are requested. There is no pagination.",
            "format": "int32",
            "type": "integer"
          },
          "query": {
            "description": "Text query to search for. The search results from a query string will be less accurate than if providing an exact location, but can provide more inexact matches.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Location": {
        "description": "A location. See the [help center article] (https://support.google.com/business/answer/3038177) for a detailed description of these fields, or the [category endpoint](/my-business/reference/rest/v4/categories) for a list of valid business categories.",
        "properties": {
          "adWordsLocationExtensions": {
            "$ref": "#/$defs/AdWordsLocationExtensions"
          },
          "categories": {
            "$ref": "#/$defs/Categories"
          },
          "labels": {
            "description": "Optional. A collection of free-form strings to allow you to tag your business. These labels are NOT user facing; only you can see them. Must be between 1-255 characters per label.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "languageCode": {
            "description": "Immutable. The language of the location. Set during creation and not updateable.",
            "type": "string"
          },
          "latlng": {
            "$ref": "#/$defs/LatLng"
          },
          "metadata": {
            "$ref": "#/$defs/Metadata"
          },
          "moreHours": {
            "description": "Optional. More hours for a business's different departments or specific customers.",
            "items": {
              "$ref": "#/$defs/MoreHours"
            },
            "type": "array"
          },
          "name": {
            "description": "Google identifier for this location in the form: `locations/{location_id}`.",
            "type": "string"
          },
          "openInfo": {
            "$ref": "#/$defs/OpenInfo"
          },
          "phoneNumbers": {
            "$ref": "#/$defs/PhoneNumbers"
          },
          "profile": {
            "$ref": "#/$defs/Profile"
          },
          "regularHours": {
            "$ref": "#/$defs/BusinessHours"
          },
          "relationshipData": {
            "$ref": "#/$defs/RelationshipData"
          },
          "serviceArea": {
            "$ref": "#/$defs/ServiceAreaBusiness"
          },
          "serviceItems": {
            "description": "Optional. List of services supported by merchants. A service can be haircut, install water heater, etc. Duplicated service items will be removed automatically.",
            "items": {
              "$ref": "#/$defs/ServiceItem"
            },
            "type": "array"
          },
          "specialHours": {
            "$ref": "#/$defs/SpecialHours"
          },
          "storeCode": {
            "description": "Optional. External identifier for this location, which must be unique within a given account. This is a means of associating the location with your own records.",
            "type": "string"
          },
          "storefrontAddress": {
            "$ref": "#/$defs/PostalAddress"
          },
          "title": {
            "description": "Required. Location name should reflect your business's real-world name, as used consistently on your storefront, website, and stationery, and as known to customers. Any additional information, when relevant, can be included in other fields of the resource (for example, `Address`, `Categories`). Don't add unnecessary information to your name (for example, prefer \"Google\" over \"Google Inc. - Mountain View Corporate Headquarters\"). Don't include marketing taglines, store codes, special characters, hours or closed/open status, phone numbers, website URLs, service/product information, location/address or directions, or containment information (for example, \"Chase ATM in Duane Reade\").",
            "type": "string"
          },
          "websiteUri": {
            "description": "Optional. A URL for this business. If possible, use a URL that represents this individual business location instead of a generic website/URL that represents all locations, or the brand.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AdWordsLocationExtensions": {
        "description": "Additional information that is surfaced in AdWords.",
        "properties": {
          "adPhone": {
            "description": "Required. An alternate phone number to display on AdWords location extensions instead of the location's primary phone number.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Categories": {
        "description": "A collection of categories that describes the business. During updates, both fields must be set. Clients are prohibited from individually updating the primary or additional categories using the update mask.",
        "properties": {
          "additionalCategories": {
            "description": "Optional. Additional categories to describe your business. Categories help your customers find accurate, specific results for services they're interested in. To keep your business information accurate and live, make sure that you use as few categories as possible to describe your overall core business. Choose categories that are as specific as possible, but representative of your main business.",
            "items": {
              "$ref": "#/$defs/Category"
            },
            "type": "array"
          },
          "primaryCategory": {
            "$ref": "#/$defs/Category"
          }
        },
        "type": "object"
      },
      "Category": {
        "description": "A category describing what this business is (not what it does). For a list of valid category IDs, and the mappings to their human-readable names, see `categories.list`.",
        "properties": {
          "displayName": {
            "description": "Output only. The human-readable name of the category. This is set when reading the location. When modifying the location, `category_id` must be set.",
            "readOnly": true,
            "type": "string"
          },
          "moreHoursTypes": {
            "description": "Output only. More hours types that are available for this business category.",
            "items": {
              "$ref": "#/$defs/MoreHoursType"
            },
            "readOnly": true,
            "type": "array"
          },
          "name": {
            "description": "Required. A stable ID (provided by Google) for this category. The value must be specified when modifying the category (when creating or updating a location).",
            "type": "string"
          },
          "serviceTypes": {
            "description": "Output only. A list of all the service types that are available for this business category.",
            "items": {
              "$ref": "#/$defs/ServiceType"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "MoreHoursType": {
        "description": "More hours types that a business can offers, in addition to its regular hours.",
        "properties": {
          "displayName": {
            "description": "Output only. The human-readable English display name for the hours type.",
            "readOnly": true,
            "type": "string"
          },
          "hoursTypeId": {
            "description": "Output only. A stable ID provided by Google for this hours type.",
            "readOnly": true,
            "type": "string"
          },
          "localizedDisplayName": {
            "description": "Output only. The human-readable localized display name for the hours type.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServiceType": {
        "description": "A message describing a service type that the business offers.",
        "properties": {
          "displayName": {
            "description": "Output only. The human-readable display name for the service type.",
            "readOnly": true,
            "type": "string"
          },
          "serviceTypeId": {
            "description": "Output only. A stable ID (provided by Google) for this service type.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "LatLng": {
        "description": "An object that represents a latitude/longitude pair. This is expressed as a pair of doubles to represent degrees latitude and degrees longitude. Unless specified otherwise, this object must conform to the WGS84 standard. Values must be within normalized ranges.",
        "properties": {
          "latitude": {
            "description": "The latitude in degrees. It must be in the range [-90.0, +90.0].",
            "format": "double",
            "type": "number"
          },
          "longitude": {
            "description": "The longitude in degrees. It must be in the range [-180.0, +180.0].",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "Metadata": {
        "description": "Additional non-user-editable information about the location.",
        "properties": {
          "canDelete": {
            "description": "Output only. Indicates whether the location can be deleted using the API.",
            "readOnly": true,
            "type": "boolean"
          },
          "canHaveBusinessCalls": {
            "description": "Output only. Indicates if the listing is eligible for business calls.",
            "readOnly": true,
            "type": "boolean"
          },
          "canHaveFoodMenus": {
            "description": "Output only. Indicates if the listing is eligible for food menu.",
            "readOnly": true,
            "type": "boolean"
          },
          "canModifyServiceList": {
            "description": "Output only. Indicates if the listing can modify the service list.",
            "readOnly": true,
            "type": "boolean"
          },
          "canOperateHealthData": {
            "description": "Output only. Indicates whether the location can operate on Health data.",
            "readOnly": true,
            "type": "boolean"
          },
          "canOperateLocalPost": {
            "description": "Output only. Indicates if the listing can manage local posts.",
            "readOnly": true,
            "type": "boolean"
          },
          "canOperateLodgingData": {
            "description": "Output only. Indicates whether the location can operate on Lodging data.",
            "readOnly": true,
            "type": "boolean"
          },
          "duplicateLocation": {
            "description": "Output only. The location resource that this location duplicates.",
            "readOnly": true,
            "type": "string"
          },
          "hasGoogleUpdated": {
            "description": "Output only. Indicates whether the place ID associated with this location has updates that need to be updated or rejected by the client. If this boolean is set, you should call the `getGoogleUpdated` method to lookup information that's needs to be verified.",
            "readOnly": true,
            "type": "boolean"
          },
          "hasPendingEdits": {
            "description": "Output only. Indicates whether any of this Location's properties are in the edit pending state.",
            "readOnly": true,
            "type": "boolean"
          },
          "hasVoiceOfMerchant": {
            "description": "Output only. Indicates if the listing has Voice of Merchant. If this boolean is false, you should call the locations.getVoiceOfMerchantState API to get details as to why they do not have Voice of Merchant.",
            "readOnly": true,
            "type": "boolean"
          },
          "mapsUri": {
            "description": "Output only. A link to the location on Maps.",
            "readOnly": true,
            "type": "string"
          },
          "newReviewUri": {
            "description": "Output only. A link to the page on Google Search where a customer can leave a review for the location.",
            "readOnly": true,
            "type": "string"
          },
          "placeId": {
            "description": "Output only. If this locationappears on Google Maps, this field is populated with the place ID for the location. This ID can be used in various Places APIs. This field can be set during Create calls, but not for Update.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "MoreHours": {
        "description": "The time periods during which a location is open for certain types of business.",
        "properties": {
          "hoursTypeId": {
            "description": "Required. Type of hours. Clients should call {#link businessCategories:BatchGet} to get supported hours types for categories of their locations.",
            "type": "string"
          },
          "periods": {
            "description": "Required. A collection of times that this location is open. Each period represents a range of hours when the location is open during the week.",
            "items": {
              "$ref": "#/$defs/TimePeriod"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "TimePeriod": {
        "description": "Represents a span of time that the business is open, starting on the specified open day/time and closing on the specified close day/time. The closing time must occur after the opening time, for example later in the same day, or on a subsequent day.",
        "properties": {
          "closeDay": {
            "description": "Required. Indicates the day of the week this period ends on.",
            "enum": [
              "DAY_OF_WEEK_UNSPECIFIED",
              "MONDAY",
              "TUESDAY",
              "WEDNESDAY",
              "THURSDAY",
              "FRIDAY",
              "SATURDAY",
              "SUNDAY"
            ],
            "type": "string"
          },
          "closeTime": {
            "$ref": "#/$defs/TimeOfDay"
          },
          "openDay": {
            "description": "Required. Indicates the day of the week this period starts on.",
            "enum": [
              "DAY_OF_WEEK_UNSPECIFIED",
              "MONDAY",
              "TUESDAY",
              "WEDNESDAY",
              "THURSDAY",
              "FRIDAY",
              "SATURDAY",
              "SUNDAY"
            ],
            "type": "string"
          },
          "openTime": {
            "$ref": "#/$defs/TimeOfDay"
          }
        },
        "type": "object"
      },
      "TimeOfDay": {
        "description": "Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.",
        "properties": {
          "hours": {
            "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \"24:00:00\" for scenarios like business closing time.",
            "format": "int32",
            "type": "integer"
          },
          "minutes": {
            "description": "Minutes of hour of day. Must be from 0 to 59.",
            "format": "int32",
            "type": "integer"
          },
          "nanos": {
            "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.",
            "format": "int32",
            "type": "integer"
          },
          "seconds": {
            "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "OpenInfo": {
        "description": "Information related to the opening state of the business.",
        "properties": {
          "canReopen": {
            "description": "Output only. Indicates whether this business is eligible for re-open.",
            "readOnly": true,
            "type": "boolean"
          },
          "openingDate": {
            "$ref": "#/$defs/Date"
          },
          "status": {
            "description": "Required. Indicates whether or not the Location is currently open for business. All locations are open by default, unless updated to be closed.",
            "enum": [
              "OPEN_FOR_BUSINESS_UNSPECIFIED",
              "OPEN",
              "CLOSED_PERMANENTLY",
              "CLOSED_TEMPORARILY"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "Date": {
        "description": "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp",
        "properties": {
          "day": {
            "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
            "format": "int32",
            "type": "integer"
          },
          "month": {
            "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
            "format": "int32",
            "type": "integer"
          },
          "year": {
            "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "PhoneNumbers": {
        "description": "A collection of phone numbers for the business. During updates, both fields must be set. Clients may not update just the primary or additional phone numbers using the update mask. International phone format is preferred, such as \"+1 415 555 0132\", see more in (https://developers.google.com/style/phone-numbers#international-phone-numbers).",
        "properties": {
          "additionalPhones": {
            "description": "Optional. Up to two phone numbers (mobile or landline, no fax) at which your business can be called, in addition to your primary phone number.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "primaryPhone": {
            "description": "Required. A phone number that connects to your individual business location as directly as possible. Use a local phone number instead of a central, call center helpline number whenever possible.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Profile": {
        "description": "All information pertaining to the location's profile.",
        "properties": {
          "description": {
            "description": "Required. Description of the location in your own voice, not editable by anyone else.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "BusinessHours": {
        "description": "Represents the time periods that this location is open for business. Holds a collection of TimePeriod instances.",
        "properties": {
          "periods": {
            "description": "Required. A collection of times that this location is open for business. Each period represents a range of hours when the location is open during the week.",
            "items": {
              "$ref": "#/$defs/TimePeriod"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "RelationshipData": {
        "description": "Information of all parent and children locations related to this one.",
        "properties": {
          "childrenLocations": {
            "description": "The list of children locations that this location has relations with.",
            "items": {
              "$ref": "#/$defs/RelevantLocation"
            },
            "type": "array"
          },
          "parentChain": {
            "description": "The resource name of the Chain that this location is member of. How to find Chain ID",
            "type": "string"
          },
          "parentLocation": {
            "$ref": "#/$defs/RelevantLocation"
          }
        },
        "type": "object"
      },
      "RelevantLocation": {
        "description": "Information about another location that is related to current one. The relation can be any one of DEPARTMENT_OF or INDEPENDENT_ESTABLISHMENT_OF, and the location specified here can be on either side (parent/child) of the location.",
        "properties": {
          "placeId": {
            "description": "Required. Specify the location that is on the other side of the relation by its placeID.",
            "type": "string"
          },
          "relationType": {
            "description": "Required. The type of the relationship.",
            "enum": [
              "RELATION_TYPE_UNSPECIFIED",
              "DEPARTMENT_OF",
              "INDEPENDENT_ESTABLISHMENT_IN"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServiceAreaBusiness": {
        "description": "Service area businesses provide their service at the customer's location (for example, a locksmith or plumber).",
        "properties": {
          "businessType": {
            "description": "Required. Indicates the type of the service area business.",
            "enum": [
              "BUSINESS_TYPE_UNSPECIFIED",
              "CUSTOMER_LOCATION_ONLY",
              "CUSTOMER_AND_BUSINESS_LOCATION"
            ],
            "type": "string"
          },
          "places": {
            "$ref": "#/$defs/Places"
          },
          "regionCode": {
            "description": "Immutable. CLDR region code of the country/region that this service area business is based in. See http://cldr.unicode.org/ and http://www.unicode.org/cldr/charts/30/supplemental/territory_information.html for details. Example: \"CH\" for Switzerland. This field is required for CUSTOMER_LOCATION_ONLY businesses, and is ignored otherwise. The region specified here can be different from regions for the areas that this business serves (e.g. service area businesses that provide services in regions other than the one that they are based in). If this location requires verification after creation, the address provided for verification purposes *must* be located within this region, and the business owner or their authorized representative *must* be able to receive postal mail at the provided verification address.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Places": {
        "description": "Defines the union of areas represented by a set of places.",
        "properties": {
          "placeInfos": {
            "description": "The areas represented by place IDs. Limited to a maximum of 20 places.",
            "items": {
              "$ref": "#/$defs/PlaceInfo"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PlaceInfo": {
        "description": "Defines an area that's represented by a place ID.",
        "properties": {
          "placeId": {
            "description": "Required. The ID of the place. Must correspond to a region. (https://developers.google.com/places/web-service/supported_types#table3)",
            "type": "string"
          },
          "placeName": {
            "description": "Required. The localized name of the place. For example, `Scottsdale, AZ`.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServiceItem": {
        "description": "A message that describes a single service item. It is used to describe the type of service that the merchant provides. For example, haircut can be a service.",
        "properties": {
          "freeFormServiceItem": {
            "$ref": "#/$defs/FreeFormServiceItem"
          },
          "price": {
            "$ref": "#/$defs/Money"
          },
          "structuredServiceItem": {
            "$ref": "#/$defs/StructuredServiceItem"
          }
        },
        "type": "object"
      },
      "FreeFormServiceItem": {
        "description": "Represents a free-form service offered by the merchant. These are services that are not exposed as part of our structure service data. The merchant manually enters the names for of such services via a geomerchant surface.",
        "properties": {
          "category": {
            "description": "Required. This field represents the category name (i.e. the category's stable ID). The `category` and `service_type_id` should match the possible combinations provided in the `Category` message.",
            "type": "string"
          },
          "label": {
            "$ref": "#/$defs/Label"
          }
        },
        "type": "object"
      },
      "Label": {
        "description": "Label to be used when displaying the price list, section, or item.",
        "properties": {
          "description": {
            "description": "Optional. Description of the price list, section, or item.",
            "type": "string"
          },
          "displayName": {
            "description": "Required. Display name for the price list, section, or item.",
            "type": "string"
          },
          "languageCode": {
            "description": "Optional. The BCP-47 language code that these strings apply for. Only one set of labels may be set per language.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Money": {
        "description": "Represents an amount of money with its currency type.",
        "properties": {
          "currencyCode": {
            "description": "The three-letter currency code defined in ISO 4217.",
            "type": "string"
          },
          "nanos": {
            "description": "Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.",
            "format": "int32",
            "type": "integer"
          },
          "units": {
            "description": "The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar.",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "StructuredServiceItem": {
        "description": "Represents a structured service offered by the merchant. For eg: toilet_installation.",
        "properties": {
          "description": {
            "description": "Optional. Description of structured service item. The character limit is 300.",
            "type": "string"
          },
          "serviceTypeId": {
            "description": "Required. The `service_type_id` field is a Google provided unique ID that can be found in `ServiceType`. This information is provided by `BatchGetCategories` rpc service.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SpecialHours": {
        "description": "Represents a set of time periods when a location's operational hours differ from its normal business hours.",
        "properties": {
          "specialHourPeriods": {
            "description": "Required. A list of exceptions to the business's regular hours.",
            "items": {
              "$ref": "#/$defs/SpecialHourPeriod"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "SpecialHourPeriod": {
        "description": "Represents a single time period when a location's operational hours differ from its normal business hours. A special hour period must represent a range of less than 24 hours. The `open_time` and `start_date` must predate the `close_time` and `end_date`. The `close_time` and `end_date` can extend to 11:59 a.m. on the day after the specified `start_date`. For example, the following inputs are valid: start_date=2015-11-23, open_time=08:00, close_time=18:00 start_date=2015-11-23, end_date=2015-11-23, open_time=08:00, close_time=18:00 start_date=2015-11-23, end_date=2015-11-24, open_time=13:00, close_time=11:59 The following inputs are not valid: start_date=2015-11-23, open_time=13:00, close_time=11:59 start_date=2015-11-23, end_date=2015-11-24, open_time=13:00, close_time=12:00 start_date=2015-11-23, end_date=2015-11-25, open_time=08:00, close_time=18:00",
        "properties": {
          "closeTime": {
            "$ref": "#/$defs/TimeOfDay"
          },
          "closed": {
            "description": "Optional. If true, `end_date`, `open_time`, and `close_time` are ignored, and the date specified in `start_date` is treated as the location being closed for the entire day.",
            "type": "boolean"
          },
          "endDate": {
            "$ref": "#/$defs/Date"
          },
          "openTime": {
            "$ref": "#/$defs/TimeOfDay"
          },
          "startDate": {
            "$ref": "#/$defs/Date"
          }
        },
        "type": "object"
      },
      "PostalAddress": {
        "description": "Represents a postal address, e.g. for postal delivery or payments addresses. Given a postal address, a postal service can deliver items to a premise, P.O. Box or similar. It is not intended to model geographical locations (roads, towns, mountains). In typical usage an address would be created via user input or from importing existing data, depending on the type of process. Advice on address input / editing: - Use an internationalization-ready address widget such as https://github.com/google/libaddressinput) - Users should not be presented with UI elements for input or editing of fields outside countries where that field is used. For more guidance on how to use this schema, please see: https://support.google.com/business/answer/6397478",
        "properties": {
          "addressLines": {
            "description": "Unstructured address lines describing the lower levels of an address. Because values in address_lines do not have type information and may sometimes contain multiple values in a single field (e.g. \"Austin, TX\"), it is important that the line order is clear. The order of address lines should be \"envelope order\" for the country/region of the address. In places where this can vary (e.g. Japan), address_language is used to make it explicit (e.g. \"ja\" for large-to-small ordering and \"ja-Latn\" or \"en\" for small-to-large). This way, the most specific line of an address can be selected based on the language. The minimum permitted structural representation of an address consists of a region_code with all remaining information placed in the address_lines. It would be possible to format such an address very approximately without geocoding, but no semantic reasoning could be made about any of the address components until it was at least partially resolved. Creating an address only containing a region_code and address_lines, and then geocoding is the recommended way to handle completely unstructured addresses (as opposed to guessing which parts of the address should be localities or administrative areas).",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "administrativeArea": {
            "description": "Optional. Highest administrative subdivision which is used for postal addresses of a country or region. For example, this can be a state, a province, an oblast, or a prefecture. Specifically, for Spain this is the province and not the autonomous community (e.g. \"Barcelona\" and not \"Catalonia\"). Many countries don't use an administrative area in postal addresses. E.g. in Switzerland this should be left unpopulated.",
            "type": "string"
          },
          "languageCode": {
            "description": "Optional. BCP-47 language code of the contents of this address (if known). This is often the UI language of the input form or is expected to match one of the languages used in the address' country/region, or their transliterated equivalents. This can affect formatting in certain countries, but is not critical to the correctness of the data and will never affect any validation or other non-formatting related operations. If this value is not known, it should be omitted (rather than specifying a possibly incorrect default). Examples: \"zh-Hant\", \"ja\", \"ja-Latn\", \"en\".",
            "type": "string"
          },
          "locality": {
            "description": "Optional. Generally refers to the city/town portion of the address. Examples: US city, IT comune, UK post town. In regions of the world where localities are not well defined or do not fit into this structure well, leave locality empty and use address_lines.",
            "type": "string"
          },
          "organization": {
            "description": "Optional. The name of the organization at the address.",
            "type": "string"
          },
          "postalCode": {
            "description": "Optional. Postal code of the address. Not all countries use or require postal codes to be present, but where they are used, they may trigger additional validation with other parts of the address (e.g. state/zip validation in the U.S.A.).",
            "type": "string"
          },
          "recipients": {
            "description": "Optional. The recipient at the address. This field may, under certain circumstances, contain multiline information. For example, it might contain \"care of\" information.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "regionCode": {
            "description": "Required. CLDR region code of the country/region of the address. This is never inferred and it is up to the user to ensure the value is correct. See https://cldr.unicode.org/ and https://www.unicode.org/cldr/charts/30/supplemental/territory_information.html for details. Example: \"CH\" for Switzerland.",
            "type": "string"
          },
          "revision": {
            "description": "The schema revision of the `PostalAddress`. This must be set to 0, which is the latest revision. All new revisions **must** be backward compatible with old revisions.",
            "format": "int32",
            "type": "integer"
          },
          "sortingCode": {
            "description": "Optional. Additional, country-specific, sorting code. This is not used in most regions. Where it is used, the value is either a string like \"CEDEX\", optionally followed by a number (e.g. \"CEDEX 7\"), or just a number alone, representing the \"sector code\" (Jamaica), \"delivery area indicator\" (Malawi) or \"post office indicator\" (e.g. Côte d'Ivoire).",
            "type": "string"
          },
          "sublocality": {
            "description": "Optional. Sublocality of the address. For example, this can be neighborhoods, boroughs, districts.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://mybusinessbusinessinformation.googleapis.com//v1/googleLocations:search{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Response message for GoogleLocations.SearchGoogleLocations.",
        "**Key properties:**",
        {
          "$ul": [
            "**googleLocations**: A collection of GoogleLocations that are potential matches to the specified request, listed in order from most to least accuracy."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
