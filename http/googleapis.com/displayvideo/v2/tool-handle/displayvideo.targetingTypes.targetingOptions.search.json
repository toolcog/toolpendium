{
  "name": "displayvideo_targetingTypes_targetingOptions_search",
  "description": "Searches for targeting options of a given type based on the given search terms.",
  "parameters": {
    "type": "object",
    "properties": {
      "targetingType": {
        "enum": [
          "TARGETING_TYPE_UNSPECIFIED",
          "TARGETING_TYPE_CHANNEL",
          "TARGETING_TYPE_APP_CATEGORY",
          "TARGETING_TYPE_APP",
          "TARGETING_TYPE_URL",
          "TARGETING_TYPE_DAY_AND_TIME",
          "TARGETING_TYPE_AGE_RANGE",
          "TARGETING_TYPE_REGIONAL_LOCATION_LIST",
          "TARGETING_TYPE_PROXIMITY_LOCATION_LIST",
          "TARGETING_TYPE_GENDER",
          "TARGETING_TYPE_VIDEO_PLAYER_SIZE",
          "TARGETING_TYPE_USER_REWARDED_CONTENT",
          "TARGETING_TYPE_PARENTAL_STATUS",
          "TARGETING_TYPE_CONTENT_INSTREAM_POSITION",
          "TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION",
          "TARGETING_TYPE_DEVICE_TYPE",
          "TARGETING_TYPE_AUDIENCE_GROUP",
          "TARGETING_TYPE_BROWSER",
          "TARGETING_TYPE_HOUSEHOLD_INCOME",
          "TARGETING_TYPE_ON_SCREEN_POSITION",
          "TARGETING_TYPE_THIRD_PARTY_VERIFIER",
          "TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION",
          "TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION",
          "TARGETING_TYPE_ENVIRONMENT",
          "TARGETING_TYPE_CARRIER_AND_ISP",
          "TARGETING_TYPE_OPERATING_SYSTEM",
          "TARGETING_TYPE_DEVICE_MAKE_MODEL",
          "TARGETING_TYPE_KEYWORD",
          "TARGETING_TYPE_NEGATIVE_KEYWORD_LIST",
          "TARGETING_TYPE_VIEWABILITY",
          "TARGETING_TYPE_CATEGORY",
          "TARGETING_TYPE_INVENTORY_SOURCE",
          "TARGETING_TYPE_LANGUAGE",
          "TARGETING_TYPE_AUTHORIZED_SELLER_STATUS",
          "TARGETING_TYPE_GEO_REGION",
          "TARGETING_TYPE_INVENTORY_SOURCE_GROUP",
          "TARGETING_TYPE_EXCHANGE",
          "TARGETING_TYPE_SUB_EXCHANGE",
          "TARGETING_TYPE_POI",
          "TARGETING_TYPE_BUSINESS_CHAIN",
          "TARGETING_TYPE_CONTENT_DURATION",
          "TARGETING_TYPE_CONTENT_STREAM_TYPE",
          "TARGETING_TYPE_NATIVE_CONTENT_POSITION",
          "TARGETING_TYPE_OMID",
          "TARGETING_TYPE_AUDIO_CONTENT_TYPE",
          "TARGETING_TYPE_CONTENT_GENRE",
          "TARGETING_TYPE_YOUTUBE_VIDEO",
          "TARGETING_TYPE_YOUTUBE_CHANNEL",
          "TARGETING_TYPE_SESSION_POSITION"
        ],
        "type": "string",
        "description": "Required. The type of targeting options to retrieve. Accepted values are: * `TARGETING_TYPE_GEO_REGION` * `TARGETING_TYPE_POI` * `TARGETING_TYPE_BUSINESS_CHAIN`"
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/SearchTargetingOptionsRequest"
      }
    },
    "required": [
      "targetingType"
    ],
    "$defs": {
      "SearchTargetingOptionsRequest": {
        "description": "Request message for SearchTargetingOptions.",
        "properties": {
          "advertiserId": {
            "description": "Required. The Advertiser this request is being made in the context of.",
            "format": "int64",
            "type": "string"
          },
          "businessChainSearchTerms": {
            "$ref": "#/$defs/BusinessChainSearchTerms"
          },
          "geoRegionSearchTerms": {
            "$ref": "#/$defs/GeoRegionSearchTerms"
          },
          "pageSize": {
            "description": "Requested page size. Must be between `1` and `200`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.",
            "format": "int32",
            "type": "integer"
          },
          "pageToken": {
            "description": "A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `SearchTargetingOptions` method. If not specified, the first page of results will be returned.",
            "type": "string"
          },
          "poiSearchTerms": {
            "$ref": "#/$defs/PoiSearchTerms"
          }
        },
        "type": "object"
      },
      "BusinessChainSearchTerms": {
        "description": "Search terms for Business Chain targeting options. At least one of the field should be populated.",
        "properties": {
          "businessChainQuery": {
            "description": "The search query for the desired business chain. The query must be the full name of the business, e.g. \"KFC\", \"mercedes-benz\".",
            "type": "string"
          },
          "regionQuery": {
            "description": "The search query for the desired geo region, e.g. \"Seattle\", \"United State\".",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GeoRegionSearchTerms": {
        "description": "Search terms for geo region targeting options.",
        "properties": {
          "geoRegionQuery": {
            "description": "The search query for the desired geo region. The query can be a prefix, e.g. \"New Yor\", \"Seattle\", \"USA\", etc.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PoiSearchTerms": {
        "description": "Search terms for POI targeting options.",
        "properties": {
          "poiQuery": {
            "description": "The search query for the desired POI name, street address, or coordinate of the desired POI. The query can be a prefix, e.g. \"Times squar\", \"40.7505045,-73.99562\", \"315 W 44th St\", etc.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://displayvideo.googleapis.com//v2/targetingTypes/{targetingType}/targetingOptions:search{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Response message for SearchTargetingOptions.",
        "**Key properties:**",
        {
          "$ul": [
            "**nextPageToken**: A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `SearchTargetingOptions` method to retrieve the next page of results.",
            "**targetingOptions**: The list of targeting options that match the search criteria. This list will be absent if empty."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
