{
  "name": "displayvideo_advertisers_campaigns_create",
  "description": "Creates a new campaign. Returns the newly created campaign if successful.",
  "parameters": {
    "type": "object",
    "properties": {
      "advertiserId": {
        "type": "string",
        "description": "Output only. The unique ID of the advertiser the campaign belongs to."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/Campaign"
      }
    },
    "required": [
      "advertiserId"
    ],
    "$defs": {
      "Campaign": {
        "description": "A single campaign.",
        "properties": {
          "advertiserId": {
            "description": "Output only. The unique ID of the advertiser the campaign belongs to.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "campaignBudgets": {
            "description": "The list of budgets available to this campaign. If this field is not set, the campaign uses an unlimited budget.",
            "items": {
              "$ref": "#/$defs/CampaignBudget"
            },
            "type": "array"
          },
          "campaignFlight": {
            "$ref": "#/$defs/CampaignFlight"
          },
          "campaignGoal": {
            "$ref": "#/$defs/CampaignGoal"
          },
          "campaignId": {
            "description": "Output only. The unique ID of the campaign. Assigned by the system.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "Required. The display name of the campaign. Must be UTF-8 encoded with a maximum size of 240 bytes.",
            "type": "string"
          },
          "entityStatus": {
            "description": "Required. Controls whether or not the insertion orders under this campaign can spend their budgets and bid on inventory. * Accepted values are `ENTITY_STATUS_ACTIVE`, `ENTITY_STATUS_ARCHIVED`, and `ENTITY_STATUS_PAUSED`. * For CreateCampaign method, `ENTITY_STATUS_ARCHIVED` is not allowed.",
            "enum": [
              "ENTITY_STATUS_UNSPECIFIED",
              "ENTITY_STATUS_ACTIVE",
              "ENTITY_STATUS_ARCHIVED",
              "ENTITY_STATUS_DRAFT",
              "ENTITY_STATUS_PAUSED",
              "ENTITY_STATUS_SCHEDULED_FOR_DELETION"
            ],
            "type": "string"
          },
          "frequencyCap": {
            "$ref": "#/$defs/FrequencyCap"
          },
          "name": {
            "description": "Output only. The resource name of the campaign.",
            "readOnly": true,
            "type": "string"
          },
          "updateTime": {
            "description": "Output only. The timestamp when the campaign was last updated. Assigned by the system.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "CampaignBudget": {
        "description": "Settings that control how the campaign budget is allocated.",
        "properties": {
          "budgetAmountMicros": {
            "description": "Required. The total amount the linked insertion order segments can budget. The amount is in micros. Must be greater than 0. For example, 500000000 represents 500 standard units of the currency.",
            "format": "int64",
            "type": "string"
          },
          "budgetId": {
            "description": "The unique ID of the campaign budget. Assigned by the system. Do not set for new budgets. Must be included when updating or adding budgets to campaign_budgets. Otherwise, a new ID will be generated and assigned.",
            "format": "int64",
            "type": "string"
          },
          "budgetUnit": {
            "description": "Required. Immutable. Specifies whether the budget is measured in currency or impressions.",
            "enum": [
              "BUDGET_UNIT_UNSPECIFIED",
              "BUDGET_UNIT_CURRENCY",
              "BUDGET_UNIT_IMPRESSIONS"
            ],
            "type": "string"
          },
          "dateRange": {
            "$ref": "#/$defs/DateRange"
          },
          "displayName": {
            "description": "Required. The display name of the budget. Must be UTF-8 encoded with a maximum size of 240 bytes.",
            "type": "string"
          },
          "externalBudgetId": {
            "description": "Immutable. The ID identifying this budget to the external source. If this field is set and the invoice detail level of the corresponding billing profile is set to \"Budget level PO\", all impressions served against this budget will include this ID on the invoice. Must be unique under the campaign.",
            "type": "string"
          },
          "externalBudgetSource": {
            "description": "Required. The external source of the budget.",
            "enum": [
              "EXTERNAL_BUDGET_SOURCE_UNSPECIFIED",
              "EXTERNAL_BUDGET_SOURCE_NONE",
              "EXTERNAL_BUDGET_SOURCE_MEDIA_OCEAN"
            ],
            "type": "string"
          },
          "invoiceGroupingId": {
            "description": "Immutable. The ID used to group budgets to be included the same invoice. If this field is set and the invoice level of the corresponding billing profile is set to \"Budget invoice grouping ID\", all external_budget_id sharing the same invoice_grouping_id will be grouped in the same invoice.",
            "type": "string"
          },
          "prismaConfig": {
            "$ref": "#/$defs/PrismaConfig"
          }
        },
        "type": "object"
      },
      "DateRange": {
        "description": "A date range.",
        "properties": {
          "endDate": {
            "$ref": "#/$defs/Date"
          },
          "startDate": {
            "$ref": "#/$defs/Date"
          }
        },
        "type": "object"
      },
      "Date": {
        "description": "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp",
        "properties": {
          "day": {
            "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
            "format": "int32",
            "type": "integer"
          },
          "month": {
            "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
            "format": "int32",
            "type": "integer"
          },
          "year": {
            "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "PrismaConfig": {
        "description": "Settings specific to the Mediaocean Prisma tool.",
        "properties": {
          "prismaCpeCode": {
            "$ref": "#/$defs/PrismaCpeCode"
          },
          "prismaType": {
            "description": "Required. The Prisma type.",
            "enum": [
              "PRISMA_TYPE_UNSPECIFIED",
              "PRISMA_TYPE_DISPLAY",
              "PRISMA_TYPE_SEARCH",
              "PRISMA_TYPE_VIDEO",
              "PRISMA_TYPE_AUDIO",
              "PRISMA_TYPE_SOCIAL",
              "PRISMA_TYPE_FEE"
            ],
            "type": "string"
          },
          "supplier": {
            "description": "Required. The entity allocated this budget (DSP, site, etc.).",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PrismaCpeCode": {
        "description": "Google Payments Center supports searching and filtering on the component fields of this code.",
        "properties": {
          "prismaClientCode": {
            "description": "The Prisma client code.",
            "type": "string"
          },
          "prismaEstimateCode": {
            "description": "The Prisma estimate code.",
            "type": "string"
          },
          "prismaProductCode": {
            "description": "The Prisma product code.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CampaignFlight": {
        "description": "Settings that track the planned spend and duration of a campaign.",
        "properties": {
          "plannedDates": {
            "$ref": "#/$defs/DateRange"
          },
          "plannedSpendAmountMicros": {
            "description": "The amount the campaign is expected to spend for its given planned_dates. This will not limit serving, but will be used for tracking spend in the DV360 UI. The amount is in micros. Must be greater than or equal to 0. For example, 500000000 represents 500 standard units of the currency.",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CampaignGoal": {
        "description": "Settings that control the goal of a campaign.",
        "properties": {
          "campaignGoalType": {
            "description": "Required. The type of the campaign goal.",
            "enum": [
              "CAMPAIGN_GOAL_TYPE_UNSPECIFIED",
              "CAMPAIGN_GOAL_TYPE_APP_INSTALL",
              "CAMPAIGN_GOAL_TYPE_BRAND_AWARENESS",
              "CAMPAIGN_GOAL_TYPE_OFFLINE_ACTION",
              "CAMPAIGN_GOAL_TYPE_ONLINE_ACTION"
            ],
            "type": "string"
          },
          "performanceGoal": {
            "$ref": "#/$defs/PerformanceGoal"
          }
        },
        "type": "object"
      },
      "PerformanceGoal": {
        "description": "Settings that control the performance goal of a campaign.",
        "properties": {
          "performanceGoalAmountMicros": {
            "description": "The goal amount, in micros of the advertiser's currency. Applicable when performance_goal_type is one of: * `PERFORMANCE_GOAL_TYPE_CPM` * `PERFORMANCE_GOAL_TYPE_CPC` * `PERFORMANCE_GOAL_TYPE_CPA` * `PERFORMANCE_GOAL_TYPE_CPIAVC` * `PERFORMANCE_GOAL_TYPE_VCPM` For example 1500000 represents 1.5 standard units of the currency.",
            "format": "int64",
            "type": "string"
          },
          "performanceGoalPercentageMicros": {
            "description": "The decimal representation of the goal percentage in micros. Applicable when performance_goal_type is one of: * `PERFORMANCE_GOAL_TYPE_CTR` * `PERFORMANCE_GOAL_TYPE_VIEWABILITY` * `PERFORMANCE_GOAL_TYPE_CLICK_CVR` * `PERFORMANCE_GOAL_TYPE_IMPRESSION_CVR` * `PERFORMANCE_GOAL_TYPE_VTR` * `PERFORMANCE_GOAL_TYPE_AUDIO_COMPLETION_RATE` * `PERFORMANCE_GOAL_TYPE_VIDEO_COMPLETION_RATE` For example, 70000 represents 7% (decimal 0.07).",
            "format": "int64",
            "type": "string"
          },
          "performanceGoalString": {
            "description": "A key performance indicator (KPI) string, which can be empty. Must be UTF-8 encoded with a length of no more than 100 characters. Applicable when performance_goal_type is set to `PERFORMANCE_GOAL_TYPE_OTHER`.",
            "type": "string"
          },
          "performanceGoalType": {
            "description": "Required. The type of the performance goal.",
            "enum": [
              "PERFORMANCE_GOAL_TYPE_UNSPECIFIED",
              "PERFORMANCE_GOAL_TYPE_CPM",
              "PERFORMANCE_GOAL_TYPE_CPC",
              "PERFORMANCE_GOAL_TYPE_CPA",
              "PERFORMANCE_GOAL_TYPE_CTR",
              "PERFORMANCE_GOAL_TYPE_VIEWABILITY",
              "PERFORMANCE_GOAL_TYPE_CPIAVC",
              "PERFORMANCE_GOAL_TYPE_CPE",
              "PERFORMANCE_GOAL_TYPE_CLICK_CVR",
              "PERFORMANCE_GOAL_TYPE_IMPRESSION_CVR",
              "PERFORMANCE_GOAL_TYPE_VCPM",
              "PERFORMANCE_GOAL_TYPE_VTR",
              "PERFORMANCE_GOAL_TYPE_AUDIO_COMPLETION_RATE",
              "PERFORMANCE_GOAL_TYPE_VIDEO_COMPLETION_RATE",
              "PERFORMANCE_GOAL_TYPE_OTHER"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "FrequencyCap": {
        "description": "Settings that control the number of times a user may be shown with the same ad during a given time period.",
        "properties": {
          "maxImpressions": {
            "description": "The maximum number of times a user may be shown the same ad during this period. Must be greater than 0. Required when unlimited is `false` and max_views is not set.",
            "format": "int32",
            "type": "integer"
          },
          "maxViews": {
            "description": "Optional. The maximum number of times a user may click-through or fully view an ad during this period until it is no longer served to them. Must be greater than 0. Only applicable to YouTube and Partners resources. Required when unlimited is `false` and max_impressions is not set.",
            "format": "int32",
            "type": "integer"
          },
          "timeUnit": {
            "description": "The time unit in which the frequency cap will be applied. Required when unlimited is `false`.",
            "enum": [
              "TIME_UNIT_UNSPECIFIED",
              "TIME_UNIT_LIFETIME",
              "TIME_UNIT_MONTHS",
              "TIME_UNIT_WEEKS",
              "TIME_UNIT_DAYS",
              "TIME_UNIT_HOURS",
              "TIME_UNIT_MINUTES"
            ],
            "type": "string"
          },
          "timeUnitCount": {
            "description": "The number of time_unit the frequency cap will last. Required when unlimited is `false`. The following restrictions apply based on the value of time_unit: * `TIME_UNIT_LIFETIME` - this field is output only and will default to 1 * `TIME_UNIT_MONTHS` - must be between 1 and 2 * `TIME_UNIT_WEEKS` - must be between 1 and 4 * `TIME_UNIT_DAYS` - must be between 1 and 6 * `TIME_UNIT_HOURS` - must be between 1 and 23 * `TIME_UNIT_MINUTES` - must be between 1 and 59",
            "format": "int32",
            "type": "integer"
          },
          "unlimited": {
            "description": "Whether unlimited frequency capping is applied. When this field is set to `true`, the remaining frequency cap fields are not applicable.",
            "type": "boolean"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://displayvideo.googleapis.com//v3/advertisers/{advertiserId}/campaigns{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A single campaign.",
        "**Key properties:**",
        {
          "$ul": [
            "**advertiserId**: Output only. The unique ID of the advertiser the campaign belongs to.",
            "**campaignBudgets**: The list of budgets available to this campaign. If this field is not set, the campaign uses an unlimited budget.",
            [
              "**campaignFlight**: Settings that track the planned spend and duration of a campaign.",
              {
                "$ul": [
                  [
                    "**plannedDates**: A date range.",
                    {
                      "$ul": [
                        [
                          "**endDate**: Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp",
                          {
                            "$ul": [
                              "**day**: Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
                              "**month**: Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
                              "**year**: Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year."
                            ]
                          }
                        ],
                        [
                          "**startDate**: Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp",
                          {
                            "$ul": [
                              "**day**: Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
                              "**month**: Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
                              "**year**: Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year."
                            ]
                          }
                        ]
                      ]
                    }
                  ],
                  "**plannedSpendAmountMicros**: The amount the campaign is expected to spend for its given planned_dates. This will not limit serving, but will be used for tracking spend in the DV360 UI. The amount is in micros. Must be greater than or equal to 0. For example, 500000000 represents 500 standard units of the currency."
                ]
              }
            ],
            [
              "**campaignGoal**: Settings that control the goal of a campaign.",
              {
                "$ul": [
                  "**campaignGoalType**: Required. The type of the campaign goal.",
                  [
                    "**performanceGoal**: Settings that control the performance goal of a campaign.",
                    {
                      "$ul": [
                        "**performanceGoalAmountMicros**: The goal amount, in micros of the advertiser's currency. Applicable when performance_goal_type is one of: * `PERFORMANCE_GOAL_TYPE_CPM` * `PERFORMANCE_GOAL_TYPE_CPC` * `PERFORMANCE_GOAL_TYPE_CPA` * `PERFORMANCE_GOAL_TYPE_CPIAVC` * `PERFORMANCE_GOAL_TYPE_VCPM` For example 1500000 represents 1.5 standard units of the currency.",
                        "**performanceGoalPercentageMicros**: The decimal representation of the goal percentage in micros. Applicable when performance_goal_type is one of: * `PERFORMANCE_GOAL_TYPE_CTR` * `PERFORMANCE_GOAL_TYPE_VIEWABILITY` * `PERFORMANCE_GOAL_TYPE_CLICK_CVR` * `PERFORMANCE_GOAL_TYPE_IMPRESSION_CVR` * `PERFORMANCE_GOAL_TYPE_VTR` * `PERFORMANCE_GOAL_TYPE_AUDIO_COMPLETION_RATE` * `PERFORMANCE_GOAL_TYPE_VIDEO_COMPLETION_RATE` For example, 70000 represents 7% (decimal 0.07).",
                        "**performanceGoalString**: A key performance indicator (KPI) string, which can be empty. Must be UTF-8 encoded with a length of no more than 100 characters. Applicable when performance_goal_type is set to `PERFORMANCE_GOAL_TYPE_OTHER`.",
                        "**performanceGoalType**: Required. The type of the performance goal."
                      ]
                    }
                  ]
                ]
              }
            ],
            "**campaignId**: Output only. The unique ID of the campaign. Assigned by the system.",
            "**displayName**: Required. The display name of the campaign. Must be UTF-8 encoded with a maximum size of 240 bytes.",
            "**entityStatus**: Required. Controls whether or not the insertion orders under this campaign can spend their budgets and bid on inventory. * Accepted values are `ENTITY_STATUS_ACTIVE`, `ENTITY_STATUS_ARCHIVED`, and `ENTITY_STATUS_PAUSED`. * For CreateCampaign method, `ENTITY_STATUS_ARCHIVED` is not allowed.",
            [
              "**frequencyCap**: Settings that control the number of times a user may be shown with the same ad during a given time period.",
              {
                "$ul": [
                  "**maxImpressions**: The maximum number of times a user may be shown the same ad during this period. Must be greater than 0. Required when unlimited is `false` and max_views is not set.",
                  "**maxViews**: Optional. The maximum number of times a user may click-through or fully view an ad during this period until it is no longer served to them. Must be greater than 0. Only applicable to YouTube and Partners resources. Required when unlimited is `false` and max_impressions is not set.",
                  "**timeUnit**: The time unit in which the frequency cap will be applied. Required when unlimited is `false`.",
                  "**timeUnitCount**: The number of time_unit the frequency cap will last. Required when unlimited is `false`. The following restrictions apply based on the value of time_unit: * `TIME_UNIT_LIFETIME` - this field is output only and will default to 1 * `TIME_UNIT_MONTHS` - must be between 1 and 2 * `TIME_UNIT_WEEKS` - must be between 1 and 4 * `TIME_UNIT_DAYS` - must be between 1 and 6 * `TIME_UNIT_HOURS` - must be between 1 and 23 * `TIME_UNIT_MINUTES` - must be between 1 and 59",
                  "**unlimited**: Whether unlimited frequency capping is applied. When this field is set to `true`, the remaining frequency cap fields are not applicable."
                ]
              }
            ],
            "**name**: Output only. The resource name of the campaign.",
            "**updateTime**: Output only. The timestamp when the campaign was last updated. Assigned by the system."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
