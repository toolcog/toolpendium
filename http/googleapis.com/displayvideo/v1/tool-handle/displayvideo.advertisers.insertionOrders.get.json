{
  "name": "displayvideo_advertisers_insertionOrders_get",
  "description": "Gets an insertion order. Returns error code `NOT_FOUND` if the insertion order does not exist.",
  "parameters": {
    "type": "object",
    "properties": {
      "advertiserId": {
        "type": "string",
        "description": "Required. The ID of the advertiser this insertion order belongs to."
      },
      "insertionOrderId": {
        "type": "string",
        "description": "Required. The ID of the insertion order to fetch."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      }
    },
    "required": [
      "advertiserId",
      "insertionOrderId"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://displayvideo.googleapis.com//v1/advertisers/{advertiserId}/insertionOrders/{insertionOrderId}{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A single insertion order.",
        "**Key properties:**",
        {
          "$ul": [
            "**advertiserId**: Output only. The unique ID of the advertiser the insertion order belongs to.",
            [
              "**bidStrategy**: Settings that control the bid strategy. Bid strategy determines the bid price.",
              {
                "$ul": [
                  [
                    "**fixedBid**: A strategy that uses a fixed bidding price.",
                    {
                      "$ul": [
                        "**bidAmountMicros**: The fixed bid amount, in micros of the advertiser's currency. For insertion order entity, bid_amount_micros should be set as 0. For line item entity, bid_amount_micros must be greater than or equal to billable unit of the given currency and smaller than or equal to the upper limit 1000000000. For example, 1500000 represents 1.5 standard units of the currency."
                      ]
                    }
                  ],
                  [
                    "**maximizeSpendAutoBid**: A strategy that automatically adjusts the bid to optimize a specified performance goal while spending the full budget.",
                    {
                      "$ul": [
                        "**customBiddingAlgorithmId**: The ID of the Custom Bidding Algorithm used by this strategy. Only applicable when performance_goal_type is set to `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CUSTOM_ALGO`.",
                        "**maxAverageCpmBidAmountMicros**: The maximum average CPM that may be bid, in micros of the advertiser's currency. Must be greater than or equal to a billable unit of the given currency. For example, 1500000 represents 1.5 standard units of the currency.",
                        "**performanceGoalType**: Required. The type of the performance goal that the bidding strategy tries to minimize while spending the full budget. `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_VIEWABLE_CPM` is not supported for this strategy.",
                        "**raiseBidForDeals**: Whether the strategy takes deal floor prices into account."
                      ]
                    }
                  ],
                  [
                    "**performanceGoalAutoBid**: A strategy that automatically adjusts the bid to meet or beat a specified performance goal.",
                    {
                      "$ul": [
                        "**customBiddingAlgorithmId**: The ID of the Custom Bidding Algorithm used by this strategy. Only applicable when performance_goal_type is set to `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CUSTOM_ALGO`.",
                        "**maxAverageCpmBidAmountMicros**: The maximum average CPM that may be bid, in micros of the advertiser's currency. Must be greater than or equal to a billable unit of the given currency. Not applicable when performance_goal_type is set to `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_VIEWABLE_CPM`. For example, 1500000 represents 1.5 standard units of the currency.",
                        "**performanceGoalAmountMicros**: Required. The performance goal the bidding strategy will attempt to meet or beat, in micros of the advertiser's currency or in micro of the ROAS (Return On Advertising Spend) value which is also based on advertiser's currency. Must be greater than or equal to a billable unit of the given currency and smaller or equal to upper bounds. Each performance_goal_type has its upper bound: * when performance_goal_type is `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPA`, upper bound is 10000.00 USD. * when performance_goal_type is `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPC`, upper bound is 1000.00 USD. * when performance_goal_type is `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_VIEWABLE_CPM`, upper bound is 1000.00 USD. * when performance_goal_type is `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CUSTOM_ALGO`, upper bound is 1000.00 and lower bound is 0.01. Example: If set to `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_VIEWABLE_CPM`, the bid price will be based on the probability that each available impression will be viewable. For example, if viewable CPM target is $2 and an impression is 40% likely to be viewable, the bid price will be $0.80 CPM (40% of $2). For example, 1500000 represents 1.5 standard units of the currency or ROAS value.",
                        "**performanceGoalType**: Required. The type of the performance goal that the bidding strategy will try to meet or beat. For line item level usage, the value must be one of: * `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPA` * `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPC` * `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_VIEWABLE_CPM` * `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CUSTOM_ALGO`."
                      ]
                    }
                  ]
                ]
              }
            ],
            "**billableOutcome**: Immutable. The billable outcome of the insertion order. Outcome based buying is deprecated. `BILLABLE_OUTCOME_PAY_PER_IMPRESSION` is the only valid value.",
            [
              "**budget**: Settings that control how insertion order budget is allocated.",
              {
                "$ul": [
                  "**automationType**: The type of automation used to manage bid and budget for the insertion order. If this field is unspecified in creation, the value defaults to `INSERTION_ORDER_AUTOMATION_TYPE_NONE`.",
                  "**budgetSegments**: Required. The list of budget segments. Use a budget segment to specify a specific budget for a given period of time an insertion order is running.",
                  "**budgetUnit**: Required. Immutable. The budget unit specifies whether the budget is currency based or impression based."
                ]
              }
            ],
            "**campaignId**: Required. Immutable. The unique ID of the campaign that the insertion order belongs to.",
            "**displayName**: Required. The display name of the insertion order. Must be UTF-8 encoded with a maximum size of 240 bytes.",
            "**entityStatus**: Required. Controls whether or not the insertion order can spend its budget and bid on inventory. * For CreateInsertionOrder method, only `ENTITY_STATUS_DRAFT` is allowed. To activate an insertion order, use UpdateInsertionOrder method and update the status to `ENTITY_STATUS_ACTIVE` after creation. * An insertion order cannot be changed back to `ENTITY_STATUS_DRAFT` status from any other status. * An insertion order cannot be set to `ENTITY_STATUS_ACTIVE` if its parent campaign is not active.",
            [
              "**frequencyCap**: Settings that control the number of times a user may be shown with the same ad during a given time period.",
              {
                "$ul": [
                  "**maxImpressions**: The maximum number of times a user may be shown the same ad during this period. Must be greater than 0. Required when unlimited is `false` and max_views is not set.",
                  "**timeUnit**: The time unit in which the frequency cap will be applied. Required when unlimited is `false`.",
                  "**timeUnitCount**: The number of time_unit the frequency cap will last. Required when unlimited is `false`. The following restrictions apply based on the value of time_unit: * `TIME_UNIT_LIFETIME` - this field is output only and will default to 1 * `TIME_UNIT_MONTHS` - must be between 1 and 2 * `TIME_UNIT_WEEKS` - must be between 1 and 4 * `TIME_UNIT_DAYS` - must be between 1 and 6 * `TIME_UNIT_HOURS` - must be between 1 and 23 * `TIME_UNIT_MINUTES` - must be between 1 and 59",
                  "**unlimited**: Whether unlimited frequency capping is applied. When this field is set to `true`, the remaining frequency cap fields are not applicable."
                ]
              }
            ],
            "**insertionOrderId**: Output only. The unique ID of the insertion order. Assigned by the system.",
            "**insertionOrderType**: The type of insertion order. If this field is unspecified in creation, the value defaults to `RTB`.",
            [
              "**integrationDetails**: Integration details of an entry.",
              {
                "$ul": [
                  "**details**: Additional details of the entry in string format. Must be UTF-8 encoded with a length of no more than 1000 characters.",
                  "**integrationCode**: An external identifier to be associated with the entry. The integration code will show up together with the entry in many places in the system, for example, reporting. Must be UTF-8 encoded with a length of no more than 500 characters."
                ]
              }
            ],
            "**name**: Output only. The resource name of the insertion order.",
            [
              "**pacing**: Settings that control the rate at which a budget is spent.",
              {
                "$ul": [
                  "**dailyMaxImpressions**: Maximum number of impressions to serve every day. Applicable when the budget is impression based. Must be greater than 0.",
                  "**dailyMaxMicros**: Maximum currency amount to spend every day in micros of advertiser's currency. Applicable when the budget is currency based. Must be greater than 0. For example, for 1.5 standard unit of the currency, set this field to 1500000. The value assigned will be rounded to whole billable units for the relevant currency by the following rules: any positive value less than a single billable unit will be rounded up to one billable unit and any value larger than a single billable unit will be rounded down to the nearest billable value. For example, if the currency's billable unit is 0.01, and this field is set to 10257770, it will round down to 10250000, a value of 10.25. If set to 505, it will round up to 10000, a value of 0.01.",
                  "**pacingPeriod**: Required. The time period in which the pacing budget will be spent. When automatic budget allocation is enabled at the insertion order via automationType, this field is output only and defaults to `PACING_PERIOD_FLIGHT`.",
                  "**pacingType**: Required. The type of pacing that defines how the budget amount will be spent across the pacing_period."
                ]
              }
            ],
            "**partnerCosts**: The partner costs associated with the insertion order. If absent or empty in CreateInsertionOrder method, the newly created insertion order will inherit partner costs from the partner settings.",
            [
              "**performanceGoal**: Settings that control the performance goal of a campaign.",
              {
                "$ul": [
                  "**performanceGoalAmountMicros**: The goal amount, in micros of the advertiser's currency. Applicable when performance_goal_type is one of: * `PERFORMANCE_GOAL_TYPE_CPM` * `PERFORMANCE_GOAL_TYPE_CPC` * `PERFORMANCE_GOAL_TYPE_CPA` * `PERFORMANCE_GOAL_TYPE_CPIAVC` * `PERFORMANCE_GOAL_TYPE_VCPM` For example 1500000 represents 1.5 standard units of the currency.",
                  "**performanceGoalPercentageMicros**: The decimal representation of the goal percentage in micros. Applicable when performance_goal_type is one of: * `PERFORMANCE_GOAL_TYPE_CTR` * `PERFORMANCE_GOAL_TYPE_VIEWABILITY` * `PERFORMANCE_GOAL_TYPE_CLICK_CVR` * `PERFORMANCE_GOAL_TYPE_IMPRESSION_CVR` * `PERFORMANCE_GOAL_TYPE_VTR` * `PERFORMANCE_GOAL_TYPE_AUDIO_COMPLETION_RATE` * `PERFORMANCE_GOAL_TYPE_VIDEO_COMPLETION_RATE` For example, 70000 represents 7% (decimal 0.07).",
                  "**performanceGoalString**: A key performance indicator (KPI) string, which can be empty. Must be UTF-8 encoded with a length of no more than 100 characters. Applicable when performance_goal_type is set to `PERFORMANCE_GOAL_TYPE_OTHER`.",
                  "**performanceGoalType**: Required. The type of the performance goal."
                ]
              }
            ],
            "**reservationType**: Output only. The reservation type of the insertion order.",
            "**updateTime**: Output only. The timestamp when the insertion order was last updated. Assigned by the system."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
