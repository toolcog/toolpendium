{
  "name": "gmail_users_settings_cse_keypairs_create",
  "description": "Creates and uploads a client-side encryption S/MIME public key certificate chain and private key metadata for the authenticated user.",
  "parameters": {
    "type": "object",
    "properties": {
      "userId": {
        "type": "string",
        "description": "The requester's primary email address. To indicate the authenticated user, you can use the special value `me`."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/CseKeyPair"
      }
    },
    "required": [
      "userId"
    ],
    "$defs": {
      "CseKeyPair": {
        "description": "A client-side encryption S/MIME key pair, which is comprised of a public key, its certificate chain, and metadata for its paired private key. Gmail uses the key pair to complete the following tasks: - Sign outgoing client-side encrypted messages. - Save and reopen drafts of client-side encrypted messages. - Save and reopen sent messages. - Decrypt incoming or archived S/MIME messages.",
        "properties": {
          "disableTime": {
            "description": "Output only. If a key pair is set to `DISABLED`, the time that the key pair's state changed from `ENABLED` to `DISABLED`. This field is present only when the key pair is in state `DISABLED`.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "enablementState": {
            "description": "Output only. The current state of the key pair.",
            "enum": [
              "stateUnspecified",
              "enabled",
              "disabled"
            ],
            "readOnly": true,
            "type": "string"
          },
          "keyPairId": {
            "description": "Output only. The immutable ID for the client-side encryption S/MIME key pair.",
            "readOnly": true,
            "type": "string"
          },
          "pem": {
            "description": "Output only. The public key and its certificate chain, in [PEM](https://en.wikipedia.org/wiki/Privacy-Enhanced_Mail) format.",
            "readOnly": true,
            "type": "string"
          },
          "pkcs7": {
            "description": "Input only. The public key and its certificate chain. The chain must be in [PKCS#7](https://en.wikipedia.org/wiki/PKCS_7) format and use PEM encoding and ASCII armor.",
            "type": "string"
          },
          "privateKeyMetadata": {
            "description": "Metadata for instances of this key pair's private key.",
            "items": {
              "$ref": "#/$defs/CsePrivateKeyMetadata"
            },
            "type": "array"
          },
          "subjectEmailAddresses": {
            "description": "Output only. The email address identities that are specified on the leaf certificate.",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "CsePrivateKeyMetadata": {
        "description": "Metadata for a private key instance.",
        "properties": {
          "hardwareKeyMetadata": {
            "$ref": "#/$defs/HardwareKeyMetadata"
          },
          "kaclsKeyMetadata": {
            "$ref": "#/$defs/KaclsKeyMetadata"
          },
          "privateKeyMetadataId": {
            "description": "Output only. The immutable ID for the private key metadata instance.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "HardwareKeyMetadata": {
        "description": "Metadata for hardware keys.",
        "properties": {
          "description": {
            "description": "Description about the hardware key.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "KaclsKeyMetadata": {
        "description": "Metadata for private keys managed by an external key access control list service. For details about managing key access, see [Google Workspace CSE API Reference](https://developers.google.com/workspace/cse/reference).",
        "properties": {
          "kaclsData": {
            "description": "Opaque data generated and used by the key access control list service. Maximum size: 8 KiB.",
            "type": "string"
          },
          "kaclsUri": {
            "description": "The URI of the key access control list service that manages the private key.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://gmail.googleapis.com//gmail/v1/users/{userId}/settings/cse/keypairs{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A client-side encryption S/MIME key pair, which is comprised of a public key, its certificate chain, and metadata for its paired private key. Gmail uses the key pair to complete the following tasks: - Sign outgoing client-side encrypted messages. - Save and reopen drafts of client-side encrypted messages. - Save and reopen sent messages. - Decrypt incoming or archived S/MIME messages.",
        "**Key properties:**",
        {
          "$ul": [
            "**disableTime**: Output only. If a key pair is set to `DISABLED`, the time that the key pair's state changed from `ENABLED` to `DISABLED`. This field is present only when the key pair is in state `DISABLED`.",
            "**enablementState**: Output only. The current state of the key pair.",
            "**keyPairId**: Output only. The immutable ID for the client-side encryption S/MIME key pair.",
            "**pem**: Output only. The public key and its certificate chain, in [PEM](https://en.wikipedia.org/wiki/Privacy-Enhanced_Mail) format.",
            "**pkcs7**: Input only. The public key and its certificate chain. The chain must be in [PKCS#7](https://en.wikipedia.org/wiki/PKCS_7) format and use PEM encoding and ASCII armor.",
            "**privateKeyMetadata**: Metadata for instances of this key pair's private key.",
            "**subjectEmailAddresses**: Output only. The email address identities that are specified on the leaf certificate."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
