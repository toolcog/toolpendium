{
  "name": "gmail_users_settings_sendAs_smimeInfo_insert",
  "description": "Insert (upload) the given S/MIME config for the specified send-as alias. Note that pkcs12 format is required for the key.",
  "parameters": {
    "type": "object",
    "properties": {
      "userId": {
        "type": "string",
        "description": "The user's email address. The special value `me` can be used to indicate the authenticated user."
      },
      "sendAsEmail": {
        "type": "string",
        "description": "The email address that appears in the \"From:\" header for mail sent using this alias."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/SmimeInfo"
      }
    },
    "required": [
      "userId",
      "sendAsEmail"
    ],
    "$defs": {
      "SmimeInfo": {
        "description": "An S/MIME email config.",
        "properties": {
          "encryptedKeyPassword": {
            "description": "Encrypted key password, when key is encrypted.",
            "type": "string"
          },
          "expiration": {
            "description": "When the certificate expires (in milliseconds since epoch).",
            "format": "int64",
            "type": "string"
          },
          "id": {
            "description": "The immutable ID for the SmimeInfo.",
            "type": "string"
          },
          "isDefault": {
            "description": "Whether this SmimeInfo is the default one for this user's send-as address.",
            "type": "boolean"
          },
          "issuerCn": {
            "description": "The S/MIME certificate issuer's common name.",
            "type": "string"
          },
          "pem": {
            "description": "PEM formatted X509 concatenated certificate string (standard base64 encoding). Format used for returning key, which includes public key as well as certificate chain (not private key).",
            "type": "string"
          },
          "pkcs12": {
            "description": "PKCS#12 format containing a single private/public key pair and certificate chain. This format is only accepted from client for creating a new SmimeInfo and is never returned, because the private key is not intended to be exported. PKCS#12 may be encrypted, in which case encryptedKeyPassword should be set appropriately.",
            "format": "byte",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://gmail.googleapis.com//gmail/v1/users/{userId}/settings/sendAs/{sendAsEmail}/smimeInfo{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "An S/MIME email config.",
        "**Key properties:**",
        {
          "$ul": [
            "**encryptedKeyPassword**: Encrypted key password, when key is encrypted.",
            "**expiration**: When the certificate expires (in milliseconds since epoch).",
            "**id**: The immutable ID for the SmimeInfo.",
            "**isDefault**: Whether this SmimeInfo is the default one for this user's send-as address.",
            "**issuerCn**: The S/MIME certificate issuer's common name.",
            "**pem**: PEM formatted X509 concatenated certificate string (standard base64 encoding). Format used for returning key, which includes public key as well as certificate chain (not private key).",
            "**pkcs12**: PKCS#12 format containing a single private/public key pair and certificate chain. This format is only accepted from client for creating a new SmimeInfo and is never returned, because the private key is not intended to be exported. PKCS#12 may be encrypted, in which case encryptedKeyPassword should be set appropriately."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
