{
  "name": "gmail_users_settings_filters_create",
  "description": "Creates a filter. Note: you can only create a maximum of 1,000 filters.",
  "parameters": {
    "type": "object",
    "properties": {
      "userId": {
        "type": "string",
        "description": "User's email address. The special value \"me\" can be used to indicate the authenticated user."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/Filter"
      }
    },
    "required": [
      "userId"
    ],
    "$defs": {
      "Filter": {
        "description": "Resource definition for Gmail filters. Filters apply to specific messages instead of an entire email thread.",
        "properties": {
          "action": {
            "$ref": "#/$defs/FilterAction"
          },
          "criteria": {
            "$ref": "#/$defs/FilterCriteria"
          },
          "id": {
            "description": "The server assigned ID of the filter.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "FilterAction": {
        "description": "A set of actions to perform on a message.",
        "properties": {
          "addLabelIds": {
            "description": "List of labels to add to the message.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "forward": {
            "description": "Email address that the message should be forwarded to.",
            "type": "string"
          },
          "removeLabelIds": {
            "description": "List of labels to remove from the message.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "FilterCriteria": {
        "description": "Message matching criteria.",
        "properties": {
          "excludeChats": {
            "description": "Whether the response should exclude chats.",
            "type": "boolean"
          },
          "from": {
            "description": "The sender's display name or email address.",
            "type": "string"
          },
          "hasAttachment": {
            "description": "Whether the message has any attachment.",
            "type": "boolean"
          },
          "negatedQuery": {
            "description": "Only return messages not matching the specified query. Supports the same query format as the Gmail search box. For example, `\"from:someuser@example.com rfc822msgid: is:unread\"`.",
            "type": "string"
          },
          "query": {
            "description": "Only return messages matching the specified query. Supports the same query format as the Gmail search box. For example, `\"from:someuser@example.com rfc822msgid: is:unread\"`.",
            "type": "string"
          },
          "size": {
            "description": "The size of the entire RFC822 message in bytes, including all headers and attachments.",
            "format": "int32",
            "type": "integer"
          },
          "sizeComparison": {
            "description": "How the message size in bytes should be in relation to the size field.",
            "enum": [
              "unspecified",
              "smaller",
              "larger"
            ],
            "type": "string"
          },
          "subject": {
            "description": "Case-insensitive phrase found in the message's subject. Trailing and leading whitespace are be trimmed and adjacent spaces are collapsed.",
            "type": "string"
          },
          "to": {
            "description": "The recipient's display name or email address. Includes recipients in the \"to\", \"cc\", and \"bcc\" header fields. You can use simply the local part of the email address. For example, \"example\" and \"example@\" both match \"example@gmail.com\". This field is case-insensitive.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://gmail.googleapis.com//gmail/v1/users/{userId}/settings/filters{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Resource definition for Gmail filters. Filters apply to specific messages instead of an entire email thread.",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**action**: A set of actions to perform on a message.",
              {
                "$ul": [
                  "**addLabelIds**: List of labels to add to the message.",
                  "**forward**: Email address that the message should be forwarded to.",
                  "**removeLabelIds**: List of labels to remove from the message."
                ]
              }
            ],
            [
              "**criteria**: Message matching criteria.",
              {
                "$ul": [
                  "**excludeChats**: Whether the response should exclude chats.",
                  "**from**: The sender's display name or email address.",
                  "**hasAttachment**: Whether the message has any attachment.",
                  "**negatedQuery**: Only return messages not matching the specified query. Supports the same query format as the Gmail search box. For example, `\"from:someuser@example.com rfc822msgid: is:unread\"`.",
                  "**query**: Only return messages matching the specified query. Supports the same query format as the Gmail search box. For example, `\"from:someuser@example.com rfc822msgid: is:unread\"`.",
                  "**size**: The size of the entire RFC822 message in bytes, including all headers and attachments.",
                  "**sizeComparison**: How the message size in bytes should be in relation to the size field.",
                  "**subject**: Case-insensitive phrase found in the message's subject. Trailing and leading whitespace are be trimmed and adjacent spaces are collapsed.",
                  "**to**: The recipient's display name or email address. Includes recipients in the \"to\", \"cc\", and \"bcc\" header fields. You can use simply the local part of the email address. For example, \"example\" and \"example@\" both match \"example@gmail.com\". This field is case-insensitive."
                ]
              }
            ],
            "**id**: The server assigned ID of the filter."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
