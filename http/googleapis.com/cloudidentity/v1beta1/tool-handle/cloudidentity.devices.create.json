{
  "name": "cloudidentity_devices_create",
  "description": "Creates a device. Only company-owned device may be created. **Note**: This method is available only to customers who have one of the following SKUs: Enterprise Standard, Enterprise Plus, Enterprise for Education, and Cloud Identity Premium",
  "parameters": {
    "type": "object",
    "properties": {
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/CreateDeviceRequest"
      }
    },
    "$defs": {
      "CreateDeviceRequest": {
        "description": "Request message for creating a Company Owned device.",
        "properties": {
          "customer": {
            "description": "Optional. [Resource name](https://cloud.google.com/apis/design/resource_names) of the customer. If you're using this API for your own organization, use `customers/my_customer` If you're using this API to manage another organization, use `customers/{customer_id}`, where customer_id is the customer to whom the device belongs.",
            "type": "string"
          },
          "device": {
            "$ref": "#/$defs/Device"
          }
        },
        "type": "object"
      },
      "Device": {
        "description": "A Device within the Cloud Identity Devices API. Represents a Device known to Google Cloud, independent of the device ownership, type, and whether it is assigned or in use by a user.",
        "properties": {
          "androidSpecificAttributes": {
            "$ref": "#/$defs/AndroidAttributes"
          },
          "assetTag": {
            "description": "Asset tag of the device.",
            "type": "string"
          },
          "basebandVersion": {
            "description": "Output only. Baseband version of the device.",
            "readOnly": true,
            "type": "string"
          },
          "bootloaderVersion": {
            "description": "Output only. Device bootloader version. Example: 0.6.7.",
            "readOnly": true,
            "type": "string"
          },
          "brand": {
            "description": "Output only. Device brand. Example: Samsung.",
            "readOnly": true,
            "type": "string"
          },
          "buildNumber": {
            "description": "Output only. Build number of the device.",
            "readOnly": true,
            "type": "string"
          },
          "clientTypes": {
            "description": "List of the clients the device is reporting to.",
            "items": {
              "enum": [
                "CLIENT_TYPE_UNSPECIFIED",
                "DRIVE_FS",
                "FUNDAMENTAL",
                "ENDPOINT_VERIFICATION",
                "WINDOWS_ADVANCED",
                "GOOGLE_CREDENTIALS_PROVIDER_FOR_WINDOWS"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "compromisedState": {
            "description": "Output only. Represents whether the Device is compromised.",
            "enum": [
              "COMPROMISED_STATE_UNSPECIFIED",
              "COMPROMISED",
              "UNCOMPROMISED"
            ],
            "readOnly": true,
            "type": "string"
          },
          "createTime": {
            "description": "Output only. When the Company-Owned device was imported. This field is empty for BYOD devices.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "deviceId": {
            "description": "Unique identifier for the device.",
            "type": "string"
          },
          "deviceType": {
            "description": "Output only. Type of device.",
            "enum": [
              "DEVICE_TYPE_UNSPECIFIED",
              "ANDROID",
              "IOS",
              "GOOGLE_SYNC",
              "WINDOWS",
              "MAC_OS",
              "LINUX",
              "CHROME_OS"
            ],
            "readOnly": true,
            "type": "string"
          },
          "enabledDeveloperOptions": {
            "description": "Output only. Whether developer options is enabled on device.",
            "readOnly": true,
            "type": "boolean"
          },
          "enabledUsbDebugging": {
            "description": "Output only. Whether USB debugging is enabled on device.",
            "readOnly": true,
            "type": "boolean"
          },
          "encryptionState": {
            "description": "Output only. Device encryption state.",
            "enum": [
              "ENCRYPTION_STATE_UNSPECIFIED",
              "UNSUPPORTED_BY_DEVICE",
              "ENCRYPTED",
              "NOT_ENCRYPTED"
            ],
            "readOnly": true,
            "type": "string"
          },
          "endpointVerificationSpecificAttributes": {
            "$ref": "#/$defs/EndpointVerificationSpecificAttributes"
          },
          "hostname": {
            "description": "Host name of the device.",
            "type": "string"
          },
          "imei": {
            "description": "Output only. IMEI number of device if GSM device; empty otherwise.",
            "readOnly": true,
            "type": "string"
          },
          "kernelVersion": {
            "description": "Output only. Kernel version of the device.",
            "readOnly": true,
            "type": "string"
          },
          "lastSyncTime": {
            "description": "Most recent time when device synced with this service.",
            "format": "google-datetime",
            "type": "string"
          },
          "managementState": {
            "description": "Output only. Management state of the device",
            "enum": [
              "MANAGEMENT_STATE_UNSPECIFIED",
              "APPROVED",
              "BLOCKED",
              "PENDING",
              "UNPROVISIONED",
              "WIPING",
              "WIPED"
            ],
            "readOnly": true,
            "type": "string"
          },
          "manufacturer": {
            "description": "Output only. Device manufacturer. Example: Motorola.",
            "readOnly": true,
            "type": "string"
          },
          "meid": {
            "description": "Output only. MEID number of device if CDMA device; empty otherwise.",
            "readOnly": true,
            "type": "string"
          },
          "model": {
            "description": "Output only. Model name of device. Example: Pixel 3.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "Output only. [Resource name](https://cloud.google.com/apis/design/resource_names) of the Device in format: `devices/{device_id}`, where device_id is the unique id assigned to the Device.",
            "readOnly": true,
            "type": "string"
          },
          "networkOperator": {
            "description": "Output only. Mobile or network operator of device, if available.",
            "readOnly": true,
            "type": "string"
          },
          "osVersion": {
            "description": "Output only. OS version of the device. Example: Android 8.1.0.",
            "readOnly": true,
            "type": "string"
          },
          "otherAccounts": {
            "description": "Output only. Domain name for Google accounts on device. Type for other accounts on device. On Android, will only be populated if |ownership_privilege| is |PROFILE_OWNER| or |DEVICE_OWNER|. Does not include the account signed in to the device policy app if that account's domain has only one account. Examples: \"com.example\", \"xyz.com\".",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "ownerType": {
            "description": "Output only. Whether the device is owned by the company or an individual",
            "enum": [
              "DEVICE_OWNERSHIP_UNSPECIFIED",
              "COMPANY",
              "BYOD"
            ],
            "readOnly": true,
            "type": "string"
          },
          "releaseVersion": {
            "description": "Output only. OS release version. Example: 6.0.",
            "readOnly": true,
            "type": "string"
          },
          "securityPatchTime": {
            "description": "Output only. OS security patch update time on device.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "serialNumber": {
            "description": "Serial Number of device. Example: HT82V1A01076.",
            "type": "string"
          },
          "wifiMacAddresses": {
            "description": "WiFi MAC addresses of device.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AndroidAttributes": {
        "description": "Resource representing the Android specific attributes of a Device.",
        "properties": {
          "ctsProfileMatch": {
            "description": "Whether the device passes Android CTS compliance.",
            "type": "boolean"
          },
          "enabledUnknownSources": {
            "description": "Whether applications from unknown sources can be installed on device.",
            "type": "boolean"
          },
          "hasPotentiallyHarmfulApps": {
            "description": "Whether any potentially harmful apps were detected on the device.",
            "type": "boolean"
          },
          "ownerProfileAccount": {
            "description": "Whether this account is on an owner/primary profile. For phones, only true for owner profiles. Android 4+ devices can have secondary or restricted user profiles.",
            "type": "boolean"
          },
          "ownershipPrivilege": {
            "description": "Ownership privileges on device.",
            "enum": [
              "OWNERSHIP_PRIVILEGE_UNSPECIFIED",
              "DEVICE_ADMINISTRATOR",
              "PROFILE_OWNER",
              "DEVICE_OWNER"
            ],
            "type": "string"
          },
          "supportsWorkProfile": {
            "description": "Whether device supports Android work profiles. If false, this service will not block access to corp data even if an administrator turns on the \"Enforce Work Profile\" policy.",
            "type": "boolean"
          },
          "verifiedBoot": {
            "description": "Whether Android verified boot status is GREEN.",
            "type": "boolean"
          },
          "verifyAppsEnabled": {
            "description": "Whether Google Play Protect Verify Apps is enabled.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "EndpointVerificationSpecificAttributes": {
        "description": "Resource representing the [Endpoint Verification-specific attributes](https://cloud.google.com/endpoint-verification/docs/device-information) of a device.",
        "properties": {
          "additionalSignals": {
            "additionalProperties": {
              "description": "Properties of the object."
            },
            "description": "Additional signals reported by Endpoint Verification. It includes the following attributes: 1. Non-configurable attributes: hotfixes, av_installed, av_enabled, windows_domain_name, is_os_native_firewall_enabled, and is_secure_boot_enabled. 2. Configurable attributes: file_config, registry_config, and plist_config.",
            "type": "object"
          },
          "browserAttributes": {
            "description": "Details of browser profiles reported by Endpoint Verification.",
            "items": {
              "$ref": "#/$defs/BrowserAttributes"
            },
            "type": "array"
          },
          "certificateAttributes": {
            "description": "Details of certificates.",
            "items": {
              "$ref": "#/$defs/CertificateAttributes"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "BrowserAttributes": {
        "description": "Contains information about browser profiles reported by the Endpoint Verification extension.",
        "properties": {
          "chromeBrowserInfo": {
            "$ref": "#/$defs/BrowserInfo"
          },
          "chromeProfileId": {
            "description": "Chrome profile ID that is exposed by the Chrome API. It is unique for each device.",
            "type": "string"
          },
          "lastProfileSyncTime": {
            "description": "Timestamp in milliseconds since Epoch when the profile/gcm id was last synced.",
            "format": "google-datetime",
            "type": "string"
          }
        },
        "type": "object"
      },
      "BrowserInfo": {
        "description": "Browser-specific fields reported by the Endpoint Verification extension. LINT.IfChange",
        "properties": {
          "browserManagementState": {
            "description": "Output only. Browser's management state.",
            "enum": [
              "UNSPECIFIED",
              "UNMANAGED",
              "MANAGED_BY_OTHER_DOMAIN",
              "PROFILE_MANAGED",
              "BROWSER_MANAGED"
            ],
            "readOnly": true,
            "type": "string"
          },
          "browserVersion": {
            "description": "Version of the request initiating browser.",
            "type": "string"
          },
          "isBuiltInDnsClientEnabled": {
            "description": "Current state of [built-in DNS client](https://chromeenterprise.google/policies/#BuiltInDnsClientEnabled).",
            "type": "boolean"
          },
          "isBulkDataEntryAnalysisEnabled": {
            "description": "Current state of [bulk data analysis](https://chromeenterprise.google/policies/#OnBulkDataEntryEnterpriseConnector). Set to true if provider list from Chrome is non-empty.",
            "type": "boolean"
          },
          "isChromeCleanupEnabled": {
            "description": "Current state of [Chrome Cleanup](https://chromeenterprise.google/policies/#ChromeCleanupEnabled).",
            "type": "boolean"
          },
          "isChromeRemoteDesktopAppBlocked": {
            "description": "Current state of [Chrome Remote Desktop app](https://chromeenterprise.google/policies/#URLBlocklist).",
            "type": "boolean"
          },
          "isFileDownloadAnalysisEnabled": {
            "description": "Current state of [file download analysis](https://chromeenterprise.google/policies/#OnFileDownloadedEnterpriseConnector). Set to true if provider list from Chrome is non-empty.",
            "type": "boolean"
          },
          "isFileUploadAnalysisEnabled": {
            "description": "Current state of [file upload analysis](https://chromeenterprise.google/policies/#OnFileAttachedEnterpriseConnector). Set to true if provider list from Chrome is non-empty.",
            "type": "boolean"
          },
          "isRealtimeUrlCheckEnabled": {
            "description": "Current state of [real-time URL check](https://chromeenterprise.google/policies/#EnterpriseRealTimeUrlCheckMode). Set to true if provider list from Chrome is non-empty.",
            "type": "boolean"
          },
          "isSecurityEventAnalysisEnabled": {
            "description": "Current state of [security event analysis](https://chromeenterprise.google/policies/#OnSecurityEventEnterpriseConnector). Set to true if provider list from Chrome is non-empty.",
            "type": "boolean"
          },
          "isSiteIsolationEnabled": {
            "description": "Current state of [site isolation](https://chromeenterprise.google/policies/?policy=IsolateOrigins).",
            "type": "boolean"
          },
          "isThirdPartyBlockingEnabled": {
            "description": "Current state of [third-party blocking](https://chromeenterprise.google/policies/#ThirdPartyBlockingEnabled).",
            "type": "boolean"
          },
          "passwordProtectionWarningTrigger": {
            "description": "Current state of [password protection trigger](https://chromeenterprise.google/policies/#PasswordProtectionWarningTrigger).",
            "enum": [
              "PASSWORD_PROTECTION_TRIGGER_UNSPECIFIED",
              "PROTECTION_OFF",
              "PASSWORD_REUSE",
              "PHISHING_REUSE"
            ],
            "type": "string"
          },
          "safeBrowsingProtectionLevel": {
            "description": "Current state of [Safe Browsing protection level](https://chromeenterprise.google/policies/#SafeBrowsingProtectionLevel).",
            "enum": [
              "SAFE_BROWSING_LEVEL_UNSPECIFIED",
              "DISABLED",
              "STANDARD",
              "ENHANCED"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "CertificateAttributes": {
        "description": "Stores information about a certificate.",
        "properties": {
          "certificateTemplate": {
            "$ref": "#/$defs/CertificateTemplate"
          },
          "fingerprint": {
            "description": "The encoded certificate fingerprint.",
            "type": "string"
          },
          "issuer": {
            "description": "The name of the issuer of this certificate.",
            "type": "string"
          },
          "serialNumber": {
            "description": "Serial number of the certificate, Example: \"123456789\".",
            "type": "string"
          },
          "subject": {
            "description": "The subject name of this certificate.",
            "type": "string"
          },
          "thumbprint": {
            "description": "The certificate thumbprint.",
            "type": "string"
          },
          "validationState": {
            "description": "Validation state of this certificate.",
            "enum": [
              "CERTIFICATE_VALIDATION_STATE_UNSPECIFIED",
              "VALIDATION_SUCCESSFUL",
              "VALIDATION_FAILED"
            ],
            "type": "string"
          },
          "validityExpirationTime": {
            "description": "Certificate not valid at or after this timestamp.",
            "format": "google-datetime",
            "type": "string"
          },
          "validityStartTime": {
            "description": "Certificate not valid before this timestamp.",
            "format": "google-datetime",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CertificateTemplate": {
        "description": "CertificateTemplate (v3 Extension in X.509).",
        "properties": {
          "id": {
            "description": "The template id of the template. Example: \"1.3.6.1.4.1.311.21.8.15608621.11768144.5720724.16068415.6889630.81.2472537.7784047\".",
            "type": "string"
          },
          "majorVersion": {
            "description": "The Major version of the template. Example: 100.",
            "format": "int32",
            "type": "integer"
          },
          "minorVersion": {
            "description": "The minor version of the template. Example: 12.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://cloudidentity.googleapis.com//v1beta1/devices{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "This resource represents a long-running operation that is the result of a network API call.",
        "**Key properties:**",
        {
          "$ul": [
            "**done**: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
            [
              "**error**: The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
              {
                "$ul": [
                  "**code**: The status code, which should be an enum value of google.rpc.Code.",
                  "**details**: A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                  "**message**: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                ]
              }
            ],
            "**metadata**: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
            "**name**: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
            "**response**: The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
