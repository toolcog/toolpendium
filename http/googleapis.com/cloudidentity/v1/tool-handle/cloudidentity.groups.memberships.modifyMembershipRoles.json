{
  "name": "cloudidentity_groups_memberships_modifyMembershipRoles",
  "description": "Modifies the `MembershipRole`s of a `Membership`.",
  "parameters": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "Required. The [resource name](https://cloud.google.com/apis/design/resource_names) of the `Membership` whose roles are to be modified. Must be of the form `groups/{group}/memberships/{membership}`."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/ModifyMembershipRolesRequest"
      }
    },
    "required": [
      "name"
    ],
    "$defs": {
      "ModifyMembershipRolesRequest": {
        "description": "The request message for MembershipsService.ModifyMembershipRoles.",
        "properties": {
          "addRoles": {
            "description": "The `MembershipRole`s to be added. Adding or removing roles in the same request as updating roles is not supported. Must not be set if `update_roles_params` is set.",
            "items": {
              "$ref": "#/$defs/MembershipRole"
            },
            "type": "array"
          },
          "removeRoles": {
            "description": "The `name`s of the `MembershipRole`s to be removed. Adding or removing roles in the same request as updating roles is not supported. It is not possible to remove the `MEMBER` `MembershipRole`. If you wish to delete a `Membership`, call MembershipsService.DeleteMembership instead. Must not contain `MEMBER`. Must not be set if `update_roles_params` is set.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "updateRolesParams": {
            "description": "The `MembershipRole`s to be updated. Updating roles in the same request as adding or removing roles is not supported. Must not be set if either `add_roles` or `remove_roles` is set.",
            "items": {
              "$ref": "#/$defs/UpdateMembershipRolesParams"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "MembershipRole": {
        "description": "A membership role within the Cloud Identity Groups API. A `MembershipRole` defines the privileges granted to a `Membership`.",
        "properties": {
          "expiryDetail": {
            "$ref": "#/$defs/ExpiryDetail"
          },
          "name": {
            "description": "The name of the `MembershipRole`. Must be one of `OWNER`, `MANAGER`, `MEMBER`.",
            "type": "string"
          },
          "restrictionEvaluations": {
            "$ref": "#/$defs/RestrictionEvaluations"
          }
        },
        "type": "object"
      },
      "ExpiryDetail": {
        "description": "The `MembershipRole` expiry details.",
        "properties": {
          "expireTime": {
            "description": "The time at which the `MembershipRole` will expire.",
            "format": "google-datetime",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RestrictionEvaluations": {
        "description": "Evaluations of restrictions applied to parent group on this membership.",
        "properties": {
          "memberRestrictionEvaluation": {
            "$ref": "#/$defs/MembershipRoleRestrictionEvaluation"
          }
        },
        "type": "object"
      },
      "MembershipRoleRestrictionEvaluation": {
        "description": "The evaluated state of this restriction.",
        "properties": {
          "state": {
            "description": "Output only. The current state of the restriction",
            "enum": [
              "STATE_UNSPECIFIED",
              "COMPLIANT",
              "FORWARD_COMPLIANT",
              "NON_COMPLIANT",
              "EVALUATING"
            ],
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateMembershipRolesParams": {
        "description": "The details of an update to a `MembershipRole`.",
        "properties": {
          "fieldMask": {
            "description": "The fully-qualified names of fields to update. May only contain the field `expiry_detail.expire_time`.",
            "format": "google-fieldmask",
            "type": "string"
          },
          "membershipRole": {
            "$ref": "#/$defs/MembershipRole"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://cloudidentity.googleapis.com//v1/{name}:modifyMembershipRoles{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The response message for MembershipsService.ModifyMembershipRoles.",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**membership**: A membership within the Cloud Identity Groups API. A `Membership` defines a relationship between a `Group` and an entity belonging to that `Group`, referred to as a \"member\".",
              {
                "$ul": [
                  "**createTime**: Output only. The time when the `Membership` was created.",
                  "**deliverySetting**: Output only. Delivery setting associated with the membership.",
                  "**name**: Output only. The [resource name](https://cloud.google.com/apis/design/resource_names) of the `Membership`. Shall be of the form `groups/{group}/memberships/{membership}`.",
                  [
                    "**preferredMemberKey**: A unique identifier for an entity in the Cloud Identity Groups API. An entity can represent either a group with an optional `namespace` or a user without a `namespace`. The combination of `id` and `namespace` must be unique; however, the same `id` can be used with different `namespace`s.",
                    {
                      "$ul": [
                        "**id**: The ID of the entity. For Google-managed entities, the `id` should be the email address of an existing group or user. Email addresses need to adhere to [name guidelines for users and groups](https://support.google.com/a/answer/9193374). For external-identity-mapped entities, the `id` must be a string conforming to the Identity Source's requirements. Must be unique within a `namespace`.",
                        "**namespace**: The namespace in which the entity exists. If not specified, the `EntityKey` represents a Google-managed entity such as a Google user or a Google Group. If specified, the `EntityKey` represents an external-identity-mapped group. The namespace must correspond to an identity source created in Admin Console and must be in the form of `identitysources/{identity_source}`."
                      ]
                    }
                  ],
                  "**roles**: The `MembershipRole`s that apply to the `Membership`. If unspecified, defaults to a single `MembershipRole` with `name` `MEMBER`. Must not contain duplicate `MembershipRole`s with the same `name`.",
                  "**type**: Output only. The type of the membership.",
                  "**updateTime**: Output only. The time when the `Membership` was last updated."
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
