{
  "name": "gamesConfiguration_achievementConfigurations_update",
  "description": "Update the metadata of the achievement configuration with the given ID.",
  "parameters": {
    "type": "object",
    "properties": {
      "achievementId": {
        "type": "string",
        "description": "The ID of the achievement used by this method."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/AchievementConfiguration"
      }
    },
    "required": [
      "achievementId"
    ],
    "$defs": {
      "AchievementConfiguration": {
        "description": "An achievement configuration resource.",
        "properties": {
          "achievementType": {
            "description": "The type of the achievement.",
            "enum": [
              "ACHIEVEMENT_TYPE_UNSPECIFIED",
              "STANDARD",
              "INCREMENTAL"
            ],
            "type": "string"
          },
          "draft": {
            "$ref": "#/$defs/AchievementConfigurationDetail"
          },
          "id": {
            "description": "The ID of the achievement.",
            "type": "string"
          },
          "initialState": {
            "description": "The initial state of the achievement.",
            "enum": [
              "INITIAL_STATE_UNSPECIFIED",
              "HIDDEN",
              "REVEALED"
            ],
            "type": "string"
          },
          "kind": {
            "description": "Uniquely identifies the type of this resource. Value is always the fixed string `gamesConfiguration#achievementConfiguration`.",
            "type": "string"
          },
          "published": {
            "$ref": "#/$defs/AchievementConfigurationDetail"
          },
          "stepsToUnlock": {
            "description": "Steps to unlock. Only applicable to incremental achievements.",
            "format": "int32",
            "type": "integer"
          },
          "token": {
            "description": "The token for this resource.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AchievementConfigurationDetail": {
        "description": "An achievement configuration detail.",
        "properties": {
          "description": {
            "$ref": "#/$defs/LocalizedStringBundle"
          },
          "iconUrl": {
            "description": "The icon url of this achievement. Writes to this field are ignored.",
            "type": "string"
          },
          "kind": {
            "description": "Uniquely identifies the type of this resource. Value is always the fixed string `gamesConfiguration#achievementConfigurationDetail`.",
            "type": "string"
          },
          "name": {
            "$ref": "#/$defs/LocalizedStringBundle"
          },
          "pointValue": {
            "description": "Point value for the achievement.",
            "format": "int32",
            "type": "integer"
          },
          "sortRank": {
            "description": "The sort rank of this achievement. Writes to this field are ignored.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "LocalizedStringBundle": {
        "description": "A localized string bundle resource.",
        "properties": {
          "kind": {
            "description": "Uniquely identifies the type of this resource. Value is always the fixed string `gamesConfiguration#localizedStringBundle`.",
            "type": "string"
          },
          "translations": {
            "description": "The locale strings.",
            "items": {
              "$ref": "#/$defs/LocalizedString"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "LocalizedString": {
        "description": "A localized string resource.",
        "properties": {
          "kind": {
            "description": "Uniquely identifies the type of this resource. Value is always the fixed string `gamesConfiguration#localizedString`.",
            "type": "string"
          },
          "locale": {
            "description": "The locale string.",
            "type": "string"
          },
          "value": {
            "description": "The string value.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "https://gamesconfiguration.googleapis.com//games/v1configuration/achievements/{achievementId}{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "An achievement configuration resource.",
        "**Key properties:**",
        {
          "$ul": [
            "**achievementType**: The type of the achievement.",
            [
              "**draft**: An achievement configuration detail.",
              {
                "$ul": [
                  [
                    "**description**: A localized string bundle resource.",
                    {
                      "$ul": [
                        "**kind**: Uniquely identifies the type of this resource. Value is always the fixed string `gamesConfiguration#localizedStringBundle`.",
                        "**translations**: The locale strings."
                      ]
                    }
                  ],
                  "**iconUrl**: The icon url of this achievement. Writes to this field are ignored.",
                  "**kind**: Uniquely identifies the type of this resource. Value is always the fixed string `gamesConfiguration#achievementConfigurationDetail`.",
                  [
                    "**name**: A localized string bundle resource.",
                    {
                      "$ul": [
                        "**kind**: Uniquely identifies the type of this resource. Value is always the fixed string `gamesConfiguration#localizedStringBundle`.",
                        "**translations**: The locale strings."
                      ]
                    }
                  ],
                  "**pointValue**: Point value for the achievement.",
                  "**sortRank**: The sort rank of this achievement. Writes to this field are ignored."
                ]
              }
            ],
            "**id**: The ID of the achievement.",
            "**initialState**: The initial state of the achievement.",
            "**kind**: Uniquely identifies the type of this resource. Value is always the fixed string `gamesConfiguration#achievementConfiguration`.",
            [
              "**published**: An achievement configuration detail.",
              {
                "$ul": [
                  [
                    "**description**: A localized string bundle resource.",
                    {
                      "$ul": [
                        "**kind**: Uniquely identifies the type of this resource. Value is always the fixed string `gamesConfiguration#localizedStringBundle`.",
                        "**translations**: The locale strings."
                      ]
                    }
                  ],
                  "**iconUrl**: The icon url of this achievement. Writes to this field are ignored.",
                  "**kind**: Uniquely identifies the type of this resource. Value is always the fixed string `gamesConfiguration#achievementConfigurationDetail`.",
                  [
                    "**name**: A localized string bundle resource.",
                    {
                      "$ul": [
                        "**kind**: Uniquely identifies the type of this resource. Value is always the fixed string `gamesConfiguration#localizedStringBundle`.",
                        "**translations**: The locale strings."
                      ]
                    }
                  ],
                  "**pointValue**: Point value for the achievement.",
                  "**sortRank**: The sort rank of this achievement. Writes to this field are ignored."
                ]
              }
            ],
            "**stepsToUnlock**: Steps to unlock. Only applicable to incremental achievements.",
            "**token**: The token for this resource."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
