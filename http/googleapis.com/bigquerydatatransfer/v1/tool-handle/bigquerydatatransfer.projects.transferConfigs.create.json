{
  "name": "bigquerydatatransfer_projects_transferConfigs_create",
  "description": "Creates a new data transfer configuration.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The BigQuery project id where the transfer configuration should be created. Must be in the format projects/{project_id}/locations/{location_id} or projects/{project_id}. If specified location and location of the destination bigquery dataset do not match - the request will fail."
      },
      "authorizationCode": {
        "type": "string",
        "description": "Optional OAuth2 authorization code to use with this transfer configuration. This is required only if `transferConfig.dataSourceId` is 'youtube_channel' and new credentials are needed, as indicated by `CheckValidCreds`. In order to obtain authorization_code, make a request to the following URL: https://www.gstatic.com/bigquerydatatransfer/oauthz/auth?redirect_uri=urn:ietf:wg:oauth:2.0:oob&response_type=authorization_code&client_id=client_id&scope=data_source_scopes * The client_id is the OAuth client_id of the a data source as returned by ListDataSources method. * data_source_scopes are the scopes returned by ListDataSources method. Note that this should not be set when `service_account_name` is used to create the transfer config."
      },
      "serviceAccountName": {
        "type": "string",
        "description": "Optional service account email. If this field is set, the transfer config will be created with this service account's credentials. It requires that the requesting user calling this API has permissions to act as this service account. Note that not all data sources support service account credentials when creating a transfer config. For the latest list of data sources, read about [using service accounts](https://cloud.google.com/bigquery-transfer/docs/use-service-accounts)."
      },
      "versionInfo": {
        "type": "string",
        "description": "Optional version info. This is required only if `transferConfig.dataSourceId` is not 'youtube_channel' and new credentials are needed, as indicated by `CheckValidCreds`. In order to obtain version info, make a request to the following URL: https://www.gstatic.com/bigquerydatatransfer/oauthz/auth?redirect_uri=urn:ietf:wg:oauth:2.0:oob&response_type=version_info&client_id=client_id&scope=data_source_scopes * The client_id is the OAuth client_id of the a data source as returned by ListDataSources method. * data_source_scopes are the scopes returned by ListDataSources method. Note that this should not be set when `service_account_name` is used to create the transfer config."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/TransferConfig"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "TransferConfig": {
        "description": "Represents a data transfer configuration. A transfer configuration contains all metadata needed to perform a data transfer. For example, `destination_dataset_id` specifies where data should be stored. When a new transfer configuration is created, the specified `destination_dataset_id` is created when needed and shared with the appropriate data source service account.",
        "properties": {
          "dataRefreshWindowDays": {
            "description": "The number of days to look back to automatically refresh the data. For example, if `data_refresh_window_days = 10`, then every day BigQuery reingests data for [today-10, today-1], rather than ingesting data for just [today-1]. Only valid if the data source supports the feature. Set the value to 0 to use the default value.",
            "format": "int32",
            "type": "integer"
          },
          "dataSourceId": {
            "description": "Data source ID. This cannot be changed once data transfer is created. The full list of available data source IDs can be returned through an API call: https://cloud.google.com/bigquery-transfer/docs/reference/datatransfer/rest/v1/projects.locations.dataSources/list",
            "type": "string"
          },
          "datasetRegion": {
            "description": "Output only. Region in which BigQuery dataset is located.",
            "readOnly": true,
            "type": "string"
          },
          "destinationDatasetId": {
            "description": "The BigQuery target dataset id.",
            "type": "string"
          },
          "disabled": {
            "description": "Is this config disabled. When set to true, no runs will be scheduled for this transfer config.",
            "type": "boolean"
          },
          "displayName": {
            "description": "User specified display name for the data transfer.",
            "type": "string"
          },
          "emailPreferences": {
            "$ref": "#/$defs/EmailPreferences"
          },
          "encryptionConfiguration": {
            "$ref": "#/$defs/EncryptionConfiguration"
          },
          "name": {
            "description": "The resource name of the transfer config. Transfer config names have the form either `projects/{project_id}/locations/{region}/transferConfigs/{config_id}` or `projects/{project_id}/transferConfigs/{config_id}`, where `config_id` is usually a UUID, even though it is not guaranteed or required. The name is ignored when creating a transfer config.",
            "type": "string"
          },
          "nextRunTime": {
            "description": "Output only. Next time when data transfer will run.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "notificationPubsubTopic": {
            "description": "Pub/Sub topic where notifications will be sent after transfer runs associated with this transfer config finish. The format for specifying a pubsub topic is: `projects/{project_id}/topics/{topic_id}`",
            "type": "string"
          },
          "ownerInfo": {
            "$ref": "#/$defs/UserInfo"
          },
          "params": {
            "additionalProperties": {
              "description": "Properties of the object."
            },
            "description": "Parameters specific to each data source. For more information see the bq tab in the 'Setting up a data transfer' section for each data source. For example the parameters for Cloud Storage transfers are listed here: https://cloud.google.com/bigquery-transfer/docs/cloud-storage-transfer#bq",
            "type": "object"
          },
          "schedule": {
            "description": "Data transfer schedule. If the data source does not support a custom schedule, this should be empty. If it is empty, the default value for the data source will be used. The specified times are in UTC. Examples of valid format: `1st,3rd monday of month 15:30`, `every wed,fri of jan,jun 13:15`, and `first sunday of quarter 00:00`. See more explanation about the format here: https://cloud.google.com/appengine/docs/flexible/python/scheduling-jobs-with-cron-yaml#the_schedule_format NOTE: The minimum interval time between recurring transfers depends on the data source; refer to the documentation for your data source.",
            "type": "string"
          },
          "scheduleOptions": {
            "$ref": "#/$defs/ScheduleOptions"
          },
          "state": {
            "description": "Output only. State of the most recently updated transfer run.",
            "enum": [
              "TRANSFER_STATE_UNSPECIFIED",
              "PENDING",
              "RUNNING",
              "SUCCEEDED",
              "FAILED",
              "CANCELLED"
            ],
            "readOnly": true,
            "type": "string"
          },
          "updateTime": {
            "description": "Output only. Data transfer modification time. Ignored by server on input.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "userId": {
            "description": "Deprecated. Unique ID of the user on whose behalf transfer is done.",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EmailPreferences": {
        "description": "Represents preferences for sending email notifications for transfer run events.",
        "properties": {
          "enableFailureEmail": {
            "description": "If true, email notifications will be sent on transfer run failures.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "EncryptionConfiguration": {
        "description": "Represents the encryption configuration for a transfer.",
        "properties": {
          "kmsKeyName": {
            "description": "The name of the KMS key used for encrypting BigQuery data.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UserInfo": {
        "description": "Information about a user.",
        "properties": {
          "email": {
            "description": "E-mail address of the user.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ScheduleOptions": {
        "description": "Options customizing the data transfer schedule.",
        "properties": {
          "disableAutoScheduling": {
            "description": "If true, automatic scheduling of data transfer runs for this configuration will be disabled. The runs can be started on ad-hoc basis using StartManualTransferRuns API. When automatic scheduling is disabled, the TransferConfig.schedule field will be ignored.",
            "type": "boolean"
          },
          "endTime": {
            "description": "Defines time to stop scheduling transfer runs. A transfer run cannot be scheduled at or after the end time. The end time can be changed at any moment. The time when a data transfer can be triggered manually is not limited by this option.",
            "format": "google-datetime",
            "type": "string"
          },
          "startTime": {
            "description": "Specifies time to start scheduling transfer runs. The first run will be scheduled at or after the start time according to a recurrence pattern defined in the schedule string. The start time can be changed at any moment. The time when a data transfer can be triggered manually is not limited by this option.",
            "format": "google-datetime",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://bigquerydatatransfer.googleapis.com//v1/{parent}/transferConfigs{?authorizationCode,serviceAccountName,versionInfo,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Represents a data transfer configuration. A transfer configuration contains all metadata needed to perform a data transfer. For example, `destination_dataset_id` specifies where data should be stored. When a new transfer configuration is created, the specified `destination_dataset_id` is created when needed and shared with the appropriate data source service account.",
        "**Key properties:**",
        {
          "$ul": [
            "**dataRefreshWindowDays**: The number of days to look back to automatically refresh the data. For example, if `data_refresh_window_days = 10`, then every day BigQuery reingests data for [today-10, today-1], rather than ingesting data for just [today-1]. Only valid if the data source supports the feature. Set the value to 0 to use the default value.",
            "**dataSourceId**: Data source ID. This cannot be changed once data transfer is created. The full list of available data source IDs can be returned through an API call: https://cloud.google.com/bigquery-transfer/docs/reference/datatransfer/rest/v1/projects.locations.dataSources/list",
            "**datasetRegion**: Output only. Region in which BigQuery dataset is located.",
            "**destinationDatasetId**: The BigQuery target dataset id.",
            "**disabled**: Is this config disabled. When set to true, no runs will be scheduled for this transfer config.",
            "**displayName**: User specified display name for the data transfer.",
            [
              "**emailPreferences**: Represents preferences for sending email notifications for transfer run events.",
              {
                "$ul": [
                  "**enableFailureEmail**: If true, email notifications will be sent on transfer run failures."
                ]
              }
            ],
            [
              "**encryptionConfiguration**: Represents the encryption configuration for a transfer.",
              {
                "$ul": [
                  "**kmsKeyName**: The name of the KMS key used for encrypting BigQuery data."
                ]
              }
            ],
            "**name**: The resource name of the transfer config. Transfer config names have the form either `projects/{project_id}/locations/{region}/transferConfigs/{config_id}` or `projects/{project_id}/transferConfigs/{config_id}`, where `config_id` is usually a UUID, even though it is not guaranteed or required. The name is ignored when creating a transfer config.",
            "**nextRunTime**: Output only. Next time when data transfer will run.",
            "**notificationPubsubTopic**: Pub/Sub topic where notifications will be sent after transfer runs associated with this transfer config finish. The format for specifying a pubsub topic is: `projects/{project_id}/topics/{topic_id}`",
            [
              "**ownerInfo**: Information about a user.",
              {
                "$ul": [
                  "**email**: E-mail address of the user."
                ]
              }
            ],
            "**params**: Parameters specific to each data source. For more information see the bq tab in the 'Setting up a data transfer' section for each data source. For example the parameters for Cloud Storage transfers are listed here: https://cloud.google.com/bigquery-transfer/docs/cloud-storage-transfer#bq",
            "**schedule**: Data transfer schedule. If the data source does not support a custom schedule, this should be empty. If it is empty, the default value for the data source will be used. The specified times are in UTC. Examples of valid format: `1st,3rd monday of month 15:30`, `every wed,fri of jan,jun 13:15`, and `first sunday of quarter 00:00`. See more explanation about the format here: https://cloud.google.com/appengine/docs/flexible/python/scheduling-jobs-with-cron-yaml#the_schedule_format NOTE: The minimum interval time between recurring transfers depends on the data source; refer to the documentation for your data source.",
            [
              "**scheduleOptions**: Options customizing the data transfer schedule.",
              {
                "$ul": [
                  "**disableAutoScheduling**: If true, automatic scheduling of data transfer runs for this configuration will be disabled. The runs can be started on ad-hoc basis using StartManualTransferRuns API. When automatic scheduling is disabled, the TransferConfig.schedule field will be ignored.",
                  "**endTime**: Defines time to stop scheduling transfer runs. A transfer run cannot be scheduled at or after the end time. The end time can be changed at any moment. The time when a data transfer can be triggered manually is not limited by this option.",
                  "**startTime**: Specifies time to start scheduling transfer runs. The first run will be scheduled at or after the start time according to a recurrence pattern defined in the schedule string. The start time can be changed at any moment. The time when a data transfer can be triggered manually is not limited by this option."
                ]
              }
            ],
            "**state**: Output only. State of the most recently updated transfer run.",
            "**updateTime**: Output only. Data transfer modification time. Ignored by server on input.",
            "**userId**: Deprecated. Unique ID of the user on whose behalf transfer is done."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
