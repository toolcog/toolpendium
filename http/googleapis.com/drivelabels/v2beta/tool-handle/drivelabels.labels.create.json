{
  "name": "drivelabels_labels_create",
  "description": "Creates a new Label.",
  "parameters": {
    "type": "object",
    "properties": {
      "languageCode": {
        "type": "string",
        "description": "The BCP-47 language code to use for evaluating localized Field labels in response. When not specified, values in the default configured language will be used."
      },
      "useAdminAccess": {
        "type": "boolean",
        "description": "Set to `true` in order to use the user's admin privileges. The server will verify the user is an admin before allowing access."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleAppsDriveLabelsV2betaLabel"
      }
    },
    "$defs": {
      "GoogleAppsDriveLabelsV2betaLabel": {
        "description": "A label defines a taxonomy that can be applied to Drive items in order to organize and search across items. Labels can be simple strings, or can contain fields that describe additional metadata that can be further used to organize and search Drive items.",
        "properties": {
          "appliedCapabilities": {
            "$ref": "#/$defs/GoogleAppsDriveLabelsV2betaLabelAppliedCapabilities"
          },
          "appliedLabelPolicy": {
            "$ref": "#/$defs/GoogleAppsDriveLabelsV2betaLabelAppliedLabelPolicy"
          },
          "createTime": {
            "description": "Output only. The time this label was created.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "creator": {
            "$ref": "#/$defs/GoogleAppsDriveLabelsV2betaUserInfo"
          },
          "customer": {
            "description": "Output only. The customer this label belongs to. For example: \"customers/123abc789.\"",
            "readOnly": true,
            "type": "string"
          },
          "disableTime": {
            "description": "Output only. The time this label was disabled. This value has no meaning when the label is not disabled.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "disabler": {
            "$ref": "#/$defs/GoogleAppsDriveLabelsV2betaUserInfo"
          },
          "displayHints": {
            "$ref": "#/$defs/GoogleAppsDriveLabelsV2betaLabelDisplayHints"
          },
          "fields": {
            "description": "List of fields in descending priority order.",
            "items": {
              "$ref": "#/$defs/GoogleAppsDriveLabelsV2betaField"
            },
            "type": "array"
          },
          "id": {
            "description": "Output only. Globally unique identifier of this label. ID makes up part of the label `name`, but unlike `name`, ID is consistent between revisions. Matches the regex: `([a-zA-Z0-9])+`",
            "readOnly": true,
            "type": "string"
          },
          "labelType": {
            "description": "Required. The type of label.",
            "enum": [
              "LABEL_TYPE_UNSPECIFIED",
              "SHARED",
              "ADMIN",
              "GOOGLE_APP"
            ],
            "type": "string"
          },
          "learnMoreUri": {
            "description": "Custom URL to present to users to allow them to learn more about this label and how it should be used.",
            "type": "string"
          },
          "lifecycle": {
            "$ref": "#/$defs/GoogleAppsDriveLabelsV2betaLifecycle"
          },
          "lockStatus": {
            "$ref": "#/$defs/GoogleAppsDriveLabelsV2betaLockStatus"
          },
          "name": {
            "description": "Output only. Resource name of the label. Will be in the form of either: `labels/{id}` or `labels/{id}@{revision_id}` depending on the request. See `id` and `revision_id` below.",
            "readOnly": true,
            "type": "string"
          },
          "properties": {
            "$ref": "#/$defs/GoogleAppsDriveLabelsV2betaLabelProperties"
          },
          "publishTime": {
            "description": "Output only. The time this label was published. This value has no meaning when the label is not published.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "publisher": {
            "$ref": "#/$defs/GoogleAppsDriveLabelsV2betaUserInfo"
          },
          "revisionCreateTime": {
            "description": "Output only. The time this label revision was created.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "revisionCreator": {
            "$ref": "#/$defs/GoogleAppsDriveLabelsV2betaUserInfo"
          },
          "revisionId": {
            "description": "Output only. Revision ID of the label. Revision ID might be part of the label `name` depending on the request issued. A new revision is created whenever revisioned properties of a label are changed. Matches the regex: `([a-zA-Z0-9])+`",
            "readOnly": true,
            "type": "string"
          },
          "schemaCapabilities": {
            "$ref": "#/$defs/GoogleAppsDriveLabelsV2betaLabelSchemaCapabilities"
          }
        },
        "type": "object"
      },
      "GoogleAppsDriveLabelsV2betaLabelAppliedCapabilities": {
        "description": "The capabilities a user has on this label's applied metadata.",
        "properties": {
          "canApply": {
            "description": "Whether the user can apply this label to items.",
            "type": "boolean"
          },
          "canRead": {
            "description": "Whether the user can read applied metadata related to this label.",
            "type": "boolean"
          },
          "canRemove": {
            "description": "Whether the user can remove this label from items.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GoogleAppsDriveLabelsV2betaLabelAppliedLabelPolicy": {
        "description": "Behavior of this label when it's applied to Drive items.",
        "properties": {
          "copyMode": {
            "description": "Indicates how the applied label and field values should be copied when a Drive item is copied.",
            "enum": [
              "COPY_MODE_UNSPECIFIED",
              "DO_NOT_COPY",
              "ALWAYS_COPY",
              "COPY_APPLIABLE"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleAppsDriveLabelsV2betaUserInfo": {
        "description": "Information about a user.",
        "properties": {
          "person": {
            "description": "The identifier for this user that can be used with the People API to get more information. For example, people/12345678.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleAppsDriveLabelsV2betaLabelDisplayHints": {
        "description": "UI display hints for rendering the label.",
        "properties": {
          "disabled": {
            "description": "Whether the label should be shown in the UI as disabled.",
            "type": "boolean"
          },
          "hiddenInSearch": {
            "description": "This label should be hidden in the search menu when searching for Drive items.",
            "type": "boolean"
          },
          "priority": {
            "description": "Order to display label in a list.",
            "format": "int64",
            "type": "string"
          },
          "shownInApply": {
            "description": "This label should be shown in the apply menu when applying values to a Drive item.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GoogleAppsDriveLabelsV2betaField": {
        "description": "Defines a field that has a display name, data type, and other configuration options. This field defines the kind of metadata that may be set on a Drive item.",
        "properties": {
          "appliedCapabilities": {
            "$ref": "#/$defs/GoogleAppsDriveLabelsV2betaFieldAppliedCapabilities"
          },
          "createTime": {
            "description": "Output only. The time this field was created.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "creator": {
            "$ref": "#/$defs/GoogleAppsDriveLabelsV2betaUserInfo"
          },
          "dateOptions": {
            "$ref": "#/$defs/GoogleAppsDriveLabelsV2betaFieldDateOptions"
          },
          "disableTime": {
            "description": "Output only. The time this field was disabled. This value has no meaning when the field is not disabled.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "disabler": {
            "$ref": "#/$defs/GoogleAppsDriveLabelsV2betaUserInfo"
          },
          "displayHints": {
            "$ref": "#/$defs/GoogleAppsDriveLabelsV2betaFieldDisplayHints"
          },
          "id": {
            "description": "Output only. The key of a field, unique within a label or library. This value is autogenerated. Matches the regex: `([a-zA-Z0-9])+`",
            "readOnly": true,
            "type": "string"
          },
          "integerOptions": {
            "$ref": "#/$defs/GoogleAppsDriveLabelsV2betaFieldIntegerOptions"
          },
          "lifecycle": {
            "$ref": "#/$defs/GoogleAppsDriveLabelsV2betaLifecycle"
          },
          "lockStatus": {
            "$ref": "#/$defs/GoogleAppsDriveLabelsV2betaLockStatus"
          },
          "properties": {
            "$ref": "#/$defs/GoogleAppsDriveLabelsV2betaFieldProperties"
          },
          "publisher": {
            "$ref": "#/$defs/GoogleAppsDriveLabelsV2betaUserInfo"
          },
          "queryKey": {
            "description": "Output only. The key to use when constructing Drive search queries to find files based on values defined for this field on files. For example, \"`{query_key}` > 2001-01-01\".",
            "readOnly": true,
            "type": "string"
          },
          "schemaCapabilities": {
            "$ref": "#/$defs/GoogleAppsDriveLabelsV2betaFieldSchemaCapabilities"
          },
          "selectionOptions": {
            "$ref": "#/$defs/GoogleAppsDriveLabelsV2betaFieldSelectionOptions"
          },
          "textOptions": {
            "$ref": "#/$defs/GoogleAppsDriveLabelsV2betaFieldTextOptions"
          },
          "updateTime": {
            "description": "Output only. The time this field was updated.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "updater": {
            "$ref": "#/$defs/GoogleAppsDriveLabelsV2betaUserInfo"
          },
          "userOptions": {
            "$ref": "#/$defs/GoogleAppsDriveLabelsV2betaFieldUserOptions"
          }
        },
        "type": "object"
      },
      "GoogleAppsDriveLabelsV2betaFieldAppliedCapabilities": {
        "description": "The capabilities related to this field on applied metadata.",
        "properties": {
          "canRead": {
            "description": "Whether the user can read related applied metadata on items.",
            "type": "boolean"
          },
          "canSearch": {
            "description": "Whether the user can search for Drive items referencing this field.",
            "type": "boolean"
          },
          "canWrite": {
            "description": "Whether the user can set this field on Drive items.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GoogleAppsDriveLabelsV2betaFieldDateOptions": {
        "description": "Options for the date field type.",
        "properties": {
          "dateFormat": {
            "description": "Output only. ICU date format.",
            "readOnly": true,
            "type": "string"
          },
          "dateFormatType": {
            "description": "Localized date formatting option. Field values are rendered in this format according to their locale.",
            "enum": [
              "DATE_FORMAT_UNSPECIFIED",
              "LONG_DATE",
              "SHORT_DATE"
            ],
            "type": "string"
          },
          "maxValue": {
            "$ref": "#/$defs/GoogleTypeDate"
          },
          "minValue": {
            "$ref": "#/$defs/GoogleTypeDate"
          }
        },
        "type": "object"
      },
      "GoogleTypeDate": {
        "description": "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp",
        "properties": {
          "day": {
            "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
            "format": "int32",
            "type": "integer"
          },
          "month": {
            "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
            "format": "int32",
            "type": "integer"
          },
          "year": {
            "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GoogleAppsDriveLabelsV2betaFieldDisplayHints": {
        "description": "UI display hints for rendering a field.",
        "properties": {
          "disabled": {
            "description": "Whether the field should be shown in the UI as disabled.",
            "type": "boolean"
          },
          "hiddenInSearch": {
            "description": "This field should be hidden in the search menu when searching for Drive items.",
            "type": "boolean"
          },
          "required": {
            "description": "Whether the field should be shown as required in the UI.",
            "type": "boolean"
          },
          "shownInApply": {
            "description": "This field should be shown in the apply menu when applying values to a Drive item.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GoogleAppsDriveLabelsV2betaFieldIntegerOptions": {
        "description": "Options for the Integer field type.",
        "properties": {
          "maxValue": {
            "description": "Output only. The maximum valid value for the integer field.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "minValue": {
            "description": "Output only. The minimum valid value for the integer field.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleAppsDriveLabelsV2betaLifecycle": {
        "description": "The lifecycle state of an object, such as label, field, or choice. The lifecycle enforces the following transitions: * `UNPUBLISHED_DRAFT` (starting state) * `UNPUBLISHED_DRAFT` -> `PUBLISHED` * `UNPUBLISHED_DRAFT` -> (Deleted) * `PUBLISHED` -> `DISABLED` * `DISABLED` -> `PUBLISHED` * `DISABLED` -> (Deleted) The published and disabled states have some distinct characteristics: * Published—Some kinds of changes might be made to an object in this state, in which case `has_unpublished_changes` will be true. Also, some kinds of changes are not permitted. Generally, any change that would invalidate or cause new restrictions on existing metadata related to the label are rejected. * Disabled—When disabled, the configured `DisabledPolicy` takes effect.",
        "properties": {
          "disabledPolicy": {
            "$ref": "#/$defs/GoogleAppsDriveLabelsV2betaLifecycleDisabledPolicy"
          },
          "hasUnpublishedChanges": {
            "description": "Output only. Whether the object associated with this lifecycle has unpublished changes.",
            "readOnly": true,
            "type": "boolean"
          },
          "state": {
            "description": "Output only. The state of the object associated with this lifecycle.",
            "enum": [
              "STATE_UNSPECIFIED",
              "UNPUBLISHED_DRAFT",
              "PUBLISHED",
              "DISABLED",
              "DELETED"
            ],
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleAppsDriveLabelsV2betaLifecycleDisabledPolicy": {
        "description": "The policy that governs how to treat a disabled label, field, or selection choice in different contexts.",
        "properties": {
          "hideInSearch": {
            "description": "Whether to hide this disabled object in the search menu for Drive items. * When `false`, the object is generally shown in the UI as disabled but it appears in the search results when searching for Drive items. * When `true`, the object is generally hidden in the UI when searching for Drive items.",
            "type": "boolean"
          },
          "showInApply": {
            "description": "Whether to show this disabled object in the apply menu on Drive items. * When `true`, the object is generally shown in the UI as disabled and is unselectable. * When `false`, the object is generally hidden in the UI.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GoogleAppsDriveLabelsV2betaLockStatus": {
        "description": "Contains information about whether a label component should be considered locked.",
        "properties": {
          "locked": {
            "description": "Output only. Indicates whether this label component is the (direct) target of a LabelLock. A label component can be implicitly locked even if it's not the direct target of a LabelLock, in which case this field is set to false.",
            "readOnly": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GoogleAppsDriveLabelsV2betaFieldProperties": {
        "description": "The basic properties of the field.",
        "properties": {
          "displayName": {
            "description": "Required. The display text to show in the UI identifying this field.",
            "type": "string"
          },
          "insertBeforeField": {
            "description": "Input only. Insert or move this field before the indicated field. If empty, the field is placed at the end of the list.",
            "type": "string"
          },
          "required": {
            "description": "Whether the field should be marked as required.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GoogleAppsDriveLabelsV2betaFieldSchemaCapabilities": {
        "description": "The capabilities related to this field when editing the field.",
        "properties": {
          "canDelete": {
            "description": "Whether the user can delete this field. The user must have permission and the field must be deprecated.",
            "type": "boolean"
          },
          "canDisable": {
            "description": "Whether the user can disable this field. The user must have permission and this field must not already be disabled.",
            "type": "boolean"
          },
          "canEnable": {
            "description": "Whether the user can enable this field. The user must have permission and this field must be disabled.",
            "type": "boolean"
          },
          "canUpdate": {
            "description": "Whether the user can change this field.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GoogleAppsDriveLabelsV2betaFieldSelectionOptions": {
        "description": "Options for the selection field type.",
        "properties": {
          "choices": {
            "description": "The options available for this selection field. The list order is consistent, and modified with `insert_before_choice`.",
            "items": {
              "$ref": "#/$defs/GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoice"
            },
            "type": "array"
          },
          "listOptions": {
            "$ref": "#/$defs/GoogleAppsDriveLabelsV2betaFieldListOptions"
          }
        },
        "type": "object"
      },
      "GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoice": {
        "description": "Selection field choice.",
        "properties": {
          "appliedCapabilities": {
            "$ref": "#/$defs/GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceAppliedCapabilities"
          },
          "createTime": {
            "description": "Output only. The time this choice was created.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "creator": {
            "$ref": "#/$defs/GoogleAppsDriveLabelsV2betaUserInfo"
          },
          "disableTime": {
            "description": "Output only. The time this choice was disabled. This value has no meaning when the choice is not disabled.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "disabler": {
            "$ref": "#/$defs/GoogleAppsDriveLabelsV2betaUserInfo"
          },
          "displayHints": {
            "$ref": "#/$defs/GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceDisplayHints"
          },
          "id": {
            "description": "The unique value of the choice. This ID is autogenerated. Matches the regex: `([a-zA-Z0-9_])+`.",
            "type": "string"
          },
          "lifecycle": {
            "$ref": "#/$defs/GoogleAppsDriveLabelsV2betaLifecycle"
          },
          "lockStatus": {
            "$ref": "#/$defs/GoogleAppsDriveLabelsV2betaLockStatus"
          },
          "properties": {
            "$ref": "#/$defs/GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceProperties"
          },
          "publishTime": {
            "description": "Output only. The time this choice was published. This value has no meaning when the choice is not published.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "publisher": {
            "$ref": "#/$defs/GoogleAppsDriveLabelsV2betaUserInfo"
          },
          "schemaCapabilities": {
            "$ref": "#/$defs/GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceSchemaCapabilities"
          },
          "updateTime": {
            "description": "Output only. The time this choice was updated last.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "updater": {
            "$ref": "#/$defs/GoogleAppsDriveLabelsV2betaUserInfo"
          }
        },
        "type": "object"
      },
      "GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceAppliedCapabilities": {
        "description": "The capabilities related to this choice on applied metadata.",
        "properties": {
          "canRead": {
            "description": "Whether the user can read related applied metadata on items.",
            "type": "boolean"
          },
          "canSearch": {
            "description": "Whether the user can use this choice in search queries.",
            "type": "boolean"
          },
          "canSelect": {
            "description": "Whether the user can select this choice on an item.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceDisplayHints": {
        "description": "UI display hints for rendering an option.",
        "properties": {
          "badgeColors": {
            "$ref": "#/$defs/GoogleAppsDriveLabelsV2betaBadgeColors"
          },
          "badgePriority": {
            "description": "The priority of this badge. Used to compare and sort between multiple badges. A lower number means the badge should be shown first. When a badging configuration is not present, this will be 0. Otherwise, this will be set to `BadgeConfig.priority_override` or the default heuristic which prefers creation date of the label, and field and option priority.",
            "format": "int64",
            "type": "string"
          },
          "darkBadgeColors": {
            "$ref": "#/$defs/GoogleAppsDriveLabelsV2betaBadgeColors"
          },
          "disabled": {
            "description": "Whether the option should be shown in the UI as disabled.",
            "type": "boolean"
          },
          "hiddenInSearch": {
            "description": "This option should be hidden in the search menu when searching for Drive items.",
            "type": "boolean"
          },
          "shownInApply": {
            "description": "This option should be shown in the apply menu when applying values to a Drive item.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GoogleAppsDriveLabelsV2betaBadgeColors": {
        "description": "The color derived from BadgeConfig and changed to the closest recommended supported color.",
        "properties": {
          "backgroundColor": {
            "$ref": "#/$defs/GoogleTypeColor"
          },
          "foregroundColor": {
            "$ref": "#/$defs/GoogleTypeColor"
          },
          "soloColor": {
            "$ref": "#/$defs/GoogleTypeColor"
          }
        },
        "type": "object"
      },
      "GoogleTypeColor": {
        "description": "Represents a color in the RGBA color space. This representation is designed for simplicity of conversion to and from color representations in various languages over compactness. For example, the fields of this representation can be trivially provided to the constructor of `java.awt.Color` in Java; it can also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha` method in iOS; and, with just a little work, it can be easily formatted into a CSS `rgba()` string in JavaScript. This reference page doesn't have information about the absolute color space that should be used to interpret the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default, applications should assume the sRGB color space. When color equality needs to be decided, implementations, unless documented otherwise, treat two colors as equal if all their red, green, blue, and alpha values each differ by at most `1e-5`. Example (Java): import com.google.type.Color; // ... public static java.awt.Color fromProto(Color protocolor) { float alpha = protocolor.hasAlpha() ? protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); } public static Color toProto(java.awt.Color color) { float red = (float) color.getRed(); float green = (float) color.getGreen(); float blue = (float) color.getBlue(); float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue / denominator); int alpha = color.getAlpha(); if (alpha != 255) { result.setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .build()); } return resultBuilder.build(); } // ... Example (iOS / Obj-C): // ... static UIColor* fromProto(Color* protocolor) { float red = [protocolor red]; float green = [protocolor green]; float blue = [protocolor blue]; FloatValue* alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper != nil) { alpha = [alpha_wrapper value]; } return [UIColor colorWithRed:red green:green blue:blue alpha:alpha]; } static Color* toProto(UIColor* color) { CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&blue alpha:&alpha]) { return nil; } Color* result = [[Color alloc] init]; [result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <= 0.9999) { [result setAlpha:floatWrapperWithValue(alpha)]; } [result autorelease]; return result; } // ... Example (JavaScript): // ... var protoToCssColor = function(rgb_color) { var redFrac = rgb_color.red || 0.0; var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0; var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255); var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) { return rgbToCssColor(red, green, blue); } var alphaFrac = rgb_color.alpha.value || 0.0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',', alphaFrac, ')'].join(''); }; var rgbToCssColor = function(red, green, blue) { var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) { resultBuilder.push('0'); } resultBuilder.push(hexString); return resultBuilder.join(''); }; // ...",
        "properties": {
          "alpha": {
            "description": "The fraction of this color that should be applied to the pixel. That is, the final pixel color is defined by the equation: `pixel color = alpha * (this color) + (1.0 - alpha) * (background color)` This means that a value of 1.0 corresponds to a solid color, whereas a value of 0.0 corresponds to a completely transparent color. This uses a wrapper message rather than a simple float scalar so that it is possible to distinguish between a default value and the value being unset. If omitted, this color object is rendered as a solid color (as if the alpha value had been explicitly given a value of 1.0).",
            "format": "float",
            "type": "number"
          },
          "blue": {
            "description": "The amount of blue in the color as a value in the interval [0, 1].",
            "format": "float",
            "type": "number"
          },
          "green": {
            "description": "The amount of green in the color as a value in the interval [0, 1].",
            "format": "float",
            "type": "number"
          },
          "red": {
            "description": "The amount of red in the color as a value in the interval [0, 1].",
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceProperties": {
        "description": "Basic properties of the choice.",
        "properties": {
          "badgeConfig": {
            "$ref": "#/$defs/GoogleAppsDriveLabelsV2betaBadgeConfig"
          },
          "description": {
            "description": "The description of this label.",
            "type": "string"
          },
          "displayName": {
            "description": "Required. The display text to show in the UI identifying this field.",
            "type": "string"
          },
          "insertBeforeChoice": {
            "description": "Input only. Insert or move this choice before the indicated choice. If empty, the choice is placed at the end of the list.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleAppsDriveLabelsV2betaBadgeConfig": {
        "description": "Badge status of the label.",
        "properties": {
          "color": {
            "$ref": "#/$defs/GoogleTypeColor"
          },
          "priorityOverride": {
            "description": "Override the default global priority of this badge. When set to 0, the default priority heuristic is used.",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceSchemaCapabilities": {
        "description": "The capabilities related to this choice when editing the choice.",
        "properties": {
          "canDelete": {
            "description": "Whether the user can delete this choice.",
            "type": "boolean"
          },
          "canDisable": {
            "description": "Whether the user can disable this choice.",
            "type": "boolean"
          },
          "canEnable": {
            "description": "Whether the user can enable this choice.",
            "type": "boolean"
          },
          "canUpdate": {
            "description": "Whether the user can update this choice.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GoogleAppsDriveLabelsV2betaFieldListOptions": {
        "description": "Options for a multi-valued variant of an associated field type.",
        "properties": {
          "maxEntries": {
            "description": "Maximum number of entries permitted.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GoogleAppsDriveLabelsV2betaFieldTextOptions": {
        "description": "Options for the Text field type.",
        "properties": {
          "maxLength": {
            "description": "Output only. The maximum valid length of values for the text field.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "minLength": {
            "description": "Output only. The minimum valid length of values for the text field.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GoogleAppsDriveLabelsV2betaFieldUserOptions": {
        "description": "Options for the user field type.",
        "properties": {
          "listOptions": {
            "$ref": "#/$defs/GoogleAppsDriveLabelsV2betaFieldListOptions"
          }
        },
        "type": "object"
      },
      "GoogleAppsDriveLabelsV2betaLabelProperties": {
        "description": "Basic properties of the label.",
        "properties": {
          "description": {
            "description": "The description of the label.",
            "type": "string"
          },
          "title": {
            "description": "Required. Title of the label.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleAppsDriveLabelsV2betaLabelSchemaCapabilities": {
        "description": "The capabilities related to this label when editing the label.",
        "properties": {
          "canDelete": {
            "description": "Whether the user can delete this label. The user must have permission and the label must be disabled.",
            "type": "boolean"
          },
          "canDisable": {
            "description": "Whether the user can disable this label. The user must have permission and this label must not already be disabled.",
            "type": "boolean"
          },
          "canEnable": {
            "description": "Whether the user can enable this label. The user must have permission and this label must be disabled.",
            "type": "boolean"
          },
          "canUpdate": {
            "description": "Whether the user can change this label.",
            "type": "boolean"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://drivelabels.googleapis.com//v2beta/labels{?languageCode,useAdminAccess,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A label defines a taxonomy that can be applied to Drive items in order to organize and search across items. Labels can be simple strings, or can contain fields that describe additional metadata that can be further used to organize and search Drive items.",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**appliedCapabilities**: The capabilities a user has on this label's applied metadata.",
              {
                "$ul": [
                  "**canApply**: Whether the user can apply this label to items.",
                  "**canRead**: Whether the user can read applied metadata related to this label.",
                  "**canRemove**: Whether the user can remove this label from items."
                ]
              }
            ],
            [
              "**appliedLabelPolicy**: Behavior of this label when it's applied to Drive items.",
              {
                "$ul": [
                  "**copyMode**: Indicates how the applied label and field values should be copied when a Drive item is copied."
                ]
              }
            ],
            "**createTime**: Output only. The time this label was created.",
            [
              "**creator**: Information about a user.",
              {
                "$ul": [
                  "**person**: The identifier for this user that can be used with the People API to get more information. For example, people/12345678."
                ]
              }
            ],
            "**customer**: Output only. The customer this label belongs to. For example: \"customers/123abc789.\"",
            "**disableTime**: Output only. The time this label was disabled. This value has no meaning when the label is not disabled.",
            [
              "**disabler**: Information about a user.",
              {
                "$ul": [
                  "**person**: The identifier for this user that can be used with the People API to get more information. For example, people/12345678."
                ]
              }
            ],
            [
              "**displayHints**: UI display hints for rendering the label.",
              {
                "$ul": [
                  "**disabled**: Whether the label should be shown in the UI as disabled.",
                  "**hiddenInSearch**: This label should be hidden in the search menu when searching for Drive items.",
                  "**priority**: Order to display label in a list.",
                  "**shownInApply**: This label should be shown in the apply menu when applying values to a Drive item."
                ]
              }
            ],
            "**fields**: List of fields in descending priority order.",
            "**id**: Output only. Globally unique identifier of this label. ID makes up part of the label `name`, but unlike `name`, ID is consistent between revisions. Matches the regex: `([a-zA-Z0-9])+`",
            "**labelType**: Required. The type of label.",
            "**learnMoreUri**: Custom URL to present to users to allow them to learn more about this label and how it should be used.",
            [
              "**lifecycle**: The lifecycle state of an object, such as label, field, or choice. The lifecycle enforces the following transitions: * `UNPUBLISHED_DRAFT` (starting state) * `UNPUBLISHED_DRAFT` -> `PUBLISHED` * `UNPUBLISHED_DRAFT` -> (Deleted) * `PUBLISHED` -> `DISABLED` * `DISABLED` -> `PUBLISHED` * `DISABLED` -> (Deleted) The published and disabled states have some distinct characteristics: * Published—Some kinds of changes might be made to an object in this state, in which case `has_unpublished_changes` will be true. Also, some kinds of changes are not permitted. Generally, any change that would invalidate or cause new restrictions on existing metadata related to the label are rejected. * Disabled—When disabled, the configured `DisabledPolicy` takes effect.",
              {
                "$ul": [
                  [
                    "**disabledPolicy**: The policy that governs how to treat a disabled label, field, or selection choice in different contexts.",
                    {
                      "$ul": [
                        "**hideInSearch**: Whether to hide this disabled object in the search menu for Drive items. * When `false`, the object is generally shown in the UI as disabled but it appears in the search results when searching for Drive items. * When `true`, the object is generally hidden in the UI when searching for Drive items.",
                        "**showInApply**: Whether to show this disabled object in the apply menu on Drive items. * When `true`, the object is generally shown in the UI as disabled and is unselectable. * When `false`, the object is generally hidden in the UI."
                      ]
                    }
                  ],
                  "**hasUnpublishedChanges**: Output only. Whether the object associated with this lifecycle has unpublished changes.",
                  "**state**: Output only. The state of the object associated with this lifecycle."
                ]
              }
            ],
            [
              "**lockStatus**: Contains information about whether a label component should be considered locked.",
              {
                "$ul": [
                  "**locked**: Output only. Indicates whether this label component is the (direct) target of a LabelLock. A label component can be implicitly locked even if it's not the direct target of a LabelLock, in which case this field is set to false."
                ]
              }
            ],
            "**name**: Output only. Resource name of the label. Will be in the form of either: `labels/{id}` or `labels/{id}@{revision_id}` depending on the request. See `id` and `revision_id` below.",
            [
              "**properties**: Basic properties of the label.",
              {
                "$ul": [
                  "**description**: The description of the label.",
                  "**title**: Required. Title of the label."
                ]
              }
            ],
            "**publishTime**: Output only. The time this label was published. This value has no meaning when the label is not published.",
            [
              "**publisher**: Information about a user.",
              {
                "$ul": [
                  "**person**: The identifier for this user that can be used with the People API to get more information. For example, people/12345678."
                ]
              }
            ],
            "**revisionCreateTime**: Output only. The time this label revision was created.",
            [
              "**revisionCreator**: Information about a user.",
              {
                "$ul": [
                  "**person**: The identifier for this user that can be used with the People API to get more information. For example, people/12345678."
                ]
              }
            ],
            "**revisionId**: Output only. Revision ID of the label. Revision ID might be part of the label `name` depending on the request issued. A new revision is created whenever revisioned properties of a label are changed. Matches the regex: `([a-zA-Z0-9])+`",
            [
              "**schemaCapabilities**: The capabilities related to this label when editing the label.",
              {
                "$ul": [
                  "**canDelete**: Whether the user can delete this label. The user must have permission and the label must be disabled.",
                  "**canDisable**: Whether the user can disable this label. The user must have permission and this label must not already be disabled.",
                  "**canEnable**: Whether the user can enable this label. The user must have permission and this label must be disabled.",
                  "**canUpdate**: Whether the user can change this label."
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
