{
  "name": "drivelabels_labels_updateLabelCopyMode",
  "description": "Updates a Label's `CopyMode`. Changes to this policy are not revisioned, do not require publishing, and take effect immediately.",
  "parameters": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "Required. The resource name of the Label to update."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleAppsDriveLabelsV2betaUpdateLabelCopyModeRequest"
      }
    },
    "required": [
      "name"
    ],
    "$defs": {
      "GoogleAppsDriveLabelsV2betaUpdateLabelCopyModeRequest": {
        "description": "Request to update the `CopyMode` of the given Label. Changes to this policy are not revisioned, do not require publishing, and take effect immediately. \\",
        "properties": {
          "copyMode": {
            "description": "Required. Indicates how the applied Label, and Field values should be copied when a Drive item is copied.",
            "enum": [
              "COPY_MODE_UNSPECIFIED",
              "DO_NOT_COPY",
              "ALWAYS_COPY",
              "COPY_APPLIABLE"
            ],
            "type": "string"
          },
          "languageCode": {
            "description": "The BCP-47 language code to use for evaluating localized field labels. When not specified, values in the default configured language will be used.",
            "type": "string"
          },
          "useAdminAccess": {
            "description": "Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access.",
            "type": "boolean"
          },
          "view": {
            "description": "When specified, only certain fields belonging to the indicated view will be returned.",
            "enum": [
              "LABEL_VIEW_BASIC",
              "LABEL_VIEW_FULL"
            ],
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://drivelabels.googleapis.com//v2beta/{name}:updateLabelCopyMode{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A label defines a taxonomy that can be applied to Drive items in order to organize and search across items. Labels can be simple strings, or can contain fields that describe additional metadata that can be further used to organize and search Drive items.",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**appliedCapabilities**: The capabilities a user has on this label's applied metadata.",
              {
                "$ul": [
                  "**canApply**: Whether the user can apply this label to items.",
                  "**canRead**: Whether the user can read applied metadata related to this label.",
                  "**canRemove**: Whether the user can remove this label from items."
                ]
              }
            ],
            [
              "**appliedLabelPolicy**: Behavior of this label when it's applied to Drive items.",
              {
                "$ul": [
                  "**copyMode**: Indicates how the applied label and field values should be copied when a Drive item is copied."
                ]
              }
            ],
            "**createTime**: Output only. The time this label was created.",
            [
              "**creator**: Information about a user.",
              {
                "$ul": [
                  "**person**: The identifier for this user that can be used with the People API to get more information. For example, people/12345678."
                ]
              }
            ],
            "**customer**: Output only. The customer this label belongs to. For example: \"customers/123abc789.\"",
            "**disableTime**: Output only. The time this label was disabled. This value has no meaning when the label is not disabled.",
            [
              "**disabler**: Information about a user.",
              {
                "$ul": [
                  "**person**: The identifier for this user that can be used with the People API to get more information. For example, people/12345678."
                ]
              }
            ],
            [
              "**displayHints**: UI display hints for rendering the label.",
              {
                "$ul": [
                  "**disabled**: Whether the label should be shown in the UI as disabled.",
                  "**hiddenInSearch**: This label should be hidden in the search menu when searching for Drive items.",
                  "**priority**: Order to display label in a list.",
                  "**shownInApply**: This label should be shown in the apply menu when applying values to a Drive item."
                ]
              }
            ],
            "**fields**: List of fields in descending priority order.",
            "**id**: Output only. Globally unique identifier of this label. ID makes up part of the label `name`, but unlike `name`, ID is consistent between revisions. Matches the regex: `([a-zA-Z0-9])+`",
            "**labelType**: Required. The type of label.",
            "**learnMoreUri**: Custom URL to present to users to allow them to learn more about this label and how it should be used.",
            [
              "**lifecycle**: The lifecycle state of an object, such as label, field, or choice. The lifecycle enforces the following transitions: * `UNPUBLISHED_DRAFT` (starting state) * `UNPUBLISHED_DRAFT` -> `PUBLISHED` * `UNPUBLISHED_DRAFT` -> (Deleted) * `PUBLISHED` -> `DISABLED` * `DISABLED` -> `PUBLISHED` * `DISABLED` -> (Deleted) The published and disabled states have some distinct characteristics: * Published—Some kinds of changes might be made to an object in this state, in which case `has_unpublished_changes` will be true. Also, some kinds of changes are not permitted. Generally, any change that would invalidate or cause new restrictions on existing metadata related to the label are rejected. * Disabled—When disabled, the configured `DisabledPolicy` takes effect.",
              {
                "$ul": [
                  [
                    "**disabledPolicy**: The policy that governs how to treat a disabled label, field, or selection choice in different contexts.",
                    {
                      "$ul": [
                        "**hideInSearch**: Whether to hide this disabled object in the search menu for Drive items. * When `false`, the object is generally shown in the UI as disabled but it appears in the search results when searching for Drive items. * When `true`, the object is generally hidden in the UI when searching for Drive items.",
                        "**showInApply**: Whether to show this disabled object in the apply menu on Drive items. * When `true`, the object is generally shown in the UI as disabled and is unselectable. * When `false`, the object is generally hidden in the UI."
                      ]
                    }
                  ],
                  "**hasUnpublishedChanges**: Output only. Whether the object associated with this lifecycle has unpublished changes.",
                  "**state**: Output only. The state of the object associated with this lifecycle."
                ]
              }
            ],
            [
              "**lockStatus**: Contains information about whether a label component should be considered locked.",
              {
                "$ul": [
                  "**locked**: Output only. Indicates whether this label component is the (direct) target of a LabelLock. A label component can be implicitly locked even if it's not the direct target of a LabelLock, in which case this field is set to false."
                ]
              }
            ],
            "**name**: Output only. Resource name of the label. Will be in the form of either: `labels/{id}` or `labels/{id}@{revision_id}` depending on the request. See `id` and `revision_id` below.",
            [
              "**properties**: Basic properties of the label.",
              {
                "$ul": [
                  "**description**: The description of the label.",
                  "**title**: Required. Title of the label."
                ]
              }
            ],
            "**publishTime**: Output only. The time this label was published. This value has no meaning when the label is not published.",
            [
              "**publisher**: Information about a user.",
              {
                "$ul": [
                  "**person**: The identifier for this user that can be used with the People API to get more information. For example, people/12345678."
                ]
              }
            ],
            "**revisionCreateTime**: Output only. The time this label revision was created.",
            [
              "**revisionCreator**: Information about a user.",
              {
                "$ul": [
                  "**person**: The identifier for this user that can be used with the People API to get more information. For example, people/12345678."
                ]
              }
            ],
            "**revisionId**: Output only. Revision ID of the label. Revision ID might be part of the label `name` depending on the request issued. A new revision is created whenever revisioned properties of a label are changed. Matches the regex: `([a-zA-Z0-9])+`",
            [
              "**schemaCapabilities**: The capabilities related to this label when editing the label.",
              {
                "$ul": [
                  "**canDelete**: Whether the user can delete this label. The user must have permission and the label must be disabled.",
                  "**canDisable**: Whether the user can disable this label. The user must have permission and this label must not already be disabled.",
                  "**canEnable**: Whether the user can enable this label. The user must have permission and this label must be disabled.",
                  "**canUpdate**: Whether the user can change this label."
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
