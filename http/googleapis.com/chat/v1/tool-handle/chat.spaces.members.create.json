{
  "name": "chat_spaces_members_create",
  "description": "Creates a human membership or app membership for the calling app. Creating memberships for other apps isn't supported. For an example, see [ Create a membership](https://developers.google.com/chat/api/guides/v1/members/create). When creating a membership, if the specified member has their auto-accept policy turned off, then they're invited, and must accept the space invitation before joining. Otherwise, creating a membership adds the member directly to the specified space. Requires [user authentication](https://developers.google.com/chat/api/guides/auth/users). To specify the member to add, set the `membership.member.name` in the `CreateMembershipRequest`: - To add the calling app to a space or a direct message between two human users, use `users/app`. Unable to add other apps to the space. - To add a human user, use `users/{user}`, where `{user}` can be the email address for the user. For users in the same Workspace organization `{user}` can also be the `id` for the person from the People API, or the `id` for the user in the Directory API. For example, if the People API Person profile ID for `user@example.com` is `123456789`, you can add the user to the space by setting the `membership.member.name` to `users/user@example.com` or `users/123456789`.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The resource name of the space for which to create the membership. Format: spaces/{space}"
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/Membership"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "Membership": {
        "description": "Represents a membership relation in Google Chat, such as whether a user or Chat app is invited to, part of, or absent from a space.",
        "properties": {
          "createTime": {
            "description": "Optional. Immutable. The creation time of the membership, such as when a member joined or was invited to join a space. This field is output only, except when used to import historical memberships in import mode spaces.",
            "format": "google-datetime",
            "type": "string"
          },
          "deleteTime": {
            "description": "Optional. Immutable. The deletion time of the membership, such as when a member left or was removed from a space. This field is output only, except when used to import historical memberships in import mode spaces.",
            "format": "google-datetime",
            "type": "string"
          },
          "groupMember": {
            "$ref": "#/$defs/Group"
          },
          "member": {
            "$ref": "#/$defs/User"
          },
          "name": {
            "description": "Resource name of the membership, assigned by the server. Format: `spaces/{space}/members/{member}`",
            "type": "string"
          },
          "role": {
            "description": "Optional. User's role within a Chat space, which determines their permitted actions in the space. [Developer Preview](https://developers.google.com/workspace/preview): This field can only be used as input in `UpdateMembership`.",
            "enum": [
              "MEMBERSHIP_ROLE_UNSPECIFIED",
              "ROLE_MEMBER",
              "ROLE_MANAGER"
            ],
            "type": "string"
          },
          "state": {
            "description": "Output only. State of the membership.",
            "enum": [
              "MEMBERSHIP_STATE_UNSPECIFIED",
              "JOINED",
              "INVITED",
              "NOT_A_MEMBER"
            ],
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "Group": {
        "description": "A Google Group in Google Chat.",
        "properties": {
          "name": {
            "description": "Resource name for a Google Group. Represents a [group](https://cloud.google.com/identity/docs/reference/rest/v1/groups) in Cloud Identity Groups API. Format: groups/{group}",
            "type": "string"
          }
        },
        "type": "object"
      },
      "User": {
        "description": "A user in Google Chat. When returned as an output from a request, if your Chat app [authenticates as a user](https://developers.google.com/chat/api/guides/auth/users), the output for a `User` resource only populates the user's `name` and `type`.",
        "properties": {
          "displayName": {
            "description": "Output only. The user's display name.",
            "readOnly": true,
            "type": "string"
          },
          "domainId": {
            "description": "Unique identifier of the user's Google Workspace domain.",
            "type": "string"
          },
          "isAnonymous": {
            "description": "Output only. When `true`, the user is deleted or their profile is not visible.",
            "readOnly": true,
            "type": "boolean"
          },
          "name": {
            "description": "Resource name for a Google Chat user. Format: `users/{user}`. `users/app` can be used as an alias for the calling app bot user. For human users, `{user}` is the same user identifier as: - the `id` for the [Person](https://developers.google.com/people/api/rest/v1/people) in the People API. For example, `users/123456789` in Chat API represents the same person as the `123456789` Person profile ID in People API. - the `id` for a [user](https://developers.google.com/admin-sdk/directory/reference/rest/v1/users) in the Admin SDK Directory API. - the user's email address can be used as an alias for `{user}` in API requests. For example, if the People API Person profile ID for `user@example.com` is `123456789`, you can use `users/user@example.com` as an alias to reference `users/123456789`. Only the canonical resource name (for example `users/123456789`) will be returned from the API.",
            "type": "string"
          },
          "type": {
            "description": "User type.",
            "enum": [
              "TYPE_UNSPECIFIED",
              "HUMAN",
              "BOT"
            ],
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://chat.googleapis.com//v1/{parent}/members{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Represents a membership relation in Google Chat, such as whether a user or Chat app is invited to, part of, or absent from a space.",
        "**Key properties:**",
        {
          "$ul": [
            "**createTime**: Optional. Immutable. The creation time of the membership, such as when a member joined or was invited to join a space. This field is output only, except when used to import historical memberships in import mode spaces.",
            "**deleteTime**: Optional. Immutable. The deletion time of the membership, such as when a member left or was removed from a space. This field is output only, except when used to import historical memberships in import mode spaces.",
            [
              "**groupMember**: A Google Group in Google Chat.",
              {
                "$ul": [
                  "**name**: Resource name for a Google Group. Represents a [group](https://cloud.google.com/identity/docs/reference/rest/v1/groups) in Cloud Identity Groups API. Format: groups/{group}"
                ]
              }
            ],
            [
              "**member**: A user in Google Chat. When returned as an output from a request, if your Chat app [authenticates as a user](https://developers.google.com/chat/api/guides/auth/users), the output for a `User` resource only populates the user's `name` and `type`.",
              {
                "$ul": [
                  "**displayName**: Output only. The user's display name.",
                  "**domainId**: Unique identifier of the user's Google Workspace domain.",
                  "**isAnonymous**: Output only. When `true`, the user is deleted or their profile is not visible.",
                  "**name**: Resource name for a Google Chat user. Format: `users/{user}`. `users/app` can be used as an alias for the calling app bot user. For human users, `{user}` is the same user identifier as: - the `id` for the [Person](https://developers.google.com/people/api/rest/v1/people) in the People API. For example, `users/123456789` in Chat API represents the same person as the `123456789` Person profile ID in People API. - the `id` for a [user](https://developers.google.com/admin-sdk/directory/reference/rest/v1/users) in the Admin SDK Directory API. - the user's email address can be used as an alias for `{user}` in API requests. For example, if the People API Person profile ID for `user@example.com` is `123456789`, you can use `users/user@example.com` as an alias to reference `users/123456789`. Only the canonical resource name (for example `users/123456789`) will be returned from the API.",
                  "**type**: User type."
                ]
              }
            ],
            "**name**: Resource name of the membership, assigned by the server. Format: `spaces/{space}/members/{member}`",
            "**role**: Optional. User's role within a Chat space, which determines their permitted actions in the space. [Developer Preview](https://developers.google.com/workspace/preview): This field can only be used as input in `UpdateMembership`.",
            "**state**: Output only. State of the membership."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
