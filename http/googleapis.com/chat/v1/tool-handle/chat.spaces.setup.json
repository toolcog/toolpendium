{
  "name": "chat_spaces_setup",
  "description": "Creates a space and adds specified users to it. The calling user is automatically added to the space, and shouldn't be specified as a membership in the request. For an example, see [Set up a space](https://developers.google.com/chat/api/guides/v1/spaces/set-up). To specify the human members to add, add memberships with the appropriate `member.name` in the `SetUpSpaceRequest`. To add a human user, use `users/{user}`, where `{user}` can be the email address for the user. For users in the same Workspace organization `{user}` can also be the `id` for the person from the People API, or the `id` for the user in the Directory API. For example, if the People API Person profile ID for `user@example.com` is `123456789`, you can add the user to the space by setting the `membership.member.name` to `users/user@example.com` or `users/123456789`. For a space or group chat, if the caller blocks or is blocked by some members, then those members aren't added to the created space. To create a direct message (DM) between the calling user and another human user, specify exactly one membership to represent the human user. If one user blocks the other, the request fails and the DM isn't created. To create a DM between the calling user and the calling app, set `Space.singleUserBotDm` to `true` and don't specify any memberships. You can only use this method to set up a DM with the calling app. To add the calling app as a member of a space or an existing DM between two human users, see [create a membership](https://developers.google.com/chat/api/guides/v1/members/create). If a DM already exists between two users, even when one user blocks the other at the time a request is made, then the existing DM is returned. Spaces with threaded replies aren't supported. If you receive the error message `ALREADY_EXISTS` when setting up a space, try a different `displayName`. An existing space within the Google Workspace organization might already use this display name. Requires [user authentication](https://developers.google.com/chat/api/guides/auth/users).",
  "parameters": {
    "type": "object",
    "properties": {
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/SetUpSpaceRequest"
      }
    },
    "$defs": {
      "SetUpSpaceRequest": {
        "properties": {
          "memberships": {
            "description": "Optional. The Google Chat users to invite to join the space. Omit the calling user, as they are added automatically. The set currently allows up to 20 memberships (in addition to the caller). The `Membership.member` field must contain a `user` with `name` populated (format: `users/{user}`) and `type` set to `User.Type.HUMAN`. You can only add human users when setting up a space (adding Chat apps is only supported for direct message setup with the calling app). You can also add members using the user's email as an alias for {user}. For example, the `user.name` can be `users/example@gmail.com`.\" To invite Gmail users or users from external Google Workspace domains, user's email must be used for `{user}`. Optional when setting `Space.spaceType` to `SPACE`. Required when setting `Space.spaceType` to `GROUP_CHAT`, along with at least two memberships. Required when setting `Space.spaceType` to `DIRECT_MESSAGE` with a human user, along with exactly one membership. Must be empty when creating a 1:1 conversation between a human and the calling Chat app (when setting `Space.spaceType` to `DIRECT_MESSAGE` and `Space.singleUserBotDm` to `true`).",
            "items": {
              "$ref": "#/$defs/Membership"
            },
            "type": "array"
          },
          "requestId": {
            "description": "Optional. A unique identifier for this request. A random UUID is recommended. Specifying an existing request ID returns the space created with that ID instead of creating a new space. Specifying an existing request ID from the same Chat app with a different authenticated user returns an error.",
            "type": "string"
          },
          "space": {
            "$ref": "#/$defs/Space"
          }
        },
        "type": "object"
      },
      "Membership": {
        "description": "Represents a membership relation in Google Chat, such as whether a user or Chat app is invited to, part of, or absent from a space.",
        "properties": {
          "createTime": {
            "description": "Optional. Immutable. The creation time of the membership, such as when a member joined or was invited to join a space. This field is output only, except when used to import historical memberships in import mode spaces.",
            "format": "google-datetime",
            "type": "string"
          },
          "deleteTime": {
            "description": "Optional. Immutable. The deletion time of the membership, such as when a member left or was removed from a space. This field is output only, except when used to import historical memberships in import mode spaces.",
            "format": "google-datetime",
            "type": "string"
          },
          "groupMember": {
            "$ref": "#/$defs/Group"
          },
          "member": {
            "$ref": "#/$defs/User"
          },
          "name": {
            "description": "Resource name of the membership, assigned by the server. Format: `spaces/{space}/members/{member}`",
            "type": "string"
          },
          "role": {
            "description": "Optional. User's role within a Chat space, which determines their permitted actions in the space. [Developer Preview](https://developers.google.com/workspace/preview): This field can only be used as input in `UpdateMembership`.",
            "enum": [
              "MEMBERSHIP_ROLE_UNSPECIFIED",
              "ROLE_MEMBER",
              "ROLE_MANAGER"
            ],
            "type": "string"
          },
          "state": {
            "description": "Output only. State of the membership.",
            "enum": [
              "MEMBERSHIP_STATE_UNSPECIFIED",
              "JOINED",
              "INVITED",
              "NOT_A_MEMBER"
            ],
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "Group": {
        "description": "A Google Group in Google Chat.",
        "properties": {
          "name": {
            "description": "Resource name for a Google Group. Represents a [group](https://cloud.google.com/identity/docs/reference/rest/v1/groups) in Cloud Identity Groups API. Format: groups/{group}",
            "type": "string"
          }
        },
        "type": "object"
      },
      "User": {
        "description": "A user in Google Chat. When returned as an output from a request, if your Chat app [authenticates as a user](https://developers.google.com/chat/api/guides/auth/users), the output for a `User` resource only populates the user's `name` and `type`.",
        "properties": {
          "displayName": {
            "description": "Output only. The user's display name.",
            "readOnly": true,
            "type": "string"
          },
          "domainId": {
            "description": "Unique identifier of the user's Google Workspace domain.",
            "type": "string"
          },
          "isAnonymous": {
            "description": "Output only. When `true`, the user is deleted or their profile is not visible.",
            "readOnly": true,
            "type": "boolean"
          },
          "name": {
            "description": "Resource name for a Google Chat user. Format: `users/{user}`. `users/app` can be used as an alias for the calling app bot user. For human users, `{user}` is the same user identifier as: - the `id` for the [Person](https://developers.google.com/people/api/rest/v1/people) in the People API. For example, `users/123456789` in Chat API represents the same person as the `123456789` Person profile ID in People API. - the `id` for a [user](https://developers.google.com/admin-sdk/directory/reference/rest/v1/users) in the Admin SDK Directory API. - the user's email address can be used as an alias for `{user}` in API requests. For example, if the People API Person profile ID for `user@example.com` is `123456789`, you can use `users/user@example.com` as an alias to reference `users/123456789`. Only the canonical resource name (for example `users/123456789`) will be returned from the API.",
            "type": "string"
          },
          "type": {
            "description": "User type.",
            "enum": [
              "TYPE_UNSPECIFIED",
              "HUMAN",
              "BOT"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "Space": {
        "description": "A space in Google Chat. Spaces are conversations between two or more users or 1:1 messages between a user and a Chat app.",
        "properties": {
          "adminInstalled": {
            "description": "Output only. Whether the Chat app was installed by a Google Workspace administrator. Administrators can install a Chat app for their domain, organizational unit, or a group of users. Administrators can only install Chat apps for direct messaging between users and the app. To support admin install, your app must feature direct messaging.",
            "readOnly": true,
            "type": "boolean"
          },
          "createTime": {
            "description": "Optional. Immutable. For spaces created in Chat, the time the space was created. This field is output only, except when used in import mode spaces. For import mode spaces, set this field to the historical timestamp at which the space was created in the source in order to preserve the original creation time. Only populated in the output when `spaceType` is `GROUP_CHAT` or `SPACE`.",
            "format": "google-datetime",
            "type": "string"
          },
          "displayName": {
            "description": "The space's display name. Required when [creating a space](https://developers.google.com/chat/api/reference/rest/v1/spaces/create). If you receive the error message `ALREADY_EXISTS` when creating a space or updating the `displayName`, try a different `displayName`. An existing space within the Google Workspace organization might already use this display name. For direct messages, this field might be empty. Supports up to 128 characters.",
            "type": "string"
          },
          "externalUserAllowed": {
            "description": "Immutable. Whether this space permits any Google Chat user as a member. Input when creating a space in a Google Workspace organization. Omit this field when creating spaces in the following conditions: * The authenticated user uses a Google Account. By default, the space permits any Google Chat user. * The space is used to [import data to Google Chat] (https://developers.google.com/chat/api/guides/import-data-overview). Import mode spaces must only permit members from the same Google Workspace organization. For existing spaces, this field is output only.",
            "type": "boolean"
          },
          "importMode": {
            "description": "Optional. Whether this space is created in `Import Mode` as part of a data migration into Google Workspace. While spaces are being imported, they aren't visible to users until the import is complete.",
            "type": "boolean"
          },
          "name": {
            "description": "Resource name of the space. Format: `spaces/{space}`",
            "type": "string"
          },
          "singleUserBotDm": {
            "description": "Optional. Whether the space is a DM between a Chat app and a single human.",
            "type": "boolean"
          },
          "spaceDetails": {
            "$ref": "#/$defs/SpaceDetails"
          },
          "spaceHistoryState": {
            "description": "The message history state for messages and threads in this space.",
            "enum": [
              "HISTORY_STATE_UNSPECIFIED",
              "HISTORY_OFF",
              "HISTORY_ON"
            ],
            "type": "string"
          },
          "spaceThreadingState": {
            "description": "Output only. The threading state in the Chat space.",
            "enum": [
              "SPACE_THREADING_STATE_UNSPECIFIED",
              "THREADED_MESSAGES",
              "GROUPED_MESSAGES",
              "UNTHREADED_MESSAGES"
            ],
            "readOnly": true,
            "type": "string"
          },
          "spaceType": {
            "description": "The type of space. Required when creating a space or updating the space type of a space. Output only for other usage.",
            "enum": [
              "SPACE_TYPE_UNSPECIFIED",
              "SPACE",
              "GROUP_CHAT",
              "DIRECT_MESSAGE"
            ],
            "type": "string"
          },
          "threaded": {
            "deprecated": true,
            "description": "Output only. Deprecated: Use `spaceThreadingState` instead. Whether messages are threaded in this space.",
            "readOnly": true,
            "type": "boolean"
          },
          "type": {
            "deprecated": true,
            "description": "Output only. Deprecated: Use `space_type` instead. The type of a space.",
            "enum": [
              "TYPE_UNSPECIFIED",
              "ROOM",
              "DM"
            ],
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "SpaceDetails": {
        "description": "Details about the space including description and rules.",
        "properties": {
          "description": {
            "description": "Optional. A description of the space. For example, describe the space's discussion topic, functional purpose, or participants. Supports up to 150 characters.",
            "type": "string"
          },
          "guidelines": {
            "description": "Optional. The space's rules, expectations, and etiquette. Supports up to 5,000 characters.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://chat.googleapis.com//v1/spaces:setup{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A space in Google Chat. Spaces are conversations between two or more users or 1:1 messages between a user and a Chat app.",
        "**Key properties:**",
        {
          "$ul": [
            "**adminInstalled**: Output only. Whether the Chat app was installed by a Google Workspace administrator. Administrators can install a Chat app for their domain, organizational unit, or a group of users. Administrators can only install Chat apps for direct messaging between users and the app. To support admin install, your app must feature direct messaging.",
            "**createTime**: Optional. Immutable. For spaces created in Chat, the time the space was created. This field is output only, except when used in import mode spaces. For import mode spaces, set this field to the historical timestamp at which the space was created in the source in order to preserve the original creation time. Only populated in the output when `spaceType` is `GROUP_CHAT` or `SPACE`.",
            "**displayName**: The space's display name. Required when [creating a space](https://developers.google.com/chat/api/reference/rest/v1/spaces/create). If you receive the error message `ALREADY_EXISTS` when creating a space or updating the `displayName`, try a different `displayName`. An existing space within the Google Workspace organization might already use this display name. For direct messages, this field might be empty. Supports up to 128 characters.",
            "**externalUserAllowed**: Immutable. Whether this space permits any Google Chat user as a member. Input when creating a space in a Google Workspace organization. Omit this field when creating spaces in the following conditions: * The authenticated user uses a Google Account. By default, the space permits any Google Chat user. * The space is used to [import data to Google Chat] (https://developers.google.com/chat/api/guides/import-data-overview). Import mode spaces must only permit members from the same Google Workspace organization. For existing spaces, this field is output only.",
            "**importMode**: Optional. Whether this space is created in `Import Mode` as part of a data migration into Google Workspace. While spaces are being imported, they aren't visible to users until the import is complete.",
            "**name**: Resource name of the space. Format: `spaces/{space}`",
            "**singleUserBotDm**: Optional. Whether the space is a DM between a Chat app and a single human.",
            [
              "**spaceDetails**: Details about the space including description and rules.",
              {
                "$ul": [
                  "**description**: Optional. A description of the space. For example, describe the space's discussion topic, functional purpose, or participants. Supports up to 150 characters.",
                  "**guidelines**: Optional. The space's rules, expectations, and etiquette. Supports up to 5,000 characters."
                ]
              }
            ],
            "**spaceHistoryState**: The message history state for messages and threads in this space.",
            "**spaceThreadingState**: Output only. The threading state in the Chat space.",
            "**spaceType**: The type of space. Required when creating a space or updating the space type of a space. Output only for other usage.",
            "**threaded**: Output only. Deprecated: Use `spaceThreadingState` instead. Whether messages are threaded in this space.",
            "**type**: Output only. Deprecated: Use `space_type` instead. The type of a space."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
