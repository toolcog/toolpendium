{
  "name": "dns_policies_get",
  "description": "Fetches the representation of an existing Policy.",
  "parameters": {
    "type": "object",
    "properties": {
      "project": {
        "type": "string",
        "description": "Identifies the project addressed by this request."
      },
      "policy": {
        "type": "string",
        "description": "User given friendly name of the policy addressed by this request."
      },
      "clientOperationId": {
        "type": "string",
        "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      }
    },
    "required": [
      "project",
      "policy"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://dns.googleapis.com//dns/v1/projects/{project}/policies/{policy}{?clientOperationId,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A policy is a collection of DNS rules applied to one or more Virtual Private Cloud resources.",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**alternativeNameServerConfig**",
              {
                "$ul": [
                  "**kind** (default: dns#policyAlternativeNameServerConfig)",
                  "**targetNameServers**: Sets an alternative name server for the associated networks. When specified, all DNS queries are forwarded to a name server that you choose. Names such as .internal are not available when an alternative name server is specified."
                ]
              }
            ],
            "**description**: A mutable string of at most 1024 characters associated with this resource for the user's convenience. Has no effect on the policy's function.",
            "**enableInboundForwarding**: Allows networks bound to this policy to receive DNS queries sent by VMs or applications over VPN connections. When enabled, a virtual IP address is allocated from each of the subnetworks that are bound to this policy.",
            "**enableLogging**: Controls whether logging is enabled for the networks bound to this policy. Defaults to no logging if not set.",
            "**id**: Unique identifier for the resource; defined by the server (output only).",
            "**kind** (default: dns#policy)",
            "**name**: User-assigned name for this policy.",
            "**networks**: List of network names specifying networks to which this policy is applied."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
