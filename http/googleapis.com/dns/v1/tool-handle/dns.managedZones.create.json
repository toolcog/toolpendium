{
  "name": "dns_managedZones_create",
  "description": "Creates a new ManagedZone.",
  "parameters": {
    "type": "object",
    "properties": {
      "project": {
        "type": "string",
        "description": "Identifies the project addressed by this request."
      },
      "clientOperationId": {
        "type": "string",
        "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/ManagedZone"
      }
    },
    "required": [
      "project"
    ],
    "$defs": {
      "ManagedZone": {
        "description": "A zone is a subtree of the DNS namespace under one administrative responsibility. A ManagedZone is a resource that represents a DNS zone hosted by the Cloud DNS service.",
        "properties": {
          "cloudLoggingConfig": {
            "$ref": "#/$defs/ManagedZoneCloudLoggingConfig"
          },
          "creationTime": {
            "description": "The time that this resource was created on the server. This is in RFC3339 text format. Output only.",
            "type": "string"
          },
          "description": {
            "description": "A mutable string of at most 1024 characters associated with this resource for the user's convenience. Has no effect on the managed zone's function.",
            "type": "string"
          },
          "dnsName": {
            "description": "The DNS name of this managed zone, for instance \"example.com.\".",
            "type": "string"
          },
          "dnssecConfig": {
            "$ref": "#/$defs/ManagedZoneDnsSecConfig"
          },
          "forwardingConfig": {
            "$ref": "#/$defs/ManagedZoneForwardingConfig"
          },
          "id": {
            "description": "Unique identifier for the resource; defined by the server (output only)",
            "format": "uint64",
            "type": "string"
          },
          "kind": {
            "default": "dns#managedZone",
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "User labels.",
            "type": "object"
          },
          "name": {
            "description": "User assigned name for this resource. Must be unique within the project. The name must be 1-63 characters long, must begin with a letter, end with a letter or digit, and only contain lowercase letters, digits or dashes.",
            "type": "string"
          },
          "nameServerSet": {
            "description": "Optionally specifies the NameServerSet for this ManagedZone. A NameServerSet is a set of DNS name servers that all host the same ManagedZones. Most users leave this field unset. If you need to use this field, contact your account team.",
            "type": "string"
          },
          "nameServers": {
            "description": "Delegate your managed_zone to these virtual name servers; defined by the server (output only)",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "peeringConfig": {
            "$ref": "#/$defs/ManagedZonePeeringConfig"
          },
          "privateVisibilityConfig": {
            "$ref": "#/$defs/ManagedZonePrivateVisibilityConfig"
          },
          "reverseLookupConfig": {
            "$ref": "#/$defs/ManagedZoneReverseLookupConfig"
          },
          "serviceDirectoryConfig": {
            "$ref": "#/$defs/ManagedZoneServiceDirectoryConfig"
          },
          "visibility": {
            "description": "The zone's visibility: public zones are exposed to the Internet, while private zones are visible only to Virtual Private Cloud resources.",
            "enum": [
              "public",
              "private"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "ManagedZoneCloudLoggingConfig": {
        "description": "Cloud Logging configurations for publicly visible zones.",
        "properties": {
          "enableLogging": {
            "description": "If set, enable query logging for this ManagedZone. False by default, making logging opt-in.",
            "type": "boolean"
          },
          "kind": {
            "default": "dns#managedZoneCloudLoggingConfig",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ManagedZoneDnsSecConfig": {
        "properties": {
          "defaultKeySpecs": {
            "description": "Specifies parameters for generating initial DnsKeys for this ManagedZone. Can only be changed while the state is OFF.",
            "items": {
              "$ref": "#/$defs/DnsKeySpec"
            },
            "type": "array"
          },
          "kind": {
            "default": "dns#managedZoneDnsSecConfig",
            "type": "string"
          },
          "nonExistence": {
            "description": "Specifies the mechanism for authenticated denial-of-existence responses. Can only be changed while the state is OFF.",
            "enum": [
              "nsec",
              "nsec3"
            ],
            "type": "string"
          },
          "state": {
            "description": "Specifies whether DNSSEC is enabled, and what mode it is in.",
            "enum": [
              "off",
              "on",
              "transfer"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "DnsKeySpec": {
        "description": "Parameters for DnsKey key generation. Used for generating initial keys for a new ManagedZone and as default when adding a new DnsKey.",
        "properties": {
          "algorithm": {
            "description": "String mnemonic specifying the DNSSEC algorithm of this key.",
            "enum": [
              "rsasha1",
              "rsasha256",
              "rsasha512",
              "ecdsap256sha256",
              "ecdsap384sha384"
            ],
            "type": "string"
          },
          "keyLength": {
            "description": "Length of the keys in bits.",
            "format": "uint32",
            "type": "integer"
          },
          "keyType": {
            "description": "Specifies whether this is a key signing key (KSK) or a zone signing key (ZSK). Key signing keys have the Secure Entry Point flag set and, when active, are only used to sign resource record sets of type DNSKEY. Zone signing keys do not have the Secure Entry Point flag set and are used to sign all other types of resource record sets.",
            "enum": [
              "keySigning",
              "zoneSigning"
            ],
            "type": "string"
          },
          "kind": {
            "default": "dns#dnsKeySpec",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ManagedZoneForwardingConfig": {
        "properties": {
          "kind": {
            "default": "dns#managedZoneForwardingConfig",
            "type": "string"
          },
          "targetNameServers": {
            "description": "List of target name servers to forward to. Cloud DNS selects the best available name server if more than one target is given.",
            "items": {
              "$ref": "#/$defs/ManagedZoneForwardingConfigNameServerTarget"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ManagedZoneForwardingConfigNameServerTarget": {
        "properties": {
          "forwardingPath": {
            "description": "Forwarding path for this NameServerTarget. If unset or set to DEFAULT, Cloud DNS makes forwarding decisions based on IP address ranges; that is, RFC1918 addresses go to the VPC network, non-RFC1918 addresses go to the internet. When set to PRIVATE, Cloud DNS always sends queries through the VPC network for this target.",
            "enum": [
              "default",
              "private"
            ],
            "type": "string"
          },
          "ipv4Address": {
            "description": "IPv4 address of a target name server.",
            "type": "string"
          },
          "ipv6Address": {
            "description": "IPv6 address of a target name server. Does not accept both fields (ipv4 & ipv6) being populated. Public preview as of November 2022.",
            "type": "string"
          },
          "kind": {
            "default": "dns#managedZoneForwardingConfigNameServerTarget",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ManagedZonePeeringConfig": {
        "properties": {
          "kind": {
            "default": "dns#managedZonePeeringConfig",
            "type": "string"
          },
          "targetNetwork": {
            "$ref": "#/$defs/ManagedZonePeeringConfigTargetNetwork"
          }
        },
        "type": "object"
      },
      "ManagedZonePeeringConfigTargetNetwork": {
        "properties": {
          "deactivateTime": {
            "description": "The time at which the zone was deactivated, in RFC 3339 date-time format. An empty string indicates that the peering connection is active. The producer network can deactivate a zone. The zone is automatically deactivated if the producer network that the zone targeted is deleted. Output only.",
            "type": "string"
          },
          "kind": {
            "default": "dns#managedZonePeeringConfigTargetNetwork",
            "type": "string"
          },
          "networkUrl": {
            "description": "The fully qualified URL of the VPC network to forward queries to. This should be formatted like https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ManagedZonePrivateVisibilityConfig": {
        "properties": {
          "gkeClusters": {
            "description": "The list of Google Kubernetes Engine clusters that can see this zone.",
            "items": {
              "$ref": "#/$defs/ManagedZonePrivateVisibilityConfigGKECluster"
            },
            "type": "array"
          },
          "kind": {
            "default": "dns#managedZonePrivateVisibilityConfig",
            "type": "string"
          },
          "networks": {
            "description": "The list of VPC networks that can see this zone.",
            "items": {
              "$ref": "#/$defs/ManagedZonePrivateVisibilityConfigNetwork"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ManagedZonePrivateVisibilityConfigGKECluster": {
        "properties": {
          "gkeClusterName": {
            "description": "The resource name of the cluster to bind this ManagedZone to. This should be specified in the format like: projects/*/locations/*/clusters/*. This is referenced from GKE projects.locations.clusters.get API: https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters/get",
            "type": "string"
          },
          "kind": {
            "default": "dns#managedZonePrivateVisibilityConfigGKECluster",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ManagedZonePrivateVisibilityConfigNetwork": {
        "properties": {
          "kind": {
            "default": "dns#managedZonePrivateVisibilityConfigNetwork",
            "type": "string"
          },
          "networkUrl": {
            "description": "The fully qualified URL of the VPC network to bind to. Format this URL like https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ManagedZoneReverseLookupConfig": {
        "properties": {
          "kind": {
            "default": "dns#managedZoneReverseLookupConfig",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ManagedZoneServiceDirectoryConfig": {
        "description": "Contains information about Service Directory-backed zones.",
        "properties": {
          "kind": {
            "default": "dns#managedZoneServiceDirectoryConfig",
            "type": "string"
          },
          "namespace": {
            "$ref": "#/$defs/ManagedZoneServiceDirectoryConfigNamespace"
          }
        },
        "type": "object"
      },
      "ManagedZoneServiceDirectoryConfigNamespace": {
        "properties": {
          "deletionTime": {
            "description": "The time that the namespace backing this zone was deleted; an empty string if it still exists. This is in RFC3339 text format. Output only.",
            "type": "string"
          },
          "kind": {
            "default": "dns#managedZoneServiceDirectoryConfigNamespace",
            "type": "string"
          },
          "namespaceUrl": {
            "description": "The fully qualified URL of the namespace associated with the zone. Format must be https://servicedirectory.googleapis.com/v1/projects/{project}/locations/{location}/namespaces/{namespace}",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://dns.googleapis.com//dns/v1/projects/{project}/managedZones{?clientOperationId,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A zone is a subtree of the DNS namespace under one administrative responsibility. A ManagedZone is a resource that represents a DNS zone hosted by the Cloud DNS service.",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**cloudLoggingConfig**: Cloud Logging configurations for publicly visible zones.",
              {
                "$ul": [
                  "**enableLogging**: If set, enable query logging for this ManagedZone. False by default, making logging opt-in.",
                  "**kind** (default: dns#managedZoneCloudLoggingConfig)"
                ]
              }
            ],
            "**creationTime**: The time that this resource was created on the server. This is in RFC3339 text format. Output only.",
            "**description**: A mutable string of at most 1024 characters associated with this resource for the user's convenience. Has no effect on the managed zone's function.",
            "**dnsName**: The DNS name of this managed zone, for instance \"example.com.\".",
            [
              "**dnssecConfig**",
              {
                "$ul": [
                  "**defaultKeySpecs**: Specifies parameters for generating initial DnsKeys for this ManagedZone. Can only be changed while the state is OFF.",
                  "**kind** (default: dns#managedZoneDnsSecConfig)",
                  "**nonExistence**: Specifies the mechanism for authenticated denial-of-existence responses. Can only be changed while the state is OFF.",
                  "**state**: Specifies whether DNSSEC is enabled, and what mode it is in."
                ]
              }
            ],
            [
              "**forwardingConfig**",
              {
                "$ul": [
                  "**kind** (default: dns#managedZoneForwardingConfig)",
                  "**targetNameServers**: List of target name servers to forward to. Cloud DNS selects the best available name server if more than one target is given."
                ]
              }
            ],
            "**id**: Unique identifier for the resource; defined by the server (output only)",
            "**kind** (default: dns#managedZone)",
            "**labels**: User labels.",
            "**name**: User assigned name for this resource. Must be unique within the project. The name must be 1-63 characters long, must begin with a letter, end with a letter or digit, and only contain lowercase letters, digits or dashes.",
            "**nameServerSet**: Optionally specifies the NameServerSet for this ManagedZone. A NameServerSet is a set of DNS name servers that all host the same ManagedZones. Most users leave this field unset. If you need to use this field, contact your account team.",
            "**nameServers**: Delegate your managed_zone to these virtual name servers; defined by the server (output only)",
            [
              "**peeringConfig**",
              {
                "$ul": [
                  "**kind** (default: dns#managedZonePeeringConfig)",
                  [
                    "**targetNetwork**",
                    {
                      "$ul": [
                        "**deactivateTime**: The time at which the zone was deactivated, in RFC 3339 date-time format. An empty string indicates that the peering connection is active. The producer network can deactivate a zone. The zone is automatically deactivated if the producer network that the zone targeted is deleted. Output only.",
                        "**kind** (default: dns#managedZonePeeringConfigTargetNetwork)",
                        "**networkUrl**: The fully qualified URL of the VPC network to forward queries to. This should be formatted like https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}"
                      ]
                    }
                  ]
                ]
              }
            ],
            [
              "**privateVisibilityConfig**",
              {
                "$ul": [
                  "**gkeClusters**: The list of Google Kubernetes Engine clusters that can see this zone.",
                  "**kind** (default: dns#managedZonePrivateVisibilityConfig)",
                  "**networks**: The list of VPC networks that can see this zone."
                ]
              }
            ],
            [
              "**reverseLookupConfig**",
              {
                "$ul": [
                  "**kind** (default: dns#managedZoneReverseLookupConfig)"
                ]
              }
            ],
            [
              "**serviceDirectoryConfig**: Contains information about Service Directory-backed zones.",
              {
                "$ul": [
                  "**kind** (default: dns#managedZoneServiceDirectoryConfig)",
                  [
                    "**namespace**",
                    {
                      "$ul": [
                        "**deletionTime**: The time that the namespace backing this zone was deleted; an empty string if it still exists. This is in RFC3339 text format. Output only.",
                        "**kind** (default: dns#managedZoneServiceDirectoryConfigNamespace)",
                        "**namespaceUrl**: The fully qualified URL of the namespace associated with the zone. Format must be https://servicedirectory.googleapis.com/v1/projects/{project}/locations/{location}/namespaces/{namespace}"
                      ]
                    }
                  ]
                ]
              }
            ],
            "**visibility**: The zone's visibility: public zones are exposed to the Internet, while private zones are visible only to Virtual Private Cloud resources."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
