{
  "name": "dns_projects_get",
  "description": "Fetches the representation of an existing Project.",
  "parameters": {
    "type": "object",
    "properties": {
      "project": {
        "type": "string",
        "description": "Identifies the project addressed by this request."
      },
      "clientOperationId": {
        "type": "string",
        "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      }
    },
    "required": [
      "project"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://dns.googleapis.com//dns/v1beta2/projects/{project}{?clientOperationId,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A project resource. The project is a top level container for resources including Cloud DNS ManagedZones. Projects can be created only in the APIs console. Next tag: 7.",
        "**Key properties:**",
        {
          "$ul": [
            "**id**: User assigned unique identifier for the resource (output only).",
            "**kind** (default: dns#project)",
            "**number**: Unique numeric identifier for the resource; defined by the server (output only).",
            [
              "**quota**: Limits associated with a Project.",
              {
                "$ul": [
                  "**dnsKeysPerManagedZone**: Maximum allowed number of DnsKeys per ManagedZone.",
                  "**gkeClustersPerManagedZone**: Maximum allowed number of GKE clusters to which a privately scoped zone can be attached.",
                  "**gkeClustersPerPolicy**: Maximum allowed number of GKE clusters per policy.",
                  "**gkeClustersPerResponsePolicy**: Maximum allowed number of GKE clusters per response policy.",
                  "**itemsPerRoutingPolicy**: Maximum allowed number of items per routing policy.",
                  "**kind** (default: dns#quota)",
                  "**managedZones**: Maximum allowed number of managed zones in the project.",
                  "**managedZonesPerGkeCluster**: Maximum allowed number of managed zones which can be attached to a GKE cluster.",
                  "**managedZonesPerNetwork**: Maximum allowed number of managed zones which can be attached to a network.",
                  "**nameserversPerDelegation**: Maximum number of nameservers per delegation, meant to prevent abuse",
                  "**networksPerManagedZone**: Maximum allowed number of networks to which a privately scoped zone can be attached.",
                  "**networksPerPolicy**: Maximum allowed number of networks per policy.",
                  "**networksPerResponsePolicy**: Maximum allowed number of networks per response policy.",
                  "**peeringZonesPerTargetNetwork**: Maximum allowed number of consumer peering zones per target network owned by this producer project",
                  "**policies**: Maximum allowed number of policies per project.",
                  "**resourceRecordsPerRrset**: Maximum allowed number of ResourceRecords per ResourceRecordSet.",
                  "**responsePolicies**: Maximum allowed number of response policies per project.",
                  "**responsePolicyRulesPerResponsePolicy**: Maximum allowed number of rules per response policy.",
                  "**rrsetAdditionsPerChange**: Maximum allowed number of ResourceRecordSets to add per ChangesCreateRequest.",
                  "**rrsetDeletionsPerChange**: Maximum allowed number of ResourceRecordSets to delete per ChangesCreateRequest.",
                  "**rrsetsPerManagedZone**: Maximum allowed number of ResourceRecordSets per zone in the project.",
                  "**targetNameServersPerManagedZone**: Maximum allowed number of target name servers per managed forwarding zone.",
                  "**targetNameServersPerPolicy**: Maximum allowed number of alternative target name servers per policy.",
                  "**totalRrdataSizePerChange**: Maximum allowed size for total rrdata in one ChangesCreateRequest in bytes.",
                  "**whitelistedKeySpecs**: DNSSEC algorithm and key length types that can be used for DnsKeys."
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
