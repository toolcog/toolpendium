{
  "name": "youtube_playlistItems_update",
  "description": "Updates an existing resource.",
  "parameters": {
    "type": "object",
    "properties": {
      "part": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "The *part* parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include. Note that this method will override the existing values for all of the mutable properties that are contained in any parts that the parameter value specifies. For example, a playlist item can specify a start time and end time, which identify the times portion of the video that should play when users watch the video in the playlist. If your request is updating a playlist item that sets these values, and the request's part parameter value includes the contentDetails part, the playlist item's start and end times will be updated to whatever value the request body specifies. If the request body does not specify values, the existing start and end times will be removed and replaced with the default settings."
      },
      "onBehalfOfContentOwner": {
        "type": "string",
        "description": "*Note:* This parameter is intended exclusively for YouTube content partners. The *onBehalfOfContentOwner* parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/PlaylistItem"
      }
    },
    "required": [
      "part"
    ],
    "$defs": {
      "PlaylistItem": {
        "description": "A *playlistItem* resource identifies another resource, such as a video, that is included in a playlist. In addition, the playlistItem resource contains details about the included resource that pertain specifically to how that resource is used in that playlist. YouTube uses playlists to identify special collections of videos for a channel, such as: - uploaded videos - favorite videos - positively rated (liked) videos - watch history - watch later To be more specific, these lists are associated with a channel, which is a collection of a person, group, or company's videos, playlists, and other YouTube information. You can retrieve the playlist IDs for each of these lists from the channel resource for a given channel. You can then use the playlistItems.list method to retrieve any of those lists. You can also add or remove items from those lists by calling the playlistItems.insert and playlistItems.delete methods. For example, if a user gives a positive rating to a video, you would insert that video into the liked videos playlist for that user's channel.",
        "properties": {
          "contentDetails": {
            "$ref": "#/$defs/PlaylistItemContentDetails"
          },
          "etag": {
            "description": "Etag of this resource.",
            "type": "string"
          },
          "id": {
            "description": "The ID that YouTube uses to uniquely identify the playlist item.",
            "type": "string"
          },
          "kind": {
            "default": "youtube#playlistItem",
            "description": "Identifies what kind of resource this is. Value: the fixed string \"youtube#playlistItem\".",
            "type": "string"
          },
          "snippet": {
            "$ref": "#/$defs/PlaylistItemSnippet"
          },
          "status": {
            "$ref": "#/$defs/PlaylistItemStatus"
          }
        },
        "type": "object"
      },
      "PlaylistItemContentDetails": {
        "properties": {
          "endAt": {
            "deprecated": true,
            "description": "The time, measured in seconds from the start of the video, when the video should stop playing. (The playlist owner can specify the times when the video should start and stop playing when the video is played in the context of the playlist.) By default, assume that the video.endTime is the end of the video.",
            "type": "string"
          },
          "note": {
            "description": "A user-generated note for this item.",
            "type": "string"
          },
          "startAt": {
            "deprecated": true,
            "description": "The time, measured in seconds from the start of the video, when the video should start playing. (The playlist owner can specify the times when the video should start and stop playing when the video is played in the context of the playlist.) The default value is 0.",
            "type": "string"
          },
          "videoId": {
            "description": "The ID that YouTube uses to uniquely identify a video. To retrieve the video resource, set the id query parameter to this value in your API request.",
            "type": "string"
          },
          "videoPublishedAt": {
            "description": "The date and time that the video was published to YouTube.",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PlaylistItemSnippet": {
        "description": "Basic details about a playlist, including title, description and thumbnails. Basic details of a YouTube Playlist item provided by the author. Next ID: 15",
        "properties": {
          "channelId": {
            "description": "The ID that YouTube uses to uniquely identify the user that added the item to the playlist.",
            "type": "string"
          },
          "channelTitle": {
            "description": "Channel title for the channel that the playlist item belongs to.",
            "type": "string"
          },
          "description": {
            "description": "The item's description.",
            "type": "string"
          },
          "playlistId": {
            "description": "The ID that YouTube uses to uniquely identify thGe playlist that the playlist item is in.",
            "type": "string"
          },
          "position": {
            "description": "The order in which the item appears in the playlist. The value uses a zero-based index, so the first item has a position of 0, the second item has a position of 1, and so forth.",
            "format": "uint32",
            "type": "integer"
          },
          "publishedAt": {
            "description": "The date and time that the item was added to the playlist.",
            "format": "date-time",
            "type": "string"
          },
          "resourceId": {
            "$ref": "#/$defs/ResourceId"
          },
          "thumbnails": {
            "$ref": "#/$defs/ThumbnailDetails"
          },
          "title": {
            "description": "The item's title.",
            "type": "string"
          },
          "videoOwnerChannelId": {
            "description": "Channel id for the channel this video belongs to.",
            "type": "string"
          },
          "videoOwnerChannelTitle": {
            "description": "Channel title for the channel this video belongs to.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResourceId": {
        "description": "A resource id is a generic reference that points to another YouTube resource.",
        "properties": {
          "channelId": {
            "description": "The ID that YouTube uses to uniquely identify the referred resource, if that resource is a channel. This property is only present if the resourceId.kind value is youtube#channel.",
            "type": "string"
          },
          "kind": {
            "description": "The type of the API resource.",
            "type": "string"
          },
          "playlistId": {
            "description": "The ID that YouTube uses to uniquely identify the referred resource, if that resource is a playlist. This property is only present if the resourceId.kind value is youtube#playlist.",
            "type": "string"
          },
          "videoId": {
            "description": "The ID that YouTube uses to uniquely identify the referred resource, if that resource is a video. This property is only present if the resourceId.kind value is youtube#video.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ThumbnailDetails": {
        "description": "Internal representation of thumbnails for a YouTube resource.",
        "properties": {
          "high": {
            "$ref": "#/$defs/Thumbnail"
          },
          "maxres": {
            "$ref": "#/$defs/Thumbnail"
          },
          "medium": {
            "$ref": "#/$defs/Thumbnail"
          },
          "standard": {
            "$ref": "#/$defs/Thumbnail"
          }
        },
        "type": "object"
      },
      "Thumbnail": {
        "description": "A thumbnail is an image representing a YouTube resource.",
        "properties": {
          "height": {
            "description": "(Optional) Height of the thumbnail image.",
            "format": "uint32",
            "type": "integer"
          },
          "url": {
            "description": "The thumbnail image's URL.",
            "type": "string"
          },
          "width": {
            "description": "(Optional) Width of the thumbnail image.",
            "format": "uint32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "PlaylistItemStatus": {
        "description": "Information about the playlist item's privacy status.",
        "properties": {
          "privacyStatus": {
            "description": "This resource's privacy status.",
            "enum": [
              "public",
              "unlisted",
              "private"
            ],
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "https://youtube.googleapis.com//youtube/v3/playlistItems{?part,onBehalfOfContentOwner,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A *playlistItem* resource identifies another resource, such as a video, that is included in a playlist. In addition, the playlistItem resource contains details about the included resource that pertain specifically to how that resource is used in that playlist. YouTube uses playlists to identify special collections of videos for a channel, such as: - uploaded videos - favorite videos - positively rated (liked) videos - watch history - watch later To be more specific, these lists are associated with a channel, which is a collection of a person, group, or company's videos, playlists, and other YouTube information. You can retrieve the playlist IDs for each of these lists from the channel resource for a given channel. You can then use the playlistItems.list method to retrieve any of those lists. You can also add or remove items from those lists by calling the playlistItems.insert and playlistItems.delete methods. For example, if a user gives a positive rating to a video, you would insert that video into the liked videos playlist for that user's channel.",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**contentDetails**",
              {
                "$ul": [
                  "**endAt**: The time, measured in seconds from the start of the video, when the video should stop playing. (The playlist owner can specify the times when the video should start and stop playing when the video is played in the context of the playlist.) By default, assume that the video.endTime is the end of the video.",
                  "**note**: A user-generated note for this item.",
                  "**startAt**: The time, measured in seconds from the start of the video, when the video should start playing. (The playlist owner can specify the times when the video should start and stop playing when the video is played in the context of the playlist.) The default value is 0.",
                  "**videoId**: The ID that YouTube uses to uniquely identify a video. To retrieve the video resource, set the id query parameter to this value in your API request.",
                  "**videoPublishedAt**: The date and time that the video was published to YouTube."
                ]
              }
            ],
            "**etag**: Etag of this resource.",
            "**id**: The ID that YouTube uses to uniquely identify the playlist item.",
            "**kind**: Identifies what kind of resource this is. Value: the fixed string \"youtube#playlistItem\". (default: youtube#playlistItem)",
            [
              "**snippet**: Basic details about a playlist, including title, description and thumbnails. Basic details of a YouTube Playlist item provided by the author. Next ID: 15",
              {
                "$ul": [
                  "**channelId**: The ID that YouTube uses to uniquely identify the user that added the item to the playlist.",
                  "**channelTitle**: Channel title for the channel that the playlist item belongs to.",
                  "**description**: The item's description.",
                  "**playlistId**: The ID that YouTube uses to uniquely identify thGe playlist that the playlist item is in.",
                  "**position**: The order in which the item appears in the playlist. The value uses a zero-based index, so the first item has a position of 0, the second item has a position of 1, and so forth.",
                  "**publishedAt**: The date and time that the item was added to the playlist.",
                  [
                    "**resourceId**: A resource id is a generic reference that points to another YouTube resource.",
                    {
                      "$ul": [
                        "**channelId**: The ID that YouTube uses to uniquely identify the referred resource, if that resource is a channel. This property is only present if the resourceId.kind value is youtube#channel.",
                        "**kind**: The type of the API resource.",
                        "**playlistId**: The ID that YouTube uses to uniquely identify the referred resource, if that resource is a playlist. This property is only present if the resourceId.kind value is youtube#playlist.",
                        "**videoId**: The ID that YouTube uses to uniquely identify the referred resource, if that resource is a video. This property is only present if the resourceId.kind value is youtube#video."
                      ]
                    }
                  ],
                  [
                    "**thumbnails**: Internal representation of thumbnails for a YouTube resource.",
                    {
                      "$ul": [
                        [
                          "**high**: A thumbnail is an image representing a YouTube resource.",
                          {
                            "$ul": [
                              "**height**: (Optional) Height of the thumbnail image.",
                              "**url**: The thumbnail image's URL.",
                              "**width**: (Optional) Width of the thumbnail image."
                            ]
                          }
                        ],
                        [
                          "**maxres**: A thumbnail is an image representing a YouTube resource.",
                          {
                            "$ul": [
                              "**height**: (Optional) Height of the thumbnail image.",
                              "**url**: The thumbnail image's URL.",
                              "**width**: (Optional) Width of the thumbnail image."
                            ]
                          }
                        ],
                        [
                          "**medium**: A thumbnail is an image representing a YouTube resource.",
                          {
                            "$ul": [
                              "**height**: (Optional) Height of the thumbnail image.",
                              "**url**: The thumbnail image's URL.",
                              "**width**: (Optional) Width of the thumbnail image."
                            ]
                          }
                        ],
                        [
                          "**standard**: A thumbnail is an image representing a YouTube resource.",
                          {
                            "$ul": [
                              "**height**: (Optional) Height of the thumbnail image.",
                              "**url**: The thumbnail image's URL.",
                              "**width**: (Optional) Width of the thumbnail image."
                            ]
                          }
                        ]
                      ]
                    }
                  ],
                  "**title**: The item's title.",
                  "**videoOwnerChannelId**: Channel id for the channel this video belongs to.",
                  "**videoOwnerChannelTitle**: Channel title for the channel this video belongs to."
                ]
              }
            ],
            [
              "**status**: Information about the playlist item's privacy status.",
              {
                "$ul": [
                  "**privacyStatus**: This resource's privacy status."
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
