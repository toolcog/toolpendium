{
  "name": "youtube_comments_update",
  "description": "Updates an existing resource.",
  "parameters": {
    "type": "object",
    "properties": {
      "part": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "The *part* parameter identifies the properties that the API response will include. You must at least include the snippet part in the parameter value since that part contains all of the properties that the API request can update."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/Comment"
      }
    },
    "required": [
      "part"
    ],
    "$defs": {
      "Comment": {
        "description": "A *comment* represents a single YouTube comment.",
        "properties": {
          "etag": {
            "description": "Etag of this resource.",
            "type": "string"
          },
          "id": {
            "description": "The ID that YouTube uses to uniquely identify the comment.",
            "type": "string"
          },
          "kind": {
            "default": "youtube#comment",
            "description": "Identifies what kind of resource this is. Value: the fixed string \"youtube#comment\".",
            "type": "string"
          },
          "snippet": {
            "$ref": "#/$defs/CommentSnippet"
          }
        },
        "type": "object"
      },
      "CommentSnippet": {
        "description": "Basic details about a comment, such as its author and text.",
        "properties": {
          "authorChannelId": {
            "$ref": "#/$defs/CommentSnippetAuthorChannelId"
          },
          "authorChannelUrl": {
            "description": "Link to the author's YouTube channel, if any.",
            "type": "string"
          },
          "authorDisplayName": {
            "description": "The name of the user who posted the comment.",
            "type": "string"
          },
          "authorProfileImageUrl": {
            "description": "The URL for the avatar of the user who posted the comment.",
            "type": "string"
          },
          "canRate": {
            "description": "Whether the current viewer can rate this comment.",
            "type": "boolean"
          },
          "channelId": {
            "description": "The id of the corresponding YouTube channel. In case of a channel comment this is the channel the comment refers to. In case of a video comment it's the video's channel.",
            "type": "string"
          },
          "likeCount": {
            "description": "The total number of likes this comment has received.",
            "format": "uint32",
            "type": "integer"
          },
          "moderationStatus": {
            "description": "The comment's moderation status. Will not be set if the comments were requested through the id filter.",
            "enum": [
              "published",
              "heldForReview",
              "likelySpam",
              "rejected"
            ],
            "type": "string"
          },
          "parentId": {
            "description": "The unique id of the parent comment, only set for replies.",
            "type": "string"
          },
          "publishedAt": {
            "description": "The date and time when the comment was originally published.",
            "format": "date-time",
            "type": "string"
          },
          "textDisplay": {
            "description": "The comment's text. The format is either plain text or HTML dependent on what has been requested. Even the plain text representation may differ from the text originally posted in that it may replace video links with video titles etc.",
            "type": "string"
          },
          "textOriginal": {
            "description": "The comment's original raw text as initially posted or last updated. The original text will only be returned if it is accessible to the viewer, which is only guaranteed if the viewer is the comment's author.",
            "type": "string"
          },
          "updatedAt": {
            "description": "The date and time when the comment was last updated.",
            "format": "date-time",
            "type": "string"
          },
          "videoId": {
            "description": "The ID of the video the comment refers to, if any.",
            "type": "string"
          },
          "viewerRating": {
            "description": "The rating the viewer has given to this comment. For the time being this will never return RATE_TYPE_DISLIKE and instead return RATE_TYPE_NONE. This may change in the future.",
            "enum": [
              "none",
              "like",
              "dislike"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "CommentSnippetAuthorChannelId": {
        "description": "The id of the author's YouTube channel, if any.",
        "properties": {
          "value": {
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "https://youtube.googleapis.com//youtube/v3/comments{?part,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A *comment* represents a single YouTube comment.",
        "**Key properties:**",
        {
          "$ul": [
            "**etag**: Etag of this resource.",
            "**id**: The ID that YouTube uses to uniquely identify the comment.",
            "**kind**: Identifies what kind of resource this is. Value: the fixed string \"youtube#comment\". (default: youtube#comment)",
            [
              "**snippet**: Basic details about a comment, such as its author and text.",
              {
                "$ul": [
                  [
                    "**authorChannelId**: The id of the author's YouTube channel, if any.",
                    {
                      "$ul": [
                        "**value**"
                      ]
                    }
                  ],
                  "**authorChannelUrl**: Link to the author's YouTube channel, if any.",
                  "**authorDisplayName**: The name of the user who posted the comment.",
                  "**authorProfileImageUrl**: The URL for the avatar of the user who posted the comment.",
                  "**canRate**: Whether the current viewer can rate this comment.",
                  "**channelId**: The id of the corresponding YouTube channel. In case of a channel comment this is the channel the comment refers to. In case of a video comment it's the video's channel.",
                  "**likeCount**: The total number of likes this comment has received.",
                  "**moderationStatus**: The comment's moderation status. Will not be set if the comments were requested through the id filter.",
                  "**parentId**: The unique id of the parent comment, only set for replies.",
                  "**publishedAt**: The date and time when the comment was originally published.",
                  "**textDisplay**: The comment's text. The format is either plain text or HTML dependent on what has been requested. Even the plain text representation may differ from the text originally posted in that it may replace video links with video titles etc.",
                  "**textOriginal**: The comment's original raw text as initially posted or last updated. The original text will only be returned if it is accessible to the viewer, which is only guaranteed if the viewer is the comment's author.",
                  "**updatedAt**: The date and time when the comment was last updated.",
                  "**videoId**: The ID of the video the comment refers to, if any.",
                  "**viewerRating**: The rating the viewer has given to this comment. For the time being this will never return RATE_TYPE_DISLIKE and instead return RATE_TYPE_NONE. This may change in the future."
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
