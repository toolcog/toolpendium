{
  "name": "youtube_channels_update",
  "description": "Updates an existing resource.",
  "parameters": {
    "type": "object",
    "properties": {
      "part": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "The *part* parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include. The API currently only allows the parameter value to be set to either brandingSettings or invideoPromotion. (You cannot update both of those parts with a single request.) Note that this method overrides the existing values for all of the mutable properties that are contained in any parts that the parameter value specifies."
      },
      "onBehalfOfContentOwner": {
        "type": "string",
        "description": "The *onBehalfOfContentOwner* parameter indicates that the authenticated user is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The actual CMS account that the user authenticates with needs to be linked to the specified YouTube content owner."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/Channel"
      }
    },
    "required": [
      "part"
    ],
    "$defs": {
      "Channel": {
        "description": "A *channel* resource contains information about a YouTube channel.",
        "properties": {
          "auditDetails": {
            "$ref": "#/$defs/ChannelAuditDetails"
          },
          "brandingSettings": {
            "$ref": "#/$defs/ChannelBrandingSettings"
          },
          "contentDetails": {
            "$ref": "#/$defs/ChannelContentDetails"
          },
          "contentOwnerDetails": {
            "$ref": "#/$defs/ChannelContentOwnerDetails"
          },
          "conversionPings": {
            "$ref": "#/$defs/ChannelConversionPings"
          },
          "etag": {
            "description": "Etag of this resource.",
            "type": "string"
          },
          "id": {
            "description": "The ID that YouTube uses to uniquely identify the channel.",
            "type": "string"
          },
          "kind": {
            "default": "youtube#channel",
            "description": "Identifies what kind of resource this is. Value: the fixed string \"youtube#channel\".",
            "type": "string"
          },
          "localizations": {
            "additionalProperties": {
              "$ref": "#/$defs/ChannelLocalization"
            },
            "description": "Localizations for different languages",
            "type": "object"
          },
          "snippet": {
            "$ref": "#/$defs/ChannelSnippet"
          },
          "statistics": {
            "$ref": "#/$defs/ChannelStatistics"
          },
          "status": {
            "$ref": "#/$defs/ChannelStatus"
          },
          "topicDetails": {
            "$ref": "#/$defs/ChannelTopicDetails"
          }
        },
        "type": "object"
      },
      "ChannelAuditDetails": {
        "description": "The auditDetails object encapsulates channel data that is relevant for YouTube Partners during the audit process.",
        "properties": {
          "communityGuidelinesGoodStanding": {
            "description": "Whether or not the channel respects the community guidelines.",
            "type": "boolean"
          },
          "contentIdClaimsGoodStanding": {
            "description": "Whether or not the channel has any unresolved claims.",
            "type": "boolean"
          },
          "copyrightStrikesGoodStanding": {
            "description": "Whether or not the channel has any copyright strikes.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ChannelBrandingSettings": {
        "description": "Branding properties of a YouTube channel.",
        "properties": {
          "channel": {
            "$ref": "#/$defs/ChannelSettings"
          },
          "hints": {
            "deprecated": true,
            "description": "Additional experimental branding properties.",
            "items": {
              "$ref": "#/$defs/PropertyValue"
            },
            "type": "array"
          },
          "image": {
            "$ref": "#/$defs/ImageSettings"
          },
          "watch": {
            "$ref": "#/$defs/WatchSettings"
          }
        },
        "type": "object"
      },
      "ChannelSettings": {
        "description": "Branding properties for the channel view.",
        "properties": {
          "country": {
            "description": "The country of the channel.",
            "type": "string"
          },
          "defaultLanguage": {
            "type": "string"
          },
          "defaultTab": {
            "deprecated": true,
            "description": "Which content tab users should see when viewing the channel.",
            "type": "string"
          },
          "description": {
            "description": "Specifies the channel description.",
            "type": "string"
          },
          "featuredChannelsTitle": {
            "deprecated": true,
            "description": "Title for the featured channels tab.",
            "type": "string"
          },
          "featuredChannelsUrls": {
            "deprecated": true,
            "description": "The list of featured channels.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "keywords": {
            "description": "Lists keywords associated with the channel, comma-separated.",
            "type": "string"
          },
          "moderateComments": {
            "description": "Whether user-submitted comments left on the channel page need to be approved by the channel owner to be publicly visible.",
            "type": "boolean"
          },
          "profileColor": {
            "deprecated": true,
            "description": "A prominent color that can be rendered on this channel page.",
            "type": "string"
          },
          "showBrowseView": {
            "deprecated": true,
            "description": "Whether the tab to browse the videos should be displayed.",
            "type": "boolean"
          },
          "showRelatedChannels": {
            "deprecated": true,
            "description": "Whether related channels should be proposed.",
            "type": "boolean"
          },
          "title": {
            "description": "Specifies the channel title.",
            "type": "string"
          },
          "trackingAnalyticsAccountId": {
            "description": "The ID for a Google Analytics account to track and measure traffic to the channels.",
            "type": "string"
          },
          "unsubscribedTrailer": {
            "description": "The trailer of the channel, for users that are not subscribers.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PropertyValue": {
        "description": "A pair Property / Value.",
        "properties": {
          "property": {
            "description": "A property.",
            "type": "string"
          },
          "value": {
            "description": "The property's value.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ImageSettings": {
        "description": "Branding properties for images associated with the channel.",
        "properties": {
          "backgroundImageUrl": {
            "$ref": "#/$defs/LocalizedProperty"
          },
          "bannerExternalUrl": {
            "description": "This is generated when a ChannelBanner.Insert request has succeeded for the given channel.",
            "type": "string"
          },
          "bannerImageUrl": {
            "deprecated": true,
            "description": "Banner image. Desktop size (1060x175).",
            "type": "string"
          },
          "bannerMobileExtraHdImageUrl": {
            "deprecated": true,
            "description": "Banner image. Mobile size high resolution (1440x395).",
            "type": "string"
          },
          "bannerMobileHdImageUrl": {
            "deprecated": true,
            "description": "Banner image. Mobile size high resolution (1280x360).",
            "type": "string"
          },
          "bannerMobileImageUrl": {
            "deprecated": true,
            "description": "Banner image. Mobile size (640x175).",
            "type": "string"
          },
          "bannerMobileLowImageUrl": {
            "deprecated": true,
            "description": "Banner image. Mobile size low resolution (320x88).",
            "type": "string"
          },
          "bannerMobileMediumHdImageUrl": {
            "deprecated": true,
            "description": "Banner image. Mobile size medium/high resolution (960x263).",
            "type": "string"
          },
          "bannerTabletExtraHdImageUrl": {
            "deprecated": true,
            "description": "Banner image. Tablet size extra high resolution (2560x424).",
            "type": "string"
          },
          "bannerTabletHdImageUrl": {
            "deprecated": true,
            "description": "Banner image. Tablet size high resolution (2276x377).",
            "type": "string"
          },
          "bannerTabletImageUrl": {
            "deprecated": true,
            "description": "Banner image. Tablet size (1707x283).",
            "type": "string"
          },
          "bannerTabletLowImageUrl": {
            "deprecated": true,
            "description": "Banner image. Tablet size low resolution (1138x188).",
            "type": "string"
          },
          "bannerTvHighImageUrl": {
            "deprecated": true,
            "description": "Banner image. TV size high resolution (1920x1080).",
            "type": "string"
          },
          "bannerTvImageUrl": {
            "deprecated": true,
            "description": "Banner image. TV size extra high resolution (2120x1192).",
            "type": "string"
          },
          "bannerTvLowImageUrl": {
            "deprecated": true,
            "description": "Banner image. TV size low resolution (854x480).",
            "type": "string"
          },
          "bannerTvMediumImageUrl": {
            "deprecated": true,
            "description": "Banner image. TV size medium resolution (1280x720).",
            "type": "string"
          },
          "largeBrandedBannerImageImapScript": {
            "$ref": "#/$defs/LocalizedProperty"
          },
          "largeBrandedBannerImageUrl": {
            "$ref": "#/$defs/LocalizedProperty"
          },
          "smallBrandedBannerImageImapScript": {
            "$ref": "#/$defs/LocalizedProperty"
          },
          "smallBrandedBannerImageUrl": {
            "$ref": "#/$defs/LocalizedProperty"
          },
          "trackingImageUrl": {
            "deprecated": true,
            "description": "The URL for a 1px by 1px tracking pixel that can be used to collect statistics for views of the channel or video pages.",
            "type": "string"
          },
          "watchIconImageUrl": {
            "deprecated": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "LocalizedProperty": {
        "properties": {
          "defaultLanguage": {
            "$ref": "#/$defs/LanguageTag"
          },
          "localized": {
            "items": {
              "$ref": "#/$defs/LocalizedString"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "LanguageTag": {
        "properties": {
          "value": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "LocalizedString": {
        "properties": {
          "language": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "WatchSettings": {
        "description": "Branding properties for the watch. All deprecated.",
        "properties": {
          "backgroundColor": {
            "description": "The text color for the video watch page's branded area.",
            "type": "string"
          },
          "featuredPlaylistId": {
            "description": "An ID that uniquely identifies a playlist that displays next to the video player.",
            "type": "string"
          },
          "textColor": {
            "description": "The background color for the video watch page's branded area.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ChannelContentDetails": {
        "description": "Details about the content of a channel.",
        "properties": {
          "relatedPlaylists": {
            "properties": {
              "favorites": {
                "deprecated": true,
                "description": "The ID of the playlist that contains the channel\"s favorite videos. Use the playlistItems.insert and playlistItems.delete to add or remove items from that list.",
                "type": "string"
              },
              "likes": {
                "description": "The ID of the playlist that contains the channel\"s liked videos. Use the playlistItems.insert and playlistItems.delete to add or remove items from that list.",
                "type": "string"
              },
              "uploads": {
                "description": "The ID of the playlist that contains the channel\"s uploaded videos. Use the videos.insert method to upload new videos and the videos.delete method to delete previously uploaded videos.",
                "type": "string"
              },
              "watchHistory": {
                "deprecated": true,
                "description": "The ID of the playlist that contains the channel\"s watch history. Use the playlistItems.insert and playlistItems.delete to add or remove items from that list.",
                "type": "string"
              },
              "watchLater": {
                "deprecated": true,
                "description": "The ID of the playlist that contains the channel\"s watch later playlist. Use the playlistItems.insert and playlistItems.delete to add or remove items from that list.",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "ChannelContentOwnerDetails": {
        "description": "The contentOwnerDetails object encapsulates channel data that is relevant for YouTube Partners linked with the channel.",
        "properties": {
          "contentOwner": {
            "description": "The ID of the content owner linked to the channel.",
            "type": "string"
          },
          "timeLinked": {
            "description": "The date and time when the channel was linked to the content owner.",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ChannelConversionPings": {
        "description": "The conversionPings object encapsulates information about conversion pings that need to be respected by the channel.",
        "properties": {
          "pings": {
            "description": "Pings that the app shall fire (authenticated by biscotti cookie). Each ping has a context, in which the app must fire the ping, and a url identifying the ping.",
            "items": {
              "$ref": "#/$defs/ChannelConversionPing"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ChannelConversionPing": {
        "description": "Pings that the app shall fire (authenticated by biscotti cookie). Each ping has a context, in which the app must fire the ping, and a url identifying the ping.",
        "properties": {
          "context": {
            "description": "Defines the context of the ping.",
            "enum": [
              "subscribe",
              "unsubscribe",
              "cview"
            ],
            "type": "string"
          },
          "conversionUrl": {
            "description": "The url (without the schema) that the player shall send the ping to. It's at caller's descretion to decide which schema to use (http vs https) Example of a returned url: //googleads.g.doubleclick.net/pagead/ viewthroughconversion/962985656/?data=path%3DtHe_path%3Btype%3D cview%3Butuid%3DGISQtTNGYqaYl4sKxoVvKA&labe=default The caller must append biscotti authentication (ms param in case of mobile, for example) to this ping.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ChannelLocalization": {
        "description": "Channel localization setting",
        "properties": {
          "description": {
            "description": "The localized strings for channel's description.",
            "type": "string"
          },
          "title": {
            "description": "The localized strings for channel's title.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ChannelSnippet": {
        "description": "Basic details about a channel, including title, description and thumbnails.",
        "properties": {
          "country": {
            "description": "The country of the channel.",
            "type": "string"
          },
          "customUrl": {
            "description": "The custom url of the channel.",
            "type": "string"
          },
          "defaultLanguage": {
            "description": "The language of the channel's default title and description.",
            "type": "string"
          },
          "description": {
            "description": "The description of the channel.",
            "type": "string"
          },
          "localized": {
            "$ref": "#/$defs/ChannelLocalization"
          },
          "publishedAt": {
            "description": "The date and time that the channel was created.",
            "format": "date-time",
            "type": "string"
          },
          "thumbnails": {
            "$ref": "#/$defs/ThumbnailDetails"
          },
          "title": {
            "description": "The channel's title.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ThumbnailDetails": {
        "description": "Internal representation of thumbnails for a YouTube resource.",
        "properties": {
          "high": {
            "$ref": "#/$defs/Thumbnail"
          },
          "maxres": {
            "$ref": "#/$defs/Thumbnail"
          },
          "medium": {
            "$ref": "#/$defs/Thumbnail"
          },
          "standard": {
            "$ref": "#/$defs/Thumbnail"
          }
        },
        "type": "object"
      },
      "Thumbnail": {
        "description": "A thumbnail is an image representing a YouTube resource.",
        "properties": {
          "height": {
            "description": "(Optional) Height of the thumbnail image.",
            "format": "uint32",
            "type": "integer"
          },
          "url": {
            "description": "The thumbnail image's URL.",
            "type": "string"
          },
          "width": {
            "description": "(Optional) Width of the thumbnail image.",
            "format": "uint32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ChannelStatistics": {
        "description": "Statistics about a channel: number of subscribers, number of videos in the channel, etc.",
        "properties": {
          "commentCount": {
            "description": "The number of comments for the channel.",
            "format": "uint64",
            "type": "string"
          },
          "hiddenSubscriberCount": {
            "description": "Whether or not the number of subscribers is shown for this user.",
            "type": "boolean"
          },
          "subscriberCount": {
            "description": "The number of subscribers that the channel has.",
            "format": "uint64",
            "type": "string"
          },
          "videoCount": {
            "description": "The number of videos uploaded to the channel.",
            "format": "uint64",
            "type": "string"
          },
          "viewCount": {
            "description": "The number of times the channel has been viewed.",
            "format": "uint64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ChannelStatus": {
        "description": "JSON template for the status part of a channel.",
        "properties": {
          "isLinked": {
            "description": "If true, then the user is linked to either a YouTube username or G+ account. Otherwise, the user doesn't have a public YouTube identity.",
            "type": "boolean"
          },
          "longUploadsStatus": {
            "description": "The long uploads status of this channel. See https://support.google.com/youtube/answer/71673 for more information.",
            "enum": [
              "longUploadsUnspecified",
              "allowed",
              "eligible",
              "disallowed"
            ],
            "type": "string"
          },
          "madeForKids": {
            "type": "boolean"
          },
          "privacyStatus": {
            "description": "Privacy status of the channel.",
            "enum": [
              "public",
              "unlisted",
              "private"
            ],
            "type": "string"
          },
          "selfDeclaredMadeForKids": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ChannelTopicDetails": {
        "description": "Freebase topic information related to the channel.",
        "properties": {
          "topicCategories": {
            "description": "A list of Wikipedia URLs that describe the channel's content.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "topicIds": {
            "deprecated": true,
            "description": "A list of Freebase topic IDs associated with the channel. You can retrieve information about each topic using the Freebase Topic API.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "https://youtube.googleapis.com//youtube/v3/channels{?part,onBehalfOfContentOwner,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A *channel* resource contains information about a YouTube channel.",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**auditDetails**: The auditDetails object encapsulates channel data that is relevant for YouTube Partners during the audit process.",
              {
                "$ul": [
                  "**communityGuidelinesGoodStanding**: Whether or not the channel respects the community guidelines.",
                  "**contentIdClaimsGoodStanding**: Whether or not the channel has any unresolved claims.",
                  "**copyrightStrikesGoodStanding**: Whether or not the channel has any copyright strikes."
                ]
              }
            ],
            [
              "**brandingSettings**: Branding properties of a YouTube channel.",
              {
                "$ul": [
                  [
                    "**channel**: Branding properties for the channel view.",
                    {
                      "$ul": [
                        "**country**: The country of the channel.",
                        "**defaultLanguage**",
                        "**defaultTab**: Which content tab users should see when viewing the channel.",
                        "**description**: Specifies the channel description.",
                        "**featuredChannelsTitle**: Title for the featured channels tab.",
                        "**featuredChannelsUrls**: The list of featured channels.",
                        "**keywords**: Lists keywords associated with the channel, comma-separated.",
                        "**moderateComments**: Whether user-submitted comments left on the channel page need to be approved by the channel owner to be publicly visible.",
                        "**profileColor**: A prominent color that can be rendered on this channel page.",
                        "**showBrowseView**: Whether the tab to browse the videos should be displayed.",
                        "**showRelatedChannels**: Whether related channels should be proposed.",
                        "**title**: Specifies the channel title.",
                        "**trackingAnalyticsAccountId**: The ID for a Google Analytics account to track and measure traffic to the channels.",
                        "**unsubscribedTrailer**: The trailer of the channel, for users that are not subscribers."
                      ]
                    }
                  ],
                  "**hints**: Additional experimental branding properties.",
                  [
                    "**image**: Branding properties for images associated with the channel.",
                    {
                      "$ul": [
                        [
                          "**backgroundImageUrl**",
                          {
                            "$ul": [
                              [
                                "**defaultLanguage**",
                                {
                                  "$ul": [
                                    "**value**"
                                  ]
                                }
                              ],
                              "**localized**"
                            ]
                          }
                        ],
                        "**bannerExternalUrl**: This is generated when a ChannelBanner.Insert request has succeeded for the given channel.",
                        "**bannerImageUrl**: Banner image. Desktop size (1060x175).",
                        "**bannerMobileExtraHdImageUrl**: Banner image. Mobile size high resolution (1440x395).",
                        "**bannerMobileHdImageUrl**: Banner image. Mobile size high resolution (1280x360).",
                        "**bannerMobileImageUrl**: Banner image. Mobile size (640x175).",
                        "**bannerMobileLowImageUrl**: Banner image. Mobile size low resolution (320x88).",
                        "**bannerMobileMediumHdImageUrl**: Banner image. Mobile size medium/high resolution (960x263).",
                        "**bannerTabletExtraHdImageUrl**: Banner image. Tablet size extra high resolution (2560x424).",
                        "**bannerTabletHdImageUrl**: Banner image. Tablet size high resolution (2276x377).",
                        "**bannerTabletImageUrl**: Banner image. Tablet size (1707x283).",
                        "**bannerTabletLowImageUrl**: Banner image. Tablet size low resolution (1138x188).",
                        "**bannerTvHighImageUrl**: Banner image. TV size high resolution (1920x1080).",
                        "**bannerTvImageUrl**: Banner image. TV size extra high resolution (2120x1192).",
                        "**bannerTvLowImageUrl**: Banner image. TV size low resolution (854x480).",
                        "**bannerTvMediumImageUrl**: Banner image. TV size medium resolution (1280x720).",
                        [
                          "**largeBrandedBannerImageImapScript**",
                          {
                            "$ul": [
                              [
                                "**defaultLanguage**",
                                {
                                  "$ul": [
                                    "**value**"
                                  ]
                                }
                              ],
                              "**localized**"
                            ]
                          }
                        ],
                        [
                          "**largeBrandedBannerImageUrl**",
                          {
                            "$ul": [
                              [
                                "**defaultLanguage**",
                                {
                                  "$ul": [
                                    "**value**"
                                  ]
                                }
                              ],
                              "**localized**"
                            ]
                          }
                        ],
                        [
                          "**smallBrandedBannerImageImapScript**",
                          {
                            "$ul": [
                              [
                                "**defaultLanguage**",
                                {
                                  "$ul": [
                                    "**value**"
                                  ]
                                }
                              ],
                              "**localized**"
                            ]
                          }
                        ],
                        [
                          "**smallBrandedBannerImageUrl**",
                          {
                            "$ul": [
                              [
                                "**defaultLanguage**",
                                {
                                  "$ul": [
                                    "**value**"
                                  ]
                                }
                              ],
                              "**localized**"
                            ]
                          }
                        ],
                        "**trackingImageUrl**: The URL for a 1px by 1px tracking pixel that can be used to collect statistics for views of the channel or video pages.",
                        "**watchIconImageUrl**"
                      ]
                    }
                  ],
                  [
                    "**watch**: Branding properties for the watch. All deprecated.",
                    {
                      "$ul": [
                        "**backgroundColor**: The text color for the video watch page's branded area.",
                        "**featuredPlaylistId**: An ID that uniquely identifies a playlist that displays next to the video player.",
                        "**textColor**: The background color for the video watch page's branded area."
                      ]
                    }
                  ]
                ]
              }
            ],
            [
              "**contentDetails**: Details about the content of a channel.",
              {
                "$ul": [
                  [
                    "**relatedPlaylists**",
                    {
                      "$ul": [
                        "**favorites**: The ID of the playlist that contains the channel\"s favorite videos. Use the playlistItems.insert and playlistItems.delete to add or remove items from that list.",
                        "**likes**: The ID of the playlist that contains the channel\"s liked videos. Use the playlistItems.insert and playlistItems.delete to add or remove items from that list.",
                        "**uploads**: The ID of the playlist that contains the channel\"s uploaded videos. Use the videos.insert method to upload new videos and the videos.delete method to delete previously uploaded videos.",
                        "**watchHistory**: The ID of the playlist that contains the channel\"s watch history. Use the playlistItems.insert and playlistItems.delete to add or remove items from that list.",
                        "**watchLater**: The ID of the playlist that contains the channel\"s watch later playlist. Use the playlistItems.insert and playlistItems.delete to add or remove items from that list."
                      ]
                    }
                  ]
                ]
              }
            ],
            [
              "**contentOwnerDetails**: The contentOwnerDetails object encapsulates channel data that is relevant for YouTube Partners linked with the channel.",
              {
                "$ul": [
                  "**contentOwner**: The ID of the content owner linked to the channel.",
                  "**timeLinked**: The date and time when the channel was linked to the content owner."
                ]
              }
            ],
            [
              "**conversionPings**: The conversionPings object encapsulates information about conversion pings that need to be respected by the channel.",
              {
                "$ul": [
                  "**pings**: Pings that the app shall fire (authenticated by biscotti cookie). Each ping has a context, in which the app must fire the ping, and a url identifying the ping."
                ]
              }
            ],
            "**etag**: Etag of this resource.",
            "**id**: The ID that YouTube uses to uniquely identify the channel.",
            "**kind**: Identifies what kind of resource this is. Value: the fixed string \"youtube#channel\". (default: youtube#channel)",
            "**localizations**: Localizations for different languages",
            [
              "**snippet**: Basic details about a channel, including title, description and thumbnails.",
              {
                "$ul": [
                  "**country**: The country of the channel.",
                  "**customUrl**: The custom url of the channel.",
                  "**defaultLanguage**: The language of the channel's default title and description.",
                  "**description**: The description of the channel.",
                  [
                    "**localized**: Channel localization setting",
                    {
                      "$ul": [
                        "**description**: The localized strings for channel's description.",
                        "**title**: The localized strings for channel's title."
                      ]
                    }
                  ],
                  "**publishedAt**: The date and time that the channel was created.",
                  [
                    "**thumbnails**: Internal representation of thumbnails for a YouTube resource.",
                    {
                      "$ul": [
                        [
                          "**high**: A thumbnail is an image representing a YouTube resource.",
                          {
                            "$ul": [
                              "**height**: (Optional) Height of the thumbnail image.",
                              "**url**: The thumbnail image's URL.",
                              "**width**: (Optional) Width of the thumbnail image."
                            ]
                          }
                        ],
                        [
                          "**maxres**: A thumbnail is an image representing a YouTube resource.",
                          {
                            "$ul": [
                              "**height**: (Optional) Height of the thumbnail image.",
                              "**url**: The thumbnail image's URL.",
                              "**width**: (Optional) Width of the thumbnail image."
                            ]
                          }
                        ],
                        [
                          "**medium**: A thumbnail is an image representing a YouTube resource.",
                          {
                            "$ul": [
                              "**height**: (Optional) Height of the thumbnail image.",
                              "**url**: The thumbnail image's URL.",
                              "**width**: (Optional) Width of the thumbnail image."
                            ]
                          }
                        ],
                        [
                          "**standard**: A thumbnail is an image representing a YouTube resource.",
                          {
                            "$ul": [
                              "**height**: (Optional) Height of the thumbnail image.",
                              "**url**: The thumbnail image's URL.",
                              "**width**: (Optional) Width of the thumbnail image."
                            ]
                          }
                        ]
                      ]
                    }
                  ],
                  "**title**: The channel's title."
                ]
              }
            ],
            [
              "**statistics**: Statistics about a channel: number of subscribers, number of videos in the channel, etc.",
              {
                "$ul": [
                  "**commentCount**: The number of comments for the channel.",
                  "**hiddenSubscriberCount**: Whether or not the number of subscribers is shown for this user.",
                  "**subscriberCount**: The number of subscribers that the channel has.",
                  "**videoCount**: The number of videos uploaded to the channel.",
                  "**viewCount**: The number of times the channel has been viewed."
                ]
              }
            ],
            [
              "**status**: JSON template for the status part of a channel.",
              {
                "$ul": [
                  "**isLinked**: If true, then the user is linked to either a YouTube username or G+ account. Otherwise, the user doesn't have a public YouTube identity.",
                  "**longUploadsStatus**: The long uploads status of this channel. See https://support.google.com/youtube/answer/71673 for more information.",
                  "**madeForKids**",
                  "**privacyStatus**: Privacy status of the channel.",
                  "**selfDeclaredMadeForKids**"
                ]
              }
            ],
            [
              "**topicDetails**: Freebase topic information related to the channel.",
              {
                "$ul": [
                  "**topicCategories**: A list of Wikipedia URLs that describe the channel's content.",
                  "**topicIds**: A list of Freebase topic IDs associated with the channel. You can retrieve information about each topic using the Freebase Topic API."
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
