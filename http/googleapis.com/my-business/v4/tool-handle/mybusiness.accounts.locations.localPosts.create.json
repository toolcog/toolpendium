{
  "name": "mybusiness_accounts_locations_localPosts_create",
  "description": "Creates a new local post associated with the specified location, and returns it.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "The name of the location in which to create this local post."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/LocalPost"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "LocalPost": {
        "description": "Represents a [local post](https://support.google.com/business/answer/7662907) for a location.",
        "properties": {
          "alertType": {
            "description": "The type of alert the post is created for. This field is only applicable for posts of topic_type Alert, and behaves as a sub-type of Alerts.",
            "enum": [
              "ALERT_TYPE_UNSPECIFIED",
              "COVID_19"
            ],
            "type": "string"
          },
          "callToAction": {
            "$ref": "#/$defs/CallToAction"
          },
          "createTime": {
            "description": "Output only. Time of the creation of the post.",
            "format": "google-datetime",
            "type": "string"
          },
          "event": {
            "$ref": "#/$defs/LocalPostEvent"
          },
          "languageCode": {
            "description": "The language of the local post.",
            "type": "string"
          },
          "media": {
            "description": "The media associated with the post. source_url is the only supported data field for a LocalPost MediaItem.",
            "items": {
              "$ref": "#/$defs/MediaItem"
            },
            "type": "array"
          },
          "name": {
            "description": "Output only. Google identifier for this local post in the form: `accounts/{account_id}/locations/{location_id}/localPosts/{local_post_id}`",
            "type": "string"
          },
          "offer": {
            "$ref": "#/$defs/LocalPostOffer"
          },
          "searchUrl": {
            "description": "Output only. The link to the local post in Google search. This link can be used to share the post via social media, email, text, etc.",
            "type": "string"
          },
          "state": {
            "description": "Output only. The state of the post, indicating what part of its lifecycle it is in.",
            "enum": [
              "LOCAL_POST_STATE_UNSPECIFIED",
              "REJECTED",
              "LIVE",
              "PROCESSING"
            ],
            "type": "string"
          },
          "summary": {
            "description": "Description/body of the local post.",
            "type": "string"
          },
          "topicType": {
            "description": "Required. The topic type of the post: standard, event, offer, or alert.",
            "enum": [
              "LOCAL_POST_TOPIC_TYPE_UNSPECIFIED",
              "STANDARD",
              "EVENT",
              "OFFER",
              "ALERT"
            ],
            "type": "string"
          },
          "updateTime": {
            "description": "Output only. Time of the last modification of the post made by the user.",
            "format": "google-datetime",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CallToAction": {
        "description": "An action that is performed when the user clicks through the post",
        "properties": {
          "actionType": {
            "description": "The type of action that will be performed.",
            "enum": [
              "ACTION_TYPE_UNSPECIFIED",
              "BOOK",
              "ORDER",
              "SHOP",
              "LEARN_MORE",
              "SIGN_UP",
              "GET_OFFER",
              "CALL"
            ],
            "type": "string"
          },
          "url": {
            "description": "The URL the user will be directed to upon clicking. This field should be left unset for Call CTA.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "LocalPostEvent": {
        "description": "All the information pertaining to an event featured in a local post.",
        "properties": {
          "schedule": {
            "$ref": "#/$defs/TimeInterval"
          },
          "title": {
            "description": "Name of the event.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "TimeInterval": {
        "description": "An interval of time, inclusive. It must contain all fields to be valid.",
        "properties": {
          "endDate": {
            "$ref": "#/$defs/Date"
          },
          "endTime": {
            "$ref": "#/$defs/TimeOfDay"
          },
          "startDate": {
            "$ref": "#/$defs/Date"
          },
          "startTime": {
            "$ref": "#/$defs/TimeOfDay"
          }
        },
        "type": "object"
      },
      "Date": {
        "description": "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values * A month and day value, with a zero year, such as an anniversary * A year on its own, with zero month and day values * A year and month value, with a zero day, such as a credit card expiration date Related types are google.type.TimeOfDay and `google.protobuf.Timestamp`.",
        "properties": {
          "day": {
            "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
            "format": "int32",
            "type": "integer"
          },
          "month": {
            "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
            "format": "int32",
            "type": "integer"
          },
          "year": {
            "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TimeOfDay": {
        "description": "Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.",
        "properties": {
          "hours": {
            "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \"24:00:00\" for scenarios like business closing time.",
            "format": "int32",
            "type": "integer"
          },
          "minutes": {
            "description": "Minutes of hour of day. Must be from 0 to 59.",
            "format": "int32",
            "type": "integer"
          },
          "nanos": {
            "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.",
            "format": "int32",
            "type": "integer"
          },
          "seconds": {
            "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "MediaItem": {
        "description": "A single media item.",
        "properties": {
          "attribution": {
            "$ref": "#/$defs/Attribution"
          },
          "createTime": {
            "description": "Output only. Creation time of this media item.",
            "format": "google-datetime",
            "type": "string"
          },
          "dataRef": {
            "$ref": "#/$defs/MediaItemDataRef"
          },
          "description": {
            "description": "Description for this media item. Descriptions cannot be modified through the Google My Business API, but can be set when creating a new media item that is not a cover photo.",
            "type": "string"
          },
          "dimensions": {
            "$ref": "#/$defs/Dimensions"
          },
          "googleUrl": {
            "description": "Output only. Google-hosted URL for this media item. This URL is not static since it may change over time. For video this will be a preview image with an overlaid play icon.",
            "type": "string"
          },
          "insights": {
            "$ref": "#/$defs/MediaInsights"
          },
          "locationAssociation": {
            "$ref": "#/$defs/LocationAssociation"
          },
          "mediaFormat": {
            "description": "The format of this media item. Must be set when the media item is created, and is read-only on all other requests. Cannot be updated.",
            "enum": [
              "MEDIA_FORMAT_UNSPECIFIED",
              "PHOTO",
              "VIDEO"
            ],
            "type": "string"
          },
          "name": {
            "description": "The resource name for this media item. `accounts/{account_id}/locations/{location_id}/media/{media_key}`",
            "type": "string"
          },
          "sourceUrl": {
            "description": "A publicly accessible URL where the media item can be retrieved from. When creating one of this or data_ref must be set to specify the source of the media item. If `source_url` was used when creating a media item, it will be populated with that source URL when the media item is retrieved. This field cannot be updated.",
            "type": "string"
          },
          "thumbnailUrl": {
            "description": "Output only. Where provided, the URL of a thumbnail image for this media item.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Attribution": {
        "description": "Attribution information for customer media items, such as the contributor's name and profile picture.",
        "properties": {
          "profileName": {
            "description": "The user name to attribute the media item to.",
            "type": "string"
          },
          "profilePhotoUrl": {
            "description": "URL of the attributed user's profile photo thumbnail.",
            "type": "string"
          },
          "profileUrl": {
            "description": "The URL of the attributed user's Google Maps profile page.",
            "type": "string"
          },
          "takedownUrl": {
            "description": "The URL of the takedown page, where the media item can be reported if it is inappropriate.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MediaItemDataRef": {
        "description": "Reference to the photo binary data of a `MediaItem` uploaded through the Google My Business API. Create a data ref using StartUploadMediaItemData, and use this ref when uploading bytes to [UpdateMedia] and subsequently calling CreateMediaItem.",
        "properties": {
          "resourceName": {
            "description": "The unique ID for this media item's binary data. Used to upload the photo data with [UpdateMedia] and when creating a new media item from those bytes with CreateMediaItem. Example of uploading bytes: `curl -X POST -T{path_to_file} \"http://mybusiness.googleapis.com/upload/v1/media/{resource_name}?upload_type=media\"` For CreateMediaItem calls, set this as the `MediaItem` `data_ref`.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Dimensions": {
        "description": "Dimensions of the media item.",
        "properties": {
          "heightPixels": {
            "description": "Height of the media item, in pixels.",
            "format": "int32",
            "type": "integer"
          },
          "widthPixels": {
            "description": "Width of the media item, in pixels.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "MediaInsights": {
        "description": "Insights and statistics for the media item.",
        "properties": {
          "viewCount": {
            "description": "Output only. The number of times the media item has been viewed.",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "LocationAssociation": {
        "description": "How the media item is associated with its location.",
        "properties": {
          "category": {
            "description": "The category that this location photo belongs to.",
            "enum": [
              "CATEGORY_UNSPECIFIED",
              "COVER",
              "PROFILE",
              "LOGO",
              "EXTERIOR",
              "INTERIOR",
              "PRODUCT",
              "AT_WORK",
              "FOOD_AND_DRINK",
              "MENU",
              "COMMON_AREA",
              "ROOMS",
              "TEAMS",
              "ADDITIONAL"
            ],
            "type": "string"
          },
          "priceListItemId": {
            "description": "The ID of a price list item that this location photo is associated with.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "LocalPostOffer": {
        "description": "Specific fields for offer posts.",
        "properties": {
          "couponCode": {
            "description": "Optional. Offer code that is usable in store or online.",
            "type": "string"
          },
          "redeemOnlineUrl": {
            "description": "Optional. Online link to redeem offer.",
            "type": "string"
          },
          "termsConditions": {
            "description": "Optional. Offer terms and conditions.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://mybusiness.googleapis.com//v4/{parent}/localPosts{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Represents a [local post](https://support.google.com/business/answer/7662907) for a location.",
        "**Key properties:**",
        {
          "$ul": [
            "**alertType**: The type of alert the post is created for. This field is only applicable for posts of topic_type Alert, and behaves as a sub-type of Alerts.",
            [
              "**callToAction**: An action that is performed when the user clicks through the post",
              {
                "$ul": [
                  "**actionType**: The type of action that will be performed.",
                  "**url**: The URL the user will be directed to upon clicking. This field should be left unset for Call CTA."
                ]
              }
            ],
            "**createTime**: Output only. Time of the creation of the post.",
            [
              "**event**: All the information pertaining to an event featured in a local post.",
              {
                "$ul": [
                  [
                    "**schedule**: An interval of time, inclusive. It must contain all fields to be valid.",
                    {
                      "$ul": [
                        [
                          "**endDate**: Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values * A month and day value, with a zero year, such as an anniversary * A year on its own, with zero month and day values * A year and month value, with a zero day, such as a credit card expiration date Related types are google.type.TimeOfDay and `google.protobuf.Timestamp`.",
                          {
                            "$ul": [
                              "**day**: Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
                              "**month**: Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
                              "**year**: Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year."
                            ]
                          }
                        ],
                        [
                          "**endTime**: Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.",
                          {
                            "$ul": [
                              "**hours**: Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \"24:00:00\" for scenarios like business closing time.",
                              "**minutes**: Minutes of hour of day. Must be from 0 to 59.",
                              "**nanos**: Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.",
                              "**seconds**: Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds."
                            ]
                          }
                        ],
                        [
                          "**startDate**: Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values * A month and day value, with a zero year, such as an anniversary * A year on its own, with zero month and day values * A year and month value, with a zero day, such as a credit card expiration date Related types are google.type.TimeOfDay and `google.protobuf.Timestamp`.",
                          {
                            "$ul": [
                              "**day**: Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
                              "**month**: Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
                              "**year**: Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year."
                            ]
                          }
                        ],
                        [
                          "**startTime**: Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.",
                          {
                            "$ul": [
                              "**hours**: Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \"24:00:00\" for scenarios like business closing time.",
                              "**minutes**: Minutes of hour of day. Must be from 0 to 59.",
                              "**nanos**: Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.",
                              "**seconds**: Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds."
                            ]
                          }
                        ]
                      ]
                    }
                  ],
                  "**title**: Name of the event."
                ]
              }
            ],
            "**languageCode**: The language of the local post.",
            "**media**: The media associated with the post. source_url is the only supported data field for a LocalPost MediaItem.",
            "**name**: Output only. Google identifier for this local post in the form: `accounts/{account_id}/locations/{location_id}/localPosts/{local_post_id}`",
            [
              "**offer**: Specific fields for offer posts.",
              {
                "$ul": [
                  "**couponCode**: Optional. Offer code that is usable in store or online.",
                  "**redeemOnlineUrl**: Optional. Online link to redeem offer.",
                  "**termsConditions**: Optional. Offer terms and conditions."
                ]
              }
            ],
            "**searchUrl**: Output only. The link to the local post in Google search. This link can be used to share the post via social media, email, text, etc.",
            "**state**: Output only. The state of the post, indicating what part of its lifecycle it is in.",
            "**summary**: Description/body of the local post.",
            "**topicType**: Required. The topic type of the post: standard, event, offer, or alert.",
            "**updateTime**: Output only. Time of the last modification of the post made by the user."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
