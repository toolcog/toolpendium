{
  "name": "mybusiness_accounts_create",
  "description": "Creates an account with the specified name and type under the given parent. - Personal accounts and Organizations cannot be created. - User Groups cannot be created with a Personal account as primary owner. - Location Groups cannot be created with a primary owner of a Personal account if the Personal account is in an Organization. - Location Groups cannot own Location Groups. ",
  "parameters": {
    "type": "object",
    "properties": {
      "primaryOwner": {
        "type": "string",
        "description": "The resource name of the account which will be the primary owner of the account being created. It should be of the form `accounts/{account_id}/`."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/Account"
      }
    },
    "$defs": {
      "Account": {
        "description": "An account is a container for your business's locations. If you are the only user who manages locations for your business, you can use your personal Google Account. To share management of locations with multiple users, [create a business account] (https://support.google.com/business/answer/6085339?ref_topic=6085325).",
        "properties": {
          "accountName": {
            "description": "The name of the account. *Note:* For an account with AccountType `PERSONAL`, this is the first and last name of the user account.",
            "type": "string"
          },
          "accountNumber": {
            "description": "Account reference number if provisioned.",
            "type": "string"
          },
          "name": {
            "description": "The resource name, in the format `accounts/{account_id}`.",
            "type": "string"
          },
          "organizationInfo": {
            "$ref": "#/$defs/OrganizationInfo"
          },
          "permissionLevel": {
            "description": "Output only. Specifies the PermissionLevel the caller has for this account.",
            "enum": [
              "PERMISSION_LEVEL_UNSPECIFIED",
              "OWNER_LEVEL",
              "MEMBER_LEVEL"
            ],
            "type": "string"
          },
          "role": {
            "description": "Output only. Specifies the AccountRole the caller has for this account.",
            "enum": [
              "ACCOUNT_ROLE_UNSPECIFIED",
              "OWNER",
              "CO_OWNER",
              "MANAGER",
              "COMMUNITY_MANAGER"
            ],
            "type": "string"
          },
          "state": {
            "$ref": "#/$defs/AccountState"
          },
          "type": {
            "description": "Output only. Specifies the AccountType of this account.",
            "enum": [
              "ACCOUNT_TYPE_UNSPECIFIED",
              "PERSONAL",
              "LOCATION_GROUP",
              "USER_GROUP",
              "ORGANIZATION"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "OrganizationInfo": {
        "description": "Additional Info stored for an organization.",
        "properties": {
          "phoneNumber": {
            "description": "The contact number for the organization.",
            "type": "string"
          },
          "postalAddress": {
            "$ref": "#/$defs/PostalAddress"
          },
          "registeredDomain": {
            "description": "The registered domain for the account.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PostalAddress": {
        "description": "Represents a postal address, e.g. for postal delivery or payments addresses. Given a postal address, a postal service can deliver items to a premise, P.O. Box or similar. It is not intended to model geographical locations (roads, towns, mountains). In typical usage an address would be created via user input or from importing existing data, depending on the type of process. Advice on address input / editing: - Use an i18n-ready address widget such as https://github.com/google/libaddressinput) - Users should not be presented with UI elements for input or editing of fields outside countries where that field is used. For more guidance on how to use this schema, please see: https://support.google.com/business/answer/6397478",
        "properties": {
          "addressLines": {
            "description": "Unstructured address lines describing the lower levels of an address. Because values in address_lines do not have type information and may sometimes contain multiple values in a single field (e.g. \"Austin, TX\"), it is important that the line order is clear. The order of address lines should be \"envelope order\" for the country/region of the address. In places where this can vary (e.g. Japan), address_language is used to make it explicit (e.g. \"ja\" for large-to-small ordering and \"ja-Latn\" or \"en\" for small-to-large). This way, the most specific line of an address can be selected based on the language. The minimum permitted structural representation of an address consists of a region_code with all remaining information placed in the address_lines. It would be possible to format such an address very approximately without geocoding, but no semantic reasoning could be made about any of the address components until it was at least partially resolved. Creating an address only containing a region_code and address_lines, and then geocoding is the recommended way to handle completely unstructured addresses (as opposed to guessing which parts of the address should be localities or administrative areas).",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "administrativeArea": {
            "description": "Optional. Highest administrative subdivision which is used for postal addresses of a country or region. For example, this can be a state, a province, an oblast, or a prefecture. Specifically, for Spain this is the province and not the autonomous community (e.g. \"Barcelona\" and not \"Catalonia\"). Many countries don't use an administrative area in postal addresses. E.g. in Switzerland this should be left unpopulated.",
            "type": "string"
          },
          "languageCode": {
            "description": "Optional. BCP-47 language code of the contents of this address (if known). This is often the UI language of the input form or is expected to match one of the languages used in the address' country/region, or their transliterated equivalents. This can affect formatting in certain countries, but is not critical to the correctness of the data and will never affect any validation or other non-formatting related operations. If this value is not known, it should be omitted (rather than specifying a possibly incorrect default). Examples: \"zh-Hant\", \"ja\", \"ja-Latn\", \"en\".",
            "type": "string"
          },
          "locality": {
            "description": "Optional. Generally refers to the city/town portion of the address. Examples: US city, IT comune, UK post town. In regions of the world where localities are not well defined or do not fit into this structure well, leave locality empty and use address_lines.",
            "type": "string"
          },
          "organization": {
            "description": "Optional. The name of the organization at the address.",
            "type": "string"
          },
          "postalCode": {
            "description": "Optional. Postal code of the address. Not all countries use or require postal codes to be present, but where they are used, they may trigger additional validation with other parts of the address (e.g. state/zip validation in the U.S.A.).",
            "type": "string"
          },
          "recipients": {
            "description": "Optional. The recipient at the address. This field may, under certain circumstances, contain multiline information. For example, it might contain \"care of\" information.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "regionCode": {
            "description": "Required. CLDR region code of the country/region of the address. This is never inferred and it is up to the user to ensure the value is correct. See http://cldr.unicode.org/ and http://www.unicode.org/cldr/charts/30/supplemental/territory_information.html for details. Example: \"CH\" for Switzerland.",
            "type": "string"
          },
          "revision": {
            "description": "The schema revision of the `PostalAddress`. This must be set to 0, which is the latest revision. All new revisions **must** be backward compatible with old revisions.",
            "format": "int32",
            "type": "integer"
          },
          "sortingCode": {
            "description": "Optional. Additional, country-specific, sorting code. This is not used in most regions. Where it is used, the value is either a string like \"CEDEX\", optionally followed by a number (e.g. \"CEDEX 7\"), or just a number alone, representing the \"sector code\" (Jamaica), \"delivery area indicator\" (Malawi) or \"post office indicator\" (e.g. Côte d'Ivoire).",
            "type": "string"
          },
          "sublocality": {
            "description": "Optional. Sublocality of the address. For example, this can be neighborhoods, boroughs, districts.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AccountState": {
        "description": "Indicates status of the account, such as whether the account has been verified by Google.",
        "properties": {
          "status": {
            "description": "If verified, future locations that are created are automatically connected to Google Maps, and have Google+ pages created, without requiring moderation.",
            "enum": [
              "ACCOUNT_STATUS_UNSPECIFIED",
              "VERIFIED",
              "UNVERIFIED",
              "VERIFICATION_REQUESTED"
            ],
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://mybusiness.googleapis.com//v4/accounts{?primaryOwner,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "An account is a container for your business's locations. If you are the only user who manages locations for your business, you can use your personal Google Account. To share management of locations with multiple users, [create a business account] (https://support.google.com/business/answer/6085339?ref_topic=6085325).",
        "**Key properties:**",
        {
          "$ul": [
            "**accountName**: The name of the account. *Note:* For an account with AccountType `PERSONAL`, this is the first and last name of the user account.",
            "**accountNumber**: Account reference number if provisioned.",
            "**name**: The resource name, in the format `accounts/{account_id}`.",
            [
              "**organizationInfo**: Additional Info stored for an organization.",
              {
                "$ul": [
                  "**phoneNumber**: The contact number for the organization.",
                  [
                    "**postalAddress**: Represents a postal address, e.g. for postal delivery or payments addresses. Given a postal address, a postal service can deliver items to a premise, P.O. Box or similar. It is not intended to model geographical locations (roads, towns, mountains). In typical usage an address would be created via user input or from importing existing data, depending on the type of process. Advice on address input / editing: - Use an i18n-ready address widget such as https://github.com/google/libaddressinput) - Users should not be presented with UI elements for input or editing of fields outside countries where that field is used. For more guidance on how to use this schema, please see: https://support.google.com/business/answer/6397478",
                    {
                      "$ul": [
                        "**addressLines**: Unstructured address lines describing the lower levels of an address. Because values in address_lines do not have type information and may sometimes contain multiple values in a single field (e.g. \"Austin, TX\"), it is important that the line order is clear. The order of address lines should be \"envelope order\" for the country/region of the address. In places where this can vary (e.g. Japan), address_language is used to make it explicit (e.g. \"ja\" for large-to-small ordering and \"ja-Latn\" or \"en\" for small-to-large). This way, the most specific line of an address can be selected based on the language. The minimum permitted structural representation of an address consists of a region_code with all remaining information placed in the address_lines. It would be possible to format such an address very approximately without geocoding, but no semantic reasoning could be made about any of the address components until it was at least partially resolved. Creating an address only containing a region_code and address_lines, and then geocoding is the recommended way to handle completely unstructured addresses (as opposed to guessing which parts of the address should be localities or administrative areas).",
                        "**administrativeArea**: Optional. Highest administrative subdivision which is used for postal addresses of a country or region. For example, this can be a state, a province, an oblast, or a prefecture. Specifically, for Spain this is the province and not the autonomous community (e.g. \"Barcelona\" and not \"Catalonia\"). Many countries don't use an administrative area in postal addresses. E.g. in Switzerland this should be left unpopulated.",
                        "**languageCode**: Optional. BCP-47 language code of the contents of this address (if known). This is often the UI language of the input form or is expected to match one of the languages used in the address' country/region, or their transliterated equivalents. This can affect formatting in certain countries, but is not critical to the correctness of the data and will never affect any validation or other non-formatting related operations. If this value is not known, it should be omitted (rather than specifying a possibly incorrect default). Examples: \"zh-Hant\", \"ja\", \"ja-Latn\", \"en\".",
                        "**locality**: Optional. Generally refers to the city/town portion of the address. Examples: US city, IT comune, UK post town. In regions of the world where localities are not well defined or do not fit into this structure well, leave locality empty and use address_lines.",
                        "**organization**: Optional. The name of the organization at the address.",
                        "**postalCode**: Optional. Postal code of the address. Not all countries use or require postal codes to be present, but where they are used, they may trigger additional validation with other parts of the address (e.g. state/zip validation in the U.S.A.).",
                        "**recipients**: Optional. The recipient at the address. This field may, under certain circumstances, contain multiline information. For example, it might contain \"care of\" information.",
                        "**regionCode**: Required. CLDR region code of the country/region of the address. This is never inferred and it is up to the user to ensure the value is correct. See http://cldr.unicode.org/ and http://www.unicode.org/cldr/charts/30/supplemental/territory_information.html for details. Example: \"CH\" for Switzerland.",
                        "**revision**: The schema revision of the `PostalAddress`. This must be set to 0, which is the latest revision. All new revisions **must** be backward compatible with old revisions.",
                        "**sortingCode**: Optional. Additional, country-specific, sorting code. This is not used in most regions. Where it is used, the value is either a string like \"CEDEX\", optionally followed by a number (e.g. \"CEDEX 7\"), or just a number alone, representing the \"sector code\" (Jamaica), \"delivery area indicator\" (Malawi) or \"post office indicator\" (e.g. Côte d'Ivoire).",
                        "**sublocality**: Optional. Sublocality of the address. For example, this can be neighborhoods, boroughs, districts."
                      ]
                    }
                  ],
                  "**registeredDomain**: The registered domain for the account."
                ]
              }
            ],
            "**permissionLevel**: Output only. Specifies the PermissionLevel the caller has for this account.",
            "**role**: Output only. Specifies the AccountRole the caller has for this account.",
            [
              "**state**: Indicates status of the account, such as whether the account has been verified by Google.",
              {
                "$ul": [
                  "**status**: If verified, future locations that are created are automatically connected to Google Maps, and have Google+ pages created, without requiring moderation."
                ]
              }
            ],
            "**type**: Output only. Specifies the AccountType of this account."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
