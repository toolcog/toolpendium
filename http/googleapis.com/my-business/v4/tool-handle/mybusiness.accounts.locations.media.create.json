{
  "name": "mybusiness_accounts_locations_media_create",
  "description": "Creates a new media item for the location.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "The resource name of the location where this media item will be created."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/MediaItem"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "MediaItem": {
        "description": "A single media item.",
        "properties": {
          "attribution": {
            "$ref": "#/$defs/Attribution"
          },
          "createTime": {
            "description": "Output only. Creation time of this media item.",
            "format": "google-datetime",
            "type": "string"
          },
          "dataRef": {
            "$ref": "#/$defs/MediaItemDataRef"
          },
          "description": {
            "description": "Description for this media item. Descriptions cannot be modified through the Google My Business API, but can be set when creating a new media item that is not a cover photo.",
            "type": "string"
          },
          "dimensions": {
            "$ref": "#/$defs/Dimensions"
          },
          "googleUrl": {
            "description": "Output only. Google-hosted URL for this media item. This URL is not static since it may change over time. For video this will be a preview image with an overlaid play icon.",
            "type": "string"
          },
          "insights": {
            "$ref": "#/$defs/MediaInsights"
          },
          "locationAssociation": {
            "$ref": "#/$defs/LocationAssociation"
          },
          "mediaFormat": {
            "description": "The format of this media item. Must be set when the media item is created, and is read-only on all other requests. Cannot be updated.",
            "enum": [
              "MEDIA_FORMAT_UNSPECIFIED",
              "PHOTO",
              "VIDEO"
            ],
            "type": "string"
          },
          "name": {
            "description": "The resource name for this media item. `accounts/{account_id}/locations/{location_id}/media/{media_key}`",
            "type": "string"
          },
          "sourceUrl": {
            "description": "A publicly accessible URL where the media item can be retrieved from. When creating one of this or data_ref must be set to specify the source of the media item. If `source_url` was used when creating a media item, it will be populated with that source URL when the media item is retrieved. This field cannot be updated.",
            "type": "string"
          },
          "thumbnailUrl": {
            "description": "Output only. Where provided, the URL of a thumbnail image for this media item.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Attribution": {
        "description": "Attribution information for customer media items, such as the contributor's name and profile picture.",
        "properties": {
          "profileName": {
            "description": "The user name to attribute the media item to.",
            "type": "string"
          },
          "profilePhotoUrl": {
            "description": "URL of the attributed user's profile photo thumbnail.",
            "type": "string"
          },
          "profileUrl": {
            "description": "The URL of the attributed user's Google Maps profile page.",
            "type": "string"
          },
          "takedownUrl": {
            "description": "The URL of the takedown page, where the media item can be reported if it is inappropriate.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MediaItemDataRef": {
        "description": "Reference to the photo binary data of a `MediaItem` uploaded through the Google My Business API. Create a data ref using StartUploadMediaItemData, and use this ref when uploading bytes to [UpdateMedia] and subsequently calling CreateMediaItem.",
        "properties": {
          "resourceName": {
            "description": "The unique ID for this media item's binary data. Used to upload the photo data with [UpdateMedia] and when creating a new media item from those bytes with CreateMediaItem. Example of uploading bytes: `curl -X POST -T{path_to_file} \"http://mybusiness.googleapis.com/upload/v1/media/{resource_name}?upload_type=media\"` For CreateMediaItem calls, set this as the `MediaItem` `data_ref`.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Dimensions": {
        "description": "Dimensions of the media item.",
        "properties": {
          "heightPixels": {
            "description": "Height of the media item, in pixels.",
            "format": "int32",
            "type": "integer"
          },
          "widthPixels": {
            "description": "Width of the media item, in pixels.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "MediaInsights": {
        "description": "Insights and statistics for the media item.",
        "properties": {
          "viewCount": {
            "description": "Output only. The number of times the media item has been viewed.",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "LocationAssociation": {
        "description": "How the media item is associated with its location.",
        "properties": {
          "category": {
            "description": "The category that this location photo belongs to.",
            "enum": [
              "CATEGORY_UNSPECIFIED",
              "COVER",
              "PROFILE",
              "LOGO",
              "EXTERIOR",
              "INTERIOR",
              "PRODUCT",
              "AT_WORK",
              "FOOD_AND_DRINK",
              "MENU",
              "COMMON_AREA",
              "ROOMS",
              "TEAMS",
              "ADDITIONAL"
            ],
            "type": "string"
          },
          "priceListItemId": {
            "description": "The ID of a price list item that this location photo is associated with.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://mybusiness.googleapis.com//v4/{parent}/media{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A single media item.",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**attribution**: Attribution information for customer media items, such as the contributor's name and profile picture.",
              {
                "$ul": [
                  "**profileName**: The user name to attribute the media item to.",
                  "**profilePhotoUrl**: URL of the attributed user's profile photo thumbnail.",
                  "**profileUrl**: The URL of the attributed user's Google Maps profile page.",
                  "**takedownUrl**: The URL of the takedown page, where the media item can be reported if it is inappropriate."
                ]
              }
            ],
            "**createTime**: Output only. Creation time of this media item.",
            [
              "**dataRef**: Reference to the photo binary data of a `MediaItem` uploaded through the Google My Business API. Create a data ref using StartUploadMediaItemData, and use this ref when uploading bytes to [UpdateMedia] and subsequently calling CreateMediaItem.",
              {
                "$ul": [
                  "**resourceName**: The unique ID for this media item's binary data. Used to upload the photo data with [UpdateMedia] and when creating a new media item from those bytes with CreateMediaItem. Example of uploading bytes: `curl -X POST -T{path_to_file} \"http://mybusiness.googleapis.com/upload/v1/media/{resource_name}?upload_type=media\"` For CreateMediaItem calls, set this as the `MediaItem` `data_ref`."
                ]
              }
            ],
            "**description**: Description for this media item. Descriptions cannot be modified through the Google My Business API, but can be set when creating a new media item that is not a cover photo.",
            [
              "**dimensions**: Dimensions of the media item.",
              {
                "$ul": [
                  "**heightPixels**: Height of the media item, in pixels.",
                  "**widthPixels**: Width of the media item, in pixels."
                ]
              }
            ],
            "**googleUrl**: Output only. Google-hosted URL for this media item. This URL is not static since it may change over time. For video this will be a preview image with an overlaid play icon.",
            [
              "**insights**: Insights and statistics for the media item.",
              {
                "$ul": [
                  "**viewCount**: Output only. The number of times the media item has been viewed."
                ]
              }
            ],
            [
              "**locationAssociation**: How the media item is associated with its location.",
              {
                "$ul": [
                  "**category**: The category that this location photo belongs to.",
                  "**priceListItemId**: The ID of a price list item that this location photo is associated with."
                ]
              }
            ],
            "**mediaFormat**: The format of this media item. Must be set when the media item is created, and is read-only on all other requests. Cannot be updated.",
            "**name**: The resource name for this media item. `accounts/{account_id}/locations/{location_id}/media/{media_key}`",
            "**sourceUrl**: A publicly accessible URL where the media item can be retrieved from. When creating one of this or data_ref must be set to specify the source of the media item. If `source_url` was used when creating a media item, it will be populated with that source URL when the media item is retrieved. This field cannot be updated.",
            "**thumbnailUrl**: Output only. Where provided, the URL of a thumbnail image for this media item."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
