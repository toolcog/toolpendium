{
  "name": "mybusiness_accounts_locations_findMatches",
  "description": "Finds all of the possible locations that are a match to the specified location. This operation is only valid if the location is unverified.",
  "parameters": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "The resource name of the location to find matches for."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/FindMatchingLocationsRequest"
      }
    },
    "required": [
      "name"
    ],
    "$defs": {
      "FindMatchingLocationsRequest": {
        "description": "Request message for Locations.FindMatchingLocations.",
        "properties": {
          "languageCode": {
            "description": "The preferred language for the matching location (in BCP-47 format).",
            "type": "string"
          },
          "maxCacheDuration": {
            "description": "Deprecated. This field is ignored for all requests.",
            "format": "google-duration",
            "type": "string"
          },
          "numResults": {
            "description": "The number of matches to return. The default value is 3, with a maximum of 10. Note that latency may increase if more are requested. There is no pagination.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://mybusiness.googleapis.com//v4/{name}:findMatches{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Response message for Locations.FindMatchingLocations.",
        "**Key properties:**",
        {
          "$ul": [
            "**matchTime**: When the matching algorithm was last executed for this location.",
            "**matchedLocations**: A collection of locations that are potential matches to the specified location, listed in order from best to least match. If there is an exact match, it will be in the first position."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
