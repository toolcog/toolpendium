{
  "name": "biglake_projects_locations_catalogs_databases_tables_create",
  "description": "Creates a new table.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The parent resource where this table will be created. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}"
      },
      "tableId": {
        "type": "string",
        "description": "Required. The ID to use for the table, which will become the final component of the table's resource name."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/Table"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "Table": {
        "description": "Represents a table.",
        "properties": {
          "createTime": {
            "description": "Output only. The creation time of the table.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "deleteTime": {
            "description": "Output only. The deletion time of the table. Only set after the table is deleted.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "etag": {
            "description": "The checksum of a table object computed by the server based on the value of other fields. It may be sent on update requests to ensure the client has an up-to-date value before proceeding. It is only checked for update table operations.",
            "type": "string"
          },
          "expireTime": {
            "description": "Output only. The time when this table is considered expired. Only set after the table is deleted.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "hiveOptions": {
            "$ref": "#/$defs/HiveTableOptions"
          },
          "name": {
            "description": "Output only. The resource name. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}/tables/{table_id}",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "The table type.",
            "enum": [
              "TYPE_UNSPECIFIED",
              "HIVE"
            ],
            "type": "string"
          },
          "updateTime": {
            "description": "Output only. The last modification time of the table.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "HiveTableOptions": {
        "description": "Options of a Hive table.",
        "properties": {
          "parameters": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Stores user supplied Hive table parameters.",
            "type": "object"
          },
          "storageDescriptor": {
            "$ref": "#/$defs/StorageDescriptor"
          },
          "tableType": {
            "description": "Hive table type. For example, MANAGED_TABLE, EXTERNAL_TABLE.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "StorageDescriptor": {
        "description": "Stores physical storage information of the data.",
        "properties": {
          "inputFormat": {
            "description": "The fully qualified Java class name of the input format.",
            "type": "string"
          },
          "locationUri": {
            "description": "Cloud Storage folder URI where the table data is stored, starting with \"gs://\".",
            "type": "string"
          },
          "outputFormat": {
            "description": "The fully qualified Java class name of the output format.",
            "type": "string"
          },
          "serdeInfo": {
            "$ref": "#/$defs/SerDeInfo"
          }
        },
        "type": "object"
      },
      "SerDeInfo": {
        "description": "Serializer and deserializer information.",
        "properties": {
          "serializationLib": {
            "description": "The fully qualified Java class name of the serialization library.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://biglake.googleapis.com//v1/{parent}/tables{?tableId,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Represents a table.",
        "**Key properties:**",
        {
          "$ul": [
            "**createTime**: Output only. The creation time of the table.",
            "**deleteTime**: Output only. The deletion time of the table. Only set after the table is deleted.",
            "**etag**: The checksum of a table object computed by the server based on the value of other fields. It may be sent on update requests to ensure the client has an up-to-date value before proceeding. It is only checked for update table operations.",
            "**expireTime**: Output only. The time when this table is considered expired. Only set after the table is deleted.",
            [
              "**hiveOptions**: Options of a Hive table.",
              {
                "$ul": [
                  "**parameters**: Stores user supplied Hive table parameters.",
                  [
                    "**storageDescriptor**: Stores physical storage information of the data.",
                    {
                      "$ul": [
                        "**inputFormat**: The fully qualified Java class name of the input format.",
                        "**locationUri**: Cloud Storage folder URI where the table data is stored, starting with \"gs://\".",
                        "**outputFormat**: The fully qualified Java class name of the output format.",
                        [
                          "**serdeInfo**: Serializer and deserializer information.",
                          {
                            "$ul": [
                              "**serializationLib**: The fully qualified Java class name of the serialization library."
                            ]
                          }
                        ]
                      ]
                    }
                  ],
                  "**tableType**: Hive table type. For example, MANAGED_TABLE, EXTERNAL_TABLE."
                ]
              }
            ],
            "**name**: Output only. The resource name. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}/tables/{table_id}",
            "**type**: The table type.",
            "**updateTime**: Output only. The last modification time of the table."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
