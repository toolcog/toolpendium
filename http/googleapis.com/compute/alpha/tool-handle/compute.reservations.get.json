{
  "name": "compute_reservations_get",
  "description": "Retrieves information about the specified reservation.",
  "parameters": {
    "type": "object",
    "properties": {
      "project": {
        "type": "string",
        "description": "Project ID for this request."
      },
      "zone": {
        "type": "string",
        "description": "Name of the zone for this request."
      },
      "reservation": {
        "type": "string",
        "description": "Name of the reservation to retrieve."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "userIp": {
        "type": "string",
        "description": "Legacy name for parameter that has been superseded by `quotaUser`."
      }
    },
    "required": [
      "project",
      "zone",
      "reservation"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://compute.googleapis.com/compute/alpha/projects/{project}/zones/{zone}/reservations/{reservation}{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType,userIp}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Represents a reservation resource. A reservation ensures that capacity is held in a specific zone even if the reserved VMs are not running. For more information, read Reserving zonal resources.",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**aggregateReservation**: This reservation type is specified by total resource amounts (e.g. total count of CPUs) and can account for multiple instance SKUs. In other words, one can create instances of varying shapes against this reservation.",
              {
                "$ul": [
                  "**inUseResources**: [Output only] List of resources currently in use.",
                  "**reservedResources**: List of reserved resources (CPUs, memory, accelerators).",
                  "**vmFamily**: The VM family that all instances scheduled against this reservation must belong to.",
                  "**workloadType**: The workload type of the instances that will target this reservation."
                ]
              }
            ],
            "**commitment**: [Output Only] Full or partial URL to a parent commitment. This field displays for reservations that are tied to a commitment.",
            "**creationTimestamp**: [Output Only] Creation timestamp in RFC3339 text format.",
            [
              "**deleteAfterDuration**: A Duration represents a fixed-length span of time represented as a count of seconds and fractions of seconds at nanosecond resolution. It is independent of any calendar and concepts like \"day\" or \"month\". Range is approximately 10,000 years.",
              {
                "$ul": [
                  "**nanos**: Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 `seconds` field and a positive `nanos` field. Must be from 0 to 999,999,999 inclusive.",
                  "**seconds**: Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years"
                ]
              }
            ],
            "**deleteAtTime**: Absolute time in future when the reservation will be auto-deleted by Compute Engine. Timestamp is represented in RFC3339 text format.",
            "**description**: An optional description of this resource. Provide this property when you create the resource.",
            "**id**: [Output Only] The unique identifier for the resource. This identifier is defined by the server.",
            "**kind**: [Output Only] Type of the resource. Always compute#reservations for reservations. (default: compute#reservation)",
            "**name**: The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
            "**resourcePolicies**: Resource policies to be added to this reservation. The key is defined by user, and the value is resource policy url. This is to define placement policy with reservation.",
            [
              "**resourceStatus**: [Output Only] Contains output only fields.",
              {
                "$ul": [
                  [
                    "**specificSkuAllocation**: Contains Properties set for the reservation.",
                    {
                      "$ul": [
                        "**sourceInstanceTemplateId**: ID of the instance template used to populate reservation properties."
                      ]
                    }
                  ]
                ]
              }
            ],
            "**satisfiesPzs**: [Output Only] Reserved for future use.",
            "**selfLink**: [Output Only] Server-defined fully-qualified URL for this resource.",
            "**selfLinkWithId**: [Output Only] Server-defined URL for this resource with the resource id.",
            [
              "**shareSettings**: The share setting for reservations and sole tenancy node groups.",
              {
                "$ul": [
                  "**folderMap**: A map of folder id and folder config to specify consumer projects for this shared-reservation. This is only valid when share_type's value is DIRECT_PROJECTS_UNDER_SPECIFIC_FOLDERS. Folder id should be a string of number, and without \"folders/\" prefix.",
                  "**projectMap**: A map of project id and project config. This is only valid when share_type's value is SPECIFIC_PROJECTS.",
                  "**projects**: A List of Project names to specify consumer projects for this shared-reservation. This is only valid when share_type's value is SPECIFIC_PROJECTS.",
                  "**shareType**: Type of sharing for this shared-reservation"
                ]
              }
            ],
            [
              "**specificReservation**: This reservation type allows to pre allocate specific instance configuration. Next ID: 6",
              {
                "$ul": [
                  "**assuredCount**: [Output Only] Indicates how many instances are actually usable currently.",
                  "**count**: Specifies the number of resources that are allocated.",
                  "**inUseCount**: [Output Only] Indicates how many instances are in use.",
                  [
                    "**instanceProperties**: Properties of the SKU instances being reserved. Next ID: 9",
                    {
                      "$ul": [
                        "**guestAccelerators**: Specifies accelerator type and count.",
                        "**localSsds**: Specifies amount of local ssd to reserve with each instance. The type of disk is local-ssd.",
                        "**locationHint**: An opaque location hint used to place the allocation close to other resources. This field is for use by internal tools that use the public API.",
                        "**machineType**: Specifies type of machine (name only) which has fixed number of vCPUs and fixed amount of memory. This also includes specifying custom machine type following custom-NUMBER_OF_CPUS-AMOUNT_OF_MEMORY pattern.",
                        "**maintenanceFreezeDurationHours**: Specifies the number of hours after reservation creation where instances using the reservation won't be scheduled for maintenance.",
                        "**maintenanceInterval**: Specifies the frequency of planned maintenance events. The accepted values are: `PERIODIC`.",
                        "**minCpuPlatform**: Minimum cpu platform the reservation."
                      ]
                    }
                  ],
                  "**sourceInstanceTemplate**: Specifies the instance template to create the reservation. If you use this field, you must exclude the instanceProperties field. This field is optional, and it can be a full or partial URL. For example, the following are all valid URLs to an instance template: - https://www.googleapis.com/compute/v1/projects/project /global/instanceTemplates/instanceTemplate - projects/project/global/instanceTemplates/instanceTemplate - global/instanceTemplates/instanceTemplate "
                ]
              }
            ],
            "**specificReservationRequired**: Indicates whether the reservation can be consumed by VMs with affinity for \"any\" reservation. If the field is set, then only VMs that target the reservation by name can consume from this reservation.",
            "**status**: [Output Only] The status of the reservation.",
            "**zone**: Zone in which the reservation resides. A zone must be provided if the reservation is created within a commitment."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
