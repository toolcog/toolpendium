{
  "name": "compute_instances_update",
  "description": "Updates an instance only if the necessary resources are available. This method can update only a specific set of instance properties. See Updating a running instance for a list of updatable instance properties.",
  "parameters": {
    "type": "object",
    "properties": {
      "project": {
        "type": "string",
        "description": "Project ID for this request."
      },
      "zone": {
        "type": "string",
        "description": "The name of the zone for this request."
      },
      "instance": {
        "type": "string",
        "description": "Name of the instance resource to update."
      },
      "clearSecureTag": {
        "type": "boolean",
        "description": "Whether to clear secure tags from the instance. This property if set to true will clear secure tags regardless of the resource.secure_tags."
      },
      "minimalAction": {
        "enum": [
          "INVALID",
          "NO_EFFECT",
          "REFRESH",
          "RESTART"
        ],
        "type": "string",
        "description": "Specifies the action to take when updating an instance even if the updated properties do not require it. If not specified, then Compute Engine acts based on the minimum action that the updated properties require."
      },
      "mostDisruptiveAllowedAction": {
        "enum": [
          "INVALID",
          "NO_EFFECT",
          "REFRESH",
          "RESTART"
        ],
        "type": "string",
        "description": "Specifies the most disruptive action that can be taken on the instance as part of the update. Compute Engine returns an error if the instance properties require a more disruptive action as part of the instance update. Valid options from lowest to highest are NO_EFFECT, REFRESH, and RESTART."
      },
      "requestId": {
        "type": "string",
        "description": "An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "userIp": {
        "type": "string",
        "description": "Legacy name for parameter that has been superseded by `quotaUser`."
      },
      "body": {
        "$ref": "#/$defs/Instance"
      }
    },
    "required": [
      "project",
      "zone",
      "instance"
    ],
    "$defs": {
      "Instance": {
        "description": "Represents an Instance resource. An instance is a virtual machine that is hosted on Google Cloud Platform. For more information, read Virtual Machine Instances.",
        "properties": {
          "advancedMachineFeatures": {
            "$ref": "#/$defs/AdvancedMachineFeatures"
          },
          "canIpForward": {
            "description": "Allows this instance to send and receive packets with non-matching destination or source IPs. This is required if you plan to use this instance to forward routes. For more information, see Enabling IP Forwarding .",
            "type": "boolean"
          },
          "confidentialInstanceConfig": {
            "$ref": "#/$defs/ConfidentialInstanceConfig"
          },
          "cpuPlatform": {
            "description": "[Output Only] The CPU platform used by this instance.",
            "type": "string"
          },
          "creationTimestamp": {
            "description": "[Output Only] Creation timestamp in RFC3339 text format.",
            "type": "string"
          },
          "deletionProtection": {
            "description": "Whether the resource should be protected against deletion.",
            "type": "boolean"
          },
          "description": {
            "description": "An optional description of this resource. Provide this property when you create the resource.",
            "type": "string"
          },
          "disks": {
            "description": "Array of disks associated with this instance. Persistent disks must be created before you can assign them.",
            "items": {
              "$ref": "#/$defs/AttachedDisk"
            },
            "type": "array"
          },
          "displayDevice": {
            "$ref": "#/$defs/DisplayDevice"
          },
          "eraseWindowsVssSignature": {
            "description": "Specifies whether the disks restored from source snapshots or source machine image should erase Windows specific VSS signature.",
            "type": "boolean"
          },
          "fingerprint": {
            "description": "Specifies a fingerprint for this resource, which is essentially a hash of the instance's contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update the instance. You must always provide an up-to-date fingerprint hash in order to update the instance. To see the latest fingerprint, make get() request to the instance.",
            "format": "byte",
            "type": "string"
          },
          "guestAccelerators": {
            "description": "A list of the type and count of accelerator cards attached to the instance.",
            "items": {
              "$ref": "#/$defs/AcceleratorConfig"
            },
            "type": "array"
          },
          "hostname": {
            "description": "Specifies the hostname of the instance. The specified hostname must be RFC1035 compliant. If hostname is not specified, the default hostname is [INSTANCE_NAME].c.[PROJECT_ID].internal when using the global DNS, and [INSTANCE_NAME].[ZONE].c.[PROJECT_ID].internal when using zonal DNS.",
            "type": "string"
          },
          "id": {
            "description": "[Output Only] The unique identifier for the resource. This identifier is defined by the server.",
            "format": "uint64",
            "type": "string"
          },
          "instanceEncryptionKey": {
            "$ref": "#/$defs/CustomerEncryptionKey"
          },
          "keyRevocationActionType": {
            "description": "KeyRevocationActionType of the instance. Supported options are \"STOP\" and \"NONE\". The default value is \"NONE\" if it is not specified.",
            "enum": [
              "KEY_REVOCATION_ACTION_TYPE_UNSPECIFIED",
              "NONE",
              "STOP"
            ],
            "type": "string"
          },
          "kind": {
            "default": "compute#instance",
            "description": "[Output Only] Type of the resource. Always compute#instance for instances.",
            "type": "string"
          },
          "labelFingerprint": {
            "description": "A fingerprint for this request, which is essentially a hash of the label's contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels. To see the latest fingerprint, make get() request to the instance.",
            "format": "byte",
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Labels to apply to this instance. These can be later modified by the setLabels method.",
            "type": "object"
          },
          "lastStartTimestamp": {
            "description": "[Output Only] Last start timestamp in RFC3339 text format.",
            "type": "string"
          },
          "lastStopTimestamp": {
            "description": "[Output Only] Last stop timestamp in RFC3339 text format.",
            "type": "string"
          },
          "lastSuspendedTimestamp": {
            "description": "[Output Only] Last suspended timestamp in RFC3339 text format.",
            "type": "string"
          },
          "machineType": {
            "description": "Full or partial URL of the machine type resource to use for this instance, in the format: zones/zone/machineTypes/machine-type. This is provided by the client when the instance is created. For example, the following is a valid partial url to a predefined machine type: zones/us-central1-f/machineTypes/n1-standard-1 To create a custom machine type, provide a URL to a machine type in the following format, where CPUS is 1 or an even number up to 32 (2, 4, 6, ... 24, etc), and MEMORY is the total memory for this instance. Memory must be a multiple of 256 MB and must be supplied in MB (e.g. 5 GB of memory is 5120 MB): zones/zone/machineTypes/custom-CPUS-MEMORY For example: zones/us-central1-f/machineTypes/custom-4-5120 For a full list of restrictions, read the Specifications for custom machine types.",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/$defs/Metadata"
          },
          "minCpuPlatform": {
            "description": "Specifies a minimum CPU platform for the VM instance. Applicable values are the friendly names of CPU platforms, such as minCpuPlatform: \"Intel Haswell\" or minCpuPlatform: \"Intel Sandy Bridge\".",
            "type": "string"
          },
          "name": {
            "description": "The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
            "type": "string"
          },
          "networkInterfaces": {
            "description": "An array of network configurations for this instance. These specify how interfaces are configured to interact with other network services, such as connecting to the internet. Multiple interfaces are supported per instance.",
            "items": {
              "$ref": "#/$defs/NetworkInterface"
            },
            "type": "array"
          },
          "networkPerformanceConfig": {
            "$ref": "#/$defs/NetworkPerformanceConfig"
          },
          "params": {
            "$ref": "#/$defs/InstanceParams"
          },
          "partnerMetadata": {
            "additionalProperties": {
              "$ref": "#/$defs/StructuredEntries"
            },
            "description": "Partner Metadata assigned to the instance. A map from a subdomain (namespace) to entries map.",
            "type": "object"
          },
          "postKeyRevocationActionType": {
            "description": "PostKeyRevocationActionType of the instance.",
            "enum": [
              "NOOP",
              "POST_KEY_REVOCATION_ACTION_TYPE_UNSPECIFIED",
              "SHUTDOWN"
            ],
            "type": "string"
          },
          "preservedStateSizeGb": {
            "description": "Total amount of preserved state for SUSPENDED instances. Read-only in the api.",
            "format": "int64",
            "type": "string"
          },
          "privateIpv6GoogleAccess": {
            "description": "The private IPv6 google access type for the VM. If not specified, use INHERIT_FROM_SUBNETWORK as default.",
            "enum": [
              "ENABLE_BIDIRECTIONAL_ACCESS_TO_GOOGLE",
              "ENABLE_OUTBOUND_VM_ACCESS_TO_GOOGLE",
              "INHERIT_FROM_SUBNETWORK"
            ],
            "type": "string"
          },
          "reservationAffinity": {
            "$ref": "#/$defs/ReservationAffinity"
          },
          "resourcePolicies": {
            "description": "Resource policies applied to this instance.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "resourceStatus": {
            "$ref": "#/$defs/ResourceStatus"
          },
          "satisfiesPzi": {
            "description": "[Output Only] Reserved for future use.",
            "type": "boolean"
          },
          "satisfiesPzs": {
            "description": "[Output Only] Reserved for future use.",
            "type": "boolean"
          },
          "scheduling": {
            "$ref": "#/$defs/Scheduling"
          },
          "secureTags": {
            "description": "[Input Only] Secure tags to apply to this instance. These can be later modified by the update method. Maximum number of secure tags allowed is 50.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "selfLink": {
            "description": "[Output Only] Server-defined URL for this resource.",
            "type": "string"
          },
          "selfLinkWithId": {
            "description": "[Output Only] Server-defined URL for this resource with the resource id.",
            "type": "string"
          },
          "serviceAccounts": {
            "description": "A list of service accounts, with their specified scopes, authorized for this instance. Only one service account per VM instance is supported. Service accounts generate access tokens that can be accessed through the metadata server and used to authenticate applications on the instance. See Service Accounts for more information.",
            "items": {
              "$ref": "#/$defs/ServiceAccount"
            },
            "type": "array"
          },
          "serviceIntegrationSpecs": {
            "additionalProperties": {
              "$ref": "#/$defs/ServiceIntegrationSpec"
            },
            "description": "Mapping of user-defined keys to specifications for service integrations. Currently only a single key-value pair is supported.",
            "type": "object"
          },
          "shieldedInstanceConfig": {
            "$ref": "#/$defs/ShieldedInstanceConfig"
          },
          "shieldedInstanceIntegrityPolicy": {
            "$ref": "#/$defs/ShieldedInstanceIntegrityPolicy"
          },
          "shieldedVmConfig": {
            "$ref": "#/$defs/ShieldedVmConfig"
          },
          "shieldedVmIntegrityPolicy": {
            "$ref": "#/$defs/ShieldedVmIntegrityPolicy"
          },
          "sourceMachineImage": {
            "description": "Source machine image",
            "type": "string"
          },
          "sourceMachineImageEncryptionKey": {
            "$ref": "#/$defs/CustomerEncryptionKey"
          },
          "startRestricted": {
            "description": "[Output Only] Whether a VM has been restricted for start because Compute Engine has detected suspicious activity.",
            "type": "boolean"
          },
          "status": {
            "description": "[Output Only] The status of the instance. One of the following values: PROVISIONING, STAGING, RUNNING, STOPPING, SUSPENDING, SUSPENDED, REPAIRING, and TERMINATED. For more information about the status of the instance, see Instance life cycle.",
            "enum": [
              "DEPROVISIONING",
              "PROVISIONING",
              "REPAIRING",
              "RUNNING",
              "STAGING",
              "STOPPED",
              "STOPPING",
              "SUSPENDED",
              "SUSPENDING",
              "TERMINATED"
            ],
            "type": "string"
          },
          "statusMessage": {
            "description": "[Output Only] An optional, human-readable explanation of the status.",
            "type": "string"
          },
          "tags": {
            "$ref": "#/$defs/Tags"
          },
          "upcomingMaintenance": {
            "$ref": "#/$defs/UpcomingMaintenance"
          },
          "zone": {
            "description": "[Output Only] URL of the zone where the instance resides. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AdvancedMachineFeatures": {
        "description": "Specifies options for controlling advanced machine features. Options that would traditionally be configured in a BIOS belong here. Features that require operating system support may have corresponding entries in the GuestOsFeatures of an Image (e.g., whether or not the OS in the Image supports nested virtualization being enabled or disabled).",
        "properties": {
          "enableNestedVirtualization": {
            "description": "Whether to enable nested virtualization or not (default is false).",
            "type": "boolean"
          },
          "enableUefiNetworking": {
            "description": "Whether to enable UEFI networking for instance creation.",
            "type": "boolean"
          },
          "enableWatchdogTimer": {
            "description": "Whether to enable the watchdog timer.",
            "type": "boolean"
          },
          "numaNodeCount": {
            "description": "The number of vNUMA nodes.",
            "format": "int32",
            "type": "integer"
          },
          "performanceMonitoringUnit": {
            "description": "Type of Performance Monitoring Unit requested on instance.",
            "enum": [
              "ARCHITECTURAL",
              "ENHANCED",
              "PERFORMANCE_MONITORING_UNIT_UNSPECIFIED",
              "STANDARD"
            ],
            "type": "string"
          },
          "threadsPerCore": {
            "description": "The number of threads per physical core. To disable simultaneous multithreading (SMT) set this to 1. If unset, the maximum number of threads supported per core by the underlying processor is assumed.",
            "format": "int32",
            "type": "integer"
          },
          "visibleCoreCount": {
            "description": "The number of physical cores to expose to an instance. Multiply by the number of threads per core to compute the total number of virtual CPUs to expose to the instance. If unset, the number of cores is inferred from the instance's nominal CPU count and the underlying platform's SMT width.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ConfidentialInstanceConfig": {
        "description": "A set of Confidential Instance options.",
        "properties": {
          "confidentialInstanceType": {
            "description": "Defines the type of technology used by the confidential instance.",
            "enum": [
              "CONFIDENTIAL_INSTANCE_TYPE_UNSPECIFIED",
              "SEV",
              "SEV_SNP",
              "TDX"
            ],
            "type": "string"
          },
          "enableConfidentialCompute": {
            "description": "Defines whether the instance should have confidential compute enabled.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "AttachedDisk": {
        "description": "An instance-attached disk resource.",
        "properties": {
          "architecture": {
            "description": "[Output Only] The architecture of the attached disk. Valid values are ARM64 or X86_64.",
            "enum": [
              "ARCHITECTURE_UNSPECIFIED",
              "ARM64",
              "X86_64"
            ],
            "type": "string"
          },
          "autoDelete": {
            "description": "Specifies whether the disk will be auto-deleted when the instance is deleted (but not when the disk is detached from the instance).",
            "type": "boolean"
          },
          "boot": {
            "description": "Indicates that this is a boot disk. The virtual machine will use the first partition of the disk for its root filesystem.",
            "type": "boolean"
          },
          "deviceName": {
            "description": "Specifies a unique device name of your choice that is reflected into the /dev/disk/by-id/google-* tree of a Linux operating system running within the instance. This name can be used to reference the device for mounting, resizing, and so on, from within the instance. If not specified, the server chooses a default device name to apply to this disk, in the form persistent-disk-x, where x is a number assigned by Google Compute Engine. This field is only applicable for persistent disks.",
            "type": "string"
          },
          "diskEncryptionKey": {
            "$ref": "#/$defs/CustomerEncryptionKey"
          },
          "diskSizeGb": {
            "description": "The size of the disk in GB.",
            "format": "int64",
            "type": "string"
          },
          "forceAttach": {
            "description": "[Input Only] Whether to force attach the regional disk even if it's currently attached to another instance. If you try to force attach a zonal disk to an instance, you will receive an error.",
            "type": "boolean"
          },
          "guestOsFeatures": {
            "description": "A list of features to enable on the guest operating system. Applicable only for bootable images. Read Enabling guest operating system features to see a list of available options.",
            "items": {
              "$ref": "#/$defs/GuestOsFeature"
            },
            "type": "array"
          },
          "index": {
            "description": "[Output Only] A zero-based index to this disk, where 0 is reserved for the boot disk. If you have many disks attached to an instance, each disk would have a unique index number.",
            "format": "int32",
            "type": "integer"
          },
          "initializeParams": {
            "$ref": "#/$defs/AttachedDiskInitializeParams"
          },
          "interface": {
            "description": "Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME. For most machine types, the default is SCSI. Local SSDs can use either NVME or SCSI. In certain configurations, persistent disks can use NVMe. For more information, see About persistent disks.",
            "enum": [
              "NVDIMM",
              "NVME",
              "SCSI"
            ],
            "type": "string"
          },
          "kind": {
            "default": "compute#attachedDisk",
            "description": "[Output Only] Type of the resource. Always compute#attachedDisk for attached disks.",
            "type": "string"
          },
          "licenses": {
            "description": "[Output Only] Any valid publicly visible licenses.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "locked": {
            "description": "[Output Only] Whether to indicate the attached disk is locked. The locked disk is not allowed to be detached from the instance, or to be used as the source of the snapshot creation, and the image creation. The instance with at least one locked attached disk is not allow to be used as source of machine image creation, instant snapshot creation, and not allowed to be deleted with --keep-disk parameter set to true for locked disks.",
            "type": "boolean"
          },
          "mode": {
            "description": "The mode in which to attach this disk, either READ_WRITE or READ_ONLY. If not specified, the default is to attach the disk in READ_WRITE mode.",
            "enum": [
              "READ_ONLY",
              "READ_WRITE"
            ],
            "type": "string"
          },
          "savedState": {
            "description": "For LocalSSD disks on VM Instances in STOPPED or SUSPENDED state, this field is set to PRESERVED if the LocalSSD data has been saved to a persistent location by customer request. (see the discard_local_ssd option on Stop/Suspend). Read-only in the api.",
            "enum": [
              "DISK_SAVED_STATE_UNSPECIFIED",
              "PRESERVED"
            ],
            "type": "string"
          },
          "shieldedInstanceInitialState": {
            "$ref": "#/$defs/InitialStateConfig"
          },
          "source": {
            "description": "Specifies a valid partial or full URL to an existing Persistent Disk resource. When creating a new instance, one of initializeParams.sourceImage or initializeParams.sourceSnapshot or disks.source is required except for local SSD. If desired, you can also attach existing non-root persistent disks using this property. This field is only applicable for persistent disks. Note that for InstanceTemplate, specify the disk name for zonal disk, and the URL for regional disk.",
            "type": "string"
          },
          "type": {
            "description": "Specifies the type of the disk, either SCRATCH or PERSISTENT. If not specified, the default is PERSISTENT.",
            "enum": [
              "PERSISTENT",
              "SCRATCH"
            ],
            "type": "string"
          },
          "userLicenses": {
            "description": "[Output Only] A list of user provided licenses. It represents a list of URLs to the license resource. Unlike regular licenses, user provided licenses can be modified after the disk is created.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "CustomerEncryptionKey": {
        "properties": {
          "kmsKeyName": {
            "description": "The name of the encryption key that is stored in Google Cloud KMS. For example: \"kmsKeyName\": \"projects/kms_project_id/locations/region/keyRings/ key_region/cryptoKeys/key The fully-qualifed key name may be returned for resource GET requests. For example: \"kmsKeyName\": \"projects/kms_project_id/locations/region/keyRings/ key_region/cryptoKeys/key /cryptoKeyVersions/1 ",
            "type": "string"
          },
          "kmsKeyServiceAccount": {
            "description": "The service account being used for the encryption request for the given KMS key. If absent, the Compute Engine default service account is used. For example: \"kmsKeyServiceAccount\": \"name@project_id.iam.gserviceaccount.com/ ",
            "type": "string"
          },
          "rawKey": {
            "description": "Specifies a 256-bit customer-supplied encryption key, encoded in RFC 4648 base64 to either encrypt or decrypt this resource. You can provide either the rawKey or the rsaEncryptedKey. For example: \"rawKey\": \"SGVsbG8gZnJvbSBHb29nbGUgQ2xvdWQgUGxhdGZvcm0=\" ",
            "type": "string"
          },
          "rsaEncryptedKey": {
            "description": "Specifies an RFC 4648 base64 encoded, RSA-wrapped 2048-bit customer-supplied encryption key to either encrypt or decrypt this resource. You can provide either the rawKey or the rsaEncryptedKey. For example: \"rsaEncryptedKey\": \"ieCx/NcW06PcT7Ep1X6LUTc/hLvUDYyzSZPPVCVPTVEohpeHASqC8uw5TzyO9U+Fka9JFH z0mBibXUInrC/jEk014kCK/NPjYgEMOyssZ4ZINPKxlUh2zn1bV+MCaTICrdmuSBTWlUUiFoD D6PYznLwh8ZNdaheCeZ8ewEXgFQ8V+sDroLaN3Xs3MDTXQEMMoNUXMCZEIpg9Vtp9x2oe==\" The key must meet the following requirements before you can provide it to Compute Engine: 1. The key is wrapped using a RSA public key certificate provided by Google. 2. After being wrapped, the key must be encoded in RFC 4648 base64 encoding. Gets the RSA public key certificate provided by Google at: https://cloud-certs.storage.googleapis.com/google-cloud-csek-ingress.pem ",
            "type": "string"
          },
          "sha256": {
            "description": "[Output only] The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied encryption key that protects this resource.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GuestOsFeature": {
        "description": "Guest OS features.",
        "properties": {
          "type": {
            "description": "The ID of a supported feature. To add multiple values, use commas to separate values. Set to one or more of the following values: - VIRTIO_SCSI_MULTIQUEUE - WINDOWS - MULTI_IP_SUBNET - UEFI_COMPATIBLE - GVNIC - SEV_CAPABLE - SUSPEND_RESUME_COMPATIBLE - SEV_LIVE_MIGRATABLE - SEV_SNP_CAPABLE - TDX_CAPABLE - IDPF For more information, see Enabling guest operating system features.",
            "enum": [
              "BARE_METAL_LINUX_COMPATIBLE",
              "FEATURE_TYPE_UNSPECIFIED",
              "GVNIC",
              "IDPF",
              "MULTI_IP_SUBNET",
              "SECURE_BOOT",
              "SEV_CAPABLE",
              "SEV_LIVE_MIGRATABLE",
              "SEV_LIVE_MIGRATABLE_V2",
              "SEV_SNP_CAPABLE",
              "TDX_CAPABLE",
              "UEFI_COMPATIBLE",
              "VIRTIO_SCSI_MULTIQUEUE",
              "WINDOWS"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "AttachedDiskInitializeParams": {
        "description": "[Input Only] Specifies the parameters for a new disk that will be created alongside the new instance. Use initialization parameters to create boot disks or local SSDs attached to the new instance. This field is persisted and returned for instanceTemplate and not returned in the context of instance. This property is mutually exclusive with the source property; you can only define one or the other, but not both.",
        "properties": {
          "architecture": {
            "description": "The architecture of the attached disk. Valid values are arm64 or x86_64.",
            "enum": [
              "ARCHITECTURE_UNSPECIFIED",
              "ARM64",
              "X86_64"
            ],
            "type": "string"
          },
          "description": {
            "description": "An optional description. Provide this property when creating the disk.",
            "type": "string"
          },
          "diskName": {
            "description": "Specifies the disk name. If not specified, the default is to use the name of the instance. If a disk with the same name already exists in the given region, the existing disk is attached to the new instance and the new disk is not created.",
            "type": "string"
          },
          "diskSizeGb": {
            "description": "Specifies the size of the disk in base-2 GB. The size must be at least 10 GB. If you specify a sourceImage, which is required for boot disks, the default size is the size of the sourceImage. If you do not specify a sourceImage, the default disk size is 500 GB.",
            "format": "int64",
            "type": "string"
          },
          "diskType": {
            "description": "Specifies the disk type to use to create the instance. If not specified, the default is pd-standard, specified using the full URL. For example: https://www.googleapis.com/compute/v1/projects/project/zones/zone /diskTypes/pd-standard For a full list of acceptable values, see Persistent disk types. If you specify this field when creating a VM, you can provide either the full or partial URL. For example, the following values are valid: - https://www.googleapis.com/compute/v1/projects/project/zones/zone /diskTypes/diskType - projects/project/zones/zone/diskTypes/diskType - zones/zone/diskTypes/diskType If you specify this field when creating or updating an instance template or all-instances configuration, specify the type of the disk, not the URL. For example: pd-standard.",
            "type": "string"
          },
          "enableConfidentialCompute": {
            "description": "Whether this disk is using confidential compute mode.",
            "type": "boolean"
          },
          "guestOsFeatures": {
            "description": "A list of features to enable on the guest operating system. Applicable only for bootable images. Read Enabling guest operating system features to see a list of available options. Guest OS features are applied by merging initializeParams.guestOsFeatures and disks.guestOsFeatures",
            "items": {
              "$ref": "#/$defs/GuestOsFeature"
            },
            "type": "array"
          },
          "interface": {
            "deprecated": true,
            "description": "[Deprecated] Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME. The default is SCSI.",
            "enum": [
              "NVME",
              "SCSI",
              "UNSPECIFIED"
            ],
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Labels to apply to this disk. These can be later modified by the disks.setLabels method. This field is only applicable for persistent disks.",
            "type": "object"
          },
          "licenseCodes": {
            "description": "Integer license codes indicating which licenses are attached to this disk.",
            "items": {
              "format": "int64",
              "type": "string"
            },
            "type": "array"
          },
          "licenses": {
            "description": "A list of publicly visible licenses. Reserved for Google's use.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "multiWriter": {
            "description": "Indicates whether or not the disk can be read/write attached to more than one instance.",
            "type": "boolean"
          },
          "onUpdateAction": {
            "description": "Specifies which action to take on instance update with this disk. Default is to use the existing disk.",
            "enum": [
              "RECREATE_DISK",
              "RECREATE_DISK_IF_SOURCE_CHANGED",
              "USE_EXISTING_DISK"
            ],
            "type": "string"
          },
          "provisionedIops": {
            "description": "Indicates how many IOPS to provision for the disk. This sets the number of I/O operations per second that the disk can handle. Values must be between 10,000 and 120,000. For more details, see the Extreme persistent disk documentation.",
            "format": "int64",
            "type": "string"
          },
          "provisionedThroughput": {
            "description": "Indicates how much throughput to provision for the disk. This sets the number of throughput mb per second that the disk can handle. Values must greater than or equal to 1.",
            "format": "int64",
            "type": "string"
          },
          "replicaZones": {
            "description": "Required for each regional disk associated with the instance. Specify the URLs of the zones where the disk should be replicated to. You must provide exactly two replica zones, and one zone must be the same as the instance zone.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "resourceManagerTags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Resource manager tags to be bound to the disk. Tag keys and values have the same definition as resource manager tags. Keys must be in the format `tagKeys/{tag_key_id}`, and values are in the format `tagValues/456`. The field is ignored (both PUT & PATCH) when empty.",
            "type": "object"
          },
          "resourcePolicies": {
            "description": "Resource policies applied to this disk for automatic snapshot creations. Specified using the full or partial URL. For instance template, specify only the resource policy name.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "sourceImage": {
            "description": "The source image to create this disk. When creating a new instance, one of initializeParams.sourceImage or initializeParams.sourceSnapshot or disks.source is required except for local SSD. To create a disk with one of the public operating system images, specify the image by its family name. For example, specify family/debian-9 to use the latest Debian 9 image: projects/debian-cloud/global/images/family/debian-9 Alternatively, use a specific version of a public operating system image: projects/debian-cloud/global/images/debian-9-stretch-vYYYYMMDD To create a disk with a custom image that you created, specify the image name in the following format: global/images/my-custom-image You can also specify a custom image by its image family, which returns the latest version of the image in that family. Replace the image name with family/family-name: global/images/family/my-image-family If the source image is deleted later, this field will not be set.",
            "type": "string"
          },
          "sourceImageEncryptionKey": {
            "$ref": "#/$defs/CustomerEncryptionKey"
          },
          "sourceInstantSnapshot": {
            "description": "The source instant-snapshot to create this disk. When creating a new instance, one of initializeParams.sourceSnapshot or initializeParams.sourceInstantSnapshot initializeParams.sourceImage or disks.source is required except for local SSD. To create a disk with a snapshot that you created, specify the snapshot name in the following format: us-central1-a/instantSnapshots/my-backup If the source instant-snapshot is deleted later, this field will not be set.",
            "type": "string"
          },
          "sourceSnapshot": {
            "description": "The source snapshot to create this disk. When creating a new instance, one of initializeParams.sourceSnapshot or initializeParams.sourceImage or disks.source is required except for local SSD. To create a disk with a snapshot that you created, specify the snapshot name in the following format: global/snapshots/my-backup If the source snapshot is deleted later, this field will not be set.",
            "type": "string"
          },
          "sourceSnapshotEncryptionKey": {
            "$ref": "#/$defs/CustomerEncryptionKey"
          },
          "storagePool": {
            "description": "The storage pool in which the new disk is created. You can provide this as a partial or full URL to the resource. For example, the following are valid values: - https://www.googleapis.com/compute/v1/projects/project/zones/zone /storagePools/storagePool - projects/project/zones/zone/storagePools/storagePool - zones/zone/storagePools/storagePool ",
            "type": "string"
          }
        },
        "type": "object"
      },
      "InitialStateConfig": {
        "description": "Initial State for shielded instance, these are public keys which are safe to store in public",
        "properties": {
          "dbs": {
            "description": "The Key Database (db).",
            "items": {
              "$ref": "#/$defs/FileContentBuffer"
            },
            "type": "array"
          },
          "dbxs": {
            "description": "The forbidden key database (dbx).",
            "items": {
              "$ref": "#/$defs/FileContentBuffer"
            },
            "type": "array"
          },
          "keks": {
            "description": "The Key Exchange Key (KEK).",
            "items": {
              "$ref": "#/$defs/FileContentBuffer"
            },
            "type": "array"
          },
          "pk": {
            "$ref": "#/$defs/FileContentBuffer"
          }
        },
        "type": "object"
      },
      "FileContentBuffer": {
        "properties": {
          "content": {
            "description": "The raw content in the secure keys file.",
            "format": "byte",
            "type": "string"
          },
          "fileType": {
            "description": "The file type of source file.",
            "enum": [
              "BIN",
              "UNDEFINED",
              "X509"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "DisplayDevice": {
        "description": "A set of Display Device options",
        "properties": {
          "enableDisplay": {
            "description": "Defines whether the instance has Display enabled.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "AcceleratorConfig": {
        "description": "A specification of the type and number of accelerator cards attached to the instance.",
        "properties": {
          "acceleratorCount": {
            "description": "The number of the guest accelerator cards exposed to this instance.",
            "format": "int32",
            "type": "integer"
          },
          "acceleratorType": {
            "description": "Full or partial URL of the accelerator type resource to attach to this instance. For example: projects/my-project/zones/us-central1-c/acceleratorTypes/nvidia-tesla-p100 If you are creating an instance template, specify only the accelerator name. See GPUs on Compute Engine for a full list of accelerator types.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Metadata": {
        "description": "A metadata key/value entry.",
        "properties": {
          "fingerprint": {
            "description": "Specifies a fingerprint for this request, which is essentially a hash of the metadata's contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update metadata. You must always provide an up-to-date fingerprint hash in order to update or change metadata, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve the resource.",
            "format": "byte",
            "type": "string"
          },
          "items": {
            "description": "Array of key/value pairs. The total size of all keys and values must be less than 512 KB.",
            "items": {
              "description": "Metadata",
              "properties": {
                "key": {
                  "description": "Key for the metadata entry. Keys must conform to the following regexp: [a-zA-Z0-9-_]+, and be less than 128 bytes in length. This is reflected as part of a URL in the metadata server. Additionally, to avoid ambiguity, keys must not conflict with any other metadata keys for the project.",
                  "pattern": "[a-zA-Z0-9-_]{1,128}",
                  "type": "string"
                },
                "value": {
                  "description": "Value for the metadata entry. These are free-form strings, and only have meaning as interpreted by the image running in the instance. The only restriction placed on values is that their size must be less than or equal to 262144 bytes (256 KiB).",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "kind": {
            "default": "compute#metadata",
            "description": "[Output Only] Type of the resource. Always compute#metadata for metadata.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "NetworkInterface": {
        "description": "A network interface resource attached to an instance.",
        "properties": {
          "accessConfigs": {
            "description": "An array of configurations for this interface. Currently, only one access config, ONE_TO_ONE_NAT, is supported. If there are no accessConfigs specified, then this instance will have no external internet access.",
            "items": {
              "$ref": "#/$defs/AccessConfig"
            },
            "type": "array"
          },
          "aliasIpRanges": {
            "description": "An array of alias IP ranges for this network interface. You can only specify this field for network interfaces in VPC networks.",
            "items": {
              "$ref": "#/$defs/AliasIpRange"
            },
            "type": "array"
          },
          "fingerprint": {
            "description": "Fingerprint hash of contents stored in this network interface. This field will be ignored when inserting an Instance or adding a NetworkInterface. An up-to-date fingerprint must be provided in order to update the NetworkInterface. The request will fail with error 400 Bad Request if the fingerprint is not provided, or 412 Precondition Failed if the fingerprint is out of date.",
            "format": "byte",
            "type": "string"
          },
          "igmpQuery": {
            "description": "Indicate whether igmp query is enabled on the network interface or not. If enabled, also indicates the version of IGMP supported.",
            "enum": [
              "IGMP_QUERY_DISABLED",
              "IGMP_QUERY_V2"
            ],
            "type": "string"
          },
          "internalIpv6PrefixLength": {
            "description": "The prefix length of the primary internal IPv6 range.",
            "format": "int32",
            "type": "integer"
          },
          "ipv6AccessConfigs": {
            "description": "An array of IPv6 access configurations for this interface. Currently, only one IPv6 access config, DIRECT_IPV6, is supported. If there is no ipv6AccessConfig specified, then this instance will have no external IPv6 Internet access.",
            "items": {
              "$ref": "#/$defs/AccessConfig"
            },
            "type": "array"
          },
          "ipv6AccessType": {
            "description": "[Output Only] One of EXTERNAL, INTERNAL to indicate whether the IP can be accessed from the Internet. This field is always inherited from its subnetwork. Valid only if stackType is IPV4_IPV6.",
            "enum": [
              "EXTERNAL",
              "INTERNAL"
            ],
            "type": "string"
          },
          "ipv6Address": {
            "description": "An IPv6 internal network address for this network interface. To use a static internal IP address, it must be unused and in the same region as the instance's zone. If not specified, Google Cloud will automatically assign an internal IPv6 address from the instance's subnetwork.",
            "type": "string"
          },
          "kind": {
            "default": "compute#networkInterface",
            "description": "[Output Only] Type of the resource. Always compute#networkInterface for network interfaces.",
            "type": "string"
          },
          "name": {
            "description": "[Output Only] The name of the network interface, which is generated by the server. For a VM, the network interface uses the nicN naming format. Where N is a value between 0 and 7. The default interface value is nic0.",
            "type": "string"
          },
          "network": {
            "description": "URL of the VPC network resource for this instance. When creating an instance, if neither the network nor the subnetwork is specified, the default network global/networks/default is used. If the selected project doesn't have the default network, you must specify a network or subnet. If the network is not specified but the subnetwork is specified, the network is inferred. If you specify this property, you can specify the network as a full or partial URL. For example, the following are all valid URLs: - https://www.googleapis.com/compute/v1/projects/project/global/networks/ network - projects/project/global/networks/network - global/networks/default ",
            "type": "string"
          },
          "networkAttachment": {
            "description": "The URL of the network attachment that this interface should connect to in the following format: projects/{project_number}/regions/{region_name}/networkAttachments/{network_attachment_name}.",
            "type": "string"
          },
          "networkIP": {
            "description": "An IPv4 internal IP address to assign to the instance for this network interface. If not specified by the user, an unused internal IP is assigned by the system.",
            "type": "string"
          },
          "nicType": {
            "description": "The type of vNIC to be used on this interface. This may be gVNIC or VirtioNet.",
            "enum": [
              "GVNIC",
              "UNSPECIFIED_NIC_TYPE",
              "VIRTIO_NET"
            ],
            "type": "string"
          },
          "parentNicName": {
            "description": "Name of the parent network interface of a VLAN based nic. If this field is specified, vlan must be set.",
            "type": "string"
          },
          "queueCount": {
            "description": "The networking queue count that's specified by users for the network interface. Both Rx and Tx queues will be set to this number. It'll be empty if not specified by the users.",
            "format": "int32",
            "type": "integer"
          },
          "stackType": {
            "description": "The stack type for this network interface. To assign only IPv4 addresses, use IPV4_ONLY. To assign both IPv4 and IPv6 addresses, use IPV4_IPV6. If not specified, IPV4_ONLY is used. This field can be both set at instance creation and update network interface operations.",
            "enum": [
              "IPV4_IPV6",
              "IPV4_ONLY",
              "IPV6_ONLY"
            ],
            "type": "string"
          },
          "subinterfaces": {
            "description": "SubInterfaces help enable L2 communication for the instance over subnetworks that support L2. Every network interface will get a default untagged (vlan not specified) subinterface. Users can specify additional tagged subinterfaces which are sub-fields to the Network Interface.",
            "items": {
              "$ref": "#/$defs/NetworkInterfaceSubInterface"
            },
            "type": "array"
          },
          "subnetwork": {
            "description": "The URL of the Subnetwork resource for this instance. If the network resource is in legacy mode, do not specify this field. If the network is in auto subnet mode, specifying the subnetwork is optional. If the network is in custom subnet mode, specifying the subnetwork is required. If you specify this field, you can specify the subnetwork as a full or partial URL. For example, the following are all valid URLs: - https://www.googleapis.com/compute/v1/projects/project/regions/region /subnetworks/subnetwork - regions/region/subnetworks/subnetwork ",
            "type": "string"
          },
          "vlan": {
            "description": "VLAN tag of a VLAN based network interface, must be in range from 2 to 4094 inclusively. This field is mandatory if the parent network interface name is set.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "AccessConfig": {
        "description": "An access configuration attached to an instance's network interface. Only one access config per instance is supported.",
        "properties": {
          "externalIpv6": {
            "description": "Applies to ipv6AccessConfigs only. The first IPv6 address of the external IPv6 range associated with this instance, prefix length is stored in externalIpv6PrefixLength in ipv6AccessConfig. To use a static external IP address, it must be unused and in the same region as the instance's zone. If not specified, Google Cloud will automatically assign an external IPv6 address from the instance's subnetwork.",
            "type": "string"
          },
          "externalIpv6PrefixLength": {
            "description": "Applies to ipv6AccessConfigs only. The prefix length of the external IPv6 range.",
            "format": "int32",
            "type": "integer"
          },
          "kind": {
            "default": "compute#accessConfig",
            "description": "[Output Only] Type of the resource. Always compute#accessConfig for access configs.",
            "type": "string"
          },
          "name": {
            "description": "The name of this access configuration. In accessConfigs (IPv4), the default and recommended name is External NAT, but you can use any arbitrary string, such as My external IP or Network Access. In ipv6AccessConfigs, the recommend name is External IPv6.",
            "type": "string"
          },
          "natIP": {
            "description": "Applies to accessConfigs (IPv4) only. An external IP address associated with this instance. Specify an unused static external IP address available to the project or leave this field undefined to use an IP from a shared ephemeral IP address pool. If you specify a static external IP address, it must live in the same region as the zone of the instance.",
            "type": "string"
          },
          "networkTier": {
            "description": "This signifies the networking tier used for configuring this access configuration and can only take the following values: PREMIUM, STANDARD. If an AccessConfig is specified without a valid external IP address, an ephemeral IP will be created with this networkTier. If an AccessConfig with a valid external IP address is specified, it must match that of the networkTier associated with the Address resource owning that IP.",
            "enum": [
              "FIXED_STANDARD",
              "PREMIUM",
              "SELECT",
              "STANDARD",
              "STANDARD_OVERRIDES_FIXED_STANDARD"
            ],
            "type": "string"
          },
          "publicDnsName": {
            "description": "[Output Only] The public DNS domain name for the instance.",
            "type": "string"
          },
          "publicPtrDomainName": {
            "description": "The DNS domain name for the public PTR record. You can set this field only if the `setPublicPtr` field is enabled in accessConfig. If this field is unspecified in ipv6AccessConfig, a default PTR record will be createc for first IP in associated external IPv6 range.",
            "type": "string"
          },
          "securityPolicy": {
            "description": "[Output Only] The resource URL for the security policy associated with this access config.",
            "type": "string"
          },
          "setPublicDns": {
            "description": "Specifies whether a public DNS 'A' record should be created for the external IP address of this access configuration.",
            "type": "boolean"
          },
          "setPublicPtr": {
            "description": "Specifies whether a public DNS 'PTR' record should be created to map the external IP address of the instance to a DNS domain name. This field is not used in ipv6AccessConfig. A default PTR record will be created if the VM has external IPv6 range associated.",
            "type": "boolean"
          },
          "type": {
            "description": "The type of configuration. In accessConfigs (IPv4), the default and only option is ONE_TO_ONE_NAT. In ipv6AccessConfigs, the default and only option is DIRECT_IPV6.",
            "enum": [
              "DIRECT_IPV6",
              "ONE_TO_ONE_NAT"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "AliasIpRange": {
        "description": "An alias IP range attached to an instance's network interface.",
        "properties": {
          "ipCidrRange": {
            "description": "The IP alias ranges to allocate for this interface. This IP CIDR range must belong to the specified subnetwork and cannot contain IP addresses reserved by system or used by other network interfaces. This range may be a single IP address (such as 10.2.3.4), a netmask (such as /24) or a CIDR-formatted string (such as 10.1.2.0/24).",
            "type": "string"
          },
          "subnetworkRangeName": {
            "description": "The name of a subnetwork secondary IP range from which to allocate an IP alias range. If not specified, the primary range of the subnetwork is used.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "NetworkInterfaceSubInterface": {
        "properties": {
          "ipAddress": {
            "description": "An IPv4 internal IP address to assign to the instance for this subinterface. If specified, ip_allocation_mode should be set to ALLOCATE_IP.",
            "type": "string"
          },
          "ipAllocationMode": {
            "enum": [
              "ALLOCATE_IP",
              "DO_NOT_ALLOCATE_IP",
              "UNSPECIFIED"
            ],
            "type": "string"
          },
          "subnetwork": {
            "description": "If specified, this subnetwork must belong to the same network as that of the network interface. If not specified the subnet of network interface will be used. If you specify this property, you can specify the subnetwork as a full or partial URL. For example, the following are all valid URLs: - https://www.googleapis.com/compute/v1/projects/project/regions/region /subnetworks/subnetwork - regions/region/subnetworks/subnetwork ",
            "type": "string"
          },
          "vlan": {
            "description": "VLAN tag. Should match the VLAN(s) supported by the subnetwork to which this subinterface is connecting.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NetworkPerformanceConfig": {
        "properties": {
          "externalIpEgressBandwidthTier": {
            "enum": [
              "DEFAULT",
              "TIER_1"
            ],
            "type": "string"
          },
          "totalEgressBandwidthTier": {
            "enum": [
              "DEFAULT",
              "TIER_1"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "InstanceParams": {
        "description": "Additional instance params.",
        "properties": {
          "resourceManagerTags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Resource manager tags to be bound to the instance. Tag keys and values have the same definition as resource manager tags. Keys must be in the format `tagKeys/{tag_key_id}`, and values are in the format `tagValues/456`. The field is ignored (both PUT & PATCH) when empty.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "StructuredEntries": {
        "properties": {
          "entries": {
            "additionalProperties": {},
            "description": "Map of a partner metadata that belong to the same subdomain. It accepts any value including google.protobuf.Struct.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "ReservationAffinity": {
        "description": "Specifies the reservations that this instance can consume from.",
        "properties": {
          "consumeReservationType": {
            "description": "Specifies the type of reservation from which this instance can consume resources: ANY_RESERVATION (default), SPECIFIC_RESERVATION, or NO_RESERVATION. See Consuming reserved instances for examples.",
            "enum": [
              "ANY_RESERVATION",
              "NO_RESERVATION",
              "SPECIFIC_RESERVATION",
              "SPECIFIC_THEN_ANY_RESERVATION",
              "SPECIFIC_THEN_NO_RESERVATION",
              "UNSPECIFIED"
            ],
            "type": "string"
          },
          "key": {
            "description": "Corresponds to the label key of a reservation resource. To target a SPECIFIC_RESERVATION by name, specify googleapis.com/reservation-name as the key and specify the name of your reservation as its value.",
            "type": "string"
          },
          "values": {
            "description": "Corresponds to the label values of a reservation resource. This can be either a name to a reservation in the same project or \"projects/different-project/reservations/some-reservation-name\" to target a shared reservation in the same zone but in a different project.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ResourceStatus": {
        "description": "Contains output only fields. Use this sub-message for actual values set on Instance attributes as compared to the value requested by the user (intent) in their instance CRUD calls.",
        "properties": {
          "lastInstanceTerminationDetails": {
            "$ref": "#/$defs/ResourceStatusLastInstanceTerminationDetails"
          },
          "physicalHost": {
            "description": "[Output Only] An opaque ID of the host on which the VM is running.",
            "type": "string"
          },
          "scheduling": {
            "$ref": "#/$defs/ResourceStatusScheduling"
          },
          "serviceIntegrationStatuses": {
            "additionalProperties": {
              "$ref": "#/$defs/ResourceStatusServiceIntegrationStatus"
            },
            "description": "[Output Only] Represents the status of the service integration specs defined by the user in instance.serviceIntegrationSpecs.",
            "type": "object"
          },
          "shutdownDetails": {
            "$ref": "#/$defs/ResourceStatusShutdownDetails"
          },
          "upcomingMaintenance": {
            "$ref": "#/$defs/UpcomingMaintenance"
          }
        },
        "type": "object"
      },
      "ResourceStatusLastInstanceTerminationDetails": {
        "properties": {
          "terminationReason": {
            "description": "Reason for termination",
            "enum": [
              "BAD_BILLING_ACCOUNT",
              "CLOUD_ABUSE_DETECTED",
              "DISK_ERROR",
              "FREE_TRIAL_EXPIRED",
              "INSTANCE_UPDATE_REQUIRED_RESTART",
              "INTERNAL_ERROR",
              "KMS_REJECTION",
              "MANAGED_INSTANCE_GROUP",
              "OS_TERMINATED",
              "PREEMPTED",
              "SCHEDULED_STOP",
              "SHUTDOWN_DUE_TO_MAINTENANCE",
              "USER_TERMINATED"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResourceStatusScheduling": {
        "properties": {
          "availabilityDomain": {
            "description": "Specifies the availability domain (AD), which this instance should be scheduled on. The AD belongs to the spread GroupPlacementPolicy resource policy that has been assigned to the instance. Specify a value between 1-max count of availability domains in your GroupPlacementPolicy. See go/placement-policy-extension for more details.",
            "format": "int32",
            "type": "integer"
          },
          "terminationTimestamp": {
            "description": "Time in future when the instance will be terminated in RFC3339 text format.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResourceStatusServiceIntegrationStatus": {
        "description": "Represents the status of integration between instance and another service. See go/gce-backupdr-design for more details.",
        "properties": {
          "backupDr": {
            "$ref": "#/$defs/ResourceStatusServiceIntegrationStatusBackupDRStatus"
          }
        },
        "type": "object"
      },
      "ResourceStatusServiceIntegrationStatusBackupDRStatus": {
        "description": "Message defining compute perspective of the result of integration with Backup and DR. FAILED status indicates that the operation specified did not complete correctly and should be retried with the same value.",
        "properties": {
          "integrationDetails": {
            "description": "The PlanReference object created by Backup and DR to maintain the actual status of backups. May still be present if removing the backup plan fails.",
            "type": "string"
          },
          "state": {
            "description": "Enum representing the registration state of a Backup and DR backup plan for the instance.",
            "enum": [
              "ACTIVE",
              "CREATING",
              "DELETING",
              "FAILED",
              "STATE_UNSPECIFIED"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResourceStatusShutdownDetails": {
        "description": "Specifies if the instance is in `SHUTTING_DOWN` state or there is a instance stopping scheduled.",
        "properties": {
          "maxDuration": {
            "$ref": "#/$defs/Duration"
          },
          "requestTimestamp": {
            "description": "Past timestamp indicating the beginning of current `stopState` in RFC3339 text format.",
            "type": "string"
          },
          "stopState": {
            "description": "Current stopping state of the instance.",
            "enum": [
              "SHUTTING_DOWN",
              "STOPPING"
            ],
            "type": "string"
          },
          "targetState": {
            "description": "Target instance state.",
            "enum": [
              "DELETED",
              "STOPPED"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "Duration": {
        "description": "A Duration represents a fixed-length span of time represented as a count of seconds and fractions of seconds at nanosecond resolution. It is independent of any calendar and concepts like \"day\" or \"month\". Range is approximately 10,000 years.",
        "properties": {
          "nanos": {
            "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 `seconds` field and a positive `nanos` field. Must be from 0 to 999,999,999 inclusive.",
            "format": "int32",
            "type": "integer"
          },
          "seconds": {
            "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpcomingMaintenance": {
        "description": "Upcoming Maintenance notification information.",
        "properties": {
          "canReschedule": {
            "description": "Indicates if the maintenance can be customer triggered.",
            "type": "boolean"
          },
          "date": {
            "description": "[Output Only] The date when the maintenance will take place. This value is in RFC3339 text format. DEPRECATED: Use window_start_time instead.",
            "type": "string"
          },
          "latestWindowStartTime": {
            "description": "The latest time for the planned maintenance window to start. This timestamp value is in RFC3339 text format.",
            "type": "string"
          },
          "maintenanceStatus": {
            "enum": [
              "ONGOING",
              "PENDING",
              "UNKNOWN"
            ],
            "type": "string"
          },
          "startTimeWindow": {
            "$ref": "#/$defs/UpcomingMaintenanceTimeWindow"
          },
          "time": {
            "description": "[Output Only] The time when the maintenance will take place. This value is in RFC3339 text format. DEPRECATED: Use window_start_time instead.",
            "type": "string"
          },
          "type": {
            "description": "Defines the type of maintenance.",
            "enum": [
              "SCHEDULED",
              "UNKNOWN_TYPE",
              "UNSCHEDULED"
            ],
            "type": "string"
          },
          "windowEndTime": {
            "description": "The time by which the maintenance disruption will be completed. This timestamp value is in RFC3339 text format.",
            "type": "string"
          },
          "windowStartTime": {
            "description": "The current start time of the maintenance window. This timestamp value is in RFC3339 text format.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpcomingMaintenanceTimeWindow": {
        "description": "Represents a window of time using two timestamps: `earliest` and `latest`.",
        "properties": {
          "earliest": {
            "type": "string"
          },
          "latest": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Scheduling": {
        "description": "Sets the scheduling options for an Instance.",
        "properties": {
          "automaticRestart": {
            "description": "Specifies whether the instance should be automatically restarted if it is terminated by Compute Engine (not terminated by a user). You can only set the automatic restart option for standard instances. Preemptible instances cannot be automatically restarted. By default, this is set to true so an instance is automatically restarted if it is terminated by Compute Engine.",
            "type": "boolean"
          },
          "availabilityDomain": {
            "description": "Specifies the availability domain (AD), which this instance should be scheduled on. The AD belongs to the spread GroupPlacementPolicy resource policy that has been assigned to the instance. Specify a value between 1-max count of availability domains in your GroupPlacementPolicy. See go/placement-policy-extension for more details.",
            "format": "int32",
            "type": "integer"
          },
          "currentCpus": {
            "description": "Current number of vCPUs available for VM. 0 or unset means default vCPUs of the current machine type.",
            "format": "int32",
            "type": "integer"
          },
          "currentMemoryMb": {
            "description": "Current amount of memory (in MB) available for VM. 0 or unset means default amount of memory of the current machine type.",
            "format": "int64",
            "type": "string"
          },
          "gracefulShutdown": {
            "$ref": "#/$defs/SchedulingGracefulShutdown"
          },
          "hostErrorTimeoutSeconds": {
            "description": "Specify the time in seconds for host error detection, the value must be within the range of [90, 330] with the increment of 30, if unset, the default behavior of host error recovery will be used.",
            "format": "int32",
            "type": "integer"
          },
          "instanceTerminationAction": {
            "description": "Specifies the termination action for the instance.",
            "enum": [
              "DELETE",
              "INSTANCE_TERMINATION_ACTION_UNSPECIFIED",
              "STOP"
            ],
            "type": "string"
          },
          "latencyTolerant": {
            "description": "Defines whether the instance is tolerant of higher cpu latency. This can only be set during instance creation, or when the instance is not currently running. It must not be set if the preemptible option is also set.",
            "type": "boolean"
          },
          "localSsdRecoveryTimeout": {
            "$ref": "#/$defs/Duration"
          },
          "locationHint": {
            "description": "An opaque location hint used to place the instance close to other resources. This field is for use by internal tools that use the public API.",
            "type": "string"
          },
          "maintenanceFreezeDurationHours": {
            "description": "Specifies the number of hours after VM instance creation where the VM won't be scheduled for maintenance.",
            "format": "int32",
            "type": "integer"
          },
          "maintenanceInterval": {
            "description": "Specifies the frequency of planned maintenance events. The accepted values are: `PERIODIC`.",
            "enum": [
              "AS_NEEDED",
              "PERIODIC",
              "RECURRENT"
            ],
            "type": "string"
          },
          "maxRunDuration": {
            "$ref": "#/$defs/Duration"
          },
          "minNodeCpus": {
            "description": "The minimum number of virtual CPUs this instance will consume when running on a sole-tenant node.",
            "format": "int32",
            "type": "integer"
          },
          "nodeAffinities": {
            "description": "A set of node affinity and anti-affinity configurations. Refer to Configuring node affinity for more information. Overrides reservationAffinity.",
            "items": {
              "$ref": "#/$defs/SchedulingNodeAffinity"
            },
            "type": "array"
          },
          "onHostMaintenance": {
            "description": "Defines the maintenance behavior for this instance. For standard instances, the default behavior is MIGRATE. For preemptible instances, the default and only possible behavior is TERMINATE. For more information, see Set VM host maintenance policy.",
            "enum": [
              "MIGRATE",
              "TERMINATE"
            ],
            "type": "string"
          },
          "onInstanceStopAction": {
            "$ref": "#/$defs/SchedulingOnInstanceStopAction"
          },
          "preemptible": {
            "description": "Defines whether the instance is preemptible. This can only be set during instance creation or while the instance is stopped and therefore, in a `TERMINATED` state. See Instance Life Cycle for more information on the possible instance states.",
            "type": "boolean"
          },
          "provisioningModel": {
            "description": "Specifies the provisioning model of the instance.",
            "enum": [
              "SPOT",
              "STANDARD"
            ],
            "type": "string"
          },
          "terminationTime": {
            "description": "Specifies the timestamp, when the instance will be terminated, in RFC3339 text format. If specified, the instance termination action will be performed at the termination time.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SchedulingGracefulShutdown": {
        "description": "Configuration for gracefully shutting down the instance.",
        "properties": {
          "enabled": {
            "description": "Opts-in for graceful shutdown.",
            "type": "boolean"
          },
          "maxDuration": {
            "$ref": "#/$defs/Duration"
          }
        },
        "type": "object"
      },
      "SchedulingNodeAffinity": {
        "description": "Node Affinity: the configuration of desired nodes onto which this Instance could be scheduled.",
        "properties": {
          "key": {
            "description": "Corresponds to the label key of Node resource.",
            "type": "string"
          },
          "operator": {
            "description": "Defines the operation of node selection. Valid operators are IN for affinity and NOT_IN for anti-affinity.",
            "enum": [
              "IN",
              "NOT_IN",
              "OPERATOR_UNSPECIFIED"
            ],
            "type": "string"
          },
          "values": {
            "description": "Corresponds to the label values of Node resource.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "SchedulingOnInstanceStopAction": {
        "description": "Defines the behaviour for instances with the instance_termination_action STOP.",
        "properties": {
          "discardLocalSsd": {
            "description": "If true, the contents of any attached Local SSD disks will be discarded else, the Local SSD data will be preserved when the instance is stopped at the end of the run duration/termination time.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServiceAccount": {
        "description": "A service account.",
        "properties": {
          "email": {
            "description": "Email address of the service account.",
            "type": "string"
          },
          "scopes": {
            "description": "The list of scopes to be made available for this service account.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServiceIntegrationSpec": {
        "description": "Specifies the parameters to configure an integration with instances.",
        "properties": {
          "backupDr": {
            "$ref": "#/$defs/ServiceIntegrationSpecBackupDRSpec"
          }
        },
        "type": "object"
      },
      "ServiceIntegrationSpecBackupDRSpec": {
        "description": "Specifies parameters to Backup and DR to attach a BackupPlan to a compute instance for managed VM backup.",
        "properties": {
          "plan": {
            "description": "The BackupPlan resource to attach to the instance. Specified as a resource reference in instances, and regional instance templates, and as just the plan name in global instance templates",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ShieldedInstanceConfig": {
        "description": "A set of Shielded Instance options.",
        "properties": {
          "enableIntegrityMonitoring": {
            "description": "Defines whether the instance has integrity monitoring enabled. Enabled by default.",
            "type": "boolean"
          },
          "enableSecureBoot": {
            "description": "Defines whether the instance has Secure Boot enabled. Disabled by default.",
            "type": "boolean"
          },
          "enableVtpm": {
            "description": "Defines whether the instance has the vTPM enabled. Enabled by default.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ShieldedInstanceIntegrityPolicy": {
        "description": "The policy describes the baseline against which Instance boot integrity is measured.",
        "properties": {
          "updateAutoLearnPolicy": {
            "description": "Updates the integrity policy baseline using the measurements from the VM instance's most recent boot.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ShieldedVmConfig": {
        "description": "A set of Shielded VM options.",
        "properties": {
          "enableIntegrityMonitoring": {
            "description": "Defines whether the instance has integrity monitoring enabled.",
            "type": "boolean"
          },
          "enableSecureBoot": {
            "description": "Defines whether the instance has Secure Boot enabled.",
            "type": "boolean"
          },
          "enableVtpm": {
            "description": "Defines whether the instance has the vTPM enabled.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ShieldedVmIntegrityPolicy": {
        "description": "The policy describes the baseline against which VM instance boot integrity is measured.",
        "properties": {
          "updateAutoLearnPolicy": {
            "description": "Updates the integrity policy baseline using the measurements from the VM instance's most recent boot.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "Tags": {
        "description": "A set of instance tags.",
        "properties": {
          "fingerprint": {
            "description": "Specifies a fingerprint for this request, which is essentially a hash of the tags' contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update tags. You must always provide an up-to-date fingerprint hash in order to update or change tags. To see the latest fingerprint, make get() request to the instance.",
            "format": "byte",
            "type": "string"
          },
          "items": {
            "description": "An array of tags. Each tag must be 1-63 characters long, and comply with RFC1035.",
            "items": {
              "type": "string"
            },
            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
            "type": "array"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "https://compute.googleapis.com/compute/alpha/projects/{project}/zones/{zone}/instances/{instance}{?clearSecureTag,minimalAction,mostDisruptiveAllowedAction,requestId,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType,userIp}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Represents an Operation resource. Google Compute Engine has three Operation resources: * [Global](/compute/docs/reference/rest/alpha/globalOperations) * [Regional](/compute/docs/reference/rest/alpha/regionOperations) * [Zonal](/compute/docs/reference/rest/alpha/zoneOperations) You can use an operation resource to manage asynchronous API requests. For more information, read Handling API responses. Operations can be global, regional or zonal. - For global operations, use the `globalOperations` resource. - For regional operations, use the `regionOperations` resource. - For zonal operations, use the `zoneOperations` resource. For more information, read Global, Regional, and Zonal Resources. Note that completed Operation resources have a limited retention period.",
        "**Key properties:**",
        {
          "$ul": [
            "**clientOperationId**: [Output Only] The value of `requestId` if you provided it in the request. Not present otherwise.",
            "**creationTimestamp**: [Deprecated] This field is deprecated.",
            "**description**: [Output Only] A textual description of the operation, which is set when the operation is created.",
            "**endTime**: [Output Only] The time that this operation was completed. This value is in RFC3339 text format.",
            [
              "**error**: [Output Only] If errors are generated during processing of the operation, this field will be populated.",
              {
                "$ul": [
                  "**errors**: [Output Only] The array of errors encountered while processing this operation."
                ]
              }
            ],
            "**httpErrorMessage**: [Output Only] If the operation fails, this field contains the HTTP error message that was returned, such as `NOT FOUND`.",
            "**httpErrorStatusCode**: [Output Only] If the operation fails, this field contains the HTTP error status code that was returned. For example, a `404` means the resource was not found.",
            "**id**: [Output Only] The unique identifier for the operation. This identifier is defined by the server.",
            "**insertTime**: [Output Only] The time that this operation was requested. This value is in RFC3339 text format.",
            [
              "**instancesBulkInsertOperationMetadata**",
              {
                "$ul": [
                  "**perLocationStatus**: Status information per location (location name is key). Example key: zones/us-central1-a"
                ]
              }
            ],
            "**kind**: [Output Only] Type of the resource. Always `compute#operation` for Operation resources. (default: compute#operation)",
            "**name**: [Output Only] Name of the operation.",
            "**operationGroupId**: [Output Only] An ID that represents a group of operations, such as when a group of operations results from a `bulkInsert` API request.",
            "**operationType**: [Output Only] The type of operation, such as `insert`, `update`, or `delete`, and so on.",
            "**progress**: [Output Only] An optional progress indicator that ranges from 0 to 100. There is no requirement that this be linear or support any granularity of operations. This should not be used to guess when the operation will be complete. This number should monotonically increase as the operation progresses.",
            "**region**: [Output Only] The URL of the region where the operation resides. Only applicable when performing regional operations.",
            "**selfLink**: [Output Only] Server-defined URL for the resource.",
            "**selfLinkWithId**: [Output Only] Server-defined URL for this resource with the resource id.",
            [
              "**setCommonInstanceMetadataOperationMetadata**",
              {
                "$ul": [
                  "**clientOperationId**: [Output Only] The client operation id.",
                  "**perLocationOperations**: [Output Only] Status information per location (location name is key). Example key: zones/us-central1-a"
                ]
              }
            ],
            "**startTime**: [Output Only] The time that this operation was started by the server. This value is in RFC3339 text format.",
            "**status**: [Output Only] The status of the operation, which can be one of the following: `PENDING`, `RUNNING`, or `DONE`.",
            "**statusMessage**: [Output Only] An optional textual description of the current status of the operation.",
            "**targetId**: [Output Only] The unique target ID, which identifies a specific incarnation of the target resource.",
            "**targetLink**: [Output Only] The URL of the resource that the operation modifies. For operations related to creating a snapshot, this points to the persistent disk that the snapshot was created from.",
            "**user**: [Output Only] User who requested the operation, for example: `user@example.com` or `alice_smith_identifier (global/workforcePools/example-com-us-employees)`.",
            "**warnings**: [Output Only] If warning messages are generated during processing of the operation, this field will be populated.",
            "**zone**: [Output Only] The URL of the zone where the operation resides. Only applicable when performing per-zone operations."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
