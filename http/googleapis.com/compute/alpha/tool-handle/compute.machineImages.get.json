{
  "name": "compute_machineImages_get",
  "description": "Returns the specified machine image.",
  "parameters": {
    "type": "object",
    "properties": {
      "project": {
        "type": "string",
        "description": "Project ID for this request."
      },
      "machineImage": {
        "type": "string",
        "description": "The name of the machine image."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "userIp": {
        "type": "string",
        "description": "Legacy name for parameter that has been superseded by `quotaUser`."
      }
    },
    "required": [
      "project",
      "machineImage"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://compute.googleapis.com/compute/alpha/projects/{project}/global/machineImages/{machineImage}{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType,userIp}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Represents a machine image resource. A machine image is a Compute Engine resource that stores all the configuration, metadata, permissions, and data from one or more disks required to create a Virtual machine (VM) instance. For more information, see Machine images.",
        "**Key properties:**",
        {
          "$ul": [
            "**creationTimestamp**: [Output Only] The creation timestamp for this machine image in RFC3339 text format.",
            "**description**: An optional description of this resource. Provide this property when you create the resource.",
            "**guestFlush**: [Input Only] Whether to attempt an application consistent machine image by informing the OS to prepare for the snapshot process.",
            "**id**: [Output Only] A unique identifier for this machine image. The server defines this identifier.",
            [
              "**instanceProperties**",
              {
                "$ul": [
                  [
                    "**advancedMachineFeatures**: Specifies options for controlling advanced machine features. Options that would traditionally be configured in a BIOS belong here. Features that require operating system support may have corresponding entries in the GuestOsFeatures of an Image (e.g., whether or not the OS in the Image supports nested virtualization being enabled or disabled).",
                    {
                      "$ul": [
                        "**enableNestedVirtualization**: Whether to enable nested virtualization or not (default is false).",
                        "**enableUefiNetworking**: Whether to enable UEFI networking for instance creation.",
                        "**enableWatchdogTimer**: Whether to enable the watchdog timer.",
                        "**numaNodeCount**: The number of vNUMA nodes.",
                        "**performanceMonitoringUnit**: Type of Performance Monitoring Unit requested on instance.",
                        "**threadsPerCore**: The number of threads per physical core. To disable simultaneous multithreading (SMT) set this to 1. If unset, the maximum number of threads supported per core by the underlying processor is assumed.",
                        "**visibleCoreCount**: The number of physical cores to expose to an instance. Multiply by the number of threads per core to compute the total number of virtual CPUs to expose to the instance. If unset, the number of cores is inferred from the instance's nominal CPU count and the underlying platform's SMT width."
                      ]
                    }
                  ],
                  "**canIpForward**: Enables instances created based on these properties to send packets with source IP addresses other than their own and receive packets with destination IP addresses other than their own. If these instances will be used as an IP gateway or it will be set as the next-hop in a Route resource, specify true. If unsure, leave this set to false. See the Enable IP forwarding documentation for more information.",
                  [
                    "**confidentialInstanceConfig**: A set of Confidential Instance options.",
                    {
                      "$ul": [
                        "**confidentialInstanceType**: Defines the type of technology used by the confidential instance.",
                        "**enableConfidentialCompute**: Defines whether the instance should have confidential compute enabled."
                      ]
                    }
                  ],
                  "**description**: An optional text description for the instances that are created from these properties.",
                  "**disks**: An array of disks that are associated with the instances that are created from these properties.",
                  [
                    "**displayDevice**: A set of Display Device options",
                    {
                      "$ul": [
                        "**enableDisplay**: Defines whether the instance has Display enabled."
                      ]
                    }
                  ],
                  "**guestAccelerators**: A list of guest accelerator cards' type and count to use for instances created from these properties.",
                  "**keyRevocationActionType**: KeyRevocationActionType of the instance. Supported options are \"STOP\" and \"NONE\". The default value is \"NONE\" if it is not specified.",
                  "**labels**: Labels to apply to instances that are created from these properties.",
                  "**machineType**: The machine type to use for instances that are created from these properties.",
                  [
                    "**metadata**: A metadata key/value entry.",
                    {
                      "$ul": [
                        "**fingerprint**: Specifies a fingerprint for this request, which is essentially a hash of the metadata's contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update metadata. You must always provide an up-to-date fingerprint hash in order to update or change metadata, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve the resource.",
                        "**items**: Array of key/value pairs. The total size of all keys and values must be less than 512 KB.",
                        "**kind**: [Output Only] Type of the resource. Always compute#metadata for metadata. (default: compute#metadata)"
                      ]
                    }
                  ],
                  "**minCpuPlatform**: Minimum cpu/platform to be used by instances. The instance may be scheduled on the specified or newer cpu/platform. Applicable values are the friendly names of CPU platforms, such as minCpuPlatform: \"Intel Haswell\" or minCpuPlatform: \"Intel Sandy Bridge\". For more information, read Specifying a Minimum CPU Platform.",
                  "**networkInterfaces**: An array of network access configurations for this interface.",
                  [
                    "**networkPerformanceConfig**",
                    {
                      "$ul": [
                        "**externalIpEgressBandwidthTier**",
                        "**totalEgressBandwidthTier**"
                      ]
                    }
                  ],
                  "**partnerMetadata**: Partner Metadata assigned to the instance properties. A map from a subdomain (namespace) to entries map.",
                  "**postKeyRevocationActionType**: PostKeyRevocationActionType of the instance.",
                  "**privateIpv6GoogleAccess**: The private IPv6 google access type for VMs. If not specified, use INHERIT_FROM_SUBNETWORK as default. Note that for MachineImage, this is not supported yet.",
                  [
                    "**reservationAffinity**: Specifies the reservations that this instance can consume from.",
                    {
                      "$ul": [
                        "**consumeReservationType**: Specifies the type of reservation from which this instance can consume resources: ANY_RESERVATION (default), SPECIFIC_RESERVATION, or NO_RESERVATION. See Consuming reserved instances for examples.",
                        "**key**: Corresponds to the label key of a reservation resource. To target a SPECIFIC_RESERVATION by name, specify googleapis.com/reservation-name as the key and specify the name of your reservation as its value.",
                        "**values**: Corresponds to the label values of a reservation resource. This can be either a name to a reservation in the same project or \"projects/different-project/reservations/some-reservation-name\" to target a shared reservation in the same zone but in a different project."
                      ]
                    }
                  ],
                  "**resourceManagerTags**: Resource manager tags to be bound to the instance. Tag keys and values have the same definition as resource manager tags. Keys must be in the format `tagKeys/{tag_key_id}`, and values are in the format `tagValues/456`. The field is ignored (both PUT & PATCH) when empty.",
                  "**resourcePolicies**: Resource policies (names, not URLs) applied to instances created from these properties. Note that for MachineImage, this is not supported yet.",
                  [
                    "**scheduling**: Sets the scheduling options for an Instance.",
                    {
                      "$ul": [
                        "**automaticRestart**: Specifies whether the instance should be automatically restarted if it is terminated by Compute Engine (not terminated by a user). You can only set the automatic restart option for standard instances. Preemptible instances cannot be automatically restarted. By default, this is set to true so an instance is automatically restarted if it is terminated by Compute Engine.",
                        "**availabilityDomain**: Specifies the availability domain (AD), which this instance should be scheduled on. The AD belongs to the spread GroupPlacementPolicy resource policy that has been assigned to the instance. Specify a value between 1-max count of availability domains in your GroupPlacementPolicy. See go/placement-policy-extension for more details.",
                        "**currentCpus**: Current number of vCPUs available for VM. 0 or unset means default vCPUs of the current machine type.",
                        "**currentMemoryMb**: Current amount of memory (in MB) available for VM. 0 or unset means default amount of memory of the current machine type.",
                        [
                          "**gracefulShutdown**: Configuration for gracefully shutting down the instance.",
                          {
                            "$ul": [
                              "**enabled**: Opts-in for graceful shutdown.",
                              [
                                "**maxDuration**: A Duration represents a fixed-length span of time represented as a count of seconds and fractions of seconds at nanosecond resolution. It is independent of any calendar and concepts like \"day\" or \"month\". Range is approximately 10,000 years.",
                                {
                                  "$ul": [
                                    "**nanos**: Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 `seconds` field and a positive `nanos` field. Must be from 0 to 999,999,999 inclusive.",
                                    "**seconds**: Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years"
                                  ]
                                }
                              ]
                            ]
                          }
                        ],
                        "**hostErrorTimeoutSeconds**: Specify the time in seconds for host error detection, the value must be within the range of [90, 330] with the increment of 30, if unset, the default behavior of host error recovery will be used.",
                        "**instanceTerminationAction**: Specifies the termination action for the instance.",
                        "**latencyTolerant**: Defines whether the instance is tolerant of higher cpu latency. This can only be set during instance creation, or when the instance is not currently running. It must not be set if the preemptible option is also set.",
                        [
                          "**localSsdRecoveryTimeout**: A Duration represents a fixed-length span of time represented as a count of seconds and fractions of seconds at nanosecond resolution. It is independent of any calendar and concepts like \"day\" or \"month\". Range is approximately 10,000 years.",
                          {
                            "$ul": [
                              "**nanos**: Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 `seconds` field and a positive `nanos` field. Must be from 0 to 999,999,999 inclusive.",
                              "**seconds**: Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years"
                            ]
                          }
                        ],
                        "**locationHint**: An opaque location hint used to place the instance close to other resources. This field is for use by internal tools that use the public API.",
                        "**maintenanceFreezeDurationHours**: Specifies the number of hours after VM instance creation where the VM won't be scheduled for maintenance.",
                        "**maintenanceInterval**: Specifies the frequency of planned maintenance events. The accepted values are: `PERIODIC`.",
                        [
                          "**maxRunDuration**: A Duration represents a fixed-length span of time represented as a count of seconds and fractions of seconds at nanosecond resolution. It is independent of any calendar and concepts like \"day\" or \"month\". Range is approximately 10,000 years.",
                          {
                            "$ul": [
                              "**nanos**: Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 `seconds` field and a positive `nanos` field. Must be from 0 to 999,999,999 inclusive.",
                              "**seconds**: Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years"
                            ]
                          }
                        ],
                        "**minNodeCpus**: The minimum number of virtual CPUs this instance will consume when running on a sole-tenant node.",
                        "**nodeAffinities**: A set of node affinity and anti-affinity configurations. Refer to Configuring node affinity for more information. Overrides reservationAffinity.",
                        "**onHostMaintenance**: Defines the maintenance behavior for this instance. For standard instances, the default behavior is MIGRATE. For preemptible instances, the default and only possible behavior is TERMINATE. For more information, see Set VM host maintenance policy.",
                        [
                          "**onInstanceStopAction**: Defines the behaviour for instances with the instance_termination_action STOP.",
                          {
                            "$ul": [
                              "**discardLocalSsd**: If true, the contents of any attached Local SSD disks will be discarded else, the Local SSD data will be preserved when the instance is stopped at the end of the run duration/termination time."
                            ]
                          }
                        ],
                        "**preemptible**: Defines whether the instance is preemptible. This can only be set during instance creation or while the instance is stopped and therefore, in a `TERMINATED` state. See Instance Life Cycle for more information on the possible instance states.",
                        "**provisioningModel**: Specifies the provisioning model of the instance.",
                        "**terminationTime**: Specifies the timestamp, when the instance will be terminated, in RFC3339 text format. If specified, the instance termination action will be performed at the termination time."
                      ]
                    }
                  ],
                  "**secureTags**: [Input Only] Secure tags to apply to this instance. Maximum number of secure tags allowed is 50. Note that for MachineImage, this is not supported yet.",
                  "**serviceAccounts**: A list of service accounts with specified scopes. Access tokens for these service accounts are available to the instances that are created from these properties. Use metadata queries to obtain the access tokens for these instances.",
                  "**serviceIntegrationSpecs**: Mapping of user defined keys to ServiceIntegrationSpec.",
                  [
                    "**shieldedInstanceConfig**: A set of Shielded Instance options.",
                    {
                      "$ul": [
                        "**enableIntegrityMonitoring**: Defines whether the instance has integrity monitoring enabled. Enabled by default.",
                        "**enableSecureBoot**: Defines whether the instance has Secure Boot enabled. Disabled by default.",
                        "**enableVtpm**: Defines whether the instance has the vTPM enabled. Enabled by default."
                      ]
                    }
                  ],
                  [
                    "**shieldedVmConfig**: A set of Shielded VM options.",
                    {
                      "$ul": [
                        "**enableIntegrityMonitoring**: Defines whether the instance has integrity monitoring enabled.",
                        "**enableSecureBoot**: Defines whether the instance has Secure Boot enabled.",
                        "**enableVtpm**: Defines whether the instance has the vTPM enabled."
                      ]
                    }
                  ],
                  [
                    "**tags**: A set of instance tags.",
                    {
                      "$ul": [
                        "**fingerprint**: Specifies a fingerprint for this request, which is essentially a hash of the tags' contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update tags. You must always provide an up-to-date fingerprint hash in order to update or change tags. To see the latest fingerprint, make get() request to the instance.",
                        "**items**: An array of tags. Each tag must be 1-63 characters long, and comply with RFC1035."
                      ]
                    }
                  ]
                ]
              }
            ],
            "**kind**: [Output Only] The resource type, which is always compute#machineImage for machine image. (default: compute#machineImage)",
            [
              "**machineImageEncryptionKey**",
              {
                "$ul": [
                  "**kmsKeyName**: The name of the encryption key that is stored in Google Cloud KMS. For example: \"kmsKeyName\": \"projects/kms_project_id/locations/region/keyRings/ key_region/cryptoKeys/key The fully-qualifed key name may be returned for resource GET requests. For example: \"kmsKeyName\": \"projects/kms_project_id/locations/region/keyRings/ key_region/cryptoKeys/key /cryptoKeyVersions/1 ",
                  "**kmsKeyServiceAccount**: The service account being used for the encryption request for the given KMS key. If absent, the Compute Engine default service account is used. For example: \"kmsKeyServiceAccount\": \"name@project_id.iam.gserviceaccount.com/ ",
                  "**rawKey**: Specifies a 256-bit customer-supplied encryption key, encoded in RFC 4648 base64 to either encrypt or decrypt this resource. You can provide either the rawKey or the rsaEncryptedKey. For example: \"rawKey\": \"SGVsbG8gZnJvbSBHb29nbGUgQ2xvdWQgUGxhdGZvcm0=\" ",
                  "**rsaEncryptedKey**: Specifies an RFC 4648 base64 encoded, RSA-wrapped 2048-bit customer-supplied encryption key to either encrypt or decrypt this resource. You can provide either the rawKey or the rsaEncryptedKey. For example: \"rsaEncryptedKey\": \"ieCx/NcW06PcT7Ep1X6LUTc/hLvUDYyzSZPPVCVPTVEohpeHASqC8uw5TzyO9U+Fka9JFH z0mBibXUInrC/jEk014kCK/NPjYgEMOyssZ4ZINPKxlUh2zn1bV+MCaTICrdmuSBTWlUUiFoD D6PYznLwh8ZNdaheCeZ8ewEXgFQ8V+sDroLaN3Xs3MDTXQEMMoNUXMCZEIpg9Vtp9x2oe==\" The key must meet the following requirements before you can provide it to Compute Engine: 1. The key is wrapped using a RSA public key certificate provided by Google. 2. After being wrapped, the key must be encoded in RFC 4648 base64 encoding. Gets the RSA public key certificate provided by Google at: https://cloud-certs.storage.googleapis.com/google-cloud-csek-ingress.pem ",
                  "**sha256**: [Output only] The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied encryption key that protects this resource."
                ]
              }
            ],
            "**name**: Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
            "**satisfiesPzi**: Output only. Reserved for future use.",
            "**satisfiesPzs**: [Output Only] Reserved for future use.",
            "**savedDisks**: An array of Machine Image specific properties for disks attached to the source instance",
            "**selfLink**: [Output Only] The URL for this machine image. The server defines this URL.",
            "**selfLinkWithId**: [Output Only] Server-defined URL for this resource with the resource id.",
            "**sourceDiskEncryptionKeys**: [Input Only] The customer-supplied encryption key of the disks attached to the source instance. Required if the source disk is protected by a customer-supplied encryption key.",
            "**sourceInstance**: The source instance used to create the machine image. You can provide this as a partial or full URL to the resource. For example, the following are valid values: - https://www.googleapis.com/compute/v1/projects/project/zones/zone /instances/instance - projects/project/zones/zone/instances/instance ",
            [
              "**sourceInstanceProperties**: DEPRECATED: Please use compute#instanceProperties instead. New properties will not be added to this field.",
              {
                "$ul": [
                  "**canIpForward**: Enables instances created based on this machine image to send packets with source IP addresses other than their own and receive packets with destination IP addresses other than their own. If these instances will be used as an IP gateway or it will be set as the next-hop in a Route resource, specify true. If unsure, leave this set to false. See the Enable IP forwarding documentation for more information.",
                  "**deletionProtection**: Whether the instance created from this machine image should be protected against deletion.",
                  "**description**: An optional text description for the instances that are created from this machine image.",
                  "**disks**: An array of disks that are associated with the instances that are created from this machine image.",
                  "**guestAccelerators**: A list of guest accelerator cards' type and count to use for instances created from this machine image.",
                  "**keyRevocationActionType**: KeyRevocationActionType of the instance. Supported options are \"STOP\" and \"NONE\". The default value is \"NONE\" if it is not specified.",
                  "**labels**: Labels to apply to instances that are created from this machine image.",
                  "**machineType**: The machine type to use for instances that are created from this machine image.",
                  [
                    "**metadata**: A metadata key/value entry.",
                    {
                      "$ul": [
                        "**fingerprint**: Specifies a fingerprint for this request, which is essentially a hash of the metadata's contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update metadata. You must always provide an up-to-date fingerprint hash in order to update or change metadata, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve the resource.",
                        "**items**: Array of key/value pairs. The total size of all keys and values must be less than 512 KB.",
                        "**kind**: [Output Only] Type of the resource. Always compute#metadata for metadata. (default: compute#metadata)"
                      ]
                    }
                  ],
                  "**minCpuPlatform**: Minimum cpu/platform to be used by instances created from this machine image. The instance may be scheduled on the specified or newer cpu/platform. Applicable values are the friendly names of CPU platforms, such as minCpuPlatform: \"Intel Haswell\" or minCpuPlatform: \"Intel Sandy Bridge\". For more information, read Specifying a Minimum CPU Platform.",
                  "**networkInterfaces**: An array of network access configurations for this interface.",
                  "**postKeyRevocationActionType**: PostKeyRevocationActionType of the instance.",
                  [
                    "**scheduling**: Sets the scheduling options for an Instance.",
                    {
                      "$ul": [
                        "**automaticRestart**: Specifies whether the instance should be automatically restarted if it is terminated by Compute Engine (not terminated by a user). You can only set the automatic restart option for standard instances. Preemptible instances cannot be automatically restarted. By default, this is set to true so an instance is automatically restarted if it is terminated by Compute Engine.",
                        "**availabilityDomain**: Specifies the availability domain (AD), which this instance should be scheduled on. The AD belongs to the spread GroupPlacementPolicy resource policy that has been assigned to the instance. Specify a value between 1-max count of availability domains in your GroupPlacementPolicy. See go/placement-policy-extension for more details.",
                        "**currentCpus**: Current number of vCPUs available for VM. 0 or unset means default vCPUs of the current machine type.",
                        "**currentMemoryMb**: Current amount of memory (in MB) available for VM. 0 or unset means default amount of memory of the current machine type.",
                        [
                          "**gracefulShutdown**: Configuration for gracefully shutting down the instance.",
                          {
                            "$ul": [
                              "**enabled**: Opts-in for graceful shutdown.",
                              [
                                "**maxDuration**: A Duration represents a fixed-length span of time represented as a count of seconds and fractions of seconds at nanosecond resolution. It is independent of any calendar and concepts like \"day\" or \"month\". Range is approximately 10,000 years.",
                                {
                                  "$ul": [
                                    "**nanos**: Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 `seconds` field and a positive `nanos` field. Must be from 0 to 999,999,999 inclusive.",
                                    "**seconds**: Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years"
                                  ]
                                }
                              ]
                            ]
                          }
                        ],
                        "**hostErrorTimeoutSeconds**: Specify the time in seconds for host error detection, the value must be within the range of [90, 330] with the increment of 30, if unset, the default behavior of host error recovery will be used.",
                        "**instanceTerminationAction**: Specifies the termination action for the instance.",
                        "**latencyTolerant**: Defines whether the instance is tolerant of higher cpu latency. This can only be set during instance creation, or when the instance is not currently running. It must not be set if the preemptible option is also set.",
                        [
                          "**localSsdRecoveryTimeout**: A Duration represents a fixed-length span of time represented as a count of seconds and fractions of seconds at nanosecond resolution. It is independent of any calendar and concepts like \"day\" or \"month\". Range is approximately 10,000 years.",
                          {
                            "$ul": [
                              "**nanos**: Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 `seconds` field and a positive `nanos` field. Must be from 0 to 999,999,999 inclusive.",
                              "**seconds**: Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years"
                            ]
                          }
                        ],
                        "**locationHint**: An opaque location hint used to place the instance close to other resources. This field is for use by internal tools that use the public API.",
                        "**maintenanceFreezeDurationHours**: Specifies the number of hours after VM instance creation where the VM won't be scheduled for maintenance.",
                        "**maintenanceInterval**: Specifies the frequency of planned maintenance events. The accepted values are: `PERIODIC`.",
                        [
                          "**maxRunDuration**: A Duration represents a fixed-length span of time represented as a count of seconds and fractions of seconds at nanosecond resolution. It is independent of any calendar and concepts like \"day\" or \"month\". Range is approximately 10,000 years.",
                          {
                            "$ul": [
                              "**nanos**: Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 `seconds` field and a positive `nanos` field. Must be from 0 to 999,999,999 inclusive.",
                              "**seconds**: Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years"
                            ]
                          }
                        ],
                        "**minNodeCpus**: The minimum number of virtual CPUs this instance will consume when running on a sole-tenant node.",
                        "**nodeAffinities**: A set of node affinity and anti-affinity configurations. Refer to Configuring node affinity for more information. Overrides reservationAffinity.",
                        "**onHostMaintenance**: Defines the maintenance behavior for this instance. For standard instances, the default behavior is MIGRATE. For preemptible instances, the default and only possible behavior is TERMINATE. For more information, see Set VM host maintenance policy.",
                        [
                          "**onInstanceStopAction**: Defines the behaviour for instances with the instance_termination_action STOP.",
                          {
                            "$ul": [
                              "**discardLocalSsd**: If true, the contents of any attached Local SSD disks will be discarded else, the Local SSD data will be preserved when the instance is stopped at the end of the run duration/termination time."
                            ]
                          }
                        ],
                        "**preemptible**: Defines whether the instance is preemptible. This can only be set during instance creation or while the instance is stopped and therefore, in a `TERMINATED` state. See Instance Life Cycle for more information on the possible instance states.",
                        "**provisioningModel**: Specifies the provisioning model of the instance.",
                        "**terminationTime**: Specifies the timestamp, when the instance will be terminated, in RFC3339 text format. If specified, the instance termination action will be performed at the termination time."
                      ]
                    }
                  ],
                  "**serviceAccounts**: A list of service accounts with specified scopes. Access tokens for these service accounts are available to the instances that are created from this machine image. Use metadata queries to obtain the access tokens for these instances.",
                  [
                    "**tags**: A set of instance tags.",
                    {
                      "$ul": [
                        "**fingerprint**: Specifies a fingerprint for this request, which is essentially a hash of the tags' contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update tags. You must always provide an up-to-date fingerprint hash in order to update or change tags. To see the latest fingerprint, make get() request to the instance.",
                        "**items**: An array of tags. Each tag must be 1-63 characters long, and comply with RFC1035."
                      ]
                    }
                  ]
                ]
              }
            ],
            "**status**: [Output Only] The status of the machine image. One of the following values: INVALID, CREATING, READY, DELETING, and UPLOADING.",
            "**storageLocations**: The regional or multi-regional Cloud Storage bucket location where the machine image is stored.",
            "**totalStorageBytes**: [Output Only] Total size of the storage used by the machine image."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
