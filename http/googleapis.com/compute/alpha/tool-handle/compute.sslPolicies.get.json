{
  "name": "compute_sslPolicies_get",
  "description": "Lists all of the ordered rules present in a single specified policy.",
  "parameters": {
    "type": "object",
    "properties": {
      "project": {
        "type": "string",
        "description": "Project ID for this request."
      },
      "sslPolicy": {
        "type": "string",
        "description": "Name of the SSL policy to update. The name must be 1-63 characters long, and comply with RFC1035."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "userIp": {
        "type": "string",
        "description": "Legacy name for parameter that has been superseded by `quotaUser`."
      }
    },
    "required": [
      "project",
      "sslPolicy"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://compute.googleapis.com/compute/alpha/projects/{project}/global/sslPolicies/{sslPolicy}{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType,userIp}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Represents an SSL Policy resource. Use SSL policies to control SSL features, such as versions and cipher suites, that are offered by Application Load Balancers and proxy Network Load Balancers. For more information, read SSL policies overview.",
        "**Key properties:**",
        {
          "$ul": [
            "**creationTimestamp**: [Output Only] Creation timestamp in RFC3339 text format.",
            "**customFeatures**: A list of features enabled when the selected profile is CUSTOM. The method returns the set of features that can be specified in this list. This field must be empty if the profile is not CUSTOM.",
            "**description**: An optional description of this resource. Provide this property when you create the resource.",
            "**enabledFeatures**: [Output Only] The list of features enabled in the SSL policy.",
            "**fingerprint**: Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a SslPolicy. An up-to-date fingerprint must be provided in order to update the SslPolicy, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve an SslPolicy.",
            "**id**: [Output Only] The unique identifier for the resource. This identifier is defined by the server.",
            "**kind**: [Output only] Type of the resource. Always compute#sslPolicyfor SSL policies. (default: compute#sslPolicy)",
            "**minTlsVersion**: The minimum version of SSL protocol that can be used by the clients to establish a connection with the load balancer. This can be one of TLS_1_0, TLS_1_1, TLS_1_2.",
            "**name**: Name of the resource. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
            "**profile**: Profile specifies the set of SSL features that can be used by the load balancer when negotiating SSL with clients. This can be one of COMPATIBLE, MODERN, RESTRICTED, or CUSTOM. If using CUSTOM, the set of SSL features to enable must be specified in the customFeatures field.",
            "**region**: [Output Only] URL of the region where the regional SSL policy resides. This field is not applicable to global SSL policies.",
            "**selfLink**: [Output Only] Server-defined URL for the resource.",
            "**selfLinkWithId**: [Output Only] Server-defined URL for this resource with the resource id.",
            [
              "**tlsSettings**: The TLS settings for the server.",
              {
                "$ul": [
                  [
                    "**proxyTlsContext**: [Deprecated] The TLS settings for the client or server. The TLS settings for the client or server.",
                    {
                      "$ul": [
                        [
                          "**certificateContext**: [Deprecated] Defines the mechanism to obtain the client or server certificate. Defines the mechanism to obtain the client or server certificate.",
                          {
                            "$ul": [
                              [
                                "**certificatePaths**: [Deprecated] The paths to the mounted TLS Certificates and private key. The paths to the mounted TLS Certificates and private key.",
                                {
                                  "$ul": [
                                    "**certificatePath**: The path to the file holding the client or server TLS certificate to use.",
                                    "**privateKeyPath**: The path to the file holding the client or server private key."
                                  ]
                                }
                              ],
                              "**certificateSource**: Defines how TLS certificates are obtained.",
                              [
                                "**sdsConfig**: [Deprecated] The configuration to access the SDS server. The configuration to access the SDS server.",
                                {
                                  "$ul": [
                                    [
                                      "**grpcServiceConfig**: [Deprecated] gRPC config to access the SDS server. gRPC config to access the SDS server.",
                                      {
                                        "$ul": [
                                          [
                                            "**callCredentials**: [Deprecated] gRPC call credentials to access the SDS server. gRPC call credentials to access the SDS server.",
                                            {
                                              "$ul": [
                                                "**callCredentialType**: The type of call credentials to use for GRPC requests to the SDS server. This field can be set to one of the following: - GCE_VM: The local GCE VM service account credentials are used to access the SDS server. - FROM_PLUGIN: Custom authenticator credentials are used to access the SDS server.",
                                                [
                                                  "**fromPlugin**: [Deprecated] Custom authenticator credentials. Custom authenticator credentials.",
                                                  {
                                                    "$ul": [
                                                      "**name**: Plugin name.",
                                                      "**structConfig**: A text proto that conforms to a Struct type definition interpreted by the plugin."
                                                    ]
                                                  }
                                                ]
                                              ]
                                            }
                                          ],
                                          [
                                            "**channelCredentials**: [Deprecated] gRPC channel credentials to access the SDS server. gRPC channel credentials to access the SDS server.",
                                            {
                                              "$ul": [
                                                [
                                                  "**certificates**: [Deprecated] The paths to the mounted TLS Certificates and private key. The paths to the mounted TLS Certificates and private key.",
                                                  {
                                                    "$ul": [
                                                      "**certificatePath**: The path to the file holding the client or server TLS certificate to use.",
                                                      "**privateKeyPath**: The path to the file holding the client or server private key."
                                                    ]
                                                  }
                                                ],
                                                "**channelCredentialType**: The channel credentials to access the SDS server. This field can be set to one of the following: CERTIFICATES: Use TLS certificates to access the SDS server. GCE_VM: Use local GCE VM credentials to access the SDS server."
                                              ]
                                            }
                                          ],
                                          "**targetUri**: The target URI of the SDS server."
                                        ]
                                      }
                                    ]
                                  ]
                                }
                              ]
                            ]
                          }
                        ],
                        [
                          "**validationContext**: [Deprecated] Defines the mechanism to obtain the Certificate Authority certificate to validate the client/server certificate. validate the client/server certificate.",
                          {
                            "$ul": [
                              "**certificatePath**: The path to the file holding the CA certificate to validate the client or server certificate.",
                              [
                                "**sdsConfig**: [Deprecated] The configuration to access the SDS server. The configuration to access the SDS server.",
                                {
                                  "$ul": [
                                    [
                                      "**grpcServiceConfig**: [Deprecated] gRPC config to access the SDS server. gRPC config to access the SDS server.",
                                      {
                                        "$ul": [
                                          [
                                            "**callCredentials**: [Deprecated] gRPC call credentials to access the SDS server. gRPC call credentials to access the SDS server.",
                                            {
                                              "$ul": [
                                                "**callCredentialType**: The type of call credentials to use for GRPC requests to the SDS server. This field can be set to one of the following: - GCE_VM: The local GCE VM service account credentials are used to access the SDS server. - FROM_PLUGIN: Custom authenticator credentials are used to access the SDS server.",
                                                [
                                                  "**fromPlugin**: [Deprecated] Custom authenticator credentials. Custom authenticator credentials.",
                                                  {
                                                    "$ul": [
                                                      "**name**: Plugin name.",
                                                      "**structConfig**: A text proto that conforms to a Struct type definition interpreted by the plugin."
                                                    ]
                                                  }
                                                ]
                                              ]
                                            }
                                          ],
                                          [
                                            "**channelCredentials**: [Deprecated] gRPC channel credentials to access the SDS server. gRPC channel credentials to access the SDS server.",
                                            {
                                              "$ul": [
                                                [
                                                  "**certificates**: [Deprecated] The paths to the mounted TLS Certificates and private key. The paths to the mounted TLS Certificates and private key.",
                                                  {
                                                    "$ul": [
                                                      "**certificatePath**: The path to the file holding the client or server TLS certificate to use.",
                                                      "**privateKeyPath**: The path to the file holding the client or server private key."
                                                    ]
                                                  }
                                                ],
                                                "**channelCredentialType**: The channel credentials to access the SDS server. This field can be set to one of the following: CERTIFICATES: Use TLS certificates to access the SDS server. GCE_VM: Use local GCE VM credentials to access the SDS server."
                                              ]
                                            }
                                          ],
                                          "**targetUri**: The target URI of the SDS server."
                                        ]
                                      }
                                    ]
                                  ]
                                }
                              ],
                              "**validationSource**: Defines how TLS certificates are obtained."
                            ]
                          }
                        ]
                      ]
                    }
                  ],
                  "**subjectAltNames**: A list of alternate names to verify the subject identity in the certificate presented by the client.",
                  "**tlsMode**: Indicates whether connections should be secured using TLS. The value of this field determines how TLS is enforced. This field can be set to one of the following: - SIMPLE Secure connections with standard TLS semantics. - MUTUAL Secure connections to the backends using mutual TLS by presenting client certificates for authentication. "
                ]
              }
            ],
            "**warnings**: [Output Only] If potential misconfigurations are detected for this SSL policy, this field will be populated with warning messages."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
