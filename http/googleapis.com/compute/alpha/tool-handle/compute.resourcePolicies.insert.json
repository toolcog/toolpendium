{
  "name": "compute_resourcePolicies_insert",
  "description": "Creates a new resource policy.",
  "parameters": {
    "type": "object",
    "properties": {
      "project": {
        "type": "string",
        "description": "Project ID for this request."
      },
      "region": {
        "type": "string",
        "description": "Name of the region for this request."
      },
      "requestId": {
        "type": "string",
        "description": "An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "userIp": {
        "type": "string",
        "description": "Legacy name for parameter that has been superseded by `quotaUser`."
      },
      "body": {
        "$ref": "#/$defs/ResourcePolicy"
      }
    },
    "required": [
      "project",
      "region"
    ],
    "$defs": {
      "ResourcePolicy": {
        "description": "Represents a Resource Policy resource. You can use resource policies to schedule actions for some Compute Engine resources. For example, you can use them to schedule persistent disk snapshots.",
        "properties": {
          "creationTimestamp": {
            "description": "[Output Only] Creation timestamp in RFC3339 text format.",
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "diskConsistencyGroupPolicy": {
            "$ref": "#/$defs/ResourcePolicyDiskConsistencyGroupPolicy"
          },
          "groupPlacementPolicy": {
            "$ref": "#/$defs/ResourcePolicyGroupPlacementPolicy"
          },
          "id": {
            "description": "[Output Only] The unique identifier for the resource. This identifier is defined by the server.",
            "format": "uint64",
            "type": "string"
          },
          "instanceSchedulePolicy": {
            "$ref": "#/$defs/ResourcePolicyInstanceSchedulePolicy"
          },
          "kind": {
            "default": "compute#resourcePolicy",
            "description": "[Output Only] Type of the resource. Always compute#resource_policies for resource policies.",
            "type": "string"
          },
          "name": {
            "description": "The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "resourceStatus": {
            "$ref": "#/$defs/ResourcePolicyResourceStatus"
          },
          "selfLink": {
            "description": "[Output Only] Server-defined fully-qualified URL for this resource.",
            "type": "string"
          },
          "selfLinkWithId": {
            "description": "[Output Only] Server-defined URL for this resource with the resource id.",
            "type": "string"
          },
          "snapshotSchedulePolicy": {
            "$ref": "#/$defs/ResourcePolicySnapshotSchedulePolicy"
          },
          "status": {
            "description": "[Output Only] The status of resource policy creation.",
            "enum": [
              "CREATING",
              "DELETING",
              "EXPIRED",
              "INVALID",
              "READY"
            ],
            "type": "string"
          },
          "vmMaintenancePolicy": {
            "$ref": "#/$defs/ResourcePolicyVmMaintenancePolicy"
          }
        },
        "type": "object"
      },
      "ResourcePolicyDiskConsistencyGroupPolicy": {
        "description": "Resource policy for disk consistency groups.",
        "properties": {},
        "type": "object"
      },
      "ResourcePolicyGroupPlacementPolicy": {
        "description": "A GroupPlacementPolicy specifies resource placement configuration. It specifies the failure bucket separation as well as network locality",
        "properties": {
          "availabilityDomainCount": {
            "description": "The number of availability domains to spread instances across. If two instances are in different availability domain, they are not in the same low latency network.",
            "format": "int32",
            "type": "integer"
          },
          "collocation": {
            "description": "Specifies network collocation",
            "enum": [
              "CLUSTERED",
              "COLLOCATED",
              "UNSPECIFIED_COLLOCATION"
            ],
            "type": "string"
          },
          "locality": {
            "description": "Specifies network locality",
            "enum": [
              "BEST_EFFORT",
              "STRICT",
              "UNSPECIFIED_LOCALITY"
            ],
            "type": "string"
          },
          "maxDistance": {
            "description": "Specifies the number of max logical switches.",
            "format": "int32",
            "type": "integer"
          },
          "scope": {
            "description": "Scope specifies the availability domain to which the VMs should be spread.",
            "enum": [
              "HOST",
              "UNSPECIFIED_SCOPE"
            ],
            "type": "string"
          },
          "sliceCount": {
            "description": "Specifies the number of slices in a multislice workload.",
            "format": "int32",
            "type": "integer"
          },
          "style": {
            "description": "Specifies instances to hosts placement relationship",
            "enum": [
              "COMPACT",
              "FULLY_SPREAD",
              "UNSPECIFIED_PLACEMENT_TYPE"
            ],
            "type": "string"
          },
          "tpuTopology": {
            "description": "Specifies the shape of the TPU slice",
            "type": "string"
          },
          "vmCount": {
            "description": "Number of VMs in this placement group. Google does not recommend that you use this field unless you use a compact policy and you want your policy to work only if it contains this exact number of VMs.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ResourcePolicyInstanceSchedulePolicy": {
        "description": "An InstanceSchedulePolicy specifies when and how frequent certain operations are performed on the instance.",
        "properties": {
          "expirationTime": {
            "description": "The expiration time of the schedule. The timestamp is an RFC3339 string.",
            "type": "string"
          },
          "startTime": {
            "description": "The start time of the schedule. The timestamp is an RFC3339 string.",
            "type": "string"
          },
          "timeZone": {
            "description": "Specifies the time zone to be used in interpreting Schedule.schedule. The value of this field must be a time zone name from the tz database: https://wikipedia.org/wiki/Tz_database.",
            "type": "string"
          },
          "vmStartSchedule": {
            "$ref": "#/$defs/ResourcePolicyInstanceSchedulePolicySchedule"
          },
          "vmStopSchedule": {
            "$ref": "#/$defs/ResourcePolicyInstanceSchedulePolicySchedule"
          }
        },
        "type": "object"
      },
      "ResourcePolicyInstanceSchedulePolicySchedule": {
        "description": "Schedule for an instance operation.",
        "properties": {
          "schedule": {
            "description": "Specifies the frequency for the operation, using the unix-cron format.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResourcePolicyResourceStatus": {
        "description": "Contains output only fields. Use this sub-message for all output fields set on ResourcePolicy. The internal structure of this \"status\" field should mimic the structure of ResourcePolicy proto specification.",
        "properties": {
          "instanceSchedulePolicy": {
            "$ref": "#/$defs/ResourcePolicyResourceStatusInstanceSchedulePolicyStatus"
          }
        },
        "type": "object"
      },
      "ResourcePolicyResourceStatusInstanceSchedulePolicyStatus": {
        "properties": {
          "lastRunStartTime": {
            "description": "[Output Only] The last time the schedule successfully ran. The timestamp is an RFC3339 string.",
            "type": "string"
          },
          "nextRunStartTime": {
            "description": "[Output Only] The next time the schedule is planned to run. The actual time might be slightly different. The timestamp is an RFC3339 string.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResourcePolicySnapshotSchedulePolicy": {
        "description": "A snapshot schedule policy specifies when and how frequently snapshots are to be created for the target disk. Also specifies how many and how long these scheduled snapshots should be retained.",
        "properties": {
          "retentionPolicy": {
            "$ref": "#/$defs/ResourcePolicySnapshotSchedulePolicyRetentionPolicy"
          },
          "schedule": {
            "$ref": "#/$defs/ResourcePolicySnapshotSchedulePolicySchedule"
          },
          "snapshotProperties": {
            "$ref": "#/$defs/ResourcePolicySnapshotSchedulePolicySnapshotProperties"
          }
        },
        "type": "object"
      },
      "ResourcePolicySnapshotSchedulePolicyRetentionPolicy": {
        "description": "Policy for retention of scheduled snapshots.",
        "properties": {
          "maxRetentionDays": {
            "description": "Maximum age of the snapshot that is allowed to be kept.",
            "format": "int32",
            "type": "integer"
          },
          "onPolicySwitch": {
            "deprecated": true,
            "enum": [
              "DO_NOT_RETROACTIVELY_APPLY",
              "RETROACTIVELY_APPLY",
              "UNSPECIFIED_ON_POLICY_SWITCH"
            ],
            "type": "string"
          },
          "onSourceDiskDelete": {
            "description": "Specifies the behavior to apply to scheduled snapshots when the source disk is deleted.",
            "enum": [
              "APPLY_RETENTION_POLICY",
              "KEEP_AUTO_SNAPSHOTS",
              "UNSPECIFIED_ON_SOURCE_DISK_DELETE"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResourcePolicySnapshotSchedulePolicySchedule": {
        "description": "A schedule for disks where the schedueled operations are performed.",
        "properties": {
          "dailySchedule": {
            "$ref": "#/$defs/ResourcePolicyDailyCycle"
          },
          "hourlySchedule": {
            "$ref": "#/$defs/ResourcePolicyHourlyCycle"
          },
          "weeklySchedule": {
            "$ref": "#/$defs/ResourcePolicyWeeklyCycle"
          }
        },
        "type": "object"
      },
      "ResourcePolicyDailyCycle": {
        "description": "Time window specified for daily operations.",
        "properties": {
          "daysInCycle": {
            "description": "Defines a schedule with units measured in days. The value determines how many days pass between the start of each cycle.",
            "format": "int32",
            "type": "integer"
          },
          "duration": {
            "description": "[Output only] A predetermined duration for the window, automatically chosen to be the smallest possible in the given scenario.",
            "type": "string"
          },
          "startTime": {
            "description": "Start time of the window. This must be in UTC format that resolves to one of 00:00, 04:00, 08:00, 12:00, 16:00, or 20:00. For example, both 13:00-5 and 08:00 are valid.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResourcePolicyHourlyCycle": {
        "description": "Time window specified for hourly operations.",
        "properties": {
          "duration": {
            "description": "[Output only] Duration of the time window, automatically chosen to be smallest possible in the given scenario.",
            "type": "string"
          },
          "hoursInCycle": {
            "description": "Defines a schedule with units measured in hours. The value determines how many hours pass between the start of each cycle.",
            "format": "int32",
            "type": "integer"
          },
          "startTime": {
            "description": "Time within the window to start the operations. It must be in format \"HH:MM\", where HH : [00-23] and MM : [00-00] GMT.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResourcePolicyWeeklyCycle": {
        "description": "Time window specified for weekly operations.",
        "properties": {
          "dayOfWeeks": {
            "description": "Up to 7 intervals/windows, one for each day of the week.",
            "items": {
              "$ref": "#/$defs/ResourcePolicyWeeklyCycleDayOfWeek"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ResourcePolicyWeeklyCycleDayOfWeek": {
        "properties": {
          "day": {
            "description": "Defines a schedule that runs on specific days of the week. Specify one or more days. The following options are available: MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY.",
            "enum": [
              "FRIDAY",
              "INVALID",
              "MONDAY",
              "SATURDAY",
              "SUNDAY",
              "THURSDAY",
              "TUESDAY",
              "WEDNESDAY"
            ],
            "type": "string"
          },
          "duration": {
            "description": "[Output only] Duration of the time window, automatically chosen to be smallest possible in the given scenario.",
            "type": "string"
          },
          "startTime": {
            "description": "Time within the window to start the operations. It must be in format \"HH:MM\", where HH : [00-23] and MM : [00-00] GMT.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResourcePolicySnapshotSchedulePolicySnapshotProperties": {
        "description": "Specified snapshot properties for scheduled snapshots created by this policy.",
        "properties": {
          "chainName": {
            "description": "Chain name that the snapshot is created in.",
            "type": "string"
          },
          "guestFlush": {
            "description": "Indication to perform a 'guest aware' snapshot.",
            "type": "boolean"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Labels to apply to scheduled snapshots. These can be later modified by the setLabels method. Label values may be empty.",
            "type": "object"
          },
          "storageLocations": {
            "description": "Cloud Storage bucket storage location of the auto snapshot (regional or multi-regional).",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ResourcePolicyVmMaintenancePolicy": {
        "properties": {
          "concurrencyControlGroup": {
            "$ref": "#/$defs/ResourcePolicyVmMaintenancePolicyConcurrencyControl"
          },
          "maintenanceWindow": {
            "$ref": "#/$defs/ResourcePolicyVmMaintenancePolicyMaintenanceWindow"
          }
        },
        "type": "object"
      },
      "ResourcePolicyVmMaintenancePolicyConcurrencyControl": {
        "description": "A concurrency control configuration. Defines a group config that, when attached to an instance, recognizes that instance as part of a group of instances where only up the concurrency_limit of instances in that group can undergo simultaneous maintenance. For more information: go/concurrency-control-design-doc",
        "properties": {
          "concurrencyLimit": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ResourcePolicyVmMaintenancePolicyMaintenanceWindow": {
        "description": "A maintenance window for VMs. When set, we restrict our maintenance operations to this window.",
        "properties": {
          "dailyMaintenanceWindow": {
            "$ref": "#/$defs/ResourcePolicyDailyCycle"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://compute.googleapis.com/compute/alpha/projects/{project}/regions/{region}/resourcePolicies{?requestId,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType,userIp}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Represents an Operation resource. Google Compute Engine has three Operation resources: * [Global](/compute/docs/reference/rest/alpha/globalOperations) * [Regional](/compute/docs/reference/rest/alpha/regionOperations) * [Zonal](/compute/docs/reference/rest/alpha/zoneOperations) You can use an operation resource to manage asynchronous API requests. For more information, read Handling API responses. Operations can be global, regional or zonal. - For global operations, use the `globalOperations` resource. - For regional operations, use the `regionOperations` resource. - For zonal operations, use the `zoneOperations` resource. For more information, read Global, Regional, and Zonal Resources. Note that completed Operation resources have a limited retention period.",
        "**Key properties:**",
        {
          "$ul": [
            "**clientOperationId**: [Output Only] The value of `requestId` if you provided it in the request. Not present otherwise.",
            "**creationTimestamp**: [Deprecated] This field is deprecated.",
            "**description**: [Output Only] A textual description of the operation, which is set when the operation is created.",
            "**endTime**: [Output Only] The time that this operation was completed. This value is in RFC3339 text format.",
            [
              "**error**: [Output Only] If errors are generated during processing of the operation, this field will be populated.",
              {
                "$ul": [
                  "**errors**: [Output Only] The array of errors encountered while processing this operation."
                ]
              }
            ],
            "**httpErrorMessage**: [Output Only] If the operation fails, this field contains the HTTP error message that was returned, such as `NOT FOUND`.",
            "**httpErrorStatusCode**: [Output Only] If the operation fails, this field contains the HTTP error status code that was returned. For example, a `404` means the resource was not found.",
            "**id**: [Output Only] The unique identifier for the operation. This identifier is defined by the server.",
            "**insertTime**: [Output Only] The time that this operation was requested. This value is in RFC3339 text format.",
            [
              "**instancesBulkInsertOperationMetadata**",
              {
                "$ul": [
                  "**perLocationStatus**: Status information per location (location name is key). Example key: zones/us-central1-a"
                ]
              }
            ],
            "**kind**: [Output Only] Type of the resource. Always `compute#operation` for Operation resources. (default: compute#operation)",
            "**name**: [Output Only] Name of the operation.",
            "**operationGroupId**: [Output Only] An ID that represents a group of operations, such as when a group of operations results from a `bulkInsert` API request.",
            "**operationType**: [Output Only] The type of operation, such as `insert`, `update`, or `delete`, and so on.",
            "**progress**: [Output Only] An optional progress indicator that ranges from 0 to 100. There is no requirement that this be linear or support any granularity of operations. This should not be used to guess when the operation will be complete. This number should monotonically increase as the operation progresses.",
            "**region**: [Output Only] The URL of the region where the operation resides. Only applicable when performing regional operations.",
            "**selfLink**: [Output Only] Server-defined URL for the resource.",
            "**selfLinkWithId**: [Output Only] Server-defined URL for this resource with the resource id.",
            [
              "**setCommonInstanceMetadataOperationMetadata**",
              {
                "$ul": [
                  "**clientOperationId**: [Output Only] The client operation id.",
                  "**perLocationOperations**: [Output Only] Status information per location (location name is key). Example key: zones/us-central1-a"
                ]
              }
            ],
            "**startTime**: [Output Only] The time that this operation was started by the server. This value is in RFC3339 text format.",
            "**status**: [Output Only] The status of the operation, which can be one of the following: `PENDING`, `RUNNING`, or `DONE`.",
            "**statusMessage**: [Output Only] An optional textual description of the current status of the operation.",
            "**targetId**: [Output Only] The unique target ID, which identifies a specific incarnation of the target resource.",
            "**targetLink**: [Output Only] The URL of the resource that the operation modifies. For operations related to creating a snapshot, this points to the persistent disk that the snapshot was created from.",
            "**user**: [Output Only] User who requested the operation, for example: `user@example.com` or `alice_smith_identifier (global/workforcePools/example-com-us-employees)`.",
            "**warnings**: [Output Only] If warning messages are generated during processing of the operation, this field will be populated.",
            "**zone**: [Output Only] The URL of the zone where the operation resides. Only applicable when performing per-zone operations."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
