{
  "name": "compute_interconnects_insert",
  "description": "Creates an Interconnect in the specified project using the data included in the request.",
  "parameters": {
    "type": "object",
    "properties": {
      "project": {
        "type": "string",
        "description": "Project ID for this request."
      },
      "requestId": {
        "type": "string",
        "description": "An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "userIp": {
        "type": "string",
        "description": "Legacy name for parameter that has been superseded by `quotaUser`."
      },
      "body": {
        "$ref": "#/$defs/Interconnect"
      }
    },
    "required": [
      "project"
    ],
    "$defs": {
      "Interconnect": {
        "description": "Represents an Interconnect resource. An Interconnect resource is a dedicated connection between the Google Cloud network and your on-premises network. For more information, read the Dedicated Interconnect Overview.",
        "properties": {
          "adminEnabled": {
            "description": "Administrative status of the interconnect. When this is set to true, the Interconnect is functional and can carry traffic. When set to false, no packets can be carried over the interconnect and no BGP routes are exchanged over it. By default, the status is set to true.",
            "type": "boolean"
          },
          "availableFeatures": {
            "description": "[Output only] List of features available for this Interconnect connection, which can take one of the following values: - MACSEC If present then the Interconnect connection is provisioned on MACsec capable hardware ports. If not present then the Interconnect connection is provisioned on non-MACsec capable ports and MACsec isn't supported and enabling MACsec fails.",
            "items": {
              "enum": [
                "IF_MACSEC"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "circuitInfos": {
            "description": "[Output Only] A list of CircuitInfo objects, that describe the individual circuits in this LAG.",
            "items": {
              "$ref": "#/$defs/InterconnectCircuitInfo"
            },
            "type": "array"
          },
          "creationTimestamp": {
            "description": "[Output Only] Creation timestamp in RFC3339 text format.",
            "type": "string"
          },
          "customerName": {
            "description": "Customer name, to put in the Letter of Authorization as the party authorized to request a crossconnect.",
            "type": "string"
          },
          "description": {
            "description": "An optional description of this resource. Provide this property when you create the resource.",
            "type": "string"
          },
          "expectedOutages": {
            "description": "[Output Only] A list of outages expected for this Interconnect.",
            "items": {
              "$ref": "#/$defs/InterconnectOutageNotification"
            },
            "type": "array"
          },
          "googleIpAddress": {
            "description": "[Output Only] IP address configured on the Google side of the Interconnect link. This can be used only for ping tests.",
            "type": "string"
          },
          "googleReferenceId": {
            "description": "[Output Only] Google reference ID to be used when raising support tickets with Google or otherwise to debug backend connectivity issues.",
            "type": "string"
          },
          "id": {
            "description": "[Output Only] The unique identifier for the resource. This identifier is defined by the server.",
            "format": "uint64",
            "type": "string"
          },
          "interconnectAttachments": {
            "description": "[Output Only] A list of the URLs of all InterconnectAttachments configured to use this Interconnect.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "interconnectType": {
            "description": "Type of interconnect, which can take one of the following values: - PARTNER: A partner-managed interconnection shared between customers though a partner. - DEDICATED: A dedicated physical interconnection with the customer. Note that a value IT_PRIVATE has been deprecated in favor of DEDICATED.",
            "enum": [
              "DEDICATED",
              "IT_PRIVATE",
              "PARTNER"
            ],
            "type": "string"
          },
          "kind": {
            "default": "compute#interconnect",
            "description": "[Output Only] Type of the resource. Always compute#interconnect for interconnects.",
            "type": "string"
          },
          "labelFingerprint": {
            "description": "A fingerprint for the labels being applied to this Interconnect, which is essentially a hash of the labels set used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve an Interconnect.",
            "format": "byte",
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Labels for this resource. These can only be added or modified by the setLabels method. Each label key/value pair must comply with RFC1035. Label values may be empty.",
            "type": "object"
          },
          "linkType": {
            "description": "Type of link requested, which can take one of the following values: - LINK_TYPE_ETHERNET_10G_LR: A 10G Ethernet with LR optics - LINK_TYPE_ETHERNET_100G_LR: A 100G Ethernet with LR optics. Note that this field indicates the speed of each of the links in the bundle, not the speed of the entire bundle.",
            "enum": [
              "LINK_TYPE_ETHERNET_100G_LR",
              "LINK_TYPE_ETHERNET_10G_LR"
            ],
            "type": "string"
          },
          "location": {
            "description": "URL of the InterconnectLocation object that represents where this connection is to be provisioned.",
            "type": "string"
          },
          "macsec": {
            "$ref": "#/$defs/InterconnectMacsec"
          },
          "macsecEnabled": {
            "description": "Enable or disable MACsec on this Interconnect connection. MACsec enablement fails if the MACsec object is not specified.",
            "type": "boolean"
          },
          "name": {
            "description": "Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
            "type": "string"
          },
          "nocContactEmail": {
            "description": "Email address to contact the customer NOC for operations and maintenance notifications regarding this Interconnect. If specified, this will be used for notifications in addition to all other forms described, such as Cloud Monitoring logs alerting and Cloud Notifications. This field is required for users who sign up for Cloud Interconnect using workforce identity federation.",
            "type": "string"
          },
          "operationalStatus": {
            "description": "[Output Only] The current status of this Interconnect's functionality, which can take one of the following values: - OS_ACTIVE: A valid Interconnect, which is turned up and is ready to use. Attachments may be provisioned on this Interconnect. - OS_UNPROVISIONED: An Interconnect that has not completed turnup. No attachments may be provisioned on this Interconnect. - OS_UNDER_MAINTENANCE: An Interconnect that is undergoing internal maintenance. No attachments may be provisioned or updated on this Interconnect. ",
            "enum": [
              "OS_ACTIVE",
              "OS_UNPROVISIONED"
            ],
            "type": "string"
          },
          "peerIpAddress": {
            "description": "[Output Only] IP address configured on the customer side of the Interconnect link. The customer should configure this IP address during turnup when prompted by Google NOC. This can be used only for ping tests.",
            "type": "string"
          },
          "provisionedLinkCount": {
            "description": "[Output Only] Number of links actually provisioned in this interconnect.",
            "format": "int32",
            "type": "integer"
          },
          "remoteLocation": {
            "description": "Indicates that this is a Cross-Cloud Interconnect. This field specifies the location outside of Google's network that the interconnect is connected to.",
            "type": "string"
          },
          "requestedFeatures": {
            "description": "Optional. List of features requested for this Interconnect connection, which can take one of the following values: - MACSEC If specified then the connection is created on MACsec capable hardware ports. If not specified, the default value is false, which allocates non-MACsec capable ports first if available. This parameter can be provided only with Interconnect INSERT. It isn't valid for Interconnect PATCH.",
            "items": {
              "enum": [
                "IF_MACSEC"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "requestedLinkCount": {
            "description": "Target number of physical links in the link bundle, as requested by the customer.",
            "format": "int32",
            "type": "integer"
          },
          "satisfiesPzs": {
            "description": "[Output Only] Reserved for future use.",
            "type": "boolean"
          },
          "selfLink": {
            "description": "[Output Only] Server-defined URL for the resource.",
            "type": "string"
          },
          "state": {
            "description": "[Output Only] The current state of Interconnect functionality, which can take one of the following values: - ACTIVE: The Interconnect is valid, turned up and ready to use. Attachments may be provisioned on this Interconnect. - UNPROVISIONED: The Interconnect has not completed turnup. No attachments may be provisioned on this Interconnect. - UNDER_MAINTENANCE: The Interconnect is undergoing internal maintenance. No attachments may be provisioned or updated on this Interconnect. ",
            "enum": [
              "ACTIVE",
              "UNPROVISIONED"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "InterconnectCircuitInfo": {
        "description": "Describes a single physical circuit between the Customer and Google. CircuitInfo objects are created by Google, so all fields are output only.",
        "properties": {
          "customerDemarcId": {
            "description": "Customer-side demarc ID for this circuit.",
            "type": "string"
          },
          "googleCircuitId": {
            "description": "Google-assigned unique ID for this circuit. Assigned at circuit turn-up.",
            "type": "string"
          },
          "googleDemarcId": {
            "description": "Google-side demarc ID for this circuit. Assigned at circuit turn-up and provided by Google to the customer in the LOA.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "InterconnectOutageNotification": {
        "description": "Description of a planned outage on this Interconnect.",
        "properties": {
          "affectedCircuits": {
            "description": "If issue_type is IT_PARTIAL_OUTAGE, a list of the Google-side circuit IDs that will be affected.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "description": {
            "description": "A description about the purpose of the outage.",
            "type": "string"
          },
          "endTime": {
            "description": "Scheduled end time for the outage (milliseconds since Unix epoch).",
            "format": "int64",
            "type": "string"
          },
          "issueType": {
            "description": "Form this outage is expected to take, which can take one of the following values: - OUTAGE: The Interconnect may be completely out of service for some or all of the specified window. - PARTIAL_OUTAGE: Some circuits comprising the Interconnect as a whole should remain up, but with reduced bandwidth. Note that the versions of this enum prefixed with \"IT_\" have been deprecated in favor of the unprefixed values.",
            "enum": [
              "IT_OUTAGE",
              "IT_PARTIAL_OUTAGE",
              "OUTAGE",
              "PARTIAL_OUTAGE"
            ],
            "type": "string"
          },
          "name": {
            "description": "Unique identifier for this outage notification.",
            "type": "string"
          },
          "source": {
            "description": "The party that generated this notification, which can take the following value: - GOOGLE: this notification as generated by Google. Note that the value of NSRC_GOOGLE has been deprecated in favor of GOOGLE.",
            "enum": [
              "GOOGLE",
              "NSRC_GOOGLE"
            ],
            "type": "string"
          },
          "startTime": {
            "description": "Scheduled start time for the outage (milliseconds since Unix epoch).",
            "format": "int64",
            "type": "string"
          },
          "state": {
            "description": "State of this notification, which can take one of the following values: - ACTIVE: This outage notification is active. The event could be in the past, present, or future. See start_time and end_time for scheduling. - CANCELLED: The outage associated with this notification was cancelled before the outage was due to start. - COMPLETED: The outage associated with this notification is complete. Note that the versions of this enum prefixed with \"NS_\" have been deprecated in favor of the unprefixed values.",
            "enum": [
              "ACTIVE",
              "CANCELLED",
              "COMPLETED",
              "NS_ACTIVE",
              "NS_CANCELED"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "InterconnectMacsec": {
        "description": "Configuration information for enabling Media Access Control security (MACsec) on this Cloud Interconnect connection between Google and your on-premises router.",
        "properties": {
          "failOpen": {
            "description": "If set to true, the Interconnect connection is configured with a should-secure MACsec security policy, that allows the Google router to fallback to cleartext traffic if the MKA session cannot be established. By default, the Interconnect connection is configured with a must-secure security policy that drops all traffic if the MKA session cannot be established with your router.",
            "type": "boolean"
          },
          "preSharedKeys": {
            "description": "Required. A keychain placeholder describing a set of named key objects along with their start times. A MACsec CKN/CAK is generated for each key in the key chain. Google router automatically picks the key with the most recent startTime when establishing or re-establishing a MACsec secure link.",
            "items": {
              "$ref": "#/$defs/InterconnectMacsecPreSharedKey"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "InterconnectMacsecPreSharedKey": {
        "description": "Describes a pre-shared key used to setup MACsec in static connectivity association key (CAK) mode.",
        "properties": {
          "name": {
            "description": "Required. A name for this pre-shared key. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
            "type": "string"
          },
          "startTime": {
            "description": "A RFC3339 timestamp on or after which the key is valid. startTime can be in the future. If the keychain has a single key, startTime can be omitted. If the keychain has multiple keys, startTime is mandatory for each key. The start times of keys must be in increasing order. The start times of two consecutive keys must be at least 6 hours apart.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://compute.googleapis.com/compute/v1/projects/{project}/global/interconnects{?requestId,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType,userIp}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Represents an Operation resource. Google Compute Engine has three Operation resources: * [Global](/compute/docs/reference/rest/v1/globalOperations) * [Regional](/compute/docs/reference/rest/v1/regionOperations) * [Zonal](/compute/docs/reference/rest/v1/zoneOperations) You can use an operation resource to manage asynchronous API requests. For more information, read Handling API responses. Operations can be global, regional or zonal. - For global operations, use the `globalOperations` resource. - For regional operations, use the `regionOperations` resource. - For zonal operations, use the `zoneOperations` resource. For more information, read Global, Regional, and Zonal Resources. Note that completed Operation resources have a limited retention period.",
        "**Key properties:**",
        {
          "$ul": [
            "**clientOperationId**: [Output Only] The value of `requestId` if you provided it in the request. Not present otherwise.",
            "**creationTimestamp**: [Deprecated] This field is deprecated.",
            "**description**: [Output Only] A textual description of the operation, which is set when the operation is created.",
            "**endTime**: [Output Only] The time that this operation was completed. This value is in RFC3339 text format.",
            [
              "**error**: [Output Only] If errors are generated during processing of the operation, this field will be populated.",
              {
                "$ul": [
                  "**errors**: [Output Only] The array of errors encountered while processing this operation."
                ]
              }
            ],
            "**httpErrorMessage**: [Output Only] If the operation fails, this field contains the HTTP error message that was returned, such as `NOT FOUND`.",
            "**httpErrorStatusCode**: [Output Only] If the operation fails, this field contains the HTTP error status code that was returned. For example, a `404` means the resource was not found.",
            "**id**: [Output Only] The unique identifier for the operation. This identifier is defined by the server.",
            "**insertTime**: [Output Only] The time that this operation was requested. This value is in RFC3339 text format.",
            [
              "**instancesBulkInsertOperationMetadata**",
              {
                "$ul": [
                  "**perLocationStatus**: Status information per location (location name is key). Example key: zones/us-central1-a"
                ]
              }
            ],
            "**kind**: [Output Only] Type of the resource. Always `compute#operation` for Operation resources. (default: compute#operation)",
            "**name**: [Output Only] Name of the operation.",
            "**operationGroupId**: [Output Only] An ID that represents a group of operations, such as when a group of operations results from a `bulkInsert` API request.",
            "**operationType**: [Output Only] The type of operation, such as `insert`, `update`, or `delete`, and so on.",
            "**progress**: [Output Only] An optional progress indicator that ranges from 0 to 100. There is no requirement that this be linear or support any granularity of operations. This should not be used to guess when the operation will be complete. This number should monotonically increase as the operation progresses.",
            "**region**: [Output Only] The URL of the region where the operation resides. Only applicable when performing regional operations.",
            "**selfLink**: [Output Only] Server-defined URL for the resource.",
            [
              "**setCommonInstanceMetadataOperationMetadata**",
              {
                "$ul": [
                  "**clientOperationId**: [Output Only] The client operation id.",
                  "**perLocationOperations**: [Output Only] Status information per location (location name is key). Example key: zones/us-central1-a"
                ]
              }
            ],
            "**startTime**: [Output Only] The time that this operation was started by the server. This value is in RFC3339 text format.",
            "**status**: [Output Only] The status of the operation, which can be one of the following: `PENDING`, `RUNNING`, or `DONE`.",
            "**statusMessage**: [Output Only] An optional textual description of the current status of the operation.",
            "**targetId**: [Output Only] The unique target ID, which identifies a specific incarnation of the target resource.",
            "**targetLink**: [Output Only] The URL of the resource that the operation modifies. For operations related to creating a snapshot, this points to the persistent disk that the snapshot was created from.",
            "**user**: [Output Only] User who requested the operation, for example: `user@example.com` or `alice_smith_identifier (global/workforcePools/example-com-us-employees)`.",
            "**warnings**: [Output Only] If warning messages are generated during processing of the operation, this field will be populated.",
            "**zone**: [Output Only] The URL of the zone where the operation resides. Only applicable when performing per-zone operations."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
