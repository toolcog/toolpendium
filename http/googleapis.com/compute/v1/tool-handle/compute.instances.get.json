{
  "name": "compute_instances_get",
  "description": "Returns the specified Instance resource.",
  "parameters": {
    "type": "object",
    "properties": {
      "project": {
        "type": "string",
        "description": "Project ID for this request."
      },
      "zone": {
        "type": "string",
        "description": "The name of the zone for this request."
      },
      "instance": {
        "type": "string",
        "description": "Name of the instance resource to return."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "userIp": {
        "type": "string",
        "description": "Legacy name for parameter that has been superseded by `quotaUser`."
      }
    },
    "required": [
      "project",
      "zone",
      "instance"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://compute.googleapis.com/compute/v1/projects/{project}/zones/{zone}/instances/{instance}{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType,userIp}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Represents an Instance resource. An instance is a virtual machine that is hosted on Google Cloud Platform. For more information, read Virtual Machine Instances.",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**advancedMachineFeatures**: Specifies options for controlling advanced machine features. Options that would traditionally be configured in a BIOS belong here. Features that require operating system support may have corresponding entries in the GuestOsFeatures of an Image (e.g., whether or not the OS in the Image supports nested virtualization being enabled or disabled).",
              {
                "$ul": [
                  "**enableNestedVirtualization**: Whether to enable nested virtualization or not (default is false).",
                  "**enableUefiNetworking**: Whether to enable UEFI networking for instance creation.",
                  "**threadsPerCore**: The number of threads per physical core. To disable simultaneous multithreading (SMT) set this to 1. If unset, the maximum number of threads supported per core by the underlying processor is assumed.",
                  "**visibleCoreCount**: The number of physical cores to expose to an instance. Multiply by the number of threads per core to compute the total number of virtual CPUs to expose to the instance. If unset, the number of cores is inferred from the instance's nominal CPU count and the underlying platform's SMT width."
                ]
              }
            ],
            "**canIpForward**: Allows this instance to send and receive packets with non-matching destination or source IPs. This is required if you plan to use this instance to forward routes. For more information, see Enabling IP Forwarding .",
            [
              "**confidentialInstanceConfig**: A set of Confidential Instance options.",
              {
                "$ul": [
                  "**enableConfidentialCompute**: Defines whether the instance should have confidential compute enabled."
                ]
              }
            ],
            "**cpuPlatform**: [Output Only] The CPU platform used by this instance.",
            "**creationTimestamp**: [Output Only] Creation timestamp in RFC3339 text format.",
            "**deletionProtection**: Whether the resource should be protected against deletion.",
            "**description**: An optional description of this resource. Provide this property when you create the resource.",
            "**disks**: Array of disks associated with this instance. Persistent disks must be created before you can assign them.",
            [
              "**displayDevice**: A set of Display Device options",
              {
                "$ul": [
                  "**enableDisplay**: Defines whether the instance has Display enabled."
                ]
              }
            ],
            "**fingerprint**: Specifies a fingerprint for this resource, which is essentially a hash of the instance's contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update the instance. You must always provide an up-to-date fingerprint hash in order to update the instance. To see the latest fingerprint, make get() request to the instance.",
            "**guestAccelerators**: A list of the type and count of accelerator cards attached to the instance.",
            "**hostname**: Specifies the hostname of the instance. The specified hostname must be RFC1035 compliant. If hostname is not specified, the default hostname is [INSTANCE_NAME].c.[PROJECT_ID].internal when using the global DNS, and [INSTANCE_NAME].[ZONE].c.[PROJECT_ID].internal when using zonal DNS.",
            "**id**: [Output Only] The unique identifier for the resource. This identifier is defined by the server.",
            [
              "**instanceEncryptionKey**",
              {
                "$ul": [
                  "**kmsKeyName**: The name of the encryption key that is stored in Google Cloud KMS. For example: \"kmsKeyName\": \"projects/kms_project_id/locations/region/keyRings/ key_region/cryptoKeys/key The fully-qualifed key name may be returned for resource GET requests. For example: \"kmsKeyName\": \"projects/kms_project_id/locations/region/keyRings/ key_region/cryptoKeys/key /cryptoKeyVersions/1 ",
                  "**kmsKeyServiceAccount**: The service account being used for the encryption request for the given KMS key. If absent, the Compute Engine default service account is used. For example: \"kmsKeyServiceAccount\": \"name@project_id.iam.gserviceaccount.com/ ",
                  "**rawKey**: Specifies a 256-bit customer-supplied encryption key, encoded in RFC 4648 base64 to either encrypt or decrypt this resource. You can provide either the rawKey or the rsaEncryptedKey. For example: \"rawKey\": \"SGVsbG8gZnJvbSBHb29nbGUgQ2xvdWQgUGxhdGZvcm0=\" ",
                  "**rsaEncryptedKey**: Specifies an RFC 4648 base64 encoded, RSA-wrapped 2048-bit customer-supplied encryption key to either encrypt or decrypt this resource. You can provide either the rawKey or the rsaEncryptedKey. For example: \"rsaEncryptedKey\": \"ieCx/NcW06PcT7Ep1X6LUTc/hLvUDYyzSZPPVCVPTVEohpeHASqC8uw5TzyO9U+Fka9JFH z0mBibXUInrC/jEk014kCK/NPjYgEMOyssZ4ZINPKxlUh2zn1bV+MCaTICrdmuSBTWlUUiFoD D6PYznLwh8ZNdaheCeZ8ewEXgFQ8V+sDroLaN3Xs3MDTXQEMMoNUXMCZEIpg9Vtp9x2oe==\" The key must meet the following requirements before you can provide it to Compute Engine: 1. The key is wrapped using a RSA public key certificate provided by Google. 2. After being wrapped, the key must be encoded in RFC 4648 base64 encoding. Gets the RSA public key certificate provided by Google at: https://cloud-certs.storage.googleapis.com/google-cloud-csek-ingress.pem ",
                  "**sha256**: [Output only] The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied encryption key that protects this resource."
                ]
              }
            ],
            "**keyRevocationActionType**: KeyRevocationActionType of the instance. Supported options are \"STOP\" and \"NONE\". The default value is \"NONE\" if it is not specified.",
            "**kind**: [Output Only] Type of the resource. Always compute#instance for instances. (default: compute#instance)",
            "**labelFingerprint**: A fingerprint for this request, which is essentially a hash of the label's contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels. To see the latest fingerprint, make get() request to the instance.",
            "**labels**: Labels to apply to this instance. These can be later modified by the setLabels method.",
            "**lastStartTimestamp**: [Output Only] Last start timestamp in RFC3339 text format.",
            "**lastStopTimestamp**: [Output Only] Last stop timestamp in RFC3339 text format.",
            "**lastSuspendedTimestamp**: [Output Only] Last suspended timestamp in RFC3339 text format.",
            "**machineType**: Full or partial URL of the machine type resource to use for this instance, in the format: zones/zone/machineTypes/machine-type. This is provided by the client when the instance is created. For example, the following is a valid partial url to a predefined machine type: zones/us-central1-f/machineTypes/n1-standard-1 To create a custom machine type, provide a URL to a machine type in the following format, where CPUS is 1 or an even number up to 32 (2, 4, 6, ... 24, etc), and MEMORY is the total memory for this instance. Memory must be a multiple of 256 MB and must be supplied in MB (e.g. 5 GB of memory is 5120 MB): zones/zone/machineTypes/custom-CPUS-MEMORY For example: zones/us-central1-f/machineTypes/custom-4-5120 For a full list of restrictions, read the Specifications for custom machine types.",
            [
              "**metadata**: A metadata key/value entry.",
              {
                "$ul": [
                  "**fingerprint**: Specifies a fingerprint for this request, which is essentially a hash of the metadata's contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update metadata. You must always provide an up-to-date fingerprint hash in order to update or change metadata, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve the resource.",
                  "**items**: Array of key/value pairs. The total size of all keys and values must be less than 512 KB.",
                  "**kind**: [Output Only] Type of the resource. Always compute#metadata for metadata. (default: compute#metadata)"
                ]
              }
            ],
            "**minCpuPlatform**: Specifies a minimum CPU platform for the VM instance. Applicable values are the friendly names of CPU platforms, such as minCpuPlatform: \"Intel Haswell\" or minCpuPlatform: \"Intel Sandy Bridge\".",
            "**name**: The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
            "**networkInterfaces**: An array of network configurations for this instance. These specify how interfaces are configured to interact with other network services, such as connecting to the internet. Multiple interfaces are supported per instance.",
            [
              "**networkPerformanceConfig**",
              {
                "$ul": [
                  "**totalEgressBandwidthTier**"
                ]
              }
            ],
            [
              "**params**: Additional instance params.",
              {
                "$ul": [
                  "**resourceManagerTags**: Resource manager tags to be bound to the instance. Tag keys and values have the same definition as resource manager tags. Keys must be in the format `tagKeys/{tag_key_id}`, and values are in the format `tagValues/456`. The field is ignored (both PUT & PATCH) when empty."
                ]
              }
            ],
            "**privateIpv6GoogleAccess**: The private IPv6 google access type for the VM. If not specified, use INHERIT_FROM_SUBNETWORK as default.",
            [
              "**reservationAffinity**: Specifies the reservations that this instance can consume from.",
              {
                "$ul": [
                  "**consumeReservationType**: Specifies the type of reservation from which this instance can consume resources: ANY_RESERVATION (default), SPECIFIC_RESERVATION, or NO_RESERVATION. See Consuming reserved instances for examples.",
                  "**key**: Corresponds to the label key of a reservation resource. To target a SPECIFIC_RESERVATION by name, specify googleapis.com/reservation-name as the key and specify the name of your reservation as its value.",
                  "**values**: Corresponds to the label values of a reservation resource. This can be either a name to a reservation in the same project or \"projects/different-project/reservations/some-reservation-name\" to target a shared reservation in the same zone but in a different project."
                ]
              }
            ],
            "**resourcePolicies**: Resource policies applied to this instance.",
            [
              "**resourceStatus**: Contains output only fields. Use this sub-message for actual values set on Instance attributes as compared to the value requested by the user (intent) in their instance CRUD calls.",
              {
                "$ul": [
                  "**physicalHost**: [Output Only] An opaque ID of the host on which the VM is running.",
                  [
                    "**upcomingMaintenance**: Upcoming Maintenance notification information.",
                    {
                      "$ul": [
                        "**canReschedule**: Indicates if the maintenance can be customer triggered.",
                        "**latestWindowStartTime**: The latest time for the planned maintenance window to start. This timestamp value is in RFC3339 text format.",
                        "**maintenanceStatus**",
                        "**type**: Defines the type of maintenance.",
                        "**windowEndTime**: The time by which the maintenance disruption will be completed. This timestamp value is in RFC3339 text format.",
                        "**windowStartTime**: The current start time of the maintenance window. This timestamp value is in RFC3339 text format."
                      ]
                    }
                  ]
                ]
              }
            ],
            "**satisfiesPzi**: [Output Only] Reserved for future use.",
            "**satisfiesPzs**: [Output Only] Reserved for future use.",
            [
              "**scheduling**: Sets the scheduling options for an Instance.",
              {
                "$ul": [
                  "**automaticRestart**: Specifies whether the instance should be automatically restarted if it is terminated by Compute Engine (not terminated by a user). You can only set the automatic restart option for standard instances. Preemptible instances cannot be automatically restarted. By default, this is set to true so an instance is automatically restarted if it is terminated by Compute Engine.",
                  "**instanceTerminationAction**: Specifies the termination action for the instance.",
                  [
                    "**localSsdRecoveryTimeout**: A Duration represents a fixed-length span of time represented as a count of seconds and fractions of seconds at nanosecond resolution. It is independent of any calendar and concepts like \"day\" or \"month\". Range is approximately 10,000 years.",
                    {
                      "$ul": [
                        "**nanos**: Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 `seconds` field and a positive `nanos` field. Must be from 0 to 999,999,999 inclusive.",
                        "**seconds**: Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years"
                      ]
                    }
                  ],
                  "**locationHint**: An opaque location hint used to place the instance close to other resources. This field is for use by internal tools that use the public API.",
                  "**minNodeCpus**: The minimum number of virtual CPUs this instance will consume when running on a sole-tenant node.",
                  "**nodeAffinities**: A set of node affinity and anti-affinity configurations. Refer to Configuring node affinity for more information. Overrides reservationAffinity.",
                  "**onHostMaintenance**: Defines the maintenance behavior for this instance. For standard instances, the default behavior is MIGRATE. For preemptible instances, the default and only possible behavior is TERMINATE. For more information, see Set VM host maintenance policy.",
                  "**preemptible**: Defines whether the instance is preemptible. This can only be set during instance creation or while the instance is stopped and therefore, in a `TERMINATED` state. See Instance Life Cycle for more information on the possible instance states.",
                  "**provisioningModel**: Specifies the provisioning model of the instance."
                ]
              }
            ],
            "**selfLink**: [Output Only] Server-defined URL for this resource.",
            "**serviceAccounts**: A list of service accounts, with their specified scopes, authorized for this instance. Only one service account per VM instance is supported. Service accounts generate access tokens that can be accessed through the metadata server and used to authenticate applications on the instance. See Service Accounts for more information.",
            [
              "**shieldedInstanceConfig**: A set of Shielded Instance options.",
              {
                "$ul": [
                  "**enableIntegrityMonitoring**: Defines whether the instance has integrity monitoring enabled. Enabled by default.",
                  "**enableSecureBoot**: Defines whether the instance has Secure Boot enabled. Disabled by default.",
                  "**enableVtpm**: Defines whether the instance has the vTPM enabled. Enabled by default."
                ]
              }
            ],
            [
              "**shieldedInstanceIntegrityPolicy**: The policy describes the baseline against which Instance boot integrity is measured.",
              {
                "$ul": [
                  "**updateAutoLearnPolicy**: Updates the integrity policy baseline using the measurements from the VM instance's most recent boot."
                ]
              }
            ],
            "**sourceMachineImage**: Source machine image",
            [
              "**sourceMachineImageEncryptionKey**",
              {
                "$ul": [
                  "**kmsKeyName**: The name of the encryption key that is stored in Google Cloud KMS. For example: \"kmsKeyName\": \"projects/kms_project_id/locations/region/keyRings/ key_region/cryptoKeys/key The fully-qualifed key name may be returned for resource GET requests. For example: \"kmsKeyName\": \"projects/kms_project_id/locations/region/keyRings/ key_region/cryptoKeys/key /cryptoKeyVersions/1 ",
                  "**kmsKeyServiceAccount**: The service account being used for the encryption request for the given KMS key. If absent, the Compute Engine default service account is used. For example: \"kmsKeyServiceAccount\": \"name@project_id.iam.gserviceaccount.com/ ",
                  "**rawKey**: Specifies a 256-bit customer-supplied encryption key, encoded in RFC 4648 base64 to either encrypt or decrypt this resource. You can provide either the rawKey or the rsaEncryptedKey. For example: \"rawKey\": \"SGVsbG8gZnJvbSBHb29nbGUgQ2xvdWQgUGxhdGZvcm0=\" ",
                  "**rsaEncryptedKey**: Specifies an RFC 4648 base64 encoded, RSA-wrapped 2048-bit customer-supplied encryption key to either encrypt or decrypt this resource. You can provide either the rawKey or the rsaEncryptedKey. For example: \"rsaEncryptedKey\": \"ieCx/NcW06PcT7Ep1X6LUTc/hLvUDYyzSZPPVCVPTVEohpeHASqC8uw5TzyO9U+Fka9JFH z0mBibXUInrC/jEk014kCK/NPjYgEMOyssZ4ZINPKxlUh2zn1bV+MCaTICrdmuSBTWlUUiFoD D6PYznLwh8ZNdaheCeZ8ewEXgFQ8V+sDroLaN3Xs3MDTXQEMMoNUXMCZEIpg9Vtp9x2oe==\" The key must meet the following requirements before you can provide it to Compute Engine: 1. The key is wrapped using a RSA public key certificate provided by Google. 2. After being wrapped, the key must be encoded in RFC 4648 base64 encoding. Gets the RSA public key certificate provided by Google at: https://cloud-certs.storage.googleapis.com/google-cloud-csek-ingress.pem ",
                  "**sha256**: [Output only] The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied encryption key that protects this resource."
                ]
              }
            ],
            "**startRestricted**: [Output Only] Whether a VM has been restricted for start because Compute Engine has detected suspicious activity.",
            "**status**: [Output Only] The status of the instance. One of the following values: PROVISIONING, STAGING, RUNNING, STOPPING, SUSPENDING, SUSPENDED, REPAIRING, and TERMINATED. For more information about the status of the instance, see Instance life cycle.",
            "**statusMessage**: [Output Only] An optional, human-readable explanation of the status.",
            [
              "**tags**: A set of instance tags.",
              {
                "$ul": [
                  "**fingerprint**: Specifies a fingerprint for this request, which is essentially a hash of the tags' contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update tags. You must always provide an up-to-date fingerprint hash in order to update or change tags. To see the latest fingerprint, make get() request to the instance.",
                  "**items**: An array of tags. Each tag must be 1-63 characters long, and comply with RFC1035."
                ]
              }
            ],
            "**zone**: [Output Only] URL of the zone where the instance resides. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
