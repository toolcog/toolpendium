{
  "name": "compute_regionInstanceTemplates_get",
  "description": "Returns the specified instance template.",
  "parameters": {
    "type": "object",
    "properties": {
      "project": {
        "type": "string",
        "description": "Project ID for this request."
      },
      "region": {
        "type": "string",
        "description": "The name of the region for this request."
      },
      "instanceTemplate": {
        "type": "string",
        "description": "The name of the instance template."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "userIp": {
        "type": "string",
        "description": "Legacy name for parameter that has been superseded by `quotaUser`."
      }
    },
    "required": [
      "project",
      "region",
      "instanceTemplate"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://compute.googleapis.com/compute/v1/projects/{project}/regions/{region}/instanceTemplates/{instanceTemplate}{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType,userIp}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Represents an Instance Template resource. Google Compute Engine has two Instance Template resources: * [Global](/compute/docs/reference/rest/v1/instanceTemplates) * [Regional](/compute/docs/reference/rest/v1/regionInstanceTemplates) You can reuse a global instance template in different regions whereas you can use a regional instance template in a specified region only. If you want to reduce cross-region dependency or achieve data residency, use a regional instance template. To create VMs, managed instance groups, and reservations, you can use either global or regional instance templates. For more information, read Instance Templates.",
        "**Key properties:**",
        {
          "$ul": [
            "**creationTimestamp**: [Output Only] The creation timestamp for this instance template in RFC3339 text format.",
            "**description**: An optional description of this resource. Provide this property when you create the resource.",
            "**id**: [Output Only] A unique identifier for this instance template. The server defines this identifier.",
            "**kind**: [Output Only] The resource type, which is always compute#instanceTemplate for instance templates. (default: compute#instanceTemplate)",
            "**name**: Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
            [
              "**properties**",
              {
                "$ul": [
                  [
                    "**advancedMachineFeatures**: Specifies options for controlling advanced machine features. Options that would traditionally be configured in a BIOS belong here. Features that require operating system support may have corresponding entries in the GuestOsFeatures of an Image (e.g., whether or not the OS in the Image supports nested virtualization being enabled or disabled).",
                    {
                      "$ul": [
                        "**enableNestedVirtualization**: Whether to enable nested virtualization or not (default is false).",
                        "**enableUefiNetworking**: Whether to enable UEFI networking for instance creation.",
                        "**threadsPerCore**: The number of threads per physical core. To disable simultaneous multithreading (SMT) set this to 1. If unset, the maximum number of threads supported per core by the underlying processor is assumed.",
                        "**visibleCoreCount**: The number of physical cores to expose to an instance. Multiply by the number of threads per core to compute the total number of virtual CPUs to expose to the instance. If unset, the number of cores is inferred from the instance's nominal CPU count and the underlying platform's SMT width."
                      ]
                    }
                  ],
                  "**canIpForward**: Enables instances created based on these properties to send packets with source IP addresses other than their own and receive packets with destination IP addresses other than their own. If these instances will be used as an IP gateway or it will be set as the next-hop in a Route resource, specify true. If unsure, leave this set to false. See the Enable IP forwarding documentation for more information.",
                  [
                    "**confidentialInstanceConfig**: A set of Confidential Instance options.",
                    {
                      "$ul": [
                        "**enableConfidentialCompute**: Defines whether the instance should have confidential compute enabled."
                      ]
                    }
                  ],
                  "**description**: An optional text description for the instances that are created from these properties.",
                  "**disks**: An array of disks that are associated with the instances that are created from these properties.",
                  "**guestAccelerators**: A list of guest accelerator cards' type and count to use for instances created from these properties.",
                  "**keyRevocationActionType**: KeyRevocationActionType of the instance. Supported options are \"STOP\" and \"NONE\". The default value is \"NONE\" if it is not specified.",
                  "**labels**: Labels to apply to instances that are created from these properties.",
                  "**machineType**: The machine type to use for instances that are created from these properties.",
                  [
                    "**metadata**: A metadata key/value entry.",
                    {
                      "$ul": [
                        "**fingerprint**: Specifies a fingerprint for this request, which is essentially a hash of the metadata's contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update metadata. You must always provide an up-to-date fingerprint hash in order to update or change metadata, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve the resource.",
                        "**items**: Array of key/value pairs. The total size of all keys and values must be less than 512 KB.",
                        "**kind**: [Output Only] Type of the resource. Always compute#metadata for metadata. (default: compute#metadata)"
                      ]
                    }
                  ],
                  "**minCpuPlatform**: Minimum cpu/platform to be used by instances. The instance may be scheduled on the specified or newer cpu/platform. Applicable values are the friendly names of CPU platforms, such as minCpuPlatform: \"Intel Haswell\" or minCpuPlatform: \"Intel Sandy Bridge\". For more information, read Specifying a Minimum CPU Platform.",
                  "**networkInterfaces**: An array of network access configurations for this interface.",
                  [
                    "**networkPerformanceConfig**",
                    {
                      "$ul": [
                        "**totalEgressBandwidthTier**"
                      ]
                    }
                  ],
                  "**privateIpv6GoogleAccess**: The private IPv6 google access type for VMs. If not specified, use INHERIT_FROM_SUBNETWORK as default. Note that for MachineImage, this is not supported yet.",
                  [
                    "**reservationAffinity**: Specifies the reservations that this instance can consume from.",
                    {
                      "$ul": [
                        "**consumeReservationType**: Specifies the type of reservation from which this instance can consume resources: ANY_RESERVATION (default), SPECIFIC_RESERVATION, or NO_RESERVATION. See Consuming reserved instances for examples.",
                        "**key**: Corresponds to the label key of a reservation resource. To target a SPECIFIC_RESERVATION by name, specify googleapis.com/reservation-name as the key and specify the name of your reservation as its value.",
                        "**values**: Corresponds to the label values of a reservation resource. This can be either a name to a reservation in the same project or \"projects/different-project/reservations/some-reservation-name\" to target a shared reservation in the same zone but in a different project."
                      ]
                    }
                  ],
                  "**resourceManagerTags**: Resource manager tags to be bound to the instance. Tag keys and values have the same definition as resource manager tags. Keys must be in the format `tagKeys/{tag_key_id}`, and values are in the format `tagValues/456`. The field is ignored (both PUT & PATCH) when empty.",
                  "**resourcePolicies**: Resource policies (names, not URLs) applied to instances created from these properties. Note that for MachineImage, this is not supported yet.",
                  [
                    "**scheduling**: Sets the scheduling options for an Instance.",
                    {
                      "$ul": [
                        "**automaticRestart**: Specifies whether the instance should be automatically restarted if it is terminated by Compute Engine (not terminated by a user). You can only set the automatic restart option for standard instances. Preemptible instances cannot be automatically restarted. By default, this is set to true so an instance is automatically restarted if it is terminated by Compute Engine.",
                        "**instanceTerminationAction**: Specifies the termination action for the instance.",
                        [
                          "**localSsdRecoveryTimeout**: A Duration represents a fixed-length span of time represented as a count of seconds and fractions of seconds at nanosecond resolution. It is independent of any calendar and concepts like \"day\" or \"month\". Range is approximately 10,000 years.",
                          {
                            "$ul": [
                              "**nanos**: Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 `seconds` field and a positive `nanos` field. Must be from 0 to 999,999,999 inclusive.",
                              "**seconds**: Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years"
                            ]
                          }
                        ],
                        "**locationHint**: An opaque location hint used to place the instance close to other resources. This field is for use by internal tools that use the public API.",
                        "**minNodeCpus**: The minimum number of virtual CPUs this instance will consume when running on a sole-tenant node.",
                        "**nodeAffinities**: A set of node affinity and anti-affinity configurations. Refer to Configuring node affinity for more information. Overrides reservationAffinity.",
                        "**onHostMaintenance**: Defines the maintenance behavior for this instance. For standard instances, the default behavior is MIGRATE. For preemptible instances, the default and only possible behavior is TERMINATE. For more information, see Set VM host maintenance policy.",
                        "**preemptible**: Defines whether the instance is preemptible. This can only be set during instance creation or while the instance is stopped and therefore, in a `TERMINATED` state. See Instance Life Cycle for more information on the possible instance states.",
                        "**provisioningModel**: Specifies the provisioning model of the instance."
                      ]
                    }
                  ],
                  "**serviceAccounts**: A list of service accounts with specified scopes. Access tokens for these service accounts are available to the instances that are created from these properties. Use metadata queries to obtain the access tokens for these instances.",
                  [
                    "**shieldedInstanceConfig**: A set of Shielded Instance options.",
                    {
                      "$ul": [
                        "**enableIntegrityMonitoring**: Defines whether the instance has integrity monitoring enabled. Enabled by default.",
                        "**enableSecureBoot**: Defines whether the instance has Secure Boot enabled. Disabled by default.",
                        "**enableVtpm**: Defines whether the instance has the vTPM enabled. Enabled by default."
                      ]
                    }
                  ],
                  [
                    "**tags**: A set of instance tags.",
                    {
                      "$ul": [
                        "**fingerprint**: Specifies a fingerprint for this request, which is essentially a hash of the tags' contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update tags. You must always provide an up-to-date fingerprint hash in order to update or change tags. To see the latest fingerprint, make get() request to the instance.",
                        "**items**: An array of tags. Each tag must be 1-63 characters long, and comply with RFC1035."
                      ]
                    }
                  ]
                ]
              }
            ],
            "**region**: [Output Only] URL of the region where the instance template resides. Only applicable for regional resources.",
            "**selfLink**: [Output Only] The URL for this instance template. The server defines this URL.",
            "**sourceInstance**: The source instance used to create the template. You can provide this as a partial or full URL to the resource. For example, the following are valid values: - https://www.googleapis.com/compute/v1/projects/project/zones/zone /instances/instance - projects/project/zones/zone/instances/instance ",
            [
              "**sourceInstanceParams**: A specification of the parameters to use when creating the instance template from a source instance.",
              {
                "$ul": [
                  "**diskConfigs**: Attached disks configuration. If not provided, defaults are applied: For boot disk and any other R/W disks, the source images for each disk will be used. For read-only disks, they will be attached in read-only mode. Local SSD disks will be created as blank volumes."
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
