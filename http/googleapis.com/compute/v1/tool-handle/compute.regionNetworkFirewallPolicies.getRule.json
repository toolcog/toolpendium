{
  "name": "compute_regionNetworkFirewallPolicies_getRule",
  "description": "Gets a rule of the specified priority.",
  "parameters": {
    "type": "object",
    "properties": {
      "project": {
        "type": "string",
        "description": "Project ID for this request."
      },
      "region": {
        "type": "string",
        "description": "Name of the region scoping this request."
      },
      "firewallPolicy": {
        "type": "string",
        "description": "Name of the firewall policy to which the queried rule belongs."
      },
      "priority": {
        "type": "integer",
        "description": "The priority of the rule to get from the firewall policy."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "userIp": {
        "type": "string",
        "description": "Legacy name for parameter that has been superseded by `quotaUser`."
      }
    },
    "required": [
      "project",
      "region",
      "firewallPolicy"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://compute.googleapis.com/compute/v1/projects/{project}/regions/{region}/firewallPolicies/{firewallPolicy}/getRule{?priority,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType,userIp}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Represents a rule that describes one or more match conditions along with the action to be taken when traffic matches this condition (allow or deny).",
        "**Key properties:**",
        {
          "$ul": [
            "**action**: The Action to perform when the client connection triggers the rule. Valid actions are \"allow\", \"deny\" and \"goto_next\".",
            "**description**: An optional description for this resource.",
            "**direction**: The direction in which this rule applies.",
            "**disabled**: Denotes whether the firewall policy rule is disabled. When set to true, the firewall policy rule is not enforced and traffic behaves as if it did not exist. If this is unspecified, the firewall policy rule will be enabled.",
            "**enableLogging**: Denotes whether to enable logging for a particular rule. If logging is enabled, logs will be exported to the configured export destination in Stackdriver. Logs may be exported to BigQuery or Pub/Sub. Note: you cannot enable logging on \"goto_next\" rules.",
            "**kind**: [Output only] Type of the resource. Always compute#firewallPolicyRule for firewall policy rules (default: compute#firewallPolicyRule)",
            [
              "**match**: Represents a match condition that incoming traffic is evaluated against. Exactly one field must be specified.",
              {
                "$ul": [
                  "**destAddressGroups**: Address groups which should be matched against the traffic destination. Maximum number of destination address groups is 10.",
                  "**destFqdns**: Fully Qualified Domain Name (FQDN) which should be matched against traffic destination. Maximum number of destination fqdn allowed is 100.",
                  "**destIpRanges**: CIDR IP address range. Maximum number of destination CIDR IP ranges allowed is 5000.",
                  "**destRegionCodes**: Region codes whose IP addresses will be used to match for destination of traffic. Should be specified as 2 letter country code defined as per ISO 3166 alpha-2 country codes. ex.\"US\" Maximum number of dest region codes allowed is 5000.",
                  "**destThreatIntelligences**: Names of Network Threat Intelligence lists. The IPs in these lists will be matched against traffic destination.",
                  "**layer4Configs**: Pairs of IP protocols and ports that the rule should match.",
                  "**srcAddressGroups**: Address groups which should be matched against the traffic source. Maximum number of source address groups is 10.",
                  "**srcFqdns**: Fully Qualified Domain Name (FQDN) which should be matched against traffic source. Maximum number of source fqdn allowed is 100.",
                  "**srcIpRanges**: CIDR IP address range. Maximum number of source CIDR IP ranges allowed is 5000.",
                  "**srcRegionCodes**: Region codes whose IP addresses will be used to match for source of traffic. Should be specified as 2 letter country code defined as per ISO 3166 alpha-2 country codes. ex.\"US\" Maximum number of source region codes allowed is 5000.",
                  "**srcSecureTags**: List of secure tag values, which should be matched at the source of the traffic. For INGRESS rule, if all the srcSecureTag are INEFFECTIVE, and there is no srcIpRange, this rule will be ignored. Maximum number of source tag values allowed is 256.",
                  "**srcThreatIntelligences**: Names of Network Threat Intelligence lists. The IPs in these lists will be matched against traffic source."
                ]
              }
            ],
            "**priority**: An integer indicating the priority of a rule in the list. The priority must be a positive value between 0 and 2147483647. Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the lowest prority.",
            "**ruleName**: An optional name for the rule. This field is not a unique identifier and can be updated.",
            "**ruleTupleCount**: [Output Only] Calculation of the complexity of a single firewall policy rule.",
            "**securityProfileGroup**: A fully-qualified URL of a SecurityProfile resource instance. Example: https://networksecurity.googleapis.com/v1/projects/{project}/locations/{location}/securityProfileGroups/my-security-profile-group Must be specified if action = 'apply_security_profile_group' and cannot be specified for other actions.",
            "**targetResources**: A list of network resource URLs to which this rule applies. This field allows you to control which network's VMs get this rule. If this field is left blank, all VMs within the organization will receive the rule.",
            "**targetSecureTags**: A list of secure tags that controls which instances the firewall rule applies to. If targetSecureTag are specified, then the firewall rule applies only to instances in the VPC network that have one of those EFFECTIVE secure tags, if all the target_secure_tag are in INEFFECTIVE state, then this rule will be ignored. targetSecureTag may not be set at the same time as targetServiceAccounts. If neither targetServiceAccounts nor targetSecureTag are specified, the firewall rule applies to all instances on the specified network. Maximum number of target label tags allowed is 256.",
            "**targetServiceAccounts**: A list of service accounts indicating the sets of instances that are applied with this rule.",
            "**tlsInspect**: Boolean flag indicating if the traffic should be TLS decrypted. Can be set only if action = 'apply_security_profile_group' and cannot be set for other actions."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
