{
  "name": "compute_instanceGroupManagers_patch",
  "description": "Updates a managed instance group using the information that you specify in the request. This operation is marked as DONE when the group is patched even if the instances in the group are still in the process of being patched. You must separately verify the status of the individual instances with the listManagedInstances method. This method supports PATCH semantics and uses the JSON merge patch format and processing rules. If you update your group to specify a new template or instance configuration, it's possible that your intended specification for each VM in the group is different from the current state of that VM. To learn how to apply an updated configuration to the VMs in a MIG, see Updating instances in a MIG.",
  "parameters": {
    "type": "object",
    "properties": {
      "project": {
        "type": "string",
        "description": "Project ID for this request."
      },
      "zone": {
        "type": "string",
        "description": "The name of the zone where you want to create the managed instance group."
      },
      "instanceGroupManager": {
        "type": "string",
        "description": "The name of the instance group manager."
      },
      "requestId": {
        "type": "string",
        "description": "An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "userIp": {
        "type": "string",
        "description": "Legacy name for parameter that has been superseded by `quotaUser`."
      },
      "body": {
        "$ref": "#/$defs/InstanceGroupManager"
      }
    },
    "required": [
      "project",
      "zone",
      "instanceGroupManager"
    ],
    "$defs": {
      "InstanceGroupManager": {
        "description": "Represents a Managed Instance Group resource. An instance group is a collection of VM instances that you can manage as a single entity. For more information, read Instance groups. For zonal Managed Instance Group, use the instanceGroupManagers resource. For regional Managed Instance Group, use the regionInstanceGroupManagers resource.",
        "properties": {
          "allInstancesConfig": {
            "$ref": "#/$defs/InstanceGroupManagerAllInstancesConfig"
          },
          "autoHealingPolicies": {
            "description": "The autohealing policy for this managed instance group. You can specify only one value.",
            "items": {
              "$ref": "#/$defs/InstanceGroupManagerAutoHealingPolicy"
            },
            "type": "array"
          },
          "baseInstanceName": {
            "description": "The base instance name to use for instances in this group. The value must be 1-58 characters long. Instances are named by appending a hyphen and a random four-character string to the base instance name. The base instance name must comply with RFC1035.",
            "pattern": "[a-z][-a-z0-9]{0,57}",
            "type": "string"
          },
          "creationTimestamp": {
            "description": "[Output Only] The creation timestamp for this managed instance group in RFC3339 text format.",
            "type": "string"
          },
          "currentActions": {
            "$ref": "#/$defs/InstanceGroupManagerActionsSummary"
          },
          "description": {
            "description": "An optional description of this resource.",
            "type": "string"
          },
          "distributionPolicy": {
            "$ref": "#/$defs/DistributionPolicy"
          },
          "fingerprint": {
            "description": "Fingerprint of this resource. This field may be used in optimistic locking. It will be ignored when inserting an InstanceGroupManager. An up-to-date fingerprint must be provided in order to update the InstanceGroupManager, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve an InstanceGroupManager.",
            "format": "byte",
            "type": "string"
          },
          "id": {
            "description": "[Output Only] A unique identifier for this resource type. The server generates this identifier.",
            "format": "uint64",
            "type": "string"
          },
          "instanceGroup": {
            "description": "[Output Only] The URL of the Instance Group resource.",
            "type": "string"
          },
          "instanceLifecyclePolicy": {
            "$ref": "#/$defs/InstanceGroupManagerInstanceLifecyclePolicy"
          },
          "instanceTemplate": {
            "description": "The URL of the instance template that is specified for this managed instance group. The group uses this template to create all new instances in the managed instance group. The templates for existing instances in the group do not change unless you run recreateInstances, run applyUpdatesToInstances, or set the group's updatePolicy.type to PROACTIVE.",
            "type": "string"
          },
          "kind": {
            "default": "compute#instanceGroupManager",
            "description": "[Output Only] The resource type, which is always compute#instanceGroupManager for managed instance groups.",
            "type": "string"
          },
          "listManagedInstancesResults": {
            "description": "Pagination behavior of the listManagedInstances API method for this managed instance group.",
            "enum": [
              "PAGELESS",
              "PAGINATED"
            ],
            "type": "string"
          },
          "name": {
            "description": "The name of the managed instance group. The name must be 1-63 characters long, and comply with RFC1035.",
            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
            "type": "string"
          },
          "namedPorts": {
            "description": "Named ports configured for the Instance Groups complementary to this Instance Group Manager.",
            "items": {
              "$ref": "#/$defs/NamedPort"
            },
            "type": "array"
          },
          "region": {
            "description": "[Output Only] The URL of the region where the managed instance group resides (for regional resources).",
            "type": "string"
          },
          "selfLink": {
            "description": "[Output Only] The URL for this managed instance group. The server defines this URL.",
            "type": "string"
          },
          "statefulPolicy": {
            "$ref": "#/$defs/StatefulPolicy"
          },
          "status": {
            "$ref": "#/$defs/InstanceGroupManagerStatus"
          },
          "targetPools": {
            "description": "The URLs for all TargetPool resources to which instances in the instanceGroup field are added. The target pools automatically apply to all of the instances in the managed instance group.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "targetSize": {
            "description": "The target number of running instances for this managed instance group. You can reduce this number by using the instanceGroupManager deleteInstances or abandonInstances methods. Resizing the group also changes this number.",
            "format": "int32",
            "type": "integer"
          },
          "updatePolicy": {
            "$ref": "#/$defs/InstanceGroupManagerUpdatePolicy"
          },
          "versions": {
            "description": "Specifies the instance templates used by this managed instance group to create instances. Each version is defined by an instanceTemplate and a name. Every version can appear at most once per instance group. This field overrides the top-level instanceTemplate field. Read more about the relationships between these fields. Exactly one version must leave the targetSize field unset. That version will be applied to all remaining instances. For more information, read about canary updates.",
            "items": {
              "$ref": "#/$defs/InstanceGroupManagerVersion"
            },
            "type": "array"
          },
          "zone": {
            "description": "[Output Only] The URL of a zone where the managed instance group is located (for zonal resources).",
            "type": "string"
          }
        },
        "type": "object"
      },
      "InstanceGroupManagerAllInstancesConfig": {
        "properties": {
          "properties": {
            "$ref": "#/$defs/InstancePropertiesPatch"
          }
        },
        "type": "object"
      },
      "InstancePropertiesPatch": {
        "description": "Represents the change that you want to make to the instance properties.",
        "properties": {
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The label key-value pairs that you want to patch onto the instance.",
            "type": "object"
          },
          "metadata": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The metadata key-value pairs that you want to patch onto the instance. For more information, see Project and instance metadata.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "InstanceGroupManagerAutoHealingPolicy": {
        "properties": {
          "healthCheck": {
            "description": "The URL for the health check that signals autohealing.",
            "type": "string"
          },
          "initialDelaySec": {
            "description": "The initial delay is the number of seconds that a new VM takes to initialize and run its startup script. During a VM's initial delay period, the MIG ignores unsuccessful health checks because the VM might be in the startup process. This prevents the MIG from prematurely recreating a VM. If the health check receives a healthy response during the initial delay, it indicates that the startup process is complete and the VM is ready. The value of initial delay must be between 0 and 3600 seconds. The default value is 0.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "InstanceGroupManagerActionsSummary": {
        "properties": {
          "abandoning": {
            "description": "[Output Only] The total number of instances in the managed instance group that are scheduled to be abandoned. Abandoning an instance removes it from the managed instance group without deleting it.",
            "format": "int32",
            "type": "integer"
          },
          "creating": {
            "description": "[Output Only] The number of instances in the managed instance group that are scheduled to be created or are currently being created. If the group fails to create any of these instances, it tries again until it creates the instance successfully. If you have disabled creation retries, this field will not be populated; instead, the creatingWithoutRetries field will be populated.",
            "format": "int32",
            "type": "integer"
          },
          "creatingWithoutRetries": {
            "description": "[Output Only] The number of instances that the managed instance group will attempt to create. The group attempts to create each instance only once. If the group fails to create any of these instances, it decreases the group's targetSize value accordingly.",
            "format": "int32",
            "type": "integer"
          },
          "deleting": {
            "description": "[Output Only] The number of instances in the managed instance group that are scheduled to be deleted or are currently being deleted.",
            "format": "int32",
            "type": "integer"
          },
          "none": {
            "description": "[Output Only] The number of instances in the managed instance group that are running and have no scheduled actions.",
            "format": "int32",
            "type": "integer"
          },
          "recreating": {
            "description": "[Output Only] The number of instances in the managed instance group that are scheduled to be recreated or are currently being being recreated. Recreating an instance deletes the existing root persistent disk and creates a new disk from the image that is defined in the instance template.",
            "format": "int32",
            "type": "integer"
          },
          "refreshing": {
            "description": "[Output Only] The number of instances in the managed instance group that are being reconfigured with properties that do not require a restart or a recreate action. For example, setting or removing target pools for the instance.",
            "format": "int32",
            "type": "integer"
          },
          "restarting": {
            "description": "[Output Only] The number of instances in the managed instance group that are scheduled to be restarted or are currently being restarted.",
            "format": "int32",
            "type": "integer"
          },
          "resuming": {
            "description": "[Output Only] The number of instances in the managed instance group that are scheduled to be resumed or are currently being resumed.",
            "format": "int32",
            "type": "integer"
          },
          "starting": {
            "description": "[Output Only] The number of instances in the managed instance group that are scheduled to be started or are currently being started.",
            "format": "int32",
            "type": "integer"
          },
          "stopping": {
            "description": "[Output Only] The number of instances in the managed instance group that are scheduled to be stopped or are currently being stopped.",
            "format": "int32",
            "type": "integer"
          },
          "suspending": {
            "description": "[Output Only] The number of instances in the managed instance group that are scheduled to be suspended or are currently being suspended.",
            "format": "int32",
            "type": "integer"
          },
          "verifying": {
            "description": "[Output Only] The number of instances in the managed instance group that are being verified. See the managedInstances[].currentAction property in the listManagedInstances method documentation.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "DistributionPolicy": {
        "properties": {
          "targetShape": {
            "description": "The distribution shape to which the group converges either proactively or on resize events (depending on the value set in updatePolicy.instanceRedistributionType).",
            "enum": [
              "ANY",
              "ANY_SINGLE_ZONE",
              "BALANCED",
              "EVEN"
            ],
            "type": "string"
          },
          "zones": {
            "description": "Zones where the regional managed instance group will create and manage its instances.",
            "items": {
              "$ref": "#/$defs/DistributionPolicyZoneConfiguration"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DistributionPolicyZoneConfiguration": {
        "properties": {
          "zone": {
            "description": "The URL of the zone. The zone must exist in the region where the managed instance group is located.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "InstanceGroupManagerInstanceLifecyclePolicy": {
        "properties": {
          "defaultActionOnFailure": {
            "description": "The action that a MIG performs on a failed or an unhealthy VM. A VM is marked as unhealthy when the application running on that VM fails a health check. Valid values are - REPAIR (default): MIG automatically repairs a failed or an unhealthy VM by recreating it. For more information, see About repairing VMs in a MIG. - DO_NOTHING: MIG does not repair a failed or an unhealthy VM. ",
            "enum": [
              "DO_NOTHING",
              "REPAIR"
            ],
            "type": "string"
          },
          "forceUpdateOnRepair": {
            "description": "A bit indicating whether to forcefully apply the group's latest configuration when repairing a VM. Valid options are: - NO (default): If configuration updates are available, they are not forcefully applied during repair. Instead, configuration updates are applied according to the group's update policy. - YES: If configuration updates are available, they are applied during repair. ",
            "enum": [
              "NO",
              "YES"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "NamedPort": {
        "description": "The named port. For example: <\"http\", 80>.",
        "properties": {
          "name": {
            "description": "The name for this named port. The name must be 1-63 characters long, and comply with RFC1035.",
            "type": "string"
          },
          "port": {
            "description": "The port number, which can be a value between 1 and 65535.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "StatefulPolicy": {
        "properties": {
          "preservedState": {
            "$ref": "#/$defs/StatefulPolicyPreservedState"
          }
        },
        "type": "object"
      },
      "StatefulPolicyPreservedState": {
        "description": "Configuration of preserved resources.",
        "properties": {
          "disks": {
            "additionalProperties": {
              "$ref": "#/$defs/StatefulPolicyPreservedStateDiskDevice"
            },
            "description": "Disks created on the instances that will be preserved on instance delete, update, etc. This map is keyed with the device names of the disks.",
            "type": "object"
          },
          "externalIPs": {
            "additionalProperties": {
              "$ref": "#/$defs/StatefulPolicyPreservedStateNetworkIp"
            },
            "description": "External network IPs assigned to the instances that will be preserved on instance delete, update, etc. This map is keyed with the network interface name.",
            "type": "object"
          },
          "internalIPs": {
            "additionalProperties": {
              "$ref": "#/$defs/StatefulPolicyPreservedStateNetworkIp"
            },
            "description": "Internal network IPs assigned to the instances that will be preserved on instance delete, update, etc. This map is keyed with the network interface name.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "StatefulPolicyPreservedStateDiskDevice": {
        "properties": {
          "autoDelete": {
            "description": "These stateful disks will never be deleted during autohealing, update or VM instance recreate operations. This flag is used to configure if the disk should be deleted after it is no longer used by the group, e.g. when the given instance or the whole group is deleted. Note: disks attached in READ_ONLY mode cannot be auto-deleted.",
            "enum": [
              "NEVER",
              "ON_PERMANENT_INSTANCE_DELETION"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "StatefulPolicyPreservedStateNetworkIp": {
        "properties": {
          "autoDelete": {
            "description": "These stateful IPs will never be released during autohealing, update or VM instance recreate operations. This flag is used to configure if the IP reservation should be deleted after it is no longer used by the group, e.g. when the given instance or the whole group is deleted.",
            "enum": [
              "NEVER",
              "ON_PERMANENT_INSTANCE_DELETION"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "InstanceGroupManagerStatus": {
        "properties": {
          "allInstancesConfig": {
            "$ref": "#/$defs/InstanceGroupManagerStatusAllInstancesConfig"
          },
          "autoscaler": {
            "description": "[Output Only] The URL of the Autoscaler that targets this instance group manager.",
            "type": "string"
          },
          "isStable": {
            "description": "[Output Only] A bit indicating whether the managed instance group is in a stable state. A stable state means that: none of the instances in the managed instance group is currently undergoing any type of change (for example, creation, restart, or deletion); no future changes are scheduled for instances in the managed instance group; and the managed instance group itself is not being modified.",
            "type": "boolean"
          },
          "stateful": {
            "$ref": "#/$defs/InstanceGroupManagerStatusStateful"
          },
          "versionTarget": {
            "$ref": "#/$defs/InstanceGroupManagerStatusVersionTarget"
          }
        },
        "type": "object"
      },
      "InstanceGroupManagerStatusAllInstancesConfig": {
        "properties": {
          "currentRevision": {
            "description": "[Output Only] Current all-instances configuration revision. This value is in RFC3339 text format.",
            "type": "string"
          },
          "effective": {
            "description": "[Output Only] A bit indicating whether this configuration has been applied to all managed instances in the group.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "InstanceGroupManagerStatusStateful": {
        "properties": {
          "hasStatefulConfig": {
            "description": "[Output Only] A bit indicating whether the managed instance group has stateful configuration, that is, if you have configured any items in a stateful policy or in per-instance configs. The group might report that it has no stateful configuration even when there is still some preserved state on a managed instance, for example, if you have deleted all PICs but not yet applied those deletions.",
            "type": "boolean"
          },
          "perInstanceConfigs": {
            "$ref": "#/$defs/InstanceGroupManagerStatusStatefulPerInstanceConfigs"
          }
        },
        "type": "object"
      },
      "InstanceGroupManagerStatusStatefulPerInstanceConfigs": {
        "properties": {
          "allEffective": {
            "description": "A bit indicating if all of the group's per-instance configurations (listed in the output of a listPerInstanceConfigs API call) have status EFFECTIVE or there are no per-instance-configs.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "InstanceGroupManagerStatusVersionTarget": {
        "properties": {
          "isReached": {
            "description": "[Output Only] A bit indicating whether version target has been reached in this managed instance group, i.e. all instances are in their target version. Instances' target version are specified by version field on Instance Group Manager.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "InstanceGroupManagerUpdatePolicy": {
        "properties": {
          "instanceRedistributionType": {
            "description": "The instance redistribution policy for regional managed instance groups. Valid values are: - PROACTIVE (default): The group attempts to maintain an even distribution of VM instances across zones in the region. - NONE: For non-autoscaled groups, proactive redistribution is disabled. ",
            "enum": [
              "NONE",
              "PROACTIVE"
            ],
            "type": "string"
          },
          "maxSurge": {
            "$ref": "#/$defs/FixedOrPercent"
          },
          "maxUnavailable": {
            "$ref": "#/$defs/FixedOrPercent"
          },
          "minimalAction": {
            "description": "Minimal action to be taken on an instance. Use this option to minimize disruption as much as possible or to apply a more disruptive action than is necessary. - To limit disruption as much as possible, set the minimal action to REFRESH. If your update requires a more disruptive action, Compute Engine performs the necessary action to execute the update. - To apply a more disruptive action than is strictly necessary, set the minimal action to RESTART or REPLACE. For example, Compute Engine does not need to restart a VM to change its metadata. But if your application reads instance metadata only when a VM is restarted, you can set the minimal action to RESTART in order to pick up metadata changes. ",
            "enum": [
              "NONE",
              "REFRESH",
              "REPLACE",
              "RESTART"
            ],
            "type": "string"
          },
          "mostDisruptiveAllowedAction": {
            "description": "Most disruptive action that is allowed to be taken on an instance. You can specify either NONE to forbid any actions, REFRESH to avoid restarting the VM and to limit disruption as much as possible. RESTART to allow actions that can be applied without instance replacing or REPLACE to allow all possible actions. If the Updater determines that the minimal update action needed is more disruptive than most disruptive allowed action you specify it will not perform the update at all.",
            "enum": [
              "NONE",
              "REFRESH",
              "REPLACE",
              "RESTART"
            ],
            "type": "string"
          },
          "replacementMethod": {
            "description": "What action should be used to replace instances. See minimal_action.REPLACE",
            "enum": [
              "RECREATE",
              "SUBSTITUTE"
            ],
            "type": "string"
          },
          "type": {
            "description": "The type of update process. You can specify either PROACTIVE so that the MIG automatically updates VMs to the latest configurations or OPPORTUNISTIC so that you can select the VMs that you want to update.",
            "enum": [
              "OPPORTUNISTIC",
              "PROACTIVE"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "FixedOrPercent": {
        "description": "Encapsulates numeric value that can be either absolute or relative.",
        "properties": {
          "calculated": {
            "description": "[Output Only] Absolute value of VM instances calculated based on the specific mode. - If the value is fixed, then the calculated value is equal to the fixed value. - If the value is a percent, then the calculated value is percent/100 * targetSize. For example, the calculated value of a 80% of a managed instance group with 150 instances would be (80/100 * 150) = 120 VM instances. If there is a remainder, the number is rounded. ",
            "format": "int32",
            "type": "integer"
          },
          "fixed": {
            "description": "Specifies a fixed number of VM instances. This must be a positive integer.",
            "format": "int32",
            "type": "integer"
          },
          "percent": {
            "description": "Specifies a percentage of instances between 0 to 100%, inclusive. For example, specify 80 for 80%.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "InstanceGroupManagerVersion": {
        "properties": {
          "instanceTemplate": {
            "description": "The URL of the instance template that is specified for this managed instance group. The group uses this template to create new instances in the managed instance group until the `targetSize` for this version is reached. The templates for existing instances in the group do not change unless you run recreateInstances, run applyUpdatesToInstances, or set the group's updatePolicy.type to PROACTIVE; in those cases, existing instances are updated until the `targetSize` for this version is reached.",
            "type": "string"
          },
          "name": {
            "description": "Name of the version. Unique among all versions in the scope of this managed instance group.",
            "type": "string"
          },
          "targetSize": {
            "$ref": "#/$defs/FixedOrPercent"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PATCH",
    "url": {
      "$uri": "https://compute.googleapis.com/compute/v1/projects/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}{?requestId,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType,userIp}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Represents an Operation resource. Google Compute Engine has three Operation resources: * [Global](/compute/docs/reference/rest/v1/globalOperations) * [Regional](/compute/docs/reference/rest/v1/regionOperations) * [Zonal](/compute/docs/reference/rest/v1/zoneOperations) You can use an operation resource to manage asynchronous API requests. For more information, read Handling API responses. Operations can be global, regional or zonal. - For global operations, use the `globalOperations` resource. - For regional operations, use the `regionOperations` resource. - For zonal operations, use the `zoneOperations` resource. For more information, read Global, Regional, and Zonal Resources. Note that completed Operation resources have a limited retention period.",
        "**Key properties:**",
        {
          "$ul": [
            "**clientOperationId**: [Output Only] The value of `requestId` if you provided it in the request. Not present otherwise.",
            "**creationTimestamp**: [Deprecated] This field is deprecated.",
            "**description**: [Output Only] A textual description of the operation, which is set when the operation is created.",
            "**endTime**: [Output Only] The time that this operation was completed. This value is in RFC3339 text format.",
            [
              "**error**: [Output Only] If errors are generated during processing of the operation, this field will be populated.",
              {
                "$ul": [
                  "**errors**: [Output Only] The array of errors encountered while processing this operation."
                ]
              }
            ],
            "**httpErrorMessage**: [Output Only] If the operation fails, this field contains the HTTP error message that was returned, such as `NOT FOUND`.",
            "**httpErrorStatusCode**: [Output Only] If the operation fails, this field contains the HTTP error status code that was returned. For example, a `404` means the resource was not found.",
            "**id**: [Output Only] The unique identifier for the operation. This identifier is defined by the server.",
            "**insertTime**: [Output Only] The time that this operation was requested. This value is in RFC3339 text format.",
            [
              "**instancesBulkInsertOperationMetadata**",
              {
                "$ul": [
                  "**perLocationStatus**: Status information per location (location name is key). Example key: zones/us-central1-a"
                ]
              }
            ],
            "**kind**: [Output Only] Type of the resource. Always `compute#operation` for Operation resources. (default: compute#operation)",
            "**name**: [Output Only] Name of the operation.",
            "**operationGroupId**: [Output Only] An ID that represents a group of operations, such as when a group of operations results from a `bulkInsert` API request.",
            "**operationType**: [Output Only] The type of operation, such as `insert`, `update`, or `delete`, and so on.",
            "**progress**: [Output Only] An optional progress indicator that ranges from 0 to 100. There is no requirement that this be linear or support any granularity of operations. This should not be used to guess when the operation will be complete. This number should monotonically increase as the operation progresses.",
            "**region**: [Output Only] The URL of the region where the operation resides. Only applicable when performing regional operations.",
            "**selfLink**: [Output Only] Server-defined URL for the resource.",
            [
              "**setCommonInstanceMetadataOperationMetadata**",
              {
                "$ul": [
                  "**clientOperationId**: [Output Only] The client operation id.",
                  "**perLocationOperations**: [Output Only] Status information per location (location name is key). Example key: zones/us-central1-a"
                ]
              }
            ],
            "**startTime**: [Output Only] The time that this operation was started by the server. This value is in RFC3339 text format.",
            "**status**: [Output Only] The status of the operation, which can be one of the following: `PENDING`, `RUNNING`, or `DONE`.",
            "**statusMessage**: [Output Only] An optional textual description of the current status of the operation.",
            "**targetId**: [Output Only] The unique target ID, which identifies a specific incarnation of the target resource.",
            "**targetLink**: [Output Only] The URL of the resource that the operation modifies. For operations related to creating a snapshot, this points to the persistent disk that the snapshot was created from.",
            "**user**: [Output Only] User who requested the operation, for example: `user@example.com` or `alice_smith_identifier (global/workforcePools/example-com-us-employees)`.",
            "**warnings**: [Output Only] If warning messages are generated during processing of the operation, this field will be populated.",
            "**zone**: [Output Only] The URL of the zone where the operation resides. Only applicable when performing per-zone operations."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
