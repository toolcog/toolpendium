{
  "name": "compute_regionCommitments_update",
  "description": "Updates the specified commitment with the data included in the request. Update is performed only on selected fields included as part of update-mask. Only the following fields can be modified: auto_renew.",
  "parameters": {
    "type": "object",
    "properties": {
      "project": {
        "type": "string",
        "description": "Project ID for this request."
      },
      "region": {
        "type": "string",
        "description": "Name of the region for this request."
      },
      "commitment": {
        "type": "string",
        "description": "Name of the commitment for which auto renew is being updated."
      },
      "paths": {
        "items": {
          "type": "string"
        },
        "type": "array"
      },
      "requestId": {
        "type": "string",
        "description": "An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."
      },
      "updateMask": {
        "type": "string",
        "description": "update_mask indicates fields to be updated as part of this request."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "userIp": {
        "type": "string",
        "description": "Legacy name for parameter that has been superseded by `quotaUser`."
      },
      "body": {
        "$ref": "#/$defs/Commitment"
      }
    },
    "required": [
      "project",
      "region",
      "commitment"
    ],
    "$defs": {
      "Commitment": {
        "description": "Represents a regional Commitment resource. Creating a commitment resource means that you are purchasing a committed use contract with an explicit start and end time. You can create commitments based on vCPUs and memory usage and receive discounted rates. For full details, read Signing Up for Committed Use Discounts.",
        "properties": {
          "autoRenew": {
            "description": "Specifies whether to enable automatic renewal for the commitment. The default value is false if not specified. The field can be updated until the day of the commitment expiration at 12:00am PST. If the field is set to true, the commitment will be automatically renewed for either one or three years according to the terms of the existing commitment.",
            "type": "boolean"
          },
          "category": {
            "description": "The category of the commitment. Category MACHINE specifies commitments composed of machine resources such as VCPU or MEMORY, listed in resources. Category LICENSE specifies commitments composed of software licenses, listed in licenseResources. Note that only MACHINE commitments should have a Type specified.",
            "enum": [
              "CATEGORY_UNSPECIFIED",
              "LICENSE",
              "MACHINE"
            ],
            "type": "string"
          },
          "creationTimestamp": {
            "description": "[Output Only] Creation timestamp in RFC3339 text format.",
            "type": "string"
          },
          "description": {
            "description": "An optional description of this resource. Provide this property when you create the resource.",
            "type": "string"
          },
          "endTimestamp": {
            "description": "[Output Only] Commitment end time in RFC3339 text format.",
            "type": "string"
          },
          "existingReservations": {
            "description": "Specifies the already existing reservations to attach to the Commitment. This field is optional, and it can be a full or partial URL. For example, the following are valid URLs to an reservation: - https://www.googleapis.com/compute/v1/projects/project/zones/zone /reservations/reservation - projects/project/zones/zone/reservations/reservation ",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "id": {
            "description": "[Output Only] The unique identifier for the resource. This identifier is defined by the server.",
            "format": "uint64",
            "type": "string"
          },
          "kind": {
            "default": "compute#commitment",
            "description": "[Output Only] Type of the resource. Always compute#commitment for commitments.",
            "type": "string"
          },
          "licenseResource": {
            "$ref": "#/$defs/LicenseResourceCommitment"
          },
          "mergeSourceCommitments": {
            "description": "List of source commitments to be merged into a new commitment.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "name": {
            "description": "Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
            "type": "string"
          },
          "plan": {
            "description": "The plan for this commitment, which determines duration and discount rate. The currently supported plans are TWELVE_MONTH (1 year), and THIRTY_SIX_MONTH (3 years).",
            "enum": [
              "INVALID",
              "THIRTY_SIX_MONTH",
              "TWELVE_MONTH"
            ],
            "type": "string"
          },
          "region": {
            "description": "[Output Only] URL of the region where this commitment may be used.",
            "type": "string"
          },
          "reservations": {
            "description": "List of create-on-create reservations for this commitment.",
            "items": {
              "$ref": "#/$defs/Reservation"
            },
            "type": "array"
          },
          "resources": {
            "description": "A list of commitment amounts for particular resources. Note that VCPU and MEMORY resource commitments must occur together.",
            "items": {
              "$ref": "#/$defs/ResourceCommitment"
            },
            "type": "array"
          },
          "selfLink": {
            "description": "[Output Only] Server-defined URL for the resource.",
            "type": "string"
          },
          "splitSourceCommitment": {
            "description": "Source commitment to be split into a new commitment.",
            "type": "string"
          },
          "startTimestamp": {
            "description": "[Output Only] Commitment start time in RFC3339 text format.",
            "type": "string"
          },
          "status": {
            "description": "[Output Only] Status of the commitment with regards to eventual expiration (each commitment has an end date defined). One of the following values: NOT_YET_ACTIVE, ACTIVE, EXPIRED.",
            "enum": [
              "ACTIVE",
              "CANCELLED",
              "CREATING",
              "EXPIRED",
              "NOT_YET_ACTIVE"
            ],
            "type": "string"
          },
          "statusMessage": {
            "description": "[Output Only] An optional, human-readable explanation of the status.",
            "type": "string"
          },
          "type": {
            "description": "The type of commitment, which affects the discount rate and the eligible resources. Type MEMORY_OPTIMIZED specifies a commitment that will only apply to memory optimized machines. Type ACCELERATOR_OPTIMIZED specifies a commitment that will only apply to accelerator optimized machines.",
            "enum": [
              "ACCELERATOR_OPTIMIZED",
              "ACCELERATOR_OPTIMIZED_A3",
              "COMPUTE_OPTIMIZED",
              "COMPUTE_OPTIMIZED_C2D",
              "COMPUTE_OPTIMIZED_C3",
              "COMPUTE_OPTIMIZED_C3D",
              "COMPUTE_OPTIMIZED_H3",
              "GENERAL_PURPOSE",
              "GENERAL_PURPOSE_E2",
              "GENERAL_PURPOSE_N2",
              "GENERAL_PURPOSE_N2D",
              "GENERAL_PURPOSE_T2D",
              "GRAPHICS_OPTIMIZED",
              "MEMORY_OPTIMIZED",
              "MEMORY_OPTIMIZED_M3",
              "STORAGE_OPTIMIZED_Z3",
              "TYPE_UNSPECIFIED"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "LicenseResourceCommitment": {
        "description": "Commitment for a particular license resource.",
        "properties": {
          "amount": {
            "description": "The number of licenses purchased.",
            "format": "int64",
            "type": "string"
          },
          "coresPerLicense": {
            "description": "Specifies the core range of the instance for which this license applies.",
            "type": "string"
          },
          "license": {
            "description": "Any applicable license URI.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Reservation": {
        "description": "Represents a reservation resource. A reservation ensures that capacity is held in a specific zone even if the reserved VMs are not running. For more information, read Reserving zonal resources.",
        "properties": {
          "aggregateReservation": {
            "$ref": "#/$defs/AllocationAggregateReservation"
          },
          "commitment": {
            "description": "[Output Only] Full or partial URL to a parent commitment. This field displays for reservations that are tied to a commitment.",
            "type": "string"
          },
          "creationTimestamp": {
            "description": "[Output Only] Creation timestamp in RFC3339 text format.",
            "type": "string"
          },
          "deleteAfterDuration": {
            "$ref": "#/$defs/Duration"
          },
          "deleteAtTime": {
            "description": "Absolute time in future when the reservation will be auto-deleted by Compute Engine. Timestamp is represented in RFC3339 text format.",
            "type": "string"
          },
          "description": {
            "description": "An optional description of this resource. Provide this property when you create the resource.",
            "type": "string"
          },
          "id": {
            "description": "[Output Only] The unique identifier for the resource. This identifier is defined by the server.",
            "format": "uint64",
            "type": "string"
          },
          "kind": {
            "default": "compute#reservation",
            "description": "[Output Only] Type of the resource. Always compute#reservations for reservations.",
            "type": "string"
          },
          "name": {
            "description": "The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
            "type": "string"
          },
          "resourcePolicies": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Resource policies to be added to this reservation. The key is defined by user, and the value is resource policy url. This is to define placement policy with reservation.",
            "type": "object"
          },
          "resourceStatus": {
            "$ref": "#/$defs/AllocationResourceStatus"
          },
          "satisfiesPzs": {
            "description": "[Output Only] Reserved for future use.",
            "type": "boolean"
          },
          "selfLink": {
            "description": "[Output Only] Server-defined fully-qualified URL for this resource.",
            "type": "string"
          },
          "shareSettings": {
            "$ref": "#/$defs/ShareSettings"
          },
          "specificReservation": {
            "$ref": "#/$defs/AllocationSpecificSKUReservation"
          },
          "specificReservationRequired": {
            "description": "Indicates whether the reservation can be consumed by VMs with affinity for \"any\" reservation. If the field is set, then only VMs that target the reservation by name can consume from this reservation.",
            "type": "boolean"
          },
          "status": {
            "description": "[Output Only] The status of the reservation.",
            "enum": [
              "CREATING",
              "DELETING",
              "INVALID",
              "READY",
              "UPDATING"
            ],
            "type": "string"
          },
          "zone": {
            "description": "Zone in which the reservation resides. A zone must be provided if the reservation is created within a commitment.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AllocationAggregateReservation": {
        "description": "This reservation type is specified by total resource amounts (e.g. total count of CPUs) and can account for multiple instance SKUs. In other words, one can create instances of varying shapes against this reservation.",
        "properties": {
          "inUseResources": {
            "description": "[Output only] List of resources currently in use.",
            "items": {
              "$ref": "#/$defs/AllocationAggregateReservationReservedResourceInfo"
            },
            "type": "array"
          },
          "reservedResources": {
            "description": "List of reserved resources (CPUs, memory, accelerators).",
            "items": {
              "$ref": "#/$defs/AllocationAggregateReservationReservedResourceInfo"
            },
            "type": "array"
          },
          "vmFamily": {
            "description": "The VM family that all instances scheduled against this reservation must belong to.",
            "enum": [
              "VM_FAMILY_CLOUD_TPU_LITE_DEVICE_CT5L",
              "VM_FAMILY_CLOUD_TPU_LITE_POD_SLICE_CT5LP",
              "VM_FAMILY_CLOUD_TPU_POD_SLICE_CT4P"
            ],
            "type": "string"
          },
          "workloadType": {
            "description": "The workload type of the instances that will target this reservation.",
            "enum": [
              "BATCH",
              "SERVING",
              "UNSPECIFIED"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "AllocationAggregateReservationReservedResourceInfo": {
        "properties": {
          "accelerator": {
            "$ref": "#/$defs/AllocationAggregateReservationReservedResourceInfoAccelerator"
          }
        },
        "type": "object"
      },
      "AllocationAggregateReservationReservedResourceInfoAccelerator": {
        "properties": {
          "acceleratorCount": {
            "description": "Number of accelerators of specified type.",
            "format": "int32",
            "type": "integer"
          },
          "acceleratorType": {
            "description": "Full or partial URL to accelerator type. e.g. \"projects/{PROJECT}/zones/{ZONE}/acceleratorTypes/ct4l\"",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Duration": {
        "description": "A Duration represents a fixed-length span of time represented as a count of seconds and fractions of seconds at nanosecond resolution. It is independent of any calendar and concepts like \"day\" or \"month\". Range is approximately 10,000 years.",
        "properties": {
          "nanos": {
            "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 `seconds` field and a positive `nanos` field. Must be from 0 to 999,999,999 inclusive.",
            "format": "int32",
            "type": "integer"
          },
          "seconds": {
            "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AllocationResourceStatus": {
        "description": "[Output Only] Contains output only fields.",
        "properties": {
          "specificSkuAllocation": {
            "$ref": "#/$defs/AllocationResourceStatusSpecificSKUAllocation"
          }
        },
        "type": "object"
      },
      "AllocationResourceStatusSpecificSKUAllocation": {
        "description": "Contains Properties set for the reservation.",
        "properties": {
          "sourceInstanceTemplateId": {
            "description": "ID of the instance template used to populate reservation properties.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ShareSettings": {
        "description": "The share setting for reservations and sole tenancy node groups.",
        "properties": {
          "projectMap": {
            "additionalProperties": {
              "$ref": "#/$defs/ShareSettingsProjectConfig"
            },
            "description": "A map of project id and project config. This is only valid when share_type's value is SPECIFIC_PROJECTS.",
            "type": "object"
          },
          "projects": {
            "description": "A List of Project names to specify consumer projects for this shared-reservation. This is only valid when share_type's value is SPECIFIC_PROJECTS.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "shareType": {
            "description": "Type of sharing for this shared-reservation",
            "enum": [
              "LOCAL",
              "ORGANIZATION",
              "SHARE_TYPE_UNSPECIFIED",
              "SPECIFIC_PROJECTS"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "ShareSettingsProjectConfig": {
        "description": "Config for each project in the share settings.",
        "properties": {
          "projectId": {
            "description": "The project ID, should be same as the key of this project config in the parent map.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AllocationSpecificSKUReservation": {
        "description": "This reservation type allows to pre allocate specific instance configuration. Next ID: 6",
        "properties": {
          "assuredCount": {
            "description": "[Output Only] Indicates how many instances are actually usable currently.",
            "format": "int64",
            "type": "string"
          },
          "count": {
            "description": "Specifies the number of resources that are allocated.",
            "format": "int64",
            "type": "string"
          },
          "inUseCount": {
            "description": "[Output Only] Indicates how many instances are in use.",
            "format": "int64",
            "type": "string"
          },
          "instanceProperties": {
            "$ref": "#/$defs/AllocationSpecificSKUAllocationReservedInstanceProperties"
          },
          "sourceInstanceTemplate": {
            "description": "Specifies the instance template to create the reservation. If you use this field, you must exclude the instanceProperties field. This field is optional, and it can be a full or partial URL. For example, the following are all valid URLs to an instance template: - https://www.googleapis.com/compute/v1/projects/project /global/instanceTemplates/instanceTemplate - projects/project/global/instanceTemplates/instanceTemplate - global/instanceTemplates/instanceTemplate ",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AllocationSpecificSKUAllocationReservedInstanceProperties": {
        "description": "Properties of the SKU instances being reserved. Next ID: 9",
        "properties": {
          "guestAccelerators": {
            "description": "Specifies accelerator type and count.",
            "items": {
              "$ref": "#/$defs/AcceleratorConfig"
            },
            "type": "array"
          },
          "localSsds": {
            "description": "Specifies amount of local ssd to reserve with each instance. The type of disk is local-ssd.",
            "items": {
              "$ref": "#/$defs/AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDisk"
            },
            "type": "array"
          },
          "locationHint": {
            "description": "An opaque location hint used to place the allocation close to other resources. This field is for use by internal tools that use the public API.",
            "type": "string"
          },
          "machineType": {
            "description": "Specifies type of machine (name only) which has fixed number of vCPUs and fixed amount of memory. This also includes specifying custom machine type following custom-NUMBER_OF_CPUS-AMOUNT_OF_MEMORY pattern.",
            "type": "string"
          },
          "maintenanceFreezeDurationHours": {
            "description": "Specifies the number of hours after reservation creation where instances using the reservation won't be scheduled for maintenance.",
            "format": "int32",
            "type": "integer"
          },
          "maintenanceInterval": {
            "description": "Specifies the frequency of planned maintenance events. The accepted values are: `PERIODIC`.",
            "enum": [
              "AS_NEEDED",
              "PERIODIC",
              "RECURRENT"
            ],
            "type": "string"
          },
          "minCpuPlatform": {
            "description": "Minimum cpu platform the reservation.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AcceleratorConfig": {
        "description": "A specification of the type and number of accelerator cards attached to the instance.",
        "properties": {
          "acceleratorCount": {
            "description": "The number of the guest accelerator cards exposed to this instance.",
            "format": "int32",
            "type": "integer"
          },
          "acceleratorType": {
            "description": "Full or partial URL of the accelerator type resource to attach to this instance. For example: projects/my-project/zones/us-central1-c/acceleratorTypes/nvidia-tesla-p100 If you are creating an instance template, specify only the accelerator name. See GPUs on Compute Engine for a full list of accelerator types.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDisk": {
        "properties": {
          "diskSizeGb": {
            "description": "Specifies the size of the disk in base-2 GB.",
            "format": "int64",
            "type": "string"
          },
          "interface": {
            "description": "Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME. The default is SCSI. For performance characteristics of SCSI over NVMe, see Local SSD performance.",
            "enum": [
              "NVME",
              "SCSI"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResourceCommitment": {
        "description": "Commitment for a particular resource (a Commitment is composed of one or more of these).",
        "properties": {
          "acceleratorType": {
            "description": "Name of the accelerator type resource. Applicable only when the type is ACCELERATOR.",
            "type": "string"
          },
          "amount": {
            "description": "The amount of the resource purchased (in a type-dependent unit, such as bytes). For vCPUs, this can just be an integer. For memory, this must be provided in MB. Memory must be a multiple of 256 MB, with up to 6.5GB of memory per every vCPU.",
            "format": "int64",
            "type": "string"
          },
          "type": {
            "description": "Type of resource for which this commitment applies. Possible values are VCPU, MEMORY, LOCAL_SSD, and ACCELERATOR.",
            "enum": [
              "ACCELERATOR",
              "LOCAL_SSD",
              "MEMORY",
              "UNSPECIFIED",
              "VCPU"
            ],
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PATCH",
    "url": {
      "$uri": "https://compute.googleapis.com/compute/beta/projects/{project}/regions/{region}/commitments/{commitment}{?paths,requestId,updateMask,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType,userIp}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Represents an Operation resource. Google Compute Engine has three Operation resources: * [Global](/compute/docs/reference/rest/beta/globalOperations) * [Regional](/compute/docs/reference/rest/beta/regionOperations) * [Zonal](/compute/docs/reference/rest/beta/zoneOperations) You can use an operation resource to manage asynchronous API requests. For more information, read Handling API responses. Operations can be global, regional or zonal. - For global operations, use the `globalOperations` resource. - For regional operations, use the `regionOperations` resource. - For zonal operations, use the `zoneOperations` resource. For more information, read Global, Regional, and Zonal Resources. Note that completed Operation resources have a limited retention period.",
        "**Key properties:**",
        {
          "$ul": [
            "**clientOperationId**: [Output Only] The value of `requestId` if you provided it in the request. Not present otherwise.",
            "**creationTimestamp**: [Deprecated] This field is deprecated.",
            "**description**: [Output Only] A textual description of the operation, which is set when the operation is created.",
            "**endTime**: [Output Only] The time that this operation was completed. This value is in RFC3339 text format.",
            [
              "**error**: [Output Only] If errors are generated during processing of the operation, this field will be populated.",
              {
                "$ul": [
                  "**errors**: [Output Only] The array of errors encountered while processing this operation."
                ]
              }
            ],
            "**httpErrorMessage**: [Output Only] If the operation fails, this field contains the HTTP error message that was returned, such as `NOT FOUND`.",
            "**httpErrorStatusCode**: [Output Only] If the operation fails, this field contains the HTTP error status code that was returned. For example, a `404` means the resource was not found.",
            "**id**: [Output Only] The unique identifier for the operation. This identifier is defined by the server.",
            "**insertTime**: [Output Only] The time that this operation was requested. This value is in RFC3339 text format.",
            [
              "**instancesBulkInsertOperationMetadata**",
              {
                "$ul": [
                  "**perLocationStatus**: Status information per location (location name is key). Example key: zones/us-central1-a"
                ]
              }
            ],
            "**kind**: [Output Only] Type of the resource. Always `compute#operation` for Operation resources. (default: compute#operation)",
            "**name**: [Output Only] Name of the operation.",
            "**operationGroupId**: [Output Only] An ID that represents a group of operations, such as when a group of operations results from a `bulkInsert` API request.",
            "**operationType**: [Output Only] The type of operation, such as `insert`, `update`, or `delete`, and so on.",
            "**progress**: [Output Only] An optional progress indicator that ranges from 0 to 100. There is no requirement that this be linear or support any granularity of operations. This should not be used to guess when the operation will be complete. This number should monotonically increase as the operation progresses.",
            "**region**: [Output Only] The URL of the region where the operation resides. Only applicable when performing regional operations.",
            "**selfLink**: [Output Only] Server-defined URL for the resource.",
            [
              "**setCommonInstanceMetadataOperationMetadata**",
              {
                "$ul": [
                  "**clientOperationId**: [Output Only] The client operation id.",
                  "**perLocationOperations**: [Output Only] Status information per location (location name is key). Example key: zones/us-central1-a"
                ]
              }
            ],
            "**startTime**: [Output Only] The time that this operation was started by the server. This value is in RFC3339 text format.",
            "**status**: [Output Only] The status of the operation, which can be one of the following: `PENDING`, `RUNNING`, or `DONE`.",
            "**statusMessage**: [Output Only] An optional textual description of the current status of the operation.",
            "**targetId**: [Output Only] The unique target ID, which identifies a specific incarnation of the target resource.",
            "**targetLink**: [Output Only] The URL of the resource that the operation modifies. For operations related to creating a snapshot, this points to the persistent disk that the snapshot was created from.",
            "**user**: [Output Only] User who requested the operation, for example: `user@example.com` or `alice_smith_identifier (global/workforcePools/example-com-us-employees)`.",
            "**warnings**: [Output Only] If warning messages are generated during processing of the operation, this field will be populated.",
            "**zone**: [Output Only] The URL of the zone where the operation resides. Only applicable when performing per-zone operations."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
