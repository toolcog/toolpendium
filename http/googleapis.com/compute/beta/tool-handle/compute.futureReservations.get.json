{
  "name": "compute_futureReservations_get",
  "description": "Retrieves information about the specified future reservation.",
  "parameters": {
    "type": "object",
    "properties": {
      "project": {
        "type": "string",
        "description": "Project ID for this request."
      },
      "zone": {
        "type": "string",
        "description": "Name of the zone for this request. Name should conform to RFC1035."
      },
      "futureReservation": {
        "type": "string",
        "description": "Name of the future reservation to retrieve. Name should conform to RFC1035."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "userIp": {
        "type": "string",
        "description": "Legacy name for parameter that has been superseded by `quotaUser`."
      }
    },
    "required": [
      "project",
      "zone",
      "futureReservation"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://compute.googleapis.com/compute/beta/projects/{project}/zones/{zone}/futureReservations/{futureReservation}{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType,userIp}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**autoCreatedReservationsDeleteTime**: Future timestamp when the FR auto-created reservations will be deleted by Compute Engine. Format of this field must be a valid href=\"https://www.ietf.org/rfc/rfc3339.txt\">RFC3339 value.",
            [
              "**autoCreatedReservationsDuration**: A Duration represents a fixed-length span of time represented as a count of seconds and fractions of seconds at nanosecond resolution. It is independent of any calendar and concepts like \"day\" or \"month\". Range is approximately 10,000 years.",
              {
                "$ul": [
                  "**nanos**: Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 `seconds` field and a positive `nanos` field. Must be from 0 to 999,999,999 inclusive.",
                  "**seconds**: Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years"
                ]
              }
            ],
            "**autoDeleteAutoCreatedReservations**: Setting for enabling or disabling automatic deletion for auto-created reservation. If set to true, auto-created reservations will be deleted at Future Reservation's end time (default) or at user's defined timestamp if any of the [auto_created_reservations_delete_time, auto_created_reservations_duration] values is specified. For keeping auto-created reservation indefinitely, this value should be set to false.",
            "**creationTimestamp**: [Output Only] The creation timestamp for this future reservation in RFC3339 text format.",
            "**description**: An optional description of this resource. Provide this property when you create the future reservation.",
            "**id**: [Output Only] A unique identifier for this future reservation. The server defines this identifier.",
            "**kind**: [Output Only] Type of the resource. Always compute#futureReservation for future reservations. (default: compute#futureReservation)",
            "**name**: The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
            "**namePrefix**: Name prefix for the reservations to be created at the time of delivery. The name prefix must comply with RFC1035. Maximum allowed length for name prefix is 20. Automatically created reservations name format will be -date-####.",
            "**planningStatus**: Planning state before being submitted for evaluation",
            "**selfLink**: [Output Only] Server-defined fully-qualified URL for this resource.",
            "**selfLinkWithId**: [Output Only] Server-defined URL for this resource with the resource id.",
            [
              "**shareSettings**: The share setting for reservations and sole tenancy node groups.",
              {
                "$ul": [
                  "**projectMap**: A map of project id and project config. This is only valid when share_type's value is SPECIFIC_PROJECTS.",
                  "**projects**: A List of Project names to specify consumer projects for this shared-reservation. This is only valid when share_type's value is SPECIFIC_PROJECTS.",
                  "**shareType**: Type of sharing for this shared-reservation"
                ]
              }
            ],
            [
              "**specificSkuProperties**",
              {
                "$ul": [
                  [
                    "**instanceProperties**: Properties of the SKU instances being reserved. Next ID: 9",
                    {
                      "$ul": [
                        "**guestAccelerators**: Specifies accelerator type and count.",
                        "**localSsds**: Specifies amount of local ssd to reserve with each instance. The type of disk is local-ssd.",
                        "**locationHint**: An opaque location hint used to place the allocation close to other resources. This field is for use by internal tools that use the public API.",
                        "**machineType**: Specifies type of machine (name only) which has fixed number of vCPUs and fixed amount of memory. This also includes specifying custom machine type following custom-NUMBER_OF_CPUS-AMOUNT_OF_MEMORY pattern.",
                        "**maintenanceFreezeDurationHours**: Specifies the number of hours after reservation creation where instances using the reservation won't be scheduled for maintenance.",
                        "**maintenanceInterval**: Specifies the frequency of planned maintenance events. The accepted values are: `PERIODIC`.",
                        "**minCpuPlatform**: Minimum cpu platform the reservation."
                      ]
                    }
                  ],
                  "**sourceInstanceTemplate**: The instance template that will be used to populate the ReservedInstanceProperties of the future reservation",
                  "**totalCount**: Total number of instances for which capacity assurance is requested at a future time period."
                ]
              }
            ],
            [
              "**status**: [Output only] Represents status related to the future reservation.",
              {
                "$ul": [
                  "**amendmentStatus**: [Output Only] The current status of the requested amendment.",
                  "**autoCreatedReservations**: Fully qualified urls of the automatically created reservations at start_time.",
                  "**fulfilledCount**: This count indicates the fulfilled capacity so far. This is set during \"PROVISIONING\" state. This count also includes capacity delivered as part of existing matching reservations.",
                  [
                    "**lastKnownGoodState**: The state that the future reservation will be reverted to should the amendment be declined.",
                    {
                      "$ul": [
                        "**description**: [Output Only] The description of the FutureReservation before an amendment was requested.",
                        [
                          "**futureReservationSpecs**: The properties of the last known good state for the Future Reservation.",
                          {
                            "$ul": [
                              [
                                "**shareSettings**: The share setting for reservations and sole tenancy node groups.",
                                {
                                  "$ul": [
                                    "**projectMap**: A map of project id and project config. This is only valid when share_type's value is SPECIFIC_PROJECTS.",
                                    "**projects**: A List of Project names to specify consumer projects for this shared-reservation. This is only valid when share_type's value is SPECIFIC_PROJECTS.",
                                    "**shareType**: Type of sharing for this shared-reservation"
                                  ]
                                }
                              ],
                              [
                                "**specificSkuProperties**",
                                {
                                  "$ul": [
                                    [
                                      "**instanceProperties**: Properties of the SKU instances being reserved. Next ID: 9",
                                      {
                                        "$ul": [
                                          "**guestAccelerators**: Specifies accelerator type and count.",
                                          "**localSsds**: Specifies amount of local ssd to reserve with each instance. The type of disk is local-ssd.",
                                          "**locationHint**: An opaque location hint used to place the allocation close to other resources. This field is for use by internal tools that use the public API.",
                                          "**machineType**: Specifies type of machine (name only) which has fixed number of vCPUs and fixed amount of memory. This also includes specifying custom machine type following custom-NUMBER_OF_CPUS-AMOUNT_OF_MEMORY pattern.",
                                          "**maintenanceFreezeDurationHours**: Specifies the number of hours after reservation creation where instances using the reservation won't be scheduled for maintenance.",
                                          "**maintenanceInterval**: Specifies the frequency of planned maintenance events. The accepted values are: `PERIODIC`.",
                                          "**minCpuPlatform**: Minimum cpu platform the reservation."
                                        ]
                                      }
                                    ],
                                    "**sourceInstanceTemplate**: The instance template that will be used to populate the ReservedInstanceProperties of the future reservation",
                                    "**totalCount**: Total number of instances for which capacity assurance is requested at a future time period."
                                  ]
                                }
                              ],
                              [
                                "**timeWindow**",
                                {
                                  "$ul": [
                                    [
                                      "**duration**: A Duration represents a fixed-length span of time represented as a count of seconds and fractions of seconds at nanosecond resolution. It is independent of any calendar and concepts like \"day\" or \"month\". Range is approximately 10,000 years.",
                                      {
                                        "$ul": [
                                          "**nanos**: Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 `seconds` field and a positive `nanos` field. Must be from 0 to 999,999,999 inclusive.",
                                          "**seconds**: Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years"
                                        ]
                                      }
                                    ],
                                    "**endTime**",
                                    "**startTime**: Start time of the Future Reservation. The start_time is an RFC3339 string."
                                  ]
                                }
                              ]
                            ]
                          }
                        ],
                        "**lockTime**: [Output Only] The lock time of the FutureReservation before an amendment was requested.",
                        "**namePrefix**: [Output Only] The name prefix of the Future Reservation before an amendment was requested.",
                        "**procurementStatus**: [Output Only] The status of the last known good state for the Future Reservation."
                      ]
                    }
                  ],
                  "**lockTime**: Time when Future Reservation would become LOCKED, after which no modifications to Future Reservation will be allowed. Applicable only after the Future Reservation is in the APPROVED state. The lock_time is an RFC3339 string. The procurement_status will transition to PROCURING state at this time.",
                  "**procurementStatus**: Current state of this Future Reservation",
                  [
                    "**specificSkuProperties**: Properties to be set for the Future Reservation.",
                    {
                      "$ul": [
                        "**sourceInstanceTemplateId**: ID of the instance template used to populate the Future Reservation properties."
                      ]
                    }
                  ]
                ]
              }
            ],
            [
              "**timeWindow**",
              {
                "$ul": [
                  [
                    "**duration**: A Duration represents a fixed-length span of time represented as a count of seconds and fractions of seconds at nanosecond resolution. It is independent of any calendar and concepts like \"day\" or \"month\". Range is approximately 10,000 years.",
                    {
                      "$ul": [
                        "**nanos**: Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 `seconds` field and a positive `nanos` field. Must be from 0 to 999,999,999 inclusive.",
                        "**seconds**: Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years"
                      ]
                    }
                  ],
                  "**endTime**",
                  "**startTime**: Start time of the Future Reservation. The start_time is an RFC3339 string."
                ]
              }
            ],
            "**zone**: [Output Only] URL of the Zone where this future reservation resides."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
