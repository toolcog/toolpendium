{
  "name": "compute_autoscalers_get",
  "description": "Returns the specified autoscaler resource.",
  "parameters": {
    "type": "object",
    "properties": {
      "project": {
        "type": "string",
        "description": "Project ID for this request."
      },
      "zone": {
        "type": "string",
        "description": "Name of the zone for this request."
      },
      "autoscaler": {
        "type": "string",
        "description": "Name of the autoscaler to return."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "userIp": {
        "type": "string",
        "description": "Legacy name for parameter that has been superseded by `quotaUser`."
      }
    },
    "required": [
      "project",
      "zone",
      "autoscaler"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://compute.googleapis.com/compute/beta/projects/{project}/zones/{zone}/autoscalers/{autoscaler}{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType,userIp}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Represents an Autoscaler resource. Google Compute Engine has two Autoscaler resources: * [Zonal](/compute/docs/reference/rest/beta/autoscalers) * [Regional](/compute/docs/reference/rest/beta/regionAutoscalers) Use autoscalers to automatically add or delete instances from a managed instance group according to your defined autoscaling policy. For more information, read Autoscaling Groups of Instances. For zonal managed instance groups resource, use the autoscaler resource. For regional managed instance groups, use the regionAutoscalers resource.",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**autoscalingPolicy**: Cloud Autoscaler policy.",
              {
                "$ul": [
                  "**coolDownPeriodSec**: The number of seconds that your application takes to initialize on a VM instance. This is referred to as the [initialization period](/compute/docs/autoscaler#cool_down_period). Specifying an accurate initialization period improves autoscaler decisions. For example, when scaling out, the autoscaler ignores data from VMs that are still initializing because those VMs might not yet represent normal usage of your application. The default initialization period is 60 seconds. Initialization periods might vary because of numerous factors. We recommend that you test how long your application takes to initialize. To do this, create a VM and time your application's startup process.",
                  [
                    "**cpuUtilization**: CPU utilization policy.",
                    {
                      "$ul": [
                        "**predictiveMethod**: Indicates whether predictive autoscaling based on CPU metric is enabled. Valid values are: * NONE (default). No predictive method is used. The autoscaler scales the group to meet current demand based on real-time metrics. * OPTIMIZE_AVAILABILITY. Predictive autoscaling improves availability by monitoring daily and weekly load patterns and scaling out ahead of anticipated demand.",
                        "**utilizationTarget**: The target CPU utilization that the autoscaler maintains. Must be a float value in the range (0, 1]. If not specified, the default is 0.6. If the CPU level is below the target utilization, the autoscaler scales in the number of instances until it reaches the minimum number of instances you specified or until the average CPU of your instances reaches the target utilization. If the average CPU is above the target utilization, the autoscaler scales out until it reaches the maximum number of instances you specified or until the average utilization reaches the target utilization."
                      ]
                    }
                  ],
                  "**customMetricUtilizations**: Configuration parameters of autoscaling based on a custom metric.",
                  [
                    "**loadBalancingUtilization**: Configuration parameters of autoscaling based on load balancing.",
                    {
                      "$ul": [
                        "**utilizationTarget**: Fraction of backend capacity utilization (set in HTTP(S) load balancing configuration) that the autoscaler maintains. Must be a positive float value. If not defined, the default is 0.8."
                      ]
                    }
                  ],
                  "**maxNumReplicas**: The maximum number of instances that the autoscaler can scale out to. This is required when creating or updating an autoscaler. The maximum number of replicas must not be lower than minimal number of replicas.",
                  "**minNumReplicas**: The minimum number of replicas that the autoscaler can scale in to. This cannot be less than 0. If not provided, autoscaler chooses a default value depending on maximum number of instances allowed.",
                  "**mode**: Defines the operating mode for this policy. The following modes are available: - OFF: Disables the autoscaler but maintains its configuration. - ONLY_SCALE_OUT: Restricts the autoscaler to add VM instances only. - ON: Enables all autoscaler activities according to its policy. For more information, see \"Turning off or restricting an autoscaler\"",
                  [
                    "**scaleDownControl**: Configuration that allows for slower scale in so that even if Autoscaler recommends an abrupt scale in of a MIG, it will be throttled as specified by the parameters below.",
                    {
                      "$ul": [
                        [
                          "**maxScaledDownReplicas**: Encapsulates numeric value that can be either absolute or relative.",
                          {
                            "$ul": [
                              "**calculated**: [Output Only] Absolute value of VM instances calculated based on the specific mode. - If the value is fixed, then the calculated value is equal to the fixed value. - If the value is a percent, then the calculated value is percent/100 * targetSize. For example, the calculated value of a 80% of a managed instance group with 150 instances would be (80/100 * 150) = 120 VM instances. If there is a remainder, the number is rounded. ",
                              "**fixed**: Specifies a fixed number of VM instances. This must be a positive integer.",
                              "**percent**: Specifies a percentage of instances between 0 to 100%, inclusive. For example, specify 80 for 80%."
                            ]
                          }
                        ],
                        "**timeWindowSec**: How far back autoscaling looks when computing recommendations to include directives regarding slower scale in, as described above."
                      ]
                    }
                  ],
                  [
                    "**scaleInControl**: Configuration that allows for slower scale in so that even if Autoscaler recommends an abrupt scale in of a MIG, it will be throttled as specified by the parameters below.",
                    {
                      "$ul": [
                        [
                          "**maxScaledInReplicas**: Encapsulates numeric value that can be either absolute or relative.",
                          {
                            "$ul": [
                              "**calculated**: [Output Only] Absolute value of VM instances calculated based on the specific mode. - If the value is fixed, then the calculated value is equal to the fixed value. - If the value is a percent, then the calculated value is percent/100 * targetSize. For example, the calculated value of a 80% of a managed instance group with 150 instances would be (80/100 * 150) = 120 VM instances. If there is a remainder, the number is rounded. ",
                              "**fixed**: Specifies a fixed number of VM instances. This must be a positive integer.",
                              "**percent**: Specifies a percentage of instances between 0 to 100%, inclusive. For example, specify 80 for 80%."
                            ]
                          }
                        ],
                        "**timeWindowSec**: How far back autoscaling looks when computing recommendations to include directives regarding slower scale in, as described above."
                      ]
                    }
                  ],
                  "**scalingSchedules**: Scaling schedules defined for an autoscaler. Multiple schedules can be set on an autoscaler, and they can overlap. During overlapping periods the greatest min_required_replicas of all scaling schedules is applied. Up to 128 scaling schedules are allowed."
                ]
              }
            ],
            "**creationTimestamp**: [Output Only] Creation timestamp in RFC3339 text format.",
            "**description**: An optional description of this resource. Provide this property when you create the resource.",
            "**id**: [Output Only] The unique identifier for the resource. This identifier is defined by the server.",
            "**kind**: [Output Only] Type of the resource. Always compute#autoscaler for autoscalers. (default: compute#autoscaler)",
            "**name**: Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
            "**recommendedSize**: [Output Only] Target recommended MIG size (number of instances) computed by autoscaler. Autoscaler calculates the recommended MIG size even when the autoscaling policy mode is different from ON. This field is empty when autoscaler is not connected to an existing managed instance group or autoscaler did not generate its prediction.",
            "**region**: [Output Only] URL of the region where the instance group resides (for autoscalers living in regional scope).",
            "**scalingScheduleStatus**: [Output Only] Status information of existing scaling schedules.",
            "**selfLink**: [Output Only] Server-defined URL for the resource.",
            "**status**: [Output Only] The status of the autoscaler configuration. Current set of possible values: - PENDING: Autoscaler backend hasn't read new/updated configuration. - DELETING: Configuration is being deleted. - ACTIVE: Configuration is acknowledged to be effective. Some warnings might be present in the statusDetails field. - ERROR: Configuration has errors. Actionable for users. Details are present in the statusDetails field. New values might be added in the future.",
            "**statusDetails**: [Output Only] Human-readable details about the current state of the autoscaler. Read the documentation for Commonly returned status messages for examples of status messages you might encounter.",
            "**target**: URL of the managed instance group that this autoscaler will scale. This field is required when creating an autoscaler.",
            "**zone**: [Output Only] URL of the zone where the instance group resides (for autoscalers living in zonal scope)."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
