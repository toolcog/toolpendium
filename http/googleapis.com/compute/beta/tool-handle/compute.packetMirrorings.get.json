{
  "name": "compute_packetMirrorings_get",
  "description": "Returns the specified PacketMirroring resource.",
  "parameters": {
    "type": "object",
    "properties": {
      "project": {
        "type": "string",
        "description": "Project ID for this request."
      },
      "region": {
        "type": "string",
        "description": "Name of the region for this request."
      },
      "packetMirroring": {
        "type": "string",
        "description": "Name of the PacketMirroring resource to return."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "userIp": {
        "type": "string",
        "description": "Legacy name for parameter that has been superseded by `quotaUser`."
      }
    },
    "required": [
      "project",
      "region",
      "packetMirroring"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://compute.googleapis.com/compute/beta/projects/{project}/regions/{region}/packetMirrorings/{packetMirroring}{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType,userIp}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Represents a Packet Mirroring resource. Packet Mirroring clones the traffic of specified instances in your Virtual Private Cloud (VPC) network and forwards it to a collector destination, such as an instance group of an internal TCP/UDP load balancer, for analysis or examination. For more information about setting up Packet Mirroring, see Using Packet Mirroring.",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**collectorIlb**",
              {
                "$ul": [
                  "**canonicalUrl**: [Output Only] Unique identifier for the forwarding rule; defined by the server.",
                  "**url**: Resource URL to the forwarding rule representing the ILB configured as destination of the mirrored traffic."
                ]
              }
            ],
            "**creationTimestamp**: [Output Only] Creation timestamp in RFC3339 text format.",
            "**description**: An optional description of this resource. Provide this property when you create the resource.",
            "**enable**: Indicates whether or not this packet mirroring takes effect. If set to FALSE, this packet mirroring policy will not be enforced on the network. The default is TRUE.",
            [
              "**filter**",
              {
                "$ul": [
                  "**IPProtocols**: Protocols that apply as filter on mirrored traffic. If no protocols are specified, all traffic that matches the specified CIDR ranges is mirrored. If neither cidrRanges nor IPProtocols is specified, all IPv4 traffic is mirrored.",
                  "**cidrRanges**: One or more IPv4 or IPv6 CIDR ranges that apply as filter on the source (ingress) or destination (egress) IP in the IP header. If no ranges are specified, all IPv4 traffic that matches the specified IPProtocols is mirrored. If neither cidrRanges nor IPProtocols is specified, all IPv4 traffic is mirrored. To mirror all IPv4 and IPv6 traffic, use \"0.0.0.0/0,::/0\". Note: Support for IPv6 traffic is in preview.",
                  "**direction**: Direction of traffic to mirror, either INGRESS, EGRESS, or BOTH. The default is BOTH."
                ]
              }
            ],
            "**id**: [Output Only] The unique identifier for the resource. This identifier is defined by the server.",
            "**kind**: [Output Only] Type of the resource. Always compute#packetMirroring for packet mirrorings. (default: compute#packetMirroring)",
            [
              "**mirroredResources**",
              {
                "$ul": [
                  "**instances**: A set of virtual machine instances that are being mirrored. They must live in zones contained in the same region as this packetMirroring. Note that this config will apply only to those network interfaces of the Instances that belong to the network specified in this packetMirroring. You may specify a maximum of 50 Instances.",
                  "**subnetworks**: A set of subnetworks for which traffic from/to all VM instances will be mirrored. They must live in the same region as this packetMirroring. You may specify a maximum of 5 subnetworks.",
                  "**tags**: A set of mirrored tags. Traffic from/to all VM instances that have one or more of these tags will be mirrored."
                ]
              }
            ],
            "**name**: Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
            [
              "**network**",
              {
                "$ul": [
                  "**canonicalUrl**: [Output Only] Unique identifier for the network; defined by the server.",
                  "**url**: URL of the network resource."
                ]
              }
            ],
            "**priority**: The priority of applying this configuration. Priority is used to break ties in cases where there is more than one matching rule. In the case of two rules that apply for a given Instance, the one with the lowest-numbered priority value wins. Default value is 1000. Valid range is 0 through 65535.",
            "**region**: [Output Only] URI of the region where the packetMirroring resides.",
            "**selfLink**: [Output Only] Server-defined URL for the resource."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
