{
  "name": "compute_organizationSecurityPolicies_getRule",
  "description": "Gets a rule at the specified priority.",
  "parameters": {
    "type": "object",
    "properties": {
      "securityPolicy": {
        "type": "string",
        "description": "Name of the security policy to which the queried rule belongs."
      },
      "priority": {
        "type": "integer",
        "description": "The priority of the rule to get from the security policy."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "userIp": {
        "type": "string",
        "description": "Legacy name for parameter that has been superseded by `quotaUser`."
      }
    },
    "required": [
      "securityPolicy"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://compute.googleapis.com/compute/beta/locations/global/securityPolicies/{securityPolicy}/getRule{?priority,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType,userIp}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Represents a rule that describes one or more match conditions along with the action to be taken when traffic matches this condition (allow or deny).",
        "**Key properties:**",
        {
          "$ul": [
            "**action**: The Action to perform when the rule is matched. The following are the valid actions: - allow: allow access to target. - deny(STATUS): deny access to target, returns the HTTP response code specified. Valid values for `STATUS` are 403, 404, and 502. - rate_based_ban: limit client traffic to the configured threshold and ban the client if the traffic exceeds the threshold. Configure parameters for this action in RateLimitOptions. Requires rate_limit_options to be set. - redirect: redirect to a different target. This can either be an internal reCAPTCHA redirect, or an external URL-based redirect via a 302 response. Parameters for this action can be configured via redirectOptions. This action is only supported in Global Security Policies of type CLOUD_ARMOR. - throttle: limit client traffic to the configured threshold. Configure parameters for this action in rateLimitOptions. Requires rate_limit_options to be set for this. ",
            "**description**: An optional description of this resource. Provide this property when you create the resource.",
            "**direction**: The direction in which this rule applies. This field may only be specified when versioned_expr is set to FIREWALL.",
            "**enableLogging**: Denotes whether to enable logging for a particular rule. If logging is enabled, logs will be exported to the configured export destination in Stackdriver. Logs may be exported to BigQuery or Pub/Sub. Note: you cannot enable logging on \"goto_next\" rules. This field may only be specified when the versioned_expr is set to FIREWALL.",
            [
              "**headerAction**",
              {
                "$ul": [
                  "**requestHeadersToAdds**: The list of request headers to add or overwrite if they're already present."
                ]
              }
            ],
            "**kind**: [Output only] Type of the resource. Always compute#securityPolicyRule for security policy rules (default: compute#securityPolicyRule)",
            [
              "**match**: Represents a match condition that incoming traffic is evaluated against. Exactly one field must be specified.",
              {
                "$ul": [
                  [
                    "**config**",
                    {
                      "$ul": [
                        "**destIpRanges**: CIDR IP address range. This field may only be specified when versioned_expr is set to FIREWALL.",
                        "**layer4Configs**: Pairs of IP protocols and ports that the rule should match. This field may only be specified when versioned_expr is set to FIREWALL.",
                        "**srcIpRanges**: CIDR IP address range. Maximum number of src_ip_ranges allowed is 10."
                      ]
                    }
                  ],
                  [
                    "**expr**: Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() < 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
                    {
                      "$ul": [
                        "**description**: Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.",
                        "**expression**: Textual representation of an expression in Common Expression Language syntax.",
                        "**location**: Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.",
                        "**title**: Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                      ]
                    }
                  ],
                  [
                    "**exprOptions**",
                    {
                      "$ul": [
                        [
                          "**recaptchaOptions**",
                          {
                            "$ul": [
                              "**actionTokenSiteKeys**: A list of site keys to be used during the validation of reCAPTCHA action-tokens. The provided site keys need to be created from reCAPTCHA API under the same project where the security policy is created.",
                              "**sessionTokenSiteKeys**: A list of site keys to be used during the validation of reCAPTCHA session-tokens. The provided site keys need to be created from reCAPTCHA API under the same project where the security policy is created."
                            ]
                          }
                        ]
                      ]
                    }
                  ],
                  "**versionedExpr**: Preconfigured versioned expression. If this field is specified, config must also be specified. Available preconfigured expressions along with their requirements are: SRC_IPS_V1 - must specify the corresponding src_ip_range field in config."
                ]
              }
            ],
            [
              "**networkMatch**: Represents a match condition that incoming network traffic is evaluated against.",
              {
                "$ul": [
                  "**destIpRanges**: Destination IPv4/IPv6 addresses or CIDR prefixes, in standard text format.",
                  "**destPorts**: Destination port numbers for TCP/UDP/SCTP. Each element can be a 16-bit unsigned decimal number (e.g. \"80\") or range (e.g. \"0-1023\").",
                  "**ipProtocols**: IPv4 protocol / IPv6 next header (after extension headers). Each element can be an 8-bit unsigned decimal number (e.g. \"6\"), range (e.g. \"253-254\"), or one of the following protocol names: \"tcp\", \"udp\", \"icmp\", \"esp\", \"ah\", \"ipip\", or \"sctp\".",
                  "**srcAsns**: BGP Autonomous System Number associated with the source IP address.",
                  "**srcIpRanges**: Source IPv4/IPv6 addresses or CIDR prefixes, in standard text format.",
                  "**srcPorts**: Source port numbers for TCP/UDP/SCTP. Each element can be a 16-bit unsigned decimal number (e.g. \"80\") or range (e.g. \"0-1023\").",
                  "**srcRegionCodes**: Two-letter ISO 3166-1 alpha-2 country code associated with the source IP address.",
                  "**userDefinedFields**: User-defined fields. Each element names a defined field and lists the matching values for that field."
                ]
              }
            ],
            [
              "**preconfiguredWafConfig**",
              {
                "$ul": [
                  "**exclusions**: A list of exclusions to apply during preconfigured WAF evaluation."
                ]
              }
            ],
            "**preview**: If set to true, the specified action is not enforced.",
            "**priority**: An integer indicating the priority of a rule in the list. The priority must be a positive value between 0 and 2147483647. Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the lowest priority.",
            [
              "**rateLimitOptions**",
              {
                "$ul": [
                  "**banDurationSec**: Can only be specified if the action for the rule is \"rate_based_ban\". If specified, determines the time (in seconds) the traffic will continue to be banned by the rate limit after the rate falls below the threshold.",
                  [
                    "**banThreshold**",
                    {
                      "$ul": [
                        "**count**: Number of HTTP(S) requests for calculating the threshold.",
                        "**intervalSec**: Interval over which the threshold is computed."
                      ]
                    }
                  ],
                  "**conformAction**: Action to take for requests that are under the configured rate limit threshold. Valid option is \"allow\" only.",
                  "**enforceOnKey**: Determines the key to enforce the rate_limit_threshold on. Possible values are: - ALL: A single rate limit threshold is applied to all the requests matching this rule. This is the default value if \"enforceOnKey\" is not configured. - IP: The source IP address of the request is the key. Each IP has this limit enforced separately. - HTTP_HEADER: The value of the HTTP header whose name is configured under \"enforceOnKeyName\". The key value is truncated to the first 128 bytes of the header value. If no such header is present in the request, the key type defaults to ALL. - XFF_IP: The first IP address (i.e. the originating client IP address) specified in the list of IPs under X-Forwarded-For HTTP header. If no such header is present or the value is not a valid IP, the key defaults to the source IP address of the request i.e. key type IP. - HTTP_COOKIE: The value of the HTTP cookie whose name is configured under \"enforceOnKeyName\". The key value is truncated to the first 128 bytes of the cookie value. If no such cookie is present in the request, the key type defaults to ALL. - HTTP_PATH: The URL path of the HTTP request. The key value is truncated to the first 128 bytes. - SNI: Server name indication in the TLS session of the HTTPS request. The key value is truncated to the first 128 bytes. The key type defaults to ALL on a HTTP session. - REGION_CODE: The country/region from which the request originates. - TLS_JA3_FINGERPRINT: JA3 TLS/SSL fingerprint if the client connects using HTTPS, HTTP/2 or HTTP/3. If not available, the key type defaults to ALL. - USER_IP: The IP address of the originating client, which is resolved based on \"userIpRequestHeaders\" configured with the security policy. If there is no \"userIpRequestHeaders\" configuration or an IP address cannot be resolved from it, the key type defaults to IP. ",
                  "**enforceOnKeyConfigs**: If specified, any combination of values of enforce_on_key_type/enforce_on_key_name is treated as the key on which ratelimit threshold/action is enforced. You can specify up to 3 enforce_on_key_configs. If enforce_on_key_configs is specified, enforce_on_key must not be specified.",
                  "**enforceOnKeyName**: Rate limit key name applicable only for the following key types: HTTP_HEADER -- Name of the HTTP header whose value is taken as the key value. HTTP_COOKIE -- Name of the HTTP cookie whose value is taken as the key value.",
                  "**exceedAction**: Action to take for requests that are above the configured rate limit threshold, to either deny with a specified HTTP response code, or redirect to a different endpoint. Valid options are `deny(STATUS)`, where valid values for `STATUS` are 403, 404, 429, and 502, and `redirect`, where the redirect parameters come from `exceedRedirectOptions` below. The `redirect` action is only supported in Global Security Policies of type CLOUD_ARMOR.",
                  [
                    "**exceedRedirectOptions**",
                    {
                      "$ul": [
                        "**target**: Target for the redirect action. This is required if the type is EXTERNAL_302 and cannot be specified for GOOGLE_RECAPTCHA.",
                        "**type**: Type of the redirect action."
                      ]
                    }
                  ],
                  [
                    "**rateLimitThreshold**",
                    {
                      "$ul": [
                        "**count**: Number of HTTP(S) requests for calculating the threshold.",
                        "**intervalSec**: Interval over which the threshold is computed."
                      ]
                    }
                  ]
                ]
              }
            ],
            [
              "**redirectOptions**",
              {
                "$ul": [
                  "**target**: Target for the redirect action. This is required if the type is EXTERNAL_302 and cannot be specified for GOOGLE_RECAPTCHA.",
                  "**type**: Type of the redirect action."
                ]
              }
            ],
            "**ruleNumber**: Identifier for the rule. This is only unique within the given security policy. This can only be set during rule creation, if rule number is not specified it will be generated by the server.",
            "**ruleTupleCount**: [Output Only] Calculation of the complexity of a single firewall security policy rule.",
            "**targetResources**: A list of network resource URLs to which this rule applies. This field allows you to control which network's VMs get this rule. If this field is left blank, all VMs within the organization will receive the rule. This field may only be specified when versioned_expr is set to FIREWALL.",
            "**targetServiceAccounts**: A list of service accounts indicating the sets of instances that are applied with this rule."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
