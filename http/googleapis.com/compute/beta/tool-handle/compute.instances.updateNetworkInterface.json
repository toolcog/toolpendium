{
  "name": "compute_instances_updateNetworkInterface",
  "description": "Updates an instance's network interface. This method can only update an interface's alias IP range and attached network. See Modifying alias IP ranges for an existing instance for instructions on changing alias IP ranges. See Migrating a VM between networks for instructions on migrating an interface. This method follows PATCH semantics.",
  "parameters": {
    "type": "object",
    "properties": {
      "project": {
        "type": "string",
        "description": "Project ID for this request."
      },
      "zone": {
        "type": "string",
        "description": "The name of the zone for this request."
      },
      "instance": {
        "type": "string",
        "description": "The instance name for this request."
      },
      "networkInterface": {
        "type": "string",
        "description": "The name of the network interface to update."
      },
      "requestId": {
        "type": "string",
        "description": "An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "userIp": {
        "type": "string",
        "description": "Legacy name for parameter that has been superseded by `quotaUser`."
      },
      "body": {
        "$ref": "#/$defs/NetworkInterface"
      }
    },
    "required": [
      "project",
      "zone",
      "instance",
      "networkInterface"
    ],
    "$defs": {
      "NetworkInterface": {
        "description": "A network interface resource attached to an instance.",
        "properties": {
          "accessConfigs": {
            "description": "An array of configurations for this interface. Currently, only one access config, ONE_TO_ONE_NAT, is supported. If there are no accessConfigs specified, then this instance will have no external internet access.",
            "items": {
              "$ref": "#/$defs/AccessConfig"
            },
            "type": "array"
          },
          "aliasIpRanges": {
            "description": "An array of alias IP ranges for this network interface. You can only specify this field for network interfaces in VPC networks.",
            "items": {
              "$ref": "#/$defs/AliasIpRange"
            },
            "type": "array"
          },
          "fingerprint": {
            "description": "Fingerprint hash of contents stored in this network interface. This field will be ignored when inserting an Instance or adding a NetworkInterface. An up-to-date fingerprint must be provided in order to update the NetworkInterface. The request will fail with error 400 Bad Request if the fingerprint is not provided, or 412 Precondition Failed if the fingerprint is out of date.",
            "format": "byte",
            "type": "string"
          },
          "internalIpv6PrefixLength": {
            "description": "The prefix length of the primary internal IPv6 range.",
            "format": "int32",
            "type": "integer"
          },
          "ipv6AccessConfigs": {
            "description": "An array of IPv6 access configurations for this interface. Currently, only one IPv6 access config, DIRECT_IPV6, is supported. If there is no ipv6AccessConfig specified, then this instance will have no external IPv6 Internet access.",
            "items": {
              "$ref": "#/$defs/AccessConfig"
            },
            "type": "array"
          },
          "ipv6AccessType": {
            "description": "[Output Only] One of EXTERNAL, INTERNAL to indicate whether the IP can be accessed from the Internet. This field is always inherited from its subnetwork. Valid only if stackType is IPV4_IPV6.",
            "enum": [
              "EXTERNAL",
              "INTERNAL"
            ],
            "type": "string"
          },
          "ipv6Address": {
            "description": "An IPv6 internal network address for this network interface. To use a static internal IP address, it must be unused and in the same region as the instance's zone. If not specified, Google Cloud will automatically assign an internal IPv6 address from the instance's subnetwork.",
            "type": "string"
          },
          "kind": {
            "default": "compute#networkInterface",
            "description": "[Output Only] Type of the resource. Always compute#networkInterface for network interfaces.",
            "type": "string"
          },
          "name": {
            "description": "[Output Only] The name of the network interface, which is generated by the server. For a VM, the network interface uses the nicN naming format. Where N is a value between 0 and 7. The default interface value is nic0.",
            "type": "string"
          },
          "network": {
            "description": "URL of the VPC network resource for this instance. When creating an instance, if neither the network nor the subnetwork is specified, the default network global/networks/default is used. If the selected project doesn't have the default network, you must specify a network or subnet. If the network is not specified but the subnetwork is specified, the network is inferred. If you specify this property, you can specify the network as a full or partial URL. For example, the following are all valid URLs: - https://www.googleapis.com/compute/v1/projects/project/global/networks/ network - projects/project/global/networks/network - global/networks/default ",
            "type": "string"
          },
          "networkAttachment": {
            "description": "The URL of the network attachment that this interface should connect to in the following format: projects/{project_number}/regions/{region_name}/networkAttachments/{network_attachment_name}.",
            "type": "string"
          },
          "networkIP": {
            "description": "An IPv4 internal IP address to assign to the instance for this network interface. If not specified by the user, an unused internal IP is assigned by the system.",
            "type": "string"
          },
          "nicType": {
            "description": "The type of vNIC to be used on this interface. This may be gVNIC or VirtioNet.",
            "enum": [
              "GVNIC",
              "UNSPECIFIED_NIC_TYPE",
              "VIRTIO_NET"
            ],
            "type": "string"
          },
          "queueCount": {
            "description": "The networking queue count that's specified by users for the network interface. Both Rx and Tx queues will be set to this number. It'll be empty if not specified by the users.",
            "format": "int32",
            "type": "integer"
          },
          "stackType": {
            "description": "The stack type for this network interface. To assign only IPv4 addresses, use IPV4_ONLY. To assign both IPv4 and IPv6 addresses, use IPV4_IPV6. If not specified, IPV4_ONLY is used. This field can be both set at instance creation and update network interface operations.",
            "enum": [
              "IPV4_IPV6",
              "IPV4_ONLY"
            ],
            "type": "string"
          },
          "subnetwork": {
            "description": "The URL of the Subnetwork resource for this instance. If the network resource is in legacy mode, do not specify this field. If the network is in auto subnet mode, specifying the subnetwork is optional. If the network is in custom subnet mode, specifying the subnetwork is required. If you specify this field, you can specify the subnetwork as a full or partial URL. For example, the following are all valid URLs: - https://www.googleapis.com/compute/v1/projects/project/regions/region /subnetworks/subnetwork - regions/region/subnetworks/subnetwork ",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AccessConfig": {
        "description": "An access configuration attached to an instance's network interface. Only one access config per instance is supported.",
        "properties": {
          "externalIpv6": {
            "description": "Applies to ipv6AccessConfigs only. The first IPv6 address of the external IPv6 range associated with this instance, prefix length is stored in externalIpv6PrefixLength in ipv6AccessConfig. To use a static external IP address, it must be unused and in the same region as the instance's zone. If not specified, Google Cloud will automatically assign an external IPv6 address from the instance's subnetwork.",
            "type": "string"
          },
          "externalIpv6PrefixLength": {
            "description": "Applies to ipv6AccessConfigs only. The prefix length of the external IPv6 range.",
            "format": "int32",
            "type": "integer"
          },
          "kind": {
            "default": "compute#accessConfig",
            "description": "[Output Only] Type of the resource. Always compute#accessConfig for access configs.",
            "type": "string"
          },
          "name": {
            "description": "The name of this access configuration. In accessConfigs (IPv4), the default and recommended name is External NAT, but you can use any arbitrary string, such as My external IP or Network Access. In ipv6AccessConfigs, the recommend name is External IPv6.",
            "type": "string"
          },
          "natIP": {
            "description": "Applies to accessConfigs (IPv4) only. An external IP address associated with this instance. Specify an unused static external IP address available to the project or leave this field undefined to use an IP from a shared ephemeral IP address pool. If you specify a static external IP address, it must live in the same region as the zone of the instance.",
            "type": "string"
          },
          "networkTier": {
            "description": "This signifies the networking tier used for configuring this access configuration and can only take the following values: PREMIUM, STANDARD. If an AccessConfig is specified without a valid external IP address, an ephemeral IP will be created with this networkTier. If an AccessConfig with a valid external IP address is specified, it must match that of the networkTier associated with the Address resource owning that IP.",
            "enum": [
              "FIXED_STANDARD",
              "PREMIUM",
              "STANDARD",
              "STANDARD_OVERRIDES_FIXED_STANDARD"
            ],
            "type": "string"
          },
          "publicPtrDomainName": {
            "description": "The DNS domain name for the public PTR record. You can set this field only if the `setPublicPtr` field is enabled in accessConfig. If this field is unspecified in ipv6AccessConfig, a default PTR record will be createc for first IP in associated external IPv6 range.",
            "type": "string"
          },
          "securityPolicy": {
            "description": "[Output Only] The resource URL for the security policy associated with this access config.",
            "type": "string"
          },
          "setPublicPtr": {
            "description": "Specifies whether a public DNS 'PTR' record should be created to map the external IP address of the instance to a DNS domain name. This field is not used in ipv6AccessConfig. A default PTR record will be created if the VM has external IPv6 range associated.",
            "type": "boolean"
          },
          "type": {
            "description": "The type of configuration. In accessConfigs (IPv4), the default and only option is ONE_TO_ONE_NAT. In ipv6AccessConfigs, the default and only option is DIRECT_IPV6.",
            "enum": [
              "DIRECT_IPV6",
              "ONE_TO_ONE_NAT"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "AliasIpRange": {
        "description": "An alias IP range attached to an instance's network interface.",
        "properties": {
          "ipCidrRange": {
            "description": "The IP alias ranges to allocate for this interface. This IP CIDR range must belong to the specified subnetwork and cannot contain IP addresses reserved by system or used by other network interfaces. This range may be a single IP address (such as 10.2.3.4), a netmask (such as /24) or a CIDR-formatted string (such as 10.1.2.0/24).",
            "type": "string"
          },
          "subnetworkRangeName": {
            "description": "The name of a subnetwork secondary IP range from which to allocate an IP alias range. If not specified, the primary range of the subnetwork is used.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PATCH",
    "url": {
      "$uri": "https://compute.googleapis.com/compute/beta/projects/{project}/zones/{zone}/instances/{instance}/updateNetworkInterface{?networkInterface,requestId,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType,userIp}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Represents an Operation resource. Google Compute Engine has three Operation resources: * [Global](/compute/docs/reference/rest/beta/globalOperations) * [Regional](/compute/docs/reference/rest/beta/regionOperations) * [Zonal](/compute/docs/reference/rest/beta/zoneOperations) You can use an operation resource to manage asynchronous API requests. For more information, read Handling API responses. Operations can be global, regional or zonal. - For global operations, use the `globalOperations` resource. - For regional operations, use the `regionOperations` resource. - For zonal operations, use the `zoneOperations` resource. For more information, read Global, Regional, and Zonal Resources. Note that completed Operation resources have a limited retention period.",
        "**Key properties:**",
        {
          "$ul": [
            "**clientOperationId**: [Output Only] The value of `requestId` if you provided it in the request. Not present otherwise.",
            "**creationTimestamp**: [Deprecated] This field is deprecated.",
            "**description**: [Output Only] A textual description of the operation, which is set when the operation is created.",
            "**endTime**: [Output Only] The time that this operation was completed. This value is in RFC3339 text format.",
            [
              "**error**: [Output Only] If errors are generated during processing of the operation, this field will be populated.",
              {
                "$ul": [
                  "**errors**: [Output Only] The array of errors encountered while processing this operation."
                ]
              }
            ],
            "**httpErrorMessage**: [Output Only] If the operation fails, this field contains the HTTP error message that was returned, such as `NOT FOUND`.",
            "**httpErrorStatusCode**: [Output Only] If the operation fails, this field contains the HTTP error status code that was returned. For example, a `404` means the resource was not found.",
            "**id**: [Output Only] The unique identifier for the operation. This identifier is defined by the server.",
            "**insertTime**: [Output Only] The time that this operation was requested. This value is in RFC3339 text format.",
            [
              "**instancesBulkInsertOperationMetadata**",
              {
                "$ul": [
                  "**perLocationStatus**: Status information per location (location name is key). Example key: zones/us-central1-a"
                ]
              }
            ],
            "**kind**: [Output Only] Type of the resource. Always `compute#operation` for Operation resources. (default: compute#operation)",
            "**name**: [Output Only] Name of the operation.",
            "**operationGroupId**: [Output Only] An ID that represents a group of operations, such as when a group of operations results from a `bulkInsert` API request.",
            "**operationType**: [Output Only] The type of operation, such as `insert`, `update`, or `delete`, and so on.",
            "**progress**: [Output Only] An optional progress indicator that ranges from 0 to 100. There is no requirement that this be linear or support any granularity of operations. This should not be used to guess when the operation will be complete. This number should monotonically increase as the operation progresses.",
            "**region**: [Output Only] The URL of the region where the operation resides. Only applicable when performing regional operations.",
            "**selfLink**: [Output Only] Server-defined URL for the resource.",
            [
              "**setCommonInstanceMetadataOperationMetadata**",
              {
                "$ul": [
                  "**clientOperationId**: [Output Only] The client operation id.",
                  "**perLocationOperations**: [Output Only] Status information per location (location name is key). Example key: zones/us-central1-a"
                ]
              }
            ],
            "**startTime**: [Output Only] The time that this operation was started by the server. This value is in RFC3339 text format.",
            "**status**: [Output Only] The status of the operation, which can be one of the following: `PENDING`, `RUNNING`, or `DONE`.",
            "**statusMessage**: [Output Only] An optional textual description of the current status of the operation.",
            "**targetId**: [Output Only] The unique target ID, which identifies a specific incarnation of the target resource.",
            "**targetLink**: [Output Only] The URL of the resource that the operation modifies. For operations related to creating a snapshot, this points to the persistent disk that the snapshot was created from.",
            "**user**: [Output Only] User who requested the operation, for example: `user@example.com` or `alice_smith_identifier (global/workforcePools/example-com-us-employees)`.",
            "**warnings**: [Output Only] If warning messages are generated during processing of the operation, this field will be populated.",
            "**zone**: [Output Only] The URL of the zone where the operation resides. Only applicable when performing per-zone operations."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
