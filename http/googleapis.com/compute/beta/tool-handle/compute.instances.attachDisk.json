{
  "name": "compute_instances_attachDisk",
  "description": "Attaches an existing Disk resource to an instance. You must first create the disk before you can attach it. It is not possible to create and attach a disk at the same time. For more information, read Adding a persistent disk to your instance.",
  "parameters": {
    "type": "object",
    "properties": {
      "project": {
        "type": "string",
        "description": "Project ID for this request."
      },
      "zone": {
        "type": "string",
        "description": "The name of the zone for this request."
      },
      "instance": {
        "type": "string",
        "description": "The instance name for this request."
      },
      "forceAttach": {
        "type": "boolean",
        "description": "Whether to force attach the regional disk even if it's currently attached to another instance. If you try to force attach a zonal disk to an instance, you will receive an error."
      },
      "requestId": {
        "type": "string",
        "description": "An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "userIp": {
        "type": "string",
        "description": "Legacy name for parameter that has been superseded by `quotaUser`."
      },
      "body": {
        "$ref": "#/$defs/AttachedDisk"
      }
    },
    "required": [
      "project",
      "zone",
      "instance"
    ],
    "$defs": {
      "AttachedDisk": {
        "description": "An instance-attached disk resource.",
        "properties": {
          "architecture": {
            "description": "[Output Only] The architecture of the attached disk. Valid values are ARM64 or X86_64.",
            "enum": [
              "ARCHITECTURE_UNSPECIFIED",
              "ARM64",
              "X86_64"
            ],
            "type": "string"
          },
          "autoDelete": {
            "description": "Specifies whether the disk will be auto-deleted when the instance is deleted (but not when the disk is detached from the instance).",
            "type": "boolean"
          },
          "boot": {
            "description": "Indicates that this is a boot disk. The virtual machine will use the first partition of the disk for its root filesystem.",
            "type": "boolean"
          },
          "deviceName": {
            "description": "Specifies a unique device name of your choice that is reflected into the /dev/disk/by-id/google-* tree of a Linux operating system running within the instance. This name can be used to reference the device for mounting, resizing, and so on, from within the instance. If not specified, the server chooses a default device name to apply to this disk, in the form persistent-disk-x, where x is a number assigned by Google Compute Engine. This field is only applicable for persistent disks.",
            "type": "string"
          },
          "diskEncryptionKey": {
            "$ref": "#/$defs/CustomerEncryptionKey"
          },
          "diskSizeGb": {
            "description": "The size of the disk in GB.",
            "format": "int64",
            "type": "string"
          },
          "forceAttach": {
            "description": "[Input Only] Whether to force attach the regional disk even if it's currently attached to another instance. If you try to force attach a zonal disk to an instance, you will receive an error.",
            "type": "boolean"
          },
          "guestOsFeatures": {
            "description": "A list of features to enable on the guest operating system. Applicable only for bootable images. Read Enabling guest operating system features to see a list of available options.",
            "items": {
              "$ref": "#/$defs/GuestOsFeature"
            },
            "type": "array"
          },
          "index": {
            "description": "[Output Only] A zero-based index to this disk, where 0 is reserved for the boot disk. If you have many disks attached to an instance, each disk would have a unique index number.",
            "format": "int32",
            "type": "integer"
          },
          "initializeParams": {
            "$ref": "#/$defs/AttachedDiskInitializeParams"
          },
          "interface": {
            "description": "Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME. For most machine types, the default is SCSI. Local SSDs can use either NVME or SCSI. In certain configurations, persistent disks can use NVMe. For more information, see About persistent disks.",
            "enum": [
              "NVME",
              "SCSI"
            ],
            "type": "string"
          },
          "kind": {
            "default": "compute#attachedDisk",
            "description": "[Output Only] Type of the resource. Always compute#attachedDisk for attached disks.",
            "type": "string"
          },
          "licenses": {
            "description": "[Output Only] Any valid publicly visible licenses.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "locked": {
            "description": "[Output Only] Whether to indicate the attached disk is locked. The locked disk is not allowed to be detached from the instance, or to be used as the source of the snapshot creation, and the image creation. The instance with at least one locked attached disk is not allow to be used as source of machine image creation, instant snapshot creation, and not allowed to be deleted with --keep-disk parameter set to true for locked disks.",
            "type": "boolean"
          },
          "mode": {
            "description": "The mode in which to attach this disk, either READ_WRITE or READ_ONLY. If not specified, the default is to attach the disk in READ_WRITE mode.",
            "enum": [
              "READ_ONLY",
              "READ_WRITE"
            ],
            "type": "string"
          },
          "savedState": {
            "description": "For LocalSSD disks on VM Instances in STOPPED or SUSPENDED state, this field is set to PRESERVED if the LocalSSD data has been saved to a persistent location by customer request. (see the discard_local_ssd option on Stop/Suspend). Read-only in the api.",
            "enum": [
              "DISK_SAVED_STATE_UNSPECIFIED",
              "PRESERVED"
            ],
            "type": "string"
          },
          "shieldedInstanceInitialState": {
            "$ref": "#/$defs/InitialStateConfig"
          },
          "source": {
            "description": "Specifies a valid partial or full URL to an existing Persistent Disk resource. When creating a new instance, one of initializeParams.sourceImage or initializeParams.sourceSnapshot or disks.source is required except for local SSD. If desired, you can also attach existing non-root persistent disks using this property. This field is only applicable for persistent disks. Note that for InstanceTemplate, specify the disk name for zonal disk, and the URL for regional disk.",
            "type": "string"
          },
          "type": {
            "description": "Specifies the type of the disk, either SCRATCH or PERSISTENT. If not specified, the default is PERSISTENT.",
            "enum": [
              "PERSISTENT",
              "SCRATCH"
            ],
            "type": "string"
          },
          "userLicenses": {
            "description": "[Output Only] A list of user provided licenses. It represents a list of URLs to the license resource. Unlike regular licenses, user provided licenses can be modified after the disk is created.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "CustomerEncryptionKey": {
        "properties": {
          "kmsKeyName": {
            "description": "The name of the encryption key that is stored in Google Cloud KMS. For example: \"kmsKeyName\": \"projects/kms_project_id/locations/region/keyRings/ key_region/cryptoKeys/key The fully-qualifed key name may be returned for resource GET requests. For example: \"kmsKeyName\": \"projects/kms_project_id/locations/region/keyRings/ key_region/cryptoKeys/key /cryptoKeyVersions/1 ",
            "type": "string"
          },
          "kmsKeyServiceAccount": {
            "description": "The service account being used for the encryption request for the given KMS key. If absent, the Compute Engine default service account is used. For example: \"kmsKeyServiceAccount\": \"name@project_id.iam.gserviceaccount.com/ ",
            "type": "string"
          },
          "rawKey": {
            "description": "Specifies a 256-bit customer-supplied encryption key, encoded in RFC 4648 base64 to either encrypt or decrypt this resource. You can provide either the rawKey or the rsaEncryptedKey. For example: \"rawKey\": \"SGVsbG8gZnJvbSBHb29nbGUgQ2xvdWQgUGxhdGZvcm0=\" ",
            "type": "string"
          },
          "rsaEncryptedKey": {
            "description": "Specifies an RFC 4648 base64 encoded, RSA-wrapped 2048-bit customer-supplied encryption key to either encrypt or decrypt this resource. You can provide either the rawKey or the rsaEncryptedKey. For example: \"rsaEncryptedKey\": \"ieCx/NcW06PcT7Ep1X6LUTc/hLvUDYyzSZPPVCVPTVEohpeHASqC8uw5TzyO9U+Fka9JFH z0mBibXUInrC/jEk014kCK/NPjYgEMOyssZ4ZINPKxlUh2zn1bV+MCaTICrdmuSBTWlUUiFoD D6PYznLwh8ZNdaheCeZ8ewEXgFQ8V+sDroLaN3Xs3MDTXQEMMoNUXMCZEIpg9Vtp9x2oe==\" The key must meet the following requirements before you can provide it to Compute Engine: 1. The key is wrapped using a RSA public key certificate provided by Google. 2. After being wrapped, the key must be encoded in RFC 4648 base64 encoding. Gets the RSA public key certificate provided by Google at: https://cloud-certs.storage.googleapis.com/google-cloud-csek-ingress.pem ",
            "type": "string"
          },
          "sha256": {
            "description": "[Output only] The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied encryption key that protects this resource.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GuestOsFeature": {
        "description": "Guest OS features.",
        "properties": {
          "type": {
            "description": "The ID of a supported feature. To add multiple values, use commas to separate values. Set to one or more of the following values: - VIRTIO_SCSI_MULTIQUEUE - WINDOWS - MULTI_IP_SUBNET - UEFI_COMPATIBLE - GVNIC - SEV_CAPABLE - SUSPEND_RESUME_COMPATIBLE - SEV_LIVE_MIGRATABLE - SEV_SNP_CAPABLE - TDX_CAPABLE - IDPF For more information, see Enabling guest operating system features.",
            "enum": [
              "FEATURE_TYPE_UNSPECIFIED",
              "GVNIC",
              "IDPF",
              "MULTI_IP_SUBNET",
              "SECURE_BOOT",
              "SEV_CAPABLE",
              "SEV_LIVE_MIGRATABLE",
              "SEV_LIVE_MIGRATABLE_V2",
              "SEV_SNP_CAPABLE",
              "TDX_CAPABLE",
              "UEFI_COMPATIBLE",
              "VIRTIO_SCSI_MULTIQUEUE",
              "WINDOWS"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "AttachedDiskInitializeParams": {
        "description": "[Input Only] Specifies the parameters for a new disk that will be created alongside the new instance. Use initialization parameters to create boot disks or local SSDs attached to the new instance. This field is persisted and returned for instanceTemplate and not returned in the context of instance. This property is mutually exclusive with the source property; you can only define one or the other, but not both.",
        "properties": {
          "architecture": {
            "description": "The architecture of the attached disk. Valid values are arm64 or x86_64.",
            "enum": [
              "ARCHITECTURE_UNSPECIFIED",
              "ARM64",
              "X86_64"
            ],
            "type": "string"
          },
          "description": {
            "description": "An optional description. Provide this property when creating the disk.",
            "type": "string"
          },
          "diskName": {
            "description": "Specifies the disk name. If not specified, the default is to use the name of the instance. If a disk with the same name already exists in the given region, the existing disk is attached to the new instance and the new disk is not created.",
            "type": "string"
          },
          "diskSizeGb": {
            "description": "Specifies the size of the disk in base-2 GB. The size must be at least 10 GB. If you specify a sourceImage, which is required for boot disks, the default size is the size of the sourceImage. If you do not specify a sourceImage, the default disk size is 500 GB.",
            "format": "int64",
            "type": "string"
          },
          "diskType": {
            "description": "Specifies the disk type to use to create the instance. If not specified, the default is pd-standard, specified using the full URL. For example: https://www.googleapis.com/compute/v1/projects/project/zones/zone /diskTypes/pd-standard For a full list of acceptable values, see Persistent disk types. If you specify this field when creating a VM, you can provide either the full or partial URL. For example, the following values are valid: - https://www.googleapis.com/compute/v1/projects/project/zones/zone /diskTypes/diskType - projects/project/zones/zone/diskTypes/diskType - zones/zone/diskTypes/diskType If you specify this field when creating or updating an instance template or all-instances configuration, specify the type of the disk, not the URL. For example: pd-standard.",
            "type": "string"
          },
          "enableConfidentialCompute": {
            "description": "Whether this disk is using confidential compute mode.",
            "type": "boolean"
          },
          "guestOsFeatures": {
            "description": "A list of features to enable on the guest operating system. Applicable only for bootable images. Read Enabling guest operating system features to see a list of available options. Guest OS features are applied by merging initializeParams.guestOsFeatures and disks.guestOsFeatures",
            "items": {
              "$ref": "#/$defs/GuestOsFeature"
            },
            "type": "array"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Labels to apply to this disk. These can be later modified by the disks.setLabels method. This field is only applicable for persistent disks.",
            "type": "object"
          },
          "licenses": {
            "description": "A list of publicly visible licenses. Reserved for Google's use.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "multiWriter": {
            "description": "Indicates whether or not the disk can be read/write attached to more than one instance.",
            "type": "boolean"
          },
          "onUpdateAction": {
            "description": "Specifies which action to take on instance update with this disk. Default is to use the existing disk.",
            "enum": [
              "RECREATE_DISK",
              "RECREATE_DISK_IF_SOURCE_CHANGED",
              "USE_EXISTING_DISK"
            ],
            "type": "string"
          },
          "provisionedIops": {
            "description": "Indicates how many IOPS to provision for the disk. This sets the number of I/O operations per second that the disk can handle. Values must be between 10,000 and 120,000. For more details, see the Extreme persistent disk documentation.",
            "format": "int64",
            "type": "string"
          },
          "provisionedThroughput": {
            "description": "Indicates how much throughput to provision for the disk. This sets the number of throughput mb per second that the disk can handle. Values must greater than or equal to 1.",
            "format": "int64",
            "type": "string"
          },
          "replicaZones": {
            "description": "Required for each regional disk associated with the instance. Specify the URLs of the zones where the disk should be replicated to. You must provide exactly two replica zones, and one zone must be the same as the instance zone.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "resourceManagerTags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Resource manager tags to be bound to the disk. Tag keys and values have the same definition as resource manager tags. Keys must be in the format `tagKeys/{tag_key_id}`, and values are in the format `tagValues/456`. The field is ignored (both PUT & PATCH) when empty.",
            "type": "object"
          },
          "resourcePolicies": {
            "description": "Resource policies applied to this disk for automatic snapshot creations. Specified using the full or partial URL. For instance template, specify only the resource policy name.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "sourceImage": {
            "description": "The source image to create this disk. When creating a new instance, one of initializeParams.sourceImage or initializeParams.sourceSnapshot or disks.source is required except for local SSD. To create a disk with one of the public operating system images, specify the image by its family name. For example, specify family/debian-9 to use the latest Debian 9 image: projects/debian-cloud/global/images/family/debian-9 Alternatively, use a specific version of a public operating system image: projects/debian-cloud/global/images/debian-9-stretch-vYYYYMMDD To create a disk with a custom image that you created, specify the image name in the following format: global/images/my-custom-image You can also specify a custom image by its image family, which returns the latest version of the image in that family. Replace the image name with family/family-name: global/images/family/my-image-family If the source image is deleted later, this field will not be set.",
            "type": "string"
          },
          "sourceImageEncryptionKey": {
            "$ref": "#/$defs/CustomerEncryptionKey"
          },
          "sourceInstantSnapshot": {
            "description": "The source instant-snapshot to create this disk. When creating a new instance, one of initializeParams.sourceSnapshot or initializeParams.sourceInstantSnapshot initializeParams.sourceImage or disks.source is required except for local SSD. To create a disk with a snapshot that you created, specify the snapshot name in the following format: us-central1-a/instantSnapshots/my-backup If the source instant-snapshot is deleted later, this field will not be set.",
            "type": "string"
          },
          "sourceSnapshot": {
            "description": "The source snapshot to create this disk. When creating a new instance, one of initializeParams.sourceSnapshot or initializeParams.sourceImage or disks.source is required except for local SSD. To create a disk with a snapshot that you created, specify the snapshot name in the following format: global/snapshots/my-backup If the source snapshot is deleted later, this field will not be set.",
            "type": "string"
          },
          "sourceSnapshotEncryptionKey": {
            "$ref": "#/$defs/CustomerEncryptionKey"
          }
        },
        "type": "object"
      },
      "InitialStateConfig": {
        "description": "Initial State for shielded instance, these are public keys which are safe to store in public",
        "properties": {
          "dbs": {
            "description": "The Key Database (db).",
            "items": {
              "$ref": "#/$defs/FileContentBuffer"
            },
            "type": "array"
          },
          "dbxs": {
            "description": "The forbidden key database (dbx).",
            "items": {
              "$ref": "#/$defs/FileContentBuffer"
            },
            "type": "array"
          },
          "keks": {
            "description": "The Key Exchange Key (KEK).",
            "items": {
              "$ref": "#/$defs/FileContentBuffer"
            },
            "type": "array"
          },
          "pk": {
            "$ref": "#/$defs/FileContentBuffer"
          }
        },
        "type": "object"
      },
      "FileContentBuffer": {
        "properties": {
          "content": {
            "description": "The raw content in the secure keys file.",
            "format": "byte",
            "type": "string"
          },
          "fileType": {
            "description": "The file type of source file.",
            "enum": [
              "BIN",
              "UNDEFINED",
              "X509"
            ],
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://compute.googleapis.com/compute/beta/projects/{project}/zones/{zone}/instances/{instance}/attachDisk{?forceAttach,requestId,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType,userIp}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Represents an Operation resource. Google Compute Engine has three Operation resources: * [Global](/compute/docs/reference/rest/beta/globalOperations) * [Regional](/compute/docs/reference/rest/beta/regionOperations) * [Zonal](/compute/docs/reference/rest/beta/zoneOperations) You can use an operation resource to manage asynchronous API requests. For more information, read Handling API responses. Operations can be global, regional or zonal. - For global operations, use the `globalOperations` resource. - For regional operations, use the `regionOperations` resource. - For zonal operations, use the `zoneOperations` resource. For more information, read Global, Regional, and Zonal Resources. Note that completed Operation resources have a limited retention period.",
        "**Key properties:**",
        {
          "$ul": [
            "**clientOperationId**: [Output Only] The value of `requestId` if you provided it in the request. Not present otherwise.",
            "**creationTimestamp**: [Deprecated] This field is deprecated.",
            "**description**: [Output Only] A textual description of the operation, which is set when the operation is created.",
            "**endTime**: [Output Only] The time that this operation was completed. This value is in RFC3339 text format.",
            [
              "**error**: [Output Only] If errors are generated during processing of the operation, this field will be populated.",
              {
                "$ul": [
                  "**errors**: [Output Only] The array of errors encountered while processing this operation."
                ]
              }
            ],
            "**httpErrorMessage**: [Output Only] If the operation fails, this field contains the HTTP error message that was returned, such as `NOT FOUND`.",
            "**httpErrorStatusCode**: [Output Only] If the operation fails, this field contains the HTTP error status code that was returned. For example, a `404` means the resource was not found.",
            "**id**: [Output Only] The unique identifier for the operation. This identifier is defined by the server.",
            "**insertTime**: [Output Only] The time that this operation was requested. This value is in RFC3339 text format.",
            [
              "**instancesBulkInsertOperationMetadata**",
              {
                "$ul": [
                  "**perLocationStatus**: Status information per location (location name is key). Example key: zones/us-central1-a"
                ]
              }
            ],
            "**kind**: [Output Only] Type of the resource. Always `compute#operation` for Operation resources. (default: compute#operation)",
            "**name**: [Output Only] Name of the operation.",
            "**operationGroupId**: [Output Only] An ID that represents a group of operations, such as when a group of operations results from a `bulkInsert` API request.",
            "**operationType**: [Output Only] The type of operation, such as `insert`, `update`, or `delete`, and so on.",
            "**progress**: [Output Only] An optional progress indicator that ranges from 0 to 100. There is no requirement that this be linear or support any granularity of operations. This should not be used to guess when the operation will be complete. This number should monotonically increase as the operation progresses.",
            "**region**: [Output Only] The URL of the region where the operation resides. Only applicable when performing regional operations.",
            "**selfLink**: [Output Only] Server-defined URL for the resource.",
            [
              "**setCommonInstanceMetadataOperationMetadata**",
              {
                "$ul": [
                  "**clientOperationId**: [Output Only] The client operation id.",
                  "**perLocationOperations**: [Output Only] Status information per location (location name is key). Example key: zones/us-central1-a"
                ]
              }
            ],
            "**startTime**: [Output Only] The time that this operation was started by the server. This value is in RFC3339 text format.",
            "**status**: [Output Only] The status of the operation, which can be one of the following: `PENDING`, `RUNNING`, or `DONE`.",
            "**statusMessage**: [Output Only] An optional textual description of the current status of the operation.",
            "**targetId**: [Output Only] The unique target ID, which identifies a specific incarnation of the target resource.",
            "**targetLink**: [Output Only] The URL of the resource that the operation modifies. For operations related to creating a snapshot, this points to the persistent disk that the snapshot was created from.",
            "**user**: [Output Only] User who requested the operation, for example: `user@example.com` or `alice_smith_identifier (global/workforcePools/example-com-us-employees)`.",
            "**warnings**: [Output Only] If warning messages are generated during processing of the operation, this field will be populated.",
            "**zone**: [Output Only] The URL of the zone where the operation resides. Only applicable when performing per-zone operations."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
