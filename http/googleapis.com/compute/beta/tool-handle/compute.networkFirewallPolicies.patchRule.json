{
  "name": "compute_networkFirewallPolicies_patchRule",
  "description": "Patches a rule of the specified priority.",
  "parameters": {
    "type": "object",
    "properties": {
      "project": {
        "type": "string",
        "description": "Project ID for this request."
      },
      "firewallPolicy": {
        "type": "string",
        "description": "Name of the firewall policy to update."
      },
      "priority": {
        "type": "integer",
        "description": "The priority of the rule to patch."
      },
      "requestId": {
        "type": "string",
        "description": "An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "userIp": {
        "type": "string",
        "description": "Legacy name for parameter that has been superseded by `quotaUser`."
      },
      "body": {
        "$ref": "#/$defs/FirewallPolicyRule"
      }
    },
    "required": [
      "project",
      "firewallPolicy"
    ],
    "$defs": {
      "FirewallPolicyRule": {
        "description": "Represents a rule that describes one or more match conditions along with the action to be taken when traffic matches this condition (allow or deny).",
        "properties": {
          "action": {
            "description": "The Action to perform when the client connection triggers the rule. Valid actions are \"allow\", \"deny\" and \"goto_next\".",
            "type": "string"
          },
          "description": {
            "description": "An optional description for this resource.",
            "type": "string"
          },
          "direction": {
            "description": "The direction in which this rule applies.",
            "enum": [
              "EGRESS",
              "INGRESS"
            ],
            "type": "string"
          },
          "disabled": {
            "description": "Denotes whether the firewall policy rule is disabled. When set to true, the firewall policy rule is not enforced and traffic behaves as if it did not exist. If this is unspecified, the firewall policy rule will be enabled.",
            "type": "boolean"
          },
          "enableLogging": {
            "description": "Denotes whether to enable logging for a particular rule. If logging is enabled, logs will be exported to the configured export destination in Stackdriver. Logs may be exported to BigQuery or Pub/Sub. Note: you cannot enable logging on \"goto_next\" rules.",
            "type": "boolean"
          },
          "kind": {
            "default": "compute#firewallPolicyRule",
            "description": "[Output only] Type of the resource. Always compute#firewallPolicyRule for firewall policy rules",
            "type": "string"
          },
          "match": {
            "$ref": "#/$defs/FirewallPolicyRuleMatcher"
          },
          "priority": {
            "description": "An integer indicating the priority of a rule in the list. The priority must be a positive value between 0 and 2147483647. Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the lowest prority.",
            "format": "int32",
            "type": "integer"
          },
          "ruleName": {
            "description": "An optional name for the rule. This field is not a unique identifier and can be updated.",
            "type": "string"
          },
          "ruleTupleCount": {
            "description": "[Output Only] Calculation of the complexity of a single firewall policy rule.",
            "format": "int32",
            "type": "integer"
          },
          "securityProfileGroup": {
            "description": "A fully-qualified URL of a SecurityProfile resource instance. Example: https://networksecurity.googleapis.com/v1/projects/{project}/locations/{location}/securityProfileGroups/my-security-profile-group Must be specified if action = 'apply_security_profile_group' and cannot be specified for other actions.",
            "type": "string"
          },
          "targetResources": {
            "description": "A list of network resource URLs to which this rule applies. This field allows you to control which network's VMs get this rule. If this field is left blank, all VMs within the organization will receive the rule.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "targetSecureTags": {
            "description": "A list of secure tags that controls which instances the firewall rule applies to. If targetSecureTag are specified, then the firewall rule applies only to instances in the VPC network that have one of those EFFECTIVE secure tags, if all the target_secure_tag are in INEFFECTIVE state, then this rule will be ignored. targetSecureTag may not be set at the same time as targetServiceAccounts. If neither targetServiceAccounts nor targetSecureTag are specified, the firewall rule applies to all instances on the specified network. Maximum number of target label tags allowed is 256.",
            "items": {
              "$ref": "#/$defs/FirewallPolicyRuleSecureTag"
            },
            "type": "array"
          },
          "targetServiceAccounts": {
            "description": "A list of service accounts indicating the sets of instances that are applied with this rule.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tlsInspect": {
            "description": "Boolean flag indicating if the traffic should be TLS decrypted. Can be set only if action = 'apply_security_profile_group' and cannot be set for other actions.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "FirewallPolicyRuleMatcher": {
        "description": "Represents a match condition that incoming traffic is evaluated against. Exactly one field must be specified.",
        "properties": {
          "destAddressGroups": {
            "description": "Address groups which should be matched against the traffic destination. Maximum number of destination address groups is 10.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "destFqdns": {
            "description": "Fully Qualified Domain Name (FQDN) which should be matched against traffic destination. Maximum number of destination fqdn allowed is 100.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "destIpRanges": {
            "description": "CIDR IP address range. Maximum number of destination CIDR IP ranges allowed is 5000.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "destRegionCodes": {
            "description": "Region codes whose IP addresses will be used to match for destination of traffic. Should be specified as 2 letter country code defined as per ISO 3166 alpha-2 country codes. ex.\"US\" Maximum number of dest region codes allowed is 5000.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "destThreatIntelligences": {
            "description": "Names of Network Threat Intelligence lists. The IPs in these lists will be matched against traffic destination.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "layer4Configs": {
            "description": "Pairs of IP protocols and ports that the rule should match.",
            "items": {
              "$ref": "#/$defs/FirewallPolicyRuleMatcherLayer4Config"
            },
            "type": "array"
          },
          "srcAddressGroups": {
            "description": "Address groups which should be matched against the traffic source. Maximum number of source address groups is 10.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "srcFqdns": {
            "description": "Fully Qualified Domain Name (FQDN) which should be matched against traffic source. Maximum number of source fqdn allowed is 100.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "srcIpRanges": {
            "description": "CIDR IP address range. Maximum number of source CIDR IP ranges allowed is 5000.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "srcRegionCodes": {
            "description": "Region codes whose IP addresses will be used to match for source of traffic. Should be specified as 2 letter country code defined as per ISO 3166 alpha-2 country codes. ex.\"US\" Maximum number of source region codes allowed is 5000.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "srcSecureTags": {
            "description": "List of secure tag values, which should be matched at the source of the traffic. For INGRESS rule, if all the srcSecureTag are INEFFECTIVE, and there is no srcIpRange, this rule will be ignored. Maximum number of source tag values allowed is 256.",
            "items": {
              "$ref": "#/$defs/FirewallPolicyRuleSecureTag"
            },
            "type": "array"
          },
          "srcThreatIntelligences": {
            "description": "Names of Network Threat Intelligence lists. The IPs in these lists will be matched against traffic source.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "FirewallPolicyRuleMatcherLayer4Config": {
        "properties": {
          "ipProtocol": {
            "description": "The IP protocol to which this rule applies. The protocol type is required when creating a firewall rule. This value can either be one of the following well known protocol strings (tcp, udp, icmp, esp, ah, ipip, sctp), or the IP protocol number.",
            "type": "string"
          },
          "ports": {
            "description": "An optional list of ports to which this rule applies. This field is only applicable for UDP or TCP protocol. Each entry must be either an integer or a range. If not specified, this rule applies to connections through any port. Example inputs include: [\"22\"], [\"80\",\"443\"], and [\"12345-12349\"].",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "FirewallPolicyRuleSecureTag": {
        "properties": {
          "name": {
            "description": "Name of the secure tag, created with TagManager's TagValue API.",
            "pattern": "tagValues/[0-9]+",
            "type": "string"
          },
          "state": {
            "description": "[Output Only] State of the secure tag, either `EFFECTIVE` or `INEFFECTIVE`. A secure tag is `INEFFECTIVE` when it is deleted or its network is deleted.",
            "enum": [
              "EFFECTIVE",
              "INEFFECTIVE"
            ],
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://compute.googleapis.com/compute/beta/projects/{project}/global/firewallPolicies/{firewallPolicy}/patchRule{?priority,requestId,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType,userIp}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Represents an Operation resource. Google Compute Engine has three Operation resources: * [Global](/compute/docs/reference/rest/beta/globalOperations) * [Regional](/compute/docs/reference/rest/beta/regionOperations) * [Zonal](/compute/docs/reference/rest/beta/zoneOperations) You can use an operation resource to manage asynchronous API requests. For more information, read Handling API responses. Operations can be global, regional or zonal. - For global operations, use the `globalOperations` resource. - For regional operations, use the `regionOperations` resource. - For zonal operations, use the `zoneOperations` resource. For more information, read Global, Regional, and Zonal Resources. Note that completed Operation resources have a limited retention period.",
        "**Key properties:**",
        {
          "$ul": [
            "**clientOperationId**: [Output Only] The value of `requestId` if you provided it in the request. Not present otherwise.",
            "**creationTimestamp**: [Deprecated] This field is deprecated.",
            "**description**: [Output Only] A textual description of the operation, which is set when the operation is created.",
            "**endTime**: [Output Only] The time that this operation was completed. This value is in RFC3339 text format.",
            [
              "**error**: [Output Only] If errors are generated during processing of the operation, this field will be populated.",
              {
                "$ul": [
                  "**errors**: [Output Only] The array of errors encountered while processing this operation."
                ]
              }
            ],
            "**httpErrorMessage**: [Output Only] If the operation fails, this field contains the HTTP error message that was returned, such as `NOT FOUND`.",
            "**httpErrorStatusCode**: [Output Only] If the operation fails, this field contains the HTTP error status code that was returned. For example, a `404` means the resource was not found.",
            "**id**: [Output Only] The unique identifier for the operation. This identifier is defined by the server.",
            "**insertTime**: [Output Only] The time that this operation was requested. This value is in RFC3339 text format.",
            [
              "**instancesBulkInsertOperationMetadata**",
              {
                "$ul": [
                  "**perLocationStatus**: Status information per location (location name is key). Example key: zones/us-central1-a"
                ]
              }
            ],
            "**kind**: [Output Only] Type of the resource. Always `compute#operation` for Operation resources. (default: compute#operation)",
            "**name**: [Output Only] Name of the operation.",
            "**operationGroupId**: [Output Only] An ID that represents a group of operations, such as when a group of operations results from a `bulkInsert` API request.",
            "**operationType**: [Output Only] The type of operation, such as `insert`, `update`, or `delete`, and so on.",
            "**progress**: [Output Only] An optional progress indicator that ranges from 0 to 100. There is no requirement that this be linear or support any granularity of operations. This should not be used to guess when the operation will be complete. This number should monotonically increase as the operation progresses.",
            "**region**: [Output Only] The URL of the region where the operation resides. Only applicable when performing regional operations.",
            "**selfLink**: [Output Only] Server-defined URL for the resource.",
            [
              "**setCommonInstanceMetadataOperationMetadata**",
              {
                "$ul": [
                  "**clientOperationId**: [Output Only] The client operation id.",
                  "**perLocationOperations**: [Output Only] Status information per location (location name is key). Example key: zones/us-central1-a"
                ]
              }
            ],
            "**startTime**: [Output Only] The time that this operation was started by the server. This value is in RFC3339 text format.",
            "**status**: [Output Only] The status of the operation, which can be one of the following: `PENDING`, `RUNNING`, or `DONE`.",
            "**statusMessage**: [Output Only] An optional textual description of the current status of the operation.",
            "**targetId**: [Output Only] The unique target ID, which identifies a specific incarnation of the target resource.",
            "**targetLink**: [Output Only] The URL of the resource that the operation modifies. For operations related to creating a snapshot, this points to the persistent disk that the snapshot was created from.",
            "**user**: [Output Only] User who requested the operation, for example: `user@example.com` or `alice_smith_identifier (global/workforcePools/example-com-us-employees)`.",
            "**warnings**: [Output Only] If warning messages are generated during processing of the operation, this field will be populated.",
            "**zone**: [Output Only] The URL of the zone where the operation resides. Only applicable when performing per-zone operations."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
