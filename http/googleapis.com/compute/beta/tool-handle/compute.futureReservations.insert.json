{
  "name": "compute_futureReservations_insert",
  "description": "Creates a new Future Reservation.",
  "parameters": {
    "type": "object",
    "properties": {
      "project": {
        "type": "string",
        "description": "Project ID for this request."
      },
      "zone": {
        "type": "string",
        "description": "Name of the zone for this request. Name should conform to RFC1035."
      },
      "requestId": {
        "type": "string",
        "description": "An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "userIp": {
        "type": "string",
        "description": "Legacy name for parameter that has been superseded by `quotaUser`."
      },
      "body": {
        "$ref": "#/$defs/FutureReservation"
      }
    },
    "required": [
      "project",
      "zone"
    ],
    "$defs": {
      "FutureReservation": {
        "properties": {
          "autoCreatedReservationsDeleteTime": {
            "description": "Future timestamp when the FR auto-created reservations will be deleted by Compute Engine. Format of this field must be a valid href=\"https://www.ietf.org/rfc/rfc3339.txt\">RFC3339 value.",
            "type": "string"
          },
          "autoCreatedReservationsDuration": {
            "$ref": "#/$defs/Duration"
          },
          "autoDeleteAutoCreatedReservations": {
            "description": "Setting for enabling or disabling automatic deletion for auto-created reservation. If set to true, auto-created reservations will be deleted at Future Reservation's end time (default) or at user's defined timestamp if any of the [auto_created_reservations_delete_time, auto_created_reservations_duration] values is specified. For keeping auto-created reservation indefinitely, this value should be set to false.",
            "type": "boolean"
          },
          "creationTimestamp": {
            "description": "[Output Only] The creation timestamp for this future reservation in RFC3339 text format.",
            "type": "string"
          },
          "description": {
            "description": "An optional description of this resource. Provide this property when you create the future reservation.",
            "type": "string"
          },
          "id": {
            "description": "[Output Only] A unique identifier for this future reservation. The server defines this identifier.",
            "format": "uint64",
            "type": "string"
          },
          "kind": {
            "default": "compute#futureReservation",
            "description": "[Output Only] Type of the resource. Always compute#futureReservation for future reservations.",
            "type": "string"
          },
          "name": {
            "description": "The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
            "pattern": "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?",
            "type": "string"
          },
          "namePrefix": {
            "description": "Name prefix for the reservations to be created at the time of delivery. The name prefix must comply with RFC1035. Maximum allowed length for name prefix is 20. Automatically created reservations name format will be -date-####.",
            "type": "string"
          },
          "planningStatus": {
            "description": "Planning state before being submitted for evaluation",
            "enum": [
              "DRAFT",
              "PLANNING_STATUS_UNSPECIFIED",
              "SUBMITTED"
            ],
            "type": "string"
          },
          "selfLink": {
            "description": "[Output Only] Server-defined fully-qualified URL for this resource.",
            "type": "string"
          },
          "selfLinkWithId": {
            "description": "[Output Only] Server-defined URL for this resource with the resource id.",
            "type": "string"
          },
          "shareSettings": {
            "$ref": "#/$defs/ShareSettings"
          },
          "specificSkuProperties": {
            "$ref": "#/$defs/FutureReservationSpecificSKUProperties"
          },
          "status": {
            "$ref": "#/$defs/FutureReservationStatus"
          },
          "timeWindow": {
            "$ref": "#/$defs/FutureReservationTimeWindow"
          },
          "zone": {
            "description": "[Output Only] URL of the Zone where this future reservation resides.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Duration": {
        "description": "A Duration represents a fixed-length span of time represented as a count of seconds and fractions of seconds at nanosecond resolution. It is independent of any calendar and concepts like \"day\" or \"month\". Range is approximately 10,000 years.",
        "properties": {
          "nanos": {
            "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 `seconds` field and a positive `nanos` field. Must be from 0 to 999,999,999 inclusive.",
            "format": "int32",
            "type": "integer"
          },
          "seconds": {
            "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ShareSettings": {
        "description": "The share setting for reservations and sole tenancy node groups.",
        "properties": {
          "projectMap": {
            "additionalProperties": {
              "$ref": "#/$defs/ShareSettingsProjectConfig"
            },
            "description": "A map of project id and project config. This is only valid when share_type's value is SPECIFIC_PROJECTS.",
            "type": "object"
          },
          "projects": {
            "description": "A List of Project names to specify consumer projects for this shared-reservation. This is only valid when share_type's value is SPECIFIC_PROJECTS.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "shareType": {
            "description": "Type of sharing for this shared-reservation",
            "enum": [
              "LOCAL",
              "ORGANIZATION",
              "SHARE_TYPE_UNSPECIFIED",
              "SPECIFIC_PROJECTS"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "ShareSettingsProjectConfig": {
        "description": "Config for each project in the share settings.",
        "properties": {
          "projectId": {
            "description": "The project ID, should be same as the key of this project config in the parent map.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "FutureReservationSpecificSKUProperties": {
        "properties": {
          "instanceProperties": {
            "$ref": "#/$defs/AllocationSpecificSKUAllocationReservedInstanceProperties"
          },
          "sourceInstanceTemplate": {
            "description": "The instance template that will be used to populate the ReservedInstanceProperties of the future reservation",
            "type": "string"
          },
          "totalCount": {
            "description": "Total number of instances for which capacity assurance is requested at a future time period.",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AllocationSpecificSKUAllocationReservedInstanceProperties": {
        "description": "Properties of the SKU instances being reserved. Next ID: 9",
        "properties": {
          "guestAccelerators": {
            "description": "Specifies accelerator type and count.",
            "items": {
              "$ref": "#/$defs/AcceleratorConfig"
            },
            "type": "array"
          },
          "localSsds": {
            "description": "Specifies amount of local ssd to reserve with each instance. The type of disk is local-ssd.",
            "items": {
              "$ref": "#/$defs/AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDisk"
            },
            "type": "array"
          },
          "locationHint": {
            "description": "An opaque location hint used to place the allocation close to other resources. This field is for use by internal tools that use the public API.",
            "type": "string"
          },
          "machineType": {
            "description": "Specifies type of machine (name only) which has fixed number of vCPUs and fixed amount of memory. This also includes specifying custom machine type following custom-NUMBER_OF_CPUS-AMOUNT_OF_MEMORY pattern.",
            "type": "string"
          },
          "maintenanceFreezeDurationHours": {
            "description": "Specifies the number of hours after reservation creation where instances using the reservation won't be scheduled for maintenance.",
            "format": "int32",
            "type": "integer"
          },
          "maintenanceInterval": {
            "description": "Specifies the frequency of planned maintenance events. The accepted values are: `PERIODIC`.",
            "enum": [
              "AS_NEEDED",
              "PERIODIC",
              "RECURRENT"
            ],
            "type": "string"
          },
          "minCpuPlatform": {
            "description": "Minimum cpu platform the reservation.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AcceleratorConfig": {
        "description": "A specification of the type and number of accelerator cards attached to the instance.",
        "properties": {
          "acceleratorCount": {
            "description": "The number of the guest accelerator cards exposed to this instance.",
            "format": "int32",
            "type": "integer"
          },
          "acceleratorType": {
            "description": "Full or partial URL of the accelerator type resource to attach to this instance. For example: projects/my-project/zones/us-central1-c/acceleratorTypes/nvidia-tesla-p100 If you are creating an instance template, specify only the accelerator name. See GPUs on Compute Engine for a full list of accelerator types.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDisk": {
        "properties": {
          "diskSizeGb": {
            "description": "Specifies the size of the disk in base-2 GB.",
            "format": "int64",
            "type": "string"
          },
          "interface": {
            "description": "Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME. The default is SCSI. For performance characteristics of SCSI over NVMe, see Local SSD performance.",
            "enum": [
              "NVME",
              "SCSI"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "FutureReservationStatus": {
        "description": "[Output only] Represents status related to the future reservation.",
        "properties": {
          "amendmentStatus": {
            "description": "[Output Only] The current status of the requested amendment.",
            "enum": [
              "AMENDMENT_APPROVED",
              "AMENDMENT_DECLINED",
              "AMENDMENT_IN_REVIEW",
              "AMENDMENT_STATUS_UNSPECIFIED"
            ],
            "type": "string"
          },
          "autoCreatedReservations": {
            "description": "Fully qualified urls of the automatically created reservations at start_time.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "fulfilledCount": {
            "description": "This count indicates the fulfilled capacity so far. This is set during \"PROVISIONING\" state. This count also includes capacity delivered as part of existing matching reservations.",
            "format": "int64",
            "type": "string"
          },
          "lastKnownGoodState": {
            "$ref": "#/$defs/FutureReservationStatusLastKnownGoodState"
          },
          "lockTime": {
            "description": "Time when Future Reservation would become LOCKED, after which no modifications to Future Reservation will be allowed. Applicable only after the Future Reservation is in the APPROVED state. The lock_time is an RFC3339 string. The procurement_status will transition to PROCURING state at this time.",
            "type": "string"
          },
          "procurementStatus": {
            "description": "Current state of this Future Reservation",
            "enum": [
              "APPROVED",
              "CANCELLED",
              "COMMITTED",
              "DECLINED",
              "DRAFTING",
              "FAILED",
              "FAILED_PARTIALLY_FULFILLED",
              "FULFILLED",
              "PENDING_AMENDMENT_APPROVAL",
              "PENDING_APPROVAL",
              "PROCUREMENT_STATUS_UNSPECIFIED",
              "PROCURING",
              "PROVISIONING"
            ],
            "type": "string"
          },
          "specificSkuProperties": {
            "$ref": "#/$defs/FutureReservationStatusSpecificSKUProperties"
          }
        },
        "type": "object"
      },
      "FutureReservationStatusLastKnownGoodState": {
        "description": "The state that the future reservation will be reverted to should the amendment be declined.",
        "properties": {
          "description": {
            "description": "[Output Only] The description of the FutureReservation before an amendment was requested.",
            "type": "string"
          },
          "futureReservationSpecs": {
            "$ref": "#/$defs/FutureReservationStatusLastKnownGoodStateFutureReservationSpecs"
          },
          "lockTime": {
            "description": "[Output Only] The lock time of the FutureReservation before an amendment was requested.",
            "type": "string"
          },
          "namePrefix": {
            "description": "[Output Only] The name prefix of the Future Reservation before an amendment was requested.",
            "type": "string"
          },
          "procurementStatus": {
            "description": "[Output Only] The status of the last known good state for the Future Reservation.",
            "enum": [
              "APPROVED",
              "CANCELLED",
              "COMMITTED",
              "DECLINED",
              "DRAFTING",
              "FAILED",
              "FAILED_PARTIALLY_FULFILLED",
              "FULFILLED",
              "PENDING_AMENDMENT_APPROVAL",
              "PENDING_APPROVAL",
              "PROCUREMENT_STATUS_UNSPECIFIED",
              "PROCURING",
              "PROVISIONING"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "FutureReservationStatusLastKnownGoodStateFutureReservationSpecs": {
        "description": "The properties of the last known good state for the Future Reservation.",
        "properties": {
          "shareSettings": {
            "$ref": "#/$defs/ShareSettings"
          },
          "specificSkuProperties": {
            "$ref": "#/$defs/FutureReservationSpecificSKUProperties"
          },
          "timeWindow": {
            "$ref": "#/$defs/FutureReservationTimeWindow"
          }
        },
        "type": "object"
      },
      "FutureReservationTimeWindow": {
        "properties": {
          "duration": {
            "$ref": "#/$defs/Duration"
          },
          "endTime": {
            "type": "string"
          },
          "startTime": {
            "description": "Start time of the Future Reservation. The start_time is an RFC3339 string.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "FutureReservationStatusSpecificSKUProperties": {
        "description": "Properties to be set for the Future Reservation.",
        "properties": {
          "sourceInstanceTemplateId": {
            "description": "ID of the instance template used to populate the Future Reservation properties.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://compute.googleapis.com/compute/beta/projects/{project}/zones/{zone}/futureReservations{?requestId,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType,userIp}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Represents an Operation resource. Google Compute Engine has three Operation resources: * [Global](/compute/docs/reference/rest/beta/globalOperations) * [Regional](/compute/docs/reference/rest/beta/regionOperations) * [Zonal](/compute/docs/reference/rest/beta/zoneOperations) You can use an operation resource to manage asynchronous API requests. For more information, read Handling API responses. Operations can be global, regional or zonal. - For global operations, use the `globalOperations` resource. - For regional operations, use the `regionOperations` resource. - For zonal operations, use the `zoneOperations` resource. For more information, read Global, Regional, and Zonal Resources. Note that completed Operation resources have a limited retention period.",
        "**Key properties:**",
        {
          "$ul": [
            "**clientOperationId**: [Output Only] The value of `requestId` if you provided it in the request. Not present otherwise.",
            "**creationTimestamp**: [Deprecated] This field is deprecated.",
            "**description**: [Output Only] A textual description of the operation, which is set when the operation is created.",
            "**endTime**: [Output Only] The time that this operation was completed. This value is in RFC3339 text format.",
            [
              "**error**: [Output Only] If errors are generated during processing of the operation, this field will be populated.",
              {
                "$ul": [
                  "**errors**: [Output Only] The array of errors encountered while processing this operation."
                ]
              }
            ],
            "**httpErrorMessage**: [Output Only] If the operation fails, this field contains the HTTP error message that was returned, such as `NOT FOUND`.",
            "**httpErrorStatusCode**: [Output Only] If the operation fails, this field contains the HTTP error status code that was returned. For example, a `404` means the resource was not found.",
            "**id**: [Output Only] The unique identifier for the operation. This identifier is defined by the server.",
            "**insertTime**: [Output Only] The time that this operation was requested. This value is in RFC3339 text format.",
            [
              "**instancesBulkInsertOperationMetadata**",
              {
                "$ul": [
                  "**perLocationStatus**: Status information per location (location name is key). Example key: zones/us-central1-a"
                ]
              }
            ],
            "**kind**: [Output Only] Type of the resource. Always `compute#operation` for Operation resources. (default: compute#operation)",
            "**name**: [Output Only] Name of the operation.",
            "**operationGroupId**: [Output Only] An ID that represents a group of operations, such as when a group of operations results from a `bulkInsert` API request.",
            "**operationType**: [Output Only] The type of operation, such as `insert`, `update`, or `delete`, and so on.",
            "**progress**: [Output Only] An optional progress indicator that ranges from 0 to 100. There is no requirement that this be linear or support any granularity of operations. This should not be used to guess when the operation will be complete. This number should monotonically increase as the operation progresses.",
            "**region**: [Output Only] The URL of the region where the operation resides. Only applicable when performing regional operations.",
            "**selfLink**: [Output Only] Server-defined URL for the resource.",
            [
              "**setCommonInstanceMetadataOperationMetadata**",
              {
                "$ul": [
                  "**clientOperationId**: [Output Only] The client operation id.",
                  "**perLocationOperations**: [Output Only] Status information per location (location name is key). Example key: zones/us-central1-a"
                ]
              }
            ],
            "**startTime**: [Output Only] The time that this operation was started by the server. This value is in RFC3339 text format.",
            "**status**: [Output Only] The status of the operation, which can be one of the following: `PENDING`, `RUNNING`, or `DONE`.",
            "**statusMessage**: [Output Only] An optional textual description of the current status of the operation.",
            "**targetId**: [Output Only] The unique target ID, which identifies a specific incarnation of the target resource.",
            "**targetLink**: [Output Only] The URL of the resource that the operation modifies. For operations related to creating a snapshot, this points to the persistent disk that the snapshot was created from.",
            "**user**: [Output Only] User who requested the operation, for example: `user@example.com` or `alice_smith_identifier (global/workforcePools/example-com-us-employees)`.",
            "**warnings**: [Output Only] If warning messages are generated during processing of the operation, this field will be populated.",
            "**zone**: [Output Only] The URL of the zone where the operation resides. Only applicable when performing per-zone operations."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
