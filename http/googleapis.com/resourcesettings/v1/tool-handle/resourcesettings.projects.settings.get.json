{
  "name": "resourcesettings_projects_settings_get",
  "description": "Returns a specified setting. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the setting does not exist.",
  "parameters": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "Required. The name of the setting to get. See Setting for naming requirements."
      },
      "view": {
        "enum": [
          "SETTING_VIEW_UNSPECIFIED",
          "SETTING_VIEW_BASIC",
          "SETTING_VIEW_EFFECTIVE_VALUE",
          "SETTING_VIEW_LOCAL_VALUE"
        ],
        "type": "string",
        "description": "The SettingView for this request."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      }
    },
    "required": [
      "name"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://resourcesettings.googleapis.com//v1/{name}{?view,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The schema for settings.",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**effectiveValue**: The data in a setting value.",
              {
                "$ul": [
                  "**booleanValue**: Defines this value as being a boolean value.",
                  "**durationValue**: Defines this value as being a Duration.",
                  [
                    "**enumValue**: A enum value that can hold any enum type setting values. Each enum type is represented by a number, this representation is stored in the definitions.",
                    {
                      "$ul": [
                        "**value**: The value of this enum"
                      ]
                    }
                  ],
                  [
                    "**stringMapValue**: A string->string map value that can hold a map of string keys to string values. The maximum length of each string is 200 characters and there can be a maximum of 50 key-value pairs in the map.",
                    {
                      "$ul": [
                        "**mappings**: The key-value pairs in the map"
                      ]
                    }
                  ],
                  [
                    "**stringSetValue**: A string set value that can hold a set of strings. The maximum length of each string is 200 characters and there can be a maximum of 50 strings in the string set.",
                    {
                      "$ul": [
                        "**values**: The strings in the set"
                      ]
                    }
                  ],
                  "**stringValue**: Defines this value as being a string value."
                ]
              }
            ],
            "**etag**: A fingerprint used for optimistic concurrency. See UpdateSetting for more details.",
            [
              "**localValue**: The data in a setting value.",
              {
                "$ul": [
                  "**booleanValue**: Defines this value as being a boolean value.",
                  "**durationValue**: Defines this value as being a Duration.",
                  [
                    "**enumValue**: A enum value that can hold any enum type setting values. Each enum type is represented by a number, this representation is stored in the definitions.",
                    {
                      "$ul": [
                        "**value**: The value of this enum"
                      ]
                    }
                  ],
                  [
                    "**stringMapValue**: A string->string map value that can hold a map of string keys to string values. The maximum length of each string is 200 characters and there can be a maximum of 50 key-value pairs in the map.",
                    {
                      "$ul": [
                        "**mappings**: The key-value pairs in the map"
                      ]
                    }
                  ],
                  [
                    "**stringSetValue**: A string set value that can hold a set of strings. The maximum length of each string is 200 characters and there can be a maximum of 50 strings in the string set.",
                    {
                      "$ul": [
                        "**values**: The strings in the set"
                      ]
                    }
                  ],
                  "**stringValue**: Defines this value as being a string value."
                ]
              }
            ],
            [
              "**metadata**: Metadata about a setting which is not editable by the end user.",
              {
                "$ul": [
                  "**dataType**: The data type for this setting.",
                  [
                    "**defaultValue**: The data in a setting value.",
                    {
                      "$ul": [
                        "**booleanValue**: Defines this value as being a boolean value.",
                        "**durationValue**: Defines this value as being a Duration.",
                        [
                          "**enumValue**: A enum value that can hold any enum type setting values. Each enum type is represented by a number, this representation is stored in the definitions.",
                          {
                            "$ul": [
                              "**value**: The value of this enum"
                            ]
                          }
                        ],
                        [
                          "**stringMapValue**: A string->string map value that can hold a map of string keys to string values. The maximum length of each string is 200 characters and there can be a maximum of 50 key-value pairs in the map.",
                          {
                            "$ul": [
                              "**mappings**: The key-value pairs in the map"
                            ]
                          }
                        ],
                        [
                          "**stringSetValue**: A string set value that can hold a set of strings. The maximum length of each string is 200 characters and there can be a maximum of 50 strings in the string set.",
                          {
                            "$ul": [
                              "**values**: The strings in the set"
                            ]
                          }
                        ],
                        "**stringValue**: Defines this value as being a string value."
                      ]
                    }
                  ],
                  "**description**: A detailed description of what this setting does.",
                  "**displayName**: The human readable name for this setting.",
                  "**readOnly**: A flag indicating that values of this setting cannot be modified. See documentation for the specific setting for updates and reasons."
                ]
              }
            ],
            "**name**: The resource name of the setting. Must be in one of the following forms: * `projects/{project_number}/settings/{setting_name}` * `folders/{folder_id}/settings/{setting_name}` * `organizations/{organization_id}/settings/{setting_name}` For example, \"/projects/123/settings/gcp-enableMyFeature\""
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
