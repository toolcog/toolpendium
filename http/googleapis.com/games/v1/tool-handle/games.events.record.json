{
  "name": "games_events_record",
  "description": "Records a batch of changes to the number of times events have occurred for the currently authenticated user of this application.",
  "parameters": {
    "type": "object",
    "properties": {
      "language": {
        "type": "string",
        "description": "The preferred language to use for strings returned by this method."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/EventRecordRequest"
      }
    },
    "$defs": {
      "EventRecordRequest": {
        "description": "An event period update resource.",
        "properties": {
          "currentTimeMillis": {
            "description": "The current time when this update was sent, in milliseconds, since 1970 UTC (Unix Epoch).",
            "format": "int64",
            "type": "string"
          },
          "kind": {
            "description": "Uniquely identifies the type of this resource. Value is always the fixed string `games#eventRecordRequest`.",
            "type": "string"
          },
          "requestId": {
            "description": "The request ID used to identify this attempt to record events.",
            "format": "int64",
            "type": "string"
          },
          "timePeriods": {
            "description": "A list of the time period updates being made in this request.",
            "items": {
              "$ref": "#/$defs/EventPeriodUpdate"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EventPeriodUpdate": {
        "description": "An event period update resource.",
        "properties": {
          "kind": {
            "description": "Uniquely identifies the type of this resource. Value is always the fixed string `games#eventPeriodUpdate`.",
            "type": "string"
          },
          "timePeriod": {
            "$ref": "#/$defs/EventPeriodRange"
          },
          "updates": {
            "description": "The updates being made for this time period.",
            "items": {
              "$ref": "#/$defs/EventUpdateRequest"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EventPeriodRange": {
        "description": "An event period time range.",
        "properties": {
          "kind": {
            "description": "Uniquely identifies the type of this resource. Value is always the fixed string `games#eventPeriodRange`.",
            "type": "string"
          },
          "periodEndMillis": {
            "description": "The time when this update period ends, in millis, since 1970 UTC (Unix Epoch).",
            "format": "int64",
            "type": "string"
          },
          "periodStartMillis": {
            "description": "The time when this update period begins, in millis, since 1970 UTC (Unix Epoch).",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EventUpdateRequest": {
        "description": "An event period update resource.",
        "properties": {
          "definitionId": {
            "description": "The ID of the event being modified in this update.",
            "type": "string"
          },
          "kind": {
            "description": "Uniquely identifies the type of this resource. Value is always the fixed string `games#eventUpdateRequest`.",
            "type": "string"
          },
          "updateCount": {
            "description": "The number of times this event occurred in this time period.",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://games.googleapis.com//games/v1/events{?language,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "An event period update resource.",
        "**Key properties:**",
        {
          "$ul": [
            "**batchFailures**: Any batch-wide failures which occurred applying updates.",
            "**eventFailures**: Any failures updating a particular event.",
            "**kind**: Uniquely identifies the type of this resource. Value is always the fixed string `games#eventUpdateResponse`.",
            "**playerEvents**: The current status of any updated events"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
