{
  "name": "games_achievements_updateMultiple",
  "description": "Updates multiple achievements for the currently authenticated player.",
  "parameters": {
    "type": "object",
    "properties": {
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/AchievementUpdateMultipleRequest"
      }
    },
    "$defs": {
      "AchievementUpdateMultipleRequest": {
        "description": "A list of achievement update requests.",
        "properties": {
          "kind": {
            "description": "Uniquely identifies the type of this resource. Value is always the fixed string `games#achievementUpdateMultipleRequest`.",
            "type": "string"
          },
          "updates": {
            "description": "The individual achievement update requests.",
            "items": {
              "$ref": "#/$defs/AchievementUpdateRequest"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AchievementUpdateRequest": {
        "description": "A request to update an achievement.",
        "properties": {
          "achievementId": {
            "description": "The achievement this update is being applied to.",
            "type": "string"
          },
          "incrementPayload": {
            "$ref": "#/$defs/GamesAchievementIncrement"
          },
          "kind": {
            "description": "Uniquely identifies the type of this resource. Value is always the fixed string `games#achievementUpdateRequest`.",
            "type": "string"
          },
          "setStepsAtLeastPayload": {
            "$ref": "#/$defs/GamesAchievementSetStepsAtLeast"
          },
          "updateType": {
            "description": "The type of update being applied.",
            "enum": [
              "REVEAL",
              "UNLOCK",
              "INCREMENT",
              "SET_STEPS_AT_LEAST"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "GamesAchievementIncrement": {
        "description": "The payload to request to increment an achievement.",
        "properties": {
          "kind": {
            "description": "Uniquely identifies the type of this resource. Value is always the fixed string `games#GamesAchievementIncrement`.",
            "type": "string"
          },
          "requestId": {
            "description": "The requestId associated with an increment to an achievement.",
            "format": "int64",
            "type": "string"
          },
          "steps": {
            "description": "The number of steps to be incremented.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GamesAchievementSetStepsAtLeast": {
        "description": "The payload to request to increment an achievement.",
        "properties": {
          "kind": {
            "description": "Uniquely identifies the type of this resource. Value is always the fixed string `games#GamesAchievementSetStepsAtLeast`.",
            "type": "string"
          },
          "steps": {
            "description": "The minimum number of steps for the achievement to be set to.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://games.googleapis.com//games/v1/achievements/updateMultiple{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Response message for UpdateMultipleAchievements rpc.",
        "**Key properties:**",
        {
          "$ul": [
            "**kind**: Uniquely identifies the type of this resource. Value is always the fixed string `games#achievementUpdateMultipleResponse`.",
            "**updatedAchievements**: The updated state of the achievements."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
