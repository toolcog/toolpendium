{
  "name": "games_scores_get",
  "description": "Get high scores, and optionally ranks, in leaderboards for the currently authenticated player. For a specific time span, `leaderboardId` can be set to `ALL` to retrieve data for all leaderboards in a given time span. `NOTE: You cannot ask for 'ALL' leaderboards and 'ALL' timeSpans in the same request; only one parameter may be set to 'ALL'.",
  "parameters": {
    "type": "object",
    "properties": {
      "playerId": {
        "type": "string",
        "description": "A player ID. A value of `me` may be used in place of the authenticated player's ID."
      },
      "leaderboardId": {
        "type": "string",
        "description": "The ID of the leaderboard. Can be set to 'ALL' to retrieve data for all leaderboards for this application."
      },
      "timeSpan": {
        "enum": [
          "ALL",
          "ALL_TIME",
          "WEEKLY",
          "DAILY"
        ],
        "type": "string",
        "description": "The time span for the scores and ranks you're requesting."
      },
      "includeRankType": {
        "enum": [
          "ALL",
          "PUBLIC",
          "SOCIAL",
          "FRIENDS"
        ],
        "type": "string",
        "description": "The types of ranks to return. If the parameter is omitted, no ranks will be returned."
      },
      "language": {
        "type": "string",
        "description": "The preferred language to use for strings returned by this method."
      },
      "maxResults": {
        "type": "integer",
        "description": "The maximum number of leaderboard scores to return in the response. For any response, the actual number of leaderboard scores returned may be less than the specified `maxResults`."
      },
      "pageToken": {
        "type": "string",
        "description": "The token returned by the previous request."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      }
    },
    "required": [
      "playerId",
      "leaderboardId",
      "timeSpan"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://games.googleapis.com//games/v1/players/{playerId}/leaderboards/{leaderboardId}/scores/{timeSpan}{?includeRankType,language,maxResults,pageToken,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A list of player leaderboard scores.",
        "**Key properties:**",
        {
          "$ul": [
            "**items**: The leaderboard scores.",
            "**kind**: Uniquely identifies the type of this resource. Value is always the fixed string `games#playerLeaderboardScoreListResponse`.",
            "**nextPageToken**: The pagination token for the next page of results.",
            [
              "**player**: A Player resource.",
              {
                "$ul": [
                  "**avatarImageUrl**: The base URL for the image that represents the player.",
                  "**bannerUrlLandscape**: The url to the landscape mode player banner image.",
                  "**bannerUrlPortrait**: The url to the portrait mode player banner image.",
                  "**displayName**: The name to display for the player.",
                  [
                    "**experienceInfo**: 1P/3P metadata about the player's experience.",
                    {
                      "$ul": [
                        "**currentExperiencePoints**: The current number of experience points for the player.",
                        [
                          "**currentLevel**: 1P/3P metadata about a user's level.",
                          {
                            "$ul": [
                              "**kind**: Uniquely identifies the type of this resource. Value is always the fixed string `games#playerLevel`.",
                              "**level**: The level for the user.",
                              "**maxExperiencePoints**: The maximum experience points for this level.",
                              "**minExperiencePoints**: The minimum experience points for this level."
                            ]
                          }
                        ],
                        "**kind**: Uniquely identifies the type of this resource. Value is always the fixed string `games#playerExperienceInfo`.",
                        "**lastLevelUpTimestampMillis**: The timestamp when the player was leveled up, in millis since Unix epoch UTC.",
                        [
                          "**nextLevel**: 1P/3P metadata about a user's level.",
                          {
                            "$ul": [
                              "**kind**: Uniquely identifies the type of this resource. Value is always the fixed string `games#playerLevel`.",
                              "**level**: The level for the user.",
                              "**maxExperiencePoints**: The maximum experience points for this level.",
                              "**minExperiencePoints**: The minimum experience points for this level."
                            ]
                          }
                        ]
                      ]
                    }
                  ],
                  "**friendStatus**: The friend status of the given player, relative to the requester. This is unset if the player is not sharing their friends list with the game.",
                  "**gamePlayerId**: Per-application unique player identifier.",
                  "**kind**: Uniquely identifies the type of this resource. Value is always the fixed string `games#player`",
                  [
                    "**name**: A representation of the individual components of the name.",
                    {
                      "$ul": [
                        "**familyName**: The family name of this player. In some places, this is known as the last name.",
                        "**givenName**: The given name of this player. In some places, this is known as the first name."
                      ]
                    }
                  ],
                  "**originalPlayerId**: The player ID that was used for this player the first time they signed into the game in question. This is only populated for calls to player.get for the requesting player, only if the player ID has subsequently changed, and only to clients that support remapping player IDs.",
                  "**playerId**: The ID of the player.",
                  [
                    "**profileSettings**: Profile settings",
                    {
                      "$ul": [
                        "**friendsListVisibility**",
                        "**kind**: Uniquely identifies the type of this resource. Value is always the fixed string `games#profileSettings`.",
                        "**profileVisible**: Whether the player's profile is visible to the currently signed in player."
                      ]
                    }
                  ],
                  "**title**: The player's title rewarded for their game activities."
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
