{
  "name": "speech_speech_recognize",
  "description": "Performs synchronous speech recognition: receive results after all audio has been sent and processed.",
  "parameters": {
    "type": "object",
    "properties": {
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/RecognizeRequest"
      }
    },
    "$defs": {
      "RecognizeRequest": {
        "description": "The top-level message sent by the client for the `Recognize` method.",
        "properties": {
          "audio": {
            "$ref": "#/$defs/RecognitionAudio"
          },
          "config": {
            "$ref": "#/$defs/RecognitionConfig"
          }
        },
        "type": "object"
      },
      "RecognitionAudio": {
        "description": "Contains audio data in the encoding specified in the `RecognitionConfig`. Either `content` or `uri` must be supplied. Supplying both or neither returns google.rpc.Code.INVALID_ARGUMENT. See [content limits](https://cloud.google.com/speech-to-text/quotas#content).",
        "properties": {
          "content": {
            "description": "The audio data bytes encoded as specified in `RecognitionConfig`. Note: as with all bytes fields, proto buffers use a pure binary representation, whereas JSON representations use base64.",
            "format": "byte",
            "type": "string"
          },
          "uri": {
            "description": "URI that points to a file that contains audio data bytes as specified in `RecognitionConfig`. The file must not be compressed (for example, gzip). Currently, only Google Cloud Storage URIs are supported, which must be specified in the following format: `gs://bucket_name/object_name` (other URI formats return google.rpc.Code.INVALID_ARGUMENT). For more information, see [Request URIs](https://cloud.google.com/storage/docs/reference-uris).",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RecognitionConfig": {
        "description": "Provides information to the recognizer that specifies how to process the request.",
        "properties": {
          "adaptation": {
            "$ref": "#/$defs/SpeechAdaptation"
          },
          "alternativeLanguageCodes": {
            "description": "A list of up to 3 additional [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tags, listing possible alternative languages of the supplied audio. See [Language Support](https://cloud.google.com/speech-to-text/docs/languages) for a list of the currently supported language codes. If alternative languages are listed, recognition result will contain recognition in the most likely language detected including the main language_code. The recognition result will include the language tag of the language detected in the audio. Note: This feature is only supported for Voice Command and Voice Search use cases and performance may vary for other use cases (e.g., phone call transcription).",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "audioChannelCount": {
            "description": "The number of channels in the input audio data. ONLY set this for MULTI-CHANNEL recognition. Valid values for LINEAR16, OGG_OPUS and FLAC are `1`-`8`. Valid value for MULAW, AMR, AMR_WB and SPEEX_WITH_HEADER_BYTE is only `1`. If `0` or omitted, defaults to one channel (mono). Note: We only recognize the first channel by default. To perform independent recognition on each channel set `enable_separate_recognition_per_channel` to 'true'.",
            "format": "int32",
            "type": "integer"
          },
          "diarizationConfig": {
            "$ref": "#/$defs/SpeakerDiarizationConfig"
          },
          "diarizationSpeakerCount": {
            "deprecated": true,
            "description": "If set, specifies the estimated number of speakers in the conversation. Defaults to '2'. Ignored unless enable_speaker_diarization is set to true. Note: Use diarization_config instead.",
            "format": "int32",
            "type": "integer"
          },
          "enableAutomaticPunctuation": {
            "description": "If 'true', adds punctuation to recognition result hypotheses. This feature is only available in select languages. Setting this for requests in other languages has no effect at all. The default 'false' value does not add punctuation to result hypotheses.",
            "type": "boolean"
          },
          "enableSeparateRecognitionPerChannel": {
            "description": "This needs to be set to `true` explicitly and `audio_channel_count` > 1 to get each channel recognized separately. The recognition result will contain a `channel_tag` field to state which channel that result belongs to. If this is not true, we will only recognize the first channel. The request is billed cumulatively for all channels recognized: `audio_channel_count` multiplied by the length of the audio.",
            "type": "boolean"
          },
          "enableSpeakerDiarization": {
            "deprecated": true,
            "description": "If 'true', enables speaker detection for each recognized word in the top alternative of the recognition result using a speaker_label provided in the WordInfo. Note: Use diarization_config instead.",
            "type": "boolean"
          },
          "enableSpokenEmojis": {
            "description": "The spoken emoji behavior for the call If not set, uses default behavior based on model of choice If 'true', adds spoken emoji formatting for the request. This will replace spoken emojis with the corresponding Unicode symbols in the final transcript. If 'false', spoken emojis are not replaced.",
            "type": "boolean"
          },
          "enableSpokenPunctuation": {
            "description": "The spoken punctuation behavior for the call If not set, uses default behavior based on model of choice e.g. command_and_search will enable spoken punctuation by default If 'true', replaces spoken punctuation with the corresponding symbols in the request. For example, \"how are you question mark\" becomes \"how are you?\". See https://cloud.google.com/speech-to-text/docs/spoken-punctuation for support. If 'false', spoken punctuation is not replaced.",
            "type": "boolean"
          },
          "enableWordConfidence": {
            "description": "If `true`, the top result includes a list of words and the confidence for those words. If `false`, no word-level confidence information is returned. The default is `false`.",
            "type": "boolean"
          },
          "enableWordTimeOffsets": {
            "description": "If `true`, the top result includes a list of words and the start and end time offsets (timestamps) for those words. If `false`, no word-level time offset information is returned. The default is `false`.",
            "type": "boolean"
          },
          "encoding": {
            "description": "Encoding of audio data sent in all `RecognitionAudio` messages. This field is optional for `FLAC` and `WAV` audio files and required for all other audio formats. For details, see AudioEncoding.",
            "enum": [
              "ENCODING_UNSPECIFIED",
              "LINEAR16",
              "FLAC",
              "MULAW",
              "AMR",
              "AMR_WB",
              "OGG_OPUS",
              "SPEEX_WITH_HEADER_BYTE",
              "MP3",
              "WEBM_OPUS"
            ],
            "type": "string"
          },
          "languageCode": {
            "description": "Required. The language of the supplied audio as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: \"en-US\". See [Language Support](https://cloud.google.com/speech-to-text/docs/languages) for a list of the currently supported language codes.",
            "type": "string"
          },
          "maxAlternatives": {
            "description": "Maximum number of recognition hypotheses to be returned. Specifically, the maximum number of `SpeechRecognitionAlternative` messages within each `SpeechRecognitionResult`. The server may return fewer than `max_alternatives`. Valid values are `0`-`30`. A value of `0` or `1` will return a maximum of one. If omitted, will return a maximum of one.",
            "format": "int32",
            "type": "integer"
          },
          "metadata": {
            "$ref": "#/$defs/RecognitionMetadata"
          },
          "model": {
            "description": "Which model to select for the given request. Select the model best suited to your domain to get best results. If a model is not explicitly specified, then we auto-select a model based on the parameters in the RecognitionConfig. *Model* *Description* latest_long Best for long form content like media or conversation. latest_short Best for short form content like commands or single shot directed speech. command_and_search Best for short queries such as voice commands or voice search. phone_call Best for audio that originated from a phone call (typically recorded at an 8khz sampling rate). video Best for audio that originated from video or includes multiple speakers. Ideally the audio is recorded at a 16khz or greater sampling rate. This is a premium model that costs more than the standard rate. default Best for audio that is not one of the specific audio models. For example, long-form audio. Ideally the audio is high-fidelity, recorded at a 16khz or greater sampling rate. medical_conversation Best for audio that originated from a conversation between a medical provider and patient. medical_dictation Best for audio that originated from dictation notes by a medical provider. ",
            "type": "string"
          },
          "profanityFilter": {
            "description": "If set to `true`, the server will attempt to filter out profanities, replacing all but the initial character in each filtered word with asterisks, e.g. \"f***\". If set to `false` or omitted, profanities won't be filtered out.",
            "type": "boolean"
          },
          "sampleRateHertz": {
            "description": "Sample rate in Hertz of the audio data sent in all `RecognitionAudio` messages. Valid values are: 8000-48000. 16000 is optimal. For best results, set the sampling rate of the audio source to 16000 Hz. If that's not possible, use the native sample rate of the audio source (instead of re-sampling). This field is optional for FLAC and WAV audio files, but is required for all other audio formats. For details, see AudioEncoding.",
            "format": "int32",
            "type": "integer"
          },
          "speechContexts": {
            "description": "Array of SpeechContext. A means to provide context to assist the speech recognition. For more information, see [speech adaptation](https://cloud.google.com/speech-to-text/docs/adaptation).",
            "items": {
              "$ref": "#/$defs/SpeechContext"
            },
            "type": "array"
          },
          "transcriptNormalization": {
            "$ref": "#/$defs/TranscriptNormalization"
          },
          "useEnhanced": {
            "description": "Set to true to use an enhanced model for speech recognition. If `use_enhanced` is set to true and the `model` field is not set, then an appropriate enhanced model is chosen if an enhanced model exists for the audio. If `use_enhanced` is true and an enhanced version of the specified model does not exist, then the speech is recognized using the standard version of the specified model.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "SpeechAdaptation": {
        "description": "Speech adaptation configuration.",
        "properties": {
          "abnfGrammar": {
            "$ref": "#/$defs/ABNFGrammar"
          },
          "customClasses": {
            "description": "A collection of custom classes. To specify the classes inline, leave the class' `name` blank and fill in the rest of its fields, giving it a unique `custom_class_id`. Refer to the inline defined class in phrase hints by its `custom_class_id`.",
            "items": {
              "$ref": "#/$defs/CustomClass"
            },
            "type": "array"
          },
          "phraseSetReferences": {
            "description": "A collection of phrase set resource names to use.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "phraseSets": {
            "description": "A collection of phrase sets. To specify the hints inline, leave the phrase set's `name` blank and fill in the rest of its fields. Any phrase set can use any custom class.",
            "items": {
              "$ref": "#/$defs/PhraseSet"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ABNFGrammar": {
        "properties": {
          "abnfStrings": {
            "description": "All declarations and rules of an ABNF grammar broken up into multiple strings that will end up concatenated.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "CustomClass": {
        "description": "A set of words or phrases that represents a common concept likely to appear in your audio, for example a list of passenger ship names. CustomClass items can be substituted into placeholders that you set in PhraseSet phrases.",
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Output only. Allows users to store small amounts of arbitrary data. Both the key and the value must be 63 characters or less each. At most 100 annotations. This field is not used.",
            "readOnly": true,
            "type": "object"
          },
          "customClassId": {
            "description": "If this custom class is a resource, the custom_class_id is the resource id of the CustomClass. Case sensitive.",
            "type": "string"
          },
          "deleteTime": {
            "description": "Output only. The time at which this resource was requested for deletion. This field is not used.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "Output only. User-settable, human-readable name for the CustomClass. Must be 63 characters or less. This field is not used.",
            "readOnly": true,
            "type": "string"
          },
          "etag": {
            "description": "Output only. This checksum is computed by the server based on the value of other fields. This may be sent on update, undelete, and delete requests to ensure the client has an up-to-date value before proceeding. This field is not used.",
            "readOnly": true,
            "type": "string"
          },
          "expireTime": {
            "description": "Output only. The time at which this resource will be purged. This field is not used.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "items": {
            "description": "A collection of class items.",
            "items": {
              "$ref": "#/$defs/ClassItem"
            },
            "type": "array"
          },
          "kmsKeyName": {
            "description": "Output only. The [KMS key name](https://cloud.google.com/kms/docs/resource-hierarchy#keys) with which the content of the ClassItem is encrypted. The expected format is `projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{crypto_key}`.",
            "readOnly": true,
            "type": "string"
          },
          "kmsKeyVersionName": {
            "description": "Output only. The [KMS key version name](https://cloud.google.com/kms/docs/resource-hierarchy#key_versions) with which content of the ClassItem is encrypted. The expected format is `projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{crypto_key}/cryptoKeyVersions/{crypto_key_version}`.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "The resource name of the custom class.",
            "type": "string"
          },
          "reconciling": {
            "description": "Output only. Whether or not this CustomClass is in the process of being updated. This field is not used.",
            "readOnly": true,
            "type": "boolean"
          },
          "state": {
            "description": "Output only. The CustomClass lifecycle state. This field is not used.",
            "enum": [
              "STATE_UNSPECIFIED",
              "ACTIVE",
              "DELETED"
            ],
            "readOnly": true,
            "type": "string"
          },
          "uid": {
            "description": "Output only. System-assigned unique identifier for the CustomClass. This field is not used.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ClassItem": {
        "description": "An item of the class.",
        "properties": {
          "value": {
            "description": "The class item's value.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PhraseSet": {
        "description": "Provides \"hints\" to the speech recognizer to favor specific words and phrases in the results.",
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Output only. Allows users to store small amounts of arbitrary data. Both the key and the value must be 63 characters or less each. At most 100 annotations. This field is not used.",
            "readOnly": true,
            "type": "object"
          },
          "boost": {
            "description": "Hint Boost. Positive value will increase the probability that a specific phrase will be recognized over other similar sounding phrases. The higher the boost, the higher the chance of false positive recognition as well. Negative boost values would correspond to anti-biasing. Anti-biasing is not enabled, so negative boost will simply be ignored. Though `boost` can accept a wide range of positive values, most use cases are best served with values between 0 (exclusive) and 20. We recommend using a binary search approach to finding the optimal value for your use case as well as adding phrases both with and without boost to your requests.",
            "format": "float",
            "type": "number"
          },
          "deleteTime": {
            "description": "Output only. The time at which this resource was requested for deletion. This field is not used.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "Output only. User-settable, human-readable name for the PhraseSet. Must be 63 characters or less. This field is not used.",
            "readOnly": true,
            "type": "string"
          },
          "etag": {
            "description": "Output only. This checksum is computed by the server based on the value of other fields. This may be sent on update, undelete, and delete requests to ensure the client has an up-to-date value before proceeding. This field is not used.",
            "readOnly": true,
            "type": "string"
          },
          "expireTime": {
            "description": "Output only. The time at which this resource will be purged. This field is not used.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "kmsKeyName": {
            "description": "Output only. The [KMS key name](https://cloud.google.com/kms/docs/resource-hierarchy#keys) with which the content of the PhraseSet is encrypted. The expected format is `projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{crypto_key}`.",
            "readOnly": true,
            "type": "string"
          },
          "kmsKeyVersionName": {
            "description": "Output only. The [KMS key version name](https://cloud.google.com/kms/docs/resource-hierarchy#key_versions) with which content of the PhraseSet is encrypted. The expected format is `projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{crypto_key}/cryptoKeyVersions/{crypto_key_version}`.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "The resource name of the phrase set.",
            "type": "string"
          },
          "phrases": {
            "description": "A list of word and phrases.",
            "items": {
              "$ref": "#/$defs/Phrase"
            },
            "type": "array"
          },
          "reconciling": {
            "description": "Output only. Whether or not this PhraseSet is in the process of being updated. This field is not used.",
            "readOnly": true,
            "type": "boolean"
          },
          "state": {
            "description": "Output only. The CustomClass lifecycle state. This field is not used.",
            "enum": [
              "STATE_UNSPECIFIED",
              "ACTIVE",
              "DELETED"
            ],
            "readOnly": true,
            "type": "string"
          },
          "uid": {
            "description": "Output only. System-assigned unique identifier for the PhraseSet. This field is not used.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "Phrase": {
        "description": "A phrases containing words and phrase \"hints\" so that the speech recognition is more likely to recognize them. This can be used to improve the accuracy for specific words and phrases, for example, if specific commands are typically spoken by the user. This can also be used to add additional words to the vocabulary of the recognizer. See [usage limits](https://cloud.google.com/speech-to-text/quotas#content). List items can also include pre-built or custom classes containing groups of words that represent common concepts that occur in natural language. For example, rather than providing a phrase hint for every month of the year (e.g. \"i was born in january\", \"i was born in febuary\", ...), use the pre-built `$MONTH` class improves the likelihood of correctly transcribing audio that includes months (e.g. \"i was born in $month\"). To refer to pre-built classes, use the class' symbol prepended with `$` e.g. `$MONTH`. To refer to custom classes that were defined inline in the request, set the class's `custom_class_id` to a string unique to all class resources and inline classes. Then use the class' id wrapped in $`{...}` e.g. \"${my-months}\". To refer to custom classes resources, use the class' id wrapped in `${}` (e.g. `${my-months}`). Speech-to-Text supports three locations: `global`, `us` (US North America), and `eu` (Europe). If you are calling the `speech.googleapis.com` endpoint, use the `global` location. To specify a region, use a [regional endpoint](https://cloud.google.com/speech-to-text/docs/endpoints) with matching `us` or `eu` location value.",
        "properties": {
          "boost": {
            "description": "Hint Boost. Overrides the boost set at the phrase set level. Positive value will increase the probability that a specific phrase will be recognized over other similar sounding phrases. The higher the boost, the higher the chance of false positive recognition as well. Negative boost will simply be ignored. Though `boost` can accept a wide range of positive values, most use cases are best served with values between 0 and 20. We recommend using a binary search approach to finding the optimal value for your use case as well as adding phrases both with and without boost to your requests.",
            "format": "float",
            "type": "number"
          },
          "value": {
            "description": "The phrase itself.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SpeakerDiarizationConfig": {
        "description": "Config to enable speaker diarization.",
        "properties": {
          "enableSpeakerDiarization": {
            "description": "If 'true', enables speaker detection for each recognized word in the top alternative of the recognition result using a speaker_label provided in the WordInfo.",
            "type": "boolean"
          },
          "maxSpeakerCount": {
            "description": "Maximum number of speakers in the conversation. This range gives you more flexibility by allowing the system to automatically determine the correct number of speakers. If not set, the default value is 6.",
            "format": "int32",
            "type": "integer"
          },
          "minSpeakerCount": {
            "description": "Minimum number of speakers in the conversation. This range gives you more flexibility by allowing the system to automatically determine the correct number of speakers. If not set, the default value is 2.",
            "format": "int32",
            "type": "integer"
          },
          "speakerTag": {
            "deprecated": true,
            "description": "Output only. Unused.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "RecognitionMetadata": {
        "deprecated": true,
        "description": "Description of audio data to be recognized.",
        "properties": {
          "audioTopic": {
            "description": "Description of the content. Eg. \"Recordings of federal supreme court hearings from 2012\".",
            "type": "string"
          },
          "industryNaicsCodeOfAudio": {
            "description": "The industry vertical to which this speech recognition request most closely applies. This is most indicative of the topics contained in the audio. Use the 6-digit NAICS code to identify the industry vertical - see https://www.naics.com/search/.",
            "format": "uint32",
            "type": "integer"
          },
          "interactionType": {
            "description": "The use case most closely describing the audio content to be recognized.",
            "enum": [
              "INTERACTION_TYPE_UNSPECIFIED",
              "DISCUSSION",
              "PRESENTATION",
              "PHONE_CALL",
              "VOICEMAIL",
              "PROFESSIONALLY_PRODUCED",
              "VOICE_SEARCH",
              "VOICE_COMMAND",
              "DICTATION"
            ],
            "type": "string"
          },
          "microphoneDistance": {
            "description": "The audio type that most closely describes the audio being recognized.",
            "enum": [
              "MICROPHONE_DISTANCE_UNSPECIFIED",
              "NEARFIELD",
              "MIDFIELD",
              "FARFIELD"
            ],
            "type": "string"
          },
          "obfuscatedId": {
            "deprecated": true,
            "description": "Obfuscated (privacy-protected) ID of the user, to identify number of unique users using the service.",
            "format": "int64",
            "type": "string"
          },
          "originalMediaType": {
            "description": "The original media the speech was recorded on.",
            "enum": [
              "ORIGINAL_MEDIA_TYPE_UNSPECIFIED",
              "AUDIO",
              "VIDEO"
            ],
            "type": "string"
          },
          "originalMimeType": {
            "description": "Mime type of the original audio file. For example `audio/m4a`, `audio/x-alaw-basic`, `audio/mp3`, `audio/3gpp`. A list of possible audio mime types is maintained at http://www.iana.org/assignments/media-types/media-types.xhtml#audio",
            "type": "string"
          },
          "recordingDeviceName": {
            "description": "The device used to make the recording. Examples 'Nexus 5X' or 'Polycom SoundStation IP 6000' or 'POTS' or 'VoIP' or 'Cardioid Microphone'.",
            "type": "string"
          },
          "recordingDeviceType": {
            "description": "The type of device the speech was recorded with.",
            "enum": [
              "RECORDING_DEVICE_TYPE_UNSPECIFIED",
              "SMARTPHONE",
              "PC",
              "PHONE_LINE",
              "VEHICLE",
              "OTHER_OUTDOOR_DEVICE",
              "OTHER_INDOOR_DEVICE"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "SpeechContext": {
        "description": "Provides \"hints\" to the speech recognizer to favor specific words and phrases in the results.",
        "properties": {
          "boost": {
            "description": "Hint Boost. Positive value will increase the probability that a specific phrase will be recognized over other similar sounding phrases. The higher the boost, the higher the chance of false positive recognition as well. Negative boost values would correspond to anti-biasing. Anti-biasing is not enabled, so negative boost will simply be ignored. Though `boost` can accept a wide range of positive values, most use cases are best served with values between 0 and 20. We recommend using a binary search approach to finding the optimal value for your use case.",
            "format": "float",
            "type": "number"
          },
          "phrases": {
            "description": "A list of strings containing words and phrases \"hints\" so that the speech recognition is more likely to recognize them. This can be used to improve the accuracy for specific words and phrases, for example, if specific commands are typically spoken by the user. This can also be used to add additional words to the vocabulary of the recognizer. See [usage limits](https://cloud.google.com/speech-to-text/quotas#content). List items can also be set to classes for groups of words that represent common concepts that occur in natural language. For example, rather than providing phrase hints for every month of the year, using the $MONTH class improves the likelihood of correctly transcribing audio that includes months.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "TranscriptNormalization": {
        "description": "Transcription normalization configuration. Use transcription normalization to automatically replace parts of the transcript with phrases of your choosing. For StreamingRecognize, this normalization only applies to stable partial transcripts (stability > 0.8) and final transcripts.",
        "properties": {
          "entries": {
            "description": "A list of replacement entries. We will perform replacement with one entry at a time. For example, the second entry in [\"cat\" => \"dog\", \"mountain cat\" => \"mountain dog\"] will never be applied because we will always process the first entry before it. At most 100 entries.",
            "items": {
              "$ref": "#/$defs/Entry"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Entry": {
        "description": "A single replacement configuration.",
        "properties": {
          "caseSensitive": {
            "description": "Whether the search is case sensitive.",
            "type": "boolean"
          },
          "replace": {
            "description": "What to replace with. Max length is 100 characters.",
            "type": "string"
          },
          "search": {
            "description": "What to replace. Max length is 100 characters.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://speech.googleapis.com//v1p1beta1/speech:recognize{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The only message returned to the client by the `Recognize` method. It contains the result as zero or more sequential `SpeechRecognitionResult` messages.",
        "**Key properties:**",
        {
          "$ul": [
            "**requestId**: The ID associated with the request. This is a unique ID specific only to the given request.",
            "**results**: Sequential list of transcription results corresponding to sequential portions of audio.",
            [
              "**speechAdaptationInfo**: Information on speech adaptation use in results",
              {
                "$ul": [
                  "**adaptationTimeout**: Whether there was a timeout when applying speech adaptation. If true, adaptation had no effect in the response transcript.",
                  "**timeoutMessage**: If set, returns a message specifying which part of the speech adaptation request timed out."
                ]
              }
            ],
            "**totalBilledTime**: When available, billed audio seconds for the corresponding request.",
            "**usingLegacyModels**: Whether request used legacy asr models (was not automatically migrated to use conformer models)."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
