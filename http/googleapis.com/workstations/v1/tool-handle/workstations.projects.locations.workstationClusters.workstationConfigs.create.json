{
  "name": "workstations_projects_locations_workstationClusters_workstationConfigs_create",
  "description": "Creates a new workstation configuration.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. Parent resource name."
      },
      "validateOnly": {
        "type": "boolean",
        "description": "Optional. If set, validate the request and preview the review, but do not actually apply it."
      },
      "workstationConfigId": {
        "type": "string",
        "description": "Required. ID to use for the workstation configuration."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/WorkstationConfig"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "WorkstationConfig": {
        "description": "A workstation configuration resource in the Cloud Workstations API. Workstation configurations act as templates for workstations. The workstation configuration defines details such as the workstation virtual machine (VM) instance type, persistent storage, container image defining environment, which IDE or Code Editor to use, and more. Administrators and platform teams can also use [Identity and Access Management (IAM)](https://cloud.google.com/iam/docs/overview) rules to grant access to teams or to individual developers.",
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Optional. Client-specified annotations.",
            "type": "object"
          },
          "conditions": {
            "description": "Output only. Status conditions describing the current resource state.",
            "items": {
              "$ref": "#/$defs/Status"
            },
            "readOnly": true,
            "type": "array"
          },
          "container": {
            "$ref": "#/$defs/Container"
          },
          "createTime": {
            "description": "Output only. Time when this workstation configuration was created.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "degraded": {
            "description": "Output only. Whether this resource is degraded, in which case it may require user action to restore full functionality. See also the conditions field.",
            "readOnly": true,
            "type": "boolean"
          },
          "deleteTime": {
            "description": "Output only. Time when this workstation configuration was soft-deleted.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "disableTcpConnections": {
            "description": "Optional. Disables support for plain TCP connections in the workstation. By default the service supports TCP connections via a websocket relay. Setting this option to true disables that relay, which prevents the usage of services that require plain tcp connections, such as ssh. When enabled, all communication must occur over https or wss.",
            "type": "boolean"
          },
          "displayName": {
            "description": "Optional. Human-readable name for this workstation configuration.",
            "type": "string"
          },
          "enableAuditAgent": {
            "description": "Optional. Whether to enable Linux `auditd` logging on the workstation. When enabled, a service account must also be specified that has `logging.buckets.write` permission on the project. Operating system audit logging is distinct from [Cloud Audit Logs](https://cloud.google.com/workstations/docs/audit-logging).",
            "type": "boolean"
          },
          "encryptionKey": {
            "$ref": "#/$defs/CustomerEncryptionKey"
          },
          "etag": {
            "description": "Optional. Checksum computed by the server. May be sent on update and delete requests to make sure that the client has an up-to-date value before proceeding.",
            "type": "string"
          },
          "host": {
            "$ref": "#/$defs/Host"
          },
          "idleTimeout": {
            "description": "Optional. Number of seconds to wait before automatically stopping a workstation after it last received user traffic. A value of `\"0s\"` indicates that Cloud Workstations VMs created with this configuration should never time out due to idleness. Provide [duration](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#duration) terminated by `s` for seconds—for example, `\"7200s\"` (2 hours). The default is `\"1200s\"` (20 minutes).",
            "format": "google-duration",
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Optional. [Labels](https://cloud.google.com/workstations/docs/label-resources) that are applied to the workstation configuration and that are also propagated to the underlying Compute Engine resources.",
            "type": "object"
          },
          "name": {
            "description": "Identifier. Full name of this workstation configuration.",
            "type": "string"
          },
          "persistentDirectories": {
            "description": "Optional. Directories to persist across workstation sessions.",
            "items": {
              "$ref": "#/$defs/PersistentDirectory"
            },
            "type": "array"
          },
          "readinessChecks": {
            "description": "Optional. Readiness checks to perform when starting a workstation using this workstation configuration. Mark a workstation as running only after all specified readiness checks return 200 status codes.",
            "items": {
              "$ref": "#/$defs/ReadinessCheck"
            },
            "type": "array"
          },
          "reconciling": {
            "description": "Output only. Indicates whether this workstation configuration is currently being updated to match its intended state.",
            "readOnly": true,
            "type": "boolean"
          },
          "replicaZones": {
            "description": "Optional. Immutable. Specifies the zones used to replicate the VM and disk resources within the region. If set, exactly two zones within the workstation cluster's region must be specified—for example, `['us-central1-a', 'us-central1-f']`. If this field is empty, two default zones within the region are used. Immutable after the workstation configuration is created.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "runningTimeout": {
            "description": "Optional. Number of seconds that a workstation can run until it is automatically shut down. We recommend that workstations be shut down daily to reduce costs and so that security updates can be applied upon restart. The idle_timeout and running_timeout fields are independent of each other. Note that the running_timeout field shuts down VMs after the specified time, regardless of whether or not the VMs are idle. Provide duration terminated by `s` for seconds—for example, `\"54000s\"` (15 hours). Defaults to `\"43200s\"` (12 hours). A value of `\"0s\"` indicates that workstations using this configuration should never time out. If encryption_key is set, it must be greater than `\"0s\"` and less than `\"86400s\"` (24 hours). Warning: A value of `\"0s\"` indicates that Cloud Workstations VMs created with this configuration have no maximum running time. This is strongly discouraged because you incur costs and will not pick up security updates.",
            "format": "google-duration",
            "type": "string"
          },
          "uid": {
            "description": "Output only. A system-assigned unique identifier for this workstation configuration.",
            "readOnly": true,
            "type": "string"
          },
          "updateTime": {
            "description": "Output only. Time when this workstation configuration was most recently updated.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "Status": {
        "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
        "properties": {
          "code": {
            "description": "The status code, which should be an enum value of google.rpc.Code.",
            "format": "int32",
            "type": "integer"
          },
          "details": {
            "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
            "items": {
              "additionalProperties": {
                "description": "Properties of the object. Contains field @type with type URL."
              },
              "type": "object"
            },
            "type": "array"
          },
          "message": {
            "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Container": {
        "description": "A Docker container.",
        "properties": {
          "args": {
            "description": "Optional. Arguments passed to the entrypoint.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "command": {
            "description": "Optional. If set, overrides the default ENTRYPOINT specified by the image.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "env": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Optional. Environment variables passed to the container's entrypoint.",
            "type": "object"
          },
          "image": {
            "description": "Optional. A Docker container image that defines a custom environment. Cloud Workstations provides a number of [preconfigured images](https://cloud.google.com/workstations/docs/preconfigured-base-images), but you can create your own [custom container images](https://cloud.google.com/workstations/docs/custom-container-images). If using a private image, the `host.gceInstance.serviceAccount` field must be specified in the workstation configuration. If using a custom container image, the service account must have [Artifact Registry Reader](https://cloud.google.com/artifact-registry/docs/access-control#roles) permission to pull the specified image. Otherwise, the image must be publicly accessible.",
            "type": "string"
          },
          "runAsUser": {
            "description": "Optional. If set, overrides the USER specified in the image with the given uid.",
            "format": "int32",
            "type": "integer"
          },
          "workingDir": {
            "description": "Optional. If set, overrides the default DIR specified by the image.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CustomerEncryptionKey": {
        "description": "A customer-managed encryption key (CMEK) for the Compute Engine resources of the associated workstation configuration. Specify the name of your Cloud KMS encryption key and the default service account. We recommend that you use a separate service account and follow [Cloud KMS best practices](https://cloud.google.com/kms/docs/separation-of-duties).",
        "properties": {
          "kmsKey": {
            "description": "Immutable. The name of the Google Cloud KMS encryption key. For example, `\"projects/PROJECT_ID/locations/REGION/keyRings/KEY_RING/cryptoKeys/KEY_NAME\"`. The key must be in the same region as the workstation configuration.",
            "type": "string"
          },
          "kmsKeyServiceAccount": {
            "description": "Immutable. The service account to use with the specified KMS key. We recommend that you use a separate service account and follow KMS best practices. For more information, see [Separation of duties](https://cloud.google.com/kms/docs/separation-of-duties) and `gcloud kms keys add-iam-policy-binding` [`--member`](https://cloud.google.com/sdk/gcloud/reference/kms/keys/add-iam-policy-binding#--member).",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Host": {
        "description": "Runtime host for a workstation.",
        "properties": {
          "gceInstance": {
            "$ref": "#/$defs/GceInstance"
          }
        },
        "type": "object"
      },
      "GceInstance": {
        "description": "A runtime using a Compute Engine instance.",
        "properties": {
          "bootDiskSizeGb": {
            "description": "Optional. The size of the boot disk for the VM in gigabytes (GB). The minimum boot disk size is `30` GB. Defaults to `50` GB.",
            "format": "int32",
            "type": "integer"
          },
          "confidentialInstanceConfig": {
            "$ref": "#/$defs/GceConfidentialInstanceConfig"
          },
          "disablePublicIpAddresses": {
            "description": "Optional. When set to true, disables public IP addresses for VMs. If you disable public IP addresses, you must set up Private Google Access or Cloud NAT on your network. If you use Private Google Access and you use `private.googleapis.com` or `restricted.googleapis.com` for Container Registry and Artifact Registry, make sure that you set up DNS records for domains `*.gcr.io` and `*.pkg.dev`. Defaults to false (VMs have public IP addresses).",
            "type": "boolean"
          },
          "enableNestedVirtualization": {
            "description": "Optional. Whether to enable nested virtualization on Cloud Workstations VMs created under this workstation configuration. Nested virtualization lets you run virtual machine (VM) instances inside your workstation. Before enabling nested virtualization, consider the following important considerations. Cloud Workstations instances are subject to the [same restrictions as Compute Engine instances](https://cloud.google.com/compute/docs/instances/nested-virtualization/overview#restrictions): * **Organization policy**: projects, folders, or organizations may be restricted from creating nested VMs if the **Disable VM nested virtualization** constraint is enforced in the organization policy. For more information, see the Compute Engine section, [Checking whether nested virtualization is allowed](https://cloud.google.com/compute/docs/instances/nested-virtualization/managing-constraint#checking_whether_nested_virtualization_is_allowed). * **Performance**: nested VMs might experience a 10% or greater decrease in performance for workloads that are CPU-bound and possibly greater than a 10% decrease for workloads that are input/output bound. * **Machine Type**: nested virtualization can only be enabled on workstation configurations that specify a machine_type in the N1 or N2 machine series. * **GPUs**: nested virtualization may not be enabled on workstation configurations with accelerators. * **Operating System**: Because [Container-Optimized OS](https://cloud.google.com/compute/docs/images/os-details#container-optimized_os_cos) does not support nested virtualization, when nested virtualization is enabled, the underlying Compute Engine VM instances boot from an [Ubuntu LTS](https://cloud.google.com/compute/docs/images/os-details#ubuntu_lts) image.",
            "type": "boolean"
          },
          "machineType": {
            "description": "Optional. The type of machine to use for VM instances—for example, `\"e2-standard-4\"`. For more information about machine types that Cloud Workstations supports, see the list of [available machine types](https://cloud.google.com/workstations/docs/available-machine-types).",
            "type": "string"
          },
          "poolSize": {
            "description": "Optional. The number of VMs that the system should keep idle so that new workstations can be started quickly for new users. Defaults to `0` in the API.",
            "format": "int32",
            "type": "integer"
          },
          "pooledInstances": {
            "description": "Output only. Number of instances currently available in the pool for faster workstation startup.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "serviceAccount": {
            "description": "Optional. The email address of the service account for Cloud Workstations VMs created with this configuration. When specified, be sure that the service account has `logginglogEntries.create` permission on the project so it can write logs out to Cloud Logging. If using a custom container image, the service account must have [Artifact Registry Reader](https://cloud.google.com/artifact-registry/docs/access-control#roles) permission to pull the specified image. If you as the administrator want to be able to `ssh` into the underlying VM, you need to set this value to a service account for which you have the `iam.serviceAccounts.actAs` permission. Conversely, if you don't want anyone to be able to `ssh` into the underlying VM, use a service account where no one has that permission. If not set, VMs run with a service account provided by the Cloud Workstations service, and the image must be publicly accessible.",
            "type": "string"
          },
          "serviceAccountScopes": {
            "description": "Optional. Scopes to grant to the service_account. Various scopes are automatically added based on feature usage. When specified, users of workstations under this configuration must have `iam.serviceAccounts.actAs` on the service account.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "shieldedInstanceConfig": {
            "$ref": "#/$defs/GceShieldedInstanceConfig"
          },
          "tags": {
            "description": "Optional. Network tags to add to the Compute Engine VMs backing the workstations. This option applies [network tags](https://cloud.google.com/vpc/docs/add-remove-network-tags) to VMs created with this configuration. These network tags enable the creation of [firewall rules](https://cloud.google.com/workstations/docs/configure-firewall-rules).",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GceConfidentialInstanceConfig": {
        "description": "A set of Compute Engine Confidential VM instance options.",
        "properties": {
          "enableConfidentialCompute": {
            "description": "Optional. Whether the instance has confidential compute enabled.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GceShieldedInstanceConfig": {
        "description": "A set of Compute Engine Shielded instance options.",
        "properties": {
          "enableIntegrityMonitoring": {
            "description": "Optional. Whether the instance has integrity monitoring enabled.",
            "type": "boolean"
          },
          "enableSecureBoot": {
            "description": "Optional. Whether the instance has Secure Boot enabled.",
            "type": "boolean"
          },
          "enableVtpm": {
            "description": "Optional. Whether the instance has the vTPM enabled.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "PersistentDirectory": {
        "description": "A directory to persist across workstation sessions.",
        "properties": {
          "gcePd": {
            "$ref": "#/$defs/GceRegionalPersistentDisk"
          },
          "mountPath": {
            "description": "Optional. Location of this directory in the running workstation.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GceRegionalPersistentDisk": {
        "description": "A PersistentDirectory backed by a Compute Engine regional persistent disk. The persistent_directories field is repeated, but it may contain only one entry. It creates a [persistent disk](https://cloud.google.com/compute/docs/disks/persistent-disks) that mounts to the workstation VM at `/home` when the session starts and detaches when the session ends. If this field is empty, workstations created with this configuration do not have a persistent home directory.",
        "properties": {
          "diskType": {
            "description": "Optional. The [type of the persistent disk](https://cloud.google.com/compute/docs/disks#disk-types) for the home directory. Defaults to `\"pd-standard\"`.",
            "type": "string"
          },
          "fsType": {
            "description": "Optional. Type of file system that the disk should be formatted with. The workstation image must support this file system type. Must be empty if source_snapshot is set. Defaults to `\"ext4\"`.",
            "type": "string"
          },
          "reclaimPolicy": {
            "description": "Optional. Whether the persistent disk should be deleted when the workstation is deleted. Valid values are `DELETE` and `RETAIN`. Defaults to `DELETE`.",
            "enum": [
              "RECLAIM_POLICY_UNSPECIFIED",
              "DELETE",
              "RETAIN"
            ],
            "type": "string"
          },
          "sizeGb": {
            "description": "Optional. The GB capacity of a persistent home directory for each workstation created with this configuration. Must be empty if source_snapshot is set. Valid values are `10`, `50`, `100`, `200`, `500`, or `1000`. Defaults to `200`. If less than `200` GB, the disk_type must be `\"pd-balanced\"` or `\"pd-ssd\"`.",
            "format": "int32",
            "type": "integer"
          },
          "sourceSnapshot": {
            "description": "Optional. Name of the snapshot to use as the source for the disk. If set, size_gb and fs_type must be empty.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ReadinessCheck": {
        "description": "A readiness check to be performed on a workstation.",
        "properties": {
          "path": {
            "description": "Optional. Path to which the request should be sent.",
            "type": "string"
          },
          "port": {
            "description": "Optional. Port to which the request should be sent.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://workstations.googleapis.com//v1/{parent}/workstationConfigs{?validateOnly,workstationConfigId,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "This resource represents a long-running operation that is the result of a network API call.",
        "**Key properties:**",
        {
          "$ul": [
            "**done**: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
            [
              "**error**: The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
              {
                "$ul": [
                  "**code**: The status code, which should be an enum value of google.rpc.Code.",
                  "**details**: A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                  "**message**: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                ]
              }
            ],
            "**metadata**: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
            "**name**: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
            "**response**: The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
