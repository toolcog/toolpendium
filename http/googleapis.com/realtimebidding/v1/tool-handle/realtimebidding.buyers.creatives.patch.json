{
  "name": "realtimebidding_buyers_creatives_patch",
  "description": "Updates a creative.",
  "parameters": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "Output only. Name of the creative. Follows the pattern `buyers/{buyer}/creatives/{creative}`, where `{buyer}` represents the account ID of the buyer who owns the creative, and `{creative}` is the buyer-specific creative ID that references this creative in the bid response."
      },
      "updateMask": {
        "type": "string",
        "description": "Field mask to use for partial in-place updates."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/Creative"
      }
    },
    "required": [
      "name"
    ],
    "$defs": {
      "Creative": {
        "description": "A creative and its classification data.",
        "properties": {
          "accountId": {
            "description": "Output only. ID of the buyer account that this creative is owned by. Can be used to filter the response of the creatives.list method with equality and inequality check.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "adChoicesDestinationUrl": {
            "description": "The link to AdChoices destination page. This is only supported for native ads.",
            "type": "string"
          },
          "advertiserName": {
            "description": "The name of the company being advertised in the creative. Can be used to filter the response of the creatives.list method.",
            "type": "string"
          },
          "agencyId": {
            "description": "The agency ID for this creative.",
            "format": "int64",
            "type": "string"
          },
          "apiUpdateTime": {
            "description": "Output only. The last update timestamp of the creative through the API.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "creativeFormat": {
            "description": "Output only. The format of this creative. Can be used to filter the response of the creatives.list method.",
            "enum": [
              "CREATIVE_FORMAT_UNSPECIFIED",
              "HTML",
              "VIDEO",
              "NATIVE"
            ],
            "readOnly": true,
            "type": "string"
          },
          "creativeId": {
            "description": "Buyer-specific creative ID that references this creative in bid responses. This field is Ignored in update operations. Can be used to filter the response of the creatives.list method. The maximum length of the creative ID is 128 bytes.",
            "type": "string"
          },
          "creativeServingDecision": {
            "$ref": "#/$defs/CreativeServingDecision"
          },
          "dealIds": {
            "description": "Output only. IDs of all of the deals with which this creative has been used in bidding. Can be used to filter the response of the creatives.list method.",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "declaredAttributes": {
            "description": "All declared attributes for the ads that may be shown from this creative. Can be used to filter the response of the creatives.list method. If the `excluded_attribute` field of a [bid request](https://developers.google.com/authorized-buyers/rtb/downloads/realtime-bidding-proto\") contains one of the attributes that were declared or detected for a given creative, and a bid is submitted with that creative, the bid will be filtered before the auction.",
            "items": {
              "enum": [
                "ATTRIBUTE_UNSPECIFIED",
                "IMAGE_RICH_MEDIA",
                "ADOBE_FLASH_FLV",
                "IS_TAGGED",
                "IS_COOKIE_TARGETED",
                "IS_USER_INTEREST_TARGETED",
                "EXPANDING_DIRECTION_NONE",
                "EXPANDING_DIRECTION_UP",
                "EXPANDING_DIRECTION_DOWN",
                "EXPANDING_DIRECTION_LEFT",
                "EXPANDING_DIRECTION_RIGHT",
                "EXPANDING_DIRECTION_UP_LEFT",
                "EXPANDING_DIRECTION_UP_RIGHT",
                "EXPANDING_DIRECTION_DOWN_LEFT",
                "EXPANDING_DIRECTION_DOWN_RIGHT",
                "CREATIVE_TYPE_HTML",
                "CREATIVE_TYPE_VAST_VIDEO",
                "EXPANDING_DIRECTION_UP_OR_DOWN",
                "EXPANDING_DIRECTION_LEFT_OR_RIGHT",
                "EXPANDING_DIRECTION_ANY_DIAGONAL",
                "EXPANDING_ACTION_ROLLOVER_TO_EXPAND",
                "INSTREAM_VAST_VIDEO_TYPE_VPAID_FLASH",
                "RICH_MEDIA_CAPABILITY_TYPE_MRAID",
                "RICH_MEDIA_CAPABILITY_TYPE_FLASH",
                "RICH_MEDIA_CAPABILITY_TYPE_HTML5",
                "SKIPPABLE_INSTREAM_VIDEO",
                "RICH_MEDIA_CAPABILITY_TYPE_SSL",
                "RICH_MEDIA_CAPABILITY_TYPE_NON_SSL",
                "RICH_MEDIA_CAPABILITY_TYPE_INTERSTITIAL",
                "NON_SKIPPABLE_INSTREAM_VIDEO",
                "NATIVE_ELIGIBILITY_ELIGIBLE",
                "NON_VPAID",
                "NATIVE_ELIGIBILITY_NOT_ELIGIBLE",
                "ANY_INTERSTITIAL",
                "NON_INTERSTITIAL",
                "IN_BANNER_VIDEO",
                "RENDERING_SIZELESS_ADX",
                "OMSDK_1_0",
                "RENDERING_PLAYABLE"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "declaredClickThroughUrls": {
            "description": "The set of declared destination URLs for the creative. Can be used to filter the response of the creatives.list method.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "declaredRestrictedCategories": {
            "description": "All declared restricted categories for the ads that may be shown from this creative. Can be used to filter the response of the creatives.list method.",
            "items": {
              "enum": [
                "RESTRICTED_CATEGORY_UNSPECIFIED",
                "ALCOHOL"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "declaredVendorIds": {
            "description": "IDs for the declared ad technology vendors that may be used by this creative. See https://storage.googleapis.com/adx-rtb-dictionaries/vendors.txt for possible values. Can be used to filter the response of the creatives.list method.",
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array"
          },
          "html": {
            "$ref": "#/$defs/HtmlContent"
          },
          "impressionTrackingUrls": {
            "description": "The set of URLs to be called to record an impression.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "name": {
            "description": "Output only. Name of the creative. Follows the pattern `buyers/{buyer}/creatives/{creative}`, where `{buyer}` represents the account ID of the buyer who owns the creative, and `{creative}` is the buyer-specific creative ID that references this creative in the bid response.",
            "readOnly": true,
            "type": "string"
          },
          "native": {
            "$ref": "#/$defs/NativeContent"
          },
          "renderUrl": {
            "description": "Experimental field that can be used during the [FLEDGE Origin Trial](/authorized-buyers/rtb/fledge-origin-trial). The URL to fetch an interest group ad used in [TURTLEDOVE on-device auction](https://github.com/WICG/turtledove/blob/main/FLEDGE.md#1-browsers-record-interest-groups\"). This should be unique among all creatives for a given `accountId`. This URL should be the same as the URL returned by [generateBid()](https://github.com/WICG/turtledove/blob/main/FLEDGE.md#32-on-device-bidding).",
            "type": "string"
          },
          "restrictedCategories": {
            "deprecated": true,
            "description": "All restricted categories for the ads that may be shown from this creative.",
            "items": {
              "enum": [
                "RESTRICTED_CATEGORY_UNSPECIFIED",
                "ALCOHOL"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "version": {
            "deprecated": true,
            "description": "Output only. The version of the creative. Version for a new creative is 1 and it increments during subsequent creative updates.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "video": {
            "$ref": "#/$defs/VideoContent"
          }
        },
        "type": "object"
      },
      "CreativeServingDecision": {
        "description": "Top level status and detected attributes of a creative.",
        "properties": {
          "adTechnologyProviders": {
            "$ref": "#/$defs/AdTechnologyProviders"
          },
          "chinaPolicyCompliance": {
            "$ref": "#/$defs/PolicyCompliance"
          },
          "dealsPolicyCompliance": {
            "$ref": "#/$defs/PolicyCompliance"
          },
          "detectedAdvertisers": {
            "description": "Detected advertisers and brands.",
            "items": {
              "$ref": "#/$defs/AdvertiserAndBrand"
            },
            "type": "array"
          },
          "detectedAttributes": {
            "description": "Publisher-excludable attributes that were detected for this creative. Can be used to filter the response of the creatives.list method. If the `excluded_attribute` field of a [bid request](https://developers.google.com/authorized-buyers/rtb/downloads/realtime-bidding-proto) contains one of the attributes that were declared or detected for a given creative, and a bid is submitted with that creative, the bid will be filtered before the auction.",
            "items": {
              "enum": [
                "ATTRIBUTE_UNSPECIFIED",
                "IMAGE_RICH_MEDIA",
                "ADOBE_FLASH_FLV",
                "IS_TAGGED",
                "IS_COOKIE_TARGETED",
                "IS_USER_INTEREST_TARGETED",
                "EXPANDING_DIRECTION_NONE",
                "EXPANDING_DIRECTION_UP",
                "EXPANDING_DIRECTION_DOWN",
                "EXPANDING_DIRECTION_LEFT",
                "EXPANDING_DIRECTION_RIGHT",
                "EXPANDING_DIRECTION_UP_LEFT",
                "EXPANDING_DIRECTION_UP_RIGHT",
                "EXPANDING_DIRECTION_DOWN_LEFT",
                "EXPANDING_DIRECTION_DOWN_RIGHT",
                "CREATIVE_TYPE_HTML",
                "CREATIVE_TYPE_VAST_VIDEO",
                "EXPANDING_DIRECTION_UP_OR_DOWN",
                "EXPANDING_DIRECTION_LEFT_OR_RIGHT",
                "EXPANDING_DIRECTION_ANY_DIAGONAL",
                "EXPANDING_ACTION_ROLLOVER_TO_EXPAND",
                "INSTREAM_VAST_VIDEO_TYPE_VPAID_FLASH",
                "RICH_MEDIA_CAPABILITY_TYPE_MRAID",
                "RICH_MEDIA_CAPABILITY_TYPE_FLASH",
                "RICH_MEDIA_CAPABILITY_TYPE_HTML5",
                "SKIPPABLE_INSTREAM_VIDEO",
                "RICH_MEDIA_CAPABILITY_TYPE_SSL",
                "RICH_MEDIA_CAPABILITY_TYPE_NON_SSL",
                "RICH_MEDIA_CAPABILITY_TYPE_INTERSTITIAL",
                "NON_SKIPPABLE_INSTREAM_VIDEO",
                "NATIVE_ELIGIBILITY_ELIGIBLE",
                "NON_VPAID",
                "NATIVE_ELIGIBILITY_NOT_ELIGIBLE",
                "ANY_INTERSTITIAL",
                "NON_INTERSTITIAL",
                "IN_BANNER_VIDEO",
                "RENDERING_SIZELESS_ADX",
                "OMSDK_1_0",
                "RENDERING_PLAYABLE"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "detectedClickThroughUrls": {
            "description": "The set of detected destination URLs for the creative. Can be used to filter the response of the creatives.list method.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "detectedDomains": {
            "description": "The detected domains for this creative.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "detectedLanguages": {
            "description": "The detected languages for this creative. The order is arbitrary. The codes are 2 or 5 characters and are documented at https://developers.google.com/adwords/api/docs/appendix/languagecodes. Can be used to filter the response of the creatives.list method.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "detectedProductCategories": {
            "description": "Detected product categories, if any. See the ad-product-categories.txt file in the technical documentation for a list of IDs. Can be used to filter the response of the creatives.list method.",
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array"
          },
          "detectedSensitiveCategories": {
            "description": "Detected sensitive categories, if any. Can be used to filter the response of the creatives.list method. See the ad-sensitive-categories.txt file in the technical documentation for a list of IDs. You should use these IDs along with the excluded-sensitive-category field in the bid request to filter your bids.",
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array"
          },
          "detectedVendorIds": {
            "description": "IDs of the ad technology vendors that were detected to be used by this creative. See https://storage.googleapis.com/adx-rtb-dictionaries/vendors.txt for possible values. Can be used to filter the response of the creatives.list method. If the `allowed_vendor_type` field of a [bid request](https://developers.google.com/authorized-buyers/rtb/downloads/realtime-bidding-proto) does not contain one of the vendor type IDs that were declared or detected for a given creative, and a bid is submitted with that creative, the bid will be filtered before the auction.",
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array"
          },
          "lastStatusUpdate": {
            "description": "The last time the creative status was updated. Can be used to filter the response of the creatives.list method.",
            "format": "google-datetime",
            "type": "string"
          },
          "networkPolicyCompliance": {
            "$ref": "#/$defs/PolicyCompliance"
          },
          "platformPolicyCompliance": {
            "$ref": "#/$defs/PolicyCompliance"
          },
          "russiaPolicyCompliance": {
            "$ref": "#/$defs/PolicyCompliance"
          }
        },
        "type": "object"
      },
      "AdTechnologyProviders": {
        "description": "The list of detected Ad Technology Providers for this creative. Bids placed for inventory that will serve to EEA or UK users are expected to comply with GDPR requirements. You must ensure that the creatives used in such bids should contain only user consented ad technology providers as indicated in the bid request. Google reserves the right to filter non-compliant bids. User consented ad technology providers can be found in the [Google Protocol](https://developers.google.com/authorized-buyers/rtb/downloads/realtime-bidding-proto) with the `BidRequest.adslot.consented_providers_settings` field, and can be found as an [OpenRTB extension](https://developers.google.com/authorized-buyers/rtb/downloads/openrtb-adx-proto) with the `BidRequest.user.ext.consented_providers_settings` and `BidRequest.user.ext.consent` fields. See https://support.google.com/authorizedbuyers/answer/9789378 for additional information about the Google TCF v2 integration.",
        "properties": {
          "detectedGvlIds": {
            "description": "The detected IAB Global Vendor List (GVL) IDs for this creative. See the IAB Global Vendor List at https://vendor-list.consensu.org/v2/vendor-list.json for details about the vendors.",
            "items": {
              "format": "int64",
              "type": "string"
            },
            "type": "array"
          },
          "detectedProviderIds": {
            "description": "The detected [Google Ad Tech Providers (ATP)](https://support.google.com/admanager/answer/9012903) for this creative. See https://storage.googleapis.com/adx-rtb-dictionaries/providers.csv for mapping of provider ID to provided name, a privacy policy URL, and a list of domains which can be attributed to the provider.",
            "items": {
              "format": "int64",
              "type": "string"
            },
            "type": "array"
          },
          "unidentifiedProviderDomains": {
            "description": "Domains of detected unidentified ad technology providers (if any). You must ensure that the creatives used in bids placed for inventory that will serve to EEA or UK users does not contain unidentified ad technology providers. Google reserves the right to filter non-compliant bids.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PolicyCompliance": {
        "description": "Policy compliance of the creative for a transaction type or a region.",
        "properties": {
          "status": {
            "description": "Serving status for the given transaction type (for example, open auction, deals) or region (for example, China, Russia). Can be used to filter the response of the creatives.list method.",
            "enum": [
              "STATUS_UNSPECIFIED",
              "PENDING_REVIEW",
              "DISAPPROVED",
              "APPROVED",
              "CERTIFICATE_REQUIRED"
            ],
            "type": "string"
          },
          "topics": {
            "description": "Topics related to the policy compliance for this transaction type (for example, open auction, deals) or region (for example, China, Russia). Topics may be present only if status is DISAPPROVED.",
            "items": {
              "$ref": "#/$defs/PolicyTopicEntry"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PolicyTopicEntry": {
        "description": "Each policy topic entry will represent a violation of a policy topic for a creative, with the policy topic information and optional evidence for the policy violation.",
        "properties": {
          "evidences": {
            "description": "Pieces of evidence associated with this policy topic entry.",
            "items": {
              "$ref": "#/$defs/PolicyTopicEvidence"
            },
            "type": "array"
          },
          "helpCenterUrl": {
            "description": "URL of the help center article describing this policy topic.",
            "type": "string"
          },
          "missingCertificate": {
            "description": "Whether or not the policy topic is missing a certificate. Some policy topics require a certificate to unblock serving in some regions. For more information about creative certification, refer to: https://support.google.com/authorizedbuyers/answer/7450776",
            "type": "boolean"
          },
          "policyTopic": {
            "description": "Policy topic this entry refers to. For example, \"ALCOHOL\", \"TRADEMARKS_IN_AD_TEXT\", or \"DESTINATION_NOT_WORKING\". The set of possible policy topics is not fixed for a particular API version and may change at any time. Can be used to filter the response of the creatives.list method",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PolicyTopicEvidence": {
        "description": "Evidence associated with a policy topic entry.",
        "properties": {
          "destinationNotCrawlable": {
            "$ref": "#/$defs/DestinationNotCrawlableEvidence"
          },
          "destinationNotWorking": {
            "$ref": "#/$defs/DestinationNotWorkingEvidence"
          },
          "destinationUrl": {
            "$ref": "#/$defs/DestinationUrlEvidence"
          },
          "domainCall": {
            "$ref": "#/$defs/DomainCallEvidence"
          },
          "downloadSize": {
            "$ref": "#/$defs/DownloadSizeEvidence"
          },
          "httpCall": {
            "$ref": "#/$defs/HttpCallEvidence"
          },
          "httpCookie": {
            "$ref": "#/$defs/HttpCookieEvidence"
          }
        },
        "type": "object"
      },
      "DestinationNotCrawlableEvidence": {
        "description": "Evidence that the creative's destination URL was not crawlable by Google.",
        "properties": {
          "crawlTime": {
            "description": "Approximate time of the crawl.",
            "format": "google-datetime",
            "type": "string"
          },
          "crawledUrl": {
            "description": "Destination URL that was attempted to be crawled.",
            "type": "string"
          },
          "reason": {
            "description": "Reason of destination not crawlable.",
            "enum": [
              "REASON_UNSPECIFIED",
              "UNREACHABLE_ROBOTS",
              "TIMEOUT_ROBOTS",
              "ROBOTED_DENIED",
              "UNKNOWN"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "DestinationNotWorkingEvidence": {
        "description": "Evidence of the creative's destination URL not functioning properly or having been incorrectly set up.",
        "properties": {
          "dnsError": {
            "description": "DNS lookup errors.",
            "enum": [
              "DNS_ERROR_UNSPECIFIED",
              "ERROR_DNS",
              "GOOGLE_CRAWLER_DNS_ISSUE"
            ],
            "type": "string"
          },
          "expandedUrl": {
            "description": "The full non-working URL.",
            "type": "string"
          },
          "httpError": {
            "description": "HTTP error code (for example, 404 or 5xx)",
            "format": "int32",
            "type": "integer"
          },
          "invalidPage": {
            "description": "Page was crawled successfully, but was detected as either a page with no content or an error page.",
            "enum": [
              "INVALID_PAGE_UNSPECIFIED",
              "EMPTY_OR_ERROR_PAGE"
            ],
            "type": "string"
          },
          "lastCheckTime": {
            "description": "Approximate time when the ad destination was last checked.",
            "format": "google-datetime",
            "type": "string"
          },
          "platform": {
            "description": "Platform of the non-working URL.",
            "enum": [
              "PLATFORM_UNSPECIFIED",
              "PERSONAL_COMPUTER",
              "ANDROID",
              "IOS"
            ],
            "type": "string"
          },
          "redirectionError": {
            "description": "HTTP redirect chain error.",
            "enum": [
              "REDIRECTION_ERROR_UNSPECIFIED",
              "TOO_MANY_REDIRECTS",
              "INVALID_REDIRECT",
              "EMPTY_REDIRECT",
              "REDIRECT_ERROR_UNKNOWN"
            ],
            "type": "string"
          },
          "urlRejected": {
            "description": "Rejected because of malformed URLs or invalid requests.",
            "enum": [
              "URL_REJECTED_UNSPECIFIED",
              "BAD_REQUEST",
              "MALFORMED_URL",
              "URL_REJECTED_UNKNOWN"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "DestinationUrlEvidence": {
        "description": "The full landing page URL of the destination.",
        "properties": {
          "destinationUrl": {
            "description": "The full landing page URL of the destination.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DomainCallEvidence": {
        "description": "Number of HTTP calls made by a creative, broken down by domain.",
        "properties": {
          "topHttpCallDomains": {
            "description": "Breakdown of the most frequent domains called through HTTP by the creative.",
            "items": {
              "$ref": "#/$defs/DomainCalls"
            },
            "type": "array"
          },
          "totalHttpCallCount": {
            "description": "The total number of HTTP calls made by the creative, including but not limited to the number of calls in the top_http_call_domains.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "DomainCalls": {
        "description": "The number of HTTP calls made to the given domain.",
        "properties": {
          "domain": {
            "description": "The domain name.",
            "type": "string"
          },
          "httpCallCount": {
            "description": "Number of HTTP calls made to the domain.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "DownloadSizeEvidence": {
        "description": "Total download size and URL-level download size breakdown for resources in a creative.",
        "properties": {
          "topUrlDownloadSizeBreakdowns": {
            "description": "Download size broken down by URLs with the top download size.",
            "items": {
              "$ref": "#/$defs/UrlDownloadSize"
            },
            "type": "array"
          },
          "totalDownloadSizeKb": {
            "description": "Total download size (in kilobytes) for all the resources in the creative.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "UrlDownloadSize": {
        "description": "The URL-level breakdown for the download size.",
        "properties": {
          "downloadSizeKb": {
            "description": "Download size of the URL in kilobytes.",
            "format": "int32",
            "type": "integer"
          },
          "normalizedUrl": {
            "description": "The normalized URL with query parameters and fragment removed.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "HttpCallEvidence": {
        "description": "HTTP calls made by a creative that resulted in policy violations.",
        "properties": {
          "urls": {
            "description": "URLs of HTTP calls made by the creative.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "HttpCookieEvidence": {
        "description": "Evidence for HTTP cookie-related policy violations.",
        "properties": {
          "cookieNames": {
            "description": "Names of cookies that violate Google policies. For TOO_MANY_COOKIES policy, this will be the cookie names of top domains with the largest number of cookies. For other policies, this will be all the cookie names that violate the policy.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "maxCookieCount": {
            "description": "The largest number of cookies set by a creative. If this field is set, cookie_names above will be set to the cookie names of top domains with the largest number of cookies. This field will only be set for TOO_MANY_COOKIES policy.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "AdvertiserAndBrand": {
        "description": "Detected advertiser and brand information.",
        "properties": {
          "advertiserId": {
            "description": "See https://storage.googleapis.com/adx-rtb-dictionaries/advertisers.txt for the list of possible values. Can be used to filter the response of the creatives.list method.",
            "format": "int64",
            "type": "string"
          },
          "advertiserName": {
            "description": "Advertiser name. Can be used to filter the response of the creatives.list method.",
            "type": "string"
          },
          "brandId": {
            "description": "Detected brand ID or zero if no brand has been detected. See https://storage.googleapis.com/adx-rtb-dictionaries/brands.txt for the list of possible values. Can be used to filter the response of the creatives.list method.",
            "format": "int64",
            "type": "string"
          },
          "brandName": {
            "description": "Brand name. Can be used to filter the response of the creatives.list method.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "HtmlContent": {
        "description": "HTML content for a creative.",
        "properties": {
          "height": {
            "description": "The height of the HTML snippet in pixels. Can be used to filter the response of the creatives.list method.",
            "format": "int32",
            "type": "integer"
          },
          "snippet": {
            "description": "The HTML snippet that displays the ad when inserted in the web page.",
            "type": "string"
          },
          "width": {
            "description": "The width of the HTML snippet in pixels. Can be used to filter the response of the creatives.list method.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NativeContent": {
        "description": "Native content for a creative.",
        "properties": {
          "advertiserName": {
            "description": "The name of the advertiser or sponsor, to be displayed in the ad creative.",
            "type": "string"
          },
          "appIcon": {
            "$ref": "#/$defs/Image"
          },
          "body": {
            "description": "A long description of the ad.",
            "type": "string"
          },
          "callToAction": {
            "description": "A label for the button that the user is supposed to click.",
            "type": "string"
          },
          "clickLinkUrl": {
            "description": "The URL that the browser/SDK will load when the user clicks the ad.",
            "type": "string"
          },
          "clickTrackingUrl": {
            "description": "The URL to use for click tracking.",
            "type": "string"
          },
          "headline": {
            "description": "A short title for the ad.",
            "type": "string"
          },
          "image": {
            "$ref": "#/$defs/Image"
          },
          "logo": {
            "$ref": "#/$defs/Image"
          },
          "priceDisplayText": {
            "description": "The price of the promoted app including currency info.",
            "type": "string"
          },
          "starRating": {
            "description": "The app rating in the app store. Must be in the range [0-5].",
            "format": "double",
            "type": "number"
          },
          "videoUrl": {
            "description": "The URL to fetch a native video ad.",
            "type": "string"
          },
          "videoVastXml": {
            "description": "The contents of a VAST document for a native video ad.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Image": {
        "description": "An image resource. You may provide a larger image than was requested, so long as the aspect ratio is preserved.",
        "properties": {
          "height": {
            "description": "Image height in pixels.",
            "format": "int32",
            "type": "integer"
          },
          "url": {
            "description": "The URL of the image.",
            "type": "string"
          },
          "width": {
            "description": "Image width in pixels.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "VideoContent": {
        "description": "Video content for a creative.",
        "properties": {
          "videoMetadata": {
            "$ref": "#/$defs/VideoMetadata"
          },
          "videoUrl": {
            "description": "The URL to fetch a video ad.",
            "type": "string"
          },
          "videoVastXml": {
            "description": "The contents of a VAST document for a video ad. This document should conform to the VAST 2.0 or 3.0 standard.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "VideoMetadata": {
        "description": "Video metadata for a creative.",
        "properties": {
          "duration": {
            "description": "The duration of the ad. Can be used to filter the response of the creatives.list method.",
            "format": "google-duration",
            "type": "string"
          },
          "isValidVast": {
            "description": "Is this a valid VAST ad? Can be used to filter the response of the creatives.list method.",
            "type": "boolean"
          },
          "isVpaid": {
            "description": "Is this a VPAID ad? Can be used to filter the response of the creatives.list method.",
            "type": "boolean"
          },
          "mediaFiles": {
            "description": "The list of all media files declared in the VAST. If there are multiple VASTs in a wrapper chain, this includes the media files from the deepest one in the chain.",
            "items": {
              "$ref": "#/$defs/MediaFile"
            },
            "type": "array"
          },
          "skipOffset": {
            "description": "The minimum duration that the user has to watch before being able to skip this ad. If the field is not set, the ad is not skippable. If the field is set, the ad is skippable. Can be used to filter the response of the creatives.list method.",
            "format": "google-duration",
            "type": "string"
          },
          "vastVersion": {
            "description": "The maximum VAST version across all wrapped VAST documents. Can be used to filter the response of the creatives.list method.",
            "enum": [
              "VAST_VERSION_UNSPECIFIED",
              "VAST_VERSION_1_0",
              "VAST_VERSION_2_0",
              "VAST_VERSION_3_0",
              "VAST_VERSION_4_0"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "MediaFile": {
        "description": "Information about each media file in the VAST.",
        "properties": {
          "bitrate": {
            "description": "Bitrate of the video file, in Kbps. Can be used to filter the response of the creatives.list method.",
            "format": "int64",
            "type": "string"
          },
          "mimeType": {
            "description": "The MIME type of this media file. Can be used to filter the response of the creatives.list method.",
            "enum": [
              "VIDEO_MIME_TYPE_UNSPECIFIED",
              "MIME_VIDEO_XFLV",
              "MIME_VIDEO_WEBM",
              "MIME_VIDEO_MP4",
              "MIME_VIDEO_OGG",
              "MIME_VIDEO_YT_HOSTED",
              "MIME_VIDEO_X_MS_WMV",
              "MIME_VIDEO_3GPP",
              "MIME_VIDEO_MOV",
              "MIME_APPLICATION_SWF",
              "MIME_APPLICATION_SURVEY",
              "MIME_APPLICATION_JAVASCRIPT",
              "MIME_APPLICATION_SILVERLIGHT",
              "MIME_APPLICATION_MPEGURL",
              "MIME_APPLICATION_MPEGDASH",
              "MIME_AUDIO_MP4A",
              "MIME_AUDIO_MP3",
              "MIME_AUDIO_OGG"
            ],
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PATCH",
    "url": {
      "$uri": "https://realtimebidding.googleapis.com//v1/{name}{?updateMask,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A creative and its classification data.",
        "**Key properties:**",
        {
          "$ul": [
            "**accountId**: Output only. ID of the buyer account that this creative is owned by. Can be used to filter the response of the creatives.list method with equality and inequality check.",
            "**adChoicesDestinationUrl**: The link to AdChoices destination page. This is only supported for native ads.",
            "**advertiserName**: The name of the company being advertised in the creative. Can be used to filter the response of the creatives.list method.",
            "**agencyId**: The agency ID for this creative.",
            "**apiUpdateTime**: Output only. The last update timestamp of the creative through the API.",
            "**creativeFormat**: Output only. The format of this creative. Can be used to filter the response of the creatives.list method.",
            "**creativeId**: Buyer-specific creative ID that references this creative in bid responses. This field is Ignored in update operations. Can be used to filter the response of the creatives.list method. The maximum length of the creative ID is 128 bytes.",
            [
              "**creativeServingDecision**: Top level status and detected attributes of a creative.",
              {
                "$ul": [
                  [
                    "**adTechnologyProviders**: The list of detected Ad Technology Providers for this creative. Bids placed for inventory that will serve to EEA or UK users are expected to comply with GDPR requirements. You must ensure that the creatives used in such bids should contain only user consented ad technology providers as indicated in the bid request. Google reserves the right to filter non-compliant bids. User consented ad technology providers can be found in the [Google Protocol](https://developers.google.com/authorized-buyers/rtb/downloads/realtime-bidding-proto) with the `BidRequest.adslot.consented_providers_settings` field, and can be found as an [OpenRTB extension](https://developers.google.com/authorized-buyers/rtb/downloads/openrtb-adx-proto) with the `BidRequest.user.ext.consented_providers_settings` and `BidRequest.user.ext.consent` fields. See https://support.google.com/authorizedbuyers/answer/9789378 for additional information about the Google TCF v2 integration.",
                    {
                      "$ul": [
                        "**detectedGvlIds**: The detected IAB Global Vendor List (GVL) IDs for this creative. See the IAB Global Vendor List at https://vendor-list.consensu.org/v2/vendor-list.json for details about the vendors.",
                        "**detectedProviderIds**: The detected [Google Ad Tech Providers (ATP)](https://support.google.com/admanager/answer/9012903) for this creative. See https://storage.googleapis.com/adx-rtb-dictionaries/providers.csv for mapping of provider ID to provided name, a privacy policy URL, and a list of domains which can be attributed to the provider.",
                        "**unidentifiedProviderDomains**: Domains of detected unidentified ad technology providers (if any). You must ensure that the creatives used in bids placed for inventory that will serve to EEA or UK users does not contain unidentified ad technology providers. Google reserves the right to filter non-compliant bids."
                      ]
                    }
                  ],
                  [
                    "**chinaPolicyCompliance**: Policy compliance of the creative for a transaction type or a region.",
                    {
                      "$ul": [
                        "**status**: Serving status for the given transaction type (for example, open auction, deals) or region (for example, China, Russia). Can be used to filter the response of the creatives.list method.",
                        "**topics**: Topics related to the policy compliance for this transaction type (for example, open auction, deals) or region (for example, China, Russia). Topics may be present only if status is DISAPPROVED."
                      ]
                    }
                  ],
                  [
                    "**dealsPolicyCompliance**: Policy compliance of the creative for a transaction type or a region.",
                    {
                      "$ul": [
                        "**status**: Serving status for the given transaction type (for example, open auction, deals) or region (for example, China, Russia). Can be used to filter the response of the creatives.list method.",
                        "**topics**: Topics related to the policy compliance for this transaction type (for example, open auction, deals) or region (for example, China, Russia). Topics may be present only if status is DISAPPROVED."
                      ]
                    }
                  ],
                  "**detectedAdvertisers**: Detected advertisers and brands.",
                  "**detectedAttributes**: Publisher-excludable attributes that were detected for this creative. Can be used to filter the response of the creatives.list method. If the `excluded_attribute` field of a [bid request](https://developers.google.com/authorized-buyers/rtb/downloads/realtime-bidding-proto) contains one of the attributes that were declared or detected for a given creative, and a bid is submitted with that creative, the bid will be filtered before the auction.",
                  "**detectedClickThroughUrls**: The set of detected destination URLs for the creative. Can be used to filter the response of the creatives.list method.",
                  "**detectedDomains**: The detected domains for this creative.",
                  "**detectedLanguages**: The detected languages for this creative. The order is arbitrary. The codes are 2 or 5 characters and are documented at https://developers.google.com/adwords/api/docs/appendix/languagecodes. Can be used to filter the response of the creatives.list method.",
                  "**detectedProductCategories**: Detected product categories, if any. See the ad-product-categories.txt file in the technical documentation for a list of IDs. Can be used to filter the response of the creatives.list method.",
                  "**detectedSensitiveCategories**: Detected sensitive categories, if any. Can be used to filter the response of the creatives.list method. See the ad-sensitive-categories.txt file in the technical documentation for a list of IDs. You should use these IDs along with the excluded-sensitive-category field in the bid request to filter your bids.",
                  "**detectedVendorIds**: IDs of the ad technology vendors that were detected to be used by this creative. See https://storage.googleapis.com/adx-rtb-dictionaries/vendors.txt for possible values. Can be used to filter the response of the creatives.list method. If the `allowed_vendor_type` field of a [bid request](https://developers.google.com/authorized-buyers/rtb/downloads/realtime-bidding-proto) does not contain one of the vendor type IDs that were declared or detected for a given creative, and a bid is submitted with that creative, the bid will be filtered before the auction.",
                  "**lastStatusUpdate**: The last time the creative status was updated. Can be used to filter the response of the creatives.list method.",
                  [
                    "**networkPolicyCompliance**: Policy compliance of the creative for a transaction type or a region.",
                    {
                      "$ul": [
                        "**status**: Serving status for the given transaction type (for example, open auction, deals) or region (for example, China, Russia). Can be used to filter the response of the creatives.list method.",
                        "**topics**: Topics related to the policy compliance for this transaction type (for example, open auction, deals) or region (for example, China, Russia). Topics may be present only if status is DISAPPROVED."
                      ]
                    }
                  ],
                  [
                    "**platformPolicyCompliance**: Policy compliance of the creative for a transaction type or a region.",
                    {
                      "$ul": [
                        "**status**: Serving status for the given transaction type (for example, open auction, deals) or region (for example, China, Russia). Can be used to filter the response of the creatives.list method.",
                        "**topics**: Topics related to the policy compliance for this transaction type (for example, open auction, deals) or region (for example, China, Russia). Topics may be present only if status is DISAPPROVED."
                      ]
                    }
                  ],
                  [
                    "**russiaPolicyCompliance**: Policy compliance of the creative for a transaction type or a region.",
                    {
                      "$ul": [
                        "**status**: Serving status for the given transaction type (for example, open auction, deals) or region (for example, China, Russia). Can be used to filter the response of the creatives.list method.",
                        "**topics**: Topics related to the policy compliance for this transaction type (for example, open auction, deals) or region (for example, China, Russia). Topics may be present only if status is DISAPPROVED."
                      ]
                    }
                  ]
                ]
              }
            ],
            "**dealIds**: Output only. IDs of all of the deals with which this creative has been used in bidding. Can be used to filter the response of the creatives.list method.",
            "**declaredAttributes**: All declared attributes for the ads that may be shown from this creative. Can be used to filter the response of the creatives.list method. If the `excluded_attribute` field of a [bid request](https://developers.google.com/authorized-buyers/rtb/downloads/realtime-bidding-proto\") contains one of the attributes that were declared or detected for a given creative, and a bid is submitted with that creative, the bid will be filtered before the auction.",
            "**declaredClickThroughUrls**: The set of declared destination URLs for the creative. Can be used to filter the response of the creatives.list method.",
            "**declaredRestrictedCategories**: All declared restricted categories for the ads that may be shown from this creative. Can be used to filter the response of the creatives.list method.",
            "**declaredVendorIds**: IDs for the declared ad technology vendors that may be used by this creative. See https://storage.googleapis.com/adx-rtb-dictionaries/vendors.txt for possible values. Can be used to filter the response of the creatives.list method.",
            [
              "**html**: HTML content for a creative.",
              {
                "$ul": [
                  "**height**: The height of the HTML snippet in pixels. Can be used to filter the response of the creatives.list method.",
                  "**snippet**: The HTML snippet that displays the ad when inserted in the web page.",
                  "**width**: The width of the HTML snippet in pixels. Can be used to filter the response of the creatives.list method."
                ]
              }
            ],
            "**impressionTrackingUrls**: The set of URLs to be called to record an impression.",
            "**name**: Output only. Name of the creative. Follows the pattern `buyers/{buyer}/creatives/{creative}`, where `{buyer}` represents the account ID of the buyer who owns the creative, and `{creative}` is the buyer-specific creative ID that references this creative in the bid response.",
            [
              "**native**: Native content for a creative.",
              {
                "$ul": [
                  "**advertiserName**: The name of the advertiser or sponsor, to be displayed in the ad creative.",
                  [
                    "**appIcon**: An image resource. You may provide a larger image than was requested, so long as the aspect ratio is preserved.",
                    {
                      "$ul": [
                        "**height**: Image height in pixels.",
                        "**url**: The URL of the image.",
                        "**width**: Image width in pixels."
                      ]
                    }
                  ],
                  "**body**: A long description of the ad.",
                  "**callToAction**: A label for the button that the user is supposed to click.",
                  "**clickLinkUrl**: The URL that the browser/SDK will load when the user clicks the ad.",
                  "**clickTrackingUrl**: The URL to use for click tracking.",
                  "**headline**: A short title for the ad.",
                  [
                    "**image**: An image resource. You may provide a larger image than was requested, so long as the aspect ratio is preserved.",
                    {
                      "$ul": [
                        "**height**: Image height in pixels.",
                        "**url**: The URL of the image.",
                        "**width**: Image width in pixels."
                      ]
                    }
                  ],
                  [
                    "**logo**: An image resource. You may provide a larger image than was requested, so long as the aspect ratio is preserved.",
                    {
                      "$ul": [
                        "**height**: Image height in pixels.",
                        "**url**: The URL of the image.",
                        "**width**: Image width in pixels."
                      ]
                    }
                  ],
                  "**priceDisplayText**: The price of the promoted app including currency info.",
                  "**starRating**: The app rating in the app store. Must be in the range [0-5].",
                  "**videoUrl**: The URL to fetch a native video ad.",
                  "**videoVastXml**: The contents of a VAST document for a native video ad."
                ]
              }
            ],
            "**renderUrl**: Experimental field that can be used during the [FLEDGE Origin Trial](/authorized-buyers/rtb/fledge-origin-trial). The URL to fetch an interest group ad used in [TURTLEDOVE on-device auction](https://github.com/WICG/turtledove/blob/main/FLEDGE.md#1-browsers-record-interest-groups\"). This should be unique among all creatives for a given `accountId`. This URL should be the same as the URL returned by [generateBid()](https://github.com/WICG/turtledove/blob/main/FLEDGE.md#32-on-device-bidding).",
            "**restrictedCategories**: All restricted categories for the ads that may be shown from this creative.",
            "**version**: Output only. The version of the creative. Version for a new creative is 1 and it increments during subsequent creative updates.",
            [
              "**video**: Video content for a creative.",
              {
                "$ul": [
                  [
                    "**videoMetadata**: Video metadata for a creative.",
                    {
                      "$ul": [
                        "**duration**: The duration of the ad. Can be used to filter the response of the creatives.list method.",
                        "**isValidVast**: Is this a valid VAST ad? Can be used to filter the response of the creatives.list method.",
                        "**isVpaid**: Is this a VPAID ad? Can be used to filter the response of the creatives.list method.",
                        "**mediaFiles**: The list of all media files declared in the VAST. If there are multiple VASTs in a wrapper chain, this includes the media files from the deepest one in the chain.",
                        "**skipOffset**: The minimum duration that the user has to watch before being able to skip this ad. If the field is not set, the ad is not skippable. If the field is set, the ad is skippable. Can be used to filter the response of the creatives.list method.",
                        "**vastVersion**: The maximum VAST version across all wrapped VAST documents. Can be used to filter the response of the creatives.list method."
                      ]
                    }
                  ],
                  "**videoUrl**: The URL to fetch a video ad.",
                  "**videoVastXml**: The contents of a VAST document for a video ad. This document should conform to the VAST 2.0 or 3.0 standard."
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
