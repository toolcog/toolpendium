{
  "name": "doubleclickbidmanager_queries_create",
  "description": "Creates a query.",
  "parameters": {
    "type": "object",
    "properties": {
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/Query"
      }
    },
    "$defs": {
      "Query": {
        "description": "Represents a query.",
        "properties": {
          "metadata": {
            "$ref": "#/$defs/QueryMetadata"
          },
          "params": {
            "$ref": "#/$defs/Parameters"
          },
          "queryId": {
            "description": "Output only. Query ID.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "schedule": {
            "$ref": "#/$defs/QuerySchedule"
          }
        },
        "type": "object"
      },
      "QueryMetadata": {
        "description": "Query metadata.",
        "properties": {
          "dataRange": {
            "$ref": "#/$defs/DataRange"
          },
          "format": {
            "description": "Format of the generated report.",
            "enum": [
              "FORMAT_UNSPECIFIED",
              "CSV",
              "XLSX"
            ],
            "type": "string"
          },
          "sendNotification": {
            "description": "Whether to send an email notification when a report is ready. Defaults to false.",
            "type": "boolean"
          },
          "shareEmailAddress": {
            "description": "List of email addresses which are sent email notifications when the report is finished. Separate from send_notification.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "title": {
            "description": "Query title. It is used to name the reports generated from this query.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DataRange": {
        "description": "Report data range.",
        "properties": {
          "customEndDate": {
            "$ref": "#/$defs/Date"
          },
          "customStartDate": {
            "$ref": "#/$defs/Date"
          },
          "range": {
            "description": "Report data range used to generate the report.",
            "enum": [
              "RANGE_UNSPECIFIED",
              "CUSTOM_DATES",
              "CURRENT_DAY",
              "PREVIOUS_DAY",
              "WEEK_TO_DATE",
              "MONTH_TO_DATE",
              "QUARTER_TO_DATE",
              "YEAR_TO_DATE",
              "PREVIOUS_WEEK",
              "PREVIOUS_MONTH",
              "PREVIOUS_QUARTER",
              "PREVIOUS_YEAR",
              "LAST_7_DAYS",
              "LAST_30_DAYS",
              "LAST_90_DAYS",
              "LAST_365_DAYS",
              "ALL_TIME",
              "LAST_14_DAYS",
              "LAST_60_DAYS"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "Date": {
        "description": "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp",
        "properties": {
          "day": {
            "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
            "format": "int32",
            "type": "integer"
          },
          "month": {
            "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
            "format": "int32",
            "type": "integer"
          },
          "year": {
            "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Parameters": {
        "description": "Parameters of a query or report.",
        "properties": {
          "filters": {
            "description": "Filters used to match traffic data in your report.",
            "items": {
              "$ref": "#/$defs/FilterPair"
            },
            "type": "array"
          },
          "groupBys": {
            "description": "Data is grouped by the filters listed in this field.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "metrics": {
            "description": "Metrics to include as columns in your report.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "options": {
            "$ref": "#/$defs/Options"
          },
          "type": {
            "description": "The type of the report. The type of the report will dictate what dimesions, filters, and metrics can be used.",
            "enum": [
              "REPORT_TYPE_UNSPECIFIED",
              "STANDARD",
              "INVENTORY_AVAILABILITY",
              "AUDIENCE_COMPOSITION",
              "FLOODLIGHT",
              "YOUTUBE",
              "GRP",
              "YOUTUBE_PROGRAMMATIC_GUARANTEED",
              "REACH",
              "UNIQUE_REACH_AUDIENCE",
              "FULL_PATH",
              "PATH_ATTRIBUTION"
            ],
            "type": "string",
            "x-enumDeprecated": [
              false,
              false,
              false,
              true,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false
            ]
          }
        },
        "type": "object"
      },
      "FilterPair": {
        "description": "Filter used to match traffic data in your report.",
        "properties": {
          "type": {
            "description": "Filter type.",
            "type": "string"
          },
          "value": {
            "description": "Filter value.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Options": {
        "description": "Additional query options.",
        "properties": {
          "includeOnlyTargetedUserLists": {
            "description": "Set to true and filter your report by `FILTER_INSERTION_ORDER` or `FILTER_LINE_ITEM` to include data for audience lists specifically targeted by those items.",
            "type": "boolean"
          },
          "pathQueryOptions": {
            "$ref": "#/$defs/PathQueryOptions"
          }
        },
        "type": "object"
      },
      "PathQueryOptions": {
        "description": "Path Query Options for Report Options.",
        "properties": {
          "channelGrouping": {
            "$ref": "#/$defs/ChannelGrouping"
          },
          "pathFilters": {
            "description": "Path Filters. There is a limit of 100 path filters that can be set per report.",
            "items": {
              "$ref": "#/$defs/PathFilter"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ChannelGrouping": {
        "description": "A channel grouping defines a set of rules that can be used to categorize events in a path report.",
        "properties": {
          "fallbackName": {
            "description": "The name to apply to an event that does not match any of the rules in the channel grouping.",
            "type": "string"
          },
          "name": {
            "description": "Channel Grouping name.",
            "type": "string"
          },
          "rules": {
            "description": "Rules within Channel Grouping. There is a limit of 100 rules that can be set per channel grouping.",
            "items": {
              "$ref": "#/$defs/Rule"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Rule": {
        "description": "A Rule defines a name, and a boolean expression in [conjunctive normal form] (http://mathworld.wolfram.com/ConjunctiveNormalForm.html){.external} that can be applied to a path event to determine if that name should be applied.",
        "properties": {
          "disjunctiveMatchStatements": {
            "description": "DisjunctiveMatchStatements within a Rule. DisjunctiveMatchStatement OR's all contained filters.",
            "items": {
              "$ref": "#/$defs/DisjunctiveMatchStatement"
            },
            "type": "array"
          },
          "name": {
            "description": "Rule name.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DisjunctiveMatchStatement": {
        "description": "DisjunctiveMatchStatement that OR's all contained filters.",
        "properties": {
          "eventFilters": {
            "description": "Filters. There is a limit of 100 filters that can be set per disjunctive match statement.",
            "items": {
              "$ref": "#/$defs/EventFilter"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EventFilter": {
        "description": "Defines the type of filter to be applied to the path, a DV360 event dimension filter.",
        "properties": {
          "dimensionFilter": {
            "$ref": "#/$defs/PathQueryOptionsFilter"
          }
        },
        "type": "object"
      },
      "PathQueryOptionsFilter": {
        "description": "Dimension filter on path events.",
        "properties": {
          "filter": {
            "description": "Dimension the filter is applied to.",
            "type": "string"
          },
          "match": {
            "description": "Match logic of the filter.",
            "enum": [
              "UNKNOWN",
              "EXACT",
              "PARTIAL",
              "BEGINS_WITH",
              "WILDCARD_EXPRESSION"
            ],
            "type": "string"
          },
          "values": {
            "description": "Values to filter on.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PathFilter": {
        "description": "Path filters specify which paths to include in a report. A path is the result of combining DV360 events based on User ID to create a workflow of users' actions. When a path filter is set, the resulting report will only include paths that match the specified event at the specified position. All other paths will be excluded.",
        "properties": {
          "eventFilters": {
            "description": "Filter on an event to be applied to some part of the path.",
            "items": {
              "$ref": "#/$defs/EventFilter"
            },
            "type": "array"
          },
          "pathMatchPosition": {
            "description": "The position of the path the filter should match to (first, last, or any event in path).",
            "enum": [
              "PATH_MATCH_POSITION_UNSPECIFIED",
              "ANY",
              "FIRST",
              "LAST"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "QuerySchedule": {
        "description": "Information on when and how frequently to run a query.",
        "properties": {
          "endDate": {
            "$ref": "#/$defs/Date"
          },
          "frequency": {
            "description": "How often the query is run.",
            "enum": [
              "FREQUENCY_UNSPECIFIED",
              "ONE_TIME",
              "DAILY",
              "WEEKLY",
              "SEMI_MONTHLY",
              "MONTHLY",
              "QUARTERLY",
              "YEARLY"
            ],
            "type": "string"
          },
          "nextRunTimezoneCode": {
            "description": "Canonical timezone code for report generation time. Defaults to `America/New_York`.",
            "type": "string"
          },
          "startDate": {
            "$ref": "#/$defs/Date"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://doubleclickbidmanager.googleapis.com/v2/queries{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Represents a query.",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**metadata**: Query metadata.",
              {
                "$ul": [
                  [
                    "**dataRange**: Report data range.",
                    {
                      "$ul": [
                        [
                          "**customEndDate**: Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp",
                          {
                            "$ul": [
                              "**day**: Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
                              "**month**: Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
                              "**year**: Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year."
                            ]
                          }
                        ],
                        [
                          "**customStartDate**: Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp",
                          {
                            "$ul": [
                              "**day**: Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
                              "**month**: Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
                              "**year**: Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year."
                            ]
                          }
                        ],
                        "**range**: Report data range used to generate the report."
                      ]
                    }
                  ],
                  "**format**: Format of the generated report.",
                  "**sendNotification**: Whether to send an email notification when a report is ready. Defaults to false.",
                  "**shareEmailAddress**: List of email addresses which are sent email notifications when the report is finished. Separate from send_notification.",
                  "**title**: Query title. It is used to name the reports generated from this query."
                ]
              }
            ],
            [
              "**params**: Parameters of a query or report.",
              {
                "$ul": [
                  "**filters**: Filters used to match traffic data in your report.",
                  "**groupBys**: Data is grouped by the filters listed in this field.",
                  "**metrics**: Metrics to include as columns in your report.",
                  [
                    "**options**: Additional query options.",
                    {
                      "$ul": [
                        "**includeOnlyTargetedUserLists**: Set to true and filter your report by `FILTER_INSERTION_ORDER` or `FILTER_LINE_ITEM` to include data for audience lists specifically targeted by those items.",
                        [
                          "**pathQueryOptions**: Path Query Options for Report Options.",
                          {
                            "$ul": [
                              [
                                "**channelGrouping**: A channel grouping defines a set of rules that can be used to categorize events in a path report.",
                                {
                                  "$ul": [
                                    "**fallbackName**: The name to apply to an event that does not match any of the rules in the channel grouping.",
                                    "**name**: Channel Grouping name.",
                                    "**rules**: Rules within Channel Grouping. There is a limit of 100 rules that can be set per channel grouping."
                                  ]
                                }
                              ],
                              "**pathFilters**: Path Filters. There is a limit of 100 path filters that can be set per report."
                            ]
                          }
                        ]
                      ]
                    }
                  ],
                  "**type**: The type of the report. The type of the report will dictate what dimesions, filters, and metrics can be used."
                ]
              }
            ],
            "**queryId**: Output only. Query ID.",
            [
              "**schedule**: Information on when and how frequently to run a query.",
              {
                "$ul": [
                  [
                    "**endDate**: Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp",
                    {
                      "$ul": [
                        "**day**: Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
                        "**month**: Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
                        "**year**: Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year."
                      ]
                    }
                  ],
                  "**frequency**: How often the query is run.",
                  "**nextRunTimezoneCode**: Canonical timezone code for report generation time. Defaults to `America/New_York`.",
                  [
                    "**startDate**: Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp",
                    {
                      "$ul": [
                        "**day**: Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
                        "**month**: Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
                        "**year**: Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year."
                      ]
                    }
                  ]
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
