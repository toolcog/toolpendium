{
  "name": "containeranalysis_projects_notes_batchCreate",
  "description": "Creates new notes in batch.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The name of the project in the form of `projects/[PROJECT_ID]`, under which the notes are to be created."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/BatchCreateNotesRequest"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "BatchCreateNotesRequest": {
        "description": "Request to create notes in batch.",
        "properties": {
          "notes": {
            "additionalProperties": {
              "$ref": "#/$defs/Note"
            },
            "description": "Required. The notes to create, the key is expected to be the note ID. Max allowed length is 1000.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "Note": {
        "description": "A type of analysis that can be done for a resource.",
        "properties": {
          "attestationAuthority": {
            "$ref": "#/$defs/Authority"
          },
          "baseImage": {
            "$ref": "#/$defs/Basis"
          },
          "build": {
            "$ref": "#/$defs/Build"
          },
          "createTime": {
            "description": "Output only. The time this note was created. This field can be used as a filter in list requests.",
            "format": "google-datetime",
            "type": "string"
          },
          "deployable": {
            "$ref": "#/$defs/Deployable"
          },
          "discovery": {
            "$ref": "#/$defs/Discovery"
          },
          "expirationTime": {
            "description": "Time of expiration for this note. Empty if note does not expire.",
            "format": "google-datetime",
            "type": "string"
          },
          "intoto": {
            "$ref": "#/$defs/InToto"
          },
          "kind": {
            "description": "Output only. The type of analysis. This field can be used as a filter in list requests.",
            "enum": [
              "NOTE_KIND_UNSPECIFIED",
              "VULNERABILITY",
              "BUILD",
              "IMAGE",
              "PACKAGE",
              "DEPLOYMENT",
              "DISCOVERY",
              "ATTESTATION",
              "INTOTO",
              "SBOM",
              "SPDX_PACKAGE",
              "SPDX_FILE",
              "SPDX_RELATIONSHIP",
              "VULNERABILITY_ASSESSMENT",
              "SBOM_REFERENCE"
            ],
            "type": "string"
          },
          "longDescription": {
            "description": "A detailed description of this note.",
            "type": "string"
          },
          "name": {
            "description": "Output only. The name of the note in the form of `projects/[PROVIDER_ID]/notes/[NOTE_ID]`.",
            "type": "string"
          },
          "package": {
            "$ref": "#/$defs/Package"
          },
          "relatedNoteNames": {
            "description": "Other notes related to this note.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "relatedUrl": {
            "description": "URLs associated with this note.",
            "items": {
              "$ref": "#/$defs/RelatedUrl"
            },
            "type": "array"
          },
          "sbom": {
            "$ref": "#/$defs/DocumentNote"
          },
          "sbomReference": {
            "$ref": "#/$defs/SBOMReferenceNote"
          },
          "shortDescription": {
            "description": "A one sentence description of this note.",
            "type": "string"
          },
          "spdxFile": {
            "$ref": "#/$defs/FileNote"
          },
          "spdxPackage": {
            "$ref": "#/$defs/PackageInfoNote"
          },
          "spdxRelationship": {
            "$ref": "#/$defs/RelationshipNote"
          },
          "updateTime": {
            "description": "Output only. The time this note was last updated. This field can be used as a filter in list requests.",
            "format": "google-datetime",
            "type": "string"
          },
          "vulnerability": {
            "$ref": "#/$defs/Vulnerability"
          },
          "vulnerabilityAssessment": {
            "$ref": "#/$defs/VulnerabilityAssessmentNote"
          }
        },
        "type": "object"
      },
      "Authority": {
        "description": "Note kind that represents a logical attestation \"role\" or \"authority\". For example, an organization might have one `Authority` for \"QA\" and one for \"build\". This note is intended to act strictly as a grouping mechanism for the attached occurrences (Attestations). This grouping mechanism also provides a security boundary, since IAM ACLs gate the ability for a principle to attach an occurrence to a given note. It also provides a single point of lookup to find all attached attestation occurrences, even if they don't all live in the same project.",
        "properties": {
          "hint": {
            "$ref": "#/$defs/Hint"
          }
        },
        "type": "object"
      },
      "Hint": {
        "description": "This submessage provides human-readable hints about the purpose of the authority. Because the name of a note acts as its resource reference, it is important to disambiguate the canonical name of the Note (which might be a UUID for security purposes) from \"readable\" names more suitable for debug output. Note that these hints should not be used to look up authorities in security sensitive contexts, such as when looking up attestations to verify.",
        "properties": {
          "humanReadableName": {
            "description": "Required. The human readable name of this attestation authority, for example \"qa\".",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Basis": {
        "description": "Basis describes the base image portion (Note) of the DockerImage relationship. Linked occurrences are derived from this or an equivalent image via: FROM Or an equivalent reference, e.g. a tag of the resource_url.",
        "properties": {
          "fingerprint": {
            "$ref": "#/$defs/Fingerprint"
          },
          "resourceUrl": {
            "description": "Required. Immutable. The resource_url for the resource representing the basis of associated occurrence images.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Fingerprint": {
        "description": "A set of properties that uniquely identify a given Docker image.",
        "properties": {
          "v1Name": {
            "description": "Required. The layer ID of the final layer in the Docker image's v1 representation.",
            "type": "string"
          },
          "v2Blob": {
            "description": "Required. The ordered list of v2 blobs that represent a given image.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "v2Name": {
            "description": "Output only. The name of the image's v2 blobs computed via: [bottom] := v2_blobbottom := sha256(v2_blob[N] + \" \" + v2_name[N+1]) Only the name of the final blob is kept.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Build": {
        "description": "Note holding the version of the provider's builder and the signature of the provenance message in the build details occurrence.",
        "properties": {
          "builderVersion": {
            "description": "Required. Immutable. Version of the builder which produced this build.",
            "type": "string"
          },
          "signature": {
            "$ref": "#/$defs/BuildSignature"
          }
        },
        "type": "object"
      },
      "BuildSignature": {
        "description": "Message encapsulating the signature of the verified build.",
        "properties": {
          "keyId": {
            "description": "An ID for the key used to sign. This could be either an ID for the key stored in `public_key` (such as the ID or fingerprint for a PGP key, or the CN for a cert), or a reference to an external key (such as a reference to a key in Cloud Key Management Service).",
            "type": "string"
          },
          "keyType": {
            "description": "The type of the key, either stored in `public_key` or referenced in `key_id`.",
            "enum": [
              "KEY_TYPE_UNSPECIFIED",
              "PGP_ASCII_ARMORED",
              "PKIX_PEM"
            ],
            "type": "string"
          },
          "publicKey": {
            "description": "Public key of the builder which can be used to verify that the related findings are valid and unchanged. If `key_type` is empty, this defaults to PEM encoded public keys. This field may be empty if `key_id` references an external key. For Cloud Build based signatures, this is a PEM encoded public key. To verify the Cloud Build signature, place the contents of this field into a file (public.pem). The signature field is base64-decoded into its binary representation in signature.bin, and the provenance bytes from `BuildDetails` are base64-decoded into a binary representation in signed.bin. OpenSSL can then verify the signature: `openssl sha256 -verify public.pem -signature signature.bin signed.bin`",
            "type": "string"
          },
          "signature": {
            "description": "Required. Signature of the related `BuildProvenance`. In JSON, this is base-64 encoded.",
            "format": "byte",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Deployable": {
        "description": "An artifact that can be deployed in some runtime.",
        "properties": {
          "resourceUri": {
            "description": "Required. Resource URI for the artifact being deployed.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Discovery": {
        "description": "A note that indicates a type of analysis a provider would perform. This note exists in a provider's project. A `Discovery` occurrence is created in a consumer's project at the start of analysis.",
        "properties": {
          "analysisKind": {
            "description": "Required. Immutable. The kind of analysis that is handled by this discovery.",
            "enum": [
              "NOTE_KIND_UNSPECIFIED",
              "VULNERABILITY",
              "BUILD",
              "IMAGE",
              "PACKAGE",
              "DEPLOYMENT",
              "DISCOVERY",
              "ATTESTATION",
              "INTOTO",
              "SBOM",
              "SPDX_PACKAGE",
              "SPDX_FILE",
              "SPDX_RELATIONSHIP",
              "VULNERABILITY_ASSESSMENT",
              "SBOM_REFERENCE"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "InToto": {
        "description": "This contains the fields corresponding to the definition of a software supply chain step in an in-toto layout. This information goes into a Grafeas note.",
        "properties": {
          "expectedCommand": {
            "description": "This field contains the expected command used to perform the step.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "expectedMaterials": {
            "description": "The following fields contain in-toto artifact rules identifying the artifacts that enter this supply chain step, and exit the supply chain step, i.e. materials and products of the step.",
            "items": {
              "$ref": "#/$defs/ArtifactRule"
            },
            "type": "array"
          },
          "expectedProducts": {
            "items": {
              "$ref": "#/$defs/ArtifactRule"
            },
            "type": "array"
          },
          "signingKeys": {
            "description": "This field contains the public keys that can be used to verify the signatures on the step metadata.",
            "items": {
              "$ref": "#/$defs/SigningKey"
            },
            "type": "array"
          },
          "stepName": {
            "description": "This field identifies the name of the step in the supply chain.",
            "type": "string"
          },
          "threshold": {
            "description": "This field contains a value that indicates the minimum number of keys that need to be used to sign the step's in-toto link.",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ArtifactRule": {
        "description": "Defines an object to declare an in-toto artifact rule",
        "properties": {
          "artifactRule": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "SigningKey": {
        "description": "This defines the format used to record keys used in the software supply chain. An in-toto link is attested using one or more keys defined in the in-toto layout. An example of this is: { \"key_id\": \"776a00e29f3559e0141b3b096f696abc6cfb0c657ab40f441132b345b0...\", \"key_type\": \"rsa\", \"public_key_value\": \"-----BEGIN PUBLIC KEY-----\\nMIIBojANBgkqhkiG9w0B...\", \"key_scheme\": \"rsassa-pss-sha256\" } The format for in-toto's key definition can be found in section 4.2 of the in-toto specification.",
        "properties": {
          "keyId": {
            "description": "key_id is an identifier for the signing key.",
            "type": "string"
          },
          "keyScheme": {
            "description": "This field contains the corresponding signature scheme. Eg: \"rsassa-pss-sha256\".",
            "type": "string"
          },
          "keyType": {
            "description": "This field identifies the specific signing method. Eg: \"rsa\", \"ed25519\", and \"ecdsa\".",
            "type": "string"
          },
          "publicKeyValue": {
            "description": "This field contains the actual public key.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Package": {
        "description": "Package represents a particular package version.",
        "properties": {
          "architecture": {
            "description": "The CPU architecture for which packages in this distribution channel were built. Architecture will be blank for language packages.",
            "enum": [
              "ARCHITECTURE_UNSPECIFIED",
              "X86",
              "X64"
            ],
            "type": "string"
          },
          "cpeUri": {
            "description": "The cpe_uri in [CPE format](https://cpe.mitre.org/specification/) denoting the package manager version distributing a package. The cpe_uri will be blank for language packages.",
            "type": "string"
          },
          "description": {
            "description": "The description of this package.",
            "type": "string"
          },
          "digest": {
            "description": "Hash value, typically a file digest, that allows unique identification a specific package.",
            "items": {
              "$ref": "#/$defs/Digest"
            },
            "type": "array"
          },
          "distribution": {
            "description": "The various channels by which a package is distributed.",
            "items": {
              "$ref": "#/$defs/Distribution"
            },
            "type": "array"
          },
          "license": {
            "$ref": "#/$defs/License"
          },
          "maintainer": {
            "description": "A freeform text denoting the maintainer of this package.",
            "type": "string"
          },
          "name": {
            "description": "Required. Immutable. The name of the package.",
            "type": "string"
          },
          "packageType": {
            "description": "The type of package; whether native or non native (e.g., ruby gems, node.js packages, etc.).",
            "type": "string"
          },
          "url": {
            "description": "The homepage for this package.",
            "type": "string"
          },
          "version": {
            "$ref": "#/$defs/Version"
          }
        },
        "type": "object"
      },
      "Digest": {
        "description": "Digest information.",
        "properties": {
          "algo": {
            "description": "`SHA1`, `SHA512` etc.",
            "type": "string"
          },
          "digestBytes": {
            "description": "Value of the digest.",
            "format": "byte",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Distribution": {
        "description": "This represents a particular channel of distribution for a given package. E.g., Debian's jessie-backports dpkg mirror.",
        "properties": {
          "architecture": {
            "description": "The CPU architecture for which packages in this distribution channel were built.",
            "enum": [
              "ARCHITECTURE_UNSPECIFIED",
              "X86",
              "X64"
            ],
            "type": "string"
          },
          "cpeUri": {
            "description": "Required. The cpe_uri in [CPE format](https://cpe.mitre.org/specification/) denoting the package manager version distributing a package.",
            "type": "string"
          },
          "description": {
            "description": "The distribution channel-specific description of this package.",
            "type": "string"
          },
          "latestVersion": {
            "$ref": "#/$defs/Version"
          },
          "maintainer": {
            "description": "A freeform string denoting the maintainer of this package.",
            "type": "string"
          },
          "url": {
            "description": "The distribution channel-specific homepage for this package.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Version": {
        "description": "Version contains structured information about the version of a package.",
        "properties": {
          "epoch": {
            "description": "Used to correct mistakes in the version numbering scheme.",
            "format": "int32",
            "type": "integer"
          },
          "inclusive": {
            "description": "Whether this version is specifying part of an inclusive range. Grafeas does not have the capability to specify version ranges; instead we have fields that specify start version and end versions. At times this is insufficient - we also need to specify whether the version is included in the range or is excluded from the range. This boolean is expected to be set to true when the version is included in a range.",
            "type": "boolean"
          },
          "kind": {
            "description": "Required. Distinguishes between sentinel MIN/MAX versions and normal versions.",
            "enum": [
              "VERSION_KIND_UNSPECIFIED",
              "NORMAL",
              "MINIMUM",
              "MAXIMUM"
            ],
            "type": "string"
          },
          "name": {
            "description": "Required only when version kind is NORMAL. The main part of the version name.",
            "type": "string"
          },
          "revision": {
            "description": "The iteration of the package build from the above version.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "License": {
        "description": "License information.",
        "properties": {
          "comments": {
            "description": "Comments",
            "type": "string"
          },
          "expression": {
            "description": "Often a single license can be used to represent the licensing terms. Sometimes it is necessary to include a choice of one or more licenses or some combination of license identifiers. Examples: \"LGPL-2.1-only OR MIT\", \"LGPL-2.1-only AND MIT\", \"GPL-2.0-or-later WITH Bison-exception-2.2\".",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RelatedUrl": {
        "description": "Metadata for any related URL information.",
        "properties": {
          "label": {
            "description": "Label to describe usage of the URL.",
            "type": "string"
          },
          "url": {
            "description": "Specific URL associated with the resource.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DocumentNote": {
        "description": "DocumentNote represents an SPDX Document Creation Information section: https://spdx.github.io/spdx-spec/2-document-creation-information/",
        "properties": {
          "dataLicence": {
            "description": "Compliance with the SPDX specification includes populating the SPDX fields therein with data related to such fields (\"SPDX-Metadata\")",
            "type": "string"
          },
          "spdxVersion": {
            "description": "Provide a reference number that can be used to understand how to parse and interpret the rest of the file",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SBOMReferenceNote": {
        "description": "The note representing an SBOM reference.",
        "properties": {
          "format": {
            "description": "The format that SBOM takes. E.g. may be spdx, cyclonedx, etc...",
            "type": "string"
          },
          "version": {
            "description": "The version of the format that the SBOM takes. E.g. if the format is spdx, the version may be 2.3.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "FileNote": {
        "description": "FileNote represents an SPDX File Information section: https://spdx.github.io/spdx-spec/4-file-information/",
        "properties": {
          "checksum": {
            "description": "Provide a unique identifier to match analysis information on each specific file in a package",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "fileType": {
            "description": "This field provides information about the type of file identified",
            "enum": [
              "FILE_TYPE_UNSPECIFIED",
              "SOURCE",
              "BINARY",
              "ARCHIVE",
              "APPLICATION",
              "AUDIO",
              "IMAGE",
              "TEXT",
              "VIDEO",
              "DOCUMENTATION",
              "SPDX",
              "OTHER"
            ],
            "type": "string"
          },
          "title": {
            "description": "Identify the full path and filename that corresponds to the file information in this section",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PackageInfoNote": {
        "description": "PackageInfoNote represents an SPDX Package Information section: https://spdx.github.io/spdx-spec/3-package-information/",
        "properties": {
          "analyzed": {
            "description": "Indicates whether the file content of this package has been available for or subjected to analysis when creating the SPDX document",
            "type": "boolean"
          },
          "attribution": {
            "description": "A place for the SPDX data creator to record, at the package level, acknowledgements that may be needed to be communicated in some contexts",
            "type": "string"
          },
          "checksum": {
            "description": "Provide an independently reproducible mechanism that permits unique identification of a specific package that correlates to the data in this SPDX file",
            "type": "string"
          },
          "copyright": {
            "description": "Identify the copyright holders of the package, as well as any dates present",
            "type": "string"
          },
          "detailedDescription": {
            "description": "A more detailed description of the package",
            "type": "string"
          },
          "downloadLocation": {
            "description": "This section identifies the download Universal Resource Locator (URL), or a specific location within a version control system (VCS) for the package at the time that the SPDX file was created",
            "type": "string"
          },
          "externalRefs": {
            "description": "ExternalRef",
            "items": {
              "$ref": "#/$defs/ExternalRef"
            },
            "type": "array"
          },
          "filesLicenseInfo": {
            "description": "Contain the license the SPDX file creator has concluded as governing the This field is to contain a list of all licenses found in the package. The relationship between licenses (i.e., conjunctive, disjunctive) is not specified in this field – it is simply a listing of all licenses found",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "homePage": {
            "description": "Provide a place for the SPDX file creator to record a web site that serves as the package's home page",
            "type": "string"
          },
          "licenseDeclared": {
            "$ref": "#/$defs/License"
          },
          "originator": {
            "description": "If the package identified in the SPDX file originated from a different person or organization than identified as Package Supplier, this field identifies from where or whom the package originally came",
            "type": "string"
          },
          "packageType": {
            "description": "The type of package: OS, MAVEN, GO, GO_STDLIB, etc.",
            "type": "string"
          },
          "summaryDescription": {
            "description": "A short description of the package",
            "type": "string"
          },
          "supplier": {
            "description": "Identify the actual distribution source for the package/directory identified in the SPDX file",
            "type": "string"
          },
          "title": {
            "description": "Identify the full name of the package as given by the Package Originator",
            "type": "string"
          },
          "verificationCode": {
            "description": "This field provides an independently reproducible mechanism identifying specific contents of a package based on the actual files (except the SPDX file itself, if it is included in the package) that make up each package and that correlates to the data in this SPDX file",
            "type": "string"
          },
          "version": {
            "description": "Identify the version of the package",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ExternalRef": {
        "description": "An External Reference allows a Package to reference an external source of additional information, metadata, enumerations, asset identifiers, or downloadable content believed to be relevant to the Package",
        "properties": {
          "category": {
            "description": "An External Reference allows a Package to reference an external source of additional information, metadata, enumerations, asset identifiers, or downloadable content believed to be relevant to the Package",
            "enum": [
              "CATEGORY_UNSPECIFIED",
              "SECURITY",
              "PACKAGE_MANAGER",
              "PERSISTENT_ID",
              "OTHER"
            ],
            "type": "string"
          },
          "comment": {
            "description": "Human-readable information about the purpose and target of the reference",
            "type": "string"
          },
          "locator": {
            "description": "The unique string with no spaces necessary to access the package-specific information, metadata, or content within the target location",
            "type": "string"
          },
          "type": {
            "description": "Type of category (e.g. 'npm' for the PACKAGE_MANAGER category)",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RelationshipNote": {
        "description": "RelationshipNote represents an SPDX Relationship section: https://spdx.github.io/spdx-spec/7-relationships-between-SPDX-elements/",
        "properties": {
          "type": {
            "description": "The type of relationship between the source and target SPDX elements",
            "enum": [
              "RELATIONSHIP_TYPE_UNSPECIFIED",
              "DESCRIBES",
              "DESCRIBED_BY",
              "CONTAINS",
              "CONTAINED_BY",
              "DEPENDS_ON",
              "DEPENDENCY_OF",
              "DEPENDENCY_MANIFEST_OF",
              "BUILD_DEPENDENCY_OF",
              "DEV_DEPENDENCY_OF",
              "OPTIONAL_DEPENDENCY_OF",
              "PROVIDED_DEPENDENCY_OF",
              "TEST_DEPENDENCY_OF",
              "RUNTIME_DEPENDENCY_OF",
              "EXAMPLE_OF",
              "GENERATES",
              "GENERATED_FROM",
              "ANCESTOR_OF",
              "DESCENDANT_OF",
              "VARIANT_OF",
              "DISTRIBUTION_ARTIFACT",
              "PATCH_FOR",
              "PATCH_APPLIED",
              "COPY_OF",
              "FILE_ADDED",
              "FILE_DELETED",
              "FILE_MODIFIED",
              "EXPANDED_FROM_ARCHIVE",
              "DYNAMIC_LINK",
              "STATIC_LINK",
              "DATA_FILE_OF",
              "TEST_CASE_OF",
              "BUILD_TOOL_OF",
              "DEV_TOOL_OF",
              "TEST_OF",
              "TEST_TOOL_OF",
              "DOCUMENTATION_OF",
              "OPTIONAL_COMPONENT_OF",
              "METAFILE_OF",
              "PACKAGE_OF",
              "AMENDS",
              "PREREQUISITE_FOR",
              "HAS_PREREQUISITE",
              "OTHER"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "Vulnerability": {
        "description": "Vulnerability provides metadata about a security vulnerability in a Note.",
        "properties": {
          "cvssScore": {
            "description": "The CVSS score for this vulnerability.",
            "format": "float",
            "type": "number"
          },
          "cvssV2": {
            "$ref": "#/$defs/CVSS"
          },
          "cvssV3": {
            "$ref": "#/$defs/CVSSv3"
          },
          "cvssVersion": {
            "description": "CVSS version used to populate cvss_score and severity.",
            "enum": [
              "CVSS_VERSION_UNSPECIFIED",
              "CVSS_VERSION_2",
              "CVSS_VERSION_3"
            ],
            "type": "string"
          },
          "cwe": {
            "description": "A list of CWE for this vulnerability. For details, see: https://cwe.mitre.org/index.html",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "details": {
            "description": "All information about the package to specifically identify this vulnerability. One entry per (version range and cpe_uri) the package vulnerability has manifested in.",
            "items": {
              "$ref": "#/$defs/Detail"
            },
            "type": "array"
          },
          "severity": {
            "description": "Note provider assigned impact of the vulnerability.",
            "enum": [
              "SEVERITY_UNSPECIFIED",
              "MINIMAL",
              "LOW",
              "MEDIUM",
              "HIGH",
              "CRITICAL"
            ],
            "type": "string"
          },
          "sourceUpdateTime": {
            "description": "The time this information was last changed at the source. This is an upstream timestamp from the underlying information source - e.g. Ubuntu security tracker.",
            "format": "google-datetime",
            "type": "string"
          },
          "windowsDetails": {
            "description": "Windows details get their own format because the information format and model don't match a normal detail. Specifically Windows updates are done as patches, thus Windows vulnerabilities really are a missing package, rather than a package being at an incorrect version.",
            "items": {
              "$ref": "#/$defs/WindowsDetail"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "CVSS": {
        "description": "Common Vulnerability Scoring System. This message is compatible with CVSS v2 and v3. For CVSS v2 details, see https://www.first.org/cvss/v2/guide CVSS v2 calculator: https://nvd.nist.gov/vuln-metrics/cvss/v2-calculator For CVSS v3 details, see https://www.first.org/cvss/specification-document CVSS v3 calculator: https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator",
        "properties": {
          "attackComplexity": {
            "description": "Defined in CVSS v3, CVSS v2",
            "enum": [
              "ATTACK_COMPLEXITY_UNSPECIFIED",
              "ATTACK_COMPLEXITY_LOW",
              "ATTACK_COMPLEXITY_HIGH",
              "ATTACK_COMPLEXITY_MEDIUM"
            ],
            "type": "string"
          },
          "attackVector": {
            "description": "Base Metrics Represents the intrinsic characteristics of a vulnerability that are constant over time and across user environments. Defined in CVSS v3, CVSS v2",
            "enum": [
              "ATTACK_VECTOR_UNSPECIFIED",
              "ATTACK_VECTOR_NETWORK",
              "ATTACK_VECTOR_ADJACENT",
              "ATTACK_VECTOR_LOCAL",
              "ATTACK_VECTOR_PHYSICAL"
            ],
            "type": "string"
          },
          "authentication": {
            "description": "Defined in CVSS v2",
            "enum": [
              "AUTHENTICATION_UNSPECIFIED",
              "AUTHENTICATION_MULTIPLE",
              "AUTHENTICATION_SINGLE",
              "AUTHENTICATION_NONE"
            ],
            "type": "string"
          },
          "availabilityImpact": {
            "description": "Defined in CVSS v3, CVSS v2",
            "enum": [
              "IMPACT_UNSPECIFIED",
              "IMPACT_HIGH",
              "IMPACT_LOW",
              "IMPACT_NONE",
              "IMPACT_PARTIAL",
              "IMPACT_COMPLETE"
            ],
            "type": "string"
          },
          "baseScore": {
            "description": "The base score is a function of the base metric scores.",
            "format": "float",
            "type": "number"
          },
          "confidentialityImpact": {
            "description": "Defined in CVSS v3, CVSS v2",
            "enum": [
              "IMPACT_UNSPECIFIED",
              "IMPACT_HIGH",
              "IMPACT_LOW",
              "IMPACT_NONE",
              "IMPACT_PARTIAL",
              "IMPACT_COMPLETE"
            ],
            "type": "string"
          },
          "exploitabilityScore": {
            "format": "float",
            "type": "number"
          },
          "impactScore": {
            "format": "float",
            "type": "number"
          },
          "integrityImpact": {
            "description": "Defined in CVSS v3, CVSS v2",
            "enum": [
              "IMPACT_UNSPECIFIED",
              "IMPACT_HIGH",
              "IMPACT_LOW",
              "IMPACT_NONE",
              "IMPACT_PARTIAL",
              "IMPACT_COMPLETE"
            ],
            "type": "string"
          },
          "privilegesRequired": {
            "description": "Defined in CVSS v3",
            "enum": [
              "PRIVILEGES_REQUIRED_UNSPECIFIED",
              "PRIVILEGES_REQUIRED_NONE",
              "PRIVILEGES_REQUIRED_LOW",
              "PRIVILEGES_REQUIRED_HIGH"
            ],
            "type": "string"
          },
          "scope": {
            "description": "Defined in CVSS v3",
            "enum": [
              "SCOPE_UNSPECIFIED",
              "SCOPE_UNCHANGED",
              "SCOPE_CHANGED"
            ],
            "type": "string"
          },
          "userInteraction": {
            "description": "Defined in CVSS v3",
            "enum": [
              "USER_INTERACTION_UNSPECIFIED",
              "USER_INTERACTION_NONE",
              "USER_INTERACTION_REQUIRED"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "CVSSv3": {
        "description": "Deprecated. Common Vulnerability Scoring System version 3. For details, see https://www.first.org/cvss/specification-document",
        "properties": {
          "attackComplexity": {
            "enum": [
              "ATTACK_COMPLEXITY_UNSPECIFIED",
              "ATTACK_COMPLEXITY_LOW",
              "ATTACK_COMPLEXITY_HIGH"
            ],
            "type": "string"
          },
          "attackVector": {
            "description": "Base Metrics Represents the intrinsic characteristics of a vulnerability that are constant over time and across user environments.",
            "enum": [
              "ATTACK_VECTOR_UNSPECIFIED",
              "ATTACK_VECTOR_NETWORK",
              "ATTACK_VECTOR_ADJACENT",
              "ATTACK_VECTOR_LOCAL",
              "ATTACK_VECTOR_PHYSICAL"
            ],
            "type": "string"
          },
          "availabilityImpact": {
            "enum": [
              "IMPACT_UNSPECIFIED",
              "IMPACT_HIGH",
              "IMPACT_LOW",
              "IMPACT_NONE"
            ],
            "type": "string"
          },
          "baseScore": {
            "description": "The base score is a function of the base metric scores.",
            "format": "float",
            "type": "number"
          },
          "confidentialityImpact": {
            "enum": [
              "IMPACT_UNSPECIFIED",
              "IMPACT_HIGH",
              "IMPACT_LOW",
              "IMPACT_NONE"
            ],
            "type": "string"
          },
          "exploitabilityScore": {
            "format": "float",
            "type": "number"
          },
          "impactScore": {
            "format": "float",
            "type": "number"
          },
          "integrityImpact": {
            "enum": [
              "IMPACT_UNSPECIFIED",
              "IMPACT_HIGH",
              "IMPACT_LOW",
              "IMPACT_NONE"
            ],
            "type": "string"
          },
          "privilegesRequired": {
            "enum": [
              "PRIVILEGES_REQUIRED_UNSPECIFIED",
              "PRIVILEGES_REQUIRED_NONE",
              "PRIVILEGES_REQUIRED_LOW",
              "PRIVILEGES_REQUIRED_HIGH"
            ],
            "type": "string"
          },
          "scope": {
            "enum": [
              "SCOPE_UNSPECIFIED",
              "SCOPE_UNCHANGED",
              "SCOPE_CHANGED"
            ],
            "type": "string"
          },
          "userInteraction": {
            "enum": [
              "USER_INTERACTION_UNSPECIFIED",
              "USER_INTERACTION_NONE",
              "USER_INTERACTION_REQUIRED"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "Detail": {
        "description": "Identifies all appearances of this vulnerability in the package for a specific distro/location. For example: glibc in cpe:/o:debian:debian_linux:8 for versions 2.1 - 2.2",
        "properties": {
          "cpeUri": {
            "description": "Required. The CPE URI in [cpe format](https://cpe.mitre.org/specification/) in which the vulnerability manifests. Examples include distro or storage location for vulnerable jar.",
            "type": "string"
          },
          "description": {
            "description": "A vendor-specific description of this note.",
            "type": "string"
          },
          "fixedLocation": {
            "$ref": "#/$defs/VulnerabilityLocation"
          },
          "isObsolete": {
            "description": "Whether this detail is obsolete. Occurrences are expected not to point to obsolete details.",
            "type": "boolean"
          },
          "maxAffectedVersion": {
            "$ref": "#/$defs/Version"
          },
          "minAffectedVersion": {
            "$ref": "#/$defs/Version"
          },
          "package": {
            "description": "Required. The name of the package where the vulnerability was found.",
            "type": "string"
          },
          "packageType": {
            "description": "The type of package; whether native or non native(ruby gems, node.js packages etc).",
            "type": "string"
          },
          "severityName": {
            "description": "The severity (eg: distro assigned severity) for this vulnerability.",
            "type": "string"
          },
          "source": {
            "description": "The source from which the information in this Detail was obtained.",
            "type": "string"
          },
          "sourceUpdateTime": {
            "description": "The time this information was last changed at the source. This is an upstream timestamp from the underlying information source - e.g. Ubuntu security tracker.",
            "format": "google-datetime",
            "type": "string"
          },
          "vendor": {
            "description": "The name of the vendor of the product.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "VulnerabilityLocation": {
        "description": "The location of the vulnerability.",
        "properties": {
          "cpeUri": {
            "description": "Required. The CPE URI in [cpe format](https://cpe.mitre.org/specification/) format. Examples include distro or storage location for vulnerable jar.",
            "type": "string"
          },
          "package": {
            "description": "Required. The package being described.",
            "type": "string"
          },
          "version": {
            "$ref": "#/$defs/Version"
          }
        },
        "type": "object"
      },
      "WindowsDetail": {
        "properties": {
          "cpeUri": {
            "description": "Required. The CPE URI in [cpe format](https://cpe.mitre.org/specification/) in which the vulnerability manifests. Examples include distro or storage location for vulnerable jar.",
            "type": "string"
          },
          "description": {
            "description": "The description of the vulnerability.",
            "type": "string"
          },
          "fixingKbs": {
            "description": "Required. The names of the KBs which have hotfixes to mitigate this vulnerability. Note that there may be multiple hotfixes (and thus multiple KBs) that mitigate a given vulnerability. Currently any listed kb's presence is considered a fix.",
            "items": {
              "$ref": "#/$defs/KnowledgeBase"
            },
            "type": "array"
          },
          "name": {
            "description": "Required. The name of the vulnerability.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "KnowledgeBase": {
        "properties": {
          "name": {
            "description": "The KB name (generally of the form KB[0-9]+ i.e. KB123456).",
            "type": "string"
          },
          "url": {
            "description": "A link to the KB in the Windows update catalog - https://www.catalog.update.microsoft.com/",
            "type": "string"
          }
        },
        "type": "object"
      },
      "VulnerabilityAssessmentNote": {
        "description": "A single VulnerabilityAssessmentNote represents one particular product's vulnerability assessment for one CVE.",
        "properties": {
          "assessment": {
            "$ref": "#/$defs/Assessment"
          },
          "languageCode": {
            "description": "Identifies the language used by this document, corresponding to IETF BCP 47 / RFC 5646.",
            "type": "string"
          },
          "longDescription": {
            "description": "A detailed description of this Vex.",
            "type": "string"
          },
          "product": {
            "$ref": "#/$defs/Product"
          },
          "publisher": {
            "$ref": "#/$defs/Publisher"
          },
          "shortDescription": {
            "description": "A one sentence description of this Vex.",
            "type": "string"
          },
          "title": {
            "description": "The title of the note. E.g. `Vex-Debian-11.4`",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Assessment": {
        "description": "Assessment provides all information that is related to a single vulnerability for this product.",
        "properties": {
          "cve": {
            "deprecated": true,
            "description": "Holds the MITRE standard Common Vulnerabilities and Exposures (CVE) tracking number for the vulnerability. Deprecated: Use vulnerability_id instead to denote CVEs.",
            "type": "string"
          },
          "impacts": {
            "description": "Contains information about the impact of this vulnerability, this will change with time.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "justification": {
            "$ref": "#/$defs/Justification"
          },
          "longDescription": {
            "description": "A detailed description of this Vex.",
            "type": "string"
          },
          "relatedUris": {
            "description": "Holds a list of references associated with this vulnerability item and assessment. These uris have additional information about the vulnerability and the assessment itself. E.g. Link to a document which details how this assessment concluded the state of this vulnerability.",
            "items": {
              "$ref": "#/$defs/RelatedUrl"
            },
            "type": "array"
          },
          "remediations": {
            "description": "Specifies details on how to handle (and presumably, fix) a vulnerability.",
            "items": {
              "$ref": "#/$defs/Remediation"
            },
            "type": "array"
          },
          "shortDescription": {
            "description": "A one sentence description of this Vex.",
            "type": "string"
          },
          "state": {
            "description": "Provides the state of this Vulnerability assessment.",
            "enum": [
              "STATE_UNSPECIFIED",
              "AFFECTED",
              "NOT_AFFECTED",
              "FIXED",
              "UNDER_INVESTIGATION"
            ],
            "type": "string"
          },
          "vulnerabilityId": {
            "description": "The vulnerability identifier for this Assessment. Will hold one of common identifiers e.g. CVE, GHSA etc.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Justification": {
        "description": "Justification provides the justification when the state of the assessment if NOT_AFFECTED.",
        "properties": {
          "details": {
            "description": "Additional details on why this justification was chosen.",
            "type": "string"
          },
          "justificationType": {
            "description": "The justification type for this vulnerability.",
            "enum": [
              "JUSTIFICATION_TYPE_UNSPECIFIED",
              "COMPONENT_NOT_PRESENT",
              "VULNERABLE_CODE_NOT_PRESENT",
              "VULNERABLE_CODE_NOT_IN_EXECUTE_PATH",
              "VULNERABLE_CODE_CANNOT_BE_CONTROLLED_BY_ADVERSARY",
              "INLINE_MITIGATIONS_ALREADY_EXIST"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "Remediation": {
        "description": "Specifies details on how to handle (and presumably, fix) a vulnerability.",
        "properties": {
          "details": {
            "description": "Contains a comprehensive human-readable discussion of the remediation.",
            "type": "string"
          },
          "remediationType": {
            "description": "The type of remediation that can be applied.",
            "enum": [
              "REMEDIATION_TYPE_UNSPECIFIED",
              "MITIGATION",
              "NO_FIX_PLANNED",
              "NONE_AVAILABLE",
              "VENDOR_FIX",
              "WORKAROUND"
            ],
            "type": "string"
          },
          "remediationUri": {
            "$ref": "#/$defs/RelatedUrl"
          }
        },
        "type": "object"
      },
      "Product": {
        "description": "Product contains information about a product and how to uniquely identify it.",
        "properties": {
          "genericUri": {
            "description": "Contains a URI which is vendor-specific. Example: The artifact repository URL of an image.",
            "type": "string"
          },
          "id": {
            "description": "Token that identifies a product so that it can be referred to from other parts in the document. There is no predefined format as long as it uniquely identifies a group in the context of the current document.",
            "type": "string"
          },
          "name": {
            "description": "Name of the product.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Publisher": {
        "description": "Publisher contains information about the publisher of this Note.",
        "properties": {
          "issuingAuthority": {
            "description": "Provides information about the authority of the issuing party to release the document, in particular, the party's constituency and responsibilities or other obligations.",
            "type": "string"
          },
          "name": {
            "description": "Name of the publisher. Examples: 'Google', 'Google Cloud Platform'.",
            "type": "string"
          },
          "publisherNamespace": {
            "description": "The context or namespace. Contains a URL which is under control of the issuing party and can be used as a globally unique identifier for that issuing party. Example: https://csaf.io",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://containeranalysis.googleapis.com//v1beta1/{parent}/notes:batchCreate{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Response for creating notes in batch.",
        "**Key properties:**",
        {
          "$ul": [
            "**notes**: The notes that were created."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
