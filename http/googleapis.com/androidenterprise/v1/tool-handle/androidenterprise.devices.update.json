{
  "name": "androidenterprise_devices_update",
  "description": "Updates the device policy. To ensure the policy is properly enforced, you need to prevent unmanaged accounts from accessing Google Play by setting the allowed_accounts in the managed configuration for the Google Play package. See restrict accounts in Google Play. When provisioning a new device, you should set the device policy using this method before adding the managed Google Play Account to the device, otherwise the policy will not be applied for a short period of time after adding the account to the device.",
  "parameters": {
    "type": "object",
    "properties": {
      "enterpriseId": {
        "type": "string",
        "description": "The ID of the enterprise."
      },
      "userId": {
        "type": "string",
        "description": "The ID of the user."
      },
      "deviceId": {
        "type": "string",
        "description": "The ID of the device."
      },
      "updateMask": {
        "type": "string",
        "description": "Mask that identifies which fields to update. If not set, all modifiable fields will be modified. When set in a query parameter, this field should be specified as updateMask=<field1>,<field2>,..."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/Device"
      }
    },
    "required": [
      "enterpriseId",
      "userId",
      "deviceId"
    ],
    "$defs": {
      "Device": {
        "description": "A Devices resource represents a mobile device managed by the EMM and belonging to a specific enterprise user.",
        "properties": {
          "androidId": {
            "description": "The Google Play Services Android ID for the device encoded as a lowercase hex string. For example, \"123456789abcdef0\".",
            "type": "string"
          },
          "device": {
            "description": "The internal hardware codename of the device. This comes from android.os.Build.DEVICE. (field named \"device\" per logs/wireless/android/android_checkin.proto)",
            "type": "string"
          },
          "latestBuildFingerprint": {
            "description": "The build fingerprint of the device if known.",
            "type": "string"
          },
          "maker": {
            "description": "The manufacturer of the device. This comes from android.os.Build.MANUFACTURER.",
            "type": "string"
          },
          "managementType": {
            "description": "Identifies the extent to which the device is controlled by a managed Google Play EMM in various deployment configurations. Possible values include: - \"managedDevice\", a device that has the EMM's device policy controller (DPC) as the device owner. - \"managedProfile\", a device that has a profile managed by the DPC (DPC is profile owner) in addition to a separate, personal profile that is unavailable to the DPC. - \"containerApp\", no longer used (deprecated). - \"unmanagedProfile\", a device that has been allowed (by the domain's admin, using the Admin Console to enable the privilege) to use managed Google Play, but the profile is itself not owned by a DPC. ",
            "enum": [
              "managedDevice",
              "managedProfile",
              "containerApp",
              "unmanagedProfile"
            ],
            "type": "string"
          },
          "model": {
            "description": "The model name of the device. This comes from android.os.Build.MODEL.",
            "type": "string"
          },
          "policy": {
            "$ref": "#/$defs/Policy"
          },
          "product": {
            "description": "The product name of the device. This comes from android.os.Build.PRODUCT.",
            "type": "string"
          },
          "report": {
            "$ref": "#/$defs/DeviceReport"
          },
          "retailBrand": {
            "description": "Retail brand for the device, if set. See android.os.Build.BRAND",
            "type": "string"
          },
          "sdkVersion": {
            "description": "API compatibility version.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Policy": {
        "description": "The device policy for a given managed device.",
        "properties": {
          "autoUpdatePolicy": {
            "deprecated": true,
            "description": "Controls when automatic app updates on the device can be applied. Recommended alternative: autoUpdateMode which is set per app, provides greater flexibility around update frequency. When autoUpdateMode is set to AUTO_UPDATE_POSTPONED or AUTO_UPDATE_HIGH_PRIORITY, autoUpdatePolicy has no effect. \"choiceToTheUser\" allows the device's user to configure the app update policy. \"always\" enables auto updates. \"never\" disables auto updates. \"wifiOnly\" enables auto updates only when the device is connected to wifi.",
            "enum": [
              "autoUpdatePolicyUnspecified",
              "choiceToTheUser",
              "never",
              "wifiOnly",
              "always"
            ],
            "type": "string"
          },
          "deviceReportPolicy": {
            "description": "Whether the device reports app states to the EMM. The default value is \"deviceReportDisabled\".",
            "enum": [
              "deviceReportPolicyUnspecified",
              "deviceReportDisabled",
              "deviceReportEnabled"
            ],
            "type": "string"
          },
          "maintenanceWindow": {
            "$ref": "#/$defs/MaintenanceWindow"
          },
          "productAvailabilityPolicy": {
            "description": "The availability granted to the device for the specified products. \"all\" gives the device access to all products, regardless of approval status. \"all\" does not enable automatic visibility of \"alpha\" or \"beta\" tracks. \"whitelist\" grants the device access the products specified in productPolicy[]. Only products that are approved or products that were previously approved (products with revoked approval) by the enterprise can be whitelisted. If no value is provided, the availability set at the user level is applied by default.",
            "enum": [
              "productAvailabilityPolicyUnspecified",
              "whitelist",
              "all"
            ],
            "type": "string"
          },
          "productPolicy": {
            "description": "The list of product policies. The productAvailabilityPolicy needs to be set to WHITELIST or ALL for the product policies to be applied.",
            "items": {
              "$ref": "#/$defs/ProductPolicy"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "MaintenanceWindow": {
        "description": "Maintenance window for managed Google Play Accounts. This allows Play store to update the apps on the foreground in the designated window.",
        "properties": {
          "durationMs": {
            "description": "Duration of the maintenance window, in milliseconds. The duration must be between 30 minutes and 24 hours (inclusive).",
            "format": "int64",
            "type": "string"
          },
          "startTimeAfterMidnightMs": {
            "description": "Start time of the maintenance window, in milliseconds after midnight on the device. Windows can span midnight.",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProductPolicy": {
        "description": "The policy for a product.",
        "properties": {
          "autoInstallPolicy": {
            "$ref": "#/$defs/AutoInstallPolicy"
          },
          "autoUpdateMode": {
            "description": "The auto-update mode for the product. When autoUpdateMode is used, it always takes precedence over the user's choice. So when a user makes changes to the device settings manually, these changes are ignored.",
            "enum": [
              "autoUpdateModeUnspecified",
              "autoUpdateDefault",
              "autoUpdatePostponed",
              "autoUpdateHighPriority"
            ],
            "type": "string"
          },
          "enterpriseAuthenticationAppLinkConfigs": {
            "description": "An authentication URL configuration for the authenticator app of an identity provider. This helps to launch the identity provider's authenticator app during the authentication happening in a private app using Android WebView. Authenticator app should already be the default handler for the authentication url on the device.",
            "items": {
              "$ref": "#/$defs/EnterpriseAuthenticationAppLinkConfig"
            },
            "type": "array"
          },
          "managedConfiguration": {
            "$ref": "#/$defs/ManagedConfiguration"
          },
          "productId": {
            "description": "The ID of the product. For example, \"app:com.google.android.gm\".",
            "type": "string"
          },
          "trackIds": {
            "description": "Grants the device visibility to the specified product release track(s), identified by trackIds. The list of release tracks of a product can be obtained by calling Products.Get.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tracks": {
            "description": "Deprecated. Use trackIds instead.",
            "items": {
              "enum": [
                "appTrackUnspecified",
                "production",
                "beta",
                "alpha"
              ],
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AutoInstallPolicy": {
        "properties": {
          "autoInstallConstraint": {
            "description": "The constraints for auto-installing the app. You can specify a maximum of one constraint.",
            "items": {
              "$ref": "#/$defs/AutoInstallConstraint"
            },
            "type": "array"
          },
          "autoInstallMode": {
            "description": "The auto-install mode. If unset, defaults to \"doNotAutoInstall\". An app is automatically installed regardless of a set maintenance window.",
            "enum": [
              "autoInstallModeUnspecified",
              "doNotAutoInstall",
              "autoInstallOnce",
              "forceAutoInstall"
            ],
            "type": "string"
          },
          "autoInstallPriority": {
            "description": "The priority of the install, as an unsigned integer. A lower number means higher priority.",
            "format": "int32",
            "type": "integer"
          },
          "minimumVersionCode": {
            "description": "The minimum version of the app. If a lower version of the app is installed, then the app will be auto-updated according to the auto-install constraints, instead of waiting for the regular auto-update. You can set a minimum version code for at most 20 apps per device.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "AutoInstallConstraint": {
        "description": "The auto-install constraint. Defines a set of restrictions for installation. At least one of the fields must be set.",
        "properties": {
          "chargingStateConstraint": {
            "description": "Charging state constraint.",
            "enum": [
              "chargingStateConstraintUnspecified",
              "chargingNotRequired",
              "chargingRequired"
            ],
            "type": "string"
          },
          "deviceIdleStateConstraint": {
            "description": "Device idle state constraint.",
            "enum": [
              "deviceIdleStateConstraintUnspecified",
              "deviceIdleNotRequired",
              "deviceIdleRequired"
            ],
            "type": "string"
          },
          "networkTypeConstraint": {
            "description": "Network type constraint.",
            "enum": [
              "networkTypeConstraintUnspecified",
              "anyNetwork",
              "unmeteredNetwork"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "EnterpriseAuthenticationAppLinkConfig": {
        "description": "An authentication URL configuration for the authenticator app of an identity provider.",
        "properties": {
          "uri": {
            "description": "An authentication url.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ManagedConfiguration": {
        "description": "A managed configuration resource contains the set of managed properties defined by the app developer in the app's managed configurations schema, as well as any configuration variables defined for the user.",
        "properties": {
          "configurationVariables": {
            "$ref": "#/$defs/ConfigurationVariables"
          },
          "kind": {
            "description": "Deprecated.",
            "type": "string"
          },
          "managedProperty": {
            "description": "The set of managed properties for this configuration.",
            "items": {
              "$ref": "#/$defs/ManagedProperty"
            },
            "type": "array"
          },
          "productId": {
            "description": "The ID of the product that the managed configuration is for, e.g. \"app:com.google.android.gm\".",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ConfigurationVariables": {
        "description": "A configuration variables resource contains the managed configuration settings ID to be applied to a single user, as well as the variable set that is attributed to the user. The variable set will be used to replace placeholders in the managed configuration settings.",
        "properties": {
          "mcmId": {
            "description": "The ID of the managed configurations settings.",
            "type": "string"
          },
          "variableSet": {
            "description": "The variable set that is attributed to the user.",
            "items": {
              "$ref": "#/$defs/VariableSet"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "VariableSet": {
        "description": "A variable set is a key-value pair of EMM-provided placeholders and its corresponding value, which is attributed to a user. For example, $FIRSTNAME could be a placeholder, and its value could be Alice. Placeholders should start with a '$' sign and should be alphanumeric only.",
        "properties": {
          "placeholder": {
            "description": "The placeholder string; defined by EMM.",
            "type": "string"
          },
          "userValue": {
            "description": "The value of the placeholder, specific to the user.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ManagedProperty": {
        "description": "A managed property of a managed configuration. The property must match one of the properties in the app restrictions schema of the product. Exactly one of the value fields must be populated, and it must match the property's type in the app restrictions schema.",
        "properties": {
          "key": {
            "description": "The unique key that identifies the property.",
            "type": "string"
          },
          "valueBool": {
            "description": "The boolean value - this will only be present if type of the property is bool.",
            "type": "boolean"
          },
          "valueBundle": {
            "$ref": "#/$defs/ManagedPropertyBundle"
          },
          "valueBundleArray": {
            "description": "The list of bundles of properties - this will only be present if type of the property is bundle_array.",
            "items": {
              "$ref": "#/$defs/ManagedPropertyBundle"
            },
            "type": "array"
          },
          "valueInteger": {
            "description": "The integer value - this will only be present if type of the property is integer.",
            "format": "int32",
            "type": "integer"
          },
          "valueString": {
            "description": "The string value - this will only be present if type of the property is string, choice or hidden.",
            "type": "string"
          },
          "valueStringArray": {
            "description": "The list of string values - this will only be present if type of the property is multiselect.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ManagedPropertyBundle": {
        "description": "A bundle of managed properties.",
        "properties": {
          "managedProperty": {
            "description": "The list of managed properties.",
            "items": {
              "$ref": "#/$defs/ManagedProperty"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DeviceReport": {
        "description": "Device report updated with the latest app states for managed apps on the device.",
        "properties": {
          "appState": {
            "description": "List of app states set by managed apps on the device. App states are defined by the app's developers. This field will always be present.",
            "items": {
              "$ref": "#/$defs/AppState"
            },
            "type": "array"
          },
          "lastUpdatedTimestampMillis": {
            "description": "The timestamp of the last report update in milliseconds since epoch. This field will always be present.",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AppState": {
        "description": "List of states set by the app.",
        "properties": {
          "keyedAppState": {
            "description": "List of keyed app states. This field will always be present.",
            "items": {
              "$ref": "#/$defs/KeyedAppState"
            },
            "type": "array"
          },
          "packageName": {
            "description": "The package name of the app. This field will always be present.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "KeyedAppState": {
        "description": "Represents a keyed app state containing a key, timestamp, severity level, optional description, and optional data.",
        "properties": {
          "data": {
            "description": "Additional field intended for machine-readable data. For example, a number or JSON object. To prevent XSS, we recommend removing any HTML from the data before displaying it.",
            "type": "string"
          },
          "key": {
            "description": "Key indicating what the app is providing a state for. The content of the key is set by the app's developer. To prevent XSS, we recommend removing any HTML from the key before displaying it. This field will always be present.",
            "type": "string"
          },
          "message": {
            "description": "Free-form, human-readable message describing the app state. For example, an error message. To prevent XSS, we recommend removing any HTML from the message before displaying it.",
            "type": "string"
          },
          "severity": {
            "description": "Severity of the app state. This field will always be present.",
            "enum": [
              "severityUnknown",
              "severityInfo",
              "severityError"
            ],
            "type": "string"
          },
          "stateTimestampMillis": {
            "description": "Timestamp of when the app set the state in milliseconds since epoch. This field will always be present.",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "https://androidenterprise.googleapis.com//androidenterprise/v1/enterprises/{enterpriseId}/users/{userId}/devices/{deviceId}{?updateMask,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A Devices resource represents a mobile device managed by the EMM and belonging to a specific enterprise user.",
        "**Key properties:**",
        {
          "$ul": [
            "**androidId**: The Google Play Services Android ID for the device encoded as a lowercase hex string. For example, \"123456789abcdef0\".",
            "**device**: The internal hardware codename of the device. This comes from android.os.Build.DEVICE. (field named \"device\" per logs/wireless/android/android_checkin.proto)",
            "**latestBuildFingerprint**: The build fingerprint of the device if known.",
            "**maker**: The manufacturer of the device. This comes from android.os.Build.MANUFACTURER.",
            "**managementType**: Identifies the extent to which the device is controlled by a managed Google Play EMM in various deployment configurations. Possible values include: - \"managedDevice\", a device that has the EMM's device policy controller (DPC) as the device owner. - \"managedProfile\", a device that has a profile managed by the DPC (DPC is profile owner) in addition to a separate, personal profile that is unavailable to the DPC. - \"containerApp\", no longer used (deprecated). - \"unmanagedProfile\", a device that has been allowed (by the domain's admin, using the Admin Console to enable the privilege) to use managed Google Play, but the profile is itself not owned by a DPC. ",
            "**model**: The model name of the device. This comes from android.os.Build.MODEL.",
            [
              "**policy**: The device policy for a given managed device.",
              {
                "$ul": [
                  "**autoUpdatePolicy**: Controls when automatic app updates on the device can be applied. Recommended alternative: autoUpdateMode which is set per app, provides greater flexibility around update frequency. When autoUpdateMode is set to AUTO_UPDATE_POSTPONED or AUTO_UPDATE_HIGH_PRIORITY, autoUpdatePolicy has no effect. \"choiceToTheUser\" allows the device's user to configure the app update policy. \"always\" enables auto updates. \"never\" disables auto updates. \"wifiOnly\" enables auto updates only when the device is connected to wifi.",
                  "**deviceReportPolicy**: Whether the device reports app states to the EMM. The default value is \"deviceReportDisabled\".",
                  [
                    "**maintenanceWindow**: Maintenance window for managed Google Play Accounts. This allows Play store to update the apps on the foreground in the designated window.",
                    {
                      "$ul": [
                        "**durationMs**: Duration of the maintenance window, in milliseconds. The duration must be between 30 minutes and 24 hours (inclusive).",
                        "**startTimeAfterMidnightMs**: Start time of the maintenance window, in milliseconds after midnight on the device. Windows can span midnight."
                      ]
                    }
                  ],
                  "**productAvailabilityPolicy**: The availability granted to the device for the specified products. \"all\" gives the device access to all products, regardless of approval status. \"all\" does not enable automatic visibility of \"alpha\" or \"beta\" tracks. \"whitelist\" grants the device access the products specified in productPolicy[]. Only products that are approved or products that were previously approved (products with revoked approval) by the enterprise can be whitelisted. If no value is provided, the availability set at the user level is applied by default.",
                  "**productPolicy**: The list of product policies. The productAvailabilityPolicy needs to be set to WHITELIST or ALL for the product policies to be applied."
                ]
              }
            ],
            "**product**: The product name of the device. This comes from android.os.Build.PRODUCT.",
            [
              "**report**: Device report updated with the latest app states for managed apps on the device.",
              {
                "$ul": [
                  "**appState**: List of app states set by managed apps on the device. App states are defined by the app's developers. This field will always be present.",
                  "**lastUpdatedTimestampMillis**: The timestamp of the last report update in milliseconds since epoch. This field will always be present."
                ]
              }
            ],
            "**retailBrand**: Retail brand for the device, if set. See android.os.Build.BRAND",
            "**sdkVersion**: API compatibility version."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
