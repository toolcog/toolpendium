{
  "name": "androidenterprise_devices_get",
  "description": "Retrieves the details of a device.",
  "parameters": {
    "type": "object",
    "properties": {
      "enterpriseId": {
        "type": "string",
        "description": "The ID of the enterprise."
      },
      "userId": {
        "type": "string",
        "description": "The ID of the user."
      },
      "deviceId": {
        "type": "string",
        "description": "The ID of the device."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      }
    },
    "required": [
      "enterpriseId",
      "userId",
      "deviceId"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://androidenterprise.googleapis.com//androidenterprise/v1/enterprises/{enterpriseId}/users/{userId}/devices/{deviceId}{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A Devices resource represents a mobile device managed by the EMM and belonging to a specific enterprise user.",
        "**Key properties:**",
        {
          "$ul": [
            "**androidId**: The Google Play Services Android ID for the device encoded as a lowercase hex string. For example, \"123456789abcdef0\".",
            "**device**: The internal hardware codename of the device. This comes from android.os.Build.DEVICE. (field named \"device\" per logs/wireless/android/android_checkin.proto)",
            "**latestBuildFingerprint**: The build fingerprint of the device if known.",
            "**maker**: The manufacturer of the device. This comes from android.os.Build.MANUFACTURER.",
            "**managementType**: Identifies the extent to which the device is controlled by a managed Google Play EMM in various deployment configurations. Possible values include: - \"managedDevice\", a device that has the EMM's device policy controller (DPC) as the device owner. - \"managedProfile\", a device that has a profile managed by the DPC (DPC is profile owner) in addition to a separate, personal profile that is unavailable to the DPC. - \"containerApp\", no longer used (deprecated). - \"unmanagedProfile\", a device that has been allowed (by the domain's admin, using the Admin Console to enable the privilege) to use managed Google Play, but the profile is itself not owned by a DPC. ",
            "**model**: The model name of the device. This comes from android.os.Build.MODEL.",
            [
              "**policy**: The device policy for a given managed device.",
              {
                "$ul": [
                  "**autoUpdatePolicy**: Controls when automatic app updates on the device can be applied. Recommended alternative: autoUpdateMode which is set per app, provides greater flexibility around update frequency. When autoUpdateMode is set to AUTO_UPDATE_POSTPONED or AUTO_UPDATE_HIGH_PRIORITY, autoUpdatePolicy has no effect. \"choiceToTheUser\" allows the device's user to configure the app update policy. \"always\" enables auto updates. \"never\" disables auto updates. \"wifiOnly\" enables auto updates only when the device is connected to wifi.",
                  "**deviceReportPolicy**: Whether the device reports app states to the EMM. The default value is \"deviceReportDisabled\".",
                  [
                    "**maintenanceWindow**: Maintenance window for managed Google Play Accounts. This allows Play store to update the apps on the foreground in the designated window.",
                    {
                      "$ul": [
                        "**durationMs**: Duration of the maintenance window, in milliseconds. The duration must be between 30 minutes and 24 hours (inclusive).",
                        "**startTimeAfterMidnightMs**: Start time of the maintenance window, in milliseconds after midnight on the device. Windows can span midnight."
                      ]
                    }
                  ],
                  "**productAvailabilityPolicy**: The availability granted to the device for the specified products. \"all\" gives the device access to all products, regardless of approval status. \"all\" does not enable automatic visibility of \"alpha\" or \"beta\" tracks. \"whitelist\" grants the device access the products specified in productPolicy[]. Only products that are approved or products that were previously approved (products with revoked approval) by the enterprise can be whitelisted. If no value is provided, the availability set at the user level is applied by default.",
                  "**productPolicy**: The list of product policies. The productAvailabilityPolicy needs to be set to WHITELIST or ALL for the product policies to be applied."
                ]
              }
            ],
            "**product**: The product name of the device. This comes from android.os.Build.PRODUCT.",
            [
              "**report**: Device report updated with the latest app states for managed apps on the device.",
              {
                "$ul": [
                  "**appState**: List of app states set by managed apps on the device. App states are defined by the app's developers. This field will always be present.",
                  "**lastUpdatedTimestampMillis**: The timestamp of the last report update in milliseconds since epoch. This field will always be present."
                ]
              }
            ],
            "**retailBrand**: Retail brand for the device, if set. See android.os.Build.BRAND",
            "**sdkVersion**: API compatibility version."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
