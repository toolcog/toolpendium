{
  "name": "datalabeling_projects_datasets_image_label",
  "description": "Starts a labeling task for image. The type of image labeling task is configured by feature in the request.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. Name of the dataset to request labeling task, format: projects/{project_id}/datasets/{dataset_id}"
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleCloudDatalabelingV1beta1LabelImageRequest"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "GoogleCloudDatalabelingV1beta1LabelImageRequest": {
        "description": "Request message for starting an image labeling task.",
        "properties": {
          "basicConfig": {
            "$ref": "#/$defs/GoogleCloudDatalabelingV1beta1HumanAnnotationConfig"
          },
          "boundingPolyConfig": {
            "$ref": "#/$defs/GoogleCloudDatalabelingV1beta1BoundingPolyConfig"
          },
          "feature": {
            "description": "Required. The type of image labeling task.",
            "enum": [
              "FEATURE_UNSPECIFIED",
              "CLASSIFICATION",
              "BOUNDING_BOX",
              "ORIENTED_BOUNDING_BOX",
              "BOUNDING_POLY",
              "POLYLINE",
              "SEGMENTATION"
            ],
            "type": "string"
          },
          "imageClassificationConfig": {
            "$ref": "#/$defs/GoogleCloudDatalabelingV1beta1ImageClassificationConfig"
          },
          "polylineConfig": {
            "$ref": "#/$defs/GoogleCloudDatalabelingV1beta1PolylineConfig"
          },
          "segmentationConfig": {
            "$ref": "#/$defs/GoogleCloudDatalabelingV1beta1SegmentationConfig"
          }
        },
        "type": "object"
      },
      "GoogleCloudDatalabelingV1beta1HumanAnnotationConfig": {
        "description": "Configuration for how human labeling task should be done.",
        "properties": {
          "annotatedDatasetDescription": {
            "description": "Optional. A human-readable description for AnnotatedDataset. The description can be up to 10000 characters long.",
            "type": "string"
          },
          "annotatedDatasetDisplayName": {
            "description": "Required. A human-readable name for AnnotatedDataset defined by users. Maximum of 64 characters .",
            "type": "string"
          },
          "contributorEmails": {
            "description": "Optional. If you want your own labeling contributors to manage and work on this labeling request, you can set these contributors here. We will give them access to the question types in crowdcompute. Note that these emails must be registered in crowdcompute worker UI: https://crowd-compute.appspot.com/",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "instruction": {
            "description": "Required. Instruction resource name.",
            "type": "string"
          },
          "labelGroup": {
            "description": "Optional. A human-readable label used to logically group labeling tasks. This string must match the regular expression `[a-zA-Z\\\\d_-]{0,128}`.",
            "type": "string"
          },
          "languageCode": {
            "description": "Optional. The Language of this question, as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt). Default value is en-US. Only need to set this when task is language related. For example, French text classification.",
            "type": "string"
          },
          "questionDuration": {
            "description": "Optional. Maximum duration for contributors to answer a question. Maximum is 3600 seconds. Default is 3600 seconds.",
            "format": "google-duration",
            "type": "string"
          },
          "replicaCount": {
            "description": "Optional. Replication of questions. Each question will be sent to up to this number of contributors to label. Aggregated answers will be returned. Default is set to 1. For image related labeling, valid values are 1, 3, 5.",
            "format": "int32",
            "type": "integer"
          },
          "userEmailAddress": {
            "description": "Email of the user who started the labeling task and should be notified by email. If empty no notification will be sent.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDatalabelingV1beta1BoundingPolyConfig": {
        "description": "Config for image bounding poly (and bounding box) human labeling task.",
        "properties": {
          "annotationSpecSet": {
            "description": "Required. Annotation spec set resource name.",
            "type": "string"
          },
          "instructionMessage": {
            "description": "Optional. Instruction message showed on contributors UI.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDatalabelingV1beta1ImageClassificationConfig": {
        "description": "Config for image classification human labeling task.",
        "properties": {
          "allowMultiLabel": {
            "description": "Optional. If allow_multi_label is true, contributors are able to choose multiple labels for one image.",
            "type": "boolean"
          },
          "annotationSpecSet": {
            "description": "Required. Annotation spec set resource name.",
            "type": "string"
          },
          "answerAggregationType": {
            "description": "Optional. The type of how to aggregate answers.",
            "enum": [
              "STRING_AGGREGATION_TYPE_UNSPECIFIED",
              "MAJORITY_VOTE",
              "UNANIMOUS_VOTE",
              "NO_AGGREGATION"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDatalabelingV1beta1PolylineConfig": {
        "description": "Config for image polyline human labeling task.",
        "properties": {
          "annotationSpecSet": {
            "description": "Required. Annotation spec set resource name.",
            "type": "string"
          },
          "instructionMessage": {
            "description": "Optional. Instruction message showed on contributors UI.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDatalabelingV1beta1SegmentationConfig": {
        "description": "Config for image segmentation",
        "properties": {
          "annotationSpecSet": {
            "description": "Required. Annotation spec set resource name. format: projects/{project_id}/annotationSpecSets/{annotation_spec_set_id}",
            "type": "string"
          },
          "instructionMessage": {
            "description": "Instruction message showed on labelers UI.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://datalabeling.googleapis.com//v1beta1/{parent}/image:label{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "This resource represents a long-running operation that is the result of a network API call.",
        "**Key properties:**",
        {
          "$ul": [
            "**done**: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
            [
              "**error**: The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
              {
                "$ul": [
                  "**code**: The status code, which should be an enum value of google.rpc.Code.",
                  "**details**: A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                  "**message**: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                ]
              }
            ],
            "**metadata**: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
            "**name**: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
            "**response**: The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
