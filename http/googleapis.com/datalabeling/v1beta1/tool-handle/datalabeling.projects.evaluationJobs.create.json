{
  "name": "datalabeling_projects_evaluationJobs_create",
  "description": "Creates an evaluation job.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. Evaluation job resource parent. Format: \"projects/{project_id}\""
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleCloudDatalabelingV1beta1CreateEvaluationJobRequest"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "GoogleCloudDatalabelingV1beta1CreateEvaluationJobRequest": {
        "description": "Request message for CreateEvaluationJob.",
        "properties": {
          "job": {
            "$ref": "#/$defs/GoogleCloudDatalabelingV1beta1EvaluationJob"
          }
        },
        "type": "object"
      },
      "GoogleCloudDatalabelingV1beta1EvaluationJob": {
        "description": "Defines an evaluation job that runs periodically to generate Evaluations. [Creating an evaluation job](/ml-engine/docs/continuous-evaluation/create-job) is the starting point for using continuous evaluation.",
        "properties": {
          "annotationSpecSet": {
            "description": "Required. Name of the AnnotationSpecSet describing all the labels that your machine learning model outputs. You must create this resource before you create an evaluation job and provide its name in the following format: \"projects/{project_id}/annotationSpecSets/{annotation_spec_set_id}\"",
            "type": "string"
          },
          "attempts": {
            "description": "Output only. Every time the evaluation job runs and an error occurs, the failed attempt is appended to this array.",
            "items": {
              "$ref": "#/$defs/GoogleCloudDatalabelingV1beta1Attempt"
            },
            "type": "array"
          },
          "createTime": {
            "description": "Output only. Timestamp of when this evaluation job was created.",
            "format": "google-datetime",
            "type": "string"
          },
          "description": {
            "description": "Required. Description of the job. The description can be up to 25,000 characters long.",
            "type": "string"
          },
          "evaluationJobConfig": {
            "$ref": "#/$defs/GoogleCloudDatalabelingV1beta1EvaluationJobConfig"
          },
          "labelMissingGroundTruth": {
            "description": "Required. Whether you want Data Labeling Service to provide ground truth labels for prediction input. If you want the service to assign human labelers to annotate your data, set this to `true`. If you want to provide your own ground truth labels in the evaluation job's BigQuery table, set this to `false`.",
            "type": "boolean"
          },
          "modelVersion": {
            "description": "Required. The [AI Platform Prediction model version](/ml-engine/docs/prediction-overview) to be evaluated. Prediction input and output is sampled from this model version. When creating an evaluation job, specify the model version in the following format: \"projects/{project_id}/models/{model_name}/versions/{version_name}\" There can only be one evaluation job per model version.",
            "type": "string"
          },
          "name": {
            "description": "Output only. After you create a job, Data Labeling Service assigns a name to the job with the following format: \"projects/{project_id}/evaluationJobs/ {evaluation_job_id}\"",
            "type": "string"
          },
          "schedule": {
            "description": "Required. Describes the interval at which the job runs. This interval must be at least 1 day, and it is rounded to the nearest day. For example, if you specify a 50-hour interval, the job runs every 2 days. You can provide the schedule in [crontab format](/scheduler/docs/configuring/cron-job-schedules) or in an [English-like format](/appengine/docs/standard/python/config/cronref#schedule_format). Regardless of what you specify, the job will run at 10:00 AM UTC. Only the interval from this schedule is used, not the specific time of day.",
            "type": "string"
          },
          "state": {
            "description": "Output only. Describes the current state of the job.",
            "enum": [
              "STATE_UNSPECIFIED",
              "SCHEDULED",
              "RUNNING",
              "PAUSED",
              "STOPPED"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDatalabelingV1beta1Attempt": {
        "description": "Records a failed evaluation job run.",
        "properties": {
          "attemptTime": {
            "format": "google-datetime",
            "type": "string"
          },
          "partialFailures": {
            "description": "Details of errors that occurred.",
            "items": {
              "$ref": "#/$defs/GoogleRpcStatus"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleRpcStatus": {
        "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
        "properties": {
          "code": {
            "description": "The status code, which should be an enum value of google.rpc.Code.",
            "format": "int32",
            "type": "integer"
          },
          "details": {
            "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
            "items": {
              "additionalProperties": {
                "description": "Properties of the object. Contains field @type with type URL."
              },
              "type": "object"
            },
            "type": "array"
          },
          "message": {
            "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDatalabelingV1beta1EvaluationJobConfig": {
        "description": "Configures specific details of how a continuous evaluation job works. Provide this configuration when you create an EvaluationJob.",
        "properties": {
          "bigqueryImportKeys": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Required. Prediction keys that tell Data Labeling Service where to find the data for evaluation in your BigQuery table. When the service samples prediction input and output from your model version and saves it to BigQuery, the data gets stored as JSON strings in the BigQuery table. These keys tell Data Labeling Service how to parse the JSON. You can provide the following entries in this field: * `data_json_key`: the data key for prediction input. You must provide either this key or `reference_json_key`. * `reference_json_key`: the data reference key for prediction input. You must provide either this key or `data_json_key`. * `label_json_key`: the label key for prediction output. Required. * `label_score_json_key`: the score key for prediction output. Required. * `bounding_box_json_key`: the bounding box key for prediction output. Required if your model version perform image object detection. Learn [how to configure prediction keys](/ml-engine/docs/continuous-evaluation/create-job#prediction-keys).",
            "type": "object"
          },
          "boundingPolyConfig": {
            "$ref": "#/$defs/GoogleCloudDatalabelingV1beta1BoundingPolyConfig"
          },
          "evaluationConfig": {
            "$ref": "#/$defs/GoogleCloudDatalabelingV1beta1EvaluationConfig"
          },
          "evaluationJobAlertConfig": {
            "$ref": "#/$defs/GoogleCloudDatalabelingV1beta1EvaluationJobAlertConfig"
          },
          "exampleCount": {
            "description": "Required. The maximum number of predictions to sample and save to BigQuery during each evaluation interval. This limit overrides `example_sample_percentage`: even if the service has not sampled enough predictions to fulfill `example_sample_perecentage` during an interval, it stops sampling predictions when it meets this limit.",
            "format": "int32",
            "type": "integer"
          },
          "exampleSamplePercentage": {
            "description": "Required. Fraction of predictions to sample and save to BigQuery during each evaluation interval. For example, 0.1 means 10% of predictions served by your model version get saved to BigQuery.",
            "format": "double",
            "type": "number"
          },
          "humanAnnotationConfig": {
            "$ref": "#/$defs/GoogleCloudDatalabelingV1beta1HumanAnnotationConfig"
          },
          "imageClassificationConfig": {
            "$ref": "#/$defs/GoogleCloudDatalabelingV1beta1ImageClassificationConfig"
          },
          "inputConfig": {
            "$ref": "#/$defs/GoogleCloudDatalabelingV1beta1InputConfig"
          },
          "textClassificationConfig": {
            "$ref": "#/$defs/GoogleCloudDatalabelingV1beta1TextClassificationConfig"
          }
        },
        "type": "object"
      },
      "GoogleCloudDatalabelingV1beta1BoundingPolyConfig": {
        "description": "Config for image bounding poly (and bounding box) human labeling task.",
        "properties": {
          "annotationSpecSet": {
            "description": "Required. Annotation spec set resource name.",
            "type": "string"
          },
          "instructionMessage": {
            "description": "Optional. Instruction message showed on contributors UI.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDatalabelingV1beta1EvaluationConfig": {
        "description": "Configuration details used for calculating evaluation metrics and creating an Evaluation.",
        "properties": {
          "boundingBoxEvaluationOptions": {
            "$ref": "#/$defs/GoogleCloudDatalabelingV1beta1BoundingBoxEvaluationOptions"
          }
        },
        "type": "object"
      },
      "GoogleCloudDatalabelingV1beta1BoundingBoxEvaluationOptions": {
        "description": "Options regarding evaluation between bounding boxes.",
        "properties": {
          "iouThreshold": {
            "description": "Minimum [intersection-over-union (IOU)](/vision/automl/object-detection/docs/evaluate#intersection-over-union) required for 2 bounding boxes to be considered a match. This must be a number between 0 and 1.",
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "GoogleCloudDatalabelingV1beta1EvaluationJobAlertConfig": {
        "description": "Provides details for how an evaluation job sends email alerts based on the results of a run.",
        "properties": {
          "email": {
            "description": "Required. An email address to send alerts to.",
            "type": "string"
          },
          "minAcceptableMeanAveragePrecision": {
            "description": "Required. A number between 0 and 1 that describes a minimum mean average precision threshold. When the evaluation job runs, if it calculates that your model version's predictions from the recent interval have meanAveragePrecision below this threshold, then it sends an alert to your specified email.",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "GoogleCloudDatalabelingV1beta1HumanAnnotationConfig": {
        "description": "Configuration for how human labeling task should be done.",
        "properties": {
          "annotatedDatasetDescription": {
            "description": "Optional. A human-readable description for AnnotatedDataset. The description can be up to 10000 characters long.",
            "type": "string"
          },
          "annotatedDatasetDisplayName": {
            "description": "Required. A human-readable name for AnnotatedDataset defined by users. Maximum of 64 characters .",
            "type": "string"
          },
          "contributorEmails": {
            "description": "Optional. If you want your own labeling contributors to manage and work on this labeling request, you can set these contributors here. We will give them access to the question types in crowdcompute. Note that these emails must be registered in crowdcompute worker UI: https://crowd-compute.appspot.com/",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "instruction": {
            "description": "Required. Instruction resource name.",
            "type": "string"
          },
          "labelGroup": {
            "description": "Optional. A human-readable label used to logically group labeling tasks. This string must match the regular expression `[a-zA-Z\\\\d_-]{0,128}`.",
            "type": "string"
          },
          "languageCode": {
            "description": "Optional. The Language of this question, as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt). Default value is en-US. Only need to set this when task is language related. For example, French text classification.",
            "type": "string"
          },
          "questionDuration": {
            "description": "Optional. Maximum duration for contributors to answer a question. Maximum is 3600 seconds. Default is 3600 seconds.",
            "format": "google-duration",
            "type": "string"
          },
          "replicaCount": {
            "description": "Optional. Replication of questions. Each question will be sent to up to this number of contributors to label. Aggregated answers will be returned. Default is set to 1. For image related labeling, valid values are 1, 3, 5.",
            "format": "int32",
            "type": "integer"
          },
          "userEmailAddress": {
            "description": "Email of the user who started the labeling task and should be notified by email. If empty no notification will be sent.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDatalabelingV1beta1ImageClassificationConfig": {
        "description": "Config for image classification human labeling task.",
        "properties": {
          "allowMultiLabel": {
            "description": "Optional. If allow_multi_label is true, contributors are able to choose multiple labels for one image.",
            "type": "boolean"
          },
          "annotationSpecSet": {
            "description": "Required. Annotation spec set resource name.",
            "type": "string"
          },
          "answerAggregationType": {
            "description": "Optional. The type of how to aggregate answers.",
            "enum": [
              "STRING_AGGREGATION_TYPE_UNSPECIFIED",
              "MAJORITY_VOTE",
              "UNANIMOUS_VOTE",
              "NO_AGGREGATION"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDatalabelingV1beta1InputConfig": {
        "description": "The configuration of input data, including data type, location, etc.",
        "properties": {
          "annotationType": {
            "description": "Optional. The type of annotation to be performed on this data. You must specify this field if you are using this InputConfig in an EvaluationJob.",
            "enum": [
              "ANNOTATION_TYPE_UNSPECIFIED",
              "IMAGE_CLASSIFICATION_ANNOTATION",
              "IMAGE_BOUNDING_BOX_ANNOTATION",
              "IMAGE_ORIENTED_BOUNDING_BOX_ANNOTATION",
              "IMAGE_BOUNDING_POLY_ANNOTATION",
              "IMAGE_POLYLINE_ANNOTATION",
              "IMAGE_SEGMENTATION_ANNOTATION",
              "VIDEO_SHOTS_CLASSIFICATION_ANNOTATION",
              "VIDEO_OBJECT_TRACKING_ANNOTATION",
              "VIDEO_OBJECT_DETECTION_ANNOTATION",
              "VIDEO_EVENT_ANNOTATION",
              "TEXT_CLASSIFICATION_ANNOTATION",
              "TEXT_ENTITY_EXTRACTION_ANNOTATION",
              "GENERAL_CLASSIFICATION_ANNOTATION"
            ],
            "type": "string"
          },
          "bigquerySource": {
            "$ref": "#/$defs/GoogleCloudDatalabelingV1beta1BigQuerySource"
          },
          "classificationMetadata": {
            "$ref": "#/$defs/GoogleCloudDatalabelingV1beta1ClassificationMetadata"
          },
          "dataType": {
            "description": "Required. Data type must be specifed when user tries to import data.",
            "enum": [
              "DATA_TYPE_UNSPECIFIED",
              "IMAGE",
              "VIDEO",
              "TEXT",
              "GENERAL_DATA"
            ],
            "type": "string"
          },
          "gcsSource": {
            "$ref": "#/$defs/GoogleCloudDatalabelingV1beta1GcsSource"
          },
          "textMetadata": {
            "$ref": "#/$defs/GoogleCloudDatalabelingV1beta1TextMetadata"
          }
        },
        "type": "object"
      },
      "GoogleCloudDatalabelingV1beta1BigQuerySource": {
        "description": "The BigQuery location for input data. If used in an EvaluationJob, this is where the service saves the prediction input and output sampled from the model version.",
        "properties": {
          "inputUri": {
            "description": "Required. BigQuery URI to a table, up to 2,000 characters long. If you specify the URI of a table that does not exist, Data Labeling Service creates a table at the URI with the correct schema when you create your EvaluationJob. If you specify the URI of a table that already exists, it must have the [correct schema](/ml-engine/docs/continuous-evaluation/create-job#table-schema). Provide the table URI in the following format: \"bq://{your_project_id}/ {your_dataset_name}/{your_table_name}\" [Learn more](/ml-engine/docs/continuous-evaluation/create-job#table-schema).",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDatalabelingV1beta1ClassificationMetadata": {
        "description": "Metadata for classification annotations.",
        "properties": {
          "isMultiLabel": {
            "description": "Whether the classification task is multi-label or not.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GoogleCloudDatalabelingV1beta1GcsSource": {
        "description": "Source of the Cloud Storage file to be imported.",
        "properties": {
          "inputUri": {
            "description": "Required. The input URI of source file. This must be a Cloud Storage path (`gs://...`).",
            "type": "string"
          },
          "mimeType": {
            "description": "Required. The format of the source file. Only \"text/csv\" is supported.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDatalabelingV1beta1TextMetadata": {
        "description": "Metadata for the text.",
        "properties": {
          "languageCode": {
            "description": "The language of this text, as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt). Default value is en-US.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDatalabelingV1beta1TextClassificationConfig": {
        "description": "Config for text classification human labeling task.",
        "properties": {
          "allowMultiLabel": {
            "description": "Optional. If allow_multi_label is true, contributors are able to choose multiple labels for one text segment.",
            "type": "boolean"
          },
          "annotationSpecSet": {
            "description": "Required. Annotation spec set resource name.",
            "type": "string"
          },
          "sentimentConfig": {
            "$ref": "#/$defs/GoogleCloudDatalabelingV1beta1SentimentConfig"
          }
        },
        "type": "object"
      },
      "GoogleCloudDatalabelingV1beta1SentimentConfig": {
        "description": "Config for setting up sentiments.",
        "properties": {
          "enableLabelSentimentSelection": {
            "description": "If set to true, contributors will have the option to select sentiment of the label they selected, to mark it as negative or positive label. Default is false.",
            "type": "boolean"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://datalabeling.googleapis.com//v1beta1/{parent}/evaluationJobs{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Defines an evaluation job that runs periodically to generate Evaluations. [Creating an evaluation job](/ml-engine/docs/continuous-evaluation/create-job) is the starting point for using continuous evaluation.",
        "**Key properties:**",
        {
          "$ul": [
            "**annotationSpecSet**: Required. Name of the AnnotationSpecSet describing all the labels that your machine learning model outputs. You must create this resource before you create an evaluation job and provide its name in the following format: \"projects/{project_id}/annotationSpecSets/{annotation_spec_set_id}\"",
            "**attempts**: Output only. Every time the evaluation job runs and an error occurs, the failed attempt is appended to this array.",
            "**createTime**: Output only. Timestamp of when this evaluation job was created.",
            "**description**: Required. Description of the job. The description can be up to 25,000 characters long.",
            [
              "**evaluationJobConfig**: Configures specific details of how a continuous evaluation job works. Provide this configuration when you create an EvaluationJob.",
              {
                "$ul": [
                  "**bigqueryImportKeys**: Required. Prediction keys that tell Data Labeling Service where to find the data for evaluation in your BigQuery table. When the service samples prediction input and output from your model version and saves it to BigQuery, the data gets stored as JSON strings in the BigQuery table. These keys tell Data Labeling Service how to parse the JSON. You can provide the following entries in this field: * `data_json_key`: the data key for prediction input. You must provide either this key or `reference_json_key`. * `reference_json_key`: the data reference key for prediction input. You must provide either this key or `data_json_key`. * `label_json_key`: the label key for prediction output. Required. * `label_score_json_key`: the score key for prediction output. Required. * `bounding_box_json_key`: the bounding box key for prediction output. Required if your model version perform image object detection. Learn [how to configure prediction keys](/ml-engine/docs/continuous-evaluation/create-job#prediction-keys).",
                  [
                    "**boundingPolyConfig**: Config for image bounding poly (and bounding box) human labeling task.",
                    {
                      "$ul": [
                        "**annotationSpecSet**: Required. Annotation spec set resource name.",
                        "**instructionMessage**: Optional. Instruction message showed on contributors UI."
                      ]
                    }
                  ],
                  [
                    "**evaluationConfig**: Configuration details used for calculating evaluation metrics and creating an Evaluation.",
                    {
                      "$ul": [
                        [
                          "**boundingBoxEvaluationOptions**: Options regarding evaluation between bounding boxes.",
                          {
                            "$ul": [
                              "**iouThreshold**: Minimum [intersection-over-union (IOU)](/vision/automl/object-detection/docs/evaluate#intersection-over-union) required for 2 bounding boxes to be considered a match. This must be a number between 0 and 1."
                            ]
                          }
                        ]
                      ]
                    }
                  ],
                  [
                    "**evaluationJobAlertConfig**: Provides details for how an evaluation job sends email alerts based on the results of a run.",
                    {
                      "$ul": [
                        "**email**: Required. An email address to send alerts to.",
                        "**minAcceptableMeanAveragePrecision**: Required. A number between 0 and 1 that describes a minimum mean average precision threshold. When the evaluation job runs, if it calculates that your model version's predictions from the recent interval have meanAveragePrecision below this threshold, then it sends an alert to your specified email."
                      ]
                    }
                  ],
                  "**exampleCount**: Required. The maximum number of predictions to sample and save to BigQuery during each evaluation interval. This limit overrides `example_sample_percentage`: even if the service has not sampled enough predictions to fulfill `example_sample_perecentage` during an interval, it stops sampling predictions when it meets this limit.",
                  "**exampleSamplePercentage**: Required. Fraction of predictions to sample and save to BigQuery during each evaluation interval. For example, 0.1 means 10% of predictions served by your model version get saved to BigQuery.",
                  [
                    "**humanAnnotationConfig**: Configuration for how human labeling task should be done.",
                    {
                      "$ul": [
                        "**annotatedDatasetDescription**: Optional. A human-readable description for AnnotatedDataset. The description can be up to 10000 characters long.",
                        "**annotatedDatasetDisplayName**: Required. A human-readable name for AnnotatedDataset defined by users. Maximum of 64 characters .",
                        "**contributorEmails**: Optional. If you want your own labeling contributors to manage and work on this labeling request, you can set these contributors here. We will give them access to the question types in crowdcompute. Note that these emails must be registered in crowdcompute worker UI: https://crowd-compute.appspot.com/",
                        "**instruction**: Required. Instruction resource name.",
                        "**labelGroup**: Optional. A human-readable label used to logically group labeling tasks. This string must match the regular expression `[a-zA-Z\\\\d_-]{0,128}`.",
                        "**languageCode**: Optional. The Language of this question, as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt). Default value is en-US. Only need to set this when task is language related. For example, French text classification.",
                        "**questionDuration**: Optional. Maximum duration for contributors to answer a question. Maximum is 3600 seconds. Default is 3600 seconds.",
                        "**replicaCount**: Optional. Replication of questions. Each question will be sent to up to this number of contributors to label. Aggregated answers will be returned. Default is set to 1. For image related labeling, valid values are 1, 3, 5.",
                        "**userEmailAddress**: Email of the user who started the labeling task and should be notified by email. If empty no notification will be sent."
                      ]
                    }
                  ],
                  [
                    "**imageClassificationConfig**: Config for image classification human labeling task.",
                    {
                      "$ul": [
                        "**allowMultiLabel**: Optional. If allow_multi_label is true, contributors are able to choose multiple labels for one image.",
                        "**annotationSpecSet**: Required. Annotation spec set resource name.",
                        "**answerAggregationType**: Optional. The type of how to aggregate answers."
                      ]
                    }
                  ],
                  [
                    "**inputConfig**: The configuration of input data, including data type, location, etc.",
                    {
                      "$ul": [
                        "**annotationType**: Optional. The type of annotation to be performed on this data. You must specify this field if you are using this InputConfig in an EvaluationJob.",
                        [
                          "**bigquerySource**: The BigQuery location for input data. If used in an EvaluationJob, this is where the service saves the prediction input and output sampled from the model version.",
                          {
                            "$ul": [
                              "**inputUri**: Required. BigQuery URI to a table, up to 2,000 characters long. If you specify the URI of a table that does not exist, Data Labeling Service creates a table at the URI with the correct schema when you create your EvaluationJob. If you specify the URI of a table that already exists, it must have the [correct schema](/ml-engine/docs/continuous-evaluation/create-job#table-schema). Provide the table URI in the following format: \"bq://{your_project_id}/ {your_dataset_name}/{your_table_name}\" [Learn more](/ml-engine/docs/continuous-evaluation/create-job#table-schema)."
                            ]
                          }
                        ],
                        [
                          "**classificationMetadata**: Metadata for classification annotations.",
                          {
                            "$ul": [
                              "**isMultiLabel**: Whether the classification task is multi-label or not."
                            ]
                          }
                        ],
                        "**dataType**: Required. Data type must be specifed when user tries to import data.",
                        [
                          "**gcsSource**: Source of the Cloud Storage file to be imported.",
                          {
                            "$ul": [
                              "**inputUri**: Required. The input URI of source file. This must be a Cloud Storage path (`gs://...`).",
                              "**mimeType**: Required. The format of the source file. Only \"text/csv\" is supported."
                            ]
                          }
                        ],
                        [
                          "**textMetadata**: Metadata for the text.",
                          {
                            "$ul": [
                              "**languageCode**: The language of this text, as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt). Default value is en-US."
                            ]
                          }
                        ]
                      ]
                    }
                  ],
                  [
                    "**textClassificationConfig**: Config for text classification human labeling task.",
                    {
                      "$ul": [
                        "**allowMultiLabel**: Optional. If allow_multi_label is true, contributors are able to choose multiple labels for one text segment.",
                        "**annotationSpecSet**: Required. Annotation spec set resource name.",
                        [
                          "**sentimentConfig**: Config for setting up sentiments.",
                          {
                            "$ul": [
                              "**enableLabelSentimentSelection**: If set to true, contributors will have the option to select sentiment of the label they selected, to mark it as negative or positive label. Default is false."
                            ]
                          }
                        ]
                      ]
                    }
                  ]
                ]
              }
            ],
            "**labelMissingGroundTruth**: Required. Whether you want Data Labeling Service to provide ground truth labels for prediction input. If you want the service to assign human labelers to annotate your data, set this to `true`. If you want to provide your own ground truth labels in the evaluation job's BigQuery table, set this to `false`.",
            "**modelVersion**: Required. The [AI Platform Prediction model version](/ml-engine/docs/prediction-overview) to be evaluated. Prediction input and output is sampled from this model version. When creating an evaluation job, specify the model version in the following format: \"projects/{project_id}/models/{model_name}/versions/{version_name}\" There can only be one evaluation job per model version.",
            "**name**: Output only. After you create a job, Data Labeling Service assigns a name to the job with the following format: \"projects/{project_id}/evaluationJobs/ {evaluation_job_id}\"",
            "**schedule**: Required. Describes the interval at which the job runs. This interval must be at least 1 day, and it is rounded to the nearest day. For example, if you specify a 50-hour interval, the job runs every 2 days. You can provide the schedule in [crontab format](/scheduler/docs/configuring/cron-job-schedules) or in an [English-like format](/appengine/docs/standard/python/config/cronref#schedule_format). Regardless of what you specify, the job will run at 10:00 AM UTC. Only the interval from this schedule is used, not the specific time of day.",
            "**state**: Output only. Describes the current state of the job."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
