{
  "name": "clouderrorreporting_projects_events_list",
  "description": "Lists the specified events.",
  "parameters": {
    "type": "object",
    "properties": {
      "projectName": {
        "type": "string",
        "description": "Required. The resource name of the Google Cloud Platform project. Written as `projects/{projectID}`, where `{projectID}` is the [Google Cloud Platform project ID](https://support.google.com/cloud/answer/6158840). Example: `projects/my-project-123`."
      },
      "groupId": {
        "type": "string",
        "description": "Required. The group for which events shall be returned. The `group_id` is a unique identifier for a particular error group. The identifier is derived from key parts of the error-log content and is treated as Service Data. For information about how Service Data is handled, see [Google Cloud Privacy Notice](https://cloud.google.com/terms/cloud-privacy-notice)."
      },
      "pageSize": {
        "type": "integer",
        "description": "Optional. The maximum number of results to return per response."
      },
      "pageToken": {
        "type": "string",
        "description": "Optional. A `next_page_token` provided by a previous response."
      },
      "serviceFilter.resourceType": {
        "type": "string",
        "description": "Optional. The exact value to match against [`ServiceContext.resource_type`](/error-reporting/reference/rest/v1beta1/ServiceContext#FIELDS.resource_type)."
      },
      "serviceFilter.service": {
        "type": "string",
        "description": "Optional. The exact value to match against [`ServiceContext.service`](/error-reporting/reference/rest/v1beta1/ServiceContext#FIELDS.service)."
      },
      "serviceFilter.version": {
        "type": "string",
        "description": "Optional. The exact value to match against [`ServiceContext.version`](/error-reporting/reference/rest/v1beta1/ServiceContext#FIELDS.version)."
      },
      "timeRange.period": {
        "enum": [
          "PERIOD_UNSPECIFIED",
          "PERIOD_1_HOUR",
          "PERIOD_6_HOURS",
          "PERIOD_1_DAY",
          "PERIOD_1_WEEK",
          "PERIOD_30_DAYS"
        ],
        "type": "string",
        "description": "Restricts the query to the specified time range."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      }
    },
    "required": [
      "projectName"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://clouderrorreporting.googleapis.com//v1beta1/{projectName}/events{?groupId,pageSize,pageToken,serviceFilter.resourceType,serviceFilter.service,serviceFilter.version,timeRange.period,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Contains a set of requested error events.",
        "**Key properties:**",
        {
          "$ul": [
            "**errorEvents**: The error events which match the given request.",
            "**nextPageToken**: If non-empty, more results are available. Pass this token, along with the same query parameters as the first request, to view the next page of results.",
            "**timeRangeBegin**: The timestamp specifies the start time to which the request was restricted."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
