{
  "name": "content_products_custombatch",
  "description": "Retrieves, inserts, and deletes multiple products in a single request.",
  "parameters": {
    "type": "object",
    "properties": {
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/ProductsCustomBatchRequest"
      }
    },
    "$defs": {
      "ProductsCustomBatchRequest": {
        "properties": {
          "entries": {
            "description": "The request entries to be processed in the batch.",
            "items": {
              "$ref": "#/$defs/ProductsCustomBatchRequestEntry"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ProductsCustomBatchRequestEntry": {
        "description": "A batch entry encoding a single non-batch products request.",
        "properties": {
          "batchId": {
            "description": "An entry ID, unique within the batch request.",
            "format": "uint32",
            "type": "integer"
          },
          "feedId": {
            "description": "The Content API Supplemental Feed ID. If present then product insertion or deletion applies to a supplemental feed instead of primary Content API feed.",
            "format": "uint64",
            "type": "string"
          },
          "merchantId": {
            "description": "The ID of the managing account.",
            "format": "uint64",
            "type": "string"
          },
          "method": {
            "description": "The method of the batch entry. Acceptable values are: - \"`delete`\" - \"`get`\" - \"`insert`\" - \"`update`\" ",
            "type": "string"
          },
          "product": {
            "$ref": "#/$defs/Product"
          },
          "productId": {
            "description": "The ID of the product to get or mutate. Only defined if the method is `get`, `delete`, or `update`.",
            "type": "string"
          },
          "updateMask": {
            "description": "The comma-separated list of product attributes to be updated. Example: `\"title,salePrice\"`. Attributes specified in the update mask without a value specified in the body will be deleted from the product. *You must specify the update mask to delete attributes.* Only top-level product attributes can be updated. If not defined, product attributes with set values will be updated and other attributes will stay unchanged. Only defined if the method is `update`.",
            "format": "google-fieldmask",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Product": {
        "description": " Required product attributes are primarily defined by the product data specification. See the Product Data Specification Help Center article for information. Product data. After inserting, updating, or deleting a product, it may take several minutes before changes take effect.",
        "properties": {
          "additionalImageLinks": {
            "description": "Additional URLs of images of the item.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "additionalSizeType": {
            "description": "Additional cut of the item. Used together with size_type to represent combined size types for apparel items.",
            "type": "string"
          },
          "adsGrouping": {
            "description": "Used to group items in an arbitrary way. Only for CPA%, discouraged otherwise.",
            "type": "string"
          },
          "adsLabels": {
            "description": "Similar to ads_grouping, but only works on CPC.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "adsRedirect": {
            "description": "Allows advertisers to override the item URL when the product is shown within the context of Product Ads.",
            "type": "string"
          },
          "adult": {
            "description": "Should be set to true if the item is targeted towards adults.",
            "type": "boolean"
          },
          "ageGroup": {
            "description": "Target age group of the item.",
            "type": "string"
          },
          "availability": {
            "description": "Availability status of the item.",
            "type": "string"
          },
          "availabilityDate": {
            "description": "The day a pre-ordered product becomes available for delivery, in ISO 8601 format.",
            "type": "string"
          },
          "brand": {
            "description": "Brand of the item.",
            "type": "string"
          },
          "canonicalLink": {
            "description": "URL for the canonical version of your item's landing page.",
            "type": "string"
          },
          "certifications": {
            "description": "Product [certification](https://support.google.com/merchants/answer/13528839), introduced for EU energy efficiency labeling compliance using the [EU EPREL](https://eprel.ec.europa.eu/screen/home) database.",
            "items": {
              "$ref": "#/$defs/ProductCertification"
            },
            "type": "array"
          },
          "channel": {
            "description": "Required. The item's channel (online or local). Acceptable values are: - \"`local`\" - \"`online`\" ",
            "type": "string"
          },
          "cloudExportAdditionalProperties": {
            "description": "Extra fields to export to the Cloud Retail program.",
            "items": {
              "$ref": "#/$defs/CloudExportAdditionalProperties"
            },
            "type": "array"
          },
          "color": {
            "description": "Color of the item.",
            "type": "string"
          },
          "condition": {
            "description": "Condition or state of the item.",
            "type": "string"
          },
          "contentLanguage": {
            "description": "Required. The two-letter ISO 639-1 language code for the item.",
            "type": "string"
          },
          "costOfGoodsSold": {
            "$ref": "#/$defs/Price"
          },
          "customAttributes": {
            "description": "A list of custom (merchant-provided) attributes. It can also be used for submitting any attribute of the feed specification in its generic form (for example, `{ \"name\": \"size type\", \"value\": \"regular\" }`). This is useful for submitting attributes not explicitly exposed by the API, such as additional attributes used for Buy on Google (formerly known as Shopping Actions).",
            "items": {
              "$ref": "#/$defs/CustomAttribute"
            },
            "type": "array"
          },
          "customLabel0": {
            "description": "Custom label 0 for custom grouping of items in a Shopping campaign.",
            "type": "string"
          },
          "customLabel1": {
            "description": "Custom label 1 for custom grouping of items in a Shopping campaign.",
            "type": "string"
          },
          "customLabel2": {
            "description": "Custom label 2 for custom grouping of items in a Shopping campaign.",
            "type": "string"
          },
          "customLabel3": {
            "description": "Custom label 3 for custom grouping of items in a Shopping campaign.",
            "type": "string"
          },
          "customLabel4": {
            "description": "Custom label 4 for custom grouping of items in a Shopping campaign.",
            "type": "string"
          },
          "description": {
            "description": "Description of the item.",
            "type": "string"
          },
          "disclosureDate": {
            "description": "The date time when an offer becomes visible in search results across Googleâ€™s YouTube surfaces, in [ISO 8601](http://en.wikipedia.org/wiki/ISO_8601) format. See [Disclosure date](https://support.google.com/merchants/answer/13034208) for more information.",
            "type": "string"
          },
          "displayAdsId": {
            "description": "An identifier for an item for dynamic remarketing campaigns.",
            "type": "string"
          },
          "displayAdsLink": {
            "description": "URL directly to your item's landing page for dynamic remarketing campaigns.",
            "type": "string"
          },
          "displayAdsSimilarIds": {
            "description": "Advertiser-specified recommendations.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "displayAdsTitle": {
            "description": "Title of an item for dynamic remarketing campaigns.",
            "type": "string"
          },
          "displayAdsValue": {
            "description": "Offer margin for dynamic remarketing campaigns.",
            "format": "double",
            "type": "number"
          },
          "energyEfficiencyClass": {
            "description": "The energy efficiency class as defined in EU directive 2010/30/EU.",
            "type": "string"
          },
          "excludedDestinations": {
            "description": "The list of destinations to exclude for this target (corresponds to cleared check boxes in Merchant Center). Products that are excluded from all destinations for more than 7 days are automatically deleted.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "expirationDate": {
            "description": "Date on which the item should expire, as specified upon insertion, in ISO 8601 format. The actual expiration date in Google Shopping is exposed in `productstatuses` as `googleExpirationDate` and might be earlier if `expirationDate` is too far in the future.",
            "type": "string"
          },
          "externalSellerId": {
            "description": "Required for multi-seller accounts. Use this attribute if you're a marketplace uploading products for various sellers to your multi-seller account.",
            "type": "string"
          },
          "feedLabel": {
            "description": "Feed label for the item. Either `targetCountry` or `feedLabel` is required. Must be less than or equal to 20 uppercase letters (A-Z), numbers (0-9), and dashes (-).",
            "type": "string"
          },
          "gender": {
            "description": "Target gender of the item.",
            "type": "string"
          },
          "googleProductCategory": {
            "description": "Google's category of the item (see [Google product taxonomy](https://support.google.com/merchants/answer/1705911)). When querying products, this field will contain the user provided value. There is currently no way to get back the auto assigned google product categories through the API.",
            "type": "string"
          },
          "gtin": {
            "description": "Global Trade Item Number (GTIN) of the item.",
            "type": "string"
          },
          "id": {
            "description": "The REST ID of the product. Content API methods that operate on products take this as their `productId` parameter. The REST ID for a product has one of the 2 forms channel:contentLanguage: targetCountry: offerId or channel:contentLanguage:feedLabel: offerId.",
            "type": "string"
          },
          "identifierExists": {
            "description": "False when the item does not have unique product identifiers appropriate to its category, such as GTIN, MPN, and brand. Required according to the Unique Product Identifier Rules for all target countries except for Canada.",
            "type": "boolean"
          },
          "imageLink": {
            "description": "URL of an image of the item.",
            "type": "string"
          },
          "includedDestinations": {
            "description": "The list of destinations to include for this target (corresponds to checked check boxes in Merchant Center). Default destinations are always included unless provided in `excludedDestinations`.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "installment": {
            "$ref": "#/$defs/Installment"
          },
          "isBundle": {
            "description": "Whether the item is a merchant-defined bundle. A bundle is a custom grouping of different products sold by a merchant for a single price.",
            "type": "boolean"
          },
          "itemGroupId": {
            "description": "Shared identifier for all variants of the same product.",
            "type": "string"
          },
          "kind": {
            "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#product`\"",
            "type": "string"
          },
          "lifestyleImageLinks": {
            "description": "Additional URLs of lifestyle images of the item. Used to explicitly identify images that showcase your item in a real-world context. See the Help Center article for more information.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "link": {
            "description": "URL directly linking to your item's page on your website.",
            "type": "string"
          },
          "linkTemplate": {
            "description": "URL template for merchant hosted local storefront.",
            "type": "string"
          },
          "loyaltyPoints": {
            "$ref": "#/$defs/LoyaltyPoints"
          },
          "material": {
            "description": "The material of which the item is made.",
            "type": "string"
          },
          "maxEnergyEfficiencyClass": {
            "description": "The energy efficiency class as defined in EU directive 2010/30/EU.",
            "type": "string"
          },
          "maxHandlingTime": {
            "description": "Maximal product handling time (in business days).",
            "format": "int64",
            "type": "string"
          },
          "minEnergyEfficiencyClass": {
            "description": "The energy efficiency class as defined in EU directive 2010/30/EU.",
            "type": "string"
          },
          "minHandlingTime": {
            "description": "Minimal product handling time (in business days).",
            "format": "int64",
            "type": "string"
          },
          "mobileLink": {
            "description": "URL for the mobile-optimized version of your item's landing page.",
            "type": "string"
          },
          "mobileLinkTemplate": {
            "description": "URL template for merchant hosted local storefront optimized for mobile devices.",
            "type": "string"
          },
          "mpn": {
            "description": "Manufacturer Part Number (MPN) of the item.",
            "type": "string"
          },
          "multipack": {
            "description": "The number of identical products in a merchant-defined multipack.",
            "format": "int64",
            "type": "string"
          },
          "offerId": {
            "description": "Required. A unique identifier for the item. Leading and trailing whitespaces are stripped and multiple whitespaces are replaced by a single whitespace upon submission. Only valid unicode characters are accepted. See the products feed specification for details. *Note:* Content API methods that operate on products take the REST ID of the product, *not* this identifier.",
            "type": "string"
          },
          "pattern": {
            "description": "The item's pattern (for example, polka dots).",
            "type": "string"
          },
          "pause": {
            "description": "Publication of this item should be temporarily paused. Acceptable values are: - \"`ads`\" ",
            "type": "string"
          },
          "pickupMethod": {
            "description": "The pick up option for the item. Acceptable values are: - \"`buy`\" - \"`reserve`\" - \"`ship to store`\" - \"`not supported`\" ",
            "type": "string"
          },
          "pickupSla": {
            "description": "Item store pickup timeline. Acceptable values are: - \"`same day`\" - \"`next day`\" - \"`2-day`\" - \"`3-day`\" - \"`4-day`\" - \"`5-day`\" - \"`6-day`\" - \"`7-day`\" - \"`multi-week`\" ",
            "type": "string"
          },
          "price": {
            "$ref": "#/$defs/Price"
          },
          "productDetails": {
            "description": "Technical specification or additional product details.",
            "items": {
              "$ref": "#/$defs/ProductProductDetail"
            },
            "type": "array"
          },
          "productHeight": {
            "$ref": "#/$defs/ProductDimension"
          },
          "productHighlights": {
            "description": "Bullet points describing the most relevant highlights of a product.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "productLength": {
            "$ref": "#/$defs/ProductDimension"
          },
          "productTypes": {
            "description": "Categories of the item (formatted as in product data specification).",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "productWeight": {
            "$ref": "#/$defs/ProductWeight"
          },
          "productWidth": {
            "$ref": "#/$defs/ProductDimension"
          },
          "promotionIds": {
            "description": "The unique ID of a promotion.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "salePrice": {
            "$ref": "#/$defs/Price"
          },
          "salePriceEffectiveDate": {
            "description": "Date range during which the item is on sale (see product data specification ).",
            "type": "string"
          },
          "sellOnGoogleQuantity": {
            "description": "The quantity of the product that is available for selling on Google. Supported only for online products.",
            "format": "int64",
            "type": "string"
          },
          "shipping": {
            "description": "Shipping rules.",
            "items": {
              "$ref": "#/$defs/ProductShipping"
            },
            "type": "array"
          },
          "shippingHeight": {
            "$ref": "#/$defs/ProductShippingDimension"
          },
          "shippingLabel": {
            "description": "The shipping label of the product, used to group product in account-level shipping rules.",
            "type": "string"
          },
          "shippingLength": {
            "$ref": "#/$defs/ProductShippingDimension"
          },
          "shippingWeight": {
            "$ref": "#/$defs/ProductShippingWeight"
          },
          "shippingWidth": {
            "$ref": "#/$defs/ProductShippingDimension"
          },
          "shoppingAdsExcludedCountries": {
            "description": "List of country codes (ISO 3166-1 alpha-2) to exclude the offer from Shopping Ads destination. Countries from this list are removed from countries configured in MC feed settings.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "sizeSystem": {
            "description": "System in which the size is specified. Recommended for apparel items.",
            "type": "string"
          },
          "sizeType": {
            "description": "The cut of the item. Recommended for apparel items.",
            "type": "string"
          },
          "sizes": {
            "description": "Size of the item. Only one value is allowed. For variants with different sizes, insert a separate product for each size with the same `itemGroupId` value (see size definition).",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "source": {
            "description": "The source of the offer, that is, how the offer was created. Acceptable values are: - \"`api`\" - \"`crawl`\" - \"`feed`\" ",
            "type": "string"
          },
          "subscriptionCost": {
            "$ref": "#/$defs/ProductSubscriptionCost"
          },
          "targetCountry": {
            "description": "Required. The CLDR territory code for the item's country of sale.",
            "type": "string"
          },
          "taxCategory": {
            "description": "The tax category of the product, used to configure detailed tax nexus in account-level tax settings.",
            "type": "string"
          },
          "taxes": {
            "description": "Tax information.",
            "items": {
              "$ref": "#/$defs/ProductTax"
            },
            "type": "array"
          },
          "title": {
            "description": "Title of the item.",
            "type": "string"
          },
          "transitTimeLabel": {
            "description": "The transit time label of the product, used to group product in account-level transit time tables.",
            "type": "string"
          },
          "unitPricingBaseMeasure": {
            "$ref": "#/$defs/ProductUnitPricingBaseMeasure"
          },
          "unitPricingMeasure": {
            "$ref": "#/$defs/ProductUnitPricingMeasure"
          },
          "virtualModelLink": {
            "description": "URL of the 3D model of the item to provide more visuals.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProductCertification": {
        "description": "Product [certification](https://support.google.com/merchants/answer/13528839), introduced for EU energy efficiency labeling compliance using the [EU EPREL](https://eprel.ec.europa.eu/screen/home) database.",
        "properties": {
          "certificationAuthority": {
            "description": "The certification authority, for example \"European_Commission\". Maximum length is 2000 characters.",
            "type": "string"
          },
          "certificationCode": {
            "description": "The certification code, for eaxample \"123456\". Maximum length is 2000 characters.",
            "type": "string"
          },
          "certificationName": {
            "description": "The name of the certification, for example \"EPREL\". Maximum length is 2000 characters.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CloudExportAdditionalProperties": {
        "description": "Product property for the Cloud Retail API. For example, properties for a TV product could be \"Screen-Resolution\" or \"Screen-Size\".",
        "properties": {
          "boolValue": {
            "description": "Boolean value of the given property. For example for a TV product, \"True\" or \"False\" if the screen is UHD.",
            "type": "boolean"
          },
          "floatValue": {
            "description": "Float values of the given property. For example for a TV product 1.2345. Maximum number of specified values for this field is 400. Values are stored in an arbitrary but consistent order.",
            "items": {
              "format": "float",
              "type": "number"
            },
            "type": "array"
          },
          "intValue": {
            "description": "Integer values of the given property. For example, 1080 for a screen resolution of a TV product. Maximum number of specified values for this field is 400. Values are stored in an arbitrary but consistent order.",
            "items": {
              "format": "int64",
              "type": "string"
            },
            "type": "array"
          },
          "maxValue": {
            "description": "Maximum float value of the given property. For example for a TV product 100.00.",
            "format": "float",
            "type": "number"
          },
          "minValue": {
            "description": "Minimum float value of the given property. For example for a TV product 1.00.",
            "format": "float",
            "type": "number"
          },
          "propertyName": {
            "description": "Name of the given property. For example, \"Screen-Resolution\" for a TV product. Maximum string size is 256 characters.",
            "type": "string"
          },
          "textValue": {
            "description": "Text value of the given property. For example, \"8K(UHD)\" could be a text value for a TV product. Maximum number of specified values for this field is 400. Values are stored in an arbitrary but consistent order. Maximum string size is 256 characters.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "unitCode": {
            "description": "Unit of the given property. For example, \"Pixels\" for a TV product. Maximum string size is 256 bytes.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Price": {
        "properties": {
          "currency": {
            "description": "The currency of the price.",
            "type": "string"
          },
          "value": {
            "description": "The price represented as a number.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CustomAttribute": {
        "description": "A message that represents custom attributes. Exactly one of `value` or `groupValues` must be provided. Maximum allowed number of characters for each custom attribute is 10240 (represents sum of characters for name and value). Maximum 2500 custom attributes can be set per merchant, with total size of 102.4kB.",
        "properties": {
          "groupValues": {
            "description": "Subattributes within this attribute group. Exactly one of value or groupValues must be provided.",
            "items": {
              "$ref": "#/$defs/CustomAttribute"
            },
            "type": "array"
          },
          "name": {
            "description": "The name of the attribute. Underscores will be replaced by spaces upon insertion.",
            "type": "string"
          },
          "value": {
            "description": "The value of the attribute.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Installment": {
        "properties": {
          "amount": {
            "$ref": "#/$defs/Price"
          },
          "months": {
            "description": "The number of installments the buyer has to pay.",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "LoyaltyPoints": {
        "properties": {
          "name": {
            "description": "Name of loyalty points program. It is recommended to limit the name to 12 full-width characters or 24 Roman characters.",
            "type": "string"
          },
          "pointsValue": {
            "description": "The retailer's loyalty points in absolute value.",
            "format": "int64",
            "type": "string"
          },
          "ratio": {
            "description": "The ratio of a point when converted to currency. Google assumes currency based on Merchant Center settings. If ratio is left out, it defaults to 1.0.",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "ProductProductDetail": {
        "properties": {
          "attributeName": {
            "description": "The name of the product detail.",
            "type": "string"
          },
          "attributeValue": {
            "description": "The value of the product detail.",
            "type": "string"
          },
          "sectionName": {
            "description": "The section header used to group a set of product details.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProductDimension": {
        "properties": {
          "unit": {
            "description": "Required. The length units. Acceptable values are: - \"`in`\" - \"`cm`\" ",
            "type": "string"
          },
          "value": {
            "description": "Required. The length value represented as a number. The value can have a maximum precision of four decimal places.",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "ProductWeight": {
        "properties": {
          "unit": {
            "description": "Required. The weight unit. Acceptable values are: - \"`g`\" - \"`kg`\" - \"`oz`\" - \"`lb`\" ",
            "type": "string"
          },
          "value": {
            "description": "Required. The weight represented as a number. The weight can have a maximum precision of four decimal places.",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "ProductShipping": {
        "properties": {
          "country": {
            "description": "The CLDR territory code of the country to which an item will ship.",
            "type": "string"
          },
          "locationGroupName": {
            "description": "The location where the shipping is applicable, represented by a location group name.",
            "type": "string"
          },
          "locationId": {
            "description": "The numeric ID of a location that the shipping rate applies to as defined in the Google Ads API.",
            "format": "int64",
            "type": "string"
          },
          "maxHandlingTime": {
            "description": "Maximum handling time (inclusive) between when the order is received and shipped in business days. 0 means that the order is shipped on the same day as it's received if it happens before the cut-off time. Both maxHandlingTime and maxTransitTime are required if providing shipping speeds.",
            "format": "int64",
            "type": "string"
          },
          "maxTransitTime": {
            "description": "Maximum transit time (inclusive) between when the order has shipped and when it's delivered in business days. 0 means that the order is delivered on the same day as it ships. Both maxHandlingTime and maxTransitTime are required if providing shipping speeds.",
            "format": "int64",
            "type": "string"
          },
          "minHandlingTime": {
            "description": "Minimum handling time (inclusive) between when the order is received and shipped in business days. 0 means that the order is shipped on the same day as it's received if it happens before the cut-off time. minHandlingTime can only be present together with maxHandlingTime; but it's not required if maxHandlingTime is present.",
            "format": "int64",
            "type": "string"
          },
          "minTransitTime": {
            "description": "Minimum transit time (inclusive) between when the order has shipped and when it's delivered in business days. 0 means that the order is delivered on the same day as it ships. minTransitTime can only be present together with maxTransitTime; but it's not required if maxTransitTime is present.",
            "format": "int64",
            "type": "string"
          },
          "postalCode": {
            "description": "The postal code range that the shipping rate applies to, represented by a postal code, a postal code prefix followed by a * wildcard, a range between two postal codes or two postal code prefixes of equal length.",
            "type": "string"
          },
          "price": {
            "$ref": "#/$defs/Price"
          },
          "region": {
            "description": "The geographic region to which a shipping rate applies.",
            "type": "string"
          },
          "service": {
            "description": "A free-form description of the service class or delivery speed.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProductShippingDimension": {
        "properties": {
          "unit": {
            "description": "The unit of value.",
            "type": "string"
          },
          "value": {
            "description": "The dimension of the product used to calculate the shipping cost of the item.",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "ProductShippingWeight": {
        "properties": {
          "unit": {
            "description": "The unit of value.",
            "type": "string"
          },
          "value": {
            "description": "The weight of the product used to calculate the shipping cost of the item.",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "ProductSubscriptionCost": {
        "properties": {
          "amount": {
            "$ref": "#/$defs/Price"
          },
          "period": {
            "description": "The type of subscription period.",
            "type": "string"
          },
          "periodLength": {
            "description": "The number of subscription periods the buyer has to pay.",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProductTax": {
        "properties": {
          "country": {
            "description": "The country within which the item is taxed, specified as a CLDR territory code.",
            "type": "string"
          },
          "locationId": {
            "description": "The numeric ID of a location that the tax rate applies to as defined in the Google Ads API.",
            "format": "int64",
            "type": "string"
          },
          "postalCode": {
            "description": "The postal code range that the tax rate applies to, represented by a ZIP code, a ZIP code prefix using * wildcard, a range between two ZIP codes or two ZIP code prefixes of equal length. Examples: 94114, 94*, 94002-95460, 94*-95*.",
            "type": "string"
          },
          "rate": {
            "description": "The percentage of tax rate that applies to the item price.",
            "format": "double",
            "type": "number"
          },
          "region": {
            "description": "The geographic region to which the tax rate applies.",
            "type": "string"
          },
          "taxShip": {
            "description": "Should be set to true if tax is charged on shipping.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ProductUnitPricingBaseMeasure": {
        "properties": {
          "unit": {
            "description": "The unit of the denominator.",
            "type": "string"
          },
          "value": {
            "description": "The denominator of the unit price.",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProductUnitPricingMeasure": {
        "properties": {
          "unit": {
            "description": "The unit of the measure.",
            "type": "string"
          },
          "value": {
            "description": "The measure of an item.",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://shoppingcontent.googleapis.com/content/v2.1/products/batch{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**entries**: The result of the execution of the batch requests.",
            "**kind**: Identifies what kind of resource this is. Value: the fixed string \"`content#productsCustomBatchResponse`\"."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
