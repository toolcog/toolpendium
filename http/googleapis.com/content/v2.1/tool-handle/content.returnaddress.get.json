{
  "name": "content_returnaddress_get",
  "description": "Gets a return address of the Merchant Center account.",
  "parameters": {
    "type": "object",
    "properties": {
      "merchantId": {
        "type": "string",
        "description": "The Merchant Center account to get a return address for."
      },
      "returnAddressId": {
        "type": "string",
        "description": "Return address ID generated by Google."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      }
    },
    "required": [
      "merchantId",
      "returnAddressId"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://shoppingcontent.googleapis.com/content/v2.1/{merchantId}/returnaddress/{returnAddressId}{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Return address resource.",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**address**",
              {
                "$ul": [
                  "**country**: CLDR country code (for example, \"US\").",
                  "**locality**: City, town or commune. May also include dependent localities or sublocalities (for example, neighborhoods or suburbs).",
                  "**postalCode**: Postal code or ZIP (for example, \"94043\").",
                  "**recipientName**: Name of the recipient to address returns to.",
                  "**region**: Top-level administrative subdivision of the country. For example, a state like California (\"CA\") or a province like Quebec (\"QC\").",
                  "**streetAddress**: Street-level part of the address. May be up to two lines, each line specified as an array element."
                ]
              }
            ],
            "**country**: Required. The country of sale where the return address is applicable.",
            "**kind**: Identifies what kind of resource this is. Value: the fixed string \"`content#returnAddress`\"",
            "**label**: Required. The user-defined label of the return address. For the default address, use the label \"default\".",
            "**phoneNumber**: Required. The merchant's contact phone number regarding the return.",
            "**returnAddressId**: Return address ID generated by Google."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
