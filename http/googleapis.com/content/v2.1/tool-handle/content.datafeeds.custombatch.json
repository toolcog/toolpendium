{
  "name": "content_datafeeds_custombatch",
  "description": "Deletes, fetches, gets, inserts and updates multiple datafeeds in a single request.",
  "parameters": {
    "type": "object",
    "properties": {
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/DatafeedsCustomBatchRequest"
      }
    },
    "$defs": {
      "DatafeedsCustomBatchRequest": {
        "properties": {
          "entries": {
            "description": "The request entries to be processed in the batch.",
            "items": {
              "$ref": "#/$defs/DatafeedsCustomBatchRequestEntry"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DatafeedsCustomBatchRequestEntry": {
        "description": "A batch entry encoding a single non-batch datafeeds request.",
        "properties": {
          "batchId": {
            "description": "An entry ID, unique within the batch request.",
            "format": "uint32",
            "type": "integer"
          },
          "datafeed": {
            "$ref": "#/$defs/Datafeed"
          },
          "datafeedId": {
            "description": "The ID of the data feed to get, delete or fetch.",
            "format": "uint64",
            "type": "string"
          },
          "merchantId": {
            "description": "The ID of the managing account.",
            "format": "uint64",
            "type": "string"
          },
          "method": {
            "description": "The method of the batch entry. Acceptable values are: - \"`delete`\" - \"`fetchNow`\" - \"`get`\" - \"`insert`\" - \"`update`\" ",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Datafeed": {
        "description": "Datafeed configuration data.",
        "properties": {
          "attributeLanguage": {
            "description": "The two-letter ISO 639-1 language in which the attributes are defined in the data feed.",
            "type": "string"
          },
          "contentType": {
            "description": "Required. The type of data feed. For product inventory feeds, only feeds for local stores, not online stores, are supported. Acceptable values are: - \"`local products`\" - \"`product inventory`\" - \"`products`\" ",
            "type": "string"
          },
          "fetchSchedule": {
            "$ref": "#/$defs/DatafeedFetchSchedule"
          },
          "fileName": {
            "description": "Required. The filename of the feed. All feeds must have a unique file name.",
            "type": "string"
          },
          "format": {
            "$ref": "#/$defs/DatafeedFormat"
          },
          "id": {
            "description": "Required for update. The ID of the data feed.",
            "format": "int64",
            "type": "string"
          },
          "kind": {
            "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#datafeed`\"",
            "type": "string"
          },
          "name": {
            "description": "Required for insert. A descriptive name of the data feed.",
            "type": "string"
          },
          "targets": {
            "description": "The targets this feed should apply to (country, language, destinations).",
            "items": {
              "$ref": "#/$defs/DatafeedTarget"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DatafeedFetchSchedule": {
        "description": "The required fields vary based on the frequency of fetching. For a monthly fetch schedule, day_of_month and hour are required. For a weekly fetch schedule, weekday and hour are required. For a daily fetch schedule, only hour is required.",
        "properties": {
          "dayOfMonth": {
            "description": "The day of the month the feed file should be fetched (1-31).",
            "format": "uint32",
            "type": "integer"
          },
          "fetchUrl": {
            "description": "The URL where the feed file can be fetched. Google Merchant Center will support automatic scheduled uploads using the HTTP, HTTPS, FTP, or SFTP protocols, so the value will need to be a valid link using one of those four protocols.",
            "type": "string"
          },
          "hour": {
            "description": "The hour of the day the feed file should be fetched (0-23).",
            "format": "uint32",
            "type": "integer"
          },
          "minuteOfHour": {
            "description": "The minute of the hour the feed file should be fetched (0-59). Read-only.",
            "format": "uint32",
            "type": "integer"
          },
          "password": {
            "description": "An optional password for fetch_url.",
            "type": "string"
          },
          "paused": {
            "description": "Whether the scheduled fetch is paused or not.",
            "type": "boolean"
          },
          "timeZone": {
            "description": "Time zone used for schedule. UTC by default. For example, \"America/Los_Angeles\".",
            "type": "string"
          },
          "username": {
            "description": "An optional user name for fetch_url.",
            "type": "string"
          },
          "weekday": {
            "description": "The day of the week the feed file should be fetched. Acceptable values are: - \"`monday`\" - \"`tuesday`\" - \"`wednesday`\" - \"`thursday`\" - \"`friday`\" - \"`saturday`\" - \"`sunday`\" ",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DatafeedFormat": {
        "properties": {
          "columnDelimiter": {
            "description": "Delimiter for the separation of values in a delimiter-separated values feed. If not specified, the delimiter will be auto-detected. Ignored for non-DSV data feeds. Acceptable values are: - \"`pipe`\" - \"`tab`\" - \"`tilde`\" ",
            "type": "string"
          },
          "fileEncoding": {
            "description": "Character encoding scheme of the data feed. If not specified, the encoding will be auto-detected. Acceptable values are: - \"`latin-1`\" - \"`utf-16be`\" - \"`utf-16le`\" - \"`utf-8`\" - \"`windows-1252`\" ",
            "type": "string"
          },
          "quotingMode": {
            "description": "Specifies how double quotes are interpreted. If not specified, the mode will be auto-detected. Ignored for non-DSV data feeds. Acceptable values are: - \"`normal character`\" - \"`value quoting`\" ",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DatafeedTarget": {
        "properties": {
          "country": {
            "description": "Deprecated. Use `feedLabel` instead. The country where the items in the feed will be included in the search index, represented as a CLDR territory code.",
            "type": "string"
          },
          "excludedDestinations": {
            "description": "The list of destinations to exclude for this target (corresponds to cleared check boxes in Merchant Center). Products that are excluded from all destinations for more than 7 days are automatically deleted.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "feedLabel": {
            "description": "Feed label for the DatafeedTarget. Either `country` or `feedLabel` is required. If both `feedLabel` and `country` is specified, the values must match. Must be less than or equal to 20 uppercase letters (A-Z), numbers (0-9), and dashes (-).",
            "type": "string"
          },
          "includedDestinations": {
            "description": "The list of destinations to include for this target (corresponds to checked check boxes in Merchant Center). Default destinations are always included unless provided in `excludedDestinations`.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "language": {
            "description": "The two-letter ISO 639-1 language of the items in the feed. Must be a valid language for `targets[].country`.",
            "type": "string"
          },
          "targetCountries": {
            "description": "The countries where the items may be displayed. Represented as a CLDR territory code. Will be ignored for \"product inventory\" feeds.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://shoppingcontent.googleapis.com/content/v2.1/datafeeds/batch{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**entries**: The result of the execution of the batch requests.",
            "**kind**: Identifies what kind of resource this is. Value: the fixed string \"`content#datafeedsCustomBatchResponse`\"."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
