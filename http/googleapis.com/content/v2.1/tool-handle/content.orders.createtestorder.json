{
  "name": "content_orders_createtestorder",
  "description": "Sandbox only. Creates a test order.",
  "parameters": {
    "type": "object",
    "properties": {
      "merchantId": {
        "type": "string",
        "description": "The ID of the account that should manage the order. This cannot be a multi-client account."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/OrdersCreateTestOrderRequest"
      }
    },
    "required": [
      "merchantId"
    ],
    "$defs": {
      "OrdersCreateTestOrderRequest": {
        "properties": {
          "country": {
            "description": "The CLDR territory code of the country of the test order to create. Affects the currency and addresses of orders created through `template_name`, or the addresses of orders created through `test_order`. Acceptable values are: - \"`US`\" - \"`FR`\" Defaults to \"`US`\".",
            "type": "string"
          },
          "templateName": {
            "description": "The test order template to use. Specify as an alternative to `testOrder` as a shortcut for retrieving a template and then creating an order using that template. Acceptable values are: - \"`template1`\" - \"`template1a`\" - \"`template1b`\" - \"`template2`\" - \"`template3`\" ",
            "type": "string"
          },
          "testOrder": {
            "$ref": "#/$defs/TestOrder"
          }
        },
        "type": "object"
      },
      "TestOrder": {
        "properties": {
          "deliveryDetails": {
            "$ref": "#/$defs/TestOrderDeliveryDetails"
          },
          "enableOrderinvoices": {
            "description": "Whether the orderinvoices service should support this order.",
            "type": "boolean"
          },
          "kind": {
            "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#testOrder`\"",
            "type": "string"
          },
          "lineItems": {
            "description": "Required. Line items that are ordered. At least one line item must be provided.",
            "items": {
              "$ref": "#/$defs/TestOrderLineItem"
            },
            "type": "array"
          },
          "notificationMode": {
            "description": "Restricted. Do not use.",
            "type": "string"
          },
          "pickupDetails": {
            "$ref": "#/$defs/TestOrderPickupDetails"
          },
          "predefinedBillingAddress": {
            "description": "Required. The billing address. Acceptable values are: - \"`dwight`\" - \"`jim`\" - \"`pam`\" ",
            "type": "string"
          },
          "predefinedDeliveryAddress": {
            "description": "Required. Identifier of one of the predefined delivery addresses for the delivery. Acceptable values are: - \"`dwight`\" - \"`jim`\" - \"`pam`\" ",
            "type": "string"
          },
          "predefinedEmail": {
            "description": "Required. Email address of the customer. Acceptable values are: - \"`pog.dwight.schrute@gmail.com`\" - \"`pog.jim.halpert@gmail.com`\" - \"`penpog.pam.beesly@gmail.comding`\" ",
            "type": "string"
          },
          "predefinedPickupDetails": {
            "description": "Identifier of one of the predefined pickup details. Required for orders containing line items with shipping type `pickup`. Acceptable values are: - \"`dwight`\" - \"`jim`\" - \"`pam`\" ",
            "type": "string"
          },
          "promotions": {
            "description": "Promotions associated with the order.",
            "items": {
              "$ref": "#/$defs/OrderPromotion"
            },
            "type": "array"
          },
          "shippingCost": {
            "$ref": "#/$defs/Price"
          },
          "shippingOption": {
            "description": "Required. The requested shipping option. Acceptable values are: - \"`economy`\" - \"`expedited`\" - \"`oneDay`\" - \"`sameDay`\" - \"`standard`\" - \"`twoDay`\" ",
            "type": "string"
          }
        },
        "type": "object"
      },
      "TestOrderDeliveryDetails": {
        "properties": {
          "address": {
            "$ref": "#/$defs/TestOrderAddress"
          },
          "isScheduledDelivery": {
            "description": "Whether the order is scheduled delivery order.",
            "type": "boolean"
          },
          "phoneNumber": {
            "description": "The phone number of the person receiving the delivery.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "TestOrderAddress": {
        "properties": {
          "country": {
            "description": "CLDR country code (for example, \"US\").",
            "type": "string"
          },
          "fullAddress": {
            "description": "Strings representing the lines of the printed label for mailing the order, for example: John Smith 1600 Amphitheatre Parkway Mountain View, CA, 94043 United States ",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "isPostOfficeBox": {
            "description": "Whether the address is a post office box.",
            "type": "boolean"
          },
          "locality": {
            "description": "City, town or commune. May also include dependent localities or sublocalities (for example, neighborhoods or suburbs).",
            "type": "string"
          },
          "postalCode": {
            "description": "Postal Code or ZIP (for example, \"94043\").",
            "type": "string"
          },
          "recipientName": {
            "description": "Name of the recipient.",
            "type": "string"
          },
          "region": {
            "description": "Top-level administrative subdivision of the country. For example, a state like California (\"CA\") or a province like Quebec (\"QC\").",
            "type": "string"
          },
          "streetAddress": {
            "description": "Street-level part of the address. Use `\\n` to add a second line.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "TestOrderLineItem": {
        "properties": {
          "product": {
            "$ref": "#/$defs/TestOrderLineItemProduct"
          },
          "quantityOrdered": {
            "description": "Required. Number of items ordered.",
            "format": "uint32",
            "type": "integer"
          },
          "returnInfo": {
            "$ref": "#/$defs/OrderLineItemReturnInfo"
          },
          "shippingDetails": {
            "$ref": "#/$defs/OrderLineItemShippingDetails"
          }
        },
        "type": "object"
      },
      "TestOrderLineItemProduct": {
        "properties": {
          "brand": {
            "description": "Required. Brand of the item.",
            "type": "string"
          },
          "condition": {
            "description": "Required. Condition or state of the item. Acceptable values are: - \"`new`\" ",
            "type": "string"
          },
          "contentLanguage": {
            "description": "Required. The two-letter ISO 639-1 language code for the item. Acceptable values are: - \"`en`\" - \"`fr`\" ",
            "type": "string"
          },
          "fees": {
            "description": "Fees for the item. Optional.",
            "items": {
              "$ref": "#/$defs/OrderLineItemProductFee"
            },
            "type": "array"
          },
          "gtin": {
            "description": "Global Trade Item Number (GTIN) of the item. Optional.",
            "type": "string"
          },
          "imageLink": {
            "description": "Required. URL of an image of the item.",
            "type": "string"
          },
          "itemGroupId": {
            "description": "Shared identifier for all variants of the same product. Optional.",
            "type": "string"
          },
          "mpn": {
            "description": "Manufacturer Part Number (MPN) of the item. Optional.",
            "type": "string"
          },
          "offerId": {
            "description": "Required. An identifier of the item.",
            "type": "string"
          },
          "price": {
            "$ref": "#/$defs/Price"
          },
          "targetCountry": {
            "description": "Required. The CLDR territory code of the target country of the product.",
            "type": "string"
          },
          "title": {
            "description": "Required. The title of the product.",
            "type": "string"
          },
          "variantAttributes": {
            "description": "Variant attributes for the item. Optional.",
            "items": {
              "$ref": "#/$defs/OrderLineItemProductVariantAttribute"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "OrderLineItemProductFee": {
        "properties": {
          "amount": {
            "$ref": "#/$defs/Price"
          },
          "name": {
            "description": "Name of the fee.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Price": {
        "properties": {
          "currency": {
            "description": "The currency of the price.",
            "type": "string"
          },
          "value": {
            "description": "The price represented as a number.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OrderLineItemProductVariantAttribute": {
        "properties": {
          "dimension": {
            "description": "The dimension of the variant.",
            "type": "string"
          },
          "value": {
            "description": "The value for the dimension.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OrderLineItemReturnInfo": {
        "properties": {
          "daysToReturn": {
            "description": "Required. How many days later the item can be returned.",
            "format": "int32",
            "type": "integer"
          },
          "isReturnable": {
            "description": "Required. Whether the item is returnable.",
            "type": "boolean"
          },
          "policyUrl": {
            "description": "Required. URL of the item return policy.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OrderLineItemShippingDetails": {
        "properties": {
          "deliverByDate": {
            "description": "Required. The delivery by date, in ISO 8601 format.",
            "type": "string"
          },
          "method": {
            "$ref": "#/$defs/OrderLineItemShippingDetailsMethod"
          },
          "pickupPromiseInMinutes": {
            "description": "The promised time in minutes in which the order will be ready for pickup. This only applies to buy-online-pickup-in-store same-day order.",
            "format": "uint32",
            "type": "integer"
          },
          "shipByDate": {
            "description": "Required. The ship by date, in ISO 8601 format.",
            "type": "string"
          },
          "type": {
            "description": "Type of shipment. Indicates whether `deliveryDetails` or `pickupDetails` is applicable for this shipment. Acceptable values are: - \"`delivery`\" - \"`pickup`\" ",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OrderLineItemShippingDetailsMethod": {
        "properties": {
          "carrier": {
            "description": "The carrier for the shipping. Optional. See `shipments[].carrier` for a list of acceptable values.",
            "type": "string"
          },
          "maxDaysInTransit": {
            "description": "Required. Maximum transit time.",
            "format": "uint32",
            "type": "integer"
          },
          "methodName": {
            "description": "Required. The name of the shipping method.",
            "type": "string"
          },
          "minDaysInTransit": {
            "description": "Required. Minimum transit time.",
            "format": "uint32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TestOrderPickupDetails": {
        "properties": {
          "locationCode": {
            "description": "Required. Code of the location defined by provider or merchant.",
            "type": "string"
          },
          "pickupLocationAddress": {
            "$ref": "#/$defs/TestOrderAddress"
          },
          "pickupLocationType": {
            "description": "Pickup location type. Acceptable values are: - \"`locker`\" - \"`store`\" - \"`curbside`\" ",
            "type": "string"
          },
          "pickupPersons": {
            "description": "Required. all pickup persons set by users.",
            "items": {
              "$ref": "#/$defs/TestOrderPickupDetailsPickupPerson"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "TestOrderPickupDetailsPickupPerson": {
        "properties": {
          "name": {
            "description": "Required. Full name of the pickup person.",
            "type": "string"
          },
          "phoneNumber": {
            "description": "Required. The phone number of the person picking up the items.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OrderPromotion": {
        "properties": {
          "applicableItems": {
            "description": "Items that this promotion may be applied to. If empty, there are no restrictions on applicable items and quantity. This field will also be empty for shipping promotions because shipping is not tied to any specific item.",
            "items": {
              "$ref": "#/$defs/OrderPromotionItem"
            },
            "type": "array"
          },
          "appliedItems": {
            "description": "Items that this promotion have been applied to. Do not provide for `orders.createtestorder`. This field will be empty for shipping promotions because shipping is not tied to any specific item.",
            "items": {
              "$ref": "#/$defs/OrderPromotionItem"
            },
            "type": "array"
          },
          "endTime": {
            "description": "Promotion end time in ISO 8601 format. Date, time, and offset required, for example, \"2020-01-02T09:00:00+01:00\" or \"2020-01-02T09:00:00Z\".",
            "type": "string"
          },
          "funder": {
            "description": "Required. The party funding the promotion. Only `merchant` is supported for `orders.createtestorder`. Acceptable values are: - \"`google`\" - \"`merchant`\" ",
            "type": "string"
          },
          "merchantPromotionId": {
            "description": "Required. This field is used to identify promotions within merchants' own systems.",
            "type": "string"
          },
          "priceValue": {
            "$ref": "#/$defs/Price"
          },
          "shortTitle": {
            "description": "A short title of the promotion to be shown on the checkout page. Do not provide for `orders.createtestorder`.",
            "type": "string"
          },
          "startTime": {
            "description": "Promotion start time in ISO 8601 format. Date, time, and offset required, for example, \"2020-01-02T09:00:00+01:00\" or \"2020-01-02T09:00:00Z\".",
            "type": "string"
          },
          "subtype": {
            "description": "Required. The category of the promotion. Only `moneyOff` is supported for `orders.createtestorder`. Acceptable values are: - \"`buyMGetMoneyOff`\" - \"`buyMGetNMoneyOff`\" - \"`buyMGetNPercentOff`\" - \"`buyMGetPercentOff`\" - \"`freeGift`\" - \"`freeGiftWithItemId`\" - \"`freeGiftWithValue`\" - \"`freeShippingOvernight`\" - \"`freeShippingStandard`\" - \"`freeShippingTwoDay`\" - \"`moneyOff`\" - \"`percentOff`\" - \"`rewardPoints`\" - \"`salePrice`\" ",
            "type": "string"
          },
          "taxValue": {
            "$ref": "#/$defs/Price"
          },
          "title": {
            "description": "Required. The title of the promotion.",
            "type": "string"
          },
          "type": {
            "description": "Required. The scope of the promotion. Only `product` is supported for `orders.createtestorder`. Acceptable values are: - \"`product`\" - \"`shipping`\" ",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OrderPromotionItem": {
        "properties": {
          "lineItemId": {
            "description": "The line item ID of a product. Do not provide for `orders.createtestorder`.",
            "type": "string"
          },
          "offerId": {
            "description": "Required. Offer ID of a product. Only for `orders.createtestorder`.",
            "type": "string"
          },
          "productId": {
            "description": "`orders.createtestorder`.",
            "type": "string"
          },
          "quantity": {
            "description": "The quantity of the associated product. Do not provide for `orders.createtestorder`.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://shoppingcontent.googleapis.com/content/v2.1/{merchantId}/testorders{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**kind**: Identifies what kind of resource this is. Value: the fixed string \"`content#ordersCreateTestOrderResponse`\".",
            "**orderId**: The ID of the newly created test order."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
