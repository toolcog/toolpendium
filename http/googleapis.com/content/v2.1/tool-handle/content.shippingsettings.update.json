{
  "name": "content_shippingsettings_update",
  "description": "Updates the shipping settings of the account. Any fields that are not provided are deleted from the resource.",
  "parameters": {
    "type": "object",
    "properties": {
      "merchantId": {
        "type": "string",
        "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account."
      },
      "accountId": {
        "type": "string",
        "description": "The ID of the account for which to get/update shipping settings."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/ShippingSettings"
      }
    },
    "required": [
      "merchantId",
      "accountId"
    ],
    "$defs": {
      "ShippingSettings": {
        "description": "The merchant account's shipping settings. All methods except getsupportedcarriers and getsupportedholidays require the admin role.",
        "properties": {
          "accountId": {
            "description": "The ID of the account to which these account shipping settings belong. Ignored upon update, always present in get request responses.",
            "format": "uint64",
            "type": "string"
          },
          "postalCodeGroups": {
            "description": "A list of postal code groups that can be referred to in `services`. Optional.",
            "items": {
              "$ref": "#/$defs/PostalCodeGroup"
            },
            "type": "array"
          },
          "services": {
            "description": "The target account's list of services. Optional.",
            "items": {
              "$ref": "#/$defs/Service"
            },
            "type": "array"
          },
          "warehouses": {
            "description": "Optional. A list of warehouses which can be referred to in `services`.",
            "items": {
              "$ref": "#/$defs/Warehouse"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PostalCodeGroup": {
        "properties": {
          "country": {
            "description": "The CLDR territory code of the country the postal code group applies to. Required.",
            "type": "string"
          },
          "name": {
            "description": "The name of the postal code group, referred to in headers. Required.",
            "type": "string"
          },
          "postalCodeRanges": {
            "description": "A range of postal codes. Required.",
            "items": {
              "$ref": "#/$defs/PostalCodeRange"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PostalCodeRange": {
        "properties": {
          "postalCodeRangeBegin": {
            "description": "A postal code or a pattern of the form `prefix*` denoting the inclusive lower bound of the range defining the area. Examples values: `\"94108\"`, `\"9410*\"`, `\"9*\"`. Required.",
            "type": "string"
          },
          "postalCodeRangeEnd": {
            "description": "A postal code or a pattern of the form `prefix*` denoting the inclusive upper bound of the range defining the area. It must have the same length as `postalCodeRangeBegin`: if `postalCodeRangeBegin` is a postal code then `postalCodeRangeEnd` must be a postal code too; if `postalCodeRangeBegin` is a pattern then `postalCodeRangeEnd` must be a pattern with the same prefix length. Optional: if not set, then the area is defined as being all the postal codes matching `postalCodeRangeBegin`.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Service": {
        "properties": {
          "active": {
            "description": "A boolean exposing the active status of the shipping service. Required.",
            "type": "boolean"
          },
          "currency": {
            "description": "The CLDR code of the currency to which this service applies. Must match that of the prices in rate groups.",
            "type": "string"
          },
          "deliveryCountry": {
            "description": "The CLDR territory code of the country to which the service applies. Required.",
            "type": "string"
          },
          "deliveryTime": {
            "$ref": "#/$defs/DeliveryTime"
          },
          "eligibility": {
            "description": "Eligibility for this service. Acceptable values are: - \"`All scenarios`\" - \"`All scenarios except Shopping Actions`\" - \"`Shopping Actions`\" ",
            "type": "string"
          },
          "minimumOrderValue": {
            "$ref": "#/$defs/Price"
          },
          "minimumOrderValueTable": {
            "$ref": "#/$defs/MinimumOrderValueTable"
          },
          "name": {
            "description": "Free-form name of the service. Must be unique within target account. Required.",
            "type": "string"
          },
          "pickupService": {
            "$ref": "#/$defs/PickupCarrierService"
          },
          "rateGroups": {
            "description": "Shipping rate group definitions. Only the last one is allowed to have an empty `applicableShippingLabels`, which means \"everything else\". The other `applicableShippingLabels` must not overlap.",
            "items": {
              "$ref": "#/$defs/RateGroup"
            },
            "type": "array"
          },
          "shipmentType": {
            "description": "Type of locations this service ships orders to. Acceptable values are: - \"`delivery`\" - \"`pickup` (deprecated)\" - \"`local_delivery`\" - \"`collection_point`\" ",
            "type": "string"
          },
          "storeConfig": {
            "$ref": "#/$defs/ServiceStoreConfig"
          }
        },
        "type": "object"
      },
      "DeliveryTime": {
        "properties": {
          "cutoffTime": {
            "$ref": "#/$defs/CutoffTime"
          },
          "handlingBusinessDayConfig": {
            "$ref": "#/$defs/BusinessDayConfig"
          },
          "holidayCutoffs": {
            "description": "Holiday cutoff definitions. If configured, they specify order cutoff times for holiday-specific shipping.",
            "items": {
              "$ref": "#/$defs/HolidayCutoff"
            },
            "type": "array"
          },
          "maxHandlingTimeInDays": {
            "description": "Maximum number of business days spent before an order is shipped. 0 means same day shipped, 1 means next day shipped. Must be greater than or equal to `minHandlingTimeInDays`.",
            "format": "uint32",
            "type": "integer"
          },
          "maxTransitTimeInDays": {
            "description": "Maximum number of business days that are spent in transit. 0 means same day delivery, 1 means next day delivery. Must be greater than or equal to `minTransitTimeInDays`.",
            "format": "uint32",
            "type": "integer"
          },
          "minHandlingTimeInDays": {
            "description": "Minimum number of business days spent before an order is shipped. 0 means same day shipped, 1 means next day shipped.",
            "format": "uint32",
            "type": "integer"
          },
          "minTransitTimeInDays": {
            "description": "Minimum number of business days that are spent in transit. 0 means same day delivery, 1 means next day delivery. Either `{min,max}TransitTimeInDays` or `transitTimeTable` must be set, but not both.",
            "format": "uint32",
            "type": "integer"
          },
          "transitBusinessDayConfig": {
            "$ref": "#/$defs/BusinessDayConfig"
          },
          "transitTimeTable": {
            "$ref": "#/$defs/TransitTable"
          },
          "warehouseBasedDeliveryTimes": {
            "description": "Indicates that the delivery time should be calculated per warehouse (shipping origin location) based on the settings of the selected carrier. When set, no other transit time related field in DeliveryTime should be set.",
            "items": {
              "$ref": "#/$defs/WarehouseBasedDeliveryTime"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "CutoffTime": {
        "properties": {
          "hour": {
            "description": "Hour of the cutoff time until which an order has to be placed to be processed in the same day. Required.",
            "format": "uint32",
            "type": "integer"
          },
          "minute": {
            "description": "Minute of the cutoff time until which an order has to be placed to be processed in the same day. Required.",
            "format": "uint32",
            "type": "integer"
          },
          "timezone": {
            "description": "Timezone identifier for the cutoff time (for example, \"Europe/Zurich\"). List of identifiers. Required.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "BusinessDayConfig": {
        "properties": {
          "businessDays": {
            "description": "Regular business days, such as '\"monday\"'. May not be empty.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "HolidayCutoff": {
        "properties": {
          "deadlineDate": {
            "description": "Date of the order deadline, in ISO 8601 format. For example, \"2016-11-29\" for 29th November 2016. Required.",
            "type": "string"
          },
          "deadlineHour": {
            "description": "Hour of the day on the deadline date until which the order has to be placed to qualify for the delivery guarantee. Possible values are: 0 (midnight), 1, ..., 12 (noon), 13, ..., 23. Required.",
            "format": "uint32",
            "type": "integer"
          },
          "deadlineTimezone": {
            "description": "Timezone identifier for the deadline hour (for example, \"Europe/Zurich\"). List of identifiers. Required.",
            "type": "string"
          },
          "holidayId": {
            "description": "Unique identifier for the holiday. Required.",
            "type": "string"
          },
          "visibleFromDate": {
            "description": "Date on which the deadline will become visible to consumers in ISO 8601 format. For example, \"2016-10-31\" for 31st October 2016. Required.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "TransitTable": {
        "properties": {
          "postalCodeGroupNames": {
            "description": "A list of postal group names. The last value can be `\"all other locations\"`. Example: `[\"zone 1\", \"zone 2\", \"all other locations\"]`. The referred postal code groups must match the delivery country of the service.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "rows": {
            "items": {
              "$ref": "#/$defs/TransitTableTransitTimeRow"
            },
            "type": "array"
          },
          "transitTimeLabels": {
            "description": "A list of transit time labels. The last value can be `\"all other labels\"`. Example: `[\"food\", \"electronics\", \"all other labels\"]`.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "TransitTableTransitTimeRow": {
        "properties": {
          "values": {
            "items": {
              "$ref": "#/$defs/TransitTableTransitTimeRowTransitTimeValue"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "TransitTableTransitTimeRowTransitTimeValue": {
        "properties": {
          "maxTransitTimeInDays": {
            "description": "Must be greater than or equal to `minTransitTimeInDays`.",
            "format": "uint32",
            "type": "integer"
          },
          "minTransitTimeInDays": {
            "description": "Transit time range (min-max) in business days. 0 means same day delivery, 1 means next day delivery.",
            "format": "uint32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "WarehouseBasedDeliveryTime": {
        "properties": {
          "carrier": {
            "description": "Required. Carrier, such as `\"UPS\"` or `\"Fedex\"`. The list of supported carriers can be retrieved through the `listSupportedCarriers` method.",
            "type": "string"
          },
          "carrierService": {
            "description": "Required. Carrier service, such as `\"ground\"` or `\"2 days\"`. The list of supported services for a carrier can be retrieved through the `listSupportedCarriers` method. The name of the service must be in the eddSupportedServices list.",
            "type": "string"
          },
          "originAdministrativeArea": {
            "description": "Shipping origin's state.",
            "type": "string"
          },
          "originCity": {
            "description": "Shipping origin's city.",
            "type": "string"
          },
          "originCountry": {
            "description": "Shipping origin's country represented as a [CLDR territory code](https://github.com/unicode-org/cldr/blob/latest/common/main/en.xml).",
            "type": "string"
          },
          "originPostalCode": {
            "description": "Shipping origin.",
            "type": "string"
          },
          "originStreetAddress": {
            "description": "Shipping origin's street address.",
            "type": "string"
          },
          "warehouseName": {
            "description": "The name of the warehouse. Warehouse name need to be matched with name. If warehouseName is set, the below fields will be ignored. The warehouse info will be read from warehouse.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Price": {
        "properties": {
          "currency": {
            "description": "The currency of the price.",
            "type": "string"
          },
          "value": {
            "description": "The price represented as a number.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MinimumOrderValueTable": {
        "properties": {
          "storeCodeSetWithMovs": {
            "items": {
              "$ref": "#/$defs/MinimumOrderValueTableStoreCodeSetWithMov"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "MinimumOrderValueTableStoreCodeSetWithMov": {
        "description": "A list of store code sets sharing the same minimum order value. At least two sets are required and the last one must be empty, which signifies 'MOV for all other stores'. Each store code can only appear once across all the sets. All prices within a service must have the same currency.",
        "properties": {
          "storeCodes": {
            "description": "A list of unique store codes or empty for the catch all.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "value": {
            "$ref": "#/$defs/Price"
          }
        },
        "type": "object"
      },
      "PickupCarrierService": {
        "properties": {
          "carrierName": {
            "description": "The name of the pickup carrier (for example, `\"UPS\"`). Required.",
            "type": "string"
          },
          "serviceName": {
            "description": "The name of the pickup service (for example, `\"Access point\"`). Required.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RateGroup": {
        "properties": {
          "applicableShippingLabels": {
            "description": "A list of shipping labels defining the products to which this rate group applies to. This is a disjunction: only one of the labels has to match for the rate group to apply. May only be empty for the last rate group of a service. Required.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "carrierRates": {
            "description": "A list of carrier rates that can be referred to by `mainTable` or `singleValue`.",
            "items": {
              "$ref": "#/$defs/CarrierRate"
            },
            "type": "array"
          },
          "mainTable": {
            "$ref": "#/$defs/Table"
          },
          "name": {
            "description": "Name of the rate group. Optional. If set has to be unique within shipping service.",
            "type": "string"
          },
          "singleValue": {
            "$ref": "#/$defs/Value"
          },
          "subtables": {
            "description": "A list of subtables referred to by `mainTable`. Can only be set if `mainTable` is set.",
            "items": {
              "$ref": "#/$defs/Table"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "CarrierRate": {
        "properties": {
          "carrierName": {
            "description": "Carrier service, such as `\"UPS\"` or `\"Fedex\"`. The list of supported carriers can be retrieved through the `getSupportedCarriers` method. Required.",
            "type": "string"
          },
          "carrierService": {
            "description": "Carrier service, such as `\"ground\"` or `\"2 days\"`. The list of supported services for a carrier can be retrieved through the `getSupportedCarriers` method. Required.",
            "type": "string"
          },
          "flatAdjustment": {
            "$ref": "#/$defs/Price"
          },
          "name": {
            "description": "Name of the carrier rate. Must be unique per rate group. Required.",
            "type": "string"
          },
          "originPostalCode": {
            "description": "Shipping origin for this carrier rate. Required.",
            "type": "string"
          },
          "percentageAdjustment": {
            "description": "Multiplicative shipping rate modifier as a number in decimal notation. Can be negative. For example `\"5.4\"` increases the rate by 5.4%, `\"-3\"` decreases the rate by 3%. Optional.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Table": {
        "properties": {
          "columnHeaders": {
            "$ref": "#/$defs/Headers"
          },
          "name": {
            "description": "Name of the table. Required for subtables, ignored for the main table.",
            "type": "string"
          },
          "rowHeaders": {
            "$ref": "#/$defs/Headers"
          },
          "rows": {
            "description": "The list of rows that constitute the table. Must have the same length as `rowHeaders`. Required.",
            "items": {
              "$ref": "#/$defs/Row"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Headers": {
        "description": "A non-empty list of row or column headers for a table. Exactly one of `prices`, `weights`, `numItems`, `postalCodeGroupNames`, or `location` must be set.",
        "properties": {
          "locations": {
            "description": "A list of location ID sets. Must be non-empty. Can only be set if all other fields are not set.",
            "items": {
              "$ref": "#/$defs/LocationIdSet"
            },
            "type": "array"
          },
          "numberOfItems": {
            "description": "A list of inclusive number of items upper bounds. The last value can be `\"infinity\"`. For example `[\"10\", \"50\", \"infinity\"]` represents the headers \"<= 10 items\", \"<= 50 items\", and \"> 50 items\". Must be non-empty. Can only be set if all other fields are not set.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "postalCodeGroupNames": {
            "description": "A list of postal group names. The last value can be `\"all other locations\"`. Example: `[\"zone 1\", \"zone 2\", \"all other locations\"]`. The referred postal code groups must match the delivery country of the service. Must be non-empty. Can only be set if all other fields are not set.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "prices": {
            "description": "A list of inclusive order price upper bounds. The last price's value can be `\"infinity\"`. For example `[{\"value\": \"10\", \"currency\": \"USD\"}, {\"value\": \"500\", \"currency\": \"USD\"}, {\"value\": \"infinity\", \"currency\": \"USD\"}]` represents the headers \"<= $10\", \"<= $500\", and \"> $500\". All prices within a service must have the same currency. Must be non-empty. Can only be set if all other fields are not set.",
            "items": {
              "$ref": "#/$defs/Price"
            },
            "type": "array"
          },
          "weights": {
            "description": "A list of inclusive order weight upper bounds. The last weight's value can be `\"infinity\"`. For example `[{\"value\": \"10\", \"unit\": \"kg\"}, {\"value\": \"50\", \"unit\": \"kg\"}, {\"value\": \"infinity\", \"unit\": \"kg\"}]` represents the headers \"<= 10kg\", \"<= 50kg\", and \"> 50kg\". All weights within a service must have the same unit. Must be non-empty. Can only be set if all other fields are not set.",
            "items": {
              "$ref": "#/$defs/Weight"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "LocationIdSet": {
        "properties": {
          "locationIds": {
            "description": "A non-empty list of location IDs. They must all be of the same location type (for example, state).",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Weight": {
        "properties": {
          "unit": {
            "description": "Required. The weight unit. Acceptable values are: - \"`kg`\" - \"`lb`\" ",
            "type": "string"
          },
          "value": {
            "description": "Required. The weight represented as a number. The weight can have a maximum precision of four decimal places.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Row": {
        "properties": {
          "cells": {
            "description": "The list of cells that constitute the row. Must have the same length as `columnHeaders` for two-dimensional tables, a length of 1 for one-dimensional tables. Required.",
            "items": {
              "$ref": "#/$defs/Value"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Value": {
        "description": "The single value of a rate group or the value of a rate group table's cell. Exactly one of `noShipping`, `flatRate`, `pricePercentage`, `carrierRateName`, `subtableName` must be set.",
        "properties": {
          "carrierRateName": {
            "description": "The name of a carrier rate referring to a carrier rate defined in the same rate group. Can only be set if all other fields are not set.",
            "type": "string"
          },
          "flatRate": {
            "$ref": "#/$defs/Price"
          },
          "noShipping": {
            "description": "If true, then the product can't ship. Must be true when set, can only be set if all other fields are not set.",
            "type": "boolean"
          },
          "pricePercentage": {
            "description": "A percentage of the price represented as a number in decimal notation (for example, `\"5.4\"`). Can only be set if all other fields are not set.",
            "type": "string"
          },
          "subtableName": {
            "description": "The name of a subtable. Can only be set in table cells (not for single values), and only if all other fields are not set.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServiceStoreConfig": {
        "description": "Stores that provide local delivery. Only valid with local delivery fulfillment.",
        "properties": {
          "cutoffConfig": {
            "$ref": "#/$defs/ServiceStoreConfigCutoffConfig"
          },
          "serviceRadius": {
            "$ref": "#/$defs/Distance"
          },
          "storeCodes": {
            "description": "A list of store codes that provide local delivery. If empty, then `store_service_type` must be `all_stores`, or an error is thrown. If not empty, then `store_service_type` must be `selected_stores`, or an error is thrown.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "storeServiceType": {
            "description": "Indicates whether all stores listed by this merchant provide local delivery or not. Acceptable values are `all stores` and `selected stores`",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServiceStoreConfigCutoffConfig": {
        "description": "Time local delivery ends for the day based on the local timezone of the store. `local_cutoff_time` and `store_close_offset_hours` are mutually exclusive.",
        "properties": {
          "localCutoffTime": {
            "$ref": "#/$defs/ServiceStoreConfigCutoffConfigLocalCutoffTime"
          },
          "noDeliveryPostCutoff": {
            "description": "Merchants can opt-out of showing n+1 day local delivery when they have a shipping service configured to n day local delivery. For example, if the shipping service defines same-day delivery, and it's past the cut-off, setting this field to `true` results in the calculated shipping service rate returning `NO_DELIVERY_POST_CUTOFF`. In the same example, setting this field to `false` results in the calculated shipping time being one day. This is only for local delivery.",
            "type": "boolean"
          },
          "storeCloseOffsetHours": {
            "description": "Represents cutoff time as the number of hours before store closing. Mutually exclusive with other fields (hour and minute).",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServiceStoreConfigCutoffConfigLocalCutoffTime": {
        "description": "Time in hours and minutes in the local timezone when local delivery ends.",
        "properties": {
          "hour": {
            "description": "Hour local delivery orders must be placed by to process the same day.",
            "format": "int64",
            "type": "string"
          },
          "minute": {
            "description": "Minute local delivery orders must be placed by to process the same day.",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Distance": {
        "description": "Distance represented by an integer and unit.",
        "properties": {
          "unit": {
            "description": "The distance unit. Acceptable values are `None`, `Miles`, and `Kilometers`.",
            "type": "string"
          },
          "value": {
            "description": "The distance represented as a number.",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Warehouse": {
        "description": "A fulfillment warehouse, which stores and handles inventory.",
        "properties": {
          "businessDayConfig": {
            "$ref": "#/$defs/BusinessDayConfig"
          },
          "cutoffTime": {
            "$ref": "#/$defs/WarehouseCutoffTime"
          },
          "handlingDays": {
            "description": "Required. The number of days it takes for this warehouse to pack up and ship an item. This is on the warehouse level, but can be overridden on the offer level based on the attributes of an item.",
            "format": "int64",
            "type": "string"
          },
          "name": {
            "description": "Required. The name of the warehouse. Must be unique within account.",
            "type": "string"
          },
          "shippingAddress": {
            "$ref": "#/$defs/Address"
          }
        },
        "type": "object"
      },
      "WarehouseCutoffTime": {
        "properties": {
          "hour": {
            "description": "Required. Hour (24-hour clock) of the cutoff time until which an order has to be placed to be processed in the same day by the warehouse. Hour is based on the timezone of warehouse.",
            "format": "int32",
            "type": "integer"
          },
          "minute": {
            "description": "Required. Minute of the cutoff time until which an order has to be placed to be processed in the same day by the warehouse. Minute is based on the timezone of warehouse.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Address": {
        "properties": {
          "administrativeArea": {
            "description": "Required. Top-level administrative subdivision of the country. For example, a state like California (\"CA\") or a province like Quebec (\"QC\").",
            "type": "string"
          },
          "city": {
            "description": "Required. City, town or commune. May also include dependent localities or sublocalities (for example, neighborhoods or suburbs).",
            "type": "string"
          },
          "country": {
            "description": "Required. [CLDR country code](https://github.com/unicode-org/cldr/blob/latest/common/main/en.xml) (for example, \"US\").",
            "type": "string"
          },
          "postalCode": {
            "description": "Required. Postal code or ZIP (for example, \"94043\").",
            "type": "string"
          },
          "streetAddress": {
            "description": "Street-level part of the address. Use `\\n` to add a second line.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "https://shoppingcontent.googleapis.com/content/v2.1/{merchantId}/shippingsettings/{accountId}{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The merchant account's shipping settings. All methods except getsupportedcarriers and getsupportedholidays require the admin role.",
        "**Key properties:**",
        {
          "$ul": [
            "**accountId**: The ID of the account to which these account shipping settings belong. Ignored upon update, always present in get request responses.",
            "**postalCodeGroups**: A list of postal code groups that can be referred to in `services`. Optional.",
            "**services**: The target account's list of services. Optional.",
            "**warehouses**: Optional. A list of warehouses which can be referred to in `services`."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
