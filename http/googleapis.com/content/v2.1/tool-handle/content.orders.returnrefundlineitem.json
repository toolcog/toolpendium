{
  "name": "content_orders_returnrefundlineitem",
  "description": "Returns and refunds a line item. Note that this method can only be called on fully shipped orders. The Orderreturns API is the preferred way to handle returns after you receive a return from a customer. You can use Orderreturns.list or Orderreturns.get to search for the return, and then use Orderreturns.processreturn to issue the refund. If the return cannot be found, then we recommend using this API to issue a refund.",
  "parameters": {
    "type": "object",
    "properties": {
      "merchantId": {
        "type": "string",
        "description": "The ID of the account that manages the order. This cannot be a multi-client account."
      },
      "orderId": {
        "type": "string",
        "description": "The ID of the order."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/OrdersReturnRefundLineItemRequest"
      }
    },
    "required": [
      "merchantId",
      "orderId"
    ],
    "$defs": {
      "OrdersReturnRefundLineItemRequest": {
        "properties": {
          "lineItemId": {
            "description": "The ID of the line item to return. Either lineItemId or productId is required.",
            "type": "string"
          },
          "operationId": {
            "description": "The ID of the operation. Unique across all operations for a given order.",
            "type": "string"
          },
          "priceAmount": {
            "$ref": "#/$defs/Price"
          },
          "productId": {
            "description": "The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required.",
            "type": "string"
          },
          "quantity": {
            "description": "The quantity to return and refund. Quantity is required.",
            "format": "uint32",
            "type": "integer"
          },
          "reason": {
            "description": "The reason for the return. Acceptable values are: - \"`customerDiscretionaryReturn`\" - \"`customerInitiatedMerchantCancel`\" - \"`deliveredTooLate`\" - \"`expiredItem`\" - \"`invalidCoupon`\" - \"`malformedShippingAddress`\" - \"`other`\" - \"`productArrivedDamaged`\" - \"`productNotAsDescribed`\" - \"`qualityNotAsExpected`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" - \"`wrongProductShipped`\" ",
            "type": "string"
          },
          "reasonText": {
            "description": "The explanation of the reason.",
            "type": "string"
          },
          "taxAmount": {
            "$ref": "#/$defs/Price"
          }
        },
        "type": "object"
      },
      "Price": {
        "properties": {
          "currency": {
            "description": "The currency of the price.",
            "type": "string"
          },
          "value": {
            "description": "The price represented as a number.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://shoppingcontent.googleapis.com/content/v2.1/{merchantId}/orders/{orderId}/returnRefundLineItem{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**executionStatus**: The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" ",
            "**kind**: Identifies what kind of resource this is. Value: the fixed string \"`content#ordersReturnRefundLineItemResponse`\"."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
