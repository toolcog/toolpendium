{
  "name": "content_ordertrackingsignals_create",
  "description": "Creates new order tracking signal.",
  "parameters": {
    "type": "object",
    "properties": {
      "merchantId": {
        "type": "string",
        "description": "The ID of the merchant for which the order signal is created."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/OrderTrackingSignal"
      }
    },
    "required": [
      "merchantId"
    ],
    "$defs": {
      "OrderTrackingSignal": {
        "description": "Represents a merchant trade from which signals are extracted, e.g. shipping.",
        "properties": {
          "customerShippingFee": {
            "$ref": "#/$defs/PriceAmount"
          },
          "deliveryPostalCode": {
            "description": "Required. The delivery postal code, as a continuous string without spaces or dashes, e.g. \"95016\". This field will be anonymized in returned OrderTrackingSignal creation response.",
            "type": "string"
          },
          "deliveryRegionCode": {
            "description": "Required. The [CLDR territory code] (http://www.unicode.org/repos/cldr/tags/latest/common/main/en.xml) for the shipping destination.",
            "type": "string"
          },
          "lineItems": {
            "description": "Information about line items in the order.",
            "items": {
              "$ref": "#/$defs/OrderTrackingSignalLineItemDetails"
            },
            "type": "array"
          },
          "merchantId": {
            "description": "The Google merchant ID of this order tracking signal. This value is optional. If left unset, the caller's merchant ID is used. You must request access in order to provide data on behalf of another merchant. For more information, see [Submitting Order Tracking Signals](/shopping-content/guides/order-tracking-signals).",
            "format": "int64",
            "type": "string"
          },
          "orderCreatedTime": {
            "$ref": "#/$defs/DateTime"
          },
          "orderId": {
            "description": "Required. The ID of the order on the merchant side. This field will be hashed in returned OrderTrackingSignal creation response.",
            "type": "string"
          },
          "orderTrackingSignalId": {
            "description": "Output only. The ID that uniquely identifies this order tracking signal.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "shipmentLineItemMapping": {
            "description": "The mapping of the line items to the shipment information.",
            "items": {
              "$ref": "#/$defs/OrderTrackingSignalShipmentLineItemMapping"
            },
            "type": "array"
          },
          "shippingInfo": {
            "description": "The shipping information for the order.",
            "items": {
              "$ref": "#/$defs/OrderTrackingSignalShippingInfo"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PriceAmount": {
        "description": "The price represented as a number and currency.",
        "properties": {
          "currency": {
            "description": "The currency of the price.",
            "type": "string"
          },
          "value": {
            "description": "The price represented as a number.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OrderTrackingSignalLineItemDetails": {
        "description": "The line items of the order.",
        "properties": {
          "brand": {
            "description": "Brand of the product.",
            "type": "string"
          },
          "gtin": {
            "description": "The Global Trade Item Number.",
            "type": "string"
          },
          "lineItemId": {
            "description": "Required. The ID for this line item.",
            "type": "string"
          },
          "mpn": {
            "description": "The manufacturer part number.",
            "type": "string"
          },
          "productDescription": {
            "deprecated": true,
            "description": "Plain text description of this product (deprecated: Please use product_title instead).",
            "type": "string"
          },
          "productId": {
            "description": "Required. The Content API REST ID of the product, in the form channel:contentLanguage:targetCountry:offerId.",
            "type": "string"
          },
          "productTitle": {
            "description": "Plain text title of this product.",
            "type": "string"
          },
          "quantity": {
            "description": "The quantity of the line item in the order.",
            "format": "int64",
            "type": "string"
          },
          "sku": {
            "deprecated": true,
            "description": "Merchant SKU for this item (deprecated).",
            "type": "string"
          },
          "upc": {
            "deprecated": true,
            "description": "Universal product code for this item (deprecated: Please use GTIN instead).",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DateTime": {
        "description": "Represents civil time (or occasionally physical time). This type can represent a civil time in one of a few possible ways: * When utc_offset is set and time_zone is unset: a civil time on a calendar day with a particular offset from UTC. * When time_zone is set and utc_offset is unset: a civil time on a calendar day in a particular time zone. * When neither time_zone nor utc_offset is set: a civil time on a calendar day in local time. The date is relative to the Proleptic Gregorian Calendar. If year, month, or day are 0, the DateTime is considered not to have a specific year, month, or day respectively. This type may also be used to represent a physical time if all the date and time fields are set and either case of the `time_offset` oneof is set. Consider using `Timestamp` message for physical time instead. If your use case also would like to store the user's timezone, that can be done in another field. This type is more flexible than some applications may want. Make sure to document and validate your application's limitations.",
        "properties": {
          "day": {
            "description": "Optional. Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a datetime without a day.",
            "format": "int32",
            "type": "integer"
          },
          "hours": {
            "description": "Optional. Hours of day in 24 hour format. Should be from 0 to 23, defaults to 0 (midnight). An API may choose to allow the value \"24:00:00\" for scenarios like business closing time.",
            "format": "int32",
            "type": "integer"
          },
          "minutes": {
            "description": "Optional. Minutes of hour of day. Must be from 0 to 59, defaults to 0.",
            "format": "int32",
            "type": "integer"
          },
          "month": {
            "description": "Optional. Month of year. Must be from 1 to 12, or 0 if specifying a datetime without a month.",
            "format": "int32",
            "type": "integer"
          },
          "nanos": {
            "description": "Optional. Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999, defaults to 0.",
            "format": "int32",
            "type": "integer"
          },
          "seconds": {
            "description": "Optional. Seconds of minutes of the time. Must normally be from 0 to 59, defaults to 0. An API may allow the value 60 if it allows leap-seconds.",
            "format": "int32",
            "type": "integer"
          },
          "timeZone": {
            "$ref": "#/$defs/TimeZone"
          },
          "utcOffset": {
            "description": "UTC offset. Must be whole seconds, between -18 hours and +18 hours. For example, a UTC offset of -4:00 would be represented as { seconds: -14400 }.",
            "format": "google-duration",
            "type": "string"
          },
          "year": {
            "description": "Optional. Year of date. Must be from 1 to 9999, or 0 if specifying a datetime without a year.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TimeZone": {
        "description": "Represents a time zone from the [IANA Time Zone Database](https://www.iana.org/time-zones).",
        "properties": {
          "id": {
            "description": "IANA Time Zone Database time zone, e.g. \"America/New_York\".",
            "type": "string"
          },
          "version": {
            "description": "Optional. IANA Time Zone Database version number, e.g. \"2019a\".",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OrderTrackingSignalShipmentLineItemMapping": {
        "description": "Represents how many items are in the shipment for the given shipment_id and line_item_id.",
        "properties": {
          "lineItemId": {
            "description": "Required. The line item ID.",
            "type": "string"
          },
          "quantity": {
            "description": "The line item quantity in the shipment.",
            "format": "int64",
            "type": "string"
          },
          "shipmentId": {
            "description": "Required. The shipment ID. This field will be hashed in returned OrderTrackingSignal creation response.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OrderTrackingSignalShippingInfo": {
        "description": "The shipping information for the order.",
        "properties": {
          "actualDeliveryTime": {
            "$ref": "#/$defs/DateTime"
          },
          "carrierName": {
            "description": "The name of the shipping carrier for the delivery. This field is required if one of the following fields is absent: earliest_delivery_promise_time, latest_delivery_promise_time, and actual_delivery_time.",
            "type": "string"
          },
          "carrierServiceName": {
            "description": "The service type for fulfillment, e.g., GROUND, FIRST_CLASS, etc.",
            "type": "string"
          },
          "earliestDeliveryPromiseTime": {
            "$ref": "#/$defs/DateTime"
          },
          "latestDeliveryPromiseTime": {
            "$ref": "#/$defs/DateTime"
          },
          "originPostalCode": {
            "description": "The origin postal code, as a continuous string without spaces or dashes, e.g. \"95016\". This field will be anonymized in returned OrderTrackingSignal creation response.",
            "type": "string"
          },
          "originRegionCode": {
            "description": "The [CLDR territory code] (http://www.unicode.org/repos/cldr/tags/latest/common/main/en.xml) for the shipping origin.",
            "type": "string"
          },
          "shipmentId": {
            "description": "Required. The shipment ID. This field will be hashed in returned OrderTrackingSignal creation response.",
            "type": "string"
          },
          "shippedTime": {
            "$ref": "#/$defs/DateTime"
          },
          "shippingStatus": {
            "description": "The status of the shipment.",
            "enum": [
              "SHIPPING_STATE_UNSPECIFIED",
              "SHIPPED",
              "DELIVERED"
            ],
            "type": "string"
          },
          "trackingId": {
            "description": "The tracking ID of the shipment. This field is required if one of the following fields is absent: earliest_delivery_promise_time, latest_delivery_promise_time, and actual_delivery_time.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://shoppingcontent.googleapis.com/content/v2.1/{merchantId}/ordertrackingsignals{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Represents a merchant trade from which signals are extracted, e.g. shipping.",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**customerShippingFee**: The price represented as a number and currency.",
              {
                "$ul": [
                  "**currency**: The currency of the price.",
                  "**value**: The price represented as a number."
                ]
              }
            ],
            "**deliveryPostalCode**: Required. The delivery postal code, as a continuous string without spaces or dashes, e.g. \"95016\". This field will be anonymized in returned OrderTrackingSignal creation response.",
            "**deliveryRegionCode**: Required. The [CLDR territory code] (http://www.unicode.org/repos/cldr/tags/latest/common/main/en.xml) for the shipping destination.",
            "**lineItems**: Information about line items in the order.",
            "**merchantId**: The Google merchant ID of this order tracking signal. This value is optional. If left unset, the caller's merchant ID is used. You must request access in order to provide data on behalf of another merchant. For more information, see [Submitting Order Tracking Signals](/shopping-content/guides/order-tracking-signals).",
            [
              "**orderCreatedTime**: Represents civil time (or occasionally physical time). This type can represent a civil time in one of a few possible ways: * When utc_offset is set and time_zone is unset: a civil time on a calendar day with a particular offset from UTC. * When time_zone is set and utc_offset is unset: a civil time on a calendar day in a particular time zone. * When neither time_zone nor utc_offset is set: a civil time on a calendar day in local time. The date is relative to the Proleptic Gregorian Calendar. If year, month, or day are 0, the DateTime is considered not to have a specific year, month, or day respectively. This type may also be used to represent a physical time if all the date and time fields are set and either case of the `time_offset` oneof is set. Consider using `Timestamp` message for physical time instead. If your use case also would like to store the user's timezone, that can be done in another field. This type is more flexible than some applications may want. Make sure to document and validate your application's limitations.",
              {
                "$ul": [
                  "**day**: Optional. Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a datetime without a day.",
                  "**hours**: Optional. Hours of day in 24 hour format. Should be from 0 to 23, defaults to 0 (midnight). An API may choose to allow the value \"24:00:00\" for scenarios like business closing time.",
                  "**minutes**: Optional. Minutes of hour of day. Must be from 0 to 59, defaults to 0.",
                  "**month**: Optional. Month of year. Must be from 1 to 12, or 0 if specifying a datetime without a month.",
                  "**nanos**: Optional. Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999, defaults to 0.",
                  "**seconds**: Optional. Seconds of minutes of the time. Must normally be from 0 to 59, defaults to 0. An API may allow the value 60 if it allows leap-seconds.",
                  [
                    "**timeZone**: Represents a time zone from the [IANA Time Zone Database](https://www.iana.org/time-zones).",
                    {
                      "$ul": [
                        "**id**: IANA Time Zone Database time zone, e.g. \"America/New_York\".",
                        "**version**: Optional. IANA Time Zone Database version number, e.g. \"2019a\"."
                      ]
                    }
                  ],
                  "**utcOffset**: UTC offset. Must be whole seconds, between -18 hours and +18 hours. For example, a UTC offset of -4:00 would be represented as { seconds: -14400 }.",
                  "**year**: Optional. Year of date. Must be from 1 to 9999, or 0 if specifying a datetime without a year."
                ]
              }
            ],
            "**orderId**: Required. The ID of the order on the merchant side. This field will be hashed in returned OrderTrackingSignal creation response.",
            "**orderTrackingSignalId**: Output only. The ID that uniquely identifies this order tracking signal.",
            "**shipmentLineItemMapping**: The mapping of the line items to the shipment information.",
            "**shippingInfo**: The shipping information for the order."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
