{
  "name": "notebooks_projects_locations_instances_create",
  "description": "Creates a new Instance in a given project and location.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. Format: `parent=projects/{project_id}/locations/{location}`"
      },
      "instanceId": {
        "type": "string",
        "description": "Required. User-defined unique ID of this instance."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/Instance"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "Instance": {
        "description": "The definition of a notebook instance.",
        "properties": {
          "acceleratorConfig": {
            "$ref": "#/$defs/AcceleratorConfig"
          },
          "bootDiskSizeGb": {
            "description": "Input only. The size of the boot disk in GB attached to this instance, up to a maximum of 64000 GB (64 TB). The minimum recommended value is 100 GB. If not specified, this defaults to 100.",
            "format": "int64",
            "type": "string"
          },
          "bootDiskType": {
            "description": "Input only. The type of the boot disk attached to this instance, defaults to standard persistent disk (`PD_STANDARD`).",
            "enum": [
              "DISK_TYPE_UNSPECIFIED",
              "PD_STANDARD",
              "PD_SSD",
              "PD_BALANCED",
              "PD_EXTREME"
            ],
            "type": "string"
          },
          "canIpForward": {
            "description": "Optional. Flag to enable ip forwarding or not, default false/off. https://cloud.google.com/vpc/docs/using-routes#canipforward",
            "type": "boolean"
          },
          "containerImage": {
            "$ref": "#/$defs/ContainerImage"
          },
          "createTime": {
            "description": "Output only. Instance creation time.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "creator": {
            "description": "Output only. Email address of entity that sent original CreateInstance request.",
            "readOnly": true,
            "type": "string"
          },
          "customGpuDriverPath": {
            "description": "Specify a custom Cloud Storage path where the GPU driver is stored. If not specified, we'll automatically choose from official GPU drivers.",
            "type": "string"
          },
          "dataDiskSizeGb": {
            "description": "Input only. The size of the data disk in GB attached to this instance, up to a maximum of 64000 GB (64 TB). You can choose the size of the data disk based on how big your notebooks and data are. If not specified, this defaults to 100.",
            "format": "int64",
            "type": "string"
          },
          "dataDiskType": {
            "description": "Input only. The type of the data disk attached to this instance, defaults to standard persistent disk (`PD_STANDARD`).",
            "enum": [
              "DISK_TYPE_UNSPECIFIED",
              "PD_STANDARD",
              "PD_SSD",
              "PD_BALANCED",
              "PD_EXTREME"
            ],
            "type": "string"
          },
          "diskEncryption": {
            "description": "Input only. Disk encryption method used on the boot and data disks, defaults to GMEK.",
            "enum": [
              "DISK_ENCRYPTION_UNSPECIFIED",
              "GMEK",
              "CMEK"
            ],
            "type": "string"
          },
          "disks": {
            "description": "Output only. Attached disks to notebook instance.",
            "items": {
              "$ref": "#/$defs/Disk"
            },
            "readOnly": true,
            "type": "array"
          },
          "installGpuDriver": {
            "description": "Whether the end user authorizes Google Cloud to install GPU driver on this instance. If this field is empty or set to false, the GPU driver won't be installed. Only applicable to instances with GPUs.",
            "type": "boolean"
          },
          "instanceMigrationEligibility": {
            "$ref": "#/$defs/InstanceMigrationEligibility"
          },
          "instanceOwners": {
            "description": "Input only. The owner of this instance after creation. Format: `alias@example.com` Currently supports one owner only. If not specified, all of the service account users of your VM instance's service account can use the instance.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "kmsKey": {
            "description": "Input only. The KMS key used to encrypt the disks, only applicable if disk_encryption is CMEK. Format: `projects/{project_id}/locations/{location}/keyRings/{key_ring_id}/cryptoKeys/{key_id}` Learn more about [using your own encryption keys](/kms/docs/quickstart).",
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Labels to apply to this instance. These can be later modified by the setLabels method.",
            "type": "object"
          },
          "machineType": {
            "description": "Required. The [Compute Engine machine type](https://cloud.google.com/compute/docs/machine-types) of this instance.",
            "type": "string"
          },
          "metadata": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Custom metadata to apply to this instance. For example, to specify a Cloud Storage bucket for automatic backup, you can use the `gcs-data-bucket` metadata tag. Format: `\"--metadata=gcs-data-bucket=``BUCKET''\"`.",
            "type": "object"
          },
          "migrated": {
            "description": "Output only. Bool indicating whether this notebook has been migrated to a Workbench Instance",
            "readOnly": true,
            "type": "boolean"
          },
          "name": {
            "description": "Output only. The name of this notebook instance. Format: `projects/{project_id}/locations/{location}/instances/{instance_id}`",
            "readOnly": true,
            "type": "string"
          },
          "network": {
            "description": "The name of the VPC that this instance is in. Format: `projects/{project_id}/global/networks/{network_id}`",
            "type": "string"
          },
          "nicType": {
            "description": "Optional. The type of vNIC to be used on this interface. This may be gVNIC or VirtioNet.",
            "enum": [
              "UNSPECIFIED_NIC_TYPE",
              "VIRTIO_NET",
              "GVNIC"
            ],
            "type": "string"
          },
          "noProxyAccess": {
            "description": "If true, the notebook instance will not register with the proxy.",
            "type": "boolean"
          },
          "noPublicIp": {
            "description": "If true, no external IP will be assigned to this instance.",
            "type": "boolean"
          },
          "noRemoveDataDisk": {
            "description": "Input only. If true, the data disk will not be auto deleted when deleting the instance.",
            "type": "boolean"
          },
          "postStartupScript": {
            "description": "Path to a Bash script that automatically runs after a notebook instance fully boots up. The path must be a URL or Cloud Storage path (`gs://path-to-file/file-name`).",
            "type": "string"
          },
          "proxyUri": {
            "description": "Output only. The proxy endpoint that is used to access the Jupyter notebook.",
            "readOnly": true,
            "type": "string"
          },
          "reservationAffinity": {
            "$ref": "#/$defs/ReservationAffinity"
          },
          "serviceAccount": {
            "description": "The service account on this instance, giving access to other Google Cloud services. You can use any service account within the same project, but you must have the service account user permission to use the instance. If not specified, the [Compute Engine default service account](https://cloud.google.com/compute/docs/access/service-accounts#default_service_account) is used.",
            "type": "string"
          },
          "serviceAccountScopes": {
            "description": "Optional. The URIs of service account scopes to be included in Compute Engine instances. If not specified, the following [scopes](https://cloud.google.com/compute/docs/access/service-accounts#accesscopesiam) are defined: - https://www.googleapis.com/auth/cloud-platform - https://www.googleapis.com/auth/userinfo.email If not using default scopes, you need at least: https://www.googleapis.com/auth/compute",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "shieldedInstanceConfig": {
            "$ref": "#/$defs/ShieldedInstanceConfig"
          },
          "state": {
            "description": "Output only. The state of this instance.",
            "enum": [
              "STATE_UNSPECIFIED",
              "STARTING",
              "PROVISIONING",
              "ACTIVE",
              "STOPPING",
              "STOPPED",
              "DELETED",
              "UPGRADING",
              "INITIALIZING",
              "REGISTERING",
              "SUSPENDING",
              "SUSPENDED"
            ],
            "readOnly": true,
            "type": "string"
          },
          "subnet": {
            "description": "The name of the subnet that this instance is in. Format: `projects/{project_id}/regions/{region}/subnetworks/{subnetwork_id}`",
            "type": "string"
          },
          "tags": {
            "description": "Optional. The Compute Engine tags to add to runtime (see [Tagging instances](https://cloud.google.com/compute/docs/label-or-tag-resources#tags)).",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "updateTime": {
            "description": "Output only. Instance update time.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "upgradeHistory": {
            "description": "The upgrade history of this instance.",
            "items": {
              "$ref": "#/$defs/UpgradeHistoryEntry"
            },
            "type": "array"
          },
          "vmImage": {
            "$ref": "#/$defs/VmImage"
          }
        },
        "type": "object"
      },
      "AcceleratorConfig": {
        "description": "Definition of a hardware accelerator. Note that not all combinations of `type` and `core_count` are valid. See [GPUs on Compute Engine](https://cloud.google.com/compute/docs/gpus/#gpus-list) to find a valid combination. TPUs are not supported.",
        "properties": {
          "coreCount": {
            "description": "Count of cores of this accelerator.",
            "format": "int64",
            "type": "string"
          },
          "type": {
            "description": "Type of this accelerator.",
            "enum": [
              "ACCELERATOR_TYPE_UNSPECIFIED",
              "NVIDIA_TESLA_K80",
              "NVIDIA_TESLA_P100",
              "NVIDIA_TESLA_V100",
              "NVIDIA_TESLA_P4",
              "NVIDIA_TESLA_T4",
              "NVIDIA_TESLA_A100",
              "NVIDIA_L4",
              "NVIDIA_TESLA_T4_VWS",
              "NVIDIA_TESLA_P100_VWS",
              "NVIDIA_TESLA_P4_VWS",
              "TPU_V2",
              "TPU_V3"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "ContainerImage": {
        "description": "Definition of a container image for starting a notebook instance with the environment installed in a container.",
        "properties": {
          "repository": {
            "description": "Required. The path to the container image repository. For example: `gcr.io/{project_id}/{image_name}`",
            "type": "string"
          },
          "tag": {
            "description": "The tag of the container image. If not specified, this defaults to the latest tag.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Disk": {
        "description": "An instance-attached disk resource.",
        "properties": {
          "autoDelete": {
            "description": "Indicates whether the disk will be auto-deleted when the instance is deleted (but not when the disk is detached from the instance).",
            "type": "boolean"
          },
          "boot": {
            "description": "Indicates that this is a boot disk. The virtual machine will use the first partition of the disk for its root filesystem.",
            "type": "boolean"
          },
          "deviceName": {
            "description": "Indicates a unique device name of your choice that is reflected into the `/dev/disk/by-id/google-*` tree of a Linux operating system running within the instance. This name can be used to reference the device for mounting, resizing, and so on, from within the instance. If not specified, the server chooses a default device name to apply to this disk, in the form persistent-disk-x, where x is a number assigned by Google Compute Engine.This field is only applicable for persistent disks.",
            "type": "string"
          },
          "diskSizeGb": {
            "description": "Indicates the size of the disk in base-2 GB.",
            "format": "int64",
            "type": "string"
          },
          "guestOsFeatures": {
            "description": "Indicates a list of features to enable on the guest operating system. Applicable only for bootable images. Read Enabling guest operating system features to see a list of available options.",
            "items": {
              "$ref": "#/$defs/GuestOsFeature"
            },
            "type": "array"
          },
          "index": {
            "description": "A zero-based index to this disk, where 0 is reserved for the boot disk. If you have many disks attached to an instance, each disk would have a unique index number.",
            "format": "int64",
            "type": "string"
          },
          "interface": {
            "description": "Indicates the disk interface to use for attaching this disk, which is either SCSI or NVME. The default is SCSI. Persistent disks must always use SCSI and the request will fail if you attempt to attach a persistent disk in any other format than SCSI. Local SSDs can use either NVME or SCSI. For performance characteristics of SCSI over NVMe, see Local SSD performance. Valid values: * `NVME` * `SCSI`",
            "type": "string"
          },
          "kind": {
            "description": "Type of the resource. Always compute#attachedDisk for attached disks.",
            "type": "string"
          },
          "licenses": {
            "description": "A list of publicly visible licenses. Reserved for Google's use. A License represents billing and aggregate usage data for public and marketplace images.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "mode": {
            "description": "The mode in which to attach this disk, either `READ_WRITE` or `READ_ONLY`. If not specified, the default is to attach the disk in `READ_WRITE` mode. Valid values: * `READ_ONLY` * `READ_WRITE`",
            "type": "string"
          },
          "source": {
            "description": "Indicates a valid partial or full URL to an existing Persistent Disk resource.",
            "type": "string"
          },
          "type": {
            "description": "Indicates the type of the disk, either `SCRATCH` or `PERSISTENT`. Valid values: * `PERSISTENT` * `SCRATCH`",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GuestOsFeature": {
        "description": "Guest OS features for boot disk.",
        "properties": {
          "type": {
            "description": "The ID of a supported feature. Read Enabling guest operating system features to see a list of available options. Valid values: * `FEATURE_TYPE_UNSPECIFIED` * `MULTI_IP_SUBNET` * `SECURE_BOOT` * `UEFI_COMPATIBLE` * `VIRTIO_SCSI_MULTIQUEUE` * `WINDOWS`",
            "type": "string"
          }
        },
        "type": "object"
      },
      "InstanceMigrationEligibility": {
        "description": "InstanceMigrationEligibility represents the feasibility information of a migration from UmN to WbI.",
        "properties": {
          "errors": {
            "description": "Output only. Certain configurations make the UmN ineligible for an automatic migration. A manual migration is required.",
            "items": {
              "enum": [
                "ERROR_UNSPECIFIED",
                "DATAPROC_HUB"
              ],
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "warnings": {
            "description": "Output only. Certain configurations will be defaulted during the migration.",
            "items": {
              "enum": [
                "WARNING_UNSPECIFIED",
                "UNSUPPORTED_MACHINE_TYPE",
                "UNSUPPORTED_ACCELERATOR_TYPE",
                "UNSUPPORTED_OS",
                "NO_REMOVE_DATA_DISK",
                "GCS_BACKUP",
                "POST_STARTUP_SCRIPT"
              ],
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "ReservationAffinity": {
        "description": "Reservation Affinity for consuming Zonal reservation.",
        "properties": {
          "consumeReservationType": {
            "description": "Optional. Type of reservation to consume",
            "enum": [
              "TYPE_UNSPECIFIED",
              "NO_RESERVATION",
              "ANY_RESERVATION",
              "SPECIFIC_RESERVATION"
            ],
            "type": "string"
          },
          "key": {
            "description": "Optional. Corresponds to the label key of reservation resource.",
            "type": "string"
          },
          "values": {
            "description": "Optional. Corresponds to the label values of reservation resource.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ShieldedInstanceConfig": {
        "description": "A set of Shielded Instance options. See [Images using supported Shielded VM features](https://cloud.google.com/compute/docs/instances/modifying-shielded-vm). Not all combinations are valid.",
        "properties": {
          "enableIntegrityMonitoring": {
            "description": "Defines whether the instance has integrity monitoring enabled. Enables monitoring and attestation of the boot integrity of the instance. The attestation is performed against the integrity policy baseline. This baseline is initially derived from the implicitly trusted boot image when the instance is created. Enabled by default.",
            "type": "boolean"
          },
          "enableSecureBoot": {
            "description": "Defines whether the instance has Secure Boot enabled. Secure Boot helps ensure that the system only runs authentic software by verifying the digital signature of all boot components, and halting the boot process if signature verification fails. Disabled by default.",
            "type": "boolean"
          },
          "enableVtpm": {
            "description": "Defines whether the instance has the vTPM enabled. Enabled by default.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "UpgradeHistoryEntry": {
        "description": "The entry of VM image upgrade history.",
        "properties": {
          "action": {
            "description": "Action. Rolloback or Upgrade.",
            "enum": [
              "ACTION_UNSPECIFIED",
              "UPGRADE",
              "ROLLBACK"
            ],
            "type": "string"
          },
          "containerImage": {
            "description": "The container image before this instance upgrade.",
            "type": "string"
          },
          "createTime": {
            "description": "The time that this instance upgrade history entry is created.",
            "format": "google-datetime",
            "type": "string"
          },
          "framework": {
            "description": "The framework of this notebook instance.",
            "type": "string"
          },
          "snapshot": {
            "description": "The snapshot of the boot disk of this notebook instance before upgrade.",
            "type": "string"
          },
          "state": {
            "description": "The state of this instance upgrade history entry.",
            "enum": [
              "STATE_UNSPECIFIED",
              "STARTED",
              "SUCCEEDED",
              "FAILED"
            ],
            "type": "string"
          },
          "targetImage": {
            "deprecated": true,
            "description": "Target VM Image. Format: `ainotebooks-vm/project/image-name/name`.",
            "type": "string"
          },
          "targetVersion": {
            "description": "Target VM Version, like m63.",
            "type": "string"
          },
          "version": {
            "description": "The version of the notebook instance before this upgrade.",
            "type": "string"
          },
          "vmImage": {
            "description": "The VM image before this instance upgrade.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "VmImage": {
        "description": "Definition of a custom Compute Engine virtual machine image for starting a notebook instance with the environment installed directly on the VM.",
        "properties": {
          "imageFamily": {
            "description": "Use this VM image family to find the image; the newest image in this family will be used.",
            "type": "string"
          },
          "imageName": {
            "description": "Use VM image name to find the image.",
            "type": "string"
          },
          "project": {
            "description": "Required. The name of the Google Cloud project that this VM image belongs to. Format: `{project_id}`",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://notebooks.googleapis.com//v1/{parent}/instances{?instanceId,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "This resource represents a long-running operation that is the result of a network API call.",
        "**Key properties:**",
        {
          "$ul": [
            "**done**: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
            [
              "**error**: The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
              {
                "$ul": [
                  "**code**: The status code, which should be an enum value of google.rpc.Code.",
                  "**details**: A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                  "**message**: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                ]
              }
            ],
            "**metadata**: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
            "**name**: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
            "**response**: The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
