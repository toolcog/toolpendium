{
  "name": "dataform_projects_locations_repositories_compilationResults_create",
  "description": "Creates a new CompilationResult in a given project and location.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The repository in which to create the compilation result. Must be in the format `projects/*/locations/*/repositories/*`."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/CompilationResult"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "CompilationResult": {
        "description": "Represents the result of compiling a Dataform project.",
        "properties": {
          "codeCompilationConfig": {
            "$ref": "#/$defs/CodeCompilationConfig"
          },
          "compilationErrors": {
            "description": "Output only. Errors encountered during project compilation.",
            "items": {
              "$ref": "#/$defs/CompilationError"
            },
            "readOnly": true,
            "type": "array"
          },
          "dataformCoreVersion": {
            "description": "Output only. The version of `@dataform/core` that was used for compilation.",
            "readOnly": true,
            "type": "string"
          },
          "gitCommitish": {
            "description": "Immutable. Git commit/tag/branch name at which the repository should be compiled. Must exist in the remote repository. Examples: - a commit SHA: `12ade345` - a tag: `tag1` - a branch name: `branch1`",
            "type": "string"
          },
          "name": {
            "description": "Output only. The compilation result's name.",
            "readOnly": true,
            "type": "string"
          },
          "releaseConfig": {
            "description": "Immutable. The name of the release config to compile. Must be in the format `projects/*/locations/*/repositories/*/releaseConfigs/*`.",
            "type": "string"
          },
          "resolvedGitCommitSha": {
            "description": "Output only. The fully resolved Git commit SHA of the code that was compiled. Not set for compilation results whose source is a workspace.",
            "readOnly": true,
            "type": "string"
          },
          "workspace": {
            "description": "Immutable. The name of the workspace to compile. Must be in the format `projects/*/locations/*/repositories/*/workspaces/*`.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CodeCompilationConfig": {
        "description": "Configures various aspects of Dataform code compilation.",
        "properties": {
          "assertionSchema": {
            "description": "Optional. The default schema (BigQuery dataset ID) for assertions.",
            "type": "string"
          },
          "databaseSuffix": {
            "description": "Optional. The suffix that should be appended to all database (Google Cloud project ID) names.",
            "type": "string"
          },
          "defaultDatabase": {
            "description": "Optional. The default database (Google Cloud project ID).",
            "type": "string"
          },
          "defaultLocation": {
            "description": "Optional. The default BigQuery location to use. Defaults to \"US\". See the BigQuery docs for a full list of locations: https://cloud.google.com/bigquery/docs/locations.",
            "type": "string"
          },
          "defaultSchema": {
            "description": "Optional. The default schema (BigQuery dataset ID).",
            "type": "string"
          },
          "schemaSuffix": {
            "description": "Optional. The suffix that should be appended to all schema (BigQuery dataset ID) names.",
            "type": "string"
          },
          "tablePrefix": {
            "description": "Optional. The prefix that should be prepended to all table names.",
            "type": "string"
          },
          "vars": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Optional. User-defined variables that are made available to project code during compilation.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "CompilationError": {
        "description": "An error encountered when attempting to compile a Dataform project.",
        "properties": {
          "actionTarget": {
            "$ref": "#/$defs/Target"
          },
          "message": {
            "description": "Output only. The error's top level message.",
            "readOnly": true,
            "type": "string"
          },
          "path": {
            "description": "Output only. The path of the file where this error occurred, if available, relative to the project root.",
            "readOnly": true,
            "type": "string"
          },
          "stack": {
            "description": "Output only. The error's full stack trace.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "Target": {
        "description": "Represents an action identifier. If the action writes output, the output will be written to the referenced database object.",
        "properties": {
          "database": {
            "description": "The action's database (Google Cloud project ID) .",
            "type": "string"
          },
          "name": {
            "description": "The action's name, within `database` and `schema`.",
            "type": "string"
          },
          "schema": {
            "description": "The action's schema (BigQuery dataset ID), within `database`.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://dataform.googleapis.com//v1beta1/{parent}/compilationResults{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Represents the result of compiling a Dataform project.",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**codeCompilationConfig**: Configures various aspects of Dataform code compilation.",
              {
                "$ul": [
                  "**assertionSchema**: Optional. The default schema (BigQuery dataset ID) for assertions.",
                  "**databaseSuffix**: Optional. The suffix that should be appended to all database (Google Cloud project ID) names.",
                  "**defaultDatabase**: Optional. The default database (Google Cloud project ID).",
                  "**defaultLocation**: Optional. The default BigQuery location to use. Defaults to \"US\". See the BigQuery docs for a full list of locations: https://cloud.google.com/bigquery/docs/locations.",
                  "**defaultSchema**: Optional. The default schema (BigQuery dataset ID).",
                  "**schemaSuffix**: Optional. The suffix that should be appended to all schema (BigQuery dataset ID) names.",
                  "**tablePrefix**: Optional. The prefix that should be prepended to all table names.",
                  "**vars**: Optional. User-defined variables that are made available to project code during compilation."
                ]
              }
            ],
            "**compilationErrors**: Output only. Errors encountered during project compilation.",
            "**dataformCoreVersion**: Output only. The version of `@dataform/core` that was used for compilation.",
            "**gitCommitish**: Immutable. Git commit/tag/branch name at which the repository should be compiled. Must exist in the remote repository. Examples: - a commit SHA: `12ade345` - a tag: `tag1` - a branch name: `branch1`",
            "**name**: Output only. The compilation result's name.",
            "**releaseConfig**: Immutable. The name of the release config to compile. Must be in the format `projects/*/locations/*/repositories/*/releaseConfigs/*`.",
            "**resolvedGitCommitSha**: Output only. The fully resolved Git commit SHA of the code that was compiled. Not set for compilation results whose source is a workspace.",
            "**workspace**: Immutable. The name of the workspace to compile. Must be in the format `projects/*/locations/*/repositories/*/workspaces/*`."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
