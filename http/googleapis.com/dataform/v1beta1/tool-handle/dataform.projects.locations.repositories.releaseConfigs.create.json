{
  "name": "dataform_projects_locations_repositories_releaseConfigs_create",
  "description": "Creates a new ReleaseConfig in a given Repository.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The repository in which to create the release config. Must be in the format `projects/*/locations/*/repositories/*`."
      },
      "releaseConfigId": {
        "type": "string",
        "description": "Required. The ID to use for the release config, which will become the final component of the release config's resource name."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/ReleaseConfig"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "ReleaseConfig": {
        "description": "Represents a Dataform release configuration.",
        "properties": {
          "codeCompilationConfig": {
            "$ref": "#/$defs/CodeCompilationConfig"
          },
          "cronSchedule": {
            "description": "Optional. Optional schedule (in cron format) for automatic creation of compilation results.",
            "type": "string"
          },
          "disabled": {
            "description": "Optional. Disables automatic creation of compilation results.",
            "type": "boolean"
          },
          "gitCommitish": {
            "description": "Required. Git commit/tag/branch name at which the repository should be compiled. Must exist in the remote repository. Examples: - a commit SHA: `12ade345` - a tag: `tag1` - a branch name: `branch1`",
            "type": "string"
          },
          "name": {
            "description": "Output only. The release config's name.",
            "readOnly": true,
            "type": "string"
          },
          "recentScheduledReleaseRecords": {
            "description": "Output only. Records of the 10 most recent scheduled release attempts, ordered in in descending order of `release_time`. Updated whenever automatic creation of a compilation result is triggered by cron_schedule.",
            "items": {
              "$ref": "#/$defs/ScheduledReleaseRecord"
            },
            "readOnly": true,
            "type": "array"
          },
          "releaseCompilationResult": {
            "description": "Optional. The name of the currently released compilation result for this release config. This value is updated when a compilation result is automatically created from this release config (using cron_schedule), or when this resource is updated by API call (perhaps to roll back to an earlier release). The compilation result must have been created using this release config. Must be in the format `projects/*/locations/*/repositories/*/compilationResults/*`.",
            "type": "string"
          },
          "timeZone": {
            "description": "Optional. Specifies the time zone to be used when interpreting cron_schedule. Must be a time zone name from the time zone database (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). If left unspecified, the default is UTC.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CodeCompilationConfig": {
        "description": "Configures various aspects of Dataform code compilation.",
        "properties": {
          "assertionSchema": {
            "description": "Optional. The default schema (BigQuery dataset ID) for assertions.",
            "type": "string"
          },
          "databaseSuffix": {
            "description": "Optional. The suffix that should be appended to all database (Google Cloud project ID) names.",
            "type": "string"
          },
          "defaultDatabase": {
            "description": "Optional. The default database (Google Cloud project ID).",
            "type": "string"
          },
          "defaultLocation": {
            "description": "Optional. The default BigQuery location to use. Defaults to \"US\". See the BigQuery docs for a full list of locations: https://cloud.google.com/bigquery/docs/locations.",
            "type": "string"
          },
          "defaultSchema": {
            "description": "Optional. The default schema (BigQuery dataset ID).",
            "type": "string"
          },
          "schemaSuffix": {
            "description": "Optional. The suffix that should be appended to all schema (BigQuery dataset ID) names.",
            "type": "string"
          },
          "tablePrefix": {
            "description": "Optional. The prefix that should be prepended to all table names.",
            "type": "string"
          },
          "vars": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Optional. User-defined variables that are made available to project code during compilation.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "ScheduledReleaseRecord": {
        "description": "A record of an attempt to create a compilation result for this release config.",
        "properties": {
          "compilationResult": {
            "description": "The name of the created compilation result, if one was successfully created. Must be in the format `projects/*/locations/*/repositories/*/compilationResults/*`.",
            "type": "string"
          },
          "errorStatus": {
            "$ref": "#/$defs/Status"
          },
          "releaseTime": {
            "description": "The timestamp of this release attempt.",
            "format": "google-datetime",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Status": {
        "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
        "properties": {
          "code": {
            "description": "The status code, which should be an enum value of google.rpc.Code.",
            "format": "int32",
            "type": "integer"
          },
          "details": {
            "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
            "items": {
              "additionalProperties": {
                "description": "Properties of the object. Contains field @type with type URL."
              },
              "type": "object"
            },
            "type": "array"
          },
          "message": {
            "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://dataform.googleapis.com//v1beta1/{parent}/releaseConfigs{?releaseConfigId,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Represents a Dataform release configuration.",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**codeCompilationConfig**: Configures various aspects of Dataform code compilation.",
              {
                "$ul": [
                  "**assertionSchema**: Optional. The default schema (BigQuery dataset ID) for assertions.",
                  "**databaseSuffix**: Optional. The suffix that should be appended to all database (Google Cloud project ID) names.",
                  "**defaultDatabase**: Optional. The default database (Google Cloud project ID).",
                  "**defaultLocation**: Optional. The default BigQuery location to use. Defaults to \"US\". See the BigQuery docs for a full list of locations: https://cloud.google.com/bigquery/docs/locations.",
                  "**defaultSchema**: Optional. The default schema (BigQuery dataset ID).",
                  "**schemaSuffix**: Optional. The suffix that should be appended to all schema (BigQuery dataset ID) names.",
                  "**tablePrefix**: Optional. The prefix that should be prepended to all table names.",
                  "**vars**: Optional. User-defined variables that are made available to project code during compilation."
                ]
              }
            ],
            "**cronSchedule**: Optional. Optional schedule (in cron format) for automatic creation of compilation results.",
            "**disabled**: Optional. Disables automatic creation of compilation results.",
            "**gitCommitish**: Required. Git commit/tag/branch name at which the repository should be compiled. Must exist in the remote repository. Examples: - a commit SHA: `12ade345` - a tag: `tag1` - a branch name: `branch1`",
            "**name**: Output only. The release config's name.",
            "**recentScheduledReleaseRecords**: Output only. Records of the 10 most recent scheduled release attempts, ordered in in descending order of `release_time`. Updated whenever automatic creation of a compilation result is triggered by cron_schedule.",
            "**releaseCompilationResult**: Optional. The name of the currently released compilation result for this release config. This value is updated when a compilation result is automatically created from this release config (using cron_schedule), or when this resource is updated by API call (perhaps to roll back to an earlier release). The compilation result must have been created using this release config. Must be in the format `projects/*/locations/*/repositories/*/compilationResults/*`.",
            "**timeZone**: Optional. Specifies the time zone to be used when interpreting cron_schedule. Must be a time zone name from the time zone database (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). If left unspecified, the default is UTC."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
