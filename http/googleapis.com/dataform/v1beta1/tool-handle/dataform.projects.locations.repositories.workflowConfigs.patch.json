{
  "name": "dataform_projects_locations_repositories_workflowConfigs_patch",
  "description": "Updates a single WorkflowConfig.",
  "parameters": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "Output only. The workflow config's name."
      },
      "updateMask": {
        "type": "string",
        "description": "Optional. Specifies the fields to be updated in the workflow config. If left unset, all fields will be updated."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/WorkflowConfig"
      }
    },
    "required": [
      "name"
    ],
    "$defs": {
      "WorkflowConfig": {
        "description": "Represents a Dataform workflow configuration.",
        "properties": {
          "cronSchedule": {
            "description": "Optional. Optional schedule (in cron format) for automatic execution of this workflow config.",
            "type": "string"
          },
          "invocationConfig": {
            "$ref": "#/$defs/InvocationConfig"
          },
          "name": {
            "description": "Output only. The workflow config's name.",
            "readOnly": true,
            "type": "string"
          },
          "recentScheduledExecutionRecords": {
            "description": "Output only. Records of the 10 most recent scheduled execution attempts, ordered in in descending order of `execution_time`. Updated whenever automatic creation of a workflow invocation is triggered by cron_schedule.",
            "items": {
              "$ref": "#/$defs/ScheduledExecutionRecord"
            },
            "readOnly": true,
            "type": "array"
          },
          "releaseConfig": {
            "description": "Required. The name of the release config whose release_compilation_result should be executed. Must be in the format `projects/*/locations/*/repositories/*/releaseConfigs/*`.",
            "type": "string"
          },
          "timeZone": {
            "description": "Optional. Specifies the time zone to be used when interpreting cron_schedule. Must be a time zone name from the time zone database (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). If left unspecified, the default is UTC.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "InvocationConfig": {
        "description": "Includes various configuration options for a workflow invocation. If both `included_targets` and `included_tags` are unset, all actions will be included.",
        "properties": {
          "fullyRefreshIncrementalTablesEnabled": {
            "description": "Optional. When set to true, any incremental tables will be fully refreshed.",
            "type": "boolean"
          },
          "includedTags": {
            "description": "Optional. The set of tags to include.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "includedTargets": {
            "description": "Optional. The set of action identifiers to include.",
            "items": {
              "$ref": "#/$defs/Target"
            },
            "type": "array"
          },
          "serviceAccount": {
            "description": "Optional. The service account to run workflow invocations under.",
            "type": "string"
          },
          "transitiveDependenciesIncluded": {
            "description": "Optional. When set to true, transitive dependencies of included actions will be executed.",
            "type": "boolean"
          },
          "transitiveDependentsIncluded": {
            "description": "Optional. When set to true, transitive dependents of included actions will be executed.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "Target": {
        "description": "Represents an action identifier. If the action writes output, the output will be written to the referenced database object.",
        "properties": {
          "database": {
            "description": "The action's database (Google Cloud project ID) .",
            "type": "string"
          },
          "name": {
            "description": "The action's name, within `database` and `schema`.",
            "type": "string"
          },
          "schema": {
            "description": "The action's schema (BigQuery dataset ID), within `database`.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ScheduledExecutionRecord": {
        "description": "A record of an attempt to create a workflow invocation for this workflow config.",
        "properties": {
          "errorStatus": {
            "$ref": "#/$defs/Status"
          },
          "executionTime": {
            "description": "The timestamp of this execution attempt.",
            "format": "google-datetime",
            "type": "string"
          },
          "workflowInvocation": {
            "description": "The name of the created workflow invocation, if one was successfully created. Must be in the format `projects/*/locations/*/repositories/*/workflowInvocations/*`.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Status": {
        "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
        "properties": {
          "code": {
            "description": "The status code, which should be an enum value of google.rpc.Code.",
            "format": "int32",
            "type": "integer"
          },
          "details": {
            "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
            "items": {
              "additionalProperties": {
                "description": "Properties of the object. Contains field @type with type URL."
              },
              "type": "object"
            },
            "type": "array"
          },
          "message": {
            "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PATCH",
    "url": {
      "$uri": "https://dataform.googleapis.com//v1beta1/{name}{?updateMask,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Represents a Dataform workflow configuration.",
        "**Key properties:**",
        {
          "$ul": [
            "**cronSchedule**: Optional. Optional schedule (in cron format) for automatic execution of this workflow config.",
            [
              "**invocationConfig**: Includes various configuration options for a workflow invocation. If both `included_targets` and `included_tags` are unset, all actions will be included.",
              {
                "$ul": [
                  "**fullyRefreshIncrementalTablesEnabled**: Optional. When set to true, any incremental tables will be fully refreshed.",
                  "**includedTags**: Optional. The set of tags to include.",
                  "**includedTargets**: Optional. The set of action identifiers to include.",
                  "**serviceAccount**: Optional. The service account to run workflow invocations under.",
                  "**transitiveDependenciesIncluded**: Optional. When set to true, transitive dependencies of included actions will be executed.",
                  "**transitiveDependentsIncluded**: Optional. When set to true, transitive dependents of included actions will be executed."
                ]
              }
            ],
            "**name**: Output only. The workflow config's name.",
            "**recentScheduledExecutionRecords**: Output only. Records of the 10 most recent scheduled execution attempts, ordered in in descending order of `execution_time`. Updated whenever automatic creation of a workflow invocation is triggered by cron_schedule.",
            "**releaseConfig**: Required. The name of the release config whose release_compilation_result should be executed. Must be in the format `projects/*/locations/*/repositories/*/releaseConfigs/*`.",
            "**timeZone**: Optional. Specifies the time zone to be used when interpreting cron_schedule. Must be a time zone name from the time zone database (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). If left unspecified, the default is UTC."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
