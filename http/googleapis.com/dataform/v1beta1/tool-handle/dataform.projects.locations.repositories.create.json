{
  "name": "dataform_projects_locations_repositories_create",
  "description": "Creates a new Repository in a given project and location.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The location in which to create the repository. Must be in the format `projects/*/locations/*`."
      },
      "repositoryId": {
        "type": "string",
        "description": "Required. The ID to use for the repository, which will become the final component of the repository's resource name."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/Repository"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "Repository": {
        "description": "Represents a Dataform Git repository.",
        "properties": {
          "createTime": {
            "description": "Output only. The timestamp of when the repository was created.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "Optional. The repository's user-friendly name.",
            "type": "string"
          },
          "gitRemoteSettings": {
            "$ref": "#/$defs/GitRemoteSettings"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Optional. Repository user labels.",
            "type": "object"
          },
          "name": {
            "description": "Output only. The repository's name.",
            "readOnly": true,
            "type": "string"
          },
          "npmrcEnvironmentVariablesSecretVersion": {
            "description": "Optional. The name of the Secret Manager secret version to be used to interpolate variables into the .npmrc file for package installation operations. Must be in the format `projects/*/secrets/*/versions/*`. The file itself must be in a JSON format.",
            "type": "string"
          },
          "serviceAccount": {
            "description": "Optional. The service account to run workflow invocations under.",
            "type": "string"
          },
          "setAuthenticatedUserAdmin": {
            "description": "Optional. Input only. If set to true, the authenticated user will be granted the roles/dataform.admin role on the created repository. To modify access to the created repository later apply setIamPolicy from https://cloud.google.com/dataform/reference/rest#rest-resource:-v1beta1.projects.locations.repositories",
            "type": "boolean"
          },
          "workspaceCompilationOverrides": {
            "$ref": "#/$defs/WorkspaceCompilationOverrides"
          }
        },
        "type": "object"
      },
      "GitRemoteSettings": {
        "description": "Controls Git remote configuration for a repository.",
        "properties": {
          "authenticationTokenSecretVersion": {
            "description": "Optional. The name of the Secret Manager secret version to use as an authentication token for Git operations. Must be in the format `projects/*/secrets/*/versions/*`.",
            "type": "string"
          },
          "defaultBranch": {
            "description": "Required. The Git remote's default branch name.",
            "type": "string"
          },
          "sshAuthenticationConfig": {
            "$ref": "#/$defs/SshAuthenticationConfig"
          },
          "tokenStatus": {
            "deprecated": true,
            "description": "Output only. Deprecated: The field does not contain any token status information. Instead use https://cloud.google.com/dataform/reference/rest/v1beta1/projects.locations.repositories/computeAccessTokenStatus",
            "enum": [
              "TOKEN_STATUS_UNSPECIFIED",
              "NOT_FOUND",
              "INVALID",
              "VALID"
            ],
            "readOnly": true,
            "type": "string"
          },
          "url": {
            "description": "Required. The Git remote's URL.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SshAuthenticationConfig": {
        "description": "Configures fields for performing SSH authentication.",
        "properties": {
          "hostPublicKey": {
            "description": "Required. Content of a public SSH key to verify an identity of a remote Git host.",
            "type": "string"
          },
          "userPrivateKeySecretVersion": {
            "description": "Required. The name of the Secret Manager secret version to use as a ssh private key for Git operations. Must be in the format `projects/*/secrets/*/versions/*`.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "WorkspaceCompilationOverrides": {
        "description": "Configures workspace compilation overrides for a repository. Primarily used by the UI (`console.cloud.google.com`). `schema_suffix` and `table_prefix` can have a special expression - `${workspaceName}`, which refers to the workspace name from which the compilation results will be created. API callers are expected to resolve the expression in these overrides and provide them explicitly in `code_compilation_config` (https://cloud.google.com/dataform/reference/rest/v1beta1/projects.locations.repositories.compilationResults#codecompilationconfig) when creating workspace-scoped compilation results.",
        "properties": {
          "defaultDatabase": {
            "description": "Optional. The default database (Google Cloud project ID).",
            "type": "string"
          },
          "schemaSuffix": {
            "description": "Optional. The suffix that should be appended to all schema (BigQuery dataset ID) names.",
            "type": "string"
          },
          "tablePrefix": {
            "description": "Optional. The prefix that should be prepended to all table names.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://dataform.googleapis.com//v1beta1/{parent}/repositories{?repositoryId,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Represents a Dataform Git repository.",
        "**Key properties:**",
        {
          "$ul": [
            "**createTime**: Output only. The timestamp of when the repository was created.",
            "**displayName**: Optional. The repository's user-friendly name.",
            [
              "**gitRemoteSettings**: Controls Git remote configuration for a repository.",
              {
                "$ul": [
                  "**authenticationTokenSecretVersion**: Optional. The name of the Secret Manager secret version to use as an authentication token for Git operations. Must be in the format `projects/*/secrets/*/versions/*`.",
                  "**defaultBranch**: Required. The Git remote's default branch name.",
                  [
                    "**sshAuthenticationConfig**: Configures fields for performing SSH authentication.",
                    {
                      "$ul": [
                        "**hostPublicKey**: Required. Content of a public SSH key to verify an identity of a remote Git host.",
                        "**userPrivateKeySecretVersion**: Required. The name of the Secret Manager secret version to use as a ssh private key for Git operations. Must be in the format `projects/*/secrets/*/versions/*`."
                      ]
                    }
                  ],
                  "**tokenStatus**: Output only. Deprecated: The field does not contain any token status information. Instead use https://cloud.google.com/dataform/reference/rest/v1beta1/projects.locations.repositories/computeAccessTokenStatus",
                  "**url**: Required. The Git remote's URL."
                ]
              }
            ],
            "**labels**: Optional. Repository user labels.",
            "**name**: Output only. The repository's name.",
            "**npmrcEnvironmentVariablesSecretVersion**: Optional. The name of the Secret Manager secret version to be used to interpolate variables into the .npmrc file for package installation operations. Must be in the format `projects/*/secrets/*/versions/*`. The file itself must be in a JSON format.",
            "**serviceAccount**: Optional. The service account to run workflow invocations under.",
            "**setAuthenticatedUserAdmin**: Optional. Input only. If set to true, the authenticated user will be granted the roles/dataform.admin role on the created repository. To modify access to the created repository later apply setIamPolicy from https://cloud.google.com/dataform/reference/rest#rest-resource:-v1beta1.projects.locations.repositories",
            [
              "**workspaceCompilationOverrides**: Configures workspace compilation overrides for a repository. Primarily used by the UI (`console.cloud.google.com`). `schema_suffix` and `table_prefix` can have a special expression - `${workspaceName}`, which refers to the workspace name from which the compilation results will be created. API callers are expected to resolve the expression in these overrides and provide them explicitly in `code_compilation_config` (https://cloud.google.com/dataform/reference/rest/v1beta1/projects.locations.repositories.compilationResults#codecompilationconfig) when creating workspace-scoped compilation results.",
              {
                "$ul": [
                  "**defaultDatabase**: Optional. The default database (Google Cloud project ID).",
                  "**schemaSuffix**: Optional. The suffix that should be appended to all schema (BigQuery dataset ID) names.",
                  "**tablePrefix**: Optional. The prefix that should be prepended to all table names."
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
