{
  "name": "mirror_subscriptions_update",
  "description": "Updates an existing subscription in place.",
  "parameters": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "The ID of the subscription."
      },
      "alt": {
        "default": "json",
        "enum": [
          "json"
        ],
        "type": "string",
        "description": "Data format for the response."
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "default": true,
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "An opaque string that represents a user for quota purposes. Must not exceed 40 characters."
      },
      "userIp": {
        "type": "string",
        "description": "Deprecated. Please use quotaUser instead."
      },
      "body": {
        "$ref": "#/$defs/Subscription"
      }
    },
    "required": [
      "id"
    ],
    "$defs": {
      "Subscription": {
        "description": "A subscription to events on a collection.",
        "properties": {
          "callbackUrl": {
            "description": "The URL where notifications should be delivered (must start with https://).",
            "type": "string"
          },
          "collection": {
            "description": "The collection to subscribe to. Allowed values are:  \n- timeline - Changes in the timeline including insertion, deletion, and updates. \n- locations - Location updates. \n- settings - Settings updates.",
            "type": "string"
          },
          "id": {
            "description": "The ID of the subscription.",
            "type": "string"
          },
          "kind": {
            "default": "mirror#subscription",
            "description": "The type of resource. This is always mirror#subscription.",
            "type": "string"
          },
          "notification": {
            "$ref": "#/$defs/Notification"
          },
          "operation": {
            "description": "A list of operations that should be subscribed to. An empty list indicates that all operations on the collection should be subscribed to. Allowed values are:  \n- UPDATE - The item has been updated. \n- INSERT - A new item has been inserted. \n- DELETE - The item has been deleted. \n- MENU_ACTION - A custom menu item has been triggered by the user.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "updated": {
            "description": "The time at which this subscription was last modified, formatted according to RFC 3339.",
            "format": "date-time",
            "type": "string"
          },
          "userToken": {
            "description": "An opaque token sent to the subscriber in notifications so that it can determine the ID of the user.",
            "type": "string"
          },
          "verifyToken": {
            "description": "A secret token sent to the subscriber in notifications so that it can verify that the notification was generated by Google.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Notification": {
        "description": "A notification delivered by the API.",
        "properties": {
          "collection": {
            "description": "The collection that generated the notification.",
            "type": "string"
          },
          "itemId": {
            "description": "The ID of the item that generated the notification.",
            "type": "string"
          },
          "operation": {
            "description": "The type of operation that generated the notification.",
            "type": "string"
          },
          "userActions": {
            "description": "A list of actions taken by the user that triggered the notification.",
            "items": {
              "$ref": "#/$defs/UserAction"
            },
            "type": "array"
          },
          "userToken": {
            "description": "The user token provided by the service when it subscribed for notifications.",
            "type": "string"
          },
          "verifyToken": {
            "description": "The secret verify token provided by the service when it subscribed for notifications.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UserAction": {
        "description": "Represents an action taken by the user that triggered a notification.",
        "properties": {
          "payload": {
            "description": "An optional payload for the action.\n\nFor actions of type CUSTOM, this is the ID of the custom menu item that was selected.",
            "type": "string"
          },
          "type": {
            "description": "The type of action. The value of this can be:  \n- SHARE - the user shared an item. \n- REPLY - the user replied to an item. \n- REPLY_ALL - the user replied to all recipients of an item. \n- CUSTOM - the user selected a custom menu item on the timeline item. \n- DELETE - the user deleted the item. \n- PIN - the user pinned the item. \n- UNPIN - the user unpinned the item. \n- LAUNCH - the user initiated a voice command.  In the future, additional types may be added. UserActions with unrecognized types should be ignored.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "https://www.googleapis.com/mirror/v1/subscriptions/{id}{?alt,fields,key,oauth_token,prettyPrint,quotaUser,userIp}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A subscription to events on a collection.",
        "**Key properties:**",
        {
          "$ul": [
            "**callbackUrl**: The URL where notifications should be delivered (must start with https://).",
            "**collection**: The collection to subscribe to. Allowed values are:  ",
            "**id**: The ID of the subscription.",
            "**kind**: The type of resource. This is always mirror#subscription. (default: mirror#subscription)",
            [
              "**notification**: A notification delivered by the API.",
              {
                "$ul": [
                  "**collection**: The collection that generated the notification.",
                  "**itemId**: The ID of the item that generated the notification.",
                  "**operation**: The type of operation that generated the notification.",
                  "**userActions**: A list of actions taken by the user that triggered the notification.",
                  "**userToken**: The user token provided by the service when it subscribed for notifications.",
                  "**verifyToken**: The secret verify token provided by the service when it subscribed for notifications."
                ]
              }
            ],
            "**operation**: A list of operations that should be subscribed to. An empty list indicates that all operations on the collection should be subscribed to. Allowed values are:  ",
            "**updated**: The time at which this subscription was last modified, formatted according to RFC 3339.",
            "**userToken**: An opaque token sent to the subscriber in notifications so that it can determine the ID of the user.",
            "**verifyToken**: A secret token sent to the subscriber in notifications so that it can verify that the notification was generated by Google."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
