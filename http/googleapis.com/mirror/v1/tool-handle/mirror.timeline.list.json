{
  "name": "mirror_timeline_list",
  "description": "Retrieves a list of timeline items for the authenticated user.",
  "parameters": {
    "type": "object",
    "properties": {
      "bundleId": {
        "type": "string",
        "description": "If provided, only items with the given bundleId will be returned."
      },
      "includeDeleted": {
        "type": "boolean",
        "description": "If true, tombstone records for deleted items will be returned."
      },
      "maxResults": {
        "type": "integer",
        "description": "The maximum number of items to include in the response, used for paging."
      },
      "orderBy": {
        "enum": [
          "displayTime",
          "writeTime"
        ],
        "type": "string",
        "description": "Controls the order in which timeline items are returned."
      },
      "pageToken": {
        "type": "string",
        "description": "Token for the page of results to return."
      },
      "pinnedOnly": {
        "type": "boolean",
        "description": "If true, only pinned items will be returned."
      },
      "sourceItemId": {
        "type": "string",
        "description": "If provided, only items with the given sourceItemId will be returned."
      },
      "alt": {
        "default": "json",
        "enum": [
          "json"
        ],
        "type": "string",
        "description": "Data format for the response."
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "default": true,
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "An opaque string that represents a user for quota purposes. Must not exceed 40 characters."
      },
      "userIp": {
        "type": "string",
        "description": "Deprecated. Please use quotaUser instead."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://www.googleapis.com/mirror/v1/timeline{?bundleId,includeDeleted,maxResults,orderBy,pageToken,pinnedOnly,sourceItemId,alt,fields,key,oauth_token,prettyPrint,quotaUser,userIp}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A list of timeline items. This is the response from the server to GET requests on the timeline collection.",
        "**Key properties:**",
        {
          "$ul": [
            "**items**: Items in the timeline.",
            "**kind**: The type of resource. This is always mirror#timeline. (default: mirror#timeline)",
            "**nextPageToken**: The next page token. Provide this as the pageToken parameter in the request to retrieve the next page of results."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
