{
  "name": "sql_instances_get",
  "description": "Retrieves a resource containing information about a Cloud SQL instance.",
  "parameters": {
    "type": "object",
    "properties": {
      "project": {
        "type": "string",
        "description": "Project ID of the project that contains the instance."
      },
      "instance": {
        "type": "string",
        "description": "Database instance ID. This does not include the project ID."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      }
    },
    "required": [
      "project",
      "instance"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://sqladmin.googleapis.com//sql/v1beta4/projects/{project}/instances/{instance}{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A Cloud SQL instance resource.",
        "**Key properties:**",
        {
          "$ul": [
            "**availableMaintenanceVersions**: Output only. List all maintenance versions applicable on the instance",
            "**backendType**: The backend type. `SECOND_GEN`: Cloud SQL database instance. `EXTERNAL`: A database server that is not managed by Google. This property is read-only; use the `tier` property in the `settings` object to determine the database type.",
            "**connectionName**: Connection name of the Cloud SQL instance used in connection strings.",
            "**createTime**: Output only. The time when the instance was created in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.",
            "**currentDiskSize**: The current disk usage of the instance in bytes. This property has been deprecated. Use the \"cloudsql.googleapis.com/database/disk/bytes_used\" metric in Cloud Monitoring API instead. Please see [this announcement](https://groups.google.com/d/msg/google-cloud-sql-announce/I_7-F9EBhT0/BtvFtdFeAgAJ) for details.",
            "**databaseInstalledVersion**: Output only. Stores the current database version running on the instance including minor version such as `MYSQL_8_0_18`.",
            "**databaseVersion**: The database engine type and version. The `databaseVersion` field cannot be changed after instance creation.",
            [
              "**diskEncryptionConfiguration**: Disk encryption configuration for an instance.",
              {
                "$ul": [
                  "**kind**: This is always `sql#diskEncryptionConfiguration`.",
                  "**kmsKeyName**: Resource name of KMS key for disk encryption"
                ]
              }
            ],
            [
              "**diskEncryptionStatus**: Disk encryption status for an instance.",
              {
                "$ul": [
                  "**kind**: This is always `sql#diskEncryptionStatus`.",
                  "**kmsKeyVersionName**: KMS key version used to encrypt the Cloud SQL instance resource"
                ]
              }
            ],
            "**dnsName**: Output only. The dns name of the instance.",
            "**etag**: This field is deprecated and will be removed from a future version of the API. Use the `settings.settingsVersion` field instead.",
            [
              "**failoverReplica**: The name and status of the failover replica.",
              {
                "$ul": [
                  "**available**: The availability status of the failover replica. A false status indicates that the failover replica is out of sync. The primary instance can only failover to the failover replica when the status is true.",
                  "**name**: The name of the failover replica. If specified at instance creation, a failover replica is created for the instance. The name doesn't include the project ID."
                ]
              }
            ],
            "**gceZone**: The Compute Engine zone that the instance is currently serving from. This value could be different from the zone that was specified when the instance was created if the instance has failed over to its secondary zone. WARNING: Changing this might restart the instance.",
            "**instanceType**: The instance type.",
            "**ipAddresses**: The assigned IP addresses for the instance.",
            "**ipv6Address**: The IPv6 address assigned to the instance. (Deprecated) This property was applicable only to First Generation instances.",
            "**kind**: This is always `sql#instance`.",
            "**maintenanceVersion**: The current software version on the instance.",
            "**masterInstanceName**: The name of the instance which will act as primary in the replication setup.",
            "**maxDiskSize**: The maximum disk size of the instance in bytes.",
            "**name**: Name of the Cloud SQL instance. This does not include the project ID.",
            [
              "**onPremisesConfiguration**: On-premises instance configuration.",
              {
                "$ul": [
                  "**caCertificate**: PEM representation of the trusted CA's x509 certificate.",
                  "**clientCertificate**: PEM representation of the replica's x509 certificate.",
                  "**clientKey**: PEM representation of the replica's private key. The corresponsing public key is encoded in the client's certificate.",
                  "**dumpFilePath**: The dump file to create the Cloud SQL replica.",
                  "**hostPort**: The host and port of the on-premises instance in host:port format",
                  "**kind**: This is always `sql#onPremisesConfiguration`.",
                  "**password**: The password for connecting to on-premises instance.",
                  [
                    "**sourceInstance**: Reference to another Cloud SQL instance.",
                    {
                      "$ul": [
                        "**name**: The name of the Cloud SQL instance being referenced. This does not include the project ID.",
                        "**project**: The project ID of the Cloud SQL instance being referenced. The default is the same project ID as the instance references it.",
                        "**region**: The region of the Cloud SQL instance being referenced."
                      ]
                    }
                  ],
                  "**username**: The username for connecting to on-premises instance."
                ]
              }
            ],
            [
              "**outOfDiskReport**: This message wraps up the information written by out-of-disk detection job.",
              {
                "$ul": [
                  "**sqlMinRecommendedIncreaseSizeGb**: The minimum recommended increase size in GigaBytes This field is consumed by the frontend * Writers: * the proactive database wellness job for OOD. * Readers:",
                  "**sqlOutOfDiskState**: This field represents the state generated by the proactive database wellness job for OutOfDisk issues. * Writers: * the proactive database wellness job for OOD. * Readers: * the proactive database wellness job"
                ]
              }
            ],
            "**primaryDnsName**: Output only. DEPRECATED: please use write_endpoint instead.",
            "**project**: The project ID of the project containing the Cloud SQL instance. The Google apps domain is prefixed if applicable.",
            "**pscServiceAttachmentLink**: Output only. The link to service attachment of PSC instance.",
            "**region**: The geographical region of the Cloud SQL instance. It can be one of the [regions](https://cloud.google.com/sql/docs/mysql/locations#location-r) where Cloud SQL operates: For example, `asia-east1`, `europe-west1`, and `us-central1`. The default value is `us-central1`.",
            [
              "**replicaConfiguration**: Read-replica configuration for connecting to the primary instance.",
              {
                "$ul": [
                  "**cascadableReplica**: Optional. Specifies if a SQL Server replica is a cascadable replica. A cascadable replica is a SQL Server cross region replica that supports replica(s) under it.",
                  "**failoverTarget**: Specifies if the replica is the failover target. If the field is set to `true` the replica will be designated as a failover replica. In case the primary instance fails, the replica instance will be promoted as the new primary instance. Only one replica can be specified as failover target, and the replica has to be in different zone with the primary instance.",
                  "**kind**: This is always `sql#replicaConfiguration`.",
                  [
                    "**mysqlReplicaConfiguration**: Read-replica configuration specific to MySQL databases.",
                    {
                      "$ul": [
                        "**caCertificate**: PEM representation of the trusted CA's x509 certificate.",
                        "**clientCertificate**: PEM representation of the replica's x509 certificate.",
                        "**clientKey**: PEM representation of the replica's private key. The corresponsing public key is encoded in the client's certificate.",
                        "**connectRetryInterval**: Seconds to wait between connect retries. MySQL's default is 60 seconds.",
                        "**dumpFilePath**: Path to a SQL dump file in Google Cloud Storage from which the replica instance is to be created. The URI is in the form gs://bucketName/fileName. Compressed gzip files (.gz) are also supported. Dumps have the binlog co-ordinates from which replication begins. This can be accomplished by setting --master-data to 1 when using mysqldump.",
                        "**kind**: This is always `sql#mysqlReplicaConfiguration`.",
                        "**masterHeartbeatPeriod**: Interval in milliseconds between replication heartbeats.",
                        "**password**: The password for the replication connection.",
                        "**sslCipher**: A list of permissible ciphers to use for SSL encryption.",
                        "**username**: The username for the replication connection.",
                        "**verifyServerCertificate**: Whether or not to check the primary instance's Common Name value in the certificate that it sends during the SSL handshake."
                      ]
                    }
                  ]
                ]
              }
            ],
            "**replicaNames**: The replicas of the instance.",
            "**rootPassword**: Initial root password. Use only on creation. You must set root passwords before you can connect to PostgreSQL instances.",
            "**satisfiesPzs**: The status indicating if instance satisfiesPzs. Reserved for future use.",
            [
              "**scheduledMaintenance**: Any scheduled maintenance for this instance.",
              {
                "$ul": [
                  "**canDefer**",
                  "**canReschedule**: If the scheduled maintenance can be rescheduled.",
                  "**scheduleDeadlineTime**: Maintenance cannot be rescheduled to start beyond this deadline.",
                  "**startTime**: The start time of any upcoming scheduled maintenance for this instance."
                ]
              }
            ],
            "**secondaryGceZone**: The Compute Engine zone that the failover instance is currently serving from for a regional instance. This value could be different from the zone that was specified when the instance was created if the instance has failed over to its secondary/failover zone.",
            "**selfLink**: The URI of this resource.",
            [
              "**serverCaCert**: SslCerts Resource",
              {
                "$ul": [
                  "**cert**: PEM representation.",
                  "**certSerialNumber**: Serial number, as extracted from the certificate.",
                  "**commonName**: User supplied name. Constrained to [a-zA-Z.-_ ]+.",
                  "**createTime**: The time when the certificate was created in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.",
                  "**expirationTime**: The time when the certificate expires in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.",
                  "**instance**: Name of the database instance.",
                  "**kind**: This is always `sql#sslCert`.",
                  "**selfLink**: The URI of this resource.",
                  "**sha1Fingerprint**: Sha1 Fingerprint."
                ]
              }
            ],
            "**serviceAccountEmailAddress**: The service account email address assigned to the instance. \\This property is read-only.",
            [
              "**settings**: Database instance settings.",
              {
                "$ul": [
                  "**activationPolicy**: The activation policy specifies when the instance is activated; it is applicable only when the instance state is RUNNABLE. Valid values: * `ALWAYS`: The instance is on, and remains so even in the absence of connection requests. * `NEVER`: The instance is off; it is not activated, even if a connection request arrives.",
                  [
                    "**activeDirectoryConfig**: Active Directory configuration, relevant only for Cloud SQL for SQL Server.",
                    {
                      "$ul": [
                        "**domain**: The name of the domain (e.g., mydomain.com).",
                        "**kind**: This is always sql#activeDirectoryConfig."
                      ]
                    }
                  ],
                  [
                    "**advancedMachineFeatures**: Specifies options for controlling advanced machine features.",
                    {
                      "$ul": [
                        "**threadsPerCore**: The number of threads per physical core."
                      ]
                    }
                  ],
                  "**authorizedGaeApplications**: The App Engine app IDs that can access this instance. (Deprecated) Applied to First Generation instances only.",
                  "**availabilityType**: Availability type. Potential values: * `ZONAL`: The instance serves data from only one zone. Outages in that zone affect data accessibility. * `REGIONAL`: The instance can serve data from more than one zone in a region (it is highly available)./ For more information, see [Overview of the High Availability Configuration](https://cloud.google.com/sql/docs/mysql/high-availability).",
                  [
                    "**backupConfiguration**: Database instance backup configuration.",
                    {
                      "$ul": [
                        [
                          "**backupRetentionSettings**: We currently only support backup retention by specifying the number of backups we will retain.",
                          {
                            "$ul": [
                              "**retainedBackups**: Depending on the value of retention_unit, this is used to determine if a backup needs to be deleted. If retention_unit is 'COUNT', we will retain this many backups.",
                              "**retentionUnit**: The unit that 'retained_backups' represents."
                            ]
                          }
                        ],
                        "**binaryLogEnabled**: (MySQL only) Whether binary log is enabled. If backup configuration is disabled, binarylog must be disabled as well.",
                        "**enabled**: Whether this configuration is enabled.",
                        "**kind**: This is always `sql#backupConfiguration`.",
                        "**location**: Location of the backup",
                        "**pointInTimeRecoveryEnabled**: Whether point in time recovery is enabled.",
                        "**replicationLogArchivingEnabled**: Reserved for future use.",
                        "**startTime**: Start time for the daily backup configuration in UTC timezone in the 24 hour format - `HH:MM`.",
                        "**transactionLogRetentionDays**: The number of days of transaction logs we retain for point in time restore, from 1-7."
                      ]
                    }
                  ],
                  "**collation**: The name of server Instance collation.",
                  "**connectorEnforcement**: Specifies if connections must use Cloud SQL connectors. Option values include the following: `NOT_REQUIRED` (Cloud SQL instances can be connected without Cloud SQL Connectors) and `REQUIRED` (Only allow connections that use Cloud SQL Connectors) Note that using REQUIRED disables all existing authorized networks. If this field is not specified when creating a new instance, NOT_REQUIRED is used. If this field is not specified when patching or updating an existing instance, it is left unchanged in the instance.",
                  "**crashSafeReplicationEnabled**: Configuration specific to read replica instances. Indicates whether database flags for crash-safe replication are enabled. This property was only applicable to First Generation instances.",
                  [
                    "**dataCacheConfig**: Data cache configurations.",
                    {
                      "$ul": [
                        "**dataCacheEnabled**: Whether data cache is enabled for the instance."
                      ]
                    }
                  ],
                  "**dataDiskSizeGb**: The size of data disk, in GB. The data disk size minimum is 10GB.",
                  "**dataDiskType**: The type of data disk: `PD_SSD` (default) or `PD_HDD`. Not used for First Generation instances.",
                  "**databaseFlags**: The database flags passed to the instance at startup.",
                  "**databaseReplicationEnabled**: Configuration specific to read replica instances. Indicates whether replication is enabled or not. WARNING: Changing this restarts the instance.",
                  "**deletionProtectionEnabled**: Configuration to protect against accidental instance deletion.",
                  "**denyMaintenancePeriods**: Deny maintenance periods",
                  "**edition**: Optional. The edition of the instance.",
                  [
                    "**insightsConfig**: Insights configuration. This specifies when Cloud SQL Insights feature is enabled and optional configuration.",
                    {
                      "$ul": [
                        "**queryInsightsEnabled**: Whether Query Insights feature is enabled.",
                        "**queryPlansPerMinute**: Number of query execution plans captured by Insights per minute for all queries combined. Default is 5.",
                        "**queryStringLength**: Maximum query length stored in bytes. Default value: 1024 bytes. Range: 256-4500 bytes. Query length more than this field value will be truncated to this value. When unset, query length will be the default value. Changing query length will restart the database.",
                        "**recordApplicationTags**: Whether Query Insights will record application tags from query when enabled.",
                        "**recordClientAddress**: Whether Query Insights will record client address when enabled."
                      ]
                    }
                  ],
                  [
                    "**ipConfiguration**: IP Management configuration.",
                    {
                      "$ul": [
                        "**allocatedIpRange**: The name of the allocated ip range for the private ip Cloud SQL instance. For example: \"google-managed-services-default\". If set, the instance ip will be created in the allocated range. The range name must comply with [RFC 1035](https://tools.ietf.org/html/rfc1035). Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?.`",
                        "**authorizedNetworks**: The list of external networks that are allowed to connect to the instance using the IP. In 'CIDR' notation, also known as 'slash' notation (for example: `157.197.200.0/24`).",
                        "**enablePrivatePathForGoogleCloudServices**: Controls connectivity to private IP instances from Google services, such as BigQuery.",
                        "**ipv4Enabled**: Whether the instance is assigned a public IP address or not.",
                        "**privateNetwork**: The resource link for the VPC network from which the Cloud SQL instance is accessible for private IP. For example, `/projects/myProject/global/networks/default`. This setting can be updated, but it cannot be removed after it is set.",
                        [
                          "**pscConfig**: PSC settings for a Cloud SQL instance.",
                          {
                            "$ul": [
                              "**allowedConsumerProjects**: Optional. The list of consumer projects that are allow-listed for PSC connections to this instance. This instance can be connected to with PSC from any network in these projects. Each consumer project in this list may be represented by a project number (numeric) or by a project id (alphanumeric).",
                              "**pscEnabled**: Whether PSC connectivity is enabled for this instance."
                            ]
                          }
                        ],
                        "**requireSsl**: Use `ssl_mode` instead for MySQL and PostgreSQL. SQL Server uses this flag. Whether SSL/TLS connections over IP are enforced. If set to false, then allow both non-SSL/non-TLS and SSL/TLS connections. For SSL/TLS connections, the client certificate won't be verified. If set to true, then only allow connections encrypted with SSL/TLS and with valid client certificates. If you want to enforce SSL/TLS without enforcing the requirement for valid client certificates, then use the `ssl_mode` flag instead of the legacy `require_ssl` flag.",
                        "**sslMode**: Specify how SSL/TLS is enforced in database connections. MySQL and PostgreSQL use the `ssl_mode` flag. If you must use the `require_ssl` flag for backward compatibility, then only the following value pairs are valid: * `ssl_mode=ALLOW_UNENCRYPTED_AND_ENCRYPTED` and `require_ssl=false` * `ssl_mode=ENCRYPTED_ONLY` and `require_ssl=false` * `ssl_mode=TRUSTED_CLIENT_CERTIFICATE_REQUIRED` and `require_ssl=true` The value of `ssl_mode` gets priority over the value of `require_ssl`. For example, for the pair `ssl_mode=ENCRYPTED_ONLY` and `require_ssl=false`, the `ssl_mode=ENCRYPTED_ONLY` means only accept SSL connections, while the `require_ssl=false` means accept both non-SSL and SSL connections. MySQL and PostgreSQL databases respect `ssl_mode` in this case and accept only SSL connections. SQL Server uses the `require_ssl` flag. You can set the value for this flag to `true` or `false`."
                      ]
                    }
                  ],
                  "**kind**: This is always `sql#settings`.",
                  [
                    "**locationPreference**: Preferred location. This specifies where a Cloud SQL instance is located. Note that if the preferred location is not available, the instance will be located as close as possible within the region. Only one location may be specified.",
                    {
                      "$ul": [
                        "**followGaeApplication**: The App Engine application to follow, it must be in the same region as the Cloud SQL instance. WARNING: Changing this might restart the instance.",
                        "**kind**: This is always `sql#locationPreference`.",
                        "**secondaryZone**: The preferred Compute Engine zone for the secondary/failover (for example: us-central1-a, us-central1-b, etc.). To disable this field, set it to 'no_secondary_zone'.",
                        "**zone**: The preferred Compute Engine zone (for example: us-central1-a, us-central1-b, etc.). WARNING: Changing this might restart the instance."
                      ]
                    }
                  ],
                  [
                    "**maintenanceWindow**: Maintenance window. This specifies when a Cloud SQL instance is restarted for system maintenance purposes.",
                    {
                      "$ul": [
                        "**day**: day of week (1-7), starting on Monday.",
                        "**hour**: hour of day - 0 to 23.",
                        "**kind**: This is always `sql#maintenanceWindow`.",
                        "**updateTrack**: Maintenance timing setting: `canary` (Earlier) or `stable` (Later). [Learn more](https://cloud.google.com/sql/docs/mysql/instance-settings#maintenance-timing-2ndgen)."
                      ]
                    }
                  ],
                  [
                    "**passwordValidationPolicy**: Database instance local user password validation policy",
                    {
                      "$ul": [
                        "**complexity**: The complexity of the password.",
                        "**disallowCompromisedCredentials**: This field is deprecated and will be removed in a future version of the API.",
                        "**disallowUsernameSubstring**: Disallow username as a part of the password.",
                        "**enablePasswordPolicy**: Whether the password policy is enabled or not.",
                        "**minLength**: Minimum number of characters allowed.",
                        "**passwordChangeInterval**: Minimum interval after which the password can be changed. This flag is only supported for PostgreSQL.",
                        "**reuseInterval**: Number of previous passwords that cannot be reused."
                      ]
                    }
                  ],
                  "**pricingPlan**: The pricing plan for this instance. This can be either `PER_USE` or `PACKAGE`. Only `PER_USE` is supported for Second Generation instances.",
                  "**replicationType**: The type of replication this instance uses. This can be either `ASYNCHRONOUS` or `SYNCHRONOUS`. (Deprecated) This property was only applicable to First Generation instances.",
                  "**settingsVersion**: The version of instance settings. This is a required field for update method to make sure concurrent updates are handled properly. During update, use the most recent settingsVersion value for this instance and do not try to update this value.",
                  [
                    "**sqlServerAuditConfig**: SQL Server specific audit configuration.",
                    {
                      "$ul": [
                        "**bucket**: The name of the destination bucket (e.g., gs://mybucket).",
                        "**kind**: This is always sql#sqlServerAuditConfig",
                        "**retentionInterval**: How long to keep generated audit files.",
                        "**uploadInterval**: How often to upload generated audit files."
                      ]
                    }
                  ],
                  "**storageAutoResize**: Configuration to increase storage size automatically. The default value is true.",
                  "**storageAutoResizeLimit**: The maximum size to which storage capacity can be automatically increased. The default value is 0, which specifies that there is no limit.",
                  "**tier**: The tier (or machine type) for this instance, for example `db-custom-1-3840`. WARNING: Changing this restarts the instance.",
                  "**timeZone**: Server timezone, relevant only for Cloud SQL for SQL Server.",
                  "**userLabels**: User-provided labels, represented as a dictionary where each label is a single key value pair."
                ]
              }
            ],
            "**sqlNetworkArchitecture**: The SQL network architecture for the instance.",
            "**state**: The current serving state of the Cloud SQL instance.",
            "**suspensionReason**: If the instance state is SUSPENDED, the reason for the suspension.",
            "**writeEndpoint**: Output only. The dns name of the primary instance in a replication group."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
