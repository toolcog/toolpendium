{
  "name": "script_processes_listScriptProcesses",
  "description": "List information about a script's executed processes, such as process type and current status.",
  "parameters": {
    "type": "object",
    "properties": {
      "pageSize": {
        "type": "integer",
        "description": "The maximum number of returned processes per page of results. Defaults to 50."
      },
      "pageToken": {
        "type": "string",
        "description": "The token for continuing a previous list request on the next page. This should be set to the value of `nextPageToken` from a previous response."
      },
      "scriptId": {
        "type": "string",
        "description": "The script ID of the project whose processes are listed."
      },
      "scriptProcessFilter.deploymentId": {
        "type": "string",
        "description": "Optional field used to limit returned processes to those originating from projects with a specific deployment ID."
      },
      "scriptProcessFilter.endTime": {
        "type": "string",
        "description": "Optional field used to limit returned processes to those that completed on or before the given timestamp."
      },
      "scriptProcessFilter.functionName": {
        "type": "string",
        "description": "Optional field used to limit returned processes to those originating from a script function with the given function name."
      },
      "scriptProcessFilter.startTime": {
        "type": "string",
        "description": "Optional field used to limit returned processes to those that were started on or after the given timestamp."
      },
      "scriptProcessFilter.statuses": {
        "items": {
          "enum": [
            "PROCESS_STATUS_UNSPECIFIED",
            "RUNNING",
            "PAUSED",
            "COMPLETED",
            "CANCELED",
            "FAILED",
            "TIMED_OUT",
            "UNKNOWN",
            "DELAYED",
            "EXECUTION_DISABLED"
          ],
          "type": "string"
        },
        "type": "array",
        "description": "Optional field used to limit returned processes to those having one of the specified process statuses."
      },
      "scriptProcessFilter.types": {
        "items": {
          "enum": [
            "PROCESS_TYPE_UNSPECIFIED",
            "ADD_ON",
            "EXECUTION_API",
            "TIME_DRIVEN",
            "TRIGGER",
            "WEBAPP",
            "EDITOR",
            "SIMPLE_TRIGGER",
            "MENU",
            "BATCH_TASK"
          ],
          "type": "string"
        },
        "type": "array",
        "description": "Optional field used to limit returned processes to those having one of the specified process types."
      },
      "scriptProcessFilter.userAccessLevels": {
        "items": {
          "enum": [
            "USER_ACCESS_LEVEL_UNSPECIFIED",
            "NONE",
            "READ",
            "WRITE",
            "OWNER"
          ],
          "type": "string"
        },
        "type": "array",
        "description": "Optional field used to limit returned processes to those having one of the specified user access levels."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://script.googleapis.com//v1/processes:listScriptProcesses{?pageSize,pageToken,scriptId,scriptProcessFilter.deploymentId,scriptProcessFilter.endTime,scriptProcessFilter.functionName,scriptProcessFilter.startTime,scriptProcessFilter.statuses,scriptProcessFilter.types,scriptProcessFilter.userAccessLevels,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Response with the list of Process resources.",
        "**Key properties:**",
        {
          "$ul": [
            "**nextPageToken**: Token for the next page of results. If empty, there are no more pages remaining.",
            "**processes**: List of processes matching request parameters."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
