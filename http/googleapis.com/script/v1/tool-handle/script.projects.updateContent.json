{
  "name": "script_projects_updateContent",
  "description": "Updates the content of the specified script project. This content is stored as the HEAD version, and is used when the script is executed as a trigger, in the script editor, in add-on preview mode, or as a web app or Apps Script API in development mode. This clears all the existing files in the project.",
  "parameters": {
    "type": "object",
    "properties": {
      "scriptId": {
        "type": "string",
        "description": "The script project's Drive ID."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/Content"
      }
    },
    "required": [
      "scriptId"
    ],
    "$defs": {
      "Content": {
        "description": "The Content resource.",
        "properties": {
          "files": {
            "description": "The list of script project files. One of the files is a script manifest; it must be named \"appsscript\", must have type of JSON, and include the manifest configurations for the project.",
            "items": {
              "$ref": "#/$defs/File"
            },
            "type": "array"
          },
          "scriptId": {
            "description": "The script project's Drive ID.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "File": {
        "description": "An individual file within a script project. A file is a third-party source code created by one or more developers. It can be a server-side JS code, HTML, or a configuration file. Each script project can contain multiple files.",
        "properties": {
          "createTime": {
            "description": "Creation date timestamp. This read-only field is only visible to users who have WRITER permission for the script project.",
            "format": "google-datetime",
            "type": "string"
          },
          "functionSet": {
            "$ref": "#/$defs/GoogleAppsScriptTypeFunctionSet"
          },
          "lastModifyUser": {
            "$ref": "#/$defs/GoogleAppsScriptTypeUser"
          },
          "name": {
            "description": "The name of the file. The file extension is not part of the file name, which can be identified from the type field.",
            "type": "string"
          },
          "source": {
            "description": "The file content.",
            "type": "string"
          },
          "type": {
            "description": "The type of the file.",
            "enum": [
              "ENUM_TYPE_UNSPECIFIED",
              "SERVER_JS",
              "HTML",
              "JSON"
            ],
            "type": "string"
          },
          "updateTime": {
            "description": "Last modified date timestamp. This read-only field is only visible to users who have WRITER permission for the script project.",
            "format": "google-datetime",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleAppsScriptTypeFunctionSet": {
        "description": "A set of functions. No duplicates are permitted.",
        "properties": {
          "values": {
            "description": "A list of functions composing the set.",
            "items": {
              "$ref": "#/$defs/GoogleAppsScriptTypeFunction"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleAppsScriptTypeFunction": {
        "description": "Represents a function in a script project.",
        "properties": {
          "name": {
            "description": "The function name in the script project.",
            "type": "string"
          },
          "parameters": {
            "description": "The ordered list of parameter names of the function in the script project.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleAppsScriptTypeUser": {
        "description": "A simple user profile resource.",
        "properties": {
          "domain": {
            "description": "The user's domain.",
            "type": "string"
          },
          "email": {
            "description": "The user's identifying email address.",
            "type": "string"
          },
          "name": {
            "description": "The user's display name.",
            "type": "string"
          },
          "photoUrl": {
            "description": "The user's photo.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "https://script.googleapis.com//v1/projects/{scriptId}/content{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The Content resource.",
        "**Key properties:**",
        {
          "$ul": [
            "**files**: The list of script project files. One of the files is a script manifest; it must be named \"appsscript\", must have type of JSON, and include the manifest configurations for the project.",
            "**scriptId**: The script project's Drive ID."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
