{
  "name": "healthcare_projects_locations_datasets_annotationStores_annotations_create",
  "description": "Creates a new Annotation record. It is valid to create Annotation objects for the same source more than once since a unique ID is assigned to each record by this service.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The name of the Annotation store this annotation belongs to. For example, `projects/my-project/locations/us-central1/datasets/mydataset/annotationStores/myannotationstore`."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/Annotation"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "Annotation": {
        "description": "An annotation record.",
        "properties": {
          "annotationSource": {
            "$ref": "#/$defs/AnnotationSource"
          },
          "customData": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional information for this annotation record, such as annotator and verifier information or study campaign.",
            "type": "object"
          },
          "imageAnnotation": {
            "$ref": "#/$defs/ImageAnnotation"
          },
          "name": {
            "description": "Identifier. Resource name of the Annotation, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/annotationStores/{annotation_store_id}/annotations/{annotation_id}`.",
            "type": "string"
          },
          "resourceAnnotation": {
            "$ref": "#/$defs/ResourceAnnotation"
          },
          "textAnnotation": {
            "$ref": "#/$defs/SensitiveTextAnnotation"
          }
        },
        "type": "object"
      },
      "AnnotationSource": {
        "description": "AnnotationSource holds the source information of the annotation.",
        "properties": {
          "cloudHealthcareSource": {
            "$ref": "#/$defs/CloudHealthcareSource"
          }
        },
        "type": "object"
      },
      "CloudHealthcareSource": {
        "description": "Cloud Healthcare API resource.",
        "properties": {
          "name": {
            "description": "Full path of a Cloud Healthcare API resource.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ImageAnnotation": {
        "description": "Image annotation.",
        "properties": {
          "boundingPolys": {
            "description": "The list of polygons outlining the sensitive regions in the image.",
            "items": {
              "$ref": "#/$defs/BoundingPoly"
            },
            "type": "array"
          },
          "frameIndex": {
            "description": "0-based index of the image frame. For example, an image frame in a DICOM instance.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "BoundingPoly": {
        "description": "A bounding polygon for the detected image annotation.",
        "properties": {
          "label": {
            "description": "A description of this polygon.",
            "type": "string"
          },
          "vertices": {
            "description": "List of the vertices of this polygon.",
            "items": {
              "$ref": "#/$defs/Vertex"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Vertex": {
        "description": "A 2D coordinate in an image. The origin is the top-left.",
        "properties": {
          "x": {
            "description": "X coordinate.",
            "format": "float",
            "type": "number"
          },
          "y": {
            "description": "Y coordinate.",
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "ResourceAnnotation": {
        "description": "Resource level annotation.",
        "properties": {
          "label": {
            "description": "A description of the annotation record.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SensitiveTextAnnotation": {
        "description": "A TextAnnotation specifies a text range that includes sensitive information.",
        "properties": {
          "details": {
            "additionalProperties": {
              "$ref": "#/$defs/Detail"
            },
            "description": "Maps from a resource slice. For example, FHIR resource field path to a set of sensitive text findings. For example, Appointment.Narrative text1 --> {findings_1, findings_2, findings_3}",
            "type": "object"
          }
        },
        "type": "object"
      },
      "Detail": {
        "description": "Contains multiple sensitive information findings for each resource slice.",
        "properties": {
          "findings": {
            "items": {
              "$ref": "#/$defs/Finding"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Finding": {
        "properties": {
          "end": {
            "description": "Zero-based ending index of the found text, exclusively.",
            "format": "int64",
            "type": "string"
          },
          "infoType": {
            "description": "The type of information stored in this text range. For example, HumanName, BirthDate, or Address.",
            "type": "string"
          },
          "quote": {
            "description": "The snippet of the sensitive text. This field is only populated during deidentification if `store_quote` is set to true in DeidentifyConfig.",
            "type": "string"
          },
          "start": {
            "description": "Zero-based starting index of the found text, inclusively.",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://healthcare.googleapis.com//v1beta1/{parent}/annotations{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "An annotation record.",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**annotationSource**: AnnotationSource holds the source information of the annotation.",
              {
                "$ul": [
                  [
                    "**cloudHealthcareSource**: Cloud Healthcare API resource.",
                    {
                      "$ul": [
                        "**name**: Full path of a Cloud Healthcare API resource."
                      ]
                    }
                  ]
                ]
              }
            ],
            "**customData**: Additional information for this annotation record, such as annotator and verifier information or study campaign.",
            [
              "**imageAnnotation**: Image annotation.",
              {
                "$ul": [
                  "**boundingPolys**: The list of polygons outlining the sensitive regions in the image.",
                  "**frameIndex**: 0-based index of the image frame. For example, an image frame in a DICOM instance."
                ]
              }
            ],
            "**name**: Identifier. Resource name of the Annotation, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/annotationStores/{annotation_store_id}/annotations/{annotation_id}`.",
            [
              "**resourceAnnotation**: Resource level annotation.",
              {
                "$ul": [
                  "**label**: A description of the annotation record."
                ]
              }
            ],
            [
              "**textAnnotation**: A TextAnnotation specifies a text range that includes sensitive information.",
              {
                "$ul": [
                  "**details**: Maps from a resource slice. For example, FHIR resource field path to a set of sensitive text findings. For example, Appointment.Narrative text1 --> {findings_1, findings_2, findings_3}"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
