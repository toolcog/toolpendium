{
  "name": "healthcare_projects_locations_datasets_consentStores_attributeDefinitions_create",
  "description": "Creates a new Attribute definition in the parent consent store.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The name of the consent store that this Attribute definition belongs to."
      },
      "attributeDefinitionId": {
        "type": "string",
        "description": "Required. The ID of the Attribute definition to create. The string must match the following regex: `_a-zA-Z{0,255}` and must not be a reserved keyword within the Common Expression Language as listed on https://github.com/google/cel-spec/blob/master/doc/langdef.md."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/AttributeDefinition"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "AttributeDefinition": {
        "description": "A client-defined consent attribute.",
        "properties": {
          "allowedValues": {
            "description": "Required. Possible values for the attribute. The number of allowed values must not exceed 500. An empty list is invalid. The list can only be expanded after creation.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "category": {
            "description": "Required. The category of the attribute. The value of this field cannot be changed after creation.",
            "enum": [
              "CATEGORY_UNSPECIFIED",
              "RESOURCE",
              "REQUEST"
            ],
            "type": "string"
          },
          "consentDefaultValues": {
            "description": "Optional. Default values of the attribute in Consents. If no default values are specified, it defaults to an empty value.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "dataMappingDefaultValue": {
            "description": "Optional. Default value of the attribute in User data mappings. If no default value is specified, it defaults to an empty value. This field is only applicable to attributes of the category `RESOURCE`.",
            "type": "string"
          },
          "description": {
            "description": "Optional. A description of the attribute.",
            "type": "string"
          },
          "name": {
            "description": "Identifier. Resource name of the Attribute definition, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/attributeDefinitions/{attribute_definition_id}`. Cannot be changed after creation.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://healthcare.googleapis.com//v1beta1/{parent}/attributeDefinitions{?attributeDefinitionId,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A client-defined consent attribute.",
        "**Key properties:**",
        {
          "$ul": [
            "**allowedValues**: Required. Possible values for the attribute. The number of allowed values must not exceed 500. An empty list is invalid. The list can only be expanded after creation.",
            "**category**: Required. The category of the attribute. The value of this field cannot be changed after creation.",
            "**consentDefaultValues**: Optional. Default values of the attribute in Consents. If no default values are specified, it defaults to an empty value.",
            "**dataMappingDefaultValue**: Optional. Default value of the attribute in User data mappings. If no default value is specified, it defaults to an empty value. This field is only applicable to attributes of the category `RESOURCE`.",
            "**description**: Optional. A description of the attribute.",
            "**name**: Identifier. Resource name of the Attribute definition, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/attributeDefinitions/{attribute_definition_id}`. Cannot be changed after creation."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
