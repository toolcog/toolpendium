{
  "name": "healthcare_projects_locations_datasets_hl7V2Stores_messages_patch",
  "description": "Update the message. The contents of the message in Message.data and data extracted from the contents such as Message.create_time cannot be altered. Only the Message.labels field is allowed to be updated. The labels in the request are merged with the existing set of labels. Existing labels with the same keys are updated.",
  "parameters": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "Output only. Resource name of the Message, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/hl7V2Stores/{hl7_v2_store_id}/messages/{message_id}`. Assigned by the server."
      },
      "updateMask": {
        "type": "string",
        "description": "Required. The update mask applies to the resource. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask"
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/Message"
      }
    },
    "required": [
      "name"
    ],
    "$defs": {
      "Message": {
        "description": "A complete HL7v2 message. See [Introduction to HL7 Standards] (https://www.hl7.org/implement/standards/index.cfm?ref=common) for details on the standard.",
        "properties": {
          "createTime": {
            "description": "Output only. The datetime when the message was created. Set by the server.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "data": {
            "description": "Required. Raw message bytes.",
            "format": "byte",
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "User-supplied key-value pairs used to organize HL7v2 stores. Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: \\p{Ll}\\p{Lo}{0,62} Label values are optional, must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: [\\p{Ll}\\p{Lo}\\p{N}_-]{0,63} No more than 64 labels can be associated with a given store.",
            "type": "object"
          },
          "messageType": {
            "description": "The message type for this message. MSH-9.1.",
            "type": "string"
          },
          "name": {
            "description": "Output only. Resource name of the Message, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/hl7V2Stores/{hl7_v2_store_id}/messages/{message_id}`. Assigned by the server.",
            "readOnly": true,
            "type": "string"
          },
          "parsedData": {
            "$ref": "#/$defs/ParsedData"
          },
          "patientIds": {
            "description": "All patient IDs listed in the PID-2, PID-3, and PID-4 segments of this message.",
            "items": {
              "$ref": "#/$defs/PatientId"
            },
            "type": "array"
          },
          "schematizedData": {
            "$ref": "#/$defs/SchematizedData"
          },
          "sendFacility": {
            "description": "The hospital that this message came from. MSH-4.",
            "type": "string"
          },
          "sendTime": {
            "description": "The datetime the sending application sent this message. MSH-7.",
            "format": "google-datetime",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ParsedData": {
        "description": "The content of a HL7v2 message in a structured format.",
        "properties": {
          "segments": {
            "items": {
              "$ref": "#/$defs/Segment"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Segment": {
        "description": "A segment in a structured format.",
        "properties": {
          "fields": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "A mapping from the positional location to the value. The key string uses zero-based indexes separated by dots to identify Fields, components and sub-components. A bracket notation is also used to identify different instances of a repeated field. Regex for key: (\\d+)(\\[\\d+\\])?(.\\d+)?(.\\d+)? Examples of (key, value) pairs: * (0.1, \"hemoglobin\") denotes that the first component of Field 0 has the value \"hemoglobin\". * (1.1.2, \"CBC\") denotes that the second sub-component of the first component of Field 1 has the value \"CBC\". * (1[0].1, \"HbA1c\") denotes that the first component of the first Instance of Field 1, which is repeated, has the value \"HbA1c\".",
            "type": "object"
          },
          "segmentId": {
            "description": "A string that indicates the type of segment. For example, EVN or PID.",
            "type": "string"
          },
          "setId": {
            "description": "Set ID for segments that can be in a set. This can be empty if it's missing or isn't applicable.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PatientId": {
        "description": "A patient identifier and associated type.",
        "properties": {
          "type": {
            "description": "ID type. For example, MRN or NHS.",
            "type": "string"
          },
          "value": {
            "description": "The patient's unique identifier.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SchematizedData": {
        "description": "The content of an HL7v2 message in a structured format as specified by a schema.",
        "properties": {
          "data": {
            "description": "JSON output of the parser.",
            "type": "string"
          },
          "error": {
            "description": "The error output of the parser.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PATCH",
    "url": {
      "$uri": "https://healthcare.googleapis.com//v1/{name}{?updateMask,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A complete HL7v2 message. See [Introduction to HL7 Standards] (https://www.hl7.org/implement/standards/index.cfm?ref=common) for details on the standard.",
        "**Key properties:**",
        {
          "$ul": [
            "**createTime**: Output only. The datetime when the message was created. Set by the server.",
            "**data**: Required. Raw message bytes.",
            "**labels**: User-supplied key-value pairs used to organize HL7v2 stores. Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: \\p{Ll}\\p{Lo}{0,62} Label values are optional, must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: [\\p{Ll}\\p{Lo}\\p{N}_-]{0,63} No more than 64 labels can be associated with a given store.",
            "**messageType**: The message type for this message. MSH-9.1.",
            "**name**: Output only. Resource name of the Message, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/hl7V2Stores/{hl7_v2_store_id}/messages/{message_id}`. Assigned by the server.",
            [
              "**parsedData**: The content of a HL7v2 message in a structured format.",
              {
                "$ul": [
                  "**segments**"
                ]
              }
            ],
            "**patientIds**: All patient IDs listed in the PID-2, PID-3, and PID-4 segments of this message.",
            [
              "**schematizedData**: The content of an HL7v2 message in a structured format as specified by a schema.",
              {
                "$ul": [
                  "**data**: JSON output of the parser.",
                  "**error**: The error output of the parser."
                ]
              }
            ],
            "**sendFacility**: The hospital that this message came from. MSH-4.",
            "**sendTime**: The datetime the sending application sent this message. MSH-7."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
