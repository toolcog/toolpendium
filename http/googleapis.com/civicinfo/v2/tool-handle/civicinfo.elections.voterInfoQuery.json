{
  "name": "civicinfo_elections_voterInfoQuery",
  "description": "Looks up information relevant to a voter based on the voter's registered address.",
  "parameters": {
    "type": "object",
    "properties": {
      "address": {
        "type": "string",
        "description": "The registered address of the voter to look up."
      },
      "electionId": {
        "type": "string",
        "description": "The unique ID of the election to look up. A list of election IDs can be obtained at https://www.googleapis.com/civicinfo/{version}/elections. If no election ID is specified in the query and there is more than one election with data for the given voter, the additional elections are provided in the otherElections response field."
      },
      "officialOnly": {
        "type": "boolean",
        "description": "If set to true, only data from official state sources will be returned."
      },
      "productionDataOnly": {
        "type": "boolean",
        "description": "Whether to include data that has not been vetted yet. Should only be made available to internal IPs or trusted partners. This is a non-discoverable parameter in the One Platform API config."
      },
      "returnAllAvailableData": {
        "type": "boolean",
        "description": "If set to true, the query will return the success code and include any partial information when it is unable to determine a matching address or unable to determine the election for electionId=0 queries."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      }
    },
    "required": [
      "address"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://civicinfo.googleapis.com//civicinfo/v2/voterinfo{?address,electionId,officialOnly,productionDataOnly,returnAllAvailableData,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The result of a voter info lookup query.",
        "**Key properties:**",
        {
          "$ul": [
            "**contests**: Contests that will appear on the voter's ballot.",
            "**dropOffLocations**: Locations where a voter is eligible to drop off a completed ballot. The voter must have received and completed a ballot prior to arriving at the location. The location may not have ballots available on the premises. These locations could be open on or before election day as indicated in the pollingHours field.",
            "**earlyVoteSites**: Locations where the voter is eligible to vote early, prior to election day.",
            [
              "**election**: Information about the election that was queried.",
              {
                "$ul": [
                  "**electionDay**: Day of the election in YYYY-MM-DD format.",
                  "**id**: The unique ID of this election.",
                  "**name**: A displayable name for the election.",
                  "**ocdDivisionId**: The political division of the election. Represented as an OCD Division ID. Voters within these political jurisdictions are covered by this election. This is typically a state such as ocd-division/country:us/state:ca or for the midterms or general election the entire US (i.e. ocd-division/country:us).",
                  "**shapeLookupBehavior**"
                ]
              }
            ],
            "**kind**: Identifies what kind of resource this is. Value: the fixed string \"civicinfo#voterInfoResponse\". (default: civicinfo#voterInfoResponse)",
            "**mailOnly**: Specifies whether voters in the precinct vote only by mailing their ballots (with the possible option of dropping off their ballots as well).",
            [
              "**normalizedInput**: A simple representation of an address.",
              {
                "$ul": [
                  "**city**: The city or town for the address.",
                  "**line1**: The street name and number of this address.",
                  "**line2**: The second line the address, if needed.",
                  "**line3**: The third line of the address, if needed.",
                  "**locationName**: The name of the location.",
                  "**state**: The US two letter state abbreviation of the address.",
                  "**zip**: The US Postal Zip Code of the address."
                ]
              }
            ],
            "**otherElections**: When there are multiple elections for a voter address, the otherElections field is populated in the API response and there are two possibilities: 1. If the earliest election is not the intended election, specify the election ID of the desired election in a second API request using the electionId field. 2. If these elections occur on the same day, the API doesn?t return any polling location, contest, or election official information to ensure that an additional query is made. For user-facing applications, we recommend displaying these elections to the user to disambiguate. A second API request using the electionId field should be made for the election that is relevant to the user.",
            "**pollingLocations**: Locations where the voter is eligible to vote on election day.",
            "**precinctId**",
            "**precincts**: The precincts that match this voter's address. Will only be returned for project IDs which have been allowlisted as \"partner projects\".",
            "**state**: Local Election Information for the state that the voter votes in. For the US, there will only be one element in this array."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
