{
  "name": "clouddeploy_projects_locations_deliveryPipelines_rollbackTarget",
  "description": "Creates a `Rollout` to roll back the specified target.",
  "parameters": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "Required. The `DeliveryPipeline` for which the rollback `Rollout` should be created. Format should be `projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}`."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/RollbackTargetRequest"
      }
    },
    "required": [
      "name"
    ],
    "$defs": {
      "RollbackTargetRequest": {
        "description": "The request object for `RollbackTarget`.",
        "properties": {
          "releaseId": {
            "description": "Optional. ID of the `Release` to roll back to. If this isn't specified, the previous successful `Rollout` to the specified target will be used to determine the `Release`.",
            "type": "string"
          },
          "rollbackConfig": {
            "$ref": "#/$defs/RollbackTargetConfig"
          },
          "rolloutId": {
            "description": "Required. ID of the rollback `Rollout` to create.",
            "type": "string"
          },
          "rolloutToRollBack": {
            "description": "Optional. If provided, this must be the latest `Rollout` that is on the `Target`.",
            "type": "string"
          },
          "targetId": {
            "description": "Required. ID of the `Target` that is being rolled back.",
            "type": "string"
          },
          "validateOnly": {
            "description": "Optional. If set to true, the request is validated and the user is provided with a `RollbackTargetResponse`.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "RollbackTargetConfig": {
        "description": "Configs for the Rollback rollout.",
        "properties": {
          "rollout": {
            "$ref": "#/$defs/Rollout"
          },
          "startingPhaseId": {
            "description": "Optional. The starting phase ID for the `Rollout`. If unspecified, the `Rollout` will start in the stable phase.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Rollout": {
        "description": "A `Rollout` resource in the Cloud Deploy API. A `Rollout` contains information around a specific deployment to a `Target`.",
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "User annotations. These attributes can only be set and used by the user, and not by Cloud Deploy. See https://google.aip.dev/128#annotations for more details such as format and size limitations.",
            "type": "object"
          },
          "approvalState": {
            "description": "Output only. Approval state of the `Rollout`.",
            "enum": [
              "APPROVAL_STATE_UNSPECIFIED",
              "NEEDS_APPROVAL",
              "DOES_NOT_NEED_APPROVAL",
              "APPROVED",
              "REJECTED"
            ],
            "readOnly": true,
            "type": "string"
          },
          "approveTime": {
            "description": "Output only. Time at which the `Rollout` was approved.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "controllerRollout": {
            "description": "Output only. Name of the `ControllerRollout`. Format is `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}/rollouts/a-z{0,62}`.",
            "readOnly": true,
            "type": "string"
          },
          "createTime": {
            "description": "Output only. Time at which the `Rollout` was created.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "deployEndTime": {
            "description": "Output only. Time at which the `Rollout` finished deploying.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "deployFailureCause": {
            "description": "Output only. The reason this rollout failed. This will always be unspecified while the rollout is in progress.",
            "enum": [
              "FAILURE_CAUSE_UNSPECIFIED",
              "CLOUD_BUILD_UNAVAILABLE",
              "EXECUTION_FAILED",
              "DEADLINE_EXCEEDED",
              "RELEASE_FAILED",
              "RELEASE_ABANDONED",
              "VERIFICATION_CONFIG_NOT_FOUND",
              "CLOUD_BUILD_REQUEST_FAILED",
              "OPERATION_FEATURE_NOT_SUPPORTED"
            ],
            "readOnly": true,
            "type": "string"
          },
          "deployStartTime": {
            "description": "Output only. Time at which the `Rollout` started deploying.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "deployingBuild": {
            "description": "Output only. The resource name of the Cloud Build `Build` object that is used to deploy the Rollout. Format is `projects/{project}/locations/{location}/builds/{build}`.",
            "readOnly": true,
            "type": "string"
          },
          "description": {
            "description": "Description of the `Rollout` for user purposes. Max length is 255 characters.",
            "type": "string"
          },
          "enqueueTime": {
            "description": "Output only. Time at which the `Rollout` was enqueued.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "etag": {
            "description": "This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.",
            "type": "string"
          },
          "failureReason": {
            "description": "Output only. Additional information about the rollout failure, if available.",
            "readOnly": true,
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Labels are attributes that can be set and used by both the user and by Cloud Deploy. Labels must meet the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values are additionally constrained to be <= 128 bytes.",
            "type": "object"
          },
          "metadata": {
            "$ref": "#/$defs/Metadata"
          },
          "name": {
            "description": "Optional. Name of the `Rollout`. Format is `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}/rollouts/a-z{0,62}`.",
            "type": "string"
          },
          "phases": {
            "description": "Output only. The phases that represent the workflows of this `Rollout`.",
            "items": {
              "$ref": "#/$defs/Phase"
            },
            "readOnly": true,
            "type": "array"
          },
          "rollbackOfRollout": {
            "description": "Output only. Name of the `Rollout` that is rolled back by this `Rollout`. Empty if this `Rollout` wasn't created as a rollback.",
            "readOnly": true,
            "type": "string"
          },
          "rolledBackByRollouts": {
            "description": "Output only. Names of `Rollouts` that rolled back this `Rollout`.",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "state": {
            "description": "Output only. Current state of the `Rollout`.",
            "enum": [
              "STATE_UNSPECIFIED",
              "SUCCEEDED",
              "FAILED",
              "IN_PROGRESS",
              "PENDING_APPROVAL",
              "APPROVAL_REJECTED",
              "PENDING",
              "PENDING_RELEASE",
              "CANCELLING",
              "CANCELLED",
              "HALTED"
            ],
            "readOnly": true,
            "type": "string"
          },
          "targetId": {
            "description": "Required. The ID of Target to which this `Rollout` is deploying.",
            "type": "string"
          },
          "uid": {
            "description": "Output only. Unique identifier of the `Rollout`.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "Metadata": {
        "description": "Metadata includes information associated with a `Rollout`.",
        "properties": {
          "automation": {
            "$ref": "#/$defs/AutomationRolloutMetadata"
          },
          "cloudRun": {
            "$ref": "#/$defs/CloudRunMetadata"
          },
          "custom": {
            "$ref": "#/$defs/CustomMetadata"
          }
        },
        "type": "object"
      },
      "AutomationRolloutMetadata": {
        "description": "AutomationRolloutMetadata contains Automation-related actions that were performed on a rollout.",
        "properties": {
          "advanceAutomationRuns": {
            "description": "Output only. The IDs of the AutomationRuns initiated by an advance rollout rule.",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "currentRepairAutomationRun": {
            "description": "Output only. The current AutomationRun repairing the rollout.",
            "readOnly": true,
            "type": "string"
          },
          "promoteAutomationRun": {
            "description": "Output only. The ID of the AutomationRun initiated by a promote release rule.",
            "readOnly": true,
            "type": "string"
          },
          "repairAutomationRuns": {
            "description": "Output only. The IDs of the AutomationRuns initiated by a repair rollout rule.",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "CloudRunMetadata": {
        "description": "CloudRunMetadata contains information from a Cloud Run deployment.",
        "properties": {
          "job": {
            "description": "Output only. The name of the Cloud Run job that is associated with a `Rollout`. Format is `projects/{project}/locations/{location}/jobs/{job_name}`.",
            "readOnly": true,
            "type": "string"
          },
          "revision": {
            "description": "Output only. The Cloud Run Revision id associated with a `Rollout`.",
            "readOnly": true,
            "type": "string"
          },
          "service": {
            "description": "Output only. The name of the Cloud Run Service that is associated with a `Rollout`. Format is `projects/{project}/locations/{location}/services/{service}`.",
            "readOnly": true,
            "type": "string"
          },
          "serviceUrls": {
            "description": "Output only. The Cloud Run Service urls that are associated with a `Rollout`.",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "CustomMetadata": {
        "description": "CustomMetadata contains information from a user-defined operation.",
        "properties": {
          "values": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Output only. Key-value pairs provided by the user-defined operation.",
            "readOnly": true,
            "type": "object"
          }
        },
        "type": "object"
      },
      "Phase": {
        "description": "Phase represents a collection of jobs that are logically grouped together for a `Rollout`.",
        "properties": {
          "childRolloutJobs": {
            "$ref": "#/$defs/ChildRolloutJobs"
          },
          "deploymentJobs": {
            "$ref": "#/$defs/DeploymentJobs"
          },
          "id": {
            "description": "Output only. The ID of the Phase.",
            "readOnly": true,
            "type": "string"
          },
          "skipMessage": {
            "description": "Output only. Additional information on why the Phase was skipped, if available.",
            "readOnly": true,
            "type": "string"
          },
          "state": {
            "description": "Output only. Current state of the Phase.",
            "enum": [
              "STATE_UNSPECIFIED",
              "PENDING",
              "IN_PROGRESS",
              "SUCCEEDED",
              "FAILED",
              "ABORTED",
              "SKIPPED"
            ],
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ChildRolloutJobs": {
        "description": "ChildRollouts job composition",
        "properties": {
          "advanceRolloutJobs": {
            "description": "Output only. List of AdvanceChildRolloutJobs",
            "items": {
              "$ref": "#/$defs/Job"
            },
            "readOnly": true,
            "type": "array"
          },
          "createRolloutJobs": {
            "description": "Output only. List of CreateChildRolloutJobs",
            "items": {
              "$ref": "#/$defs/Job"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "Job": {
        "description": "Job represents an operation for a `Rollout`.",
        "properties": {
          "advanceChildRolloutJob": {
            "$ref": "#/$defs/AdvanceChildRolloutJob"
          },
          "createChildRolloutJob": {
            "$ref": "#/$defs/CreateChildRolloutJob"
          },
          "deployJob": {
            "$ref": "#/$defs/DeployJob"
          },
          "id": {
            "description": "Output only. The ID of the Job.",
            "readOnly": true,
            "type": "string"
          },
          "jobRun": {
            "description": "Output only. The name of the `JobRun` responsible for the most recent invocation of this Job.",
            "readOnly": true,
            "type": "string"
          },
          "postdeployJob": {
            "$ref": "#/$defs/PostdeployJob"
          },
          "predeployJob": {
            "$ref": "#/$defs/PredeployJob"
          },
          "skipMessage": {
            "description": "Output only. Additional information on why the Job was skipped, if available.",
            "readOnly": true,
            "type": "string"
          },
          "state": {
            "description": "Output only. The current state of the Job.",
            "enum": [
              "STATE_UNSPECIFIED",
              "PENDING",
              "DISABLED",
              "IN_PROGRESS",
              "SUCCEEDED",
              "FAILED",
              "ABORTED",
              "SKIPPED",
              "IGNORED"
            ],
            "readOnly": true,
            "type": "string"
          },
          "verifyJob": {
            "$ref": "#/$defs/VerifyJob"
          }
        },
        "type": "object"
      },
      "AdvanceChildRolloutJob": {
        "description": "An advanceChildRollout Job.",
        "properties": {},
        "type": "object"
      },
      "CreateChildRolloutJob": {
        "description": "A createChildRollout Job.",
        "properties": {},
        "type": "object"
      },
      "DeployJob": {
        "description": "A deploy Job.",
        "properties": {},
        "type": "object"
      },
      "PostdeployJob": {
        "description": "A postdeploy Job.",
        "properties": {
          "actions": {
            "description": "Output only. The custom actions that the postdeploy Job executes.",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "PredeployJob": {
        "description": "A predeploy Job.",
        "properties": {
          "actions": {
            "description": "Output only. The custom actions that the predeploy Job executes.",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "VerifyJob": {
        "description": "A verify Job.",
        "properties": {},
        "type": "object"
      },
      "DeploymentJobs": {
        "description": "Deployment job composition.",
        "properties": {
          "deployJob": {
            "$ref": "#/$defs/Job"
          },
          "postdeployJob": {
            "$ref": "#/$defs/Job"
          },
          "predeployJob": {
            "$ref": "#/$defs/Job"
          },
          "verifyJob": {
            "$ref": "#/$defs/Job"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://clouddeploy.googleapis.com//v1/{name}:rollbackTarget{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The response object from `RollbackTarget`.",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**rollbackConfig**: Configs for the Rollback rollout.",
              {
                "$ul": [
                  [
                    "**rollout**: A `Rollout` resource in the Cloud Deploy API. A `Rollout` contains information around a specific deployment to a `Target`.",
                    {
                      "$ul": [
                        "**annotations**: User annotations. These attributes can only be set and used by the user, and not by Cloud Deploy. See https://google.aip.dev/128#annotations for more details such as format and size limitations.",
                        "**approvalState**: Output only. Approval state of the `Rollout`.",
                        "**approveTime**: Output only. Time at which the `Rollout` was approved.",
                        "**controllerRollout**: Output only. Name of the `ControllerRollout`. Format is `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}/rollouts/a-z{0,62}`.",
                        "**createTime**: Output only. Time at which the `Rollout` was created.",
                        "**deployEndTime**: Output only. Time at which the `Rollout` finished deploying.",
                        "**deployFailureCause**: Output only. The reason this rollout failed. This will always be unspecified while the rollout is in progress.",
                        "**deployStartTime**: Output only. Time at which the `Rollout` started deploying.",
                        "**deployingBuild**: Output only. The resource name of the Cloud Build `Build` object that is used to deploy the Rollout. Format is `projects/{project}/locations/{location}/builds/{build}`.",
                        "**description**: Description of the `Rollout` for user purposes. Max length is 255 characters.",
                        "**enqueueTime**: Output only. Time at which the `Rollout` was enqueued.",
                        "**etag**: This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.",
                        "**failureReason**: Output only. Additional information about the rollout failure, if available.",
                        "**labels**: Labels are attributes that can be set and used by both the user and by Cloud Deploy. Labels must meet the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values are additionally constrained to be <= 128 bytes.",
                        [
                          "**metadata**: Metadata includes information associated with a `Rollout`.",
                          {
                            "$ul": [
                              [
                                "**automation**: AutomationRolloutMetadata contains Automation-related actions that were performed on a rollout.",
                                {
                                  "$ul": [
                                    "**advanceAutomationRuns**: Output only. The IDs of the AutomationRuns initiated by an advance rollout rule.",
                                    "**currentRepairAutomationRun**: Output only. The current AutomationRun repairing the rollout.",
                                    "**promoteAutomationRun**: Output only. The ID of the AutomationRun initiated by a promote release rule.",
                                    "**repairAutomationRuns**: Output only. The IDs of the AutomationRuns initiated by a repair rollout rule."
                                  ]
                                }
                              ],
                              [
                                "**cloudRun**: CloudRunMetadata contains information from a Cloud Run deployment.",
                                {
                                  "$ul": [
                                    "**job**: Output only. The name of the Cloud Run job that is associated with a `Rollout`. Format is `projects/{project}/locations/{location}/jobs/{job_name}`.",
                                    "**revision**: Output only. The Cloud Run Revision id associated with a `Rollout`.",
                                    "**service**: Output only. The name of the Cloud Run Service that is associated with a `Rollout`. Format is `projects/{project}/locations/{location}/services/{service}`.",
                                    "**serviceUrls**: Output only. The Cloud Run Service urls that are associated with a `Rollout`."
                                  ]
                                }
                              ],
                              [
                                "**custom**: CustomMetadata contains information from a user-defined operation.",
                                {
                                  "$ul": [
                                    "**values**: Output only. Key-value pairs provided by the user-defined operation."
                                  ]
                                }
                              ]
                            ]
                          }
                        ],
                        "**name**: Optional. Name of the `Rollout`. Format is `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}/rollouts/a-z{0,62}`.",
                        "**phases**: Output only. The phases that represent the workflows of this `Rollout`.",
                        "**rollbackOfRollout**: Output only. Name of the `Rollout` that is rolled back by this `Rollout`. Empty if this `Rollout` wasn't created as a rollback.",
                        "**rolledBackByRollouts**: Output only. Names of `Rollouts` that rolled back this `Rollout`.",
                        "**state**: Output only. Current state of the `Rollout`.",
                        "**targetId**: Required. The ID of Target to which this `Rollout` is deploying.",
                        "**uid**: Output only. Unique identifier of the `Rollout`."
                      ]
                    }
                  ],
                  "**startingPhaseId**: Optional. The starting phase ID for the `Rollout`. If unspecified, the `Rollout` will start in the stable phase."
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
