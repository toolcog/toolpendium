{
  "name": "clouddeploy_projects_locations_targets_create",
  "description": "Creates a new Target in a given project and location.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The parent collection in which the `Target` should be created. Format should be `projects/{project_id}/locations/{location_name}`."
      },
      "requestId": {
        "type": "string",
        "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server knows to ignore the request if it has already been completed. The server guarantees that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
      },
      "targetId": {
        "type": "string",
        "description": "Required. ID of the `Target`."
      },
      "validateOnly": {
        "type": "boolean",
        "description": "Optional. If set to true, the request is validated and the user is provided with an expected result, but no actual change is made."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/Target"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "Target": {
        "description": "A `Target` resource in the Cloud Deploy API. A `Target` defines a location to which a Skaffold configuration can be deployed.",
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Optional. User annotations. These attributes can only be set and used by the user, and not by Cloud Deploy. See https://google.aip.dev/128#annotations for more details such as format and size limitations.",
            "type": "object"
          },
          "anthosCluster": {
            "$ref": "#/$defs/AnthosCluster"
          },
          "createTime": {
            "description": "Output only. Time at which the `Target` was created.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "customTarget": {
            "$ref": "#/$defs/CustomTarget"
          },
          "deployParameters": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Optional. The deploy parameters to use for this target.",
            "type": "object"
          },
          "description": {
            "description": "Optional. Description of the `Target`. Max length is 255 characters.",
            "type": "string"
          },
          "etag": {
            "description": "Optional. This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.",
            "type": "string"
          },
          "executionConfigs": {
            "description": "Configurations for all execution that relates to this `Target`. Each `ExecutionEnvironmentUsage` value may only be used in a single configuration; using the same value multiple times is an error. When one or more configurations are specified, they must include the `RENDER` and `DEPLOY` `ExecutionEnvironmentUsage` values. When no configurations are specified, execution will use the default specified in `DefaultPool`.",
            "items": {
              "$ref": "#/$defs/ExecutionConfig"
            },
            "type": "array"
          },
          "gke": {
            "$ref": "#/$defs/GkeCluster"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Optional. Labels are attributes that can be set and used by both the user and by Cloud Deploy. Labels must meet the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values are additionally constrained to be <= 128 bytes.",
            "type": "object"
          },
          "multiTarget": {
            "$ref": "#/$defs/MultiTarget"
          },
          "name": {
            "description": "Optional. Name of the `Target`. Format is `projects/{project}/locations/{location}/targets/a-z{0,62}`.",
            "type": "string"
          },
          "requireApproval": {
            "description": "Optional. Whether or not the `Target` requires approval.",
            "type": "boolean"
          },
          "run": {
            "$ref": "#/$defs/CloudRunLocation"
          },
          "targetId": {
            "description": "Output only. Resource id of the `Target`.",
            "readOnly": true,
            "type": "string"
          },
          "uid": {
            "description": "Output only. Unique identifier of the `Target`.",
            "readOnly": true,
            "type": "string"
          },
          "updateTime": {
            "description": "Output only. Most recent time at which the `Target` was updated.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "AnthosCluster": {
        "description": "Information specifying an Anthos Cluster.",
        "properties": {
          "membership": {
            "description": "Membership of the GKE Hub-registered cluster to which to apply the Skaffold configuration. Format is `projects/{project}/locations/{location}/memberships/{membership_name}`.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CustomTarget": {
        "description": "Information specifying a Custom Target.",
        "properties": {
          "customTargetType": {
            "description": "Required. The name of the CustomTargetType. Format must be `projects/{project}/locations/{location}/customTargetTypes/{custom_target_type}`.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ExecutionConfig": {
        "description": "Configuration of the environment to use when calling Skaffold.",
        "properties": {
          "artifactStorage": {
            "description": "Optional. Cloud Storage location in which to store execution outputs. This can either be a bucket (\"gs://my-bucket\") or a path within a bucket (\"gs://my-bucket/my-dir\"). If unspecified, a default bucket located in the same region will be used.",
            "type": "string"
          },
          "defaultPool": {
            "$ref": "#/$defs/DefaultPool"
          },
          "executionTimeout": {
            "description": "Optional. Execution timeout for a Cloud Build Execution. This must be between 10m and 24h in seconds format. If unspecified, a default timeout of 1h is used.",
            "format": "google-duration",
            "type": "string"
          },
          "privatePool": {
            "$ref": "#/$defs/PrivatePool"
          },
          "serviceAccount": {
            "description": "Optional. Google service account to use for execution. If unspecified, the project execution service account (-compute@developer.gserviceaccount.com) is used.",
            "type": "string"
          },
          "usages": {
            "description": "Required. Usages when this configuration should be applied.",
            "items": {
              "enum": [
                "EXECUTION_ENVIRONMENT_USAGE_UNSPECIFIED",
                "RENDER",
                "DEPLOY",
                "VERIFY",
                "PREDEPLOY",
                "POSTDEPLOY"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "workerPool": {
            "description": "Optional. The resource name of the `WorkerPool`, with the format `projects/{project}/locations/{location}/workerPools/{worker_pool}`. If this optional field is unspecified, the default Cloud Build pool will be used.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DefaultPool": {
        "description": "Execution using the default Cloud Build pool.",
        "properties": {
          "artifactStorage": {
            "description": "Optional. Cloud Storage location where execution outputs should be stored. This can either be a bucket (\"gs://my-bucket\") or a path within a bucket (\"gs://my-bucket/my-dir\"). If unspecified, a default bucket located in the same region will be used.",
            "type": "string"
          },
          "serviceAccount": {
            "description": "Optional. Google service account to use for execution. If unspecified, the project execution service account (-compute@developer.gserviceaccount.com) will be used.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PrivatePool": {
        "description": "Execution using a private Cloud Build pool.",
        "properties": {
          "artifactStorage": {
            "description": "Optional. Cloud Storage location where execution outputs should be stored. This can either be a bucket (\"gs://my-bucket\") or a path within a bucket (\"gs://my-bucket/my-dir\"). If unspecified, a default bucket located in the same region will be used.",
            "type": "string"
          },
          "serviceAccount": {
            "description": "Optional. Google service account to use for execution. If unspecified, the project execution service account (-compute@developer.gserviceaccount.com) will be used.",
            "type": "string"
          },
          "workerPool": {
            "description": "Required. Resource name of the Cloud Build worker pool to use. The format is `projects/{project}/locations/{location}/workerPools/{pool}`.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GkeCluster": {
        "description": "Information specifying a GKE Cluster.",
        "properties": {
          "cluster": {
            "description": "Information specifying a GKE Cluster. Format is `projects/{project_id}/locations/{location_id}/clusters/{cluster_id}`.",
            "type": "string"
          },
          "internalIp": {
            "description": "Optional. If true, `cluster` is accessed using the private IP address of the control plane endpoint. Otherwise, the default IP address of the control plane endpoint is used. The default IP address is the private IP address for clusters with private control-plane endpoints and the public IP address otherwise. Only specify this option when `cluster` is a [private GKE cluster](https://cloud.google.com/kubernetes-engine/docs/concepts/private-cluster-concept).",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "MultiTarget": {
        "description": "Information specifying a multiTarget.",
        "properties": {
          "targetIds": {
            "description": "Required. The target_ids of this multiTarget.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "CloudRunLocation": {
        "description": "Information specifying where to deploy a Cloud Run Service.",
        "properties": {
          "location": {
            "description": "Required. The location for the Cloud Run Service. Format must be `projects/{project}/locations/{location}`.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://clouddeploy.googleapis.com//v1/{parent}/targets{?requestId,targetId,validateOnly,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "This resource represents a long-running operation that is the result of a network API call.",
        "**Key properties:**",
        {
          "$ul": [
            "**done**: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
            [
              "**error**: The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
              {
                "$ul": [
                  "**code**: The status code, which should be an enum value of google.rpc.Code.",
                  "**details**: A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                  "**message**: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                ]
              }
            ],
            "**metadata**: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
            "**name**: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
            "**response**: The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
