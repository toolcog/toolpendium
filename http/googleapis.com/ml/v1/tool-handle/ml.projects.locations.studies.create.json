{
  "name": "ml_projects_locations_studies_create",
  "description": "Creates a study.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The project and location that the study belongs to. Format: projects/{project}/locations/{location}"
      },
      "studyId": {
        "type": "string",
        "description": "Required. The ID to use for the study, which will become the final component of the study's resource name."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleCloudMlV1__Study"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "GoogleCloudMlV1__Study": {
        "description": "A message representing a Study.",
        "properties": {
          "createTime": {
            "description": "Output only. Time at which the study was created.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "inactiveReason": {
            "description": "Output only. A human readable reason why the Study is inactive. This should be empty if a study is ACTIVE or COMPLETED.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "Output only. The name of a study.",
            "readOnly": true,
            "type": "string"
          },
          "state": {
            "description": "Output only. The detailed state of a study.",
            "enum": [
              "STATE_UNSPECIFIED",
              "ACTIVE",
              "INACTIVE",
              "COMPLETED"
            ],
            "readOnly": true,
            "type": "string"
          },
          "studyConfig": {
            "$ref": "#/$defs/GoogleCloudMlV1__StudyConfig"
          }
        },
        "type": "object"
      },
      "GoogleCloudMlV1__StudyConfig": {
        "description": "Represents configuration of a study.",
        "properties": {
          "algorithm": {
            "description": "The search algorithm specified for the study.",
            "enum": [
              "ALGORITHM_UNSPECIFIED",
              "GAUSSIAN_PROCESS_BANDIT",
              "GRID_SEARCH",
              "RANDOM_SEARCH"
            ],
            "type": "string"
          },
          "automatedStoppingConfig": {
            "$ref": "#/$defs/GoogleCloudMlV1__AutomatedStoppingConfig"
          },
          "metrics": {
            "description": "Metric specs for the study.",
            "items": {
              "$ref": "#/$defs/GoogleCloudMlV1_StudyConfig_MetricSpec"
            },
            "type": "array"
          },
          "parameters": {
            "description": "Required. The set of parameters to tune.",
            "items": {
              "$ref": "#/$defs/GoogleCloudMlV1_StudyConfig_ParameterSpec"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudMlV1__AutomatedStoppingConfig": {
        "description": "Configuration for Automated Early Stopping of Trials. If no implementation_config is set, automated early stopping will not be run.",
        "properties": {
          "decayCurveStoppingConfig": {
            "$ref": "#/$defs/GoogleCloudMlV1_AutomatedStoppingConfig_DecayCurveAutomatedStoppingConfig"
          },
          "medianAutomatedStoppingConfig": {
            "$ref": "#/$defs/GoogleCloudMlV1_AutomatedStoppingConfig_MedianAutomatedStoppingConfig"
          }
        },
        "type": "object"
      },
      "GoogleCloudMlV1_AutomatedStoppingConfig_DecayCurveAutomatedStoppingConfig": {
        "properties": {
          "useElapsedTime": {
            "description": "If true, measurement.elapsed_time is used as the x-axis of each Trials Decay Curve. Otherwise, Measurement.steps will be used as the x-axis.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GoogleCloudMlV1_AutomatedStoppingConfig_MedianAutomatedStoppingConfig": {
        "description": "The median automated stopping rule stops a pending trial if the trial's best objective_value is strictly below the median 'performance' of all completed trials reported up to the trial's last measurement. Currently, 'performance' refers to the running average of the objective values reported by the trial in each measurement.",
        "properties": {
          "useElapsedTime": {
            "description": "If true, the median automated stopping rule applies to measurement.use_elapsed_time, which means the elapsed_time field of the current trial's latest measurement is used to compute the median objective value for each completed trial.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GoogleCloudMlV1_StudyConfig_MetricSpec": {
        "description": "Represents a metric to optimize.",
        "properties": {
          "goal": {
            "description": "Required. The optimization goal of the metric.",
            "enum": [
              "GOAL_TYPE_UNSPECIFIED",
              "MAXIMIZE",
              "MINIMIZE"
            ],
            "type": "string"
          },
          "metric": {
            "description": "Required. The name of the metric.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudMlV1_StudyConfig_ParameterSpec": {
        "description": "Represents a single parameter to optimize.",
        "properties": {
          "categoricalValueSpec": {
            "$ref": "#/$defs/GoogleCloudMlV1_StudyConfigParameterSpec_CategoricalValueSpec"
          },
          "childParameterSpecs": {
            "description": "A child node is active if the parameter's value matches the child node's matching_parent_values. If two items in child_parameter_specs have the same name, they must have disjoint matching_parent_values.",
            "items": {
              "$ref": "#/$defs/GoogleCloudMlV1_StudyConfig_ParameterSpec"
            },
            "type": "array"
          },
          "discreteValueSpec": {
            "$ref": "#/$defs/GoogleCloudMlV1_StudyConfigParameterSpec_DiscreteValueSpec"
          },
          "doubleValueSpec": {
            "$ref": "#/$defs/GoogleCloudMlV1_StudyConfigParameterSpec_DoubleValueSpec"
          },
          "integerValueSpec": {
            "$ref": "#/$defs/GoogleCloudMlV1_StudyConfigParameterSpec_IntegerValueSpec"
          },
          "parameter": {
            "description": "Required. The parameter name must be unique amongst all ParameterSpecs.",
            "type": "string"
          },
          "parentCategoricalValues": {
            "$ref": "#/$defs/GoogleCloudMlV1_StudyConfigParameterSpec_MatchingParentCategoricalValueSpec"
          },
          "parentDiscreteValues": {
            "$ref": "#/$defs/GoogleCloudMlV1_StudyConfigParameterSpec_MatchingParentDiscreteValueSpec"
          },
          "parentIntValues": {
            "$ref": "#/$defs/GoogleCloudMlV1_StudyConfigParameterSpec_MatchingParentIntValueSpec"
          },
          "scaleType": {
            "description": "How the parameter should be scaled. Leave unset for categorical parameters.",
            "enum": [
              "SCALE_TYPE_UNSPECIFIED",
              "UNIT_LINEAR_SCALE",
              "UNIT_LOG_SCALE",
              "UNIT_REVERSE_LOG_SCALE"
            ],
            "type": "string"
          },
          "type": {
            "description": "Required. The type of the parameter.",
            "enum": [
              "PARAMETER_TYPE_UNSPECIFIED",
              "DOUBLE",
              "INTEGER",
              "CATEGORICAL",
              "DISCRETE"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudMlV1_StudyConfigParameterSpec_CategoricalValueSpec": {
        "properties": {
          "values": {
            "description": "Must be specified if type is `CATEGORICAL`. The list of possible categories.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudMlV1_StudyConfigParameterSpec_DiscreteValueSpec": {
        "properties": {
          "values": {
            "description": "Must be specified if type is `DISCRETE`. A list of feasible points. The list should be in strictly increasing order. For instance, this parameter might have possible settings of 1.5, 2.5, and 4.0. This list should not contain more than 1,000 values.",
            "items": {
              "format": "double",
              "type": "number"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudMlV1_StudyConfigParameterSpec_DoubleValueSpec": {
        "properties": {
          "maxValue": {
            "description": "Must be specified if type is `DOUBLE`. Maximum value of the parameter.",
            "format": "double",
            "type": "number"
          },
          "minValue": {
            "description": "Must be specified if type is `DOUBLE`. Minimum value of the parameter.",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "GoogleCloudMlV1_StudyConfigParameterSpec_IntegerValueSpec": {
        "properties": {
          "maxValue": {
            "description": "Must be specified if type is `INTEGER`. Maximum value of the parameter.",
            "format": "int64",
            "type": "string"
          },
          "minValue": {
            "description": "Must be specified if type is `INTEGER`. Minimum value of the parameter.",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudMlV1_StudyConfigParameterSpec_MatchingParentCategoricalValueSpec": {
        "description": "Represents the spec to match categorical values from parent parameter.",
        "properties": {
          "values": {
            "description": "Matches values of the parent parameter with type 'CATEGORICAL'. All values must exist in `categorical_value_spec` of parent parameter.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudMlV1_StudyConfigParameterSpec_MatchingParentDiscreteValueSpec": {
        "description": "Represents the spec to match discrete values from parent parameter.",
        "properties": {
          "values": {
            "description": "Matches values of the parent parameter with type 'DISCRETE'. All values must exist in `discrete_value_spec` of parent parameter.",
            "items": {
              "format": "double",
              "type": "number"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudMlV1_StudyConfigParameterSpec_MatchingParentIntValueSpec": {
        "description": "Represents the spec to match integer values from parent parameter.",
        "properties": {
          "values": {
            "description": "Matches values of the parent parameter with type 'INTEGER'. All values must lie in `integer_value_spec` of parent parameter.",
            "items": {
              "format": "int64",
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://ml.googleapis.com//v1/{parent}/studies{?studyId,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A message representing a Study.",
        "**Key properties:**",
        {
          "$ul": [
            "**createTime**: Output only. Time at which the study was created.",
            "**inactiveReason**: Output only. A human readable reason why the Study is inactive. This should be empty if a study is ACTIVE or COMPLETED.",
            "**name**: Output only. The name of a study.",
            "**state**: Output only. The detailed state of a study.",
            [
              "**studyConfig**: Represents configuration of a study.",
              {
                "$ul": [
                  "**algorithm**: The search algorithm specified for the study.",
                  [
                    "**automatedStoppingConfig**: Configuration for Automated Early Stopping of Trials. If no implementation_config is set, automated early stopping will not be run.",
                    {
                      "$ul": [
                        [
                          "**decayCurveStoppingConfig**",
                          {
                            "$ul": [
                              "**useElapsedTime**: If true, measurement.elapsed_time is used as the x-axis of each Trials Decay Curve. Otherwise, Measurement.steps will be used as the x-axis."
                            ]
                          }
                        ],
                        [
                          "**medianAutomatedStoppingConfig**: The median automated stopping rule stops a pending trial if the trial's best objective_value is strictly below the median 'performance' of all completed trials reported up to the trial's last measurement. Currently, 'performance' refers to the running average of the objective values reported by the trial in each measurement.",
                          {
                            "$ul": [
                              "**useElapsedTime**: If true, the median automated stopping rule applies to measurement.use_elapsed_time, which means the elapsed_time field of the current trial's latest measurement is used to compute the median objective value for each completed trial."
                            ]
                          }
                        ]
                      ]
                    }
                  ],
                  "**metrics**: Metric specs for the study.",
                  "**parameters**: Required. The set of parameters to tune."
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
