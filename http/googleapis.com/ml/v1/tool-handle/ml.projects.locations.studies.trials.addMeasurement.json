{
  "name": "ml_projects_locations_studies_trials_addMeasurement",
  "description": "Adds a measurement of the objective metrics to a trial. This measurement is assumed to have been taken before the trial is complete.",
  "parameters": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "Required. The trial name."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleCloudMlV1__AddTrialMeasurementRequest"
      }
    },
    "required": [
      "name"
    ],
    "$defs": {
      "GoogleCloudMlV1__AddTrialMeasurementRequest": {
        "description": "The request message for the AddTrialMeasurement service method.",
        "properties": {
          "measurement": {
            "$ref": "#/$defs/GoogleCloudMlV1__Measurement"
          }
        },
        "type": "object"
      },
      "GoogleCloudMlV1__Measurement": {
        "description": "A message representing a measurement.",
        "properties": {
          "elapsedTime": {
            "description": "Output only. Time that the trial has been running at the point of this measurement.",
            "format": "google-duration",
            "type": "string"
          },
          "metrics": {
            "description": "Provides a list of metrics that act as inputs into the objective function.",
            "items": {
              "$ref": "#/$defs/GoogleCloudMlV1_Measurement_Metric"
            },
            "type": "array"
          },
          "stepCount": {
            "description": "The number of steps a machine learning model has been trained for. Must be non-negative.",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudMlV1_Measurement_Metric": {
        "description": "A message representing a metric in the measurement.",
        "properties": {
          "metric": {
            "description": "Required. Metric name.",
            "type": "string"
          },
          "value": {
            "description": "Required. The value for this metric.",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://ml.googleapis.com//v1/{name}:addMeasurement{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A message representing a trial.",
        "**Key properties:**",
        {
          "$ul": [
            "**clientId**: Output only. The identifier of the client that originally requested this trial.",
            "**endTime**: Output only. Time at which the trial's status changed to COMPLETED.",
            [
              "**finalMeasurement**: A message representing a measurement.",
              {
                "$ul": [
                  "**elapsedTime**: Output only. Time that the trial has been running at the point of this measurement.",
                  "**metrics**: Provides a list of metrics that act as inputs into the objective function.",
                  "**stepCount**: The number of steps a machine learning model has been trained for. Must be non-negative."
                ]
              }
            ],
            "**infeasibleReason**: Output only. A human readable string describing why the trial is infeasible. This should only be set if trial_infeasible is true.",
            "**measurements**: A list of measurements that are strictly lexicographically ordered by their induced tuples (steps, elapsed_time). These are used for early stopping computations.",
            "**name**: Output only. Name of the trial assigned by the service.",
            "**parameters**: The parameters of the trial.",
            "**startTime**: Output only. Time at which the trial was started.",
            "**state**: The detailed state of a trial.",
            "**trialInfeasible**: Output only. If true, the parameters in this trial are not attempted again."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
