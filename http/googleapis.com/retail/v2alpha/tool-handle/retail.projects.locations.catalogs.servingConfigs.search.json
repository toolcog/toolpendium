{
  "name": "retail_projects_locations_catalogs_servingConfigs_search",
  "description": "Performs a search. This feature is only available for users who have Retail Search enabled. Enable Retail Search on Cloud Console before using this feature.",
  "parameters": {
    "type": "object",
    "properties": {
      "placement": {
        "type": "string",
        "description": "Required. The resource name of the Retail Search serving config, such as `projects/*/locations/global/catalogs/default_catalog/servingConfigs/default_serving_config` or the name of the legacy placement resource, such as `projects/*/locations/global/catalogs/default_catalog/placements/default_search`. This field is used to identify the serving config name and the set of models that are used to make the search."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleCloudRetailV2alphaSearchRequest"
      }
    },
    "required": [
      "placement"
    ],
    "$defs": {
      "GoogleCloudRetailV2alphaSearchRequest": {
        "description": "Request message for SearchService.Search method.",
        "properties": {
          "boostSpec": {
            "$ref": "#/$defs/GoogleCloudRetailV2alphaSearchRequestBoostSpec"
          },
          "branch": {
            "description": "The branch resource name, such as `projects/*/locations/global/catalogs/default_catalog/branches/0`. Use \"default_branch\" as the branch ID or leave this field empty, to search products under the default branch.",
            "type": "string"
          },
          "canonicalFilter": {
            "description": "The default filter that is applied when a user performs a search without checking any filters on the search page. The filter applied to every search request when quality improvement such as query expansion is needed. In the case a query does not have a sufficient amount of results this filter will be used to determine whether or not to enable the query expansion flow. The original filter will still be used for the query expanded search. This field is strongly recommended to achieve high search quality. For more information about filter syntax, see SearchRequest.filter.",
            "type": "string"
          },
          "dynamicFacetSpec": {
            "$ref": "#/$defs/GoogleCloudRetailV2alphaSearchRequestDynamicFacetSpec"
          },
          "entity": {
            "description": "The entity for customers that may run multiple different entities, domains, sites or regions, for example, `Google US`, `Google Ads`, `Waymo`, `google.com`, `youtube.com`, etc. If this is set, it should be exactly matched with UserEvent.entity to get search results boosted by entity.",
            "type": "string"
          },
          "facetSpecs": {
            "description": "Facet specifications for faceted search. If empty, no facets are returned. A maximum of 200 values are allowed. Otherwise, an INVALID_ARGUMENT error is returned.",
            "items": {
              "$ref": "#/$defs/GoogleCloudRetailV2alphaSearchRequestFacetSpec"
            },
            "type": "array"
          },
          "filter": {
            "description": "The filter syntax consists of an expression language for constructing a predicate from one or more fields of the products being filtered. Filter expression is case-sensitive. For more information, see [Filter](https://cloud.google.com/retail/docs/filter-and-order#filter). If this field is unrecognizable, an INVALID_ARGUMENT is returned.",
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The labels applied to a resource must meet the following requirements: * Each resource can have multiple labels, up to a maximum of 64. * Each label must be a key-value pair. * Keys have a minimum length of 1 character and a maximum length of 63 characters and cannot be empty. Values can be empty and have a maximum length of 63 characters. * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. All characters must use UTF-8 encoding, and international characters are allowed. * The key portion of a label must be unique. However, you can use the same key with multiple resources. * Keys must start with a lowercase letter or international character. For more information, see [Requirements for labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements) in the Resource Manager documentation.",
            "type": "object"
          },
          "offset": {
            "description": "A 0-indexed integer that specifies the current offset (that is, starting result location, amongst the Products deemed by the API as relevant) in search results. This field is only considered if page_token is unset. If this field is negative, an INVALID_ARGUMENT is returned.",
            "format": "int32",
            "type": "integer"
          },
          "orderBy": {
            "description": "The order in which products are returned. Products can be ordered by a field in an Product object. Leave it unset if ordered by relevance. OrderBy expression is case-sensitive. For more information, see [Order](https://cloud.google.com/retail/docs/filter-and-order#order). If this field is unrecognizable, an INVALID_ARGUMENT is returned.",
            "type": "string"
          },
          "pageCategories": {
            "description": "The categories associated with a category page. Must be set for category navigation queries to achieve good search quality. The format should be the same as UserEvent.page_categories; To represent full path of category, use '>' sign to separate different hierarchies. If '>' is part of the category name, replace it with other character(s). Category pages include special pages such as sales or promotions. For instance, a special sale page may have the category hierarchy: \"pageCategories\" : [\"Sales > 2017 Black Friday Deals\"].",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "pageSize": {
            "description": "Maximum number of Products to return. If unspecified, defaults to a reasonable value. The maximum allowed value is 120. Values above 120 will be coerced to 120. If this field is negative, an INVALID_ARGUMENT is returned.",
            "format": "int32",
            "type": "integer"
          },
          "pageToken": {
            "description": "A page token SearchResponse.next_page_token, received from a previous SearchService.Search call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to SearchService.Search must match the call that provided the page token. Otherwise, an INVALID_ARGUMENT error is returned.",
            "type": "string"
          },
          "personalizationSpec": {
            "$ref": "#/$defs/GoogleCloudRetailV2alphaSearchRequestPersonalizationSpec"
          },
          "query": {
            "description": "Raw search query. If this field is empty, the request is considered a category browsing request and returned results are based on filter and page_categories.",
            "type": "string"
          },
          "queryExpansionSpec": {
            "$ref": "#/$defs/GoogleCloudRetailV2alphaSearchRequestQueryExpansionSpec"
          },
          "relevanceThreshold": {
            "description": "The relevance threshold of the search results. Defaults to RelevanceThreshold.HIGH, which means only the most relevant results are shown, and the least number of results are returned. For more information, see [Adjust result size](https://cloud.google.com/retail/docs/result-size#relevance_thresholding).",
            "enum": [
              "RELEVANCE_THRESHOLD_UNSPECIFIED",
              "HIGH",
              "MEDIUM",
              "LOW",
              "LOWEST"
            ],
            "type": "string"
          },
          "searchMode": {
            "description": "The search mode of the search request. If not specified, a single search request triggers both product search and faceted search.",
            "enum": [
              "SEARCH_MODE_UNSPECIFIED",
              "PRODUCT_SEARCH_ONLY",
              "FACETED_SEARCH_ONLY"
            ],
            "type": "string"
          },
          "spellCorrectionSpec": {
            "$ref": "#/$defs/GoogleCloudRetailV2alphaSearchRequestSpellCorrectionSpec"
          },
          "userInfo": {
            "$ref": "#/$defs/GoogleCloudRetailV2alphaUserInfo"
          },
          "variantRollupKeys": {
            "description": "The keys to fetch and rollup the matching variant Products attributes, FulfillmentInfo or LocalInventorys attributes. The attributes from all the matching variant Products or LocalInventorys are merged and de-duplicated. Notice that rollup attributes will lead to extra query latency. Maximum number of keys is 30. For FulfillmentInfo, a fulfillment type and a fulfillment ID must be provided in the format of \"fulfillmentType.fulfillmentId\". E.g., in \"pickupInStore.store123\", \"pickupInStore\" is fulfillment type and \"store123\" is the store ID. Supported keys are: * colorFamilies * price * originalPrice * discount * variantId * inventory(place_id,price) * inventory(place_id,original_price) * inventory(place_id,attributes.key), where key is any key in the Product.local_inventories.attributes map. * attributes.key, where key is any key in the Product.attributes map. * pickupInStore.id, where id is any FulfillmentInfo.place_ids for FulfillmentInfo.type \"pickup-in-store\". * shipToStore.id, where id is any FulfillmentInfo.place_ids for FulfillmentInfo.type \"ship-to-store\". * sameDayDelivery.id, where id is any FulfillmentInfo.place_ids for FulfillmentInfo.type \"same-day-delivery\". * nextDayDelivery.id, where id is any FulfillmentInfo.place_ids for FulfillmentInfo.type \"next-day-delivery\". * customFulfillment1.id, where id is any FulfillmentInfo.place_ids for FulfillmentInfo.type \"custom-type-1\". * customFulfillment2.id, where id is any FulfillmentInfo.place_ids for FulfillmentInfo.type \"custom-type-2\". * customFulfillment3.id, where id is any FulfillmentInfo.place_ids for FulfillmentInfo.type \"custom-type-3\". * customFulfillment4.id, where id is any FulfillmentInfo.place_ids for FulfillmentInfo.type \"custom-type-4\". * customFulfillment5.id, where id is any FulfillmentInfo.place_ids for FulfillmentInfo.type \"custom-type-5\". If this field is set to an invalid value other than these, an INVALID_ARGUMENT error is returned.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "visitorId": {
            "description": "Required. A unique identifier for tracking visitors. For example, this could be implemented with an HTTP cookie, which should be able to uniquely identify a visitor on a single device. This unique identifier should not change if the visitor logs in or out of the website. This should be the same identifier as UserEvent.visitor_id. The field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudRetailV2alphaSearchRequestBoostSpec": {
        "description": "Boost specification to boost certain items.",
        "properties": {
          "conditionBoostSpecs": {
            "description": "Condition boost specifications. If a product matches multiple conditions in the specifictions, boost scores from these specifications are all applied and combined in a non-linear way. Maximum number of specifications is 20.",
            "items": {
              "$ref": "#/$defs/GoogleCloudRetailV2alphaSearchRequestBoostSpecConditionBoostSpec"
            },
            "type": "array"
          },
          "skipBoostSpecValidation": {
            "description": "Whether to skip boostspec validation. If this field is set to true, invalid BoostSpec.condition_boost_specs will be ignored and valid BoostSpec.condition_boost_specs will still be applied.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GoogleCloudRetailV2alphaSearchRequestBoostSpecConditionBoostSpec": {
        "description": "Boost applies to products which match a condition.",
        "properties": {
          "boost": {
            "description": "Strength of the condition boost, which should be in [-1, 1]. Negative boost means demotion. Default is 0.0. Setting to 1.0 gives the item a big promotion. However, it does not necessarily mean that the boosted item will be the top result at all times, nor that other items will be excluded. Results could still be shown even when none of them matches the condition. And results that are significantly more relevant to the search query can still trump your heavily favored but irrelevant items. Setting to -1.0 gives the item a big demotion. However, results that are deeply relevant might still be shown. The item will have an upstream battle to get a fairly high ranking, but it is not blocked out completely. Setting to 0.0 means no boost applied. The boosting condition is ignored.",
            "format": "float",
            "type": "number"
          },
          "condition": {
            "description": "An expression which specifies a boost condition. The syntax and supported fields are the same as a filter expression. See SearchRequest.filter for detail syntax and limitations. Examples: * To boost products with product ID \"product_1\" or \"product_2\", and color \"Red\" or \"Blue\": * (id: ANY(\"product_1\", \"product_2\")) AND (colorFamilies: ANY(\"Red\",\"Blue\"))",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudRetailV2alphaSearchRequestDynamicFacetSpec": {
        "description": "The specifications of dynamically generated facets.",
        "properties": {
          "mode": {
            "description": "Mode of the DynamicFacet feature. Defaults to Mode.DISABLED if it's unset.",
            "enum": [
              "MODE_UNSPECIFIED",
              "DISABLED",
              "ENABLED"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudRetailV2alphaSearchRequestFacetSpec": {
        "description": "A facet specification to perform faceted search.",
        "properties": {
          "enableDynamicPosition": {
            "description": "Enables dynamic position for this facet. If set to true, the position of this facet among all facets in the response is determined by Google Retail Search. It is ordered together with dynamic facets if dynamic facets is enabled. If set to false, the position of this facet in the response is the same as in the request, and it is ranked before the facets with dynamic position enable and all dynamic facets. For example, you may always want to have rating facet returned in the response, but it's not necessarily to always display the rating facet at the top. In that case, you can set enable_dynamic_position to true so that the position of rating facet in response is determined by Google Retail Search. Another example, assuming you have the following facets in the request: * \"rating\", enable_dynamic_position = true * \"price\", enable_dynamic_position = false * \"brands\", enable_dynamic_position = false And also you have a dynamic facets enable, which generates a facet \"gender\". Then, the final order of the facets in the response can be (\"price\", \"brands\", \"rating\", \"gender\") or (\"price\", \"brands\", \"gender\", \"rating\") depends on how Google Retail Search orders \"gender\" and \"rating\" facets. However, notice that \"price\" and \"brands\" are always ranked at first and second position because their enable_dynamic_position values are false.",
            "type": "boolean"
          },
          "excludedFilterKeys": {
            "description": "List of keys to exclude when faceting. By default, FacetKey.key is not excluded from the filter unless it is listed in this field. Listing a facet key in this field allows its values to appear as facet results, even when they are filtered out of search results. Using this field does not affect what search results are returned. For example, suppose there are 100 products with the color facet \"Red\" and 200 products with the color facet \"Blue\". A query containing the filter \"colorFamilies:ANY(\"Red\")\" and having \"colorFamilies\" as FacetKey.key would by default return only \"Red\" products in the search results, and also return \"Red\" with count 100 as the only color facet. Although there are also blue products available, \"Blue\" would not be shown as an available facet value. If \"colorFamilies\" is listed in \"excludedFilterKeys\", then the query returns the facet values \"Red\" with count 100 and \"Blue\" with count 200, because the \"colorFamilies\" key is now excluded from the filter. Because this field doesn't affect search results, the search results are still correctly filtered to return only \"Red\" products. A maximum of 100 values are allowed. Otherwise, an INVALID_ARGUMENT error is returned.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "facetKey": {
            "$ref": "#/$defs/GoogleCloudRetailV2alphaSearchRequestFacetSpecFacetKey"
          },
          "limit": {
            "description": "Maximum of facet values that should be returned for this facet. If unspecified, defaults to 50. The maximum allowed value is 300. Values above 300 will be coerced to 300. If this field is negative, an INVALID_ARGUMENT is returned.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GoogleCloudRetailV2alphaSearchRequestFacetSpecFacetKey": {
        "description": "Specifies how a facet is computed.",
        "properties": {
          "caseInsensitive": {
            "description": "True to make facet keys case insensitive when getting faceting values with prefixes or contains; false otherwise.",
            "type": "boolean"
          },
          "contains": {
            "description": "Only get facet values that contains the given strings. For example, suppose \"categories\" has three values \"Women > Shoe\", \"Women > Dress\" and \"Men > Shoe\". If set \"contains\" to \"Shoe\", the \"categories\" facet gives only \"Women > Shoe\" and \"Men > Shoe\". Only supported on textual fields. Maximum is 10.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "intervals": {
            "description": "Set only if values should be bucketized into intervals. Must be set for facets with numerical values. Must not be set for facet with text values. Maximum number of intervals is 40. For all numerical facet keys that appear in the list of products from the catalog, the percentiles 0, 10, 30, 50, 70, 90, and 100 are computed from their distribution weekly. If the model assigns a high score to a numerical facet key and its intervals are not specified in the search request, these percentiles become the bounds for its intervals and are returned in the response. If the facet key intervals are specified in the request, then the specified intervals are returned instead.",
            "items": {
              "$ref": "#/$defs/GoogleCloudRetailV2alphaInterval"
            },
            "type": "array"
          },
          "key": {
            "description": "Required. Supported textual and numerical facet keys in Product object, over which the facet values are computed. Facet key is case-sensitive. Allowed facet keys when FacetKey.query is not specified: * textual_field = * \"brands\" * \"categories\" * \"genders\" * \"ageGroups\" * \"availability\" * \"colorFamilies\" * \"colors\" * \"sizes\" * \"materials\" * \"patterns\" * \"conditions\" * \"attributes.key\" * \"pickupInStore\" * \"shipToStore\" * \"sameDayDelivery\" * \"nextDayDelivery\" * \"customFulfillment1\" * \"customFulfillment2\" * \"customFulfillment3\" * \"customFulfillment4\" * \"customFulfillment5\" * \"inventory(place_id,attributes.key)\" * numerical_field = * \"price\" * \"discount\" * \"rating\" * \"ratingCount\" * \"attributes.key\" * \"inventory(place_id,price)\" * \"inventory(place_id,original_price)\" * \"inventory(place_id,attributes.key)\"",
            "type": "string"
          },
          "orderBy": {
            "description": "The order in which SearchResponse.Facet.values are returned. Allowed values are: * \"count desc\", which means order by SearchResponse.Facet.values.count descending. * \"value desc\", which means order by SearchResponse.Facet.values.value descending. Only applies to textual facets. If not set, textual values are sorted in [natural order](https://en.wikipedia.org/wiki/Natural_sort_order); numerical intervals are sorted in the order given by FacetSpec.FacetKey.intervals; FulfillmentInfo.place_ids are sorted in the order given by FacetSpec.FacetKey.restricted_values.",
            "type": "string"
          },
          "prefixes": {
            "description": "Only get facet values that start with the given string prefix. For example, suppose \"categories\" has three values \"Women > Shoe\", \"Women > Dress\" and \"Men > Shoe\". If set \"prefixes\" to \"Women\", the \"categories\" facet gives only \"Women > Shoe\" and \"Women > Dress\". Only supported on textual fields. Maximum is 10.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "query": {
            "description": "The query that is used to compute facet for the given facet key. When provided, it overrides the default behavior of facet computation. The query syntax is the same as a filter expression. See SearchRequest.filter for detail syntax and limitations. Notice that there is no limitation on FacetKey.key when query is specified. In the response, SearchResponse.Facet.values.value is always \"1\" and SearchResponse.Facet.values.count is the number of results that match the query. For example, you can set a customized facet for \"shipToStore\", where FacetKey.key is \"customizedShipToStore\", and FacetKey.query is \"availability: ANY(\\\"IN_STOCK\\\") AND shipToStore: ANY(\\\"123\\\")\". Then the facet counts the products that are both in stock and ship to store \"123\".",
            "type": "string"
          },
          "restrictedValues": {
            "description": "Only get facet for the given restricted values. For example, when using \"pickupInStore\" as key and set restricted values to [\"store123\", \"store456\"], only facets for \"store123\" and \"store456\" are returned. Only supported on predefined textual fields, custom textual attributes and fulfillments. Maximum is 20. Must be set for the fulfillment facet keys: * pickupInStore * shipToStore * sameDayDelivery * nextDayDelivery * customFulfillment1 * customFulfillment2 * customFulfillment3 * customFulfillment4 * customFulfillment5",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "returnMinMax": {
            "description": "Returns the min and max value for each numerical facet intervals. Ignored for textual facets.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GoogleCloudRetailV2alphaInterval": {
        "description": "A floating point interval.",
        "properties": {
          "exclusiveMaximum": {
            "description": "Exclusive upper bound.",
            "format": "double",
            "type": "number"
          },
          "exclusiveMinimum": {
            "description": "Exclusive lower bound.",
            "format": "double",
            "type": "number"
          },
          "maximum": {
            "description": "Inclusive upper bound.",
            "format": "double",
            "type": "number"
          },
          "minimum": {
            "description": "Inclusive lower bound.",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "GoogleCloudRetailV2alphaSearchRequestPersonalizationSpec": {
        "description": "The specification for personalization.",
        "properties": {
          "mode": {
            "description": "Defaults to Mode.AUTO.",
            "enum": [
              "MODE_UNSPECIFIED",
              "AUTO",
              "DISABLED"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudRetailV2alphaSearchRequestQueryExpansionSpec": {
        "description": "Specification to determine under which conditions query expansion should occur.",
        "properties": {
          "condition": {
            "description": "The condition under which query expansion should occur. Default to Condition.DISABLED.",
            "enum": [
              "CONDITION_UNSPECIFIED",
              "DISABLED",
              "AUTO"
            ],
            "type": "string"
          },
          "pinUnexpandedResults": {
            "description": "Whether to pin unexpanded results. If this field is set to true, unexpanded products are always at the top of the search results, followed by the expanded results.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GoogleCloudRetailV2alphaSearchRequestSpellCorrectionSpec": {
        "description": "The specification for query spell correction.",
        "properties": {
          "mode": {
            "description": "The mode under which spell correction should take effect to replace the original search query. Default to Mode.AUTO.",
            "enum": [
              "MODE_UNSPECIFIED",
              "SUGGESTION_ONLY",
              "AUTO"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudRetailV2alphaUserInfo": {
        "description": "Information of an end user.",
        "properties": {
          "directUserRequest": {
            "description": "True if the request is made directly from the end user, in which case the ip_address and user_agent can be populated from the HTTP request. This flag should be set only if the API request is made directly from the end user such as a mobile app (and not if a gateway or a server is processing and pushing the user events). This should not be set when using the JavaScript tag in UserEventService.CollectUserEvent.",
            "type": "boolean"
          },
          "ipAddress": {
            "description": "The end user's IP address. This field is used to extract location information for personalization. This field must be either an IPv4 address (e.g. \"104.133.9.80\") or an IPv6 address (e.g. \"2001:0db8:85a3:0000:0000:8a2e:0370:7334\"). Otherwise, an INVALID_ARGUMENT error is returned. This should not be set when: * setting SearchRequest.user_info. * using the JavaScript tag in UserEventService.CollectUserEvent or if direct_user_request is set.",
            "type": "string"
          },
          "userAgent": {
            "description": "User agent as included in the HTTP header. Required for getting SearchResponse.sponsored_results. The field must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. This should not be set when using the client side event reporting with GTM or JavaScript tag in UserEventService.CollectUserEvent or if direct_user_request is set.",
            "type": "string"
          },
          "userId": {
            "description": "Highly recommended for logged-in users. Unique identifier for logged-in user, such as a user name. Don't set for anonymous users. Always use a hashed value for this ID. Don't set the field to the same fixed ID for different users. This mixes the event history of those users together, which results in degraded model quality. The field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://retail.googleapis.com//v2alpha/{placement}:search{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Response message for SearchService.Search method.",
        "**Key properties:**",
        {
          "$ul": [
            "**appliedControls**: The fully qualified resource name of applied [controls](https://cloud.google.com/retail/docs/serving-control-rules).",
            "**attributionToken**: A unique search token. This should be included in the UserEvent logs resulting from this search, which enables accurate attribution of search model performance.",
            "**correctedQuery**: Contains the spell corrected query, if found. If the spell correction type is AUTOMATIC, then the search results are based on corrected_query. Otherwise the original query is used for search.",
            "**experimentInfo**: Metadata related to A/B testing Experiment associated with this response. Only exists when an experiment is triggered.",
            "**facets**: Results of facets requested by user.",
            "**invalidConditionBoostSpecs**: The invalid SearchRequest.BoostSpec.condition_boost_specs that are not applied during serving.",
            "**nextPageToken**: A token that can be sent as SearchRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages.",
            [
              "**queryExpansionInfo**: Information describing query expansion including whether expansion has occurred.",
              {
                "$ul": [
                  "**expandedQuery**: Bool describing whether query expansion has occurred.",
                  "**pinnedResultCount**: Number of pinned results. This field will only be set when expansion happens and SearchRequest.QueryExpansionSpec.pin_unexpanded_results is set to true."
                ]
              }
            ],
            "**redirectUri**: The URI of a customer-defined redirect page. If redirect action is triggered, no search is performed, and only redirect_uri and attribution_token are set in the response.",
            "**results**: A list of matched items. The order represents the ranking.",
            "**totalSize**: The estimated total count of matched items irrespective of pagination. The count of results returned by pagination may be less than the total_size that matches."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
