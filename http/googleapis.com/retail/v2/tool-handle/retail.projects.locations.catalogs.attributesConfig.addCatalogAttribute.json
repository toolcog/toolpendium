{
  "name": "retail_projects_locations_catalogs_attributesConfig_addCatalogAttribute",
  "description": "Adds the specified CatalogAttribute to the AttributesConfig. If the CatalogAttribute to add already exists, an ALREADY_EXISTS error is returned.",
  "parameters": {
    "type": "object",
    "properties": {
      "attributesConfig": {
        "type": "string",
        "description": "Required. Full AttributesConfig resource name. Format: `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/attributesConfig`"
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleCloudRetailV2AddCatalogAttributeRequest"
      }
    },
    "required": [
      "attributesConfig"
    ],
    "$defs": {
      "GoogleCloudRetailV2AddCatalogAttributeRequest": {
        "description": "Request for CatalogService.AddCatalogAttribute method.",
        "properties": {
          "catalogAttribute": {
            "$ref": "#/$defs/GoogleCloudRetailV2CatalogAttribute"
          }
        },
        "type": "object"
      },
      "GoogleCloudRetailV2CatalogAttribute": {
        "description": "Catalog level attribute config for an attribute. For example, if customers want to enable/disable facet for a specific attribute.",
        "properties": {
          "dynamicFacetableOption": {
            "description": "If DYNAMIC_FACETABLE_ENABLED, attribute values are available for dynamic facet. Could only be DYNAMIC_FACETABLE_DISABLED if CatalogAttribute.indexable_option is INDEXABLE_DISABLED. Otherwise, an INVALID_ARGUMENT error is returned. Must be specified, otherwise throws INVALID_FORMAT error.",
            "enum": [
              "DYNAMIC_FACETABLE_OPTION_UNSPECIFIED",
              "DYNAMIC_FACETABLE_ENABLED",
              "DYNAMIC_FACETABLE_DISABLED"
            ],
            "type": "string"
          },
          "exactSearchableOption": {
            "description": "If EXACT_SEARCHABLE_ENABLED, attribute values will be exact searchable. This property only applies to textual custom attributes and requires indexable set to enabled to enable exact-searchable. If unset, the server behavior defaults to EXACT_SEARCHABLE_DISABLED.",
            "enum": [
              "EXACT_SEARCHABLE_OPTION_UNSPECIFIED",
              "EXACT_SEARCHABLE_ENABLED",
              "EXACT_SEARCHABLE_DISABLED"
            ],
            "type": "string"
          },
          "facetConfig": {
            "$ref": "#/$defs/GoogleCloudRetailV2CatalogAttributeFacetConfig"
          },
          "inUse": {
            "description": "Output only. Indicates whether this attribute has been used by any products. `True` if at least one Product is using this attribute in Product.attributes. Otherwise, this field is `False`. CatalogAttribute can be pre-loaded by using CatalogService.AddCatalogAttribute, CatalogService.ImportCatalogAttributes, or CatalogService.UpdateAttributesConfig APIs. This field is `False` for pre-loaded CatalogAttributes. Only pre-loaded catalog attributes that are neither in use by products nor predefined can be deleted. Catalog attributes that are either in use by products or are predefined attributes cannot be deleted; however, their configuration properties will reset to default values upon removal request. After catalog changes, it takes about 10 minutes for this field to update.",
            "readOnly": true,
            "type": "boolean"
          },
          "indexableOption": {
            "description": "When AttributesConfig.attribute_config_level is CATALOG_LEVEL_ATTRIBUTE_CONFIG, if INDEXABLE_ENABLED attribute values are indexed so that it can be filtered, faceted, or boosted in SearchService.Search. Must be specified when AttributesConfig.attribute_config_level is CATALOG_LEVEL_ATTRIBUTE_CONFIG, otherwise throws INVALID_FORMAT error.",
            "enum": [
              "INDEXABLE_OPTION_UNSPECIFIED",
              "INDEXABLE_ENABLED",
              "INDEXABLE_DISABLED"
            ],
            "type": "string"
          },
          "key": {
            "description": "Required. Attribute name. For example: `color`, `brands`, `attributes.custom_attribute`, such as `attributes.xyz`. To be indexable, the attribute name can contain only alpha-numeric characters and underscores. For example, an attribute named `attributes.abc_xyz` can be indexed, but an attribute named `attributes.abc-xyz` cannot be indexed. If the attribute key starts with `attributes.`, then the attribute is a custom attribute. Attributes such as `brands`, `patterns`, and `title` are built-in and called system attributes.",
            "type": "string"
          },
          "retrievableOption": {
            "description": "If RETRIEVABLE_ENABLED, attribute values are retrievable in the search results. If unset, the server behavior defaults to RETRIEVABLE_DISABLED.",
            "enum": [
              "RETRIEVABLE_OPTION_UNSPECIFIED",
              "RETRIEVABLE_ENABLED",
              "RETRIEVABLE_DISABLED"
            ],
            "type": "string"
          },
          "searchableOption": {
            "description": "When AttributesConfig.attribute_config_level is CATALOG_LEVEL_ATTRIBUTE_CONFIG, if SEARCHABLE_ENABLED, attribute values are searchable by text queries in SearchService.Search. If SEARCHABLE_ENABLED but attribute type is numerical, attribute values will not be searchable by text queries in SearchService.Search, as there are no text values associated to numerical attributes. Must be specified, when AttributesConfig.attribute_config_level is CATALOG_LEVEL_ATTRIBUTE_CONFIG, otherwise throws INVALID_FORMAT error.",
            "enum": [
              "SEARCHABLE_OPTION_UNSPECIFIED",
              "SEARCHABLE_ENABLED",
              "SEARCHABLE_DISABLED"
            ],
            "type": "string"
          },
          "type": {
            "description": "Output only. The type of this attribute. This is derived from the attribute in Product.attributes.",
            "enum": [
              "UNKNOWN",
              "TEXTUAL",
              "NUMERICAL"
            ],
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudRetailV2CatalogAttributeFacetConfig": {
        "description": "Possible options for the facet that corresponds to the current attribute config.",
        "properties": {
          "facetIntervals": {
            "description": "If you don't set the facet SearchRequest.FacetSpec.FacetKey.intervals in the request to a numerical attribute, then we use the computed intervals with rounded bounds obtained from all its product numerical attribute values. The computed intervals might not be ideal for some attributes. Therefore, we give you the option to overwrite them with the facet_intervals field. The maximum of facet intervals per CatalogAttribute is 40. Each interval must have a lower bound or an upper bound. If both bounds are provided, then the lower bound must be smaller or equal than the upper bound.",
            "items": {
              "$ref": "#/$defs/GoogleCloudRetailV2Interval"
            },
            "type": "array"
          },
          "ignoredFacetValues": {
            "description": "Each instance represents a list of attribute values to ignore as facet values for a specific time range. The maximum number of instances per CatalogAttribute is 25.",
            "items": {
              "$ref": "#/$defs/GoogleCloudRetailV2CatalogAttributeFacetConfigIgnoredFacetValues"
            },
            "type": "array"
          },
          "mergedFacet": {
            "$ref": "#/$defs/GoogleCloudRetailV2CatalogAttributeFacetConfigMergedFacet"
          },
          "mergedFacetValues": {
            "description": "Each instance replaces a list of facet values by a merged facet value. If a facet value is not in any list, then it will stay the same. To avoid conflicts, only paths of length 1 are accepted. In other words, if \"dark_blue\" merged into \"BLUE\", then the latter can't merge into \"blues\" because this would create a path of length 2. The maximum number of instances of MergedFacetValue per CatalogAttribute is 100. This feature is available only for textual custom attributes.",
            "items": {
              "$ref": "#/$defs/GoogleCloudRetailV2CatalogAttributeFacetConfigMergedFacetValue"
            },
            "type": "array"
          },
          "rerankConfig": {
            "$ref": "#/$defs/GoogleCloudRetailV2CatalogAttributeFacetConfigRerankConfig"
          }
        },
        "type": "object"
      },
      "GoogleCloudRetailV2Interval": {
        "description": "A floating point interval.",
        "properties": {
          "exclusiveMaximum": {
            "description": "Exclusive upper bound.",
            "format": "double",
            "type": "number"
          },
          "exclusiveMinimum": {
            "description": "Exclusive lower bound.",
            "format": "double",
            "type": "number"
          },
          "maximum": {
            "description": "Inclusive upper bound.",
            "format": "double",
            "type": "number"
          },
          "minimum": {
            "description": "Inclusive lower bound.",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "GoogleCloudRetailV2CatalogAttributeFacetConfigIgnoredFacetValues": {
        "description": "Facet values to ignore on facets during the specified time range for the given SearchResponse.Facet.key attribute.",
        "properties": {
          "endTime": {
            "description": "If start time is empty and end time is not empty, then ignore these facet values before end time.",
            "format": "google-datetime",
            "type": "string"
          },
          "startTime": {
            "description": "Time range for the current list of facet values to ignore. If multiple time ranges are specified for an facet value for the current attribute, consider all of them. If both are empty, ignore always. If start time and end time are set, then start time must be before end time. If start time is not empty and end time is empty, then will ignore these facet values after the start time.",
            "format": "google-datetime",
            "type": "string"
          },
          "values": {
            "description": "List of facet values to ignore for the following time range. The facet values are the same as the attribute values. There is a limit of 10 values per instance of IgnoredFacetValues. Each value can have at most 128 characters.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudRetailV2CatalogAttributeFacetConfigMergedFacet": {
        "description": "The current facet key (i.e. attribute config) maps into the merged_facet_key. A facet key can have at most one child. The current facet key and the merged facet key need both to be textual custom attributes or both numerical custom attributes (same type).",
        "properties": {
          "mergedFacetKey": {
            "description": "The merged facet key should be a valid facet key that is different than the facet key of the current catalog attribute. We refer this is merged facet key as the child of the current catalog attribute. This merged facet key can't be a parent of another facet key (i.e. no directed path of length 2). This merged facet key needs to be either a textual custom attribute or a numerical custom attribute.",
            "type": "string"
          },
          "mergedFacetValues": {
            "deprecated": true,
            "description": "Each instance is a list of facet values that map into the same (possibly different) merged facet value. For the current attribute config, each facet value should map to at most one merged facet value.",
            "items": {
              "$ref": "#/$defs/GoogleCloudRetailV2CatalogAttributeFacetConfigMergedFacetValue"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudRetailV2CatalogAttributeFacetConfigMergedFacetValue": {
        "description": "Replaces a set of textual facet values by the same (possibly different) merged facet value. Each facet value should appear at most once as a value per CatalogAttribute. This feature is available only for textual custom attributes.",
        "properties": {
          "mergedValue": {
            "description": "All the previous values are replaced by this merged facet value. This merged_value must be non-empty and can have up to 128 characters.",
            "type": "string"
          },
          "values": {
            "description": "All the facet values that are replaces by the same merged_value that follows. The maximum number of values per MergedFacetValue is 25. Each value can have up to 128 characters.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudRetailV2CatalogAttributeFacetConfigRerankConfig": {
        "description": "Options to rerank based on facet values engaged by the user for the current key. That key needs to be a custom textual key and facetable. To use this control, you also need to pass all the facet keys engaged by the user in the request using the field [SearchRequest.FacetSpec]. In particular, if you don't pass the facet keys engaged that you want to rerank on, this control won't be effective. Moreover, to obtain better results, the facet values that you want to rerank on should be close to English (ideally made of words, underscores, and spaces).",
        "properties": {
          "facetValues": {
            "description": "If empty, rerank on all facet values for the current key. Otherwise, will rerank on the facet values from this list only.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "rerankFacet": {
            "description": "If set to true, then we also rerank the dynamic facets based on the facet values engaged by the user for the current attribute key during serving.",
            "type": "boolean"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://retail.googleapis.com//v2/{attributesConfig}:addCatalogAttribute{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Catalog level attribute config.",
        "**Key properties:**",
        {
          "$ul": [
            "**attributeConfigLevel**: Output only. The AttributeConfigLevel used for this catalog.",
            "**catalogAttributes**: Enable attribute(s) config at catalog level. For example, indexable, dynamic_facetable, or searchable for each attribute. The key is catalog attribute's name. For example: `color`, `brands`, `attributes.custom_attribute`, such as `attributes.xyz`. The maximum number of catalog attributes allowed in a request is 1000.",
            "**name**: Required. Immutable. The fully qualified resource name of the attribute config. Format: `projects/*/locations/*/catalogs/*/attributesConfig`"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
