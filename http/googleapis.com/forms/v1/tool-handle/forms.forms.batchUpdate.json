{
  "name": "forms_forms_batchUpdate",
  "description": "Change the form with a batch of updates.",
  "parameters": {
    "type": "object",
    "properties": {
      "formId": {
        "type": "string",
        "description": "Required. The form ID."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/BatchUpdateFormRequest"
      }
    },
    "required": [
      "formId"
    ],
    "$defs": {
      "BatchUpdateFormRequest": {
        "description": "A batch of updates to perform on a form. All the specified updates are made or none of them are.",
        "properties": {
          "includeFormInResponse": {
            "description": "Whether to return an updated version of the model in the response.",
            "type": "boolean"
          },
          "requests": {
            "description": "Required. The update requests of this batch.",
            "items": {
              "$ref": "#/$defs/Request"
            },
            "type": "array"
          },
          "writeControl": {
            "$ref": "#/$defs/WriteControl"
          }
        },
        "type": "object"
      },
      "Request": {
        "description": "The kinds of update requests that can be made.",
        "properties": {
          "createItem": {
            "$ref": "#/$defs/CreateItemRequest"
          },
          "deleteItem": {
            "$ref": "#/$defs/DeleteItemRequest"
          },
          "moveItem": {
            "$ref": "#/$defs/MoveItemRequest"
          },
          "updateFormInfo": {
            "$ref": "#/$defs/UpdateFormInfoRequest"
          },
          "updateItem": {
            "$ref": "#/$defs/UpdateItemRequest"
          },
          "updateSettings": {
            "$ref": "#/$defs/UpdateSettingsRequest"
          }
        },
        "type": "object"
      },
      "CreateItemRequest": {
        "description": "Create an item in a form.",
        "properties": {
          "item": {
            "$ref": "#/$defs/Item"
          },
          "location": {
            "$ref": "#/$defs/Location"
          }
        },
        "type": "object"
      },
      "Item": {
        "description": "A single item of the form. `kind` defines which kind of item it is.",
        "properties": {
          "description": {
            "description": "The description of the item.",
            "type": "string"
          },
          "imageItem": {
            "$ref": "#/$defs/ImageItem"
          },
          "itemId": {
            "description": "The item ID. On creation, it can be provided but the ID must not be already used in the form. If not provided, a new ID is assigned.",
            "type": "string"
          },
          "pageBreakItem": {
            "$ref": "#/$defs/PageBreakItem"
          },
          "questionGroupItem": {
            "$ref": "#/$defs/QuestionGroupItem"
          },
          "questionItem": {
            "$ref": "#/$defs/QuestionItem"
          },
          "textItem": {
            "$ref": "#/$defs/TextItem"
          },
          "title": {
            "description": "The title of the item.",
            "type": "string"
          },
          "videoItem": {
            "$ref": "#/$defs/VideoItem"
          }
        },
        "type": "object"
      },
      "ImageItem": {
        "description": "An item containing an image.",
        "properties": {
          "image": {
            "$ref": "#/$defs/Image"
          }
        },
        "type": "object"
      },
      "Image": {
        "description": "Data representing an image.",
        "properties": {
          "altText": {
            "description": "A description of the image that is shown on hover and read by screenreaders.",
            "type": "string"
          },
          "contentUri": {
            "description": "Output only. A URI from which you can download the image; this is valid only for a limited time.",
            "readOnly": true,
            "type": "string"
          },
          "properties": {
            "$ref": "#/$defs/MediaProperties"
          },
          "sourceUri": {
            "description": "Input only. The source URI is the URI used to insert the image. The source URI can be empty when fetched.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MediaProperties": {
        "description": "Properties of the media.",
        "properties": {
          "alignment": {
            "description": "Position of the media.",
            "enum": [
              "ALIGNMENT_UNSPECIFIED",
              "LEFT",
              "RIGHT",
              "CENTER"
            ],
            "type": "string"
          },
          "width": {
            "description": "The width of the media in pixels. When the media is displayed, it is scaled to the smaller of this value or the width of the displayed form. The original aspect ratio of the media is preserved. If a width is not specified when the media is added to the form, it is set to the width of the media source. Width must be between 0 and 740, inclusive. Setting width to 0 or unspecified is only permitted when updating the media source.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "PageBreakItem": {
        "description": "A page break. The title and description of this item are shown at the top of the new page.",
        "properties": {},
        "type": "object"
      },
      "QuestionGroupItem": {
        "description": "Defines a question that comprises multiple questions grouped together.",
        "properties": {
          "grid": {
            "$ref": "#/$defs/Grid"
          },
          "image": {
            "$ref": "#/$defs/Image"
          },
          "questions": {
            "description": "Required. A list of questions that belong in this question group. A question must only belong to one group. The `kind` of the group may affect what types of questions are allowed.",
            "items": {
              "$ref": "#/$defs/Question"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Grid": {
        "description": "A grid of choices (radio or check boxes) with each row constituting a separate question. Each row has the same choices, which are shown as the columns.",
        "properties": {
          "columns": {
            "$ref": "#/$defs/ChoiceQuestion"
          },
          "shuffleQuestions": {
            "description": "If `true`, the questions are randomly ordered. In other words, the rows appear in a different order for every respondent.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ChoiceQuestion": {
        "description": "A radio/checkbox/dropdown question.",
        "properties": {
          "options": {
            "description": "Required. List of options that a respondent must choose from.",
            "items": {
              "$ref": "#/$defs/Option"
            },
            "type": "array"
          },
          "shuffle": {
            "description": "Whether the options should be displayed in random order for different instances of the quiz. This is often used to prevent cheating by respondents who might be looking at another respondent's screen, or to address bias in a survey that might be introduced by always putting the same options first or last.",
            "type": "boolean"
          },
          "type": {
            "description": "Required. The type of choice question.",
            "enum": [
              "CHOICE_TYPE_UNSPECIFIED",
              "RADIO",
              "CHECKBOX",
              "DROP_DOWN"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "Option": {
        "description": "An option for a Choice question.",
        "properties": {
          "goToAction": {
            "description": "Section navigation type.",
            "enum": [
              "GO_TO_ACTION_UNSPECIFIED",
              "NEXT_SECTION",
              "RESTART_FORM",
              "SUBMIT_FORM"
            ],
            "type": "string"
          },
          "goToSectionId": {
            "description": "Item ID of section header to go to.",
            "type": "string"
          },
          "image": {
            "$ref": "#/$defs/Image"
          },
          "isOther": {
            "description": "Whether the option is \"other\". Currently only applies to `RADIO` and `CHECKBOX` choice types, but is not allowed in a QuestionGroupItem.",
            "type": "boolean"
          },
          "value": {
            "description": "Required. The choice as presented to the user.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Question": {
        "description": "Any question. The specific type of question is known by its `kind`.",
        "properties": {
          "choiceQuestion": {
            "$ref": "#/$defs/ChoiceQuestion"
          },
          "dateQuestion": {
            "$ref": "#/$defs/DateQuestion"
          },
          "fileUploadQuestion": {
            "$ref": "#/$defs/FileUploadQuestion"
          },
          "grading": {
            "$ref": "#/$defs/Grading"
          },
          "questionId": {
            "description": "Read only. The question ID. On creation, it can be provided but the ID must not be already used in the form. If not provided, a new ID is assigned.",
            "type": "string"
          },
          "required": {
            "description": "Whether the question must be answered in order for a respondent to submit their response.",
            "type": "boolean"
          },
          "rowQuestion": {
            "$ref": "#/$defs/RowQuestion"
          },
          "scaleQuestion": {
            "$ref": "#/$defs/ScaleQuestion"
          },
          "textQuestion": {
            "$ref": "#/$defs/TextQuestion"
          },
          "timeQuestion": {
            "$ref": "#/$defs/TimeQuestion"
          }
        },
        "type": "object"
      },
      "DateQuestion": {
        "description": "A date question. Date questions default to just month + day.",
        "properties": {
          "includeTime": {
            "description": "Whether to include the time as part of the question.",
            "type": "boolean"
          },
          "includeYear": {
            "description": "Whether to include the year as part of the question.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "FileUploadQuestion": {
        "description": "A file upload question. The API currently does not support creating file upload questions.",
        "properties": {
          "folderId": {
            "description": "Required. The ID of the Drive folder where uploaded files are stored.",
            "type": "string"
          },
          "maxFileSize": {
            "description": "Maximum number of bytes allowed for any single file uploaded to this question.",
            "format": "int64",
            "type": "string"
          },
          "maxFiles": {
            "description": "Maximum number of files that can be uploaded for this question in a single response.",
            "format": "int32",
            "type": "integer"
          },
          "types": {
            "description": "File types accepted by this question.",
            "items": {
              "enum": [
                "FILE_TYPE_UNSPECIFIED",
                "ANY",
                "DOCUMENT",
                "PRESENTATION",
                "SPREADSHEET",
                "DRAWING",
                "PDF",
                "IMAGE",
                "VIDEO",
                "AUDIO"
              ],
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Grading": {
        "description": "Grading for a single question",
        "properties": {
          "correctAnswers": {
            "$ref": "#/$defs/CorrectAnswers"
          },
          "generalFeedback": {
            "$ref": "#/$defs/Feedback"
          },
          "pointValue": {
            "description": "Required. The maximum number of points a respondent can automatically get for a correct answer. This must not be negative.",
            "format": "int32",
            "type": "integer"
          },
          "whenRight": {
            "$ref": "#/$defs/Feedback"
          },
          "whenWrong": {
            "$ref": "#/$defs/Feedback"
          }
        },
        "type": "object"
      },
      "CorrectAnswers": {
        "description": "The answer key for a question.",
        "properties": {
          "answers": {
            "description": "A list of correct answers. A quiz response can be automatically graded based on these answers. For single-valued questions, a response is marked correct if it matches any value in this list (in other words, multiple correct answers are possible). For multiple-valued (`CHECKBOX`) questions, a response is marked correct if it contains exactly the values in this list.",
            "items": {
              "$ref": "#/$defs/CorrectAnswer"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "CorrectAnswer": {
        "description": "A single correct answer for a question. For multiple-valued (`CHECKBOX`) questions, several `CorrectAnswer`s may be needed to represent a single correct response option.",
        "properties": {
          "value": {
            "description": "Required. The correct answer value. See the documentation for TextAnswer.value for details on how various value types are formatted.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Feedback": {
        "description": "Feedback for a respondent about their response to a question.",
        "properties": {
          "material": {
            "description": "Additional information provided as part of the feedback, often used to point the respondent to more reading and resources.",
            "items": {
              "$ref": "#/$defs/ExtraMaterial"
            },
            "type": "array"
          },
          "text": {
            "description": "Required. The main text of the feedback.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ExtraMaterial": {
        "description": "Supplementary material to the feedback.",
        "properties": {
          "link": {
            "$ref": "#/$defs/TextLink"
          },
          "video": {
            "$ref": "#/$defs/VideoLink"
          }
        },
        "type": "object"
      },
      "TextLink": {
        "description": "Link for text.",
        "properties": {
          "displayText": {
            "description": "Required. Display text for the URI.",
            "type": "string"
          },
          "uri": {
            "description": "Required. The URI.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "VideoLink": {
        "description": "Link to a video.",
        "properties": {
          "displayText": {
            "description": "Required. The display text for the link.",
            "type": "string"
          },
          "youtubeUri": {
            "description": "The URI of a YouTube video.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RowQuestion": {
        "description": "Configuration for a question that is part of a question group.",
        "properties": {
          "title": {
            "description": "Required. The title for the single row in the QuestionGroupItem.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ScaleQuestion": {
        "description": "A scale question. The user has a range of numeric values to choose from.",
        "properties": {
          "high": {
            "description": "Required. The highest possible value for the scale.",
            "format": "int32",
            "type": "integer"
          },
          "highLabel": {
            "description": "The label to display describing the highest point on the scale.",
            "type": "string"
          },
          "low": {
            "description": "Required. The lowest possible value for the scale.",
            "format": "int32",
            "type": "integer"
          },
          "lowLabel": {
            "description": "The label to display describing the lowest point on the scale.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "TextQuestion": {
        "description": "A text-based question.",
        "properties": {
          "paragraph": {
            "description": "Whether the question is a paragraph question or not. If not, the question is a short text question.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "TimeQuestion": {
        "description": "A time question.",
        "properties": {
          "duration": {
            "description": "`true` if the question is about an elapsed time. Otherwise it is about a time of day.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "QuestionItem": {
        "description": "A form item containing a single question.",
        "properties": {
          "image": {
            "$ref": "#/$defs/Image"
          },
          "question": {
            "$ref": "#/$defs/Question"
          }
        },
        "type": "object"
      },
      "TextItem": {
        "description": "A text item.",
        "properties": {},
        "type": "object"
      },
      "VideoItem": {
        "description": "An item containing a video.",
        "properties": {
          "caption": {
            "description": "The text displayed below the video.",
            "type": "string"
          },
          "video": {
            "$ref": "#/$defs/Video"
          }
        },
        "type": "object"
      },
      "Video": {
        "description": "Data representing a video.",
        "properties": {
          "properties": {
            "$ref": "#/$defs/MediaProperties"
          },
          "youtubeUri": {
            "description": "Required. A YouTube URI.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Location": {
        "description": "A specific location in a form.",
        "properties": {
          "index": {
            "description": "The index of an item in the form. This must be in the range [0..*N*), where *N* is the number of items in the form.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "DeleteItemRequest": {
        "description": "Delete an item in a form.",
        "properties": {
          "location": {
            "$ref": "#/$defs/Location"
          }
        },
        "type": "object"
      },
      "MoveItemRequest": {
        "description": "Move an item in a form.",
        "properties": {
          "newLocation": {
            "$ref": "#/$defs/Location"
          },
          "originalLocation": {
            "$ref": "#/$defs/Location"
          }
        },
        "type": "object"
      },
      "UpdateFormInfoRequest": {
        "description": "Update Form's Info.",
        "properties": {
          "info": {
            "$ref": "#/$defs/Info"
          },
          "updateMask": {
            "description": "Required. Only values named in this mask are changed. At least one field must be specified. The root `info` is implied and should not be specified. A single `\"*\"` can be used as short-hand for updating every field.",
            "format": "google-fieldmask",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Info": {
        "description": "The general information for a form.",
        "properties": {
          "description": {
            "description": "The description of the form.",
            "type": "string"
          },
          "documentTitle": {
            "description": "Output only. The title of the document which is visible in Drive. If `Info.title` is empty, `document_title` may appear in its place in the Google Forms UI and be visible to responders. `document_title` can be set on create, but cannot be modified by a batchUpdate request. Please use the [Google Drive API](https://developers.google.com/drive/api/v3/reference/files/update) if you need to programmatically update `document_title`.",
            "readOnly": true,
            "type": "string"
          },
          "title": {
            "description": "Required. The title of the form which is visible to responders.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateItemRequest": {
        "description": "Update an item in a form.",
        "properties": {
          "item": {
            "$ref": "#/$defs/Item"
          },
          "location": {
            "$ref": "#/$defs/Location"
          },
          "updateMask": {
            "description": "Required. Only values named in this mask are changed.",
            "format": "google-fieldmask",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateSettingsRequest": {
        "description": "Update Form's FormSettings.",
        "properties": {
          "settings": {
            "$ref": "#/$defs/FormSettings"
          },
          "updateMask": {
            "description": "Required. Only values named in this mask are changed. At least one field must be specified. The root `settings` is implied and should not be specified. A single `\"*\"` can be used as short-hand for updating every field.",
            "format": "google-fieldmask",
            "type": "string"
          }
        },
        "type": "object"
      },
      "FormSettings": {
        "description": "A form's settings.",
        "properties": {
          "quizSettings": {
            "$ref": "#/$defs/QuizSettings"
          }
        },
        "type": "object"
      },
      "QuizSettings": {
        "description": "Settings related to quiz forms and grading. These must be updated with the UpdateSettingsRequest.",
        "properties": {
          "isQuiz": {
            "description": "Whether this form is a quiz or not. When true, responses are graded based on question Grading. Upon setting to false, all question Grading is deleted.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "WriteControl": {
        "description": "Provides control over how write requests are executed.",
        "properties": {
          "requiredRevisionId": {
            "description": "The revision ID of the form that the write request is applied to. If this is not the latest revision of the form, the request is not processed and returns a 400 bad request error.",
            "type": "string"
          },
          "targetRevisionId": {
            "description": "The target revision ID of the form that the write request is applied to. If changes have occurred after this revision, the changes in this update request are transformed against those changes. This results in a new revision of the form that incorporates both the changes in the request and the intervening changes, with the server resolving conflicting changes. The target revision ID may only be used to write to recent versions of a form. If the target revision is too far behind the latest revision, the request is not processed and returns a 400 (Bad Request Error). The request may be retried after reading the latest version of the form. In most cases a target revision ID remains valid for several minutes after it is read, but for frequently-edited forms this window may be shorter.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://forms.googleapis.com//v1/forms/{formId}:batchUpdate{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Response to a BatchUpdateFormRequest.",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**form**: A Google Forms document. A form is created in Drive, and deleting a form or changing its access protections is done via the [Drive API](https://developers.google.com/drive/api/v3/about-sdk).",
              {
                "$ul": [
                  "**formId**: Output only. The form ID.",
                  [
                    "**info**: The general information for a form.",
                    {
                      "$ul": [
                        "**description**: The description of the form.",
                        "**documentTitle**: Output only. The title of the document which is visible in Drive. If `Info.title` is empty, `document_title` may appear in its place in the Google Forms UI and be visible to responders. `document_title` can be set on create, but cannot be modified by a batchUpdate request. Please use the [Google Drive API](https://developers.google.com/drive/api/v3/reference/files/update) if you need to programmatically update `document_title`.",
                        "**title**: Required. The title of the form which is visible to responders."
                      ]
                    }
                  ],
                  "**items**: Required. A list of the form's items, which can include section headers, questions, embedded media, etc.",
                  "**linkedSheetId**: Output only. The ID of the linked Google Sheet which is accumulating responses from this Form (if such a Sheet exists).",
                  "**responderUri**: Output only. The form URI to share with responders. This opens a page that allows the user to submit responses but not edit the questions.",
                  "**revisionId**: Output only. The revision ID of the form. Used in the WriteControl in update requests to identify the revision on which the changes are based. The format of the revision ID may change over time, so it should be treated opaquely. A returned revision ID is only guaranteed to be valid for 24 hours after it has been returned and cannot be shared across users. If the revision ID is unchanged between calls, then the form has not changed. Conversely, a changed ID (for the same form and user) usually means the form has been updated; however, a changed ID can also be due to internal factors such as ID format changes.",
                  [
                    "**settings**: A form's settings.",
                    {
                      "$ul": [
                        [
                          "**quizSettings**: Settings related to quiz forms and grading. These must be updated with the UpdateSettingsRequest.",
                          {
                            "$ul": [
                              "**isQuiz**: Whether this form is a quiz or not. When true, responses are graded based on question Grading. Upon setting to false, all question Grading is deleted."
                            ]
                          }
                        ]
                      ]
                    }
                  ]
                ]
              }
            ],
            "**replies**: The reply of the updates. This maps 1:1 with the update requests, although replies to some requests may be empty.",
            [
              "**writeControl**: Provides control over how write requests are executed.",
              {
                "$ul": [
                  "**requiredRevisionId**: The revision ID of the form that the write request is applied to. If this is not the latest revision of the form, the request is not processed and returns a 400 bad request error.",
                  "**targetRevisionId**: The target revision ID of the form that the write request is applied to. If changes have occurred after this revision, the changes in this update request are transformed against those changes. This results in a new revision of the form that incorporates both the changes in the request and the intervening changes, with the server resolving conflicting changes. The target revision ID may only be used to write to recent versions of a form. If the target revision is too far behind the latest revision, the request is not processed and returns a 400 (Bad Request Error). The request may be retried after reading the latest version of the form. In most cases a target revision ID remains valid for several minutes after it is read, but for frequently-edited forms this window may be shorter."
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
