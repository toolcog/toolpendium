{
  "name": "bigquery_jobs_getQueryResults",
  "description": "RPC to get the results of a query job.",
  "parameters": {
    "type": "object",
    "properties": {
      "projectId": {
        "type": "string",
        "description": "Required. Project ID of the query job."
      },
      "jobId": {
        "type": "string",
        "description": "Required. Job ID of the query job."
      },
      "formatOptions.useInt64Timestamp": {
        "type": "boolean",
        "description": "Optional. Output timestamp as usec int64. Default is false."
      },
      "location": {
        "type": "string",
        "description": "The geographic location of the job. You must specify the location to run the job for the following scenarios: - If the location to run a job is not in the `us` or the `eu` multi-regional location - If the job's location is in a single region (for example, `us-central1`) For more information, see https://cloud.google.com/bigquery/docs/locations#specifying_your_location."
      },
      "maxResults": {
        "type": "integer",
        "description": "Maximum number of results to read."
      },
      "pageToken": {
        "type": "string",
        "description": "Page token, returned by a previous call, to request the next page of results."
      },
      "startIndex": {
        "type": "string",
        "description": "Zero-based index of the starting row."
      },
      "timeoutMs": {
        "type": "integer",
        "description": "Optional: Specifies the maximum amount of time, in milliseconds, that the client is willing to wait for the query to complete. By default, this limit is 10 seconds (10,000 milliseconds). If the query is complete, the jobComplete field in the response is true. If the query has not yet completed, jobComplete is false. You can request a longer timeout period in the timeoutMs field. However, the call is not guaranteed to wait for the specified timeout; it typically returns after around 200 seconds (200,000 milliseconds), even if the query is not complete. If jobComplete is false, you can continue to wait for the query to complete by calling the getQueryResults method until the jobComplete field in the getQueryResults response is true."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      }
    },
    "required": [
      "projectId",
      "jobId"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://bigquery.googleapis.com/bigquery/v2/projects/{projectId}/queries/{jobId}{?formatOptions.useInt64Timestamp,location,maxResults,pageToken,startIndex,timeoutMs,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Response object of GetQueryResults.",
        "**Key properties:**",
        {
          "$ul": [
            "**cacheHit**: Whether the query result was fetched from the query cache.",
            "**errors**: Output only. The first errors or warnings encountered during the running of the job. The final message includes the number of errors that caused the process to stop. Errors here do not necessarily mean that the job has completed or was unsuccessful. For more information about error messages, see [Error messages](https://cloud.google.com/bigquery/docs/error-messages).",
            "**etag**: A hash of this response.",
            "**jobComplete**: Whether the query has completed or not. If rows or totalRows are present, this will always be true. If this is false, totalRows will not be available.",
            [
              "**jobReference**: A job reference is a fully qualified identifier for referring to a job.",
              {
                "$ul": [
                  "**jobId**: Required. The ID of the job. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), or dashes (-). The maximum length is 1,024 characters.",
                  "**location**: Optional. The geographic location of the job. The default value is US. For more information about BigQuery locations, see: https://cloud.google.com/bigquery/docs/locations",
                  "**projectId**: Required. The ID of the project containing this job."
                ]
              }
            ],
            "**kind**: The resource type of the response. (default: bigquery#getQueryResultsResponse)",
            "**numDmlAffectedRows**: Output only. The number of rows affected by a DML statement. Present only for DML statements INSERT, UPDATE or DELETE.",
            "**pageToken**: A token used for paging results. When this token is non-empty, it indicates additional results are available.",
            "**rows**: An object with as many results as can be contained within the maximum permitted reply size. To get any additional rows, you can call GetQueryResults and specify the jobReference returned above. Present only when the query completes successfully. The REST-based representation of this data leverages a series of JSON f,v objects for indicating fields and values.",
            [
              "**schema**: Schema of a table",
              {
                "$ul": [
                  "**fields**: Describes the fields in a table."
                ]
              }
            ],
            "**totalBytesProcessed**: The total number of bytes processed for this query.",
            "**totalRows**: The total number of rows in the complete query result set, which can be more than the number of rows in this single page of results. Present only when the query completes successfully."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
