{
  "name": "bigquery_jobs_query",
  "description": "Runs a BigQuery SQL query synchronously and returns query results if the query completes within a specified timeout.",
  "parameters": {
    "type": "object",
    "properties": {
      "projectId": {
        "type": "string",
        "description": "Required. Project ID of the query request."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/QueryRequest"
      }
    },
    "required": [
      "projectId"
    ],
    "$defs": {
      "QueryRequest": {
        "description": "Describes the format of the jobs.query request.",
        "properties": {
          "connectionProperties": {
            "description": "Optional. Connection properties which can modify the query behavior.",
            "items": {
              "$ref": "#/$defs/ConnectionProperty"
            },
            "type": "array"
          },
          "continuous": {
            "description": "[Optional] Specifies whether the query should be executed as a continuous query. The default value is false.",
            "type": "boolean"
          },
          "createSession": {
            "description": "Optional. If true, creates a new session using a randomly generated session_id. If false, runs query with an existing session_id passed in ConnectionProperty, otherwise runs query in non-session mode. The session location will be set to QueryRequest.location if it is present, otherwise it's set to the default location based on existing routing logic.",
            "type": "boolean"
          },
          "defaultDataset": {
            "$ref": "#/$defs/DatasetReference"
          },
          "dryRun": {
            "description": "Optional. If set to true, BigQuery doesn't run the job. Instead, if the query is valid, BigQuery returns statistics about the job such as how many bytes would be processed. If the query is invalid, an error returns. The default value is false.",
            "type": "boolean"
          },
          "formatOptions": {
            "$ref": "#/$defs/DataFormatOptions"
          },
          "jobCreationMode": {
            "description": "Optional. If not set, jobs are always required. If set, the query request will follow the behavior described JobCreationMode. This feature is not yet available. Jobs will always be created.",
            "enum": [
              "JOB_CREATION_MODE_UNSPECIFIED",
              "JOB_CREATION_REQUIRED",
              "JOB_CREATION_OPTIONAL"
            ],
            "type": "string"
          },
          "kind": {
            "default": "bigquery#queryRequest",
            "description": "The resource type of the request.",
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Optional. The labels associated with this query. Labels can be used to organize and group query jobs. Label keys and values can be no longer than 63 characters, can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. Label keys must start with a letter and each label in the list must have a different key.",
            "type": "object"
          },
          "location": {
            "description": "The geographic location where the job should run. See details at https://cloud.google.com/bigquery/docs/locations#specifying_your_location.",
            "type": "string"
          },
          "maxResults": {
            "description": "Optional. The maximum number of rows of data to return per page of results. Setting this flag to a small value such as 1000 and then paging through results might improve reliability when the query result set is large. In addition to this limit, responses are also limited to 10 MB. By default, there is no maximum row count, and only the byte limit applies.",
            "format": "uint32",
            "type": "integer"
          },
          "maximumBytesBilled": {
            "description": "Optional. Limits the bytes billed for this query. Queries with bytes billed above this limit will fail (without incurring a charge). If unspecified, the project default is used.",
            "format": "int64",
            "type": "string"
          },
          "parameterMode": {
            "description": "GoogleSQL only. Set to POSITIONAL to use positional (?) query parameters or to NAMED to use named (@myparam) query parameters in this query.",
            "type": "string"
          },
          "preserveNulls": {
            "deprecated": true,
            "description": "This property is deprecated.",
            "type": "boolean"
          },
          "query": {
            "description": "Required. A query string to execute, using Google Standard SQL or legacy SQL syntax. Example: \"SELECT COUNT(f1) FROM myProjectId.myDatasetId.myTableId\".",
            "type": "string"
          },
          "queryParameters": {
            "description": "Query parameters for GoogleSQL queries.",
            "items": {
              "$ref": "#/$defs/QueryParameter"
            },
            "type": "array"
          },
          "requestId": {
            "description": "Optional. A unique user provided identifier to ensure idempotent behavior for queries. Note that this is different from the job_id. It has the following properties: 1. It is case-sensitive, limited to up to 36 ASCII characters. A UUID is recommended. 2. Read only queries can ignore this token since they are nullipotent by definition. 3. For the purposes of idempotency ensured by the request_id, a request is considered duplicate of another only if they have the same request_id and are actually duplicates. When determining whether a request is a duplicate of another request, all parameters in the request that may affect the result are considered. For example, query, connection_properties, query_parameters, use_legacy_sql are parameters that affect the result and are considered when determining whether a request is a duplicate, but properties like timeout_ms don't affect the result and are thus not considered. Dry run query requests are never considered duplicate of another request. 4. When a duplicate mutating query request is detected, it returns: a. the results of the mutation if it completes successfully within the timeout. b. the running operation if it is still in progress at the end of the timeout. 5. Its lifetime is limited to 15 minutes. In other words, if two requests are sent with the same request_id, but more than 15 minutes apart, idempotency is not guaranteed.",
            "type": "string"
          },
          "timeoutMs": {
            "description": "Optional. Optional: Specifies the maximum amount of time, in milliseconds, that the client is willing to wait for the query to complete. By default, this limit is 10 seconds (10,000 milliseconds). If the query is complete, the jobComplete field in the response is true. If the query has not yet completed, jobComplete is false. You can request a longer timeout period in the timeoutMs field. However, the call is not guaranteed to wait for the specified timeout; it typically returns after around 200 seconds (200,000 milliseconds), even if the query is not complete. If jobComplete is false, you can continue to wait for the query to complete by calling the getQueryResults method until the jobComplete field in the getQueryResults response is true.",
            "format": "uint32",
            "type": "integer"
          },
          "useLegacySql": {
            "default": true,
            "description": "Specifies whether to use BigQuery's legacy SQL dialect for this query. The default value is true. If set to false, the query will use BigQuery's GoogleSQL: https://cloud.google.com/bigquery/sql-reference/ When useLegacySql is set to false, the value of flattenResults is ignored; query will be run as if flattenResults is false.",
            "type": "boolean"
          },
          "useQueryCache": {
            "default": true,
            "description": "Optional. Whether to look for the result in the query cache. The query cache is a best-effort cache that will be flushed whenever tables in the query are modified. The default value is true.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ConnectionProperty": {
        "description": "A connection-level property to customize query behavior. Under JDBC, these correspond directly to connection properties passed to the DriverManager. Under ODBC, these correspond to properties in the connection string. Currently supported connection properties: * **dataset_project_id**: represents the default project for datasets that are used in the query. Setting the system variable `@@dataset_project_id` achieves the same behavior. For more information about system variables, see: https://cloud.google.com/bigquery/docs/reference/system-variables * **time_zone**: represents the default timezone used to run the query. * **session_id**: associates the query with a given session. * **query_label**: associates the query with a given job label. If set, all subsequent queries in a script or session will have this label. For the format in which a you can specify a query label, see labels in the JobConfiguration resource type: https://cloud.google.com/bigquery/docs/reference/rest/v2/Job#jobconfiguration Additional properties are allowed, but ignored. Specifying multiple connection properties with the same key returns an error.",
        "properties": {
          "key": {
            "description": "The key of the property to set.",
            "type": "string"
          },
          "value": {
            "description": "The value of the property to set.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DatasetReference": {
        "properties": {
          "datasetId": {
            "description": "Required. A unique ID for this dataset, without the project name. The ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_). The maximum length is 1,024 characters.",
            "type": "string"
          },
          "projectId": {
            "description": "Optional. The ID of the project containing this dataset.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DataFormatOptions": {
        "description": "Options for data format adjustments.",
        "properties": {
          "useInt64Timestamp": {
            "description": "Optional. Output timestamp as usec int64. Default is false.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "QueryParameter": {
        "description": "A parameter given to a query.",
        "properties": {
          "name": {
            "description": "Optional. If unset, this is a positional parameter. Otherwise, should be unique within a query.",
            "type": "string"
          },
          "parameterType": {
            "$ref": "#/$defs/QueryParameterType"
          },
          "parameterValue": {
            "$ref": "#/$defs/QueryParameterValue"
          }
        },
        "type": "object"
      },
      "QueryParameterType": {
        "description": "The type of a query parameter.",
        "properties": {
          "arrayType": {
            "$ref": "#/$defs/QueryParameterType"
          },
          "rangeElementType": {
            "$ref": "#/$defs/QueryParameterType"
          },
          "structTypes": {
            "description": "Optional. The types of the fields of this struct, in order, if this is a struct.",
            "items": {
              "description": "The type of a struct parameter.",
              "properties": {
                "description": {
                  "description": "Optional. Human-oriented description of the field.",
                  "type": "string"
                },
                "name": {
                  "description": "Optional. The name of this field.",
                  "type": "string"
                },
                "type": {
                  "$ref": "#/$defs/QueryParameterType"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "type": {
            "description": "Required. The top level type of this field.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "QueryParameterValue": {
        "description": "The value of a query parameter.",
        "properties": {
          "arrayValues": {
            "description": "Optional. The array values, if this is an array type.",
            "items": {
              "$ref": "#/$defs/QueryParameterValue"
            },
            "type": "array"
          },
          "rangeValue": {
            "$ref": "#/$defs/RangeValue"
          },
          "structValues": {
            "additionalProperties": {
              "$ref": "#/$defs/QueryParameterValue"
            },
            "description": "The struct field values.",
            "type": "object"
          },
          "value": {
            "description": "Optional. The value of this value, if a simple scalar type.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RangeValue": {
        "description": "Represents the value of a range.",
        "properties": {
          "end": {
            "$ref": "#/$defs/QueryParameterValue"
          },
          "start": {
            "$ref": "#/$defs/QueryParameterValue"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://bigquery.googleapis.com/bigquery/v2/projects/{projectId}/queries{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**cacheHit**: Whether the query result was fetched from the query cache.",
            [
              "**dmlStats**: Detailed statistics for DML statements",
              {
                "$ul": [
                  "**deletedRowCount**: Output only. Number of deleted Rows. populated by DML DELETE, MERGE and TRUNCATE statements.",
                  "**insertedRowCount**: Output only. Number of inserted Rows. Populated by DML INSERT and MERGE statements",
                  "**updatedRowCount**: Output only. Number of updated Rows. Populated by DML UPDATE and MERGE statements."
                ]
              }
            ],
            "**errors**: Output only. The first errors or warnings encountered during the running of the job. The final message includes the number of errors that caused the process to stop. Errors here do not necessarily mean that the job has completed or was unsuccessful. For more information about error messages, see [Error messages](https://cloud.google.com/bigquery/docs/error-messages).",
            "**jobComplete**: Whether the query has completed or not. If rows or totalRows are present, this will always be true. If this is false, totalRows will not be available.",
            [
              "**jobCreationReason**: Reason about why a Job was created from a [`jobs.query`](https://cloud.google.com/bigquery/docs/reference/rest/v2/jobs/query) method when used with `JOB_CREATION_OPTIONAL` Job creation mode. For [`jobs.insert`](https://cloud.google.com/bigquery/docs/reference/rest/v2/jobs/insert) method calls it will always be `REQUESTED`. This feature is not yet available. Jobs will always be created.",
              {
                "$ul": [
                  "**code**: Output only. Specifies the high level reason why a Job was created."
                ]
              }
            ],
            [
              "**jobReference**: A job reference is a fully qualified identifier for referring to a job.",
              {
                "$ul": [
                  "**jobId**: Required. The ID of the job. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), or dashes (-). The maximum length is 1,024 characters.",
                  "**location**: Optional. The geographic location of the job. The default value is US. For more information about BigQuery locations, see: https://cloud.google.com/bigquery/docs/locations",
                  "**projectId**: Required. The ID of the project containing this job."
                ]
              }
            ],
            "**kind**: The resource type. (default: bigquery#queryResponse)",
            "**numDmlAffectedRows**: Output only. The number of rows affected by a DML statement. Present only for DML statements INSERT, UPDATE or DELETE.",
            "**pageToken**: A token used for paging results. A non-empty token indicates that additional results are available. To see additional results, query the [`jobs.getQueryResults`](https://cloud.google.com/bigquery/docs/reference/rest/v2/jobs/getQueryResults) method. For more information, see [Paging through table data](https://cloud.google.com/bigquery/docs/paging-results).",
            "**queryId**: Query ID for the completed query. This ID will be auto-generated. This field is not yet available and it is currently not guaranteed to be populated.",
            "**rows**: An object with as many results as can be contained within the maximum permitted reply size. To get any additional rows, you can call GetQueryResults and specify the jobReference returned above.",
            [
              "**schema**: Schema of a table",
              {
                "$ul": [
                  "**fields**: Describes the fields in a table."
                ]
              }
            ],
            [
              "**sessionInfo**: [Preview] Information related to sessions.",
              {
                "$ul": [
                  "**sessionId**: Output only. The id of the session."
                ]
              }
            ],
            "**totalBytesProcessed**: The total number of bytes processed for this query. If this query was a dry run, this is the number of bytes that would be processed if the query were run.",
            "**totalRows**: The total number of rows in the complete query result set, which can be more than the number of rows in this single page of results."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
