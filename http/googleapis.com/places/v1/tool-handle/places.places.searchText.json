{
  "name": "places_places_searchText",
  "description": "Text query based place search.",
  "parameters": {
    "type": "object",
    "properties": {
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleMapsPlacesV1SearchTextRequest"
      }
    },
    "$defs": {
      "GoogleMapsPlacesV1SearchTextRequest": {
        "description": "Request proto for SearchText. ",
        "properties": {
          "includedType": {
            "description": "The requested place type. Full list of types supported: https://developers.google.com/maps/documentation/places/web-service/place-types. Only support one included type.",
            "type": "string"
          },
          "languageCode": {
            "description": "Place details will be displayed with the preferred language if available. If the language code is unspecified or unrecognized, place details of any language may be returned, with a preference for English if such details exist. Current list of supported languages: https://developers.google.com/maps/faq#languagesupport.",
            "type": "string"
          },
          "locationBias": {
            "$ref": "#/$defs/GoogleMapsPlacesV1SearchTextRequestLocationBias"
          },
          "locationRestriction": {
            "$ref": "#/$defs/GoogleMapsPlacesV1SearchTextRequestLocationRestriction"
          },
          "maxResultCount": {
            "description": "Maximum number of results to return. It must be between 1 and 20, inclusively. The default is 20. If the number is unset, it falls back to the upper limit. If the number is set to negative or exceeds the upper limit, an INVALID_ARGUMENT error is returned.",
            "format": "int32",
            "type": "integer"
          },
          "minRating": {
            "description": "Filter out results whose average user rating is strictly less than this limit. A valid value must be a float between 0 and 5 (inclusively) at a 0.5 cadence i.e. [0, 0.5, 1.0, ... , 5.0] inclusively. The input rating will round up to the nearest 0.5(ceiling). For instance, a rating of 0.6 will eliminate all results with a less than 1.0 rating.",
            "format": "double",
            "type": "number"
          },
          "openNow": {
            "description": "Used to restrict the search to places that are currently open. The default is false.",
            "type": "boolean"
          },
          "priceLevels": {
            "description": "Used to restrict the search to places that are marked as certain price levels. Users can choose any combinations of price levels. Default to select all price levels.",
            "items": {
              "enum": [
                "PRICE_LEVEL_UNSPECIFIED",
                "PRICE_LEVEL_FREE",
                "PRICE_LEVEL_INEXPENSIVE",
                "PRICE_LEVEL_MODERATE",
                "PRICE_LEVEL_EXPENSIVE",
                "PRICE_LEVEL_VERY_EXPENSIVE"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "rankPreference": {
            "description": "How results will be ranked in the response.",
            "enum": [
              "RANK_PREFERENCE_UNSPECIFIED",
              "DISTANCE",
              "RELEVANCE"
            ],
            "type": "string"
          },
          "regionCode": {
            "description": "The Unicode country/region code (CLDR) of the location where the request is coming from. This parameter is used to display the place details, like region-specific place name, if available. The parameter can affect results based on applicable law. For more information, see https://www.unicode.org/cldr/charts/latest/supplemental/territory_language_information.html. Note that 3-digit region codes are not currently supported.",
            "type": "string"
          },
          "strictTypeFiltering": {
            "description": "Used to set strict type filtering for included_type. If set to true, only results of the same type will be returned. Default to false.",
            "type": "boolean"
          },
          "textQuery": {
            "description": "Required. The text query for textual search.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleMapsPlacesV1SearchTextRequestLocationBias": {
        "description": "The region to search. This location serves as a bias which means results around given location might be returned.",
        "properties": {
          "circle": {
            "$ref": "#/$defs/GoogleMapsPlacesV1Circle"
          },
          "rectangle": {
            "$ref": "#/$defs/GoogleGeoTypeViewport"
          }
        },
        "type": "object"
      },
      "GoogleMapsPlacesV1Circle": {
        "description": "Circle with a LatLng as center and radius.",
        "properties": {
          "center": {
            "$ref": "#/$defs/GoogleTypeLatLng"
          },
          "radius": {
            "description": "Required. Radius measured in meters. The radius must be within [0.0, 50000.0].",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "GoogleTypeLatLng": {
        "description": "An object that represents a latitude/longitude pair. This is expressed as a pair of doubles to represent degrees latitude and degrees longitude. Unless specified otherwise, this object must conform to the WGS84 standard. Values must be within normalized ranges.",
        "properties": {
          "latitude": {
            "description": "The latitude in degrees. It must be in the range [-90.0, +90.0].",
            "format": "double",
            "type": "number"
          },
          "longitude": {
            "description": "The longitude in degrees. It must be in the range [-180.0, +180.0].",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "GoogleGeoTypeViewport": {
        "description": "A latitude-longitude viewport, represented as two diagonally opposite `low` and `high` points. A viewport is considered a closed region, i.e. it includes its boundary. The latitude bounds must range between -90 to 90 degrees inclusive, and the longitude bounds must range between -180 to 180 degrees inclusive. Various cases include: - If `low` = `high`, the viewport consists of that single point. - If `low.longitude` > `high.longitude`, the longitude range is inverted (the viewport crosses the 180 degree longitude line). - If `low.longitude` = -180 degrees and `high.longitude` = 180 degrees, the viewport includes all longitudes. - If `low.longitude` = 180 degrees and `high.longitude` = -180 degrees, the longitude range is empty. - If `low.latitude` > `high.latitude`, the latitude range is empty. Both `low` and `high` must be populated, and the represented box cannot be empty (as specified by the definitions above). An empty viewport will result in an error. For example, this viewport fully encloses New York City: { \"low\": { \"latitude\": 40.477398, \"longitude\": -74.259087 }, \"high\": { \"latitude\": 40.91618, \"longitude\": -73.70018 } }",
        "properties": {
          "high": {
            "$ref": "#/$defs/GoogleTypeLatLng"
          },
          "low": {
            "$ref": "#/$defs/GoogleTypeLatLng"
          }
        },
        "type": "object"
      },
      "GoogleMapsPlacesV1SearchTextRequestLocationRestriction": {
        "description": "The region to search. This location serves as a restriction which means results outside given location will not be returned.",
        "properties": {
          "rectangle": {
            "$ref": "#/$defs/GoogleGeoTypeViewport"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://places.googleapis.com//v1/places:searchText{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Response proto for SearchText. ",
        "**Key properties:**",
        {
          "$ul": [
            "**places**: A list of places that meet the user's text search criteria."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
