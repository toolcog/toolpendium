{
  "name": "places_places_autocomplete",
  "description": "Returns predictions for the given input.",
  "parameters": {
    "type": "object",
    "properties": {
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleMapsPlacesV1AutocompletePlacesRequest"
      }
    },
    "$defs": {
      "GoogleMapsPlacesV1AutocompletePlacesRequest": {
        "description": "Request proto for AutocompletePlaces.",
        "properties": {
          "includeQueryPredictions": {
            "description": "Optional. If true, the response will include both Place and query predictions. Otherwise the response will only return Place predictions.",
            "type": "boolean"
          },
          "includedPrimaryTypes": {
            "description": "Optional. Included primary Place type (for example, \"restaurant\" or \"gas_station\") from https://developers.google.com/maps/documentation/places/web-service/place-types. A Place is only returned if its primary type is included in this list. Up to 5 values can be specified. If no types are specified, all Place types are returned.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "includedRegionCodes": {
            "description": "Optional. Only include results in the specified regions, specified as up to 15 CLDR two-character region codes. An empty set will not restrict the results. If both `location_restriction` and `included_region_codes` are set, the results will be located in the area of intersection.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "input": {
            "description": "Required. The text string on which to search.",
            "type": "string"
          },
          "inputOffset": {
            "description": "Optional. A zero-based Unicode character offset of `input` indicating the cursor position in `input`. The cursor position may influence what predictions are returned. If empty, defaults to the length of `input`.",
            "format": "int32",
            "type": "integer"
          },
          "languageCode": {
            "description": "Optional. The language in which to return results. Defaults to en-US. The results may be in mixed languages if the language used in `input` is different from `language_code` or if the returned Place does not have a translation from the local language to `language_code`.",
            "type": "string"
          },
          "locationBias": {
            "$ref": "#/$defs/GoogleMapsPlacesV1AutocompletePlacesRequestLocationBias"
          },
          "locationRestriction": {
            "$ref": "#/$defs/GoogleMapsPlacesV1AutocompletePlacesRequestLocationRestriction"
          },
          "origin": {
            "$ref": "#/$defs/GoogleTypeLatLng"
          },
          "regionCode": {
            "description": "Optional. The region code, specified as a CLDR two-character region code. This affects address formatting, result ranking, and may influence what results are returned. This does not restrict results to the specified region. To restrict results to a region, use `region_code_restriction`.",
            "type": "string"
          },
          "sessionToken": {
            "description": "Optional. A string which identifies an Autocomplete session for billing purposes. Must be a URL and filename safe base64 string with at most 36 ASCII characters in length. Otherwise an INVALID_ARGUMENT error is returned. The session begins when the user starts typing a query, and concludes when they select a place and a call to Place Details or Address Validation is made. Each session can have multiple queries, followed by one Place Details or Address Validation request. The credentials used for each request within a session must belong to the same Google Cloud Console project. Once a session has concluded, the token is no longer valid; your app must generate a fresh token for each session. If the `session_token` parameter is omitted, or if you reuse a session token, the session is charged as if no session token was provided (each request is billed separately). We recommend the following guidelines: * Use session tokens for all Place Autocomplete calls. * Generate a fresh token for each session. Using a version 4 UUID is recommended. * Ensure that the credentials used for all Place Autocomplete, Place Details, and Address Validation requests within a session belong to the same Cloud Console project. * Be sure to pass a unique session token for each new session. Using the same token for more than one session will result in each request being billed individually.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleMapsPlacesV1AutocompletePlacesRequestLocationBias": {
        "description": "The region to search. The results may be biased around the specified region.",
        "properties": {
          "circle": {
            "$ref": "#/$defs/GoogleMapsPlacesV1Circle"
          },
          "rectangle": {
            "$ref": "#/$defs/GoogleGeoTypeViewport"
          }
        },
        "type": "object"
      },
      "GoogleMapsPlacesV1Circle": {
        "description": "Circle with a LatLng as center and radius.",
        "properties": {
          "center": {
            "$ref": "#/$defs/GoogleTypeLatLng"
          },
          "radius": {
            "description": "Required. Radius measured in meters. The radius must be within [0.0, 50000.0].",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "GoogleTypeLatLng": {
        "description": "An object that represents a latitude/longitude pair. This is expressed as a pair of doubles to represent degrees latitude and degrees longitude. Unless specified otherwise, this object must conform to the WGS84 standard. Values must be within normalized ranges.",
        "properties": {
          "latitude": {
            "description": "The latitude in degrees. It must be in the range [-90.0, +90.0].",
            "format": "double",
            "type": "number"
          },
          "longitude": {
            "description": "The longitude in degrees. It must be in the range [-180.0, +180.0].",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "GoogleGeoTypeViewport": {
        "description": "A latitude-longitude viewport, represented as two diagonally opposite `low` and `high` points. A viewport is considered a closed region, i.e. it includes its boundary. The latitude bounds must range between -90 to 90 degrees inclusive, and the longitude bounds must range between -180 to 180 degrees inclusive. Various cases include: - If `low` = `high`, the viewport consists of that single point. - If `low.longitude` > `high.longitude`, the longitude range is inverted (the viewport crosses the 180 degree longitude line). - If `low.longitude` = -180 degrees and `high.longitude` = 180 degrees, the viewport includes all longitudes. - If `low.longitude` = 180 degrees and `high.longitude` = -180 degrees, the longitude range is empty. - If `low.latitude` > `high.latitude`, the latitude range is empty. Both `low` and `high` must be populated, and the represented box cannot be empty (as specified by the definitions above). An empty viewport will result in an error. For example, this viewport fully encloses New York City: { \"low\": { \"latitude\": 40.477398, \"longitude\": -74.259087 }, \"high\": { \"latitude\": 40.91618, \"longitude\": -73.70018 } }",
        "properties": {
          "high": {
            "$ref": "#/$defs/GoogleTypeLatLng"
          },
          "low": {
            "$ref": "#/$defs/GoogleTypeLatLng"
          }
        },
        "type": "object"
      },
      "GoogleMapsPlacesV1AutocompletePlacesRequestLocationRestriction": {
        "description": "The region to search. The results will be restricted to the specified region.",
        "properties": {
          "circle": {
            "$ref": "#/$defs/GoogleMapsPlacesV1Circle"
          },
          "rectangle": {
            "$ref": "#/$defs/GoogleGeoTypeViewport"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://places.googleapis.com//v1/places:autocomplete{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Response proto for AutocompletePlaces.",
        "**Key properties:**",
        {
          "$ul": [
            "**suggestions**: Contains a list of suggestions, ordered in descending order of relevance."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
