{
  "name": "androidpublisher_monetization_subscriptions_basePlans_offers_patch",
  "description": "Updates an existing subscription offer.",
  "parameters": {
    "type": "object",
    "properties": {
      "packageName": {
        "type": "string",
        "description": "Required. Immutable. The package name of the app the parent subscription belongs to."
      },
      "productId": {
        "type": "string",
        "description": "Required. Immutable. The ID of the parent subscription this offer belongs to."
      },
      "basePlanId": {
        "type": "string",
        "description": "Required. Immutable. The ID of the base plan to which this offer is an extension."
      },
      "offerId": {
        "type": "string",
        "description": "Required. Immutable. Unique ID of this subscription offer. Must be unique within the base plan."
      },
      "allowMissing": {
        "type": "boolean",
        "description": "Optional. If set to true, and the subscription offer with the given package_name, product_id, base_plan_id and offer_id doesn't exist, an offer will be created. If a new offer is created, update_mask is ignored."
      },
      "latencyTolerance": {
        "enum": [
          "PRODUCT_UPDATE_LATENCY_TOLERANCE_UNSPECIFIED",
          "PRODUCT_UPDATE_LATENCY_TOLERANCE_LATENCY_SENSITIVE",
          "PRODUCT_UPDATE_LATENCY_TOLERANCE_LATENCY_TOLERANT"
        ],
        "type": "string",
        "description": "Optional. The latency tolerance for the propagation of this product update. Defaults to latency-sensitive."
      },
      "regionsVersion.version": {
        "type": "string",
        "description": "Required. A string representing the version of available regions being used for the specified resource. Regional prices for the resource have to be specified according to the information published in [this article](https://support.google.com/googleplay/android-developer/answer/10532353). Each time the supported locations substantially change, the version will be incremented. Using this field will ensure that creating and updating the resource with an older region's version and set of regional prices and currencies will succeed even though a new version is available. The latest version is 2022/02."
      },
      "updateMask": {
        "type": "string",
        "description": "Required. The list of fields to be updated."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/SubscriptionOffer"
      }
    },
    "required": [
      "packageName",
      "productId",
      "basePlanId",
      "offerId"
    ],
    "$defs": {
      "SubscriptionOffer": {
        "description": "A single, temporary offer",
        "properties": {
          "basePlanId": {
            "description": "Required. Immutable. The ID of the base plan to which this offer is an extension.",
            "type": "string"
          },
          "offerId": {
            "description": "Required. Immutable. Unique ID of this subscription offer. Must be unique within the base plan.",
            "type": "string"
          },
          "offerTags": {
            "description": "List of up to 20 custom tags specified for this offer, and returned to the app through the billing library.",
            "items": {
              "$ref": "#/$defs/OfferTag"
            },
            "type": "array"
          },
          "otherRegionsConfig": {
            "$ref": "#/$defs/OtherRegionsSubscriptionOfferConfig"
          },
          "packageName": {
            "description": "Required. Immutable. The package name of the app the parent subscription belongs to.",
            "type": "string"
          },
          "phases": {
            "description": "Required. The phases of this subscription offer. Must contain at least one entry, and may contain at most five. Users will always receive all these phases in the specified order. Phases may not be added, removed, or reordered after initial creation.",
            "items": {
              "$ref": "#/$defs/SubscriptionOfferPhase"
            },
            "type": "array"
          },
          "productId": {
            "description": "Required. Immutable. The ID of the parent subscription this offer belongs to.",
            "type": "string"
          },
          "regionalConfigs": {
            "description": "Required. The region-specific configuration of this offer. Must contain at least one entry.",
            "items": {
              "$ref": "#/$defs/RegionalSubscriptionOfferConfig"
            },
            "type": "array"
          },
          "state": {
            "description": "Output only. The current state of this offer. Can be changed using Activate and Deactivate actions. NB: the base plan state supersedes this state, so an active offer may not be available if the base plan is not active.",
            "enum": [
              "STATE_UNSPECIFIED",
              "DRAFT",
              "ACTIVE",
              "INACTIVE"
            ],
            "readOnly": true,
            "type": "string"
          },
          "targeting": {
            "$ref": "#/$defs/SubscriptionOfferTargeting"
          }
        },
        "type": "object"
      },
      "OfferTag": {
        "description": "Represents a custom tag specified for base plans and subscription offers.",
        "properties": {
          "tag": {
            "description": "Must conform with RFC-1034. That is, this string can only contain lower-case letters (a-z), numbers (0-9), and hyphens (-), and be at most 20 characters.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OtherRegionsSubscriptionOfferConfig": {
        "description": "Configuration for any new locations Play may launch in specified on a subscription offer.",
        "properties": {
          "otherRegionsNewSubscriberAvailability": {
            "description": "Whether the subscription offer in any new locations Play may launch in the future. If not specified, this will default to false.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "SubscriptionOfferPhase": {
        "description": "A single phase of a subscription offer.",
        "properties": {
          "duration": {
            "description": "Required. The duration of a single recurrence of this phase. Specified in ISO 8601 format.",
            "type": "string"
          },
          "otherRegionsConfig": {
            "$ref": "#/$defs/OtherRegionsSubscriptionOfferPhaseConfig"
          },
          "recurrenceCount": {
            "description": "Required. The number of times this phase repeats. If this offer phase is not free, each recurrence charges the user the price of this offer phase.",
            "format": "int32",
            "type": "integer"
          },
          "regionalConfigs": {
            "description": "Required. The region-specific configuration of this offer phase. This list must contain exactly one entry for each region for which the subscription offer has a regional config.",
            "items": {
              "$ref": "#/$defs/RegionalSubscriptionOfferPhaseConfig"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "OtherRegionsSubscriptionOfferPhaseConfig": {
        "description": "Configuration for any new locations Play may launch in for a single offer phase.",
        "properties": {
          "absoluteDiscounts": {
            "$ref": "#/$defs/OtherRegionsSubscriptionOfferPhasePrices"
          },
          "otherRegionsPrices": {
            "$ref": "#/$defs/OtherRegionsSubscriptionOfferPhasePrices"
          },
          "relativeDiscount": {
            "description": "The fraction of the base plan price prorated over the phase duration that the user pays for this offer phase. For example, if the base plan price for this region is $12 for a period of 1 year, then a 50% discount for a phase of a duration of 3 months would correspond to a price of $1.50. The discount must be specified as a fraction strictly larger than 0 and strictly smaller than 1. The resulting price will be rounded to the nearest billable unit (e.g. cents for USD). The relative discount is considered invalid if the discounted price ends up being smaller than the minimum price allowed in any new locations Play may launch in.",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "OtherRegionsSubscriptionOfferPhasePrices": {
        "description": "Pricing information for any new locations Play may launch in.",
        "properties": {
          "eurPrice": {
            "$ref": "#/$defs/Money"
          },
          "usdPrice": {
            "$ref": "#/$defs/Money"
          }
        },
        "type": "object"
      },
      "Money": {
        "description": "Represents an amount of money with its currency type.",
        "properties": {
          "currencyCode": {
            "description": "The three-letter currency code defined in ISO 4217.",
            "type": "string"
          },
          "nanos": {
            "description": "Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.",
            "format": "int32",
            "type": "integer"
          },
          "units": {
            "description": "The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar.",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RegionalSubscriptionOfferPhaseConfig": {
        "description": "Configuration for a single phase of a subscription offer in a single region.",
        "properties": {
          "absoluteDiscount": {
            "$ref": "#/$defs/Money"
          },
          "price": {
            "$ref": "#/$defs/Money"
          },
          "regionCode": {
            "description": "Required. Immutable. The region to which this config applies.",
            "type": "string"
          },
          "relativeDiscount": {
            "description": "The fraction of the base plan price prorated over the phase duration that the user pays for this offer phase. For example, if the base plan price for this region is $12 for a period of 1 year, then a 50% discount for a phase of a duration of 3 months would correspond to a price of $1.50. The discount must be specified as a fraction strictly larger than 0 and strictly smaller than 1. The resulting price will be rounded to the nearest billable unit (e.g. cents for USD). The relative discount is considered invalid if the discounted price ends up being smaller than the minimum price allowed in this region.",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "RegionalSubscriptionOfferConfig": {
        "description": "Configuration for a subscription offer in a single region.",
        "properties": {
          "newSubscriberAvailability": {
            "description": "Whether the subscription offer in the specified region is available for new subscribers. Existing subscribers will not have their subscription cancelled if this value is set to false. If not specified, this will default to false.",
            "type": "boolean"
          },
          "regionCode": {
            "description": "Required. Immutable. Region code this configuration applies to, as defined by ISO 3166-2, e.g. \"US\".",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SubscriptionOfferTargeting": {
        "description": "Defines the rule a user needs to satisfy to receive this offer.",
        "properties": {
          "acquisitionRule": {
            "$ref": "#/$defs/AcquisitionTargetingRule"
          },
          "upgradeRule": {
            "$ref": "#/$defs/UpgradeTargetingRule"
          }
        },
        "type": "object"
      },
      "AcquisitionTargetingRule": {
        "description": "Represents a targeting rule of the form: User never had {scope} before.",
        "properties": {
          "scope": {
            "$ref": "#/$defs/TargetingRuleScope"
          }
        },
        "type": "object"
      },
      "TargetingRuleScope": {
        "description": "Defines the scope of subscriptions which a targeting rule can match to target offers to users based on past or current entitlement.",
        "properties": {
          "specificSubscriptionInApp": {
            "description": "The scope of the current targeting rule is the subscription with the specified subscription ID. Must be a subscription within the same parent app.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpgradeTargetingRule": {
        "description": "Represents a targeting rule of the form: User currently has {scope} [with billing period {billing_period}].",
        "properties": {
          "billingPeriodDuration": {
            "description": "The specific billing period duration, specified in ISO 8601 format, that a user must be currently subscribed to to be eligible for this rule. If not specified, users subscribed to any billing period are matched.",
            "type": "string"
          },
          "oncePerUser": {
            "description": "Limit this offer to only once per user. If set to true, a user can never be eligible for this offer again if they ever subscribed to this offer.",
            "type": "boolean"
          },
          "scope": {
            "$ref": "#/$defs/TargetingRuleScope"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PATCH",
    "url": {
      "$uri": "https://androidpublisher.googleapis.com//androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}/offers/{offerId}{?allowMissing,latencyTolerance,regionsVersion.version,updateMask,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A single, temporary offer",
        "**Key properties:**",
        {
          "$ul": [
            "**basePlanId**: Required. Immutable. The ID of the base plan to which this offer is an extension.",
            "**offerId**: Required. Immutable. Unique ID of this subscription offer. Must be unique within the base plan.",
            "**offerTags**: List of up to 20 custom tags specified for this offer, and returned to the app through the billing library.",
            [
              "**otherRegionsConfig**: Configuration for any new locations Play may launch in specified on a subscription offer.",
              {
                "$ul": [
                  "**otherRegionsNewSubscriberAvailability**: Whether the subscription offer in any new locations Play may launch in the future. If not specified, this will default to false."
                ]
              }
            ],
            "**packageName**: Required. Immutable. The package name of the app the parent subscription belongs to.",
            "**phases**: Required. The phases of this subscription offer. Must contain at least one entry, and may contain at most five. Users will always receive all these phases in the specified order. Phases may not be added, removed, or reordered after initial creation.",
            "**productId**: Required. Immutable. The ID of the parent subscription this offer belongs to.",
            "**regionalConfigs**: Required. The region-specific configuration of this offer. Must contain at least one entry.",
            "**state**: Output only. The current state of this offer. Can be changed using Activate and Deactivate actions. NB: the base plan state supersedes this state, so an active offer may not be available if the base plan is not active.",
            [
              "**targeting**: Defines the rule a user needs to satisfy to receive this offer.",
              {
                "$ul": [
                  [
                    "**acquisitionRule**: Represents a targeting rule of the form: User never had {scope} before.",
                    {
                      "$ul": [
                        [
                          "**scope**: Defines the scope of subscriptions which a targeting rule can match to target offers to users based on past or current entitlement.",
                          {
                            "$ul": [
                              "**specificSubscriptionInApp**: The scope of the current targeting rule is the subscription with the specified subscription ID. Must be a subscription within the same parent app."
                            ]
                          }
                        ]
                      ]
                    }
                  ],
                  [
                    "**upgradeRule**: Represents a targeting rule of the form: User currently has {scope} [with billing period {billing_period}].",
                    {
                      "$ul": [
                        "**billingPeriodDuration**: The specific billing period duration, specified in ISO 8601 format, that a user must be currently subscribed to to be eligible for this rule. If not specified, users subscribed to any billing period are matched.",
                        "**oncePerUser**: Limit this offer to only once per user. If set to true, a user can never be eligible for this offer again if they ever subscribed to this offer.",
                        [
                          "**scope**: Defines the scope of subscriptions which a targeting rule can match to target offers to users based on past or current entitlement.",
                          {
                            "$ul": [
                              "**specificSubscriptionInApp**: The scope of the current targeting rule is the subscription with the specified subscription ID. Must be a subscription within the same parent app."
                            ]
                          }
                        ]
                      ]
                    }
                  ]
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
