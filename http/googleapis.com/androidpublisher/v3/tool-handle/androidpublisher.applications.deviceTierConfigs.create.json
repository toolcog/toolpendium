{
  "name": "androidpublisher_applications_deviceTierConfigs_create",
  "description": "Creates a new device tier config for an app.",
  "parameters": {
    "type": "object",
    "properties": {
      "packageName": {
        "type": "string",
        "description": "Package name of the app."
      },
      "allowUnknownDevices": {
        "type": "boolean",
        "description": "Whether the service should accept device IDs that are unknown to Play's device catalog."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/DeviceTierConfig"
      }
    },
    "required": [
      "packageName"
    ],
    "$defs": {
      "DeviceTierConfig": {
        "description": "Configuration describing device targeting criteria for the content of an app.",
        "properties": {
          "deviceGroups": {
            "description": "Definition of device groups for the app.",
            "items": {
              "$ref": "#/$defs/DeviceGroup"
            },
            "type": "array"
          },
          "deviceTierConfigId": {
            "description": "Output only. The device tier config ID.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "deviceTierSet": {
            "$ref": "#/$defs/DeviceTierSet"
          },
          "userCountrySets": {
            "description": "Definition of user country sets for the app.",
            "items": {
              "$ref": "#/$defs/UserCountrySet"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DeviceGroup": {
        "description": "A group of devices. A group is defined by a set of device selectors. A device belongs to the group if it matches any selector (logical OR).",
        "properties": {
          "deviceSelectors": {
            "description": "Device selectors for this group. A device matching any of the selectors is included in this group.",
            "items": {
              "$ref": "#/$defs/DeviceSelector"
            },
            "type": "array"
          },
          "name": {
            "description": "The name of the group.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeviceSelector": {
        "description": "Selector for a device group. A selector consists of a set of conditions on the device that should all match (logical AND) to determine a device group eligibility. For instance, if a selector specifies RAM conditions, device model inclusion and device model exclusion, a device is considered to match if: device matches RAM conditions AND device matches one of the included device models AND device doesn't match excluded device models",
        "properties": {
          "deviceRam": {
            "$ref": "#/$defs/DeviceRam"
          },
          "excludedDeviceIds": {
            "description": "Device models excluded by this selector, even if they match all other conditions.",
            "items": {
              "$ref": "#/$defs/DeviceId"
            },
            "type": "array"
          },
          "forbiddenSystemFeatures": {
            "description": "A device that has any of these system features is excluded by this selector, even if it matches all other conditions.",
            "items": {
              "$ref": "#/$defs/SystemFeature"
            },
            "type": "array"
          },
          "includedDeviceIds": {
            "description": "Device models included by this selector.",
            "items": {
              "$ref": "#/$defs/DeviceId"
            },
            "type": "array"
          },
          "requiredSystemFeatures": {
            "description": "A device needs to have all these system features to be included by the selector.",
            "items": {
              "$ref": "#/$defs/SystemFeature"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DeviceRam": {
        "description": "Conditions about a device's RAM capabilities.",
        "properties": {
          "maxBytes": {
            "description": "Maximum RAM in bytes (bound excluded).",
            "format": "int64",
            "type": "string"
          },
          "minBytes": {
            "description": "Minimum RAM in bytes (bound included).",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeviceId": {
        "description": "Identifier of a device.",
        "properties": {
          "buildBrand": {
            "description": "Value of Build.BRAND.",
            "type": "string"
          },
          "buildDevice": {
            "description": "Value of Build.DEVICE.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SystemFeature": {
        "description": "Representation of a system feature.",
        "properties": {
          "name": {
            "description": "The name of the feature.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeviceTierSet": {
        "description": "A set of device tiers. A tier set determines what variation of app content gets served to a specific device, for device-targeted content. You should assign a priority level to each tier, which determines the ordering by which they are evaluated by Play. See the documentation of DeviceTier.level for more details.",
        "properties": {
          "deviceTiers": {
            "description": "Device tiers belonging to the set.",
            "items": {
              "$ref": "#/$defs/DeviceTier"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DeviceTier": {
        "description": "A single device tier. Devices matching any of the device groups in device_group_names are considered to match the tier.",
        "properties": {
          "deviceGroupNames": {
            "description": "Groups of devices included in this tier. These groups must be defined explicitly under device_groups in this configuration.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "level": {
            "description": "The priority level of the tier. Tiers are evaluated in descending order of level: the highest level tier has the highest priority. The highest tier matching a given device is selected for that device. You should use a contiguous range of levels for your tiers in a tier set; tier levels in a tier set must be unique. For instance, if your tier set has 4 tiers (including the global fallback), you should define tiers 1, 2 and 3 in this configuration. Note: tier 0 is implicitly defined as a global fallback and selected for devices that don't match any of the tiers explicitly defined here. You mustn't define level 0 explicitly in this configuration.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "UserCountrySet": {
        "description": "A set of user countries. A country set determines what variation of app content gets served to a specific location.",
        "properties": {
          "countryCodes": {
            "description": "List of country codes representing countries. A Country code is represented in ISO 3166 alpha-2 format. For Example:- \"IT\" for Italy, \"GE\" for Georgia.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "name": {
            "description": "Country set name.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://androidpublisher.googleapis.com//androidpublisher/v3/applications/{packageName}/deviceTierConfigs{?allowUnknownDevices,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Configuration describing device targeting criteria for the content of an app.",
        "**Key properties:**",
        {
          "$ul": [
            "**deviceGroups**: Definition of device groups for the app.",
            "**deviceTierConfigId**: Output only. The device tier config ID.",
            [
              "**deviceTierSet**: A set of device tiers. A tier set determines what variation of app content gets served to a specific device, for device-targeted content. You should assign a priority level to each tier, which determines the ordering by which they are evaluated by Play. See the documentation of DeviceTier.level for more details.",
              {
                "$ul": [
                  "**deviceTiers**: Device tiers belonging to the set."
                ]
              }
            ],
            "**userCountrySets**: Definition of user country sets for the app."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
