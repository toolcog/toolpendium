{
  "name": "androidpublisher_purchases_voidedpurchases_list",
  "description": "Lists the purchases that were canceled, refunded or charged-back.",
  "parameters": {
    "type": "object",
    "properties": {
      "packageName": {
        "type": "string",
        "description": "The package name of the application for which voided purchases need to be returned (for example, 'com.some.thing')."
      },
      "endTime": {
        "type": "string",
        "description": "The time, in milliseconds since the Epoch, of the newest voided purchase that you want to see in the response. The value of this parameter cannot be greater than the current time and is ignored if a pagination token is set. Default value is current time. Note: This filter is applied on the time at which the record is seen as voided by our systems and not the actual voided time returned in the response."
      },
      "maxResults": {
        "type": "integer",
        "description": "Defines how many results the list operation should return. The default number depends on the resource collection."
      },
      "startIndex": {
        "type": "integer",
        "description": "Defines the index of the first element to return. This can only be used if indexed paging is enabled."
      },
      "startTime": {
        "type": "string",
        "description": "The time, in milliseconds since the Epoch, of the oldest voided purchase that you want to see in the response. The value of this parameter cannot be older than 30 days and is ignored if a pagination token is set. Default value is current time minus 30 days. Note: This filter is applied on the time at which the record is seen as voided by our systems and not the actual voided time returned in the response."
      },
      "token": {
        "type": "string",
        "description": "Defines the token of the page to return, usually taken from TokenPagination. This can only be used if token paging is enabled."
      },
      "type": {
        "type": "integer",
        "description": "The type of voided purchases that you want to see in the response. Possible values are: 0. Only voided in-app product purchases will be returned in the response. This is the default value. 1. Both voided in-app purchases and voided subscription purchases will be returned in the response. Note: Before requesting to receive voided subscription purchases, you must switch to use orderId in the response which uniquely identifies one-time purchases and subscriptions. Otherwise, you will receive multiple subscription orders with the same PurchaseToken, because subscription renewal orders share the same PurchaseToken."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      }
    },
    "required": [
      "packageName"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://androidpublisher.googleapis.com//androidpublisher/v3/applications/{packageName}/purchases/voidedpurchases{?endTime,maxResults,startIndex,startTime,token,type,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Response for the voidedpurchases.list API.",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**pageInfo**: Information about the current page. List operations that supports paging return only one \"page\" of results. This protocol buffer message describes the page that has been returned.",
              {
                "$ul": [
                  "**resultPerPage**: Maximum number of results returned in one page. ! The number of results included in the API response.",
                  "**startIndex**: Index of the first result returned in the current page.",
                  "**totalResults**: Total number of results available on the backend ! The total number of results in the result set."
                ]
              }
            ],
            [
              "**tokenPagination**: Pagination information returned by a List operation when token pagination is enabled. List operations that supports paging return only one \"page\" of results. This protocol buffer message describes the page that has been returned. When using token pagination, clients should use the next/previous token to get another page of the result. The presence or absence of next/previous token indicates whether a next/previous page is available and provides a mean of accessing this page. ListRequest.page_token should be set to either next_page_token or previous_page_token to access another page.",
              {
                "$ul": [
                  "**nextPageToken**: Tokens to pass to the standard list field 'page_token'. Whenever available, tokens are preferred over manipulating start_index.",
                  "**previousPageToken**"
                ]
              }
            ],
            "**voidedPurchases**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
