{
  "name": "poly_assets_get",
  "description": "Returns detailed information about an asset given its name. PRIVATE assets are returned only if the currently authenticated user (via OAuth token) is the author of the asset.",
  "parameters": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "Required. An asset's name in the form `assets/{ASSET_ID}`."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      }
    },
    "required": [
      "name"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://poly.googleapis.com//v1/{name}{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Represents and describes an asset in the Poly library. An asset is a 3D model or scene created using [Tilt Brush](//www.tiltbrush.com), [Blocks](//vr.google.com/blocks/), or any 3D program that produces a file that can be upload to Poly.",
        "**Key properties:**",
        {
          "$ul": [
            "**authorName**: The author's publicly visible name. Use this name when giving credit to the author. For more information, see [Licensing](/poly/discover/licensing).",
            "**createTime**: For published assets, the time when the asset was published. For unpublished assets, the time when the asset was created.",
            "**description**: The human-readable description, set by the asset's author.",
            "**displayName**: The human-readable name, set by the asset's author.",
            "**formats**: A list of Formats where each format describes one representation of the asset.",
            "**isCurated**: Whether this asset has been curated by the Poly team.",
            "**license**: The license under which the author has made the asset available for use, if any.",
            "**metadata**: Application-defined opaque metadata for this asset. This field is only returned when querying for the signed-in user's own assets, not for public assets. This string is limited to 1K chars. It is up to the creator of the asset to define the format for this string (for example, JSON).",
            "**name**: The unique identifier for the asset in the form: `assets/{ASSET_ID}`.",
            [
              "**presentationParams**: Hints for displaying the asset, based on information available when the asset was uploaded.",
              {
                "$ul": [
                  "**backgroundColor**: A background color which could be used for displaying the 3D asset in a 'thumbnail' or 'palette' style view. Authors have the option to set this background color when publishing or editing their asset. This is represented as a six-digit hexademical triplet specifying the RGB components of the background color, e.g. #FF0000 for Red.",
                  "**colorSpace**: The materials' diffuse/albedo color. This does not apply to vertex colors or texture maps.",
                  [
                    "**orientingRotation**: A [Quaternion](//en.wikipedia.org/wiki/Quaternion). Please note: if in the response you see \"w: 1\" and nothing else this is the default value of [0, 0, 0, 1] where x,y, and z are 0.",
                    {
                      "$ul": [
                        "**w**: The scalar component.",
                        "**x**: The x component.",
                        "**y**: The y component.",
                        "**z**: The z component."
                      ]
                    }
                  ]
                ]
              }
            ],
            [
              "**remixInfo**: Info about the sources of this asset (i.e. assets that were remixed to create this asset).",
              {
                "$ul": [
                  "**sourceAsset**: Resource ids for the sources of this remix, of the form: `assets/{ASSET_ID}`"
                ]
              }
            ],
            [
              "**thumbnail**: Represents a file in Poly, which can be a root, resource, or thumbnail file.",
              {
                "$ul": [
                  "**contentType**: The MIME content-type, such as `image/png`. For more information, see [MIME types](//developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types).",
                  "**relativePath**: The path of the resource file relative to the root file. For root or thumbnail files, this is just the filename.",
                  "**url**: The URL where the file data can be retrieved."
                ]
              }
            ],
            "**updateTime**: The time when the asset was last modified. For published assets, whose contents are immutable, the update time changes only when metadata properties, such as visibility, are updated.",
            "**visibility**: The visibility of the asset and who can access it."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
