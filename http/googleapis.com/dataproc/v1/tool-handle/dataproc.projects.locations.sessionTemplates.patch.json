{
  "name": "dataproc_projects_locations_sessionTemplates_patch",
  "description": "Updates the session template synchronously.",
  "parameters": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "Required. The resource name of the session template."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/SessionTemplate"
      }
    },
    "required": [
      "name"
    ],
    "$defs": {
      "SessionTemplate": {
        "description": "A representation of a session template.",
        "properties": {
          "createTime": {
            "description": "Output only. The time when the template was created.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "creator": {
            "description": "Output only. The email address of the user who created the template.",
            "readOnly": true,
            "type": "string"
          },
          "description": {
            "description": "Optional. Brief description of the template.",
            "type": "string"
          },
          "environmentConfig": {
            "$ref": "#/$defs/EnvironmentConfig"
          },
          "jupyterSession": {
            "$ref": "#/$defs/JupyterConfig"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Optional. Labels to associate with sessions created using this template. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values can be empty, but, if present, must contain 1 to 63 characters and conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a session.",
            "type": "object"
          },
          "name": {
            "description": "Required. The resource name of the session template.",
            "type": "string"
          },
          "runtimeConfig": {
            "$ref": "#/$defs/RuntimeConfig"
          },
          "updateTime": {
            "description": "Output only. The time the template was last updated.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "uuid": {
            "description": "Output only. A session template UUID (Unique Universal Identifier). The service generates this value when it creates the session template.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "EnvironmentConfig": {
        "description": "Environment configuration for a workload.",
        "properties": {
          "executionConfig": {
            "$ref": "#/$defs/ExecutionConfig"
          },
          "peripheralsConfig": {
            "$ref": "#/$defs/PeripheralsConfig"
          }
        },
        "type": "object"
      },
      "ExecutionConfig": {
        "description": "Execution configuration for a workload.",
        "properties": {
          "idleTtl": {
            "description": "Optional. Applies to sessions only. The duration to keep the session alive while it's idling. Exceeding this threshold causes the session to terminate. This field cannot be set on a batch workload. Minimum value is 10 minutes; maximum value is 14 days (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)). Defaults to 1 hour if not set. If both ttl and idle_ttl are specified for an interactive session, the conditions are treated as OR conditions: the workload will be terminated when it has been idle for idle_ttl or when ttl has been exceeded, whichever occurs first.",
            "format": "google-duration",
            "type": "string"
          },
          "kmsKey": {
            "description": "Optional. The Cloud KMS key to use for encryption.",
            "type": "string"
          },
          "networkTags": {
            "description": "Optional. Tags used for network traffic control.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "networkUri": {
            "description": "Optional. Network URI to connect workload to.",
            "type": "string"
          },
          "serviceAccount": {
            "description": "Optional. Service account that used to execute workload.",
            "type": "string"
          },
          "stagingBucket": {
            "description": "Optional. A Cloud Storage bucket used to stage workload dependencies, config files, and store workload output and other ephemeral data, such as Spark history files. If you do not specify a staging bucket, Cloud Dataproc will determine a Cloud Storage location according to the region where your workload is running, and then create and manage project-level, per-location staging and temporary buckets. This field requires a Cloud Storage bucket name, not a gs://... URI to a Cloud Storage bucket.",
            "type": "string"
          },
          "subnetworkUri": {
            "description": "Optional. Subnetwork URI to connect workload to.",
            "type": "string"
          },
          "ttl": {
            "description": "Optional. The duration after which the workload will be terminated, specified as the JSON representation for Duration (https://protobuf.dev/programming-guides/proto3/#json). When the workload exceeds this duration, it will be unconditionally terminated without waiting for ongoing work to finish. If ttl is not specified for a batch workload, the workload will be allowed to run until it exits naturally (or run forever without exiting). If ttl is not specified for an interactive session, it defaults to 24 hours. If ttl is not specified for a batch that uses 2.1+ runtime version, it defaults to 4 hours. Minimum value is 10 minutes; maximum value is 14 days. If both ttl and idle_ttl are specified (for an interactive session), the conditions are treated as OR conditions: the workload will be terminated when it has been idle for idle_ttl or when ttl has been exceeded, whichever occurs first.",
            "format": "google-duration",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PeripheralsConfig": {
        "description": "Auxiliary services configuration for a workload.",
        "properties": {
          "metastoreService": {
            "description": "Optional. Resource name of an existing Dataproc Metastore service.Example: projects/[project_id]/locations/[region]/services/[service_id]",
            "type": "string"
          },
          "sparkHistoryServerConfig": {
            "$ref": "#/$defs/SparkHistoryServerConfig"
          }
        },
        "type": "object"
      },
      "SparkHistoryServerConfig": {
        "description": "Spark History Server configuration for the workload.",
        "properties": {
          "dataprocCluster": {
            "description": "Optional. Resource name of an existing Dataproc Cluster to act as a Spark History Server for the workload.Example: projects/[project_id]/regions/[region]/clusters/[cluster_name]",
            "type": "string"
          }
        },
        "type": "object"
      },
      "JupyterConfig": {
        "description": "Jupyter configuration for an interactive session.",
        "properties": {
          "displayName": {
            "description": "Optional. Display name, shown in the Jupyter kernelspec card.",
            "type": "string"
          },
          "kernel": {
            "description": "Optional. Kernel",
            "enum": [
              "KERNEL_UNSPECIFIED",
              "PYTHON",
              "SCALA"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "RuntimeConfig": {
        "description": "Runtime configuration for a workload.",
        "properties": {
          "containerImage": {
            "description": "Optional. Optional custom container image for the job runtime environment. If not specified, a default container image will be used.",
            "type": "string"
          },
          "properties": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Optional. A mapping of property names to values, which are used to configure workload execution.",
            "type": "object"
          },
          "repositoryConfig": {
            "$ref": "#/$defs/RepositoryConfig"
          },
          "version": {
            "description": "Optional. Version of the batch runtime.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RepositoryConfig": {
        "description": "Configuration for dependency repositories",
        "properties": {
          "pypiRepositoryConfig": {
            "$ref": "#/$defs/PyPiRepositoryConfig"
          }
        },
        "type": "object"
      },
      "PyPiRepositoryConfig": {
        "description": "Configuration for PyPi repository",
        "properties": {
          "pypiRepository": {
            "description": "Optional. PyPi repository address",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PATCH",
    "url": {
      "$uri": "https://dataproc.googleapis.com//v1/{name}{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A representation of a session template.",
        "**Key properties:**",
        {
          "$ul": [
            "**createTime**: Output only. The time when the template was created.",
            "**creator**: Output only. The email address of the user who created the template.",
            "**description**: Optional. Brief description of the template.",
            [
              "**environmentConfig**: Environment configuration for a workload.",
              {
                "$ul": [
                  [
                    "**executionConfig**: Execution configuration for a workload.",
                    {
                      "$ul": [
                        "**idleTtl**: Optional. Applies to sessions only. The duration to keep the session alive while it's idling. Exceeding this threshold causes the session to terminate. This field cannot be set on a batch workload. Minimum value is 10 minutes; maximum value is 14 days (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)). Defaults to 1 hour if not set. If both ttl and idle_ttl are specified for an interactive session, the conditions are treated as OR conditions: the workload will be terminated when it has been idle for idle_ttl or when ttl has been exceeded, whichever occurs first.",
                        "**kmsKey**: Optional. The Cloud KMS key to use for encryption.",
                        "**networkTags**: Optional. Tags used for network traffic control.",
                        "**networkUri**: Optional. Network URI to connect workload to.",
                        "**serviceAccount**: Optional. Service account that used to execute workload.",
                        "**stagingBucket**: Optional. A Cloud Storage bucket used to stage workload dependencies, config files, and store workload output and other ephemeral data, such as Spark history files. If you do not specify a staging bucket, Cloud Dataproc will determine a Cloud Storage location according to the region where your workload is running, and then create and manage project-level, per-location staging and temporary buckets. This field requires a Cloud Storage bucket name, not a gs://... URI to a Cloud Storage bucket.",
                        "**subnetworkUri**: Optional. Subnetwork URI to connect workload to.",
                        "**ttl**: Optional. The duration after which the workload will be terminated, specified as the JSON representation for Duration (https://protobuf.dev/programming-guides/proto3/#json). When the workload exceeds this duration, it will be unconditionally terminated without waiting for ongoing work to finish. If ttl is not specified for a batch workload, the workload will be allowed to run until it exits naturally (or run forever without exiting). If ttl is not specified for an interactive session, it defaults to 24 hours. If ttl is not specified for a batch that uses 2.1+ runtime version, it defaults to 4 hours. Minimum value is 10 minutes; maximum value is 14 days. If both ttl and idle_ttl are specified (for an interactive session), the conditions are treated as OR conditions: the workload will be terminated when it has been idle for idle_ttl or when ttl has been exceeded, whichever occurs first."
                      ]
                    }
                  ],
                  [
                    "**peripheralsConfig**: Auxiliary services configuration for a workload.",
                    {
                      "$ul": [
                        "**metastoreService**: Optional. Resource name of an existing Dataproc Metastore service.Example: projects/[project_id]/locations/[region]/services/[service_id]",
                        [
                          "**sparkHistoryServerConfig**: Spark History Server configuration for the workload.",
                          {
                            "$ul": [
                              "**dataprocCluster**: Optional. Resource name of an existing Dataproc Cluster to act as a Spark History Server for the workload.Example: projects/[project_id]/regions/[region]/clusters/[cluster_name]"
                            ]
                          }
                        ]
                      ]
                    }
                  ]
                ]
              }
            ],
            [
              "**jupyterSession**: Jupyter configuration for an interactive session.",
              {
                "$ul": [
                  "**displayName**: Optional. Display name, shown in the Jupyter kernelspec card.",
                  "**kernel**: Optional. Kernel"
                ]
              }
            ],
            "**labels**: Optional. Labels to associate with sessions created using this template. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values can be empty, but, if present, must contain 1 to 63 characters and conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a session.",
            "**name**: Required. The resource name of the session template.",
            [
              "**runtimeConfig**: Runtime configuration for a workload.",
              {
                "$ul": [
                  "**containerImage**: Optional. Optional custom container image for the job runtime environment. If not specified, a default container image will be used.",
                  "**properties**: Optional. A mapping of property names to values, which are used to configure workload execution.",
                  [
                    "**repositoryConfig**: Configuration for dependency repositories",
                    {
                      "$ul": [
                        [
                          "**pypiRepositoryConfig**: Configuration for PyPi repository",
                          {
                            "$ul": [
                              "**pypiRepository**: Optional. PyPi repository address"
                            ]
                          }
                        ]
                      ]
                    }
                  ],
                  "**version**: Optional. Version of the batch runtime."
                ]
              }
            ],
            "**updateTime**: Output only. The time the template was last updated.",
            "**uuid**: Output only. A session template UUID (Unique Universal Identifier). The service generates this value when it creates the session template."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
