{
  "name": "dataproc_projects_regions_clusters_nodeGroups_create",
  "description": "Creates a node group in a cluster. The returned Operation.metadata is NodeGroupOperationMetadata (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#nodegroupoperationmetadata).",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The parent resource where this node group will be created. Format: projects/{project}/regions/{region}/clusters/{cluster}"
      },
      "nodeGroupId": {
        "type": "string",
        "description": "Optional. An optional node group ID. Generated if not specified.The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of from 3 to 33 characters."
      },
      "parentOperationId": {
        "type": "string",
        "description": "Optional. operation id of the parent operation sending the create request"
      },
      "requestId": {
        "type": "string",
        "description": "Optional. A unique ID used to identify the request. If the server receives two CreateNodeGroupRequest (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.CreateNodeGroupRequest) with the same ID, the second request is ignored and the first google.longrunning.Operation created and stored in the backend is returned.Recommendation: Set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/NodeGroup"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "NodeGroup": {
        "description": "Dataproc Node Group. The Dataproc NodeGroup resource is not related to the Dataproc NodeGroupAffinity resource.",
        "properties": {
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Optional. Node group labels. Label keys must consist of from 1 to 63 characters and conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values can be empty. If specified, they must consist of from 1 to 63 characters and conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). The node group must have no more than 32 labelsn.",
            "type": "object"
          },
          "name": {
            "description": "The Node group resource name (https://aip.dev/122).",
            "type": "string"
          },
          "nodeGroupConfig": {
            "$ref": "#/$defs/InstanceGroupConfig"
          },
          "roles": {
            "description": "Required. Node group roles.",
            "items": {
              "enum": [
                "ROLE_UNSPECIFIED",
                "DRIVER"
              ],
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "InstanceGroupConfig": {
        "description": "The config settings for Compute Engine resources in an instance group, such as a master or worker group.",
        "properties": {
          "accelerators": {
            "description": "Optional. The Compute Engine accelerator configuration for these instances.",
            "items": {
              "$ref": "#/$defs/AcceleratorConfig"
            },
            "type": "array"
          },
          "diskConfig": {
            "$ref": "#/$defs/DiskConfig"
          },
          "imageUri": {
            "description": "Optional. The Compute Engine image resource used for cluster instances.The URI can represent an image or image family.Image examples: https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/[image-id] projects/[project_id]/global/images/[image-id] image-idImage family examples. Dataproc will use the most recent image from the family: https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/family/[custom-image-family-name] projects/[project_id]/global/images/family/[custom-image-family-name]If the URI is unspecified, it will be inferred from SoftwareConfig.image_version or the system default.",
            "type": "string"
          },
          "instanceFlexibilityPolicy": {
            "$ref": "#/$defs/InstanceFlexibilityPolicy"
          },
          "instanceNames": {
            "description": "Output only. The list of instance names. Dataproc derives the names from cluster_name, num_instances, and the instance group.",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "instanceReferences": {
            "description": "Output only. List of references to Compute Engine instances.",
            "items": {
              "$ref": "#/$defs/InstanceReference"
            },
            "readOnly": true,
            "type": "array"
          },
          "isPreemptible": {
            "description": "Output only. Specifies that this instance group contains preemptible instances.",
            "readOnly": true,
            "type": "boolean"
          },
          "machineTypeUri": {
            "description": "Optional. The Compute Engine machine type used for cluster instances.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2 projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2 n1-standard-2Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the machine type resource, for example, n1-standard-2.",
            "type": "string"
          },
          "managedGroupConfig": {
            "$ref": "#/$defs/ManagedGroupConfig"
          },
          "minCpuPlatform": {
            "description": "Optional. Specifies the minimum cpu platform for the Instance Group. See Dataproc -> Minimum CPU Platform (https://cloud.google.com/dataproc/docs/concepts/compute/dataproc-min-cpu).",
            "type": "string"
          },
          "minNumInstances": {
            "description": "Optional. The minimum number of primary worker instances to create. If min_num_instances is set, cluster creation will succeed if the number of primary workers created is at least equal to the min_num_instances number.Example: Cluster creation request with num_instances = 5 and min_num_instances = 3: If 4 VMs are created and 1 instance fails, the failed VM is deleted. The cluster is resized to 4 instances and placed in a RUNNING state. If 2 instances are created and 3 instances fail, the cluster in placed in an ERROR state. The failed VMs are not deleted.",
            "format": "int32",
            "type": "integer"
          },
          "numInstances": {
            "description": "Optional. The number of VM instances in the instance group. For HA cluster master_config groups, must be set to 3. For standard cluster master_config groups, must be set to 1.",
            "format": "int32",
            "type": "integer"
          },
          "preemptibility": {
            "description": "Optional. Specifies the preemptibility of the instance group.The default value for master and worker groups is NON_PREEMPTIBLE. This default cannot be changed.The default value for secondary instances is PREEMPTIBLE.",
            "enum": [
              "PREEMPTIBILITY_UNSPECIFIED",
              "NON_PREEMPTIBLE",
              "PREEMPTIBLE",
              "SPOT"
            ],
            "type": "string"
          },
          "startupConfig": {
            "$ref": "#/$defs/StartupConfig"
          }
        },
        "type": "object"
      },
      "AcceleratorConfig": {
        "description": "Specifies the type and number of accelerator cards attached to the instances of an instance. See GPUs on Compute Engine (https://cloud.google.com/compute/docs/gpus/).",
        "properties": {
          "acceleratorCount": {
            "description": "The number of the accelerator cards of this type exposed to this instance.",
            "format": "int32",
            "type": "integer"
          },
          "acceleratorTypeUri": {
            "description": "Full URL, partial URI, or short name of the accelerator type resource to expose to this instance. See Compute Engine AcceleratorTypes (https://cloud.google.com/compute/docs/reference/v1/acceleratorTypes).Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/acceleratorTypes/nvidia-tesla-k80 projects/[project_id]/zones/[zone]/acceleratorTypes/nvidia-tesla-k80 nvidia-tesla-k80Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the accelerator type resource, for example, nvidia-tesla-k80.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DiskConfig": {
        "description": "Specifies the config of disk options for a group of VM instances.",
        "properties": {
          "bootDiskSizeGb": {
            "description": "Optional. Size in GB of the boot disk (default is 500GB).",
            "format": "int32",
            "type": "integer"
          },
          "bootDiskType": {
            "description": "Optional. Type of the boot disk (default is \"pd-standard\"). Valid values: \"pd-balanced\" (Persistent Disk Balanced Solid State Drive), \"pd-ssd\" (Persistent Disk Solid State Drive), or \"pd-standard\" (Persistent Disk Hard Disk Drive). See Disk types (https://cloud.google.com/compute/docs/disks#disk-types).",
            "type": "string"
          },
          "localSsdInterface": {
            "description": "Optional. Interface type of local SSDs (default is \"scsi\"). Valid values: \"scsi\" (Small Computer System Interface), \"nvme\" (Non-Volatile Memory Express). See local SSD performance (https://cloud.google.com/compute/docs/disks/local-ssd#performance).",
            "type": "string"
          },
          "numLocalSsds": {
            "description": "Optional. Number of attached SSDs, from 0 to 8 (default is 0). If SSDs are not attached, the boot disk is used to store runtime logs and HDFS (https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html) data. If one or more SSDs are attached, this runtime bulk data is spread across them, and the boot disk contains only basic config and installed binaries.Note: Local SSD options may vary by machine type and number of vCPUs selected.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "InstanceFlexibilityPolicy": {
        "description": "Instance flexibility Policy allowing a mixture of VM shapes and provisioning models.",
        "properties": {
          "instanceSelectionList": {
            "description": "Optional. List of instance selection options that the group will use when creating new VMs.",
            "items": {
              "$ref": "#/$defs/InstanceSelection"
            },
            "type": "array"
          },
          "instanceSelectionResults": {
            "description": "Output only. A list of instance selection results in the group.",
            "items": {
              "$ref": "#/$defs/InstanceSelectionResult"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "InstanceSelection": {
        "description": "Defines machines types and a rank to which the machines types belong.",
        "properties": {
          "machineTypes": {
            "description": "Optional. Full machine-type names, e.g. \"n1-standard-16\".",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "rank": {
            "description": "Optional. Preference of this instance selection. Lower number means higher preference. Dataproc will first try to create a VM based on the machine-type with priority rank and fallback to next rank based on availability. Machine types and instance selections with the same priority have the same preference.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "InstanceSelectionResult": {
        "description": "Defines a mapping from machine types to the number of VMs that are created with each machine type.",
        "properties": {
          "machineType": {
            "description": "Output only. Full machine-type names, e.g. \"n1-standard-16\".",
            "readOnly": true,
            "type": "string"
          },
          "vmCount": {
            "description": "Output only. Number of VM provisioned with the machine_type.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "InstanceReference": {
        "description": "A reference to a Compute Engine instance.",
        "properties": {
          "instanceId": {
            "description": "The unique identifier of the Compute Engine instance.",
            "type": "string"
          },
          "instanceName": {
            "description": "The user-friendly name of the Compute Engine instance.",
            "type": "string"
          },
          "publicEciesKey": {
            "description": "The public ECIES key used for sharing data with this instance.",
            "type": "string"
          },
          "publicKey": {
            "description": "The public RSA key used for sharing data with this instance.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ManagedGroupConfig": {
        "description": "Specifies the resources used to actively manage an instance group.",
        "properties": {
          "instanceGroupManagerName": {
            "description": "Output only. The name of the Instance Group Manager for this group.",
            "readOnly": true,
            "type": "string"
          },
          "instanceGroupManagerUri": {
            "description": "Output only. The partial URI to the instance group manager for this group. E.g. projects/my-project/regions/us-central1/instanceGroupManagers/my-igm.",
            "readOnly": true,
            "type": "string"
          },
          "instanceTemplateName": {
            "description": "Output only. The name of the Instance Template used for the Managed Instance Group.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "StartupConfig": {
        "description": "Configuration to handle the startup of instances during cluster create and update process.",
        "properties": {
          "requiredRegistrationFraction": {
            "description": "Optional. The config setting to enable cluster creation/ updation to be successful only after required_registration_fraction of instances are up and running. This configuration is applicable to only secondary workers for now. The cluster will fail if required_registration_fraction of instances are not available. This will include instance creation, agent registration, and service registration (if enabled).",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://dataproc.googleapis.com//v1/{parent}/nodeGroups{?nodeGroupId,parentOperationId,requestId,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "This resource represents a long-running operation that is the result of a network API call.",
        "**Key properties:**",
        {
          "$ul": [
            "**done**: If the value is false, it means the operation is still in progress. If true, the operation is completed, and either error or response is available.",
            [
              "**error**: The Status type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by gRPC (https://github.com/grpc). Each Status message contains three pieces of data: error code, error message, and error details.You can find out more about this error model and how to work with it in the API Design Guide (https://cloud.google.com/apis/design/errors).",
              {
                "$ul": [
                  "**code**: The status code, which should be an enum value of google.rpc.Code.",
                  "**details**: A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                  "**message**: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                ]
              }
            ],
            "**metadata**: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
            "**name**: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the name should be a resource name ending with operations/{unique_id}.",
            "**response**: The normal, successful response of the operation. If the original method returns no data on success, such as Delete, the response is google.protobuf.Empty. If the original method is standard Get/Create/Update, the response should be the resource. For other methods, the response should have the type XxxResponse, where Xxx is the original method name. For example, if the original method name is TakeSnapshot(), the inferred response type is TakeSnapshotResponse."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
