{
  "name": "dataproc_projects_locations_sessions_create",
  "description": "Create an interactive session asynchronously.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The parent resource where this session will be created."
      },
      "requestId": {
        "type": "string",
        "description": "Optional. A unique ID used to identify the request. If the service receives two CreateSessionRequests (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.CreateSessionRequest)s with the same ID, the second request is ignored, and the first Session is created and stored in the backend.Recommendation: Set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The value must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters."
      },
      "sessionId": {
        "type": "string",
        "description": "Required. The ID to use for the session, which becomes the final component of the session's resource name.This value must be 4-63 characters. Valid characters are /a-z-/."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/Session"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "Session": {
        "description": "A representation of a session.",
        "properties": {
          "createTime": {
            "description": "Output only. The time when the session was created.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "creator": {
            "description": "Output only. The email address of the user who created the session.",
            "readOnly": true,
            "type": "string"
          },
          "environmentConfig": {
            "$ref": "#/$defs/EnvironmentConfig"
          },
          "jupyterSession": {
            "$ref": "#/$defs/JupyterConfig"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Optional. The labels to associate with the session. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a session.",
            "type": "object"
          },
          "name": {
            "description": "Required. The resource name of the session.",
            "type": "string"
          },
          "runtimeConfig": {
            "$ref": "#/$defs/RuntimeConfig"
          },
          "runtimeInfo": {
            "$ref": "#/$defs/RuntimeInfo"
          },
          "sessionTemplate": {
            "description": "Optional. The session template used by the session.Only resource names, including project ID and location, are valid.Example: * https://www.googleapis.com/compute/v1/projects/[project_id]/locations/[dataproc_region]/sessionTemplates/[template_id] * projects/[project_id]/locations/[dataproc_region]/sessionTemplates/[template_id]The template must be in the same project and Dataproc region as the session.",
            "type": "string"
          },
          "state": {
            "description": "Output only. A state of the session.",
            "enum": [
              "STATE_UNSPECIFIED",
              "CREATING",
              "ACTIVE",
              "TERMINATING",
              "TERMINATED",
              "FAILED"
            ],
            "readOnly": true,
            "type": "string"
          },
          "stateHistory": {
            "description": "Output only. Historical state information for the session.",
            "items": {
              "$ref": "#/$defs/SessionStateHistory"
            },
            "readOnly": true,
            "type": "array"
          },
          "stateMessage": {
            "description": "Output only. Session state details, such as the failure description if the state is FAILED.",
            "readOnly": true,
            "type": "string"
          },
          "stateTime": {
            "description": "Output only. The time when the session entered the current state.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "user": {
            "description": "Optional. The email address of the user who owns the session.",
            "type": "string"
          },
          "uuid": {
            "description": "Output only. A session UUID (Unique Universal Identifier). The service generates this value when it creates the session.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "EnvironmentConfig": {
        "description": "Environment configuration for a workload.",
        "properties": {
          "executionConfig": {
            "$ref": "#/$defs/ExecutionConfig"
          },
          "peripheralsConfig": {
            "$ref": "#/$defs/PeripheralsConfig"
          }
        },
        "type": "object"
      },
      "ExecutionConfig": {
        "description": "Execution configuration for a workload.",
        "properties": {
          "idleTtl": {
            "description": "Optional. Applies to sessions only. The duration to keep the session alive while it's idling. Exceeding this threshold causes the session to terminate. This field cannot be set on a batch workload. Minimum value is 10 minutes; maximum value is 14 days (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)). Defaults to 1 hour if not set. If both ttl and idle_ttl are specified for an interactive session, the conditions are treated as OR conditions: the workload will be terminated when it has been idle for idle_ttl or when ttl has been exceeded, whichever occurs first.",
            "format": "google-duration",
            "type": "string"
          },
          "kmsKey": {
            "description": "Optional. The Cloud KMS key to use for encryption.",
            "type": "string"
          },
          "networkTags": {
            "description": "Optional. Tags used for network traffic control.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "networkUri": {
            "description": "Optional. Network URI to connect workload to.",
            "type": "string"
          },
          "serviceAccount": {
            "description": "Optional. Service account that used to execute workload.",
            "type": "string"
          },
          "stagingBucket": {
            "description": "Optional. A Cloud Storage bucket used to stage workload dependencies, config files, and store workload output and other ephemeral data, such as Spark history files. If you do not specify a staging bucket, Cloud Dataproc will determine a Cloud Storage location according to the region where your workload is running, and then create and manage project-level, per-location staging and temporary buckets. This field requires a Cloud Storage bucket name, not a gs://... URI to a Cloud Storage bucket.",
            "type": "string"
          },
          "subnetworkUri": {
            "description": "Optional. Subnetwork URI to connect workload to.",
            "type": "string"
          },
          "ttl": {
            "description": "Optional. The duration after which the workload will be terminated, specified as the JSON representation for Duration (https://protobuf.dev/programming-guides/proto3/#json). When the workload exceeds this duration, it will be unconditionally terminated without waiting for ongoing work to finish. If ttl is not specified for a batch workload, the workload will be allowed to run until it exits naturally (or run forever without exiting). If ttl is not specified for an interactive session, it defaults to 24 hours. If ttl is not specified for a batch that uses 2.1+ runtime version, it defaults to 4 hours. Minimum value is 10 minutes; maximum value is 14 days. If both ttl and idle_ttl are specified (for an interactive session), the conditions are treated as OR conditions: the workload will be terminated when it has been idle for idle_ttl or when ttl has been exceeded, whichever occurs first.",
            "format": "google-duration",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PeripheralsConfig": {
        "description": "Auxiliary services configuration for a workload.",
        "properties": {
          "metastoreService": {
            "description": "Optional. Resource name of an existing Dataproc Metastore service.Example: projects/[project_id]/locations/[region]/services/[service_id]",
            "type": "string"
          },
          "sparkHistoryServerConfig": {
            "$ref": "#/$defs/SparkHistoryServerConfig"
          }
        },
        "type": "object"
      },
      "SparkHistoryServerConfig": {
        "description": "Spark History Server configuration for the workload.",
        "properties": {
          "dataprocCluster": {
            "description": "Optional. Resource name of an existing Dataproc Cluster to act as a Spark History Server for the workload.Example: projects/[project_id]/regions/[region]/clusters/[cluster_name]",
            "type": "string"
          }
        },
        "type": "object"
      },
      "JupyterConfig": {
        "description": "Jupyter configuration for an interactive session.",
        "properties": {
          "displayName": {
            "description": "Optional. Display name, shown in the Jupyter kernelspec card.",
            "type": "string"
          },
          "kernel": {
            "description": "Optional. Kernel",
            "enum": [
              "KERNEL_UNSPECIFIED",
              "PYTHON",
              "SCALA"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "RuntimeConfig": {
        "description": "Runtime configuration for a workload.",
        "properties": {
          "containerImage": {
            "description": "Optional. Optional custom container image for the job runtime environment. If not specified, a default container image will be used.",
            "type": "string"
          },
          "properties": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Optional. A mapping of property names to values, which are used to configure workload execution.",
            "type": "object"
          },
          "repositoryConfig": {
            "$ref": "#/$defs/RepositoryConfig"
          },
          "version": {
            "description": "Optional. Version of the batch runtime.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RepositoryConfig": {
        "description": "Configuration for dependency repositories",
        "properties": {
          "pypiRepositoryConfig": {
            "$ref": "#/$defs/PyPiRepositoryConfig"
          }
        },
        "type": "object"
      },
      "PyPiRepositoryConfig": {
        "description": "Configuration for PyPi repository",
        "properties": {
          "pypiRepository": {
            "description": "Optional. PyPi repository address",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RuntimeInfo": {
        "description": "Runtime information about workload execution.",
        "properties": {
          "approximateUsage": {
            "$ref": "#/$defs/UsageMetrics"
          },
          "currentUsage": {
            "$ref": "#/$defs/UsageSnapshot"
          },
          "diagnosticOutputUri": {
            "description": "Output only. A URI pointing to the location of the diagnostics tarball.",
            "readOnly": true,
            "type": "string"
          },
          "endpoints": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Output only. Map of remote access endpoints (such as web interfaces and APIs) to their URIs.",
            "readOnly": true,
            "type": "object"
          },
          "outputUri": {
            "description": "Output only. A URI pointing to the location of the stdout and stderr of the workload.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "UsageMetrics": {
        "description": "Usage metrics represent approximate total resources consumed by a workload.",
        "properties": {
          "acceleratorType": {
            "description": "Optional. Accelerator type being used, if any",
            "type": "string"
          },
          "milliAcceleratorSeconds": {
            "description": "Optional. Accelerator usage in (milliAccelerator x seconds) (see Dataproc Serverless pricing (https://cloud.google.com/dataproc-serverless/pricing)).",
            "format": "int64",
            "type": "string"
          },
          "milliDcuSeconds": {
            "description": "Optional. DCU (Dataproc Compute Units) usage in (milliDCU x seconds) (see Dataproc Serverless pricing (https://cloud.google.com/dataproc-serverless/pricing)).",
            "format": "int64",
            "type": "string"
          },
          "shuffleStorageGbSeconds": {
            "description": "Optional. Shuffle storage usage in (GB x seconds) (see Dataproc Serverless pricing (https://cloud.google.com/dataproc-serverless/pricing)).",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UsageSnapshot": {
        "description": "The usage snapshot represents the resources consumed by a workload at a specified time.",
        "properties": {
          "acceleratorType": {
            "description": "Optional. Accelerator type being used, if any",
            "type": "string"
          },
          "milliAccelerator": {
            "description": "Optional. Milli (one-thousandth) accelerator. (see Dataproc Serverless pricing (https://cloud.google.com/dataproc-serverless/pricing))",
            "format": "int64",
            "type": "string"
          },
          "milliDcu": {
            "description": "Optional. Milli (one-thousandth) Dataproc Compute Units (DCUs) (see Dataproc Serverless pricing (https://cloud.google.com/dataproc-serverless/pricing)).",
            "format": "int64",
            "type": "string"
          },
          "milliDcuPremium": {
            "description": "Optional. Milli (one-thousandth) Dataproc Compute Units (DCUs) charged at premium tier (see Dataproc Serverless pricing (https://cloud.google.com/dataproc-serverless/pricing)).",
            "format": "int64",
            "type": "string"
          },
          "shuffleStorageGb": {
            "description": "Optional. Shuffle Storage in gigabytes (GB). (see Dataproc Serverless pricing (https://cloud.google.com/dataproc-serverless/pricing))",
            "format": "int64",
            "type": "string"
          },
          "shuffleStorageGbPremium": {
            "description": "Optional. Shuffle Storage in gigabytes (GB) charged at premium tier. (see Dataproc Serverless pricing (https://cloud.google.com/dataproc-serverless/pricing))",
            "format": "int64",
            "type": "string"
          },
          "snapshotTime": {
            "description": "Optional. The timestamp of the usage snapshot.",
            "format": "google-datetime",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SessionStateHistory": {
        "description": "Historical state information.",
        "properties": {
          "state": {
            "description": "Output only. The state of the session at this point in the session history.",
            "enum": [
              "STATE_UNSPECIFIED",
              "CREATING",
              "ACTIVE",
              "TERMINATING",
              "TERMINATED",
              "FAILED"
            ],
            "readOnly": true,
            "type": "string"
          },
          "stateMessage": {
            "description": "Output only. Details about the state at this point in the session history.",
            "readOnly": true,
            "type": "string"
          },
          "stateStartTime": {
            "description": "Output only. The time when the session entered the historical state.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://dataproc.googleapis.com//v1/{parent}/sessions{?requestId,sessionId,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "This resource represents a long-running operation that is the result of a network API call.",
        "**Key properties:**",
        {
          "$ul": [
            "**done**: If the value is false, it means the operation is still in progress. If true, the operation is completed, and either error or response is available.",
            [
              "**error**: The Status type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by gRPC (https://github.com/grpc). Each Status message contains three pieces of data: error code, error message, and error details.You can find out more about this error model and how to work with it in the API Design Guide (https://cloud.google.com/apis/design/errors).",
              {
                "$ul": [
                  "**code**: The status code, which should be an enum value of google.rpc.Code.",
                  "**details**: A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                  "**message**: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                ]
              }
            ],
            "**metadata**: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
            "**name**: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the name should be a resource name ending with operations/{unique_id}.",
            "**response**: The normal, successful response of the operation. If the original method returns no data on success, such as Delete, the response is google.protobuf.Empty. If the original method is standard Get/Create/Update, the response should be the resource. For other methods, the response should have the type XxxResponse, where Xxx is the original method name. For example, if the original method name is TakeSnapshot(), the inferred response type is TakeSnapshotResponse."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
