{
  "name": "dataproc_projects_regions_clusters_get",
  "description": "Gets the resource representation for a cluster in a project.",
  "parameters": {
    "type": "object",
    "properties": {
      "projectId": {
        "type": "string",
        "description": "Required. The ID of the Google Cloud Platform project that the cluster belongs to."
      },
      "region": {
        "type": "string",
        "description": "Required. The Dataproc region in which to handle the request."
      },
      "clusterName": {
        "type": "string",
        "description": "Required. The cluster name."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      }
    },
    "required": [
      "projectId",
      "region",
      "clusterName"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://dataproc.googleapis.com//v1/projects/{projectId}/regions/{region}/clusters/{clusterName}{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Describes the identifying information, config, and status of a Dataproc cluster",
        "**Key properties:**",
        {
          "$ul": [
            "**clusterName**: Required. The cluster name, which must be unique within a project. The name must start with a lowercase letter, and can contain up to 51 lowercase letters, numbers, and hyphens. It cannot end with a hyphen. The name of a deleted cluster can be reused.",
            "**clusterUuid**: Output only. A cluster UUID (Unique Universal Identifier). Dataproc generates this value when it creates the cluster.",
            [
              "**config**: The cluster config.",
              {
                "$ul": [
                  [
                    "**autoscalingConfig**: Autoscaling Policy config associated with the cluster.",
                    {
                      "$ul": [
                        "**policyUri**: Optional. The autoscaling policy used by the cluster.Only resource names including projectid and location (region) are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/locations/[dataproc_region]/autoscalingPolicies/[policy_id] projects/[project_id]/locations/[dataproc_region]/autoscalingPolicies/[policy_id]Note that the policy must be in the same project and Dataproc region."
                      ]
                    }
                  ],
                  "**auxiliaryNodeGroups**: Optional. The node group settings.",
                  "**configBucket**: Optional. A Cloud Storage bucket used to stage job dependencies, config files, and job driver console output. If you do not specify a staging bucket, Cloud Dataproc will determine a Cloud Storage location (US, ASIA, or EU) for your cluster's staging bucket according to the Compute Engine zone where your cluster is deployed, and then create and manage this project-level, per-location bucket (see Dataproc staging and temp buckets (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/staging-bucket)). This field requires a Cloud Storage bucket name, not a gs://... URI to a Cloud Storage bucket.",
                  [
                    "**dataprocMetricConfig**: Dataproc metric config.",
                    {
                      "$ul": [
                        "**metrics**: Required. Metrics sources to enable."
                      ]
                    }
                  ],
                  [
                    "**encryptionConfig**: Encryption settings for the cluster.",
                    {
                      "$ul": [
                        "**gcePdKmsKeyName**: Optional. The Cloud KMS key resource name to use for persistent disk encryption for all instances in the cluster. See Use CMEK with cluster data (https://cloud.google.com//dataproc/docs/concepts/configuring-clusters/customer-managed-encryption#use_cmek_with_cluster_data) for more information.",
                        "**kmsKey**: Optional. The Cloud KMS key resource name to use for cluster persistent disk and job argument encryption. See Use CMEK with cluster data (https://cloud.google.com//dataproc/docs/concepts/configuring-clusters/customer-managed-encryption#use_cmek_with_cluster_data) for more information.When this key resource name is provided, the following job arguments of the following job types submitted to the cluster are encrypted using CMEK: FlinkJob args (https://cloud.google.com/dataproc/docs/reference/rest/v1/FlinkJob) HadoopJob args (https://cloud.google.com/dataproc/docs/reference/rest/v1/HadoopJob) SparkJob args (https://cloud.google.com/dataproc/docs/reference/rest/v1/SparkJob) SparkRJob args (https://cloud.google.com/dataproc/docs/reference/rest/v1/SparkRJob) PySparkJob args (https://cloud.google.com/dataproc/docs/reference/rest/v1/PySparkJob) SparkSqlJob (https://cloud.google.com/dataproc/docs/reference/rest/v1/SparkSqlJob) scriptVariables and queryList.queries HiveJob (https://cloud.google.com/dataproc/docs/reference/rest/v1/HiveJob) scriptVariables and queryList.queries PigJob (https://cloud.google.com/dataproc/docs/reference/rest/v1/PigJob) scriptVariables and queryList.queries PrestoJob (https://cloud.google.com/dataproc/docs/reference/rest/v1/PrestoJob) scriptVariables and queryList.queries"
                      ]
                    }
                  ],
                  [
                    "**endpointConfig**: Endpoint config for this cluster",
                    {
                      "$ul": [
                        "**enableHttpPortAccess**: Optional. If true, enable http access to specific ports on the cluster from external sources. Defaults to false.",
                        "**httpPorts**: Output only. The map of port descriptions to URLs. Will only be populated if enable_http_port_access is true."
                      ]
                    }
                  ],
                  [
                    "**gceClusterConfig**: Common config settings for resources of Compute Engine cluster instances, applicable to all instances in the cluster.",
                    {
                      "$ul": [
                        [
                          "**confidentialInstanceConfig**: Confidential Instance Config for clusters using Confidential VMs (https://cloud.google.com/compute/confidential-vm/docs)",
                          {
                            "$ul": [
                              "**enableConfidentialCompute**: Optional. Defines whether the instance should have confidential compute enabled."
                            ]
                          }
                        ],
                        "**internalIpOnly**: Optional. If true, all instances in the cluster will only have internal IP addresses. By default, clusters are not restricted to internal IP addresses, and will have ephemeral external IP addresses assigned to each instance. This internal_ip_only restriction can only be enabled for subnetwork enabled networks, and all off-cluster dependencies must be configured to be accessible without external IP addresses.",
                        "**metadata**: Optional. The Compute Engine metadata entries to add to all instances (see Project and instance metadata (https://cloud.google.com/compute/docs/storing-retrieving-metadata#project_and_instance_metadata)).",
                        "**networkUri**: Optional. The Compute Engine network to be used for machine communications. Cannot be specified with subnetwork_uri. If neither network_uri nor subnetwork_uri is specified, the \"default\" network of the project is used, if it exists. Cannot be a \"Custom Subnet Network\" (see Using Subnetworks (https://cloud.google.com/compute/docs/subnetworks) for more information).A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/global/networks/default projects/[project_id]/global/networks/default default",
                        [
                          "**nodeGroupAffinity**: Node Group Affinity for clusters using sole-tenant node groups. The Dataproc NodeGroupAffinity resource is not related to the Dataproc NodeGroup resource.",
                          {
                            "$ul": [
                              "**nodeGroupUri**: Required. The URI of a sole-tenant node group resource (https://cloud.google.com/compute/docs/reference/rest/v1/nodeGroups) that the cluster will be created on.A full URL, partial URI, or node group name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/nodeGroups/node-group-1 projects/[project_id]/zones/[zone]/nodeGroups/node-group-1 node-group-1"
                            ]
                          }
                        ],
                        "**privateIpv6GoogleAccess**: Optional. The type of IPv6 access for a cluster.",
                        [
                          "**reservationAffinity**: Reservation Affinity for consuming Zonal reservation.",
                          {
                            "$ul": [
                              "**consumeReservationType**: Optional. Type of reservation to consume",
                              "**key**: Optional. Corresponds to the label key of reservation resource.",
                              "**values**: Optional. Corresponds to the label values of reservation resource."
                            ]
                          }
                        ],
                        "**serviceAccount**: Optional. The Dataproc service account (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/service-accounts#service_accounts_in_dataproc) (also see VM Data Plane identity (https://cloud.google.com/dataproc/docs/concepts/iam/dataproc-principals#vm_service_account_data_plane_identity)) used by Dataproc cluster VM instances to access Google Cloud Platform services.If not specified, the Compute Engine default service account (https://cloud.google.com/compute/docs/access/service-accounts#default_service_account) is used.",
                        "**serviceAccountScopes**: Optional. The URIs of service account scopes to be included in Compute Engine instances. The following base set of scopes is always included: https://www.googleapis.com/auth/cloud.useraccounts.readonly https://www.googleapis.com/auth/devstorage.read_write https://www.googleapis.com/auth/logging.writeIf no scopes are specified, the following defaults are also provided: https://www.googleapis.com/auth/bigquery https://www.googleapis.com/auth/bigtable.admin.table https://www.googleapis.com/auth/bigtable.data https://www.googleapis.com/auth/devstorage.full_control",
                        [
                          "**shieldedInstanceConfig**: Shielded Instance Config for clusters using Compute Engine Shielded VMs (https://cloud.google.com/security/shielded-cloud/shielded-vm).",
                          {
                            "$ul": [
                              "**enableIntegrityMonitoring**: Optional. Defines whether instances have integrity monitoring enabled.",
                              "**enableSecureBoot**: Optional. Defines whether instances have Secure Boot enabled.",
                              "**enableVtpm**: Optional. Defines whether instances have the vTPM enabled."
                            ]
                          }
                        ],
                        "**subnetworkUri**: Optional. The Compute Engine subnetwork to be used for machine communications. Cannot be specified with network_uri.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/regions/[region]/subnetworks/sub0 projects/[project_id]/regions/[region]/subnetworks/sub0 sub0",
                        "**tags**: The Compute Engine tags to add to all instances (see Tagging instances (https://cloud.google.com/compute/docs/label-or-tag-resources#tags)).",
                        "**zoneUri**: Optional. The Compute Engine zone where the Dataproc cluster will be located. If omitted, the service will pick a zone in the cluster's Compute Engine region. On a get request, zone will always be present.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone] projects/[project_id]/zones/[zone] [zone]"
                      ]
                    }
                  ],
                  [
                    "**gkeClusterConfig**: The cluster's GKE config.",
                    {
                      "$ul": [
                        "**gkeClusterTarget**: Optional. A target GKE cluster to deploy to. It must be in the same project and region as the Dataproc cluster (the GKE cluster can be zonal or regional). Format: 'projects/{project}/locations/{location}/clusters/{cluster_id}'",
                        [
                          "**namespacedGkeDeploymentTarget**: Deprecated. Used only for the deprecated beta. A full, namespace-isolated deployment target for an existing GKE cluster.",
                          {
                            "$ul": [
                              "**clusterNamespace**: Optional. A namespace within the GKE cluster to deploy into.",
                              "**targetGkeCluster**: Optional. The target GKE cluster to deploy to. Format: 'projects/{project}/locations/{location}/clusters/{cluster_id}'"
                            ]
                          }
                        ],
                        "**nodePoolTarget**: Optional. GKE node pools where workloads will be scheduled. At least one node pool must be assigned the DEFAULT GkeNodePoolTarget.Role. If a GkeNodePoolTarget is not specified, Dataproc constructs a DEFAULT GkeNodePoolTarget. Each role can be given to only one GkeNodePoolTarget. All node pools must have the same location settings."
                      ]
                    }
                  ],
                  "**initializationActions**: Optional. Commands to execute on each node after config is completed. By default, executables are run on master and all worker nodes. You can test a node's role metadata to run an executable on a master or worker node, as shown below using curl (you can also use wget): ROLE=$(curl -H Metadata-Flavor:Google http://metadata/computeMetadata/v1/instance/attributes/dataproc-role) if [[ \"${ROLE}\" == 'Master' ]]; then ... master specific actions ... else ... worker specific actions ... fi ",
                  [
                    "**lifecycleConfig**: Specifies the cluster auto-delete schedule configuration.",
                    {
                      "$ul": [
                        "**autoDeleteTime**: Optional. The time when cluster will be auto-deleted (see JSON representation of Timestamp (https://developers.google.com/protocol-buffers/docs/proto3#json)).",
                        "**autoDeleteTtl**: Optional. The lifetime duration of cluster. The cluster will be auto-deleted at the end of this period. Minimum value is 10 minutes; maximum value is 14 days (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).",
                        "**idleDeleteTtl**: Optional. The duration to keep the cluster alive while idling (when no jobs are running). Passing this threshold will cause the cluster to be deleted. Minimum value is 5 minutes; maximum value is 14 days (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).",
                        "**idleStartTime**: Output only. The time when cluster became idle (most recent job finished) and became eligible for deletion due to idleness (see JSON representation of Timestamp (https://developers.google.com/protocol-buffers/docs/proto3#json))."
                      ]
                    }
                  ],
                  [
                    "**masterConfig**: The config settings for Compute Engine resources in an instance group, such as a master or worker group.",
                    {
                      "$ul": [
                        "**accelerators**: Optional. The Compute Engine accelerator configuration for these instances.",
                        [
                          "**diskConfig**: Specifies the config of disk options for a group of VM instances.",
                          {
                            "$ul": [
                              "**bootDiskSizeGb**: Optional. Size in GB of the boot disk (default is 500GB).",
                              "**bootDiskType**: Optional. Type of the boot disk (default is \"pd-standard\"). Valid values: \"pd-balanced\" (Persistent Disk Balanced Solid State Drive), \"pd-ssd\" (Persistent Disk Solid State Drive), or \"pd-standard\" (Persistent Disk Hard Disk Drive). See Disk types (https://cloud.google.com/compute/docs/disks#disk-types).",
                              "**localSsdInterface**: Optional. Interface type of local SSDs (default is \"scsi\"). Valid values: \"scsi\" (Small Computer System Interface), \"nvme\" (Non-Volatile Memory Express). See local SSD performance (https://cloud.google.com/compute/docs/disks/local-ssd#performance).",
                              "**numLocalSsds**: Optional. Number of attached SSDs, from 0 to 8 (default is 0). If SSDs are not attached, the boot disk is used to store runtime logs and HDFS (https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html) data. If one or more SSDs are attached, this runtime bulk data is spread across them, and the boot disk contains only basic config and installed binaries.Note: Local SSD options may vary by machine type and number of vCPUs selected."
                            ]
                          }
                        ],
                        "**imageUri**: Optional. The Compute Engine image resource used for cluster instances.The URI can represent an image or image family.Image examples: https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/[image-id] projects/[project_id]/global/images/[image-id] image-idImage family examples. Dataproc will use the most recent image from the family: https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/family/[custom-image-family-name] projects/[project_id]/global/images/family/[custom-image-family-name]If the URI is unspecified, it will be inferred from SoftwareConfig.image_version or the system default.",
                        [
                          "**instanceFlexibilityPolicy**: Instance flexibility Policy allowing a mixture of VM shapes and provisioning models.",
                          {
                            "$ul": [
                              "**instanceSelectionList**: Optional. List of instance selection options that the group will use when creating new VMs.",
                              "**instanceSelectionResults**: Output only. A list of instance selection results in the group."
                            ]
                          }
                        ],
                        "**instanceNames**: Output only. The list of instance names. Dataproc derives the names from cluster_name, num_instances, and the instance group.",
                        "**instanceReferences**: Output only. List of references to Compute Engine instances.",
                        "**isPreemptible**: Output only. Specifies that this instance group contains preemptible instances.",
                        "**machineTypeUri**: Optional. The Compute Engine machine type used for cluster instances.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2 projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2 n1-standard-2Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the machine type resource, for example, n1-standard-2.",
                        [
                          "**managedGroupConfig**: Specifies the resources used to actively manage an instance group.",
                          {
                            "$ul": [
                              "**instanceGroupManagerName**: Output only. The name of the Instance Group Manager for this group.",
                              "**instanceGroupManagerUri**: Output only. The partial URI to the instance group manager for this group. E.g. projects/my-project/regions/us-central1/instanceGroupManagers/my-igm.",
                              "**instanceTemplateName**: Output only. The name of the Instance Template used for the Managed Instance Group."
                            ]
                          }
                        ],
                        "**minCpuPlatform**: Optional. Specifies the minimum cpu platform for the Instance Group. See Dataproc -> Minimum CPU Platform (https://cloud.google.com/dataproc/docs/concepts/compute/dataproc-min-cpu).",
                        "**minNumInstances**: Optional. The minimum number of primary worker instances to create. If min_num_instances is set, cluster creation will succeed if the number of primary workers created is at least equal to the min_num_instances number.Example: Cluster creation request with num_instances = 5 and min_num_instances = 3: If 4 VMs are created and 1 instance fails, the failed VM is deleted. The cluster is resized to 4 instances and placed in a RUNNING state. If 2 instances are created and 3 instances fail, the cluster in placed in an ERROR state. The failed VMs are not deleted.",
                        "**numInstances**: Optional. The number of VM instances in the instance group. For HA cluster master_config groups, must be set to 3. For standard cluster master_config groups, must be set to 1.",
                        "**preemptibility**: Optional. Specifies the preemptibility of the instance group.The default value for master and worker groups is NON_PREEMPTIBLE. This default cannot be changed.The default value for secondary instances is PREEMPTIBLE.",
                        [
                          "**startupConfig**: Configuration to handle the startup of instances during cluster create and update process.",
                          {
                            "$ul": [
                              "**requiredRegistrationFraction**: Optional. The config setting to enable cluster creation/ updation to be successful only after required_registration_fraction of instances are up and running. This configuration is applicable to only secondary workers for now. The cluster will fail if required_registration_fraction of instances are not available. This will include instance creation, agent registration, and service registration (if enabled)."
                            ]
                          }
                        ]
                      ]
                    }
                  ],
                  [
                    "**metastoreConfig**: Specifies a Metastore configuration.",
                    {
                      "$ul": [
                        "**dataprocMetastoreService**: Required. Resource name of an existing Dataproc Metastore service.Example: projects/[project_id]/locations/[dataproc_region]/services/[service-name]"
                      ]
                    }
                  ],
                  [
                    "**secondaryWorkerConfig**: The config settings for Compute Engine resources in an instance group, such as a master or worker group.",
                    {
                      "$ul": [
                        "**accelerators**: Optional. The Compute Engine accelerator configuration for these instances.",
                        [
                          "**diskConfig**: Specifies the config of disk options for a group of VM instances.",
                          {
                            "$ul": [
                              "**bootDiskSizeGb**: Optional. Size in GB of the boot disk (default is 500GB).",
                              "**bootDiskType**: Optional. Type of the boot disk (default is \"pd-standard\"). Valid values: \"pd-balanced\" (Persistent Disk Balanced Solid State Drive), \"pd-ssd\" (Persistent Disk Solid State Drive), or \"pd-standard\" (Persistent Disk Hard Disk Drive). See Disk types (https://cloud.google.com/compute/docs/disks#disk-types).",
                              "**localSsdInterface**: Optional. Interface type of local SSDs (default is \"scsi\"). Valid values: \"scsi\" (Small Computer System Interface), \"nvme\" (Non-Volatile Memory Express). See local SSD performance (https://cloud.google.com/compute/docs/disks/local-ssd#performance).",
                              "**numLocalSsds**: Optional. Number of attached SSDs, from 0 to 8 (default is 0). If SSDs are not attached, the boot disk is used to store runtime logs and HDFS (https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html) data. If one or more SSDs are attached, this runtime bulk data is spread across them, and the boot disk contains only basic config and installed binaries.Note: Local SSD options may vary by machine type and number of vCPUs selected."
                            ]
                          }
                        ],
                        "**imageUri**: Optional. The Compute Engine image resource used for cluster instances.The URI can represent an image or image family.Image examples: https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/[image-id] projects/[project_id]/global/images/[image-id] image-idImage family examples. Dataproc will use the most recent image from the family: https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/family/[custom-image-family-name] projects/[project_id]/global/images/family/[custom-image-family-name]If the URI is unspecified, it will be inferred from SoftwareConfig.image_version or the system default.",
                        [
                          "**instanceFlexibilityPolicy**: Instance flexibility Policy allowing a mixture of VM shapes and provisioning models.",
                          {
                            "$ul": [
                              "**instanceSelectionList**: Optional. List of instance selection options that the group will use when creating new VMs.",
                              "**instanceSelectionResults**: Output only. A list of instance selection results in the group."
                            ]
                          }
                        ],
                        "**instanceNames**: Output only. The list of instance names. Dataproc derives the names from cluster_name, num_instances, and the instance group.",
                        "**instanceReferences**: Output only. List of references to Compute Engine instances.",
                        "**isPreemptible**: Output only. Specifies that this instance group contains preemptible instances.",
                        "**machineTypeUri**: Optional. The Compute Engine machine type used for cluster instances.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2 projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2 n1-standard-2Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the machine type resource, for example, n1-standard-2.",
                        [
                          "**managedGroupConfig**: Specifies the resources used to actively manage an instance group.",
                          {
                            "$ul": [
                              "**instanceGroupManagerName**: Output only. The name of the Instance Group Manager for this group.",
                              "**instanceGroupManagerUri**: Output only. The partial URI to the instance group manager for this group. E.g. projects/my-project/regions/us-central1/instanceGroupManagers/my-igm.",
                              "**instanceTemplateName**: Output only. The name of the Instance Template used for the Managed Instance Group."
                            ]
                          }
                        ],
                        "**minCpuPlatform**: Optional. Specifies the minimum cpu platform for the Instance Group. See Dataproc -> Minimum CPU Platform (https://cloud.google.com/dataproc/docs/concepts/compute/dataproc-min-cpu).",
                        "**minNumInstances**: Optional. The minimum number of primary worker instances to create. If min_num_instances is set, cluster creation will succeed if the number of primary workers created is at least equal to the min_num_instances number.Example: Cluster creation request with num_instances = 5 and min_num_instances = 3: If 4 VMs are created and 1 instance fails, the failed VM is deleted. The cluster is resized to 4 instances and placed in a RUNNING state. If 2 instances are created and 3 instances fail, the cluster in placed in an ERROR state. The failed VMs are not deleted.",
                        "**numInstances**: Optional. The number of VM instances in the instance group. For HA cluster master_config groups, must be set to 3. For standard cluster master_config groups, must be set to 1.",
                        "**preemptibility**: Optional. Specifies the preemptibility of the instance group.The default value for master and worker groups is NON_PREEMPTIBLE. This default cannot be changed.The default value for secondary instances is PREEMPTIBLE.",
                        [
                          "**startupConfig**: Configuration to handle the startup of instances during cluster create and update process.",
                          {
                            "$ul": [
                              "**requiredRegistrationFraction**: Optional. The config setting to enable cluster creation/ updation to be successful only after required_registration_fraction of instances are up and running. This configuration is applicable to only secondary workers for now. The cluster will fail if required_registration_fraction of instances are not available. This will include instance creation, agent registration, and service registration (if enabled)."
                            ]
                          }
                        ]
                      ]
                    }
                  ],
                  [
                    "**securityConfig**: Security related configuration, including encryption, Kerberos, etc.",
                    {
                      "$ul": [
                        [
                          "**identityConfig**: Identity related configuration, including service account based secure multi-tenancy user mappings.",
                          {
                            "$ul": [
                              "**userServiceAccountMapping**: Required. Map of user to service account."
                            ]
                          }
                        ],
                        [
                          "**kerberosConfig**: Specifies Kerberos related configuration.",
                          {
                            "$ul": [
                              "**crossRealmTrustAdminServer**: Optional. The admin server (IP or hostname) for the remote trusted realm in a cross realm trust relationship.",
                              "**crossRealmTrustKdc**: Optional. The KDC (IP or hostname) for the remote trusted realm in a cross realm trust relationship.",
                              "**crossRealmTrustRealm**: Optional. The remote realm the Dataproc on-cluster KDC will trust, should the user enable cross realm trust.",
                              "**crossRealmTrustSharedPasswordUri**: Optional. The Cloud Storage URI of a KMS encrypted file containing the shared password between the on-cluster Kerberos realm and the remote trusted realm, in a cross realm trust relationship.",
                              "**enableKerberos**: Optional. Flag to indicate whether to Kerberize the cluster (default: false). Set this field to true to enable Kerberos on a cluster.",
                              "**kdcDbKeyUri**: Optional. The Cloud Storage URI of a KMS encrypted file containing the master key of the KDC database.",
                              "**keyPasswordUri**: Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided key. For the self-signed certificate, this password is generated by Dataproc.",
                              "**keystorePasswordUri**: Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided keystore. For the self-signed certificate, this password is generated by Dataproc.",
                              "**keystoreUri**: Optional. The Cloud Storage URI of the keystore file used for SSL encryption. If not provided, Dataproc will provide a self-signed certificate.",
                              "**kmsKeyUri**: Optional. The URI of the KMS key used to encrypt sensitive files.",
                              "**realm**: Optional. The name of the on-cluster Kerberos realm. If not specified, the uppercased domain of hostnames will be the realm.",
                              "**rootPrincipalPasswordUri**: Optional. The Cloud Storage URI of a KMS encrypted file containing the root principal password.",
                              "**tgtLifetimeHours**: Optional. The lifetime of the ticket granting ticket, in hours. If not specified, or user specifies 0, then default value 10 will be used.",
                              "**truststorePasswordUri**: Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided truststore. For the self-signed certificate, this password is generated by Dataproc.",
                              "**truststoreUri**: Optional. The Cloud Storage URI of the truststore file used for SSL encryption. If not provided, Dataproc will provide a self-signed certificate."
                            ]
                          }
                        ]
                      ]
                    }
                  ],
                  [
                    "**softwareConfig**: Specifies the selection and config of software inside the cluster.",
                    {
                      "$ul": [
                        "**imageVersion**: Optional. The version of software inside the cluster. It must be one of the supported Dataproc Versions (https://cloud.google.com/dataproc/docs/concepts/versioning/dataproc-versions#supported_dataproc_versions), such as \"1.2\" (including a subminor version, such as \"1.2.29\"), or the \"preview\" version (https://cloud.google.com/dataproc/docs/concepts/versioning/dataproc-versions#other_versions). If unspecified, it defaults to the latest Debian version.",
                        "**optionalComponents**: Optional. The set of components to activate on the cluster.",
                        "**properties**: Optional. The properties to set on daemon config files.Property keys are specified in prefix:property format, for example core:hadoop.tmp.dir. The following are supported prefixes and their mappings: capacity-scheduler: capacity-scheduler.xml core: core-site.xml distcp: distcp-default.xml hdfs: hdfs-site.xml hive: hive-site.xml mapred: mapred-site.xml pig: pig.properties spark: spark-defaults.conf yarn: yarn-site.xmlFor more information, see Cluster properties (https://cloud.google.com/dataproc/docs/concepts/cluster-properties)."
                      ]
                    }
                  ],
                  "**tempBucket**: Optional. A Cloud Storage bucket used to store ephemeral cluster and jobs data, such as Spark and MapReduce history files. If you do not specify a temp bucket, Dataproc will determine a Cloud Storage location (US, ASIA, or EU) for your cluster's temp bucket according to the Compute Engine zone where your cluster is deployed, and then create and manage this project-level, per-location bucket. The default bucket has a TTL of 90 days, but you can use any TTL (or none) if you specify a bucket (see Dataproc staging and temp buckets (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/staging-bucket)). This field requires a Cloud Storage bucket name, not a gs://... URI to a Cloud Storage bucket.",
                  [
                    "**workerConfig**: The config settings for Compute Engine resources in an instance group, such as a master or worker group.",
                    {
                      "$ul": [
                        "**accelerators**: Optional. The Compute Engine accelerator configuration for these instances.",
                        [
                          "**diskConfig**: Specifies the config of disk options for a group of VM instances.",
                          {
                            "$ul": [
                              "**bootDiskSizeGb**: Optional. Size in GB of the boot disk (default is 500GB).",
                              "**bootDiskType**: Optional. Type of the boot disk (default is \"pd-standard\"). Valid values: \"pd-balanced\" (Persistent Disk Balanced Solid State Drive), \"pd-ssd\" (Persistent Disk Solid State Drive), or \"pd-standard\" (Persistent Disk Hard Disk Drive). See Disk types (https://cloud.google.com/compute/docs/disks#disk-types).",
                              "**localSsdInterface**: Optional. Interface type of local SSDs (default is \"scsi\"). Valid values: \"scsi\" (Small Computer System Interface), \"nvme\" (Non-Volatile Memory Express). See local SSD performance (https://cloud.google.com/compute/docs/disks/local-ssd#performance).",
                              "**numLocalSsds**: Optional. Number of attached SSDs, from 0 to 8 (default is 0). If SSDs are not attached, the boot disk is used to store runtime logs and HDFS (https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html) data. If one or more SSDs are attached, this runtime bulk data is spread across them, and the boot disk contains only basic config and installed binaries.Note: Local SSD options may vary by machine type and number of vCPUs selected."
                            ]
                          }
                        ],
                        "**imageUri**: Optional. The Compute Engine image resource used for cluster instances.The URI can represent an image or image family.Image examples: https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/[image-id] projects/[project_id]/global/images/[image-id] image-idImage family examples. Dataproc will use the most recent image from the family: https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/family/[custom-image-family-name] projects/[project_id]/global/images/family/[custom-image-family-name]If the URI is unspecified, it will be inferred from SoftwareConfig.image_version or the system default.",
                        [
                          "**instanceFlexibilityPolicy**: Instance flexibility Policy allowing a mixture of VM shapes and provisioning models.",
                          {
                            "$ul": [
                              "**instanceSelectionList**: Optional. List of instance selection options that the group will use when creating new VMs.",
                              "**instanceSelectionResults**: Output only. A list of instance selection results in the group."
                            ]
                          }
                        ],
                        "**instanceNames**: Output only. The list of instance names. Dataproc derives the names from cluster_name, num_instances, and the instance group.",
                        "**instanceReferences**: Output only. List of references to Compute Engine instances.",
                        "**isPreemptible**: Output only. Specifies that this instance group contains preemptible instances.",
                        "**machineTypeUri**: Optional. The Compute Engine machine type used for cluster instances.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2 projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2 n1-standard-2Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the machine type resource, for example, n1-standard-2.",
                        [
                          "**managedGroupConfig**: Specifies the resources used to actively manage an instance group.",
                          {
                            "$ul": [
                              "**instanceGroupManagerName**: Output only. The name of the Instance Group Manager for this group.",
                              "**instanceGroupManagerUri**: Output only. The partial URI to the instance group manager for this group. E.g. projects/my-project/regions/us-central1/instanceGroupManagers/my-igm.",
                              "**instanceTemplateName**: Output only. The name of the Instance Template used for the Managed Instance Group."
                            ]
                          }
                        ],
                        "**minCpuPlatform**: Optional. Specifies the minimum cpu platform for the Instance Group. See Dataproc -> Minimum CPU Platform (https://cloud.google.com/dataproc/docs/concepts/compute/dataproc-min-cpu).",
                        "**minNumInstances**: Optional. The minimum number of primary worker instances to create. If min_num_instances is set, cluster creation will succeed if the number of primary workers created is at least equal to the min_num_instances number.Example: Cluster creation request with num_instances = 5 and min_num_instances = 3: If 4 VMs are created and 1 instance fails, the failed VM is deleted. The cluster is resized to 4 instances and placed in a RUNNING state. If 2 instances are created and 3 instances fail, the cluster in placed in an ERROR state. The failed VMs are not deleted.",
                        "**numInstances**: Optional. The number of VM instances in the instance group. For HA cluster master_config groups, must be set to 3. For standard cluster master_config groups, must be set to 1.",
                        "**preemptibility**: Optional. Specifies the preemptibility of the instance group.The default value for master and worker groups is NON_PREEMPTIBLE. This default cannot be changed.The default value for secondary instances is PREEMPTIBLE.",
                        [
                          "**startupConfig**: Configuration to handle the startup of instances during cluster create and update process.",
                          {
                            "$ul": [
                              "**requiredRegistrationFraction**: Optional. The config setting to enable cluster creation/ updation to be successful only after required_registration_fraction of instances are up and running. This configuration is applicable to only secondary workers for now. The cluster will fail if required_registration_fraction of instances are not available. This will include instance creation, agent registration, and service registration (if enabled)."
                            ]
                          }
                        ]
                      ]
                    }
                  ]
                ]
              }
            ],
            "**labels**: Optional. The labels to associate with this cluster. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a cluster.",
            [
              "**metrics**: Contains cluster daemon metrics, such as HDFS and YARN stats.Beta Feature: This report is available for testing purposes only. It may be changed before final release.",
              {
                "$ul": [
                  "**hdfsMetrics**: The HDFS metrics.",
                  "**yarnMetrics**: YARN metrics."
                ]
              }
            ],
            "**projectId**: Required. The Google Cloud Platform project ID that the cluster belongs to.",
            [
              "**status**: The status of a cluster and its instances.",
              {
                "$ul": [
                  "**detail**: Optional. Output only. Details of cluster's state.",
                  "**state**: Output only. The cluster's state.",
                  "**stateStartTime**: Output only. Time when this state was entered (see JSON representation of Timestamp (https://developers.google.com/protocol-buffers/docs/proto3#json)).",
                  "**substate**: Output only. Additional state information that includes status reported by the agent."
                ]
              }
            ],
            "**statusHistory**: Output only. The previous cluster status.",
            [
              "**virtualClusterConfig**: The Dataproc cluster config for a cluster that does not directly control the underlying compute resources, such as a Dataproc-on-GKE cluster (https://cloud.google.com/dataproc/docs/guides/dpgke/dataproc-gke-overview).",
              {
                "$ul": [
                  [
                    "**auxiliaryServicesConfig**: Auxiliary services configuration for a Cluster.",
                    {
                      "$ul": [
                        [
                          "**metastoreConfig**: Specifies a Metastore configuration.",
                          {
                            "$ul": [
                              "**dataprocMetastoreService**: Required. Resource name of an existing Dataproc Metastore service.Example: projects/[project_id]/locations/[dataproc_region]/services/[service-name]"
                            ]
                          }
                        ],
                        [
                          "**sparkHistoryServerConfig**: Spark History Server configuration for the workload.",
                          {
                            "$ul": [
                              "**dataprocCluster**: Optional. Resource name of an existing Dataproc Cluster to act as a Spark History Server for the workload.Example: projects/[project_id]/regions/[region]/clusters/[cluster_name]"
                            ]
                          }
                        ]
                      ]
                    }
                  ],
                  [
                    "**kubernetesClusterConfig**: The configuration for running the Dataproc cluster on Kubernetes.",
                    {
                      "$ul": [
                        [
                          "**gkeClusterConfig**: The cluster's GKE config.",
                          {
                            "$ul": [
                              "**gkeClusterTarget**: Optional. A target GKE cluster to deploy to. It must be in the same project and region as the Dataproc cluster (the GKE cluster can be zonal or regional). Format: 'projects/{project}/locations/{location}/clusters/{cluster_id}'",
                              [
                                "**namespacedGkeDeploymentTarget**: Deprecated. Used only for the deprecated beta. A full, namespace-isolated deployment target for an existing GKE cluster.",
                                {
                                  "$ul": [
                                    "**clusterNamespace**: Optional. A namespace within the GKE cluster to deploy into.",
                                    "**targetGkeCluster**: Optional. The target GKE cluster to deploy to. Format: 'projects/{project}/locations/{location}/clusters/{cluster_id}'"
                                  ]
                                }
                              ],
                              "**nodePoolTarget**: Optional. GKE node pools where workloads will be scheduled. At least one node pool must be assigned the DEFAULT GkeNodePoolTarget.Role. If a GkeNodePoolTarget is not specified, Dataproc constructs a DEFAULT GkeNodePoolTarget. Each role can be given to only one GkeNodePoolTarget. All node pools must have the same location settings."
                            ]
                          }
                        ],
                        "**kubernetesNamespace**: Optional. A namespace within the Kubernetes cluster to deploy into. If this namespace does not exist, it is created. If it exists, Dataproc verifies that another Dataproc VirtualCluster is not installed into it. If not specified, the name of the Dataproc Cluster is used.",
                        [
                          "**kubernetesSoftwareConfig**: The software configuration for this Dataproc cluster running on Kubernetes.",
                          {
                            "$ul": [
                              "**componentVersion**: The components that should be installed in this Dataproc cluster. The key must be a string from the KubernetesComponent enumeration. The value is the version of the software to be installed. At least one entry must be specified.",
                              "**properties**: The properties to set on daemon config files.Property keys are specified in prefix:property format, for example spark:spark.kubernetes.container.image. The following are supported prefixes and their mappings: spark: spark-defaults.confFor more information, see Cluster properties (https://cloud.google.com/dataproc/docs/concepts/cluster-properties)."
                            ]
                          }
                        ]
                      ]
                    }
                  ],
                  "**stagingBucket**: Optional. A Cloud Storage bucket used to stage job dependencies, config files, and job driver console output. If you do not specify a staging bucket, Cloud Dataproc will determine a Cloud Storage location (US, ASIA, or EU) for your cluster's staging bucket according to the Compute Engine zone where your cluster is deployed, and then create and manage this project-level, per-location bucket (see Dataproc staging and temp buckets (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/staging-bucket)). This field requires a Cloud Storage bucket name, not a gs://... URI to a Cloud Storage bucket."
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
