{
  "name": "dataproc_projects_regions_clusters_create",
  "description": "Creates a cluster in a project. The returned Operation.metadata will be ClusterOperationMetadata (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#clusteroperationmetadata).",
  "parameters": {
    "type": "object",
    "properties": {
      "projectId": {
        "type": "string",
        "description": "Required. The ID of the Google Cloud Platform project that the cluster belongs to."
      },
      "region": {
        "type": "string",
        "description": "Required. The Dataproc region in which to handle the request."
      },
      "actionOnFailedPrimaryWorkers": {
        "enum": [
          "FAILURE_ACTION_UNSPECIFIED",
          "NO_ACTION",
          "DELETE"
        ],
        "type": "string",
        "description": "Optional. Failure action when primary worker creation fails."
      },
      "requestId": {
        "type": "string",
        "description": "Optional. A unique ID used to identify the request. If the server receives two CreateClusterRequest (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.CreateClusterRequest)s with the same id, then the second request will be ignored and the first google.longrunning.Operation created and stored in the backend is returned.It is recommended to always set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/Cluster"
      }
    },
    "required": [
      "projectId",
      "region"
    ],
    "$defs": {
      "Cluster": {
        "description": "Describes the identifying information, config, and status of a Dataproc cluster",
        "properties": {
          "clusterName": {
            "description": "Required. The cluster name, which must be unique within a project. The name must start with a lowercase letter, and can contain up to 51 lowercase letters, numbers, and hyphens. It cannot end with a hyphen. The name of a deleted cluster can be reused.",
            "type": "string"
          },
          "clusterUuid": {
            "description": "Output only. A cluster UUID (Unique Universal Identifier). Dataproc generates this value when it creates the cluster.",
            "readOnly": true,
            "type": "string"
          },
          "config": {
            "$ref": "#/$defs/ClusterConfig"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Optional. The labels to associate with this cluster. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a cluster.",
            "type": "object"
          },
          "metrics": {
            "$ref": "#/$defs/ClusterMetrics"
          },
          "projectId": {
            "description": "Required. The Google Cloud Platform project ID that the cluster belongs to.",
            "type": "string"
          },
          "status": {
            "$ref": "#/$defs/ClusterStatus"
          },
          "statusHistory": {
            "description": "Output only. The previous cluster status.",
            "items": {
              "$ref": "#/$defs/ClusterStatus"
            },
            "readOnly": true,
            "type": "array"
          },
          "virtualClusterConfig": {
            "$ref": "#/$defs/VirtualClusterConfig"
          }
        },
        "type": "object"
      },
      "ClusterConfig": {
        "description": "The cluster config.",
        "properties": {
          "autoscalingConfig": {
            "$ref": "#/$defs/AutoscalingConfig"
          },
          "auxiliaryNodeGroups": {
            "description": "Optional. The node group settings.",
            "items": {
              "$ref": "#/$defs/AuxiliaryNodeGroup"
            },
            "type": "array"
          },
          "configBucket": {
            "description": "Optional. A Cloud Storage bucket used to stage job dependencies, config files, and job driver console output. If you do not specify a staging bucket, Cloud Dataproc will determine a Cloud Storage location (US, ASIA, or EU) for your cluster's staging bucket according to the Compute Engine zone where your cluster is deployed, and then create and manage this project-level, per-location bucket (see Dataproc staging and temp buckets (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/staging-bucket)). This field requires a Cloud Storage bucket name, not a gs://... URI to a Cloud Storage bucket.",
            "type": "string"
          },
          "dataprocMetricConfig": {
            "$ref": "#/$defs/DataprocMetricConfig"
          },
          "encryptionConfig": {
            "$ref": "#/$defs/EncryptionConfig"
          },
          "endpointConfig": {
            "$ref": "#/$defs/EndpointConfig"
          },
          "gceClusterConfig": {
            "$ref": "#/$defs/GceClusterConfig"
          },
          "gkeClusterConfig": {
            "$ref": "#/$defs/GkeClusterConfig"
          },
          "initializationActions": {
            "description": "Optional. Commands to execute on each node after config is completed. By default, executables are run on master and all worker nodes. You can test a node's role metadata to run an executable on a master or worker node, as shown below using curl (you can also use wget): ROLE=$(curl -H Metadata-Flavor:Google http://metadata/computeMetadata/v1/instance/attributes/dataproc-role) if [[ \"${ROLE}\" == 'Master' ]]; then ... master specific actions ... else ... worker specific actions ... fi ",
            "items": {
              "$ref": "#/$defs/NodeInitializationAction"
            },
            "type": "array"
          },
          "lifecycleConfig": {
            "$ref": "#/$defs/LifecycleConfig"
          },
          "masterConfig": {
            "$ref": "#/$defs/InstanceGroupConfig"
          },
          "metastoreConfig": {
            "$ref": "#/$defs/MetastoreConfig"
          },
          "secondaryWorkerConfig": {
            "$ref": "#/$defs/InstanceGroupConfig"
          },
          "securityConfig": {
            "$ref": "#/$defs/SecurityConfig"
          },
          "softwareConfig": {
            "$ref": "#/$defs/SoftwareConfig"
          },
          "tempBucket": {
            "description": "Optional. A Cloud Storage bucket used to store ephemeral cluster and jobs data, such as Spark and MapReduce history files. If you do not specify a temp bucket, Dataproc will determine a Cloud Storage location (US, ASIA, or EU) for your cluster's temp bucket according to the Compute Engine zone where your cluster is deployed, and then create and manage this project-level, per-location bucket. The default bucket has a TTL of 90 days, but you can use any TTL (or none) if you specify a bucket (see Dataproc staging and temp buckets (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/staging-bucket)). This field requires a Cloud Storage bucket name, not a gs://... URI to a Cloud Storage bucket.",
            "type": "string"
          },
          "workerConfig": {
            "$ref": "#/$defs/InstanceGroupConfig"
          }
        },
        "type": "object"
      },
      "AutoscalingConfig": {
        "description": "Autoscaling Policy config associated with the cluster.",
        "properties": {
          "policyUri": {
            "description": "Optional. The autoscaling policy used by the cluster.Only resource names including projectid and location (region) are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/locations/[dataproc_region]/autoscalingPolicies/[policy_id] projects/[project_id]/locations/[dataproc_region]/autoscalingPolicies/[policy_id]Note that the policy must be in the same project and Dataproc region.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AuxiliaryNodeGroup": {
        "description": "Node group identification and configuration information.",
        "properties": {
          "nodeGroup": {
            "$ref": "#/$defs/NodeGroup"
          },
          "nodeGroupId": {
            "description": "Optional. A node group ID. Generated if not specified.The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of from 3 to 33 characters.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "NodeGroup": {
        "description": "Dataproc Node Group. The Dataproc NodeGroup resource is not related to the Dataproc NodeGroupAffinity resource.",
        "properties": {
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Optional. Node group labels. Label keys must consist of from 1 to 63 characters and conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values can be empty. If specified, they must consist of from 1 to 63 characters and conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). The node group must have no more than 32 labelsn.",
            "type": "object"
          },
          "name": {
            "description": "The Node group resource name (https://aip.dev/122).",
            "type": "string"
          },
          "nodeGroupConfig": {
            "$ref": "#/$defs/InstanceGroupConfig"
          },
          "roles": {
            "description": "Required. Node group roles.",
            "items": {
              "enum": [
                "ROLE_UNSPECIFIED",
                "DRIVER"
              ],
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "InstanceGroupConfig": {
        "description": "The config settings for Compute Engine resources in an instance group, such as a master or worker group.",
        "properties": {
          "accelerators": {
            "description": "Optional. The Compute Engine accelerator configuration for these instances.",
            "items": {
              "$ref": "#/$defs/AcceleratorConfig"
            },
            "type": "array"
          },
          "diskConfig": {
            "$ref": "#/$defs/DiskConfig"
          },
          "imageUri": {
            "description": "Optional. The Compute Engine image resource used for cluster instances.The URI can represent an image or image family.Image examples: https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/[image-id] projects/[project_id]/global/images/[image-id] image-idImage family examples. Dataproc will use the most recent image from the family: https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/family/[custom-image-family-name] projects/[project_id]/global/images/family/[custom-image-family-name]If the URI is unspecified, it will be inferred from SoftwareConfig.image_version or the system default.",
            "type": "string"
          },
          "instanceFlexibilityPolicy": {
            "$ref": "#/$defs/InstanceFlexibilityPolicy"
          },
          "instanceNames": {
            "description": "Output only. The list of instance names. Dataproc derives the names from cluster_name, num_instances, and the instance group.",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "instanceReferences": {
            "description": "Output only. List of references to Compute Engine instances.",
            "items": {
              "$ref": "#/$defs/InstanceReference"
            },
            "readOnly": true,
            "type": "array"
          },
          "isPreemptible": {
            "description": "Output only. Specifies that this instance group contains preemptible instances.",
            "readOnly": true,
            "type": "boolean"
          },
          "machineTypeUri": {
            "description": "Optional. The Compute Engine machine type used for cluster instances.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2 projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2 n1-standard-2Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the machine type resource, for example, n1-standard-2.",
            "type": "string"
          },
          "managedGroupConfig": {
            "$ref": "#/$defs/ManagedGroupConfig"
          },
          "minCpuPlatform": {
            "description": "Optional. Specifies the minimum cpu platform for the Instance Group. See Dataproc -> Minimum CPU Platform (https://cloud.google.com/dataproc/docs/concepts/compute/dataproc-min-cpu).",
            "type": "string"
          },
          "minNumInstances": {
            "description": "Optional. The minimum number of primary worker instances to create. If min_num_instances is set, cluster creation will succeed if the number of primary workers created is at least equal to the min_num_instances number.Example: Cluster creation request with num_instances = 5 and min_num_instances = 3: If 4 VMs are created and 1 instance fails, the failed VM is deleted. The cluster is resized to 4 instances and placed in a RUNNING state. If 2 instances are created and 3 instances fail, the cluster in placed in an ERROR state. The failed VMs are not deleted.",
            "format": "int32",
            "type": "integer"
          },
          "numInstances": {
            "description": "Optional. The number of VM instances in the instance group. For HA cluster master_config groups, must be set to 3. For standard cluster master_config groups, must be set to 1.",
            "format": "int32",
            "type": "integer"
          },
          "preemptibility": {
            "description": "Optional. Specifies the preemptibility of the instance group.The default value for master and worker groups is NON_PREEMPTIBLE. This default cannot be changed.The default value for secondary instances is PREEMPTIBLE.",
            "enum": [
              "PREEMPTIBILITY_UNSPECIFIED",
              "NON_PREEMPTIBLE",
              "PREEMPTIBLE",
              "SPOT"
            ],
            "type": "string"
          },
          "startupConfig": {
            "$ref": "#/$defs/StartupConfig"
          }
        },
        "type": "object"
      },
      "AcceleratorConfig": {
        "description": "Specifies the type and number of accelerator cards attached to the instances of an instance. See GPUs on Compute Engine (https://cloud.google.com/compute/docs/gpus/).",
        "properties": {
          "acceleratorCount": {
            "description": "The number of the accelerator cards of this type exposed to this instance.",
            "format": "int32",
            "type": "integer"
          },
          "acceleratorTypeUri": {
            "description": "Full URL, partial URI, or short name of the accelerator type resource to expose to this instance. See Compute Engine AcceleratorTypes (https://cloud.google.com/compute/docs/reference/v1/acceleratorTypes).Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/acceleratorTypes/nvidia-tesla-k80 projects/[project_id]/zones/[zone]/acceleratorTypes/nvidia-tesla-k80 nvidia-tesla-k80Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the accelerator type resource, for example, nvidia-tesla-k80.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DiskConfig": {
        "description": "Specifies the config of disk options for a group of VM instances.",
        "properties": {
          "bootDiskSizeGb": {
            "description": "Optional. Size in GB of the boot disk (default is 500GB).",
            "format": "int32",
            "type": "integer"
          },
          "bootDiskType": {
            "description": "Optional. Type of the boot disk (default is \"pd-standard\"). Valid values: \"pd-balanced\" (Persistent Disk Balanced Solid State Drive), \"pd-ssd\" (Persistent Disk Solid State Drive), or \"pd-standard\" (Persistent Disk Hard Disk Drive). See Disk types (https://cloud.google.com/compute/docs/disks#disk-types).",
            "type": "string"
          },
          "localSsdInterface": {
            "description": "Optional. Interface type of local SSDs (default is \"scsi\"). Valid values: \"scsi\" (Small Computer System Interface), \"nvme\" (Non-Volatile Memory Express). See local SSD performance (https://cloud.google.com/compute/docs/disks/local-ssd#performance).",
            "type": "string"
          },
          "numLocalSsds": {
            "description": "Optional. Number of attached SSDs, from 0 to 8 (default is 0). If SSDs are not attached, the boot disk is used to store runtime logs and HDFS (https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html) data. If one or more SSDs are attached, this runtime bulk data is spread across them, and the boot disk contains only basic config and installed binaries.Note: Local SSD options may vary by machine type and number of vCPUs selected.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "InstanceFlexibilityPolicy": {
        "description": "Instance flexibility Policy allowing a mixture of VM shapes and provisioning models.",
        "properties": {
          "instanceSelectionList": {
            "description": "Optional. List of instance selection options that the group will use when creating new VMs.",
            "items": {
              "$ref": "#/$defs/InstanceSelection"
            },
            "type": "array"
          },
          "instanceSelectionResults": {
            "description": "Output only. A list of instance selection results in the group.",
            "items": {
              "$ref": "#/$defs/InstanceSelectionResult"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "InstanceSelection": {
        "description": "Defines machines types and a rank to which the machines types belong.",
        "properties": {
          "machineTypes": {
            "description": "Optional. Full machine-type names, e.g. \"n1-standard-16\".",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "rank": {
            "description": "Optional. Preference of this instance selection. Lower number means higher preference. Dataproc will first try to create a VM based on the machine-type with priority rank and fallback to next rank based on availability. Machine types and instance selections with the same priority have the same preference.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "InstanceSelectionResult": {
        "description": "Defines a mapping from machine types to the number of VMs that are created with each machine type.",
        "properties": {
          "machineType": {
            "description": "Output only. Full machine-type names, e.g. \"n1-standard-16\".",
            "readOnly": true,
            "type": "string"
          },
          "vmCount": {
            "description": "Output only. Number of VM provisioned with the machine_type.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "InstanceReference": {
        "description": "A reference to a Compute Engine instance.",
        "properties": {
          "instanceId": {
            "description": "The unique identifier of the Compute Engine instance.",
            "type": "string"
          },
          "instanceName": {
            "description": "The user-friendly name of the Compute Engine instance.",
            "type": "string"
          },
          "publicEciesKey": {
            "description": "The public ECIES key used for sharing data with this instance.",
            "type": "string"
          },
          "publicKey": {
            "description": "The public RSA key used for sharing data with this instance.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ManagedGroupConfig": {
        "description": "Specifies the resources used to actively manage an instance group.",
        "properties": {
          "instanceGroupManagerName": {
            "description": "Output only. The name of the Instance Group Manager for this group.",
            "readOnly": true,
            "type": "string"
          },
          "instanceGroupManagerUri": {
            "description": "Output only. The partial URI to the instance group manager for this group. E.g. projects/my-project/regions/us-central1/instanceGroupManagers/my-igm.",
            "readOnly": true,
            "type": "string"
          },
          "instanceTemplateName": {
            "description": "Output only. The name of the Instance Template used for the Managed Instance Group.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "StartupConfig": {
        "description": "Configuration to handle the startup of instances during cluster create and update process.",
        "properties": {
          "requiredRegistrationFraction": {
            "description": "Optional. The config setting to enable cluster creation/ updation to be successful only after required_registration_fraction of instances are up and running. This configuration is applicable to only secondary workers for now. The cluster will fail if required_registration_fraction of instances are not available. This will include instance creation, agent registration, and service registration (if enabled).",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "DataprocMetricConfig": {
        "description": "Dataproc metric config.",
        "properties": {
          "metrics": {
            "description": "Required. Metrics sources to enable.",
            "items": {
              "$ref": "#/$defs/Metric"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Metric": {
        "description": "A Dataproc custom metric.",
        "properties": {
          "metricOverrides": {
            "description": "Optional. Specify one or more Custom metrics (https://cloud.google.com/dataproc/docs/guides/dataproc-metrics#custom_metrics) to collect for the metric course (for the SPARK metric source (any Spark metric (https://spark.apache.org/docs/latest/monitoring.html#metrics) can be specified).Provide metrics in the following format: METRIC_SOURCE: INSTANCE:GROUP:METRIC Use camelcase as appropriate.Examples: yarn:ResourceManager:QueueMetrics:AppsCompleted spark:driver:DAGScheduler:job.allJobs sparkHistoryServer:JVM:Memory:NonHeapMemoryUsage.committed hiveserver2:JVM:Memory:NonHeapMemoryUsage.used Notes: Only the specified overridden metrics are collected for the metric source. For example, if one or more spark:executive metrics are listed as metric overrides, other SPARK metrics are not collected. The collection of the metrics for other enabled custom metric sources is unaffected. For example, if both SPARK andd YARN metric sources are enabled, and overrides are provided for Spark metrics only, all YARN metrics are collected.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "metricSource": {
            "description": "Required. A standard set of metrics is collected unless metricOverrides are specified for the metric source (see Custom metrics (https://cloud.google.com/dataproc/docs/guides/dataproc-metrics#custom_metrics) for more information).",
            "enum": [
              "METRIC_SOURCE_UNSPECIFIED",
              "MONITORING_AGENT_DEFAULTS",
              "HDFS",
              "SPARK",
              "YARN",
              "SPARK_HISTORY_SERVER",
              "HIVESERVER2",
              "HIVEMETASTORE",
              "FLINK"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "EncryptionConfig": {
        "description": "Encryption settings for the cluster.",
        "properties": {
          "gcePdKmsKeyName": {
            "description": "Optional. The Cloud KMS key resource name to use for persistent disk encryption for all instances in the cluster. See Use CMEK with cluster data (https://cloud.google.com//dataproc/docs/concepts/configuring-clusters/customer-managed-encryption#use_cmek_with_cluster_data) for more information.",
            "type": "string"
          },
          "kmsKey": {
            "description": "Optional. The Cloud KMS key resource name to use for cluster persistent disk and job argument encryption. See Use CMEK with cluster data (https://cloud.google.com//dataproc/docs/concepts/configuring-clusters/customer-managed-encryption#use_cmek_with_cluster_data) for more information.When this key resource name is provided, the following job arguments of the following job types submitted to the cluster are encrypted using CMEK: FlinkJob args (https://cloud.google.com/dataproc/docs/reference/rest/v1/FlinkJob) HadoopJob args (https://cloud.google.com/dataproc/docs/reference/rest/v1/HadoopJob) SparkJob args (https://cloud.google.com/dataproc/docs/reference/rest/v1/SparkJob) SparkRJob args (https://cloud.google.com/dataproc/docs/reference/rest/v1/SparkRJob) PySparkJob args (https://cloud.google.com/dataproc/docs/reference/rest/v1/PySparkJob) SparkSqlJob (https://cloud.google.com/dataproc/docs/reference/rest/v1/SparkSqlJob) scriptVariables and queryList.queries HiveJob (https://cloud.google.com/dataproc/docs/reference/rest/v1/HiveJob) scriptVariables and queryList.queries PigJob (https://cloud.google.com/dataproc/docs/reference/rest/v1/PigJob) scriptVariables and queryList.queries PrestoJob (https://cloud.google.com/dataproc/docs/reference/rest/v1/PrestoJob) scriptVariables and queryList.queries",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EndpointConfig": {
        "description": "Endpoint config for this cluster",
        "properties": {
          "enableHttpPortAccess": {
            "description": "Optional. If true, enable http access to specific ports on the cluster from external sources. Defaults to false.",
            "type": "boolean"
          },
          "httpPorts": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Output only. The map of port descriptions to URLs. Will only be populated if enable_http_port_access is true.",
            "readOnly": true,
            "type": "object"
          }
        },
        "type": "object"
      },
      "GceClusterConfig": {
        "description": "Common config settings for resources of Compute Engine cluster instances, applicable to all instances in the cluster.",
        "properties": {
          "confidentialInstanceConfig": {
            "$ref": "#/$defs/ConfidentialInstanceConfig"
          },
          "internalIpOnly": {
            "description": "Optional. If true, all instances in the cluster will only have internal IP addresses. By default, clusters are not restricted to internal IP addresses, and will have ephemeral external IP addresses assigned to each instance. This internal_ip_only restriction can only be enabled for subnetwork enabled networks, and all off-cluster dependencies must be configured to be accessible without external IP addresses.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Optional. The Compute Engine metadata entries to add to all instances (see Project and instance metadata (https://cloud.google.com/compute/docs/storing-retrieving-metadata#project_and_instance_metadata)).",
            "type": "object"
          },
          "networkUri": {
            "description": "Optional. The Compute Engine network to be used for machine communications. Cannot be specified with subnetwork_uri. If neither network_uri nor subnetwork_uri is specified, the \"default\" network of the project is used, if it exists. Cannot be a \"Custom Subnet Network\" (see Using Subnetworks (https://cloud.google.com/compute/docs/subnetworks) for more information).A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/global/networks/default projects/[project_id]/global/networks/default default",
            "type": "string"
          },
          "nodeGroupAffinity": {
            "$ref": "#/$defs/NodeGroupAffinity"
          },
          "privateIpv6GoogleAccess": {
            "description": "Optional. The type of IPv6 access for a cluster.",
            "enum": [
              "PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED",
              "INHERIT_FROM_SUBNETWORK",
              "OUTBOUND",
              "BIDIRECTIONAL"
            ],
            "type": "string"
          },
          "reservationAffinity": {
            "$ref": "#/$defs/ReservationAffinity"
          },
          "serviceAccount": {
            "description": "Optional. The Dataproc service account (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/service-accounts#service_accounts_in_dataproc) (also see VM Data Plane identity (https://cloud.google.com/dataproc/docs/concepts/iam/dataproc-principals#vm_service_account_data_plane_identity)) used by Dataproc cluster VM instances to access Google Cloud Platform services.If not specified, the Compute Engine default service account (https://cloud.google.com/compute/docs/access/service-accounts#default_service_account) is used.",
            "type": "string"
          },
          "serviceAccountScopes": {
            "description": "Optional. The URIs of service account scopes to be included in Compute Engine instances. The following base set of scopes is always included: https://www.googleapis.com/auth/cloud.useraccounts.readonly https://www.googleapis.com/auth/devstorage.read_write https://www.googleapis.com/auth/logging.writeIf no scopes are specified, the following defaults are also provided: https://www.googleapis.com/auth/bigquery https://www.googleapis.com/auth/bigtable.admin.table https://www.googleapis.com/auth/bigtable.data https://www.googleapis.com/auth/devstorage.full_control",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "shieldedInstanceConfig": {
            "$ref": "#/$defs/ShieldedInstanceConfig"
          },
          "subnetworkUri": {
            "description": "Optional. The Compute Engine subnetwork to be used for machine communications. Cannot be specified with network_uri.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/regions/[region]/subnetworks/sub0 projects/[project_id]/regions/[region]/subnetworks/sub0 sub0",
            "type": "string"
          },
          "tags": {
            "description": "The Compute Engine tags to add to all instances (see Tagging instances (https://cloud.google.com/compute/docs/label-or-tag-resources#tags)).",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "zoneUri": {
            "description": "Optional. The Compute Engine zone where the Dataproc cluster will be located. If omitted, the service will pick a zone in the cluster's Compute Engine region. On a get request, zone will always be present.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone] projects/[project_id]/zones/[zone] [zone]",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ConfidentialInstanceConfig": {
        "description": "Confidential Instance Config for clusters using Confidential VMs (https://cloud.google.com/compute/confidential-vm/docs)",
        "properties": {
          "enableConfidentialCompute": {
            "description": "Optional. Defines whether the instance should have confidential compute enabled.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "NodeGroupAffinity": {
        "description": "Node Group Affinity for clusters using sole-tenant node groups. The Dataproc NodeGroupAffinity resource is not related to the Dataproc NodeGroup resource.",
        "properties": {
          "nodeGroupUri": {
            "description": "Required. The URI of a sole-tenant node group resource (https://cloud.google.com/compute/docs/reference/rest/v1/nodeGroups) that the cluster will be created on.A full URL, partial URI, or node group name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/nodeGroups/node-group-1 projects/[project_id]/zones/[zone]/nodeGroups/node-group-1 node-group-1",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ReservationAffinity": {
        "description": "Reservation Affinity for consuming Zonal reservation.",
        "properties": {
          "consumeReservationType": {
            "description": "Optional. Type of reservation to consume",
            "enum": [
              "TYPE_UNSPECIFIED",
              "NO_RESERVATION",
              "ANY_RESERVATION",
              "SPECIFIC_RESERVATION"
            ],
            "type": "string"
          },
          "key": {
            "description": "Optional. Corresponds to the label key of reservation resource.",
            "type": "string"
          },
          "values": {
            "description": "Optional. Corresponds to the label values of reservation resource.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ShieldedInstanceConfig": {
        "description": "Shielded Instance Config for clusters using Compute Engine Shielded VMs (https://cloud.google.com/security/shielded-cloud/shielded-vm).",
        "properties": {
          "enableIntegrityMonitoring": {
            "description": "Optional. Defines whether instances have integrity monitoring enabled.",
            "type": "boolean"
          },
          "enableSecureBoot": {
            "description": "Optional. Defines whether instances have Secure Boot enabled.",
            "type": "boolean"
          },
          "enableVtpm": {
            "description": "Optional. Defines whether instances have the vTPM enabled.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GkeClusterConfig": {
        "description": "The cluster's GKE config.",
        "properties": {
          "gkeClusterTarget": {
            "description": "Optional. A target GKE cluster to deploy to. It must be in the same project and region as the Dataproc cluster (the GKE cluster can be zonal or regional). Format: 'projects/{project}/locations/{location}/clusters/{cluster_id}'",
            "type": "string"
          },
          "namespacedGkeDeploymentTarget": {
            "$ref": "#/$defs/NamespacedGkeDeploymentTarget"
          },
          "nodePoolTarget": {
            "description": "Optional. GKE node pools where workloads will be scheduled. At least one node pool must be assigned the DEFAULT GkeNodePoolTarget.Role. If a GkeNodePoolTarget is not specified, Dataproc constructs a DEFAULT GkeNodePoolTarget. Each role can be given to only one GkeNodePoolTarget. All node pools must have the same location settings.",
            "items": {
              "$ref": "#/$defs/GkeNodePoolTarget"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "NamespacedGkeDeploymentTarget": {
        "deprecated": true,
        "description": "Deprecated. Used only for the deprecated beta. A full, namespace-isolated deployment target for an existing GKE cluster.",
        "properties": {
          "clusterNamespace": {
            "description": "Optional. A namespace within the GKE cluster to deploy into.",
            "type": "string"
          },
          "targetGkeCluster": {
            "description": "Optional. The target GKE cluster to deploy to. Format: 'projects/{project}/locations/{location}/clusters/{cluster_id}'",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GkeNodePoolTarget": {
        "description": "GKE node pools that Dataproc workloads run on.",
        "properties": {
          "nodePool": {
            "description": "Required. The target GKE node pool. Format: 'projects/{project}/locations/{location}/clusters/{cluster}/nodePools/{node_pool}'",
            "type": "string"
          },
          "nodePoolConfig": {
            "$ref": "#/$defs/GkeNodePoolConfig"
          },
          "roles": {
            "description": "Required. The roles associated with the GKE node pool.",
            "items": {
              "enum": [
                "ROLE_UNSPECIFIED",
                "DEFAULT",
                "CONTROLLER",
                "SPARK_DRIVER",
                "SPARK_EXECUTOR"
              ],
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GkeNodePoolConfig": {
        "description": "The configuration of a GKE node pool used by a Dataproc-on-GKE cluster (https://cloud.google.com/dataproc/docs/concepts/jobs/dataproc-gke#create-a-dataproc-on-gke-cluster).",
        "properties": {
          "autoscaling": {
            "$ref": "#/$defs/GkeNodePoolAutoscalingConfig"
          },
          "config": {
            "$ref": "#/$defs/GkeNodeConfig"
          },
          "locations": {
            "description": "Optional. The list of Compute Engine zones (https://cloud.google.com/compute/docs/zones#available) where node pool nodes associated with a Dataproc on GKE virtual cluster will be located.Note: All node pools associated with a virtual cluster must be located in the same region as the virtual cluster, and they must be located in the same zone within that region.If a location is not specified during node pool creation, Dataproc on GKE will choose the zone.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GkeNodePoolAutoscalingConfig": {
        "description": "GkeNodePoolAutoscaling contains information the cluster autoscaler needs to adjust the size of the node pool to the current cluster usage.",
        "properties": {
          "maxNodeCount": {
            "description": "The maximum number of nodes in the node pool. Must be >= min_node_count, and must be > 0. Note: Quota must be sufficient to scale up the cluster.",
            "format": "int32",
            "type": "integer"
          },
          "minNodeCount": {
            "description": "The minimum number of nodes in the node pool. Must be >= 0 and <= max_node_count.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GkeNodeConfig": {
        "description": "Parameters that describe cluster nodes.",
        "properties": {
          "accelerators": {
            "description": "Optional. A list of hardware accelerators (https://cloud.google.com/compute/docs/gpus) to attach to each node.",
            "items": {
              "$ref": "#/$defs/GkeNodePoolAcceleratorConfig"
            },
            "type": "array"
          },
          "bootDiskKmsKey": {
            "description": "Optional. The Customer Managed Encryption Key (CMEK) (https://cloud.google.com/kubernetes-engine/docs/how-to/using-cmek) used to encrypt the boot disk attached to each node in the node pool. Specify the key using the following format: projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{crypto_key}",
            "type": "string"
          },
          "localSsdCount": {
            "description": "Optional. The number of local SSD disks to attach to the node, which is limited by the maximum number of disks allowable per zone (see Adding Local SSDs (https://cloud.google.com/compute/docs/disks/local-ssd)).",
            "format": "int32",
            "type": "integer"
          },
          "machineType": {
            "description": "Optional. The name of a Compute Engine machine type (https://cloud.google.com/compute/docs/machine-types).",
            "type": "string"
          },
          "minCpuPlatform": {
            "description": "Optional. Minimum CPU platform (https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform) to be used by this instance. The instance may be scheduled on the specified or a newer CPU platform. Specify the friendly names of CPU platforms, such as \"Intel Haswell\"` or Intel Sandy Bridge\".",
            "type": "string"
          },
          "preemptible": {
            "description": "Optional. Whether the nodes are created as legacy preemptible VM instances (https://cloud.google.com/compute/docs/instances/preemptible). Also see Spot VMs, preemptible VM instances without a maximum lifetime. Legacy and Spot preemptible nodes cannot be used in a node pool with the CONTROLLER role or in the DEFAULT node pool if the CONTROLLER role is not assigned (the DEFAULT node pool will assume the CONTROLLER role).",
            "type": "boolean"
          },
          "spot": {
            "description": "Optional. Whether the nodes are created as Spot VM instances (https://cloud.google.com/compute/docs/instances/spot). Spot VMs are the latest update to legacy preemptible VMs. Spot VMs do not have a maximum lifetime. Legacy and Spot preemptible nodes cannot be used in a node pool with the CONTROLLER role or in the DEFAULT node pool if the CONTROLLER role is not assigned (the DEFAULT node pool will assume the CONTROLLER role).",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GkeNodePoolAcceleratorConfig": {
        "description": "A GkeNodeConfigAcceleratorConfig represents a Hardware Accelerator request for a node pool.",
        "properties": {
          "acceleratorCount": {
            "description": "The number of accelerator cards exposed to an instance.",
            "format": "int64",
            "type": "string"
          },
          "acceleratorType": {
            "description": "The accelerator type resource namename (see GPUs on Compute Engine).",
            "type": "string"
          },
          "gpuPartitionSize": {
            "description": "Size of partitions to create on the GPU. Valid values are described in the NVIDIA mig user guide (https://docs.nvidia.com/datacenter/tesla/mig-user-guide/#partitioning).",
            "type": "string"
          }
        },
        "type": "object"
      },
      "NodeInitializationAction": {
        "description": "Specifies an executable to run on a fully configured node and a timeout period for executable completion.",
        "properties": {
          "executableFile": {
            "description": "Required. Cloud Storage URI of executable file.",
            "type": "string"
          },
          "executionTimeout": {
            "description": "Optional. Amount of time executable has to complete. Default is 10 minutes (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).Cluster creation fails with an explanatory error message (the name of the executable that caused the error and the exceeded timeout period) if the executable is not completed at end of the timeout period.",
            "format": "google-duration",
            "type": "string"
          }
        },
        "type": "object"
      },
      "LifecycleConfig": {
        "description": "Specifies the cluster auto-delete schedule configuration.",
        "properties": {
          "autoDeleteTime": {
            "description": "Optional. The time when cluster will be auto-deleted (see JSON representation of Timestamp (https://developers.google.com/protocol-buffers/docs/proto3#json)).",
            "format": "google-datetime",
            "type": "string"
          },
          "autoDeleteTtl": {
            "description": "Optional. The lifetime duration of cluster. The cluster will be auto-deleted at the end of this period. Minimum value is 10 minutes; maximum value is 14 days (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).",
            "format": "google-duration",
            "type": "string"
          },
          "idleDeleteTtl": {
            "description": "Optional. The duration to keep the cluster alive while idling (when no jobs are running). Passing this threshold will cause the cluster to be deleted. Minimum value is 5 minutes; maximum value is 14 days (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).",
            "format": "google-duration",
            "type": "string"
          },
          "idleStartTime": {
            "description": "Output only. The time when cluster became idle (most recent job finished) and became eligible for deletion due to idleness (see JSON representation of Timestamp (https://developers.google.com/protocol-buffers/docs/proto3#json)).",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "MetastoreConfig": {
        "description": "Specifies a Metastore configuration.",
        "properties": {
          "dataprocMetastoreService": {
            "description": "Required. Resource name of an existing Dataproc Metastore service.Example: projects/[project_id]/locations/[dataproc_region]/services/[service-name]",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SecurityConfig": {
        "description": "Security related configuration, including encryption, Kerberos, etc.",
        "properties": {
          "identityConfig": {
            "$ref": "#/$defs/IdentityConfig"
          },
          "kerberosConfig": {
            "$ref": "#/$defs/KerberosConfig"
          }
        },
        "type": "object"
      },
      "IdentityConfig": {
        "description": "Identity related configuration, including service account based secure multi-tenancy user mappings.",
        "properties": {
          "userServiceAccountMapping": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Required. Map of user to service account.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "KerberosConfig": {
        "description": "Specifies Kerberos related configuration.",
        "properties": {
          "crossRealmTrustAdminServer": {
            "description": "Optional. The admin server (IP or hostname) for the remote trusted realm in a cross realm trust relationship.",
            "type": "string"
          },
          "crossRealmTrustKdc": {
            "description": "Optional. The KDC (IP or hostname) for the remote trusted realm in a cross realm trust relationship.",
            "type": "string"
          },
          "crossRealmTrustRealm": {
            "description": "Optional. The remote realm the Dataproc on-cluster KDC will trust, should the user enable cross realm trust.",
            "type": "string"
          },
          "crossRealmTrustSharedPasswordUri": {
            "description": "Optional. The Cloud Storage URI of a KMS encrypted file containing the shared password between the on-cluster Kerberos realm and the remote trusted realm, in a cross realm trust relationship.",
            "type": "string"
          },
          "enableKerberos": {
            "description": "Optional. Flag to indicate whether to Kerberize the cluster (default: false). Set this field to true to enable Kerberos on a cluster.",
            "type": "boolean"
          },
          "kdcDbKeyUri": {
            "description": "Optional. The Cloud Storage URI of a KMS encrypted file containing the master key of the KDC database.",
            "type": "string"
          },
          "keyPasswordUri": {
            "description": "Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided key. For the self-signed certificate, this password is generated by Dataproc.",
            "type": "string"
          },
          "keystorePasswordUri": {
            "description": "Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided keystore. For the self-signed certificate, this password is generated by Dataproc.",
            "type": "string"
          },
          "keystoreUri": {
            "description": "Optional. The Cloud Storage URI of the keystore file used for SSL encryption. If not provided, Dataproc will provide a self-signed certificate.",
            "type": "string"
          },
          "kmsKeyUri": {
            "description": "Optional. The URI of the KMS key used to encrypt sensitive files.",
            "type": "string"
          },
          "realm": {
            "description": "Optional. The name of the on-cluster Kerberos realm. If not specified, the uppercased domain of hostnames will be the realm.",
            "type": "string"
          },
          "rootPrincipalPasswordUri": {
            "description": "Optional. The Cloud Storage URI of a KMS encrypted file containing the root principal password.",
            "type": "string"
          },
          "tgtLifetimeHours": {
            "description": "Optional. The lifetime of the ticket granting ticket, in hours. If not specified, or user specifies 0, then default value 10 will be used.",
            "format": "int32",
            "type": "integer"
          },
          "truststorePasswordUri": {
            "description": "Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided truststore. For the self-signed certificate, this password is generated by Dataproc.",
            "type": "string"
          },
          "truststoreUri": {
            "description": "Optional. The Cloud Storage URI of the truststore file used for SSL encryption. If not provided, Dataproc will provide a self-signed certificate.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SoftwareConfig": {
        "description": "Specifies the selection and config of software inside the cluster.",
        "properties": {
          "imageVersion": {
            "description": "Optional. The version of software inside the cluster. It must be one of the supported Dataproc Versions (https://cloud.google.com/dataproc/docs/concepts/versioning/dataproc-versions#supported_dataproc_versions), such as \"1.2\" (including a subminor version, such as \"1.2.29\"), or the \"preview\" version (https://cloud.google.com/dataproc/docs/concepts/versioning/dataproc-versions#other_versions). If unspecified, it defaults to the latest Debian version.",
            "type": "string"
          },
          "optionalComponents": {
            "description": "Optional. The set of components to activate on the cluster.",
            "items": {
              "enum": [
                "COMPONENT_UNSPECIFIED",
                "ANACONDA",
                "DOCKER",
                "DRUID",
                "FLINK",
                "HBASE",
                "HIVE_WEBHCAT",
                "HUDI",
                "JUPYTER",
                "PRESTO",
                "TRINO",
                "RANGER",
                "SOLR",
                "ZEPPELIN",
                "ZOOKEEPER"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "properties": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Optional. The properties to set on daemon config files.Property keys are specified in prefix:property format, for example core:hadoop.tmp.dir. The following are supported prefixes and their mappings: capacity-scheduler: capacity-scheduler.xml core: core-site.xml distcp: distcp-default.xml hdfs: hdfs-site.xml hive: hive-site.xml mapred: mapred-site.xml pig: pig.properties spark: spark-defaults.conf yarn: yarn-site.xmlFor more information, see Cluster properties (https://cloud.google.com/dataproc/docs/concepts/cluster-properties).",
            "type": "object"
          }
        },
        "type": "object"
      },
      "ClusterMetrics": {
        "description": "Contains cluster daemon metrics, such as HDFS and YARN stats.Beta Feature: This report is available for testing purposes only. It may be changed before final release.",
        "properties": {
          "hdfsMetrics": {
            "additionalProperties": {
              "format": "int64",
              "type": "string"
            },
            "description": "The HDFS metrics.",
            "type": "object"
          },
          "yarnMetrics": {
            "additionalProperties": {
              "format": "int64",
              "type": "string"
            },
            "description": "YARN metrics.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "ClusterStatus": {
        "description": "The status of a cluster and its instances.",
        "properties": {
          "detail": {
            "description": "Optional. Output only. Details of cluster's state.",
            "readOnly": true,
            "type": "string"
          },
          "state": {
            "description": "Output only. The cluster's state.",
            "enum": [
              "UNKNOWN",
              "CREATING",
              "RUNNING",
              "ERROR",
              "ERROR_DUE_TO_UPDATE",
              "DELETING",
              "UPDATING",
              "STOPPING",
              "STOPPED",
              "STARTING",
              "REPAIRING"
            ],
            "readOnly": true,
            "type": "string"
          },
          "stateStartTime": {
            "description": "Output only. Time when this state was entered (see JSON representation of Timestamp (https://developers.google.com/protocol-buffers/docs/proto3#json)).",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "substate": {
            "description": "Output only. Additional state information that includes status reported by the agent.",
            "enum": [
              "UNSPECIFIED",
              "UNHEALTHY",
              "STALE_STATUS"
            ],
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "VirtualClusterConfig": {
        "description": "The Dataproc cluster config for a cluster that does not directly control the underlying compute resources, such as a Dataproc-on-GKE cluster (https://cloud.google.com/dataproc/docs/guides/dpgke/dataproc-gke-overview).",
        "properties": {
          "auxiliaryServicesConfig": {
            "$ref": "#/$defs/AuxiliaryServicesConfig"
          },
          "kubernetesClusterConfig": {
            "$ref": "#/$defs/KubernetesClusterConfig"
          },
          "stagingBucket": {
            "description": "Optional. A Cloud Storage bucket used to stage job dependencies, config files, and job driver console output. If you do not specify a staging bucket, Cloud Dataproc will determine a Cloud Storage location (US, ASIA, or EU) for your cluster's staging bucket according to the Compute Engine zone where your cluster is deployed, and then create and manage this project-level, per-location bucket (see Dataproc staging and temp buckets (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/staging-bucket)). This field requires a Cloud Storage bucket name, not a gs://... URI to a Cloud Storage bucket.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AuxiliaryServicesConfig": {
        "description": "Auxiliary services configuration for a Cluster.",
        "properties": {
          "metastoreConfig": {
            "$ref": "#/$defs/MetastoreConfig"
          },
          "sparkHistoryServerConfig": {
            "$ref": "#/$defs/SparkHistoryServerConfig"
          }
        },
        "type": "object"
      },
      "SparkHistoryServerConfig": {
        "description": "Spark History Server configuration for the workload.",
        "properties": {
          "dataprocCluster": {
            "description": "Optional. Resource name of an existing Dataproc Cluster to act as a Spark History Server for the workload.Example: projects/[project_id]/regions/[region]/clusters/[cluster_name]",
            "type": "string"
          }
        },
        "type": "object"
      },
      "KubernetesClusterConfig": {
        "description": "The configuration for running the Dataproc cluster on Kubernetes.",
        "properties": {
          "gkeClusterConfig": {
            "$ref": "#/$defs/GkeClusterConfig"
          },
          "kubernetesNamespace": {
            "description": "Optional. A namespace within the Kubernetes cluster to deploy into. If this namespace does not exist, it is created. If it exists, Dataproc verifies that another Dataproc VirtualCluster is not installed into it. If not specified, the name of the Dataproc Cluster is used.",
            "type": "string"
          },
          "kubernetesSoftwareConfig": {
            "$ref": "#/$defs/KubernetesSoftwareConfig"
          }
        },
        "type": "object"
      },
      "KubernetesSoftwareConfig": {
        "description": "The software configuration for this Dataproc cluster running on Kubernetes.",
        "properties": {
          "componentVersion": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The components that should be installed in this Dataproc cluster. The key must be a string from the KubernetesComponent enumeration. The value is the version of the software to be installed. At least one entry must be specified.",
            "type": "object"
          },
          "properties": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The properties to set on daemon config files.Property keys are specified in prefix:property format, for example spark:spark.kubernetes.container.image. The following are supported prefixes and their mappings: spark: spark-defaults.confFor more information, see Cluster properties (https://cloud.google.com/dataproc/docs/concepts/cluster-properties).",
            "type": "object"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://dataproc.googleapis.com//v1/projects/{projectId}/regions/{region}/clusters{?actionOnFailedPrimaryWorkers,requestId,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "This resource represents a long-running operation that is the result of a network API call.",
        "**Key properties:**",
        {
          "$ul": [
            "**done**: If the value is false, it means the operation is still in progress. If true, the operation is completed, and either error or response is available.",
            [
              "**error**: The Status type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by gRPC (https://github.com/grpc). Each Status message contains three pieces of data: error code, error message, and error details.You can find out more about this error model and how to work with it in the API Design Guide (https://cloud.google.com/apis/design/errors).",
              {
                "$ul": [
                  "**code**: The status code, which should be an enum value of google.rpc.Code.",
                  "**details**: A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                  "**message**: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                ]
              }
            ],
            "**metadata**: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
            "**name**: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the name should be a resource name ending with operations/{unique_id}.",
            "**response**: The normal, successful response of the operation. If the original method returns no data on success, such as Delete, the response is google.protobuf.Empty. If the original method is standard Get/Create/Update, the response should be the resource. For other methods, the response should have the type XxxResponse, where Xxx is the original method name. For example, if the original method name is TakeSnapshot(), the inferred response type is TakeSnapshotResponse."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
