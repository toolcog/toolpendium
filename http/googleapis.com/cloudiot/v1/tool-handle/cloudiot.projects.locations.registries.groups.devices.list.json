{
  "name": "cloudiot_projects_locations_registries_groups_devices_list",
  "description": "List devices in a device registry.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The device registry path. Required. For example, `projects/my-project/locations/us-central1/registries/my-registry`."
      },
      "deviceIds": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "A list of device string IDs. For example, `['device0', 'device12']`. If empty, this field is ignored. Maximum IDs: 10,000"
      },
      "deviceNumIds": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "A list of device numeric IDs. If empty, this field is ignored. Maximum IDs: 10,000."
      },
      "fieldMask": {
        "type": "string",
        "description": "The fields of the `Device` resource to be returned in the response. The fields `id` and `num_id` are always returned, along with any other fields specified in snake_case format, for example: `last_heartbeat_time`."
      },
      "gatewayListOptions.associationsDeviceId": {
        "type": "string",
        "description": "If set, returns only the gateways with which the specified device is associated. The device ID can be numeric (`num_id`) or the user-defined string (`id`). For example, if `456` is specified, returns only the gateways to which the device with `num_id` 456 is bound."
      },
      "gatewayListOptions.associationsGatewayId": {
        "type": "string",
        "description": "If set, only devices associated with the specified gateway are returned. The gateway ID can be numeric (`num_id`) or the user-defined string (`id`). For example, if `123` is specified, only devices bound to the gateway with `num_id` 123 are returned."
      },
      "gatewayListOptions.gatewayType": {
        "enum": [
          "GATEWAY_TYPE_UNSPECIFIED",
          "GATEWAY",
          "NON_GATEWAY"
        ],
        "type": "string",
        "description": "If `GATEWAY` is specified, only gateways are returned. If `NON_GATEWAY` is specified, only non-gateway devices are returned. If `GATEWAY_TYPE_UNSPECIFIED` is specified, all devices are returned."
      },
      "pageSize": {
        "type": "integer",
        "description": "The maximum number of devices to return in the response. If this value is zero, the service will select a default size. A call may return fewer objects than requested. A non-empty `next_page_token` in the response indicates that more data is available."
      },
      "pageToken": {
        "type": "string",
        "description": "The value returned by the last `ListDevicesResponse`; indicates that this is a continuation of a prior `ListDevices` call and the system should return the next page of data."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      }
    },
    "required": [
      "parent"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://cloudiot.googleapis.com//v1/{parent}/devices{?deviceIds,deviceNumIds,fieldMask,gatewayListOptions.associationsDeviceId,gatewayListOptions.associationsGatewayId,gatewayListOptions.gatewayType,pageSize,pageToken,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Response for `ListDevices`.",
        "**Key properties:**",
        {
          "$ul": [
            "**devices**: The devices that match the request.",
            "**nextPageToken**: If not empty, indicates that there may be more devices that match the request; this value should be passed in a new `ListDevicesRequest`."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
