{
  "name": "cloudiot_projects_locations_registries_create",
  "description": "Creates a device registry that contains devices.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The project and cloud region where this device registry must be created. For example, `projects/example-project/locations/us-central1`."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/DeviceRegistry"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "DeviceRegistry": {
        "description": "A container for a group of devices.",
        "properties": {
          "credentials": {
            "description": "The credentials used to verify the device credentials. No more than 10 credentials can be bound to a single registry at a time. The verification process occurs at the time of device creation or update. If this field is empty, no verification is performed. Otherwise, the credentials of a newly created device or added credentials of an updated device should be signed with one of these registry credentials. Note, however, that existing devices will never be affected by modifications to this list of credentials: after a device has been successfully created in a registry, it should be able to connect even if its registry credentials are revoked, deleted, or modified.",
            "items": {
              "$ref": "#/$defs/RegistryCredential"
            },
            "type": "array"
          },
          "eventNotificationConfigs": {
            "description": "The configuration for notification of telemetry events received from the device. All telemetry events that were successfully published by the device and acknowledged by Cloud IoT Core are guaranteed to be delivered to Cloud Pub/Sub. If multiple configurations match a message, only the first matching configuration is used. If you try to publish a device telemetry event using MQTT without specifying a Cloud Pub/Sub topic for the device's registry, the connection closes automatically. If you try to do so using an HTTP connection, an error is returned. Up to 10 configurations may be provided.",
            "items": {
              "$ref": "#/$defs/EventNotificationConfig"
            },
            "type": "array"
          },
          "httpConfig": {
            "$ref": "#/$defs/HttpConfig"
          },
          "id": {
            "description": "The identifier of this device registry. For example, `myRegistry`.",
            "type": "string"
          },
          "logLevel": {
            "description": "**Beta Feature** The default logging verbosity for activity from devices in this registry. The verbosity level can be overridden by Device.log_level.",
            "enum": [
              "LOG_LEVEL_UNSPECIFIED",
              "NONE",
              "ERROR",
              "INFO",
              "DEBUG"
            ],
            "type": "string"
          },
          "mqttConfig": {
            "$ref": "#/$defs/MqttConfig"
          },
          "name": {
            "description": "The resource path name. For example, `projects/example-project/locations/us-central1/registries/my-registry`.",
            "type": "string"
          },
          "stateNotificationConfig": {
            "$ref": "#/$defs/StateNotificationConfig"
          }
        },
        "type": "object"
      },
      "RegistryCredential": {
        "description": "A server-stored registry credential used to validate device credentials.",
        "properties": {
          "publicKeyCertificate": {
            "$ref": "#/$defs/PublicKeyCertificate"
          }
        },
        "type": "object"
      },
      "PublicKeyCertificate": {
        "description": "A public key certificate format and data.",
        "properties": {
          "certificate": {
            "description": "The certificate data.",
            "type": "string"
          },
          "format": {
            "description": "The certificate format.",
            "enum": [
              "UNSPECIFIED_PUBLIC_KEY_CERTIFICATE_FORMAT",
              "X509_CERTIFICATE_PEM"
            ],
            "type": "string"
          },
          "x509Details": {
            "$ref": "#/$defs/X509CertificateDetails"
          }
        },
        "type": "object"
      },
      "X509CertificateDetails": {
        "description": "Details of an X.509 certificate. For informational purposes only.",
        "properties": {
          "expiryTime": {
            "description": "The time the certificate becomes invalid.",
            "format": "google-datetime",
            "type": "string"
          },
          "issuer": {
            "description": "The entity that signed the certificate.",
            "type": "string"
          },
          "publicKeyType": {
            "description": "The type of public key in the certificate.",
            "type": "string"
          },
          "signatureAlgorithm": {
            "description": "The algorithm used to sign the certificate.",
            "type": "string"
          },
          "startTime": {
            "description": "The time the certificate becomes valid.",
            "format": "google-datetime",
            "type": "string"
          },
          "subject": {
            "description": "The entity the certificate and public key belong to.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EventNotificationConfig": {
        "description": "The configuration for forwarding telemetry events.",
        "properties": {
          "pubsubTopicName": {
            "description": "A Cloud Pub/Sub topic name. For example, `projects/myProject/topics/deviceEvents`.",
            "type": "string"
          },
          "subfolderMatches": {
            "description": "If the subfolder name matches this string exactly, this configuration will be used. The string must not include the leading '/' character. If empty, all strings are matched. This field is used only for telemetry events; subfolders are not supported for state changes.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "HttpConfig": {
        "description": "The configuration of the HTTP bridge for a device registry.",
        "properties": {
          "httpEnabledState": {
            "description": "If enabled, allows devices to use DeviceService via the HTTP protocol. Otherwise, any requests to DeviceService will fail for this registry.",
            "enum": [
              "HTTP_STATE_UNSPECIFIED",
              "HTTP_ENABLED",
              "HTTP_DISABLED"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "MqttConfig": {
        "description": "The configuration of MQTT for a device registry.",
        "properties": {
          "mqttEnabledState": {
            "description": "If enabled, allows connections using the MQTT protocol. Otherwise, MQTT connections to this registry will fail.",
            "enum": [
              "MQTT_STATE_UNSPECIFIED",
              "MQTT_ENABLED",
              "MQTT_DISABLED"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "StateNotificationConfig": {
        "description": "The configuration for notification of new states received from the device.",
        "properties": {
          "pubsubTopicName": {
            "description": "A Cloud Pub/Sub topic name. For example, `projects/myProject/topics/deviceEvents`.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://cloudiot.googleapis.com//v1/{parent}/registries{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A container for a group of devices.",
        "**Key properties:**",
        {
          "$ul": [
            "**credentials**: The credentials used to verify the device credentials. No more than 10 credentials can be bound to a single registry at a time. The verification process occurs at the time of device creation or update. If this field is empty, no verification is performed. Otherwise, the credentials of a newly created device or added credentials of an updated device should be signed with one of these registry credentials. Note, however, that existing devices will never be affected by modifications to this list of credentials: after a device has been successfully created in a registry, it should be able to connect even if its registry credentials are revoked, deleted, or modified.",
            "**eventNotificationConfigs**: The configuration for notification of telemetry events received from the device. All telemetry events that were successfully published by the device and acknowledged by Cloud IoT Core are guaranteed to be delivered to Cloud Pub/Sub. If multiple configurations match a message, only the first matching configuration is used. If you try to publish a device telemetry event using MQTT without specifying a Cloud Pub/Sub topic for the device's registry, the connection closes automatically. If you try to do so using an HTTP connection, an error is returned. Up to 10 configurations may be provided.",
            [
              "**httpConfig**: The configuration of the HTTP bridge for a device registry.",
              {
                "$ul": [
                  "**httpEnabledState**: If enabled, allows devices to use DeviceService via the HTTP protocol. Otherwise, any requests to DeviceService will fail for this registry."
                ]
              }
            ],
            "**id**: The identifier of this device registry. For example, `myRegistry`.",
            "**logLevel**: **Beta Feature** The default logging verbosity for activity from devices in this registry. The verbosity level can be overridden by Device.log_level.",
            [
              "**mqttConfig**: The configuration of MQTT for a device registry.",
              {
                "$ul": [
                  "**mqttEnabledState**: If enabled, allows connections using the MQTT protocol. Otherwise, MQTT connections to this registry will fail."
                ]
              }
            ],
            "**name**: The resource path name. For example, `projects/example-project/locations/us-central1/registries/my-registry`.",
            [
              "**stateNotificationConfig**: The configuration for notification of new states received from the device.",
              {
                "$ul": [
                  "**pubsubTopicName**: A Cloud Pub/Sub topic name. For example, `projects/myProject/topics/deviceEvents`."
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
