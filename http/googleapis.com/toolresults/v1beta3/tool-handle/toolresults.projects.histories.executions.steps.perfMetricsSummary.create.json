{
  "name": "toolresults_projects_histories_executions_steps_perfMetricsSummary_create",
  "description": "Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not exist",
  "parameters": {
    "type": "object",
    "properties": {
      "projectId": {
        "type": "string",
        "description": "The cloud project"
      },
      "historyId": {
        "type": "string",
        "description": "A tool results history ID."
      },
      "executionId": {
        "type": "string",
        "description": "A tool results execution ID."
      },
      "stepId": {
        "type": "string",
        "description": "A tool results step ID."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/PerfMetricsSummary"
      }
    },
    "required": [
      "projectId",
      "historyId",
      "executionId",
      "stepId"
    ],
    "$defs": {
      "PerfMetricsSummary": {
        "description": "A summary of perf metrics collected and performance environment info",
        "properties": {
          "appStartTime": {
            "$ref": "#/$defs/AppStartTime"
          },
          "executionId": {
            "description": "A tool results execution ID. @OutputOnly",
            "type": "string"
          },
          "graphicsStats": {
            "$ref": "#/$defs/GraphicsStats"
          },
          "historyId": {
            "description": "A tool results history ID. @OutputOnly",
            "type": "string"
          },
          "perfEnvironment": {
            "$ref": "#/$defs/PerfEnvironment"
          },
          "perfMetrics": {
            "description": "Set of resource collected",
            "items": {
              "enum": [
                "perfMetricTypeUnspecified",
                "memory",
                "cpu",
                "network",
                "graphics"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "projectId": {
            "description": "The cloud project @OutputOnly",
            "type": "string"
          },
          "stepId": {
            "description": "A tool results step ID. @OutputOnly",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AppStartTime": {
        "properties": {
          "fullyDrawnTime": {
            "$ref": "#/$defs/Duration"
          },
          "initialDisplayTime": {
            "$ref": "#/$defs/Duration"
          }
        },
        "type": "object"
      },
      "Duration": {
        "description": " A Duration represents a signed, fixed-length span of time represented as a count of seconds and fractions of seconds at nanosecond resolution. It is independent of any calendar and concepts like \"day\" or \"month\". It is related to Timestamp in that the difference between two Timestamp values is a Duration and it can be added or subtracted from a Timestamp. Range is approximately +-10,000 years.",
        "properties": {
          "nanos": {
            "description": "Signed fractions of a second at nanosecond resolution of the span of time. Durations less than one second are represented with a 0 `seconds` field and a positive or negative `nanos` field. For durations of one second or more, a non-zero value for the `nanos` field must be of the same sign as the `seconds` field. Must be from -999,999,999 to +999,999,999 inclusive.",
            "format": "int32",
            "type": "integer"
          },
          "seconds": {
            "description": "Signed seconds of the span of time. Must be from -315,576,000,000 to +315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GraphicsStats": {
        "description": "Graphics statistics for the App. The information is collected from 'adb shell dumpsys graphicsstats'. For more info see: https://developer.android.com/training/testing/performance.html Statistics will only be present for API 23+.",
        "properties": {
          "buckets": {
            "description": "Histogram of frame render times. There should be 154 buckets ranging from [5ms, 6ms) to [4950ms, infinity)",
            "items": {
              "$ref": "#/$defs/GraphicsStatsBucket"
            },
            "type": "array"
          },
          "highInputLatencyCount": {
            "description": "Total \"high input latency\" events.",
            "format": "int64",
            "type": "string"
          },
          "jankyFrames": {
            "description": "Total frames with slow render time. Should be <= total_frames.",
            "format": "int64",
            "type": "string"
          },
          "missedVsyncCount": {
            "description": "Total \"missed vsync\" events.",
            "format": "int64",
            "type": "string"
          },
          "p50Millis": {
            "description": "50th percentile frame render time in milliseconds.",
            "format": "int64",
            "type": "string"
          },
          "p90Millis": {
            "description": "90th percentile frame render time in milliseconds.",
            "format": "int64",
            "type": "string"
          },
          "p95Millis": {
            "description": "95th percentile frame render time in milliseconds.",
            "format": "int64",
            "type": "string"
          },
          "p99Millis": {
            "description": "99th percentile frame render time in milliseconds.",
            "format": "int64",
            "type": "string"
          },
          "slowBitmapUploadCount": {
            "description": "Total \"slow bitmap upload\" events.",
            "format": "int64",
            "type": "string"
          },
          "slowDrawCount": {
            "description": "Total \"slow draw\" events.",
            "format": "int64",
            "type": "string"
          },
          "slowUiThreadCount": {
            "description": "Total \"slow UI thread\" events.",
            "format": "int64",
            "type": "string"
          },
          "totalFrames": {
            "description": "Total frames rendered by package.",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GraphicsStatsBucket": {
        "properties": {
          "frameCount": {
            "description": "Number of frames in the bucket.",
            "format": "int64",
            "type": "string"
          },
          "renderMillis": {
            "description": "Lower bound of render time in milliseconds.",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PerfEnvironment": {
        "description": "Encapsulates performance environment info",
        "properties": {
          "cpuInfo": {
            "$ref": "#/$defs/CPUInfo"
          },
          "memoryInfo": {
            "$ref": "#/$defs/MemoryInfo"
          }
        },
        "type": "object"
      },
      "CPUInfo": {
        "properties": {
          "cpuProcessor": {
            "description": "description of the device processor ie '1.8 GHz hexa core 64-bit ARMv8-A'",
            "type": "string"
          },
          "cpuSpeedInGhz": {
            "description": "the CPU clock speed in GHz",
            "format": "float",
            "type": "number"
          },
          "numberOfCores": {
            "description": "the number of CPU cores",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "MemoryInfo": {
        "properties": {
          "memoryCapInKibibyte": {
            "description": "Maximum memory that can be allocated to the process in KiB",
            "format": "int64",
            "type": "string"
          },
          "memoryTotalInKibibyte": {
            "description": "Total memory available on the device in KiB",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://toolresults.googleapis.com//toolresults/v1beta3/projects/{projectId}/histories/{historyId}/executions/{executionId}/steps/{stepId}/perfMetricsSummary{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A summary of perf metrics collected and performance environment info",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**appStartTime**",
              {
                "$ul": [
                  [
                    "**fullyDrawnTime**:  A Duration represents a signed, fixed-length span of time represented as a count of seconds and fractions of seconds at nanosecond resolution. It is independent of any calendar and concepts like \"day\" or \"month\". It is related to Timestamp in that the difference between two Timestamp values is a Duration and it can be added or subtracted from a Timestamp. Range is approximately +-10,000 years.",
                    {
                      "$ul": [
                        "**nanos**: Signed fractions of a second at nanosecond resolution of the span of time. Durations less than one second are represented with a 0 `seconds` field and a positive or negative `nanos` field. For durations of one second or more, a non-zero value for the `nanos` field must be of the same sign as the `seconds` field. Must be from -999,999,999 to +999,999,999 inclusive.",
                        "**seconds**: Signed seconds of the span of time. Must be from -315,576,000,000 to +315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years"
                      ]
                    }
                  ],
                  [
                    "**initialDisplayTime**:  A Duration represents a signed, fixed-length span of time represented as a count of seconds and fractions of seconds at nanosecond resolution. It is independent of any calendar and concepts like \"day\" or \"month\". It is related to Timestamp in that the difference between two Timestamp values is a Duration and it can be added or subtracted from a Timestamp. Range is approximately +-10,000 years.",
                    {
                      "$ul": [
                        "**nanos**: Signed fractions of a second at nanosecond resolution of the span of time. Durations less than one second are represented with a 0 `seconds` field and a positive or negative `nanos` field. For durations of one second or more, a non-zero value for the `nanos` field must be of the same sign as the `seconds` field. Must be from -999,999,999 to +999,999,999 inclusive.",
                        "**seconds**: Signed seconds of the span of time. Must be from -315,576,000,000 to +315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years"
                      ]
                    }
                  ]
                ]
              }
            ],
            "**executionId**: A tool results execution ID. @OutputOnly",
            [
              "**graphicsStats**: Graphics statistics for the App. The information is collected from 'adb shell dumpsys graphicsstats'. For more info see: https://developer.android.com/training/testing/performance.html Statistics will only be present for API 23+.",
              {
                "$ul": [
                  "**buckets**: Histogram of frame render times. There should be 154 buckets ranging from [5ms, 6ms) to [4950ms, infinity)",
                  "**highInputLatencyCount**: Total \"high input latency\" events.",
                  "**jankyFrames**: Total frames with slow render time. Should be <= total_frames.",
                  "**missedVsyncCount**: Total \"missed vsync\" events.",
                  "**p50Millis**: 50th percentile frame render time in milliseconds.",
                  "**p90Millis**: 90th percentile frame render time in milliseconds.",
                  "**p95Millis**: 95th percentile frame render time in milliseconds.",
                  "**p99Millis**: 99th percentile frame render time in milliseconds.",
                  "**slowBitmapUploadCount**: Total \"slow bitmap upload\" events.",
                  "**slowDrawCount**: Total \"slow draw\" events.",
                  "**slowUiThreadCount**: Total \"slow UI thread\" events.",
                  "**totalFrames**: Total frames rendered by package."
                ]
              }
            ],
            "**historyId**: A tool results history ID. @OutputOnly",
            [
              "**perfEnvironment**: Encapsulates performance environment info",
              {
                "$ul": [
                  [
                    "**cpuInfo**",
                    {
                      "$ul": [
                        "**cpuProcessor**: description of the device processor ie '1.8 GHz hexa core 64-bit ARMv8-A'",
                        "**cpuSpeedInGhz**: the CPU clock speed in GHz",
                        "**numberOfCores**: the number of CPU cores"
                      ]
                    }
                  ],
                  [
                    "**memoryInfo**",
                    {
                      "$ul": [
                        "**memoryCapInKibibyte**: Maximum memory that can be allocated to the process in KiB",
                        "**memoryTotalInKibibyte**: Total memory available on the device in KiB"
                      ]
                    }
                  ]
                ]
              }
            ],
            "**perfMetrics**: Set of resource collected",
            "**projectId**: The cloud project @OutputOnly",
            "**stepId**: A tool results step ID. @OutputOnly"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
