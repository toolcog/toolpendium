{
  "name": "prod_tt_sasportal_policies_set",
  "description": "Sets the access control policy on the specified resource. Replaces any existing policy.",
  "parameters": {
    "type": "object",
    "properties": {
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/SasPortalSetPolicyRequest"
      }
    },
    "$defs": {
      "SasPortalSetPolicyRequest": {
        "description": "Request message for `SetPolicy` method.",
        "properties": {
          "disableNotification": {
            "description": "Optional. Set the field as `true` to disable the onboarding notification.",
            "type": "boolean"
          },
          "policy": {
            "$ref": "#/$defs/SasPortalPolicy"
          },
          "resource": {
            "description": "Required. The resource for which the policy is being specified. This policy replaces any existing policy.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SasPortalPolicy": {
        "description": "Defines an access control policy to the resources.",
        "properties": {
          "assignments": {
            "description": "List of assignments",
            "items": {
              "$ref": "#/$defs/SasPortalAssignment"
            },
            "type": "array"
          },
          "etag": {
            "description": "The etag is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the etag in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An etag is returned in the response to GetPolicy, and systems are expected to put that etag in the request to SetPolicy to ensure that their change will be applied to the same version of the policy. If no etag is provided in the call to GetPolicy, then the existing policy is overwritten blindly.",
            "format": "byte",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SasPortalAssignment": {
        "description": "Associates `members` with a `role`.",
        "properties": {
          "members": {
            "description": "The identities the role is assigned to. It can have the following values: * `{user_email}`: An email address that represents a specific Google account. For example: `alice@gmail.com`. * `{group_email}`: An email address that represents a Google group. For example, `viewers@gmail.com`.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "role": {
            "description": "Required. Role that is assigned to `members`.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://prod-tt-sasportal.googleapis.com//v1alpha1/policies:set{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Defines an access control policy to the resources.",
        "**Key properties:**",
        {
          "$ul": [
            "**assignments**: List of assignments",
            "**etag**: The etag is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the etag in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An etag is returned in the response to GetPolicy, and systems are expected to put that etag in the request to SetPolicy to ensure that their change will be applied to the same version of the policy. If no etag is provided in the call to GetPolicy, then the existing policy is overwritten blindly."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
