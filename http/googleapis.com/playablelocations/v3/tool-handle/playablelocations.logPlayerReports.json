{
  "name": "playablelocations_logPlayerReports",
  "description": "Logs bad playable location reports submitted by players. Reports are not partially saved; either all reports are saved and this request succeeds, or no reports are saved, and this request fails.",
  "parameters": {
    "type": "object",
    "properties": {
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleMapsPlayablelocationsV3LogPlayerReportsRequest"
      }
    },
    "$defs": {
      "GoogleMapsPlayablelocationsV3LogPlayerReportsRequest": {
        "description": "A request for logging your player's bad location reports.",
        "properties": {
          "clientInfo": {
            "$ref": "#/$defs/GoogleMapsUnityClientInfo"
          },
          "playerReports": {
            "description": "Required. Player reports. The maximum number of player reports that you can log at once is 50.",
            "items": {
              "$ref": "#/$defs/GoogleMapsPlayablelocationsV3PlayerReport"
            },
            "type": "array"
          },
          "requestId": {
            "description": "Required. A string that uniquely identifies the log player reports request. This allows you to detect duplicate requests. We recommend that you use UUIDs for this value. The value must not exceed 50 characters. You should reuse the `request_id` only when retrying a request in the case of a failure. In that case, the request must be identical to the one that failed.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleMapsUnityClientInfo": {
        "description": "Client information.",
        "properties": {
          "apiClient": {
            "description": "API client name and version. For example, the SDK calling the API. The exact format is up to the client.",
            "type": "string"
          },
          "applicationId": {
            "description": "Application ID, such as the package name on Android and the bundle identifier on iOS platforms.",
            "type": "string"
          },
          "applicationVersion": {
            "description": "Application version number, such as \"1.2.3\". The exact format is application-dependent.",
            "type": "string"
          },
          "deviceModel": {
            "description": "Device model as reported by the device. The exact format is platform-dependent.",
            "type": "string"
          },
          "languageCode": {
            "description": "Language code (in BCP-47 format) indicating the UI language of the client. Examples are \"en\", \"en-US\" or \"ja-Latn\". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.",
            "type": "string"
          },
          "operatingSystem": {
            "description": "Operating system name and version as reported by the OS. For example, \"Mac OS X 10.10.4\". The exact format is platform-dependent.",
            "type": "string"
          },
          "operatingSystemBuild": {
            "description": "Build number/version of the operating system. e.g., the contents of android.os.Build.ID in Android, or the contents of sysctl \"kern.osversion\" in iOS.",
            "type": "string"
          },
          "platform": {
            "description": "Platform where the application is running.",
            "enum": [
              "PLATFORM_UNSPECIFIED",
              "EDITOR",
              "MAC_OS",
              "WINDOWS",
              "LINUX",
              "ANDROID",
              "IOS",
              "WEB_GL"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleMapsPlayablelocationsV3PlayerReport": {
        "description": "A report submitted by a player about a playable location that is considered inappropriate for use in the game.",
        "properties": {
          "languageCode": {
            "description": "Language code (in BCP-47 format) indicating the language of the freeform description provided in `reason_details`. Examples are \"en\", \"en-US\" or \"ja-Latn\". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.",
            "type": "string"
          },
          "locationName": {
            "description": "Required. The name of the playable location.",
            "type": "string"
          },
          "reasonDetails": {
            "description": "Required. A free-form description detailing why the playable location is considered bad.",
            "type": "string"
          },
          "reasons": {
            "description": "Required. One or more reasons why this playable location is considered bad.",
            "items": {
              "enum": [
                "BAD_LOCATION_REASON_UNSPECIFIED",
                "OTHER",
                "NOT_PEDESTRIAN_ACCESSIBLE",
                "NOT_OPEN_TO_PUBLIC",
                "PERMANENTLY_CLOSED",
                "TEMPORARILY_INACCESSIBLE"
              ],
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://playablelocations.googleapis.com//v3:logPlayerReports{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A response for the LogPlayerReports method. This method returns no data upon success.",
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
