{
  "name": "appengine_apps_firewall_ingressRules_batchUpdate",
  "description": "Replaces the entire firewall ruleset in one bulk operation. This overrides and replaces the rules of an existing firewall with the new rules.If the final rule does not match traffic with the '*' wildcard IP range, then an \"allow all\" rule is explicitly added to the end of the list.",
  "parameters": {
    "type": "object",
    "properties": {
      "appsId": {
        "type": "string",
        "description": "Part of `name`. Name of the Firewall collection to set. Example: apps/myapp/firewall/ingressRules."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/BatchUpdateIngressRulesRequest"
      }
    },
    "required": [
      "appsId"
    ],
    "$defs": {
      "BatchUpdateIngressRulesRequest": {
        "description": "Request message for Firewall.BatchUpdateIngressRules.",
        "properties": {
          "ingressRules": {
            "description": "A list of FirewallRules to replace the existing set.",
            "items": {
              "$ref": "#/$defs/FirewallRule"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "FirewallRule": {
        "description": "A single firewall rule that is evaluated against incoming traffic and provides an action to take on matched requests.",
        "properties": {
          "action": {
            "description": "The action to take on matched requests.",
            "enum": [
              "UNSPECIFIED_ACTION",
              "ALLOW",
              "DENY"
            ],
            "type": "string"
          },
          "description": {
            "description": "An optional string description of this rule. This field has a maximum length of 400 characters.",
            "type": "string"
          },
          "priority": {
            "description": "A positive integer between 1, Int32.MaxValue-1 that defines the order of rule evaluation. Rules with the lowest priority are evaluated first.A default rule at priority Int32.MaxValue matches all IPv4 and IPv6 traffic when no previous rule matches. Only the action of this rule can be modified by the user.",
            "format": "int32",
            "type": "integer"
          },
          "sourceRange": {
            "description": "IP address or range, defined using CIDR notation, of requests that this rule applies to. You can use the wildcard character \"*\" to match all IPs equivalent to \"0/0\" and \"::/0\" together. Examples: 192.168.1.1 or 192.168.0.0/16 or 2001:db8::/32 or 2001:0db8:0000:0042:0000:8a2e:0370:7334. Truncation will be silently performed on addresses which are not properly truncated. For example, 1.2.3.4/24 is accepted as the same address as 1.2.3.0/24. Similarly, for IPv6, 2001:db8::1/32 is accepted as the same address as 2001:db8::/32.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://appengine.googleapis.com//v1/apps/{appsId}/firewall/ingressRules:batchUpdate{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Response message for Firewall.UpdateAllIngressRules.",
        "**Key properties:**",
        {
          "$ul": [
            "**ingressRules**: The full list of ingress FirewallRules for this application."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
