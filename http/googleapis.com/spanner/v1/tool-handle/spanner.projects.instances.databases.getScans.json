{
  "name": "spanner_projects_instances_databases_getScans",
  "description": "Request a specific scan with Database-specific data for Cloud Key Visualizer.",
  "parameters": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "Required. The unique name of the scan containing the requested information, specific to the Database service implementing this interface."
      },
      "endTime": {
        "type": "string",
        "description": "The upper bound for the time range to retrieve Scan data for."
      },
      "startTime": {
        "type": "string",
        "description": "These fields restrict the Database-specific information returned in the `Scan.data` field. If a `View` is provided that does not include the `Scan.data` field, these are ignored. This range of time must be entirely contained within the defined time range of the targeted scan. The lower bound for the time range to retrieve Scan data for."
      },
      "view": {
        "enum": [
          "VIEW_UNSPECIFIED",
          "SUMMARY",
          "FULL"
        ],
        "type": "string",
        "description": "Specifies which parts of the Scan should be returned in the response. Note, if left unspecified, the FULL view is assumed."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      }
    },
    "required": [
      "name"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://spanner.googleapis.com//v1/{name}/scans{?endTime,startTime,view,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Scan is a structure which describes Cloud Key Visualizer scan information.",
        "**Key properties:**",
        {
          "$ul": [
            "**details**: Additional information provided by the implementer.",
            "**endTime**: The upper bound for when the scan is defined.",
            "**name**: The unique name of the scan, specific to the Database service implementing this interface.",
            [
              "**scanData**: ScanData contains Cloud Key Visualizer scan data used by the caller to construct a visualization.",
              {
                "$ul": [
                  [
                    "**data**",
                    {
                      "$ul": [
                        "**dataSourceEndToken**: The token signifying the end of a data_source.",
                        "**dataSourceSeparatorToken**: The token delimiting a datasource name from the rest of a key in a data_source.",
                        "**diagnosticMessages**: The list of messages (info, alerts, ...)",
                        "**endKeyStrings**: We discretize the entire keyspace into buckets. Assuming each bucket has an inclusive keyrange and covers keys from k(i) ... k(n). In this case k(n) would be an end key for a given range. end_key_string is the collection of all such end keys",
                        "**hasPii**: Whether this scan contains PII.",
                        "**indexedKeys**: Keys of key ranges that contribute significantly to a given metric Can be thought of as heavy hitters.",
                        "**keySeparator**: The token delimiting the key prefixes.",
                        "**keyUnit**: The unit for the key: e.g. 'key' or 'chunk'.",
                        "**metrics**: The list of data objects for each metric.",
                        "**prefixNodes**: The list of extracted key prefix nodes used in the key prefix hierarchy."
                      ]
                    }
                  ],
                  "**endTime**: The upper bound for when the contained data is defined.",
                  "**startTime**: A range of time (inclusive) for when the contained data is defined. The lower bound for when the contained data is defined."
                ]
              }
            ],
            "**startTime**: A range of time (inclusive) for when the scan is defined. The lower bound for when the scan is defined."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
