{
  "name": "datamigration_projects_locations_connectionProfiles_create",
  "description": "Creates a new connection profile in a given project and location.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The parent, which owns this collection of connection profiles."
      },
      "connectionProfileId": {
        "type": "string",
        "description": "Required. The connection profile identifier."
      },
      "requestId": {
        "type": "string",
        "description": "A unique id used to identify the request. If the server receives two requests with the same id, then the second request will be ignored. It is recommended to always set this value to a UUID. The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/ConnectionProfile"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "ConnectionProfile": {
        "description": "A connection profile definition.",
        "properties": {
          "cloudsql": {
            "$ref": "#/$defs/CloudSqlConnectionProfile"
          },
          "createTime": {
            "description": "Output only. The timestamp when the resource was created. A timestamp in RFC3339 UTC \"Zulu\" format, accurate to nanoseconds. Example: \"2014-10-02T15:01:23.045123456Z\".",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "The connection profile display name.",
            "type": "string"
          },
          "error": {
            "$ref": "#/$defs/Status"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The resource labels for connection profile to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of \"key\": \"value\" pairs. Example: `{ \"name\": \"wrench\", \"mass\": \"1.3kg\", \"count\": \"3\" }`.",
            "type": "object"
          },
          "mysql": {
            "$ref": "#/$defs/MySqlConnectionProfile"
          },
          "name": {
            "description": "The name of this connection profile resource in the form of projects/{project}/locations/{location}/connectionProfiles/{connectionProfile}.",
            "type": "string"
          },
          "provider": {
            "description": "The database provider.",
            "enum": [
              "DATABASE_PROVIDER_UNSPECIFIED",
              "CLOUDSQL",
              "RDS"
            ],
            "type": "string"
          },
          "state": {
            "description": "The current connection profile state (e.g. DRAFT, READY, or FAILED).",
            "enum": [
              "STATE_UNSPECIFIED",
              "DRAFT",
              "CREATING",
              "READY",
              "UPDATING",
              "DELETING",
              "DELETED",
              "FAILED"
            ],
            "type": "string"
          },
          "updateTime": {
            "description": "Output only. The timestamp when the resource was last updated. A timestamp in RFC3339 UTC \"Zulu\" format, accurate to nanoseconds. Example: \"2014-10-02T15:01:23.045123456Z\".",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "CloudSqlConnectionProfile": {
        "description": "Specifies required connection parameters, and, optionally, the parameters required to create a Cloud SQL destination database instance.",
        "properties": {
          "cloudSqlId": {
            "description": "Output only. The Cloud SQL instance ID that this connection profile is associated with.",
            "readOnly": true,
            "type": "string"
          },
          "privateIp": {
            "description": "Output only. The Cloud SQL database instance's private IP.",
            "readOnly": true,
            "type": "string"
          },
          "publicIp": {
            "description": "Output only. The Cloud SQL database instance's public IP.",
            "readOnly": true,
            "type": "string"
          },
          "settings": {
            "$ref": "#/$defs/CloudSqlSettings"
          }
        },
        "type": "object"
      },
      "CloudSqlSettings": {
        "description": "Settings for creating a Cloud SQL database instance.",
        "properties": {
          "activationPolicy": {
            "description": "The activation policy specifies when the instance is activated; it is applicable only when the instance state is 'RUNNABLE'. Valid values: 'ALWAYS': The instance is on, and remains so even in the absence of connection requests. `NEVER`: The instance is off; it is not activated, even if a connection request arrives.",
            "enum": [
              "SQL_ACTIVATION_POLICY_UNSPECIFIED",
              "ALWAYS",
              "NEVER"
            ],
            "type": "string"
          },
          "autoStorageIncrease": {
            "description": "[default: ON] If you enable this setting, Cloud SQL checks your available storage every 30 seconds. If the available storage falls below a threshold size, Cloud SQL automatically adds additional storage capacity. If the available storage repeatedly falls below the threshold size, Cloud SQL continues to add storage until it reaches the maximum of 30 TB.",
            "type": "boolean"
          },
          "dataDiskSizeGb": {
            "description": "The storage capacity available to the database, in GB. The minimum (and default) size is 10GB.",
            "format": "int64",
            "type": "string"
          },
          "dataDiskType": {
            "description": "The type of storage: `PD_SSD` (default) or `PD_HDD`.",
            "enum": [
              "SQL_DATA_DISK_TYPE_UNSPECIFIED",
              "PD_SSD",
              "PD_HDD"
            ],
            "type": "string"
          },
          "databaseFlags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The database flags passed to the Cloud SQL instance at startup. An object containing a list of \"key\": value pairs. Example: { \"name\": \"wrench\", \"mass\": \"1.3kg\", \"count\": \"3\" }.",
            "type": "object"
          },
          "databaseVersion": {
            "description": "The database engine type and version.",
            "enum": [
              "SQL_DATABASE_VERSION_UNSPECIFIED",
              "MYSQL_5_6",
              "MYSQL_5_7",
              "MYSQL_8_0"
            ],
            "type": "string"
          },
          "ipConfig": {
            "$ref": "#/$defs/SqlIpConfig"
          },
          "rootPassword": {
            "description": "Input only. Initial root password.",
            "type": "string"
          },
          "rootPasswordSet": {
            "description": "Output only. Indicates If this connection profile root password is stored.",
            "readOnly": true,
            "type": "boolean"
          },
          "sourceId": {
            "description": "The Database Migration Service source connection profile ID, in the format: `projects/my_project_name/locations/us-central1/connectionProfiles/connection_profile_ID`",
            "type": "string"
          },
          "storageAutoResizeLimit": {
            "description": "The maximum size to which storage capacity can be automatically increased. The default value is 0, which specifies that there is no limit.",
            "format": "int64",
            "type": "string"
          },
          "tier": {
            "description": "The tier (or machine type) for this instance, for example: `db-n1-standard-1` (MySQL instances). For more information, see [Cloud SQL Instance Settings](https://cloud.google.com/sql/docs/mysql/instance-settings).",
            "type": "string"
          },
          "userLabels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The resource labels for a Cloud SQL instance to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of \"key\": \"value\" pairs. Example: `{ \"name\": \"wrench\", \"mass\": \"18kg\", \"count\": \"3\" }`.",
            "type": "object"
          },
          "zone": {
            "description": "The Google Cloud Platform zone where your Cloud SQL database instance is located.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SqlIpConfig": {
        "description": "IP Management configuration.",
        "properties": {
          "authorizedNetworks": {
            "description": "The list of external networks that are allowed to connect to the instance using the IP. See https://en.wikipedia.org/wiki/CIDR_notation#CIDR_notation, also known as 'slash' notation (e.g. `192.168.100.0/24`).",
            "items": {
              "$ref": "#/$defs/SqlAclEntry"
            },
            "type": "array"
          },
          "enableIpv4": {
            "description": "Whether the instance is assigned a public IP address or not.",
            "type": "boolean"
          },
          "privateNetwork": {
            "description": "The resource link for the VPC network from which the Cloud SQL instance is accessible for private IP. For example, `/projects/myProject/global/networks/default`. This setting can be updated, but it cannot be removed after it is set.",
            "type": "string"
          },
          "requireSsl": {
            "description": "Whether SSL connections over IP should be enforced or not.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "SqlAclEntry": {
        "description": "An entry for an Access Control list.",
        "properties": {
          "expireTime": {
            "description": "The time when this access control entry expires in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example: `2012-11-15T16:19:00.094Z`.",
            "format": "google-datetime",
            "type": "string"
          },
          "label": {
            "description": "A label to identify this entry.",
            "type": "string"
          },
          "ttl": {
            "description": "Input only. The time-to-leave of this access control entry.",
            "format": "google-duration",
            "type": "string"
          },
          "value": {
            "description": "The allowlisted value for the access control list.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Status": {
        "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
        "properties": {
          "code": {
            "description": "The status code, which should be an enum value of google.rpc.Code.",
            "format": "int32",
            "type": "integer"
          },
          "details": {
            "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
            "items": {
              "additionalProperties": {
                "description": "Properties of the object. Contains field @type with type URL."
              },
              "type": "object"
            },
            "type": "array"
          },
          "message": {
            "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MySqlConnectionProfile": {
        "description": "Specifies connection parameters required specifically for MySQL databases.",
        "properties": {
          "cloudSqlId": {
            "description": "If the source is a Cloud SQL database, use this field to provide the Cloud SQL instance ID of the source.",
            "type": "string"
          },
          "host": {
            "description": "Required. The IP or hostname of the source MySQL database.",
            "type": "string"
          },
          "password": {
            "description": "Required. Input only. The password for the user that Database Migration Service will be using to connect to the database. This field is not returned on request, and the value is encrypted when stored in Database Migration Service.",
            "type": "string"
          },
          "passwordSet": {
            "description": "Output only. Indicates If this connection profile password is stored.",
            "readOnly": true,
            "type": "boolean"
          },
          "port": {
            "description": "Required. The network port of the source MySQL database.",
            "format": "int32",
            "type": "integer"
          },
          "ssl": {
            "$ref": "#/$defs/SslConfig"
          },
          "username": {
            "description": "Required. The username that Database Migration Service will use to connect to the database. The value is encrypted when stored in Database Migration Service.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SslConfig": {
        "description": "SSL configuration information.",
        "properties": {
          "caCertificate": {
            "description": "Required. Input only. The x509 PEM-encoded certificate of the CA that signed the source database server's certificate. The replica will use this certificate to verify it's connecting to the right host.",
            "type": "string"
          },
          "clientCertificate": {
            "description": "Input only. The x509 PEM-encoded certificate that will be used by the replica to authenticate against the source database server.If this field is used then the 'client_key' field is mandatory.",
            "type": "string"
          },
          "clientKey": {
            "description": "Input only. The unencrypted PKCS#1 or PKCS#8 PEM-encoded private key associated with the Client Certificate. If this field is used then the 'client_certificate' field is mandatory.",
            "type": "string"
          },
          "type": {
            "description": "Output only. The ssl config type according to 'client_key', 'client_certificate' and 'ca_certificate'.",
            "enum": [
              "SSL_TYPE_UNSPECIFIED",
              "SERVER_ONLY",
              "SERVER_CLIENT"
            ],
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://datamigration.googleapis.com//v1beta1/{parent}/connectionProfiles{?connectionProfileId,requestId,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "This resource represents a long-running operation that is the result of a network API call.",
        "**Key properties:**",
        {
          "$ul": [
            "**done**: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
            [
              "**error**: The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
              {
                "$ul": [
                  "**code**: The status code, which should be an enum value of google.rpc.Code.",
                  "**details**: A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                  "**message**: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                ]
              }
            ],
            "**metadata**: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
            "**name**: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
            "**response**: The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
