{
  "name": "datamigration_projects_locations_conversionWorkspaces_describeDatabaseEntities",
  "description": "Describes the database entities tree for a specific conversion workspace and a specific tree type. Database entities are not resources like conversion workspaces or mapping rules, and they can't be created, updated or deleted. Instead, they are simple data objects describing the structure of the client database.",
  "parameters": {
    "type": "object",
    "properties": {
      "conversionWorkspace": {
        "type": "string",
        "description": "Required. Name of the conversion workspace resource whose database entities are described. Must be in the form of: projects/{project}/locations/{location}/conversionWorkspaces/{conversion_workspace}."
      },
      "commitId": {
        "type": "string",
        "description": "Optional. Request a specific commit ID. If not specified, the entities from the latest commit are returned."
      },
      "filter": {
        "type": "string",
        "description": "Optional. Filter the returned entities based on AIP-160 standard."
      },
      "pageSize": {
        "type": "integer",
        "description": "Optional. The maximum number of entities to return. The service may return fewer entities than the value specifies."
      },
      "pageToken": {
        "type": "string",
        "description": "Optional. The nextPageToken value received in the previous call to conversionWorkspace.describeDatabaseEntities, used in the subsequent request to retrieve the next page of results. On first call this should be left blank. When paginating, all other parameters provided to conversionWorkspace.describeDatabaseEntities must match the call that provided the page token."
      },
      "tree": {
        "enum": [
          "DB_TREE_TYPE_UNSPECIFIED",
          "SOURCE_TREE",
          "DRAFT_TREE",
          "DESTINATION_TREE"
        ],
        "type": "string",
        "description": "Required. The tree to fetch."
      },
      "uncommitted": {
        "type": "boolean",
        "description": "Optional. Whether to retrieve the latest committed version of the entities or the latest version. This field is ignored if a specific commit_id is specified."
      },
      "view": {
        "enum": [
          "DATABASE_ENTITY_VIEW_UNSPECIFIED",
          "DATABASE_ENTITY_VIEW_BASIC",
          "DATABASE_ENTITY_VIEW_FULL",
          "DATABASE_ENTITY_VIEW_ROOT_SUMMARY"
        ],
        "type": "string",
        "description": "Optional. Results view based on AIP-157"
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      }
    },
    "required": [
      "conversionWorkspace"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://datamigration.googleapis.com//v1/{conversionWorkspace}:describeDatabaseEntities{?commitId,filter,pageSize,pageToken,tree,uncommitted,view,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Response message for 'DescribeDatabaseEntities' request.",
        "**Key properties:**",
        {
          "$ul": [
            "**databaseEntities**: The list of database entities for the conversion workspace.",
            "**nextPageToken**: A token which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
