{
  "name": "datamigration_projects_locations_conversionWorkspaces_create",
  "description": "Creates a new conversion workspace in a given project and location.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The parent which owns this collection of conversion workspaces."
      },
      "conversionWorkspaceId": {
        "type": "string",
        "description": "Required. The ID of the conversion workspace to create."
      },
      "requestId": {
        "type": "string",
        "description": "A unique ID used to identify the request. If the server receives two requests with the same ID, then the second request is ignored. It is recommended to always set this value to a UUID. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/ConversionWorkspace"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "ConversionWorkspace": {
        "description": "The main conversion workspace resource entity.",
        "properties": {
          "createTime": {
            "description": "Output only. The timestamp when the workspace resource was created.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "destination": {
            "$ref": "#/$defs/DatabaseEngineInfo"
          },
          "displayName": {
            "description": "Optional. The display name for the workspace.",
            "type": "string"
          },
          "globalSettings": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Optional. A generic list of settings for the workspace. The settings are database pair dependant and can indicate default behavior for the mapping rules engine or turn on or off specific features. Such examples can be: convert_foreign_key_to_interleave=true, skip_triggers=false, ignore_non_table_synonyms=true",
            "type": "object"
          },
          "hasUncommittedChanges": {
            "description": "Output only. Whether the workspace has uncommitted changes (changes which were made after the workspace was committed).",
            "readOnly": true,
            "type": "boolean"
          },
          "latestCommitId": {
            "description": "Output only. The latest commit ID.",
            "readOnly": true,
            "type": "string"
          },
          "latestCommitTime": {
            "description": "Output only. The timestamp when the workspace was committed.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "Full name of the workspace resource, in the form of: projects/{project}/locations/{location}/conversionWorkspaces/{conversion_workspace}.",
            "type": "string"
          },
          "source": {
            "$ref": "#/$defs/DatabaseEngineInfo"
          },
          "updateTime": {
            "description": "Output only. The timestamp when the workspace resource was last updated.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "DatabaseEngineInfo": {
        "description": "The type and version of a source or destination database.",
        "properties": {
          "engine": {
            "description": "Required. Engine type.",
            "enum": [
              "DATABASE_ENGINE_UNSPECIFIED",
              "MYSQL",
              "POSTGRESQL",
              "ORACLE"
            ],
            "type": "string"
          },
          "version": {
            "description": "Required. Engine version, for example \"12.c.1\".",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://datamigration.googleapis.com//v1/{parent}/conversionWorkspaces{?conversionWorkspaceId,requestId,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "This resource represents a long-running operation that is the result of a network API call.",
        "**Key properties:**",
        {
          "$ul": [
            "**done**: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
            [
              "**error**: The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
              {
                "$ul": [
                  "**code**: The status code, which should be an enum value of google.rpc.Code.",
                  "**details**: A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                  "**message**: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                ]
              }
            ],
            "**metadata**: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
            "**name**: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
            "**response**: The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
