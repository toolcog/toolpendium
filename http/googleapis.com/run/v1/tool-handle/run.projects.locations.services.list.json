{
  "name": "run_projects_locations_services_list",
  "description": "Lists services for the given project and region.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The parent from where the resources should be listed. In Cloud Run, it may be one of the following: * `{project_id_or_number}` * `namespaces/{project_id_or_number}` * `namespaces/{project_id_or_number}/services` * `projects/{project_id_or_number}/locations/{region}` * `projects/{project_id_or_number}/regions/{region}`"
      },
      "continue": {
        "type": "string",
        "description": "Encoded string to continue paging."
      },
      "fieldSelector": {
        "type": "string",
        "description": "Not supported, and ignored by Cloud Run."
      },
      "includeUninitialized": {
        "type": "boolean",
        "description": "Not supported, and ignored by Cloud Run."
      },
      "labelSelector": {
        "type": "string",
        "description": "Allows to filter resources based on a label. Supported operations are =, !=, exists, in, and notIn."
      },
      "limit": {
        "type": "integer",
        "description": "The maximum number of records that should be returned."
      },
      "resourceVersion": {
        "type": "string",
        "description": "Not supported, and ignored by Cloud Run."
      },
      "watch": {
        "type": "boolean",
        "description": "Not supported, and ignored by Cloud Run."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      }
    },
    "required": [
      "parent"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://run.googleapis.com//v1/{parent}/services{?continue,fieldSelector,includeUninitialized,labelSelector,limit,resourceVersion,watch,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A list of Service resources.",
        "**Key properties:**",
        {
          "$ul": [
            "**apiVersion**: The API version for this call; returns \"serving.knative.dev/v1\".",
            "**items**: List of Services.",
            "**kind**: The kind of this resource; returns \"ServiceList\".",
            [
              "**metadata**: Metadata for synthetic resources like List. In Cloud Run, all List Resources Responses will have a ListMeta instead of ObjectMeta.",
              {
                "$ul": [
                  "**continue**: Continuation token is a value emitted when the count of items is larger than the user/system limit. To retrieve the next page of items, pass the value of `continue` as the next request's `page_token`.",
                  "**resourceVersion**: Opaque string that identifies the server's internal version of this object. It can be used by clients to determine when objects have changed. If the message is passed back to the server, it must be left unmodified.",
                  "**selfLink**: URL representing this object."
                ]
              }
            ],
            "**unreachable**: For calls against the global endpoint, returns the list of Cloud locations that could not be reached. For regional calls, this field is not used."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
