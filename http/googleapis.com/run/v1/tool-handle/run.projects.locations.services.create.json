{
  "name": "run_projects_locations_services_create",
  "description": "Creates a new Service. Service creation will trigger a new deployment. Use GetService, and check service.status to determine if the Service is ready.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The resource's parent. In Cloud Run, it may be one of the following: * `{project_id_or_number}` * `namespaces/{project_id_or_number}` * `namespaces/{project_id_or_number}/services` * `projects/{project_id_or_number}/locations/{region}` * `projects/{project_id_or_number}/regions/{region}`"
      },
      "dryRun": {
        "type": "string",
        "description": "Indicates that the server should validate the request and populate default values without persisting the request. Supported values: `all`"
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/Service"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "Service": {
        "description": "Service acts as a top-level container that manages a set of Routes and Configurations which implement a network service. Service exists to provide a singular abstraction which can be access controlled, reasoned about, and which encapsulates software lifecycle decisions such as rollout policy and team resource ownership. Service acts only as an orchestrator of the underlying Routes and Configurations (much as a kubernetes Deployment orchestrates ReplicaSets). The Service's controller will track the statuses of its owned Configuration and Route, reflecting their statuses and conditions as its own.",
        "properties": {
          "apiVersion": {
            "description": "The API version for this call. It must be \"serving.knative.dev/v1\".",
            "type": "string"
          },
          "kind": {
            "description": "The kind of resource. It must be \"Service\".",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/$defs/ObjectMeta"
          },
          "spec": {
            "$ref": "#/$defs/ServiceSpec"
          },
          "status": {
            "$ref": "#/$defs/ServiceStatus"
          }
        },
        "type": "object"
      },
      "ObjectMeta": {
        "description": "google.cloud.run.meta.v1.ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. In Cloud Run, annotations with 'run.googleapis.com/' and 'autoscaling.knative.dev' are restricted, and the accepted annotations will be different depending on the resource type. * `autoscaling.knative.dev/maxScale`: Revision. * `autoscaling.knative.dev/minScale`: Revision. * `run.googleapis.com/binary-authorization-breakglass`: Service, Job, * `run.googleapis.com/binary-authorization`: Service, Job, Execution. * `run.googleapis.com/client-name`: All resources. * `run.googleapis.com/cloudsql-instances`: Revision, Execution. * `run.googleapis.com/container-dependencies`: Revision . * `run.googleapis.com/cpu-throttling`: Revision. * `run.googleapis.com/custom-audiences`: Service. * `run.googleapis.com/default-url-disabled`: Service. * `run.googleapis.com/description`: Service. * `run.googleapis.com/encryption-key-shutdown-hours`: Revision * `run.googleapis.com/encryption-key`: Revision, Execution. * `run.googleapis.com/execution-environment`: Revision, Execution. * `run.googleapis.com/gc-traffic-tags`: Service. * `run.googleapis.com/ingress`: Service. * `run.googleapis.com/launch-stage`: Service, Job. * `run.googleapis.com/minScale`: Service (ALPHA) * `run.googleapis.com/network-interfaces`: Revision, Execution. * `run.googleapis.com/post-key-revocation-action-type`: Revision. * `run.googleapis.com/secrets`: Revision, Execution. * `run.googleapis.com/secure-session-agent`: Revision. * `run.googleapis.com/sessionAffinity`: Revision. * `run.googleapis.com/startup-cpu-boost`: Revision. * `run.googleapis.com/vpc-access-connector`: Revision, Execution. * `run.googleapis.com/vpc-access-egress`: Revision, Execution.",
            "type": "object"
          },
          "clusterName": {
            "description": "Not supported by Cloud Run",
            "type": "string"
          },
          "creationTimestamp": {
            "description": "UTC timestamp representing the server time when this object was created.",
            "format": "google-datetime",
            "type": "string"
          },
          "deletionGracePeriodSeconds": {
            "description": "Not supported by Cloud Run",
            "format": "int32",
            "type": "integer"
          },
          "deletionTimestamp": {
            "description": "The read-only soft deletion timestamp for this resource. In Cloud Run, users are not able to set this field. Instead, they must call the corresponding Delete API.",
            "format": "google-datetime",
            "type": "string"
          },
          "finalizers": {
            "description": "Not supported by Cloud Run",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "generateName": {
            "description": "Not supported by Cloud Run",
            "type": "string"
          },
          "generation": {
            "description": "A system-provided sequence number representing a specific generation of the desired state.",
            "format": "int32",
            "type": "integer"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and routes.",
            "type": "object"
          },
          "name": {
            "description": "Required. The name of the resource. Name is required when creating top-level resources (Service, Job), must be unique within a Cloud Run project/region, and cannot be changed once created.",
            "type": "string"
          },
          "namespace": {
            "description": "Required. Defines the space within each name must be unique within a Cloud Run region. In Cloud Run, it must be project ID or number.",
            "type": "string"
          },
          "ownerReferences": {
            "description": "Not supported by Cloud Run",
            "items": {
              "$ref": "#/$defs/OwnerReference"
            },
            "type": "array"
          },
          "resourceVersion": {
            "description": "Opaque, system-generated value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server or omit the value to disable conflict-detection.",
            "type": "string"
          },
          "selfLink": {
            "description": "URL representing this object.",
            "type": "string"
          },
          "uid": {
            "description": "Unique, system-generated identifier for this resource.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OwnerReference": {
        "description": "This is not supported or used by Cloud Run.",
        "properties": {
          "apiVersion": {
            "description": "This is not supported or used by Cloud Run.",
            "type": "string"
          },
          "blockOwnerDeletion": {
            "description": "This is not supported or used by Cloud Run.",
            "type": "boolean"
          },
          "controller": {
            "description": "This is not supported or used by Cloud Run.",
            "type": "boolean"
          },
          "kind": {
            "description": "This is not supported or used by Cloud Run.",
            "type": "string"
          },
          "name": {
            "description": "This is not supported or used by Cloud Run.",
            "type": "string"
          },
          "uid": {
            "description": "This is not supported or used by Cloud Run.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServiceSpec": {
        "description": "ServiceSpec holds the desired state of the Route (from the client), which is used to manipulate the underlying Route and Configuration(s).",
        "properties": {
          "template": {
            "$ref": "#/$defs/RevisionTemplate"
          },
          "traffic": {
            "description": "Specifies how to distribute traffic over a collection of Knative Revisions and Configurations to the Service's main URL.",
            "items": {
              "$ref": "#/$defs/TrafficTarget"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "RevisionTemplate": {
        "description": "RevisionTemplateSpec describes the data a revision should have when created from a template.",
        "properties": {
          "metadata": {
            "$ref": "#/$defs/ObjectMeta"
          },
          "spec": {
            "$ref": "#/$defs/RevisionSpec"
          }
        },
        "type": "object"
      },
      "RevisionSpec": {
        "description": "RevisionSpec holds the desired state of the Revision (from the client).",
        "properties": {
          "containerConcurrency": {
            "description": "ContainerConcurrency specifies the maximum allowed in-flight (concurrent) requests per container instance of the Revision. If not specified, defaults to 80.",
            "format": "int32",
            "type": "integer"
          },
          "containers": {
            "description": "Required. Containers holds the single container that defines the unit of execution for this Revision. In the context of a Revision, we disallow a number of fields on this Container, including: name and lifecycle. In Cloud Run, only a single container may be provided.",
            "items": {
              "$ref": "#/$defs/Container"
            },
            "type": "array"
          },
          "enableServiceLinks": {
            "description": "Not supported by Cloud Run.",
            "type": "boolean"
          },
          "imagePullSecrets": {
            "description": "Not supported by Cloud Run.",
            "items": {
              "$ref": "#/$defs/LocalObjectReference"
            },
            "type": "array"
          },
          "serviceAccountName": {
            "description": "Email address of the IAM service account associated with the revision of the service. The service account represents the identity of the running revision, and determines what permissions the revision has. If not provided, the revision will use the project's default service account.",
            "type": "string"
          },
          "timeoutSeconds": {
            "description": "TimeoutSeconds holds the max duration the instance is allowed for responding to a request. Cloud Run: defaults to 300 seconds (5 minutes). Maximum allowed value is 3600 seconds (1 hour).",
            "format": "int32",
            "type": "integer"
          },
          "volumes": {
            "items": {
              "$ref": "#/$defs/Volume"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Container": {
        "description": "A single application container. This specifies both the container to run, the command to run in the container and the arguments to supply to it. Note that additional arguments may be supplied by the system to the container at runtime.",
        "properties": {
          "args": {
            "description": "Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references are not supported in Cloud Run.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "command": {
            "description": "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references are not supported in Cloud Run.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "env": {
            "description": "List of environment variables to set in the container. EnvVar with duplicate names are generally allowed; if referencing a secret, the name must be unique for the container. For non-secret EnvVar names, the Container will only get the last-declared one.",
            "items": {
              "$ref": "#/$defs/EnvVar"
            },
            "type": "array"
          },
          "envFrom": {
            "description": "Not supported by Cloud Run.",
            "items": {
              "$ref": "#/$defs/EnvFromSource"
            },
            "type": "array"
          },
          "image": {
            "description": "Required. Name of the container image in Dockerhub, Google Artifact Registry, or Google Container Registry. If the host is not provided, Dockerhub is assumed.",
            "type": "string"
          },
          "imagePullPolicy": {
            "description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.",
            "type": "string"
          },
          "livenessProbe": {
            "$ref": "#/$defs/Probe"
          },
          "name": {
            "description": "Name of the container specified as a DNS_LABEL (RFC 1123).",
            "type": "string"
          },
          "ports": {
            "description": "List of ports to expose from the container. Only a single port can be specified. The specified ports must be listening on all interfaces (0.0.0.0) within the container to be accessible. If omitted, a port number will be chosen and passed to the container through the PORT environment variable for the container to listen on.",
            "items": {
              "$ref": "#/$defs/ContainerPort"
            },
            "type": "array"
          },
          "readinessProbe": {
            "$ref": "#/$defs/Probe"
          },
          "resources": {
            "$ref": "#/$defs/ResourceRequirements"
          },
          "securityContext": {
            "$ref": "#/$defs/SecurityContext"
          },
          "startupProbe": {
            "$ref": "#/$defs/Probe"
          },
          "terminationMessagePath": {
            "description": "Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log.",
            "type": "string"
          },
          "terminationMessagePolicy": {
            "description": "Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.",
            "type": "string"
          },
          "volumeMounts": {
            "description": "Volume to mount into the container's filesystem. Only supports SecretVolumeSources. Pod volumes to mount into the container's filesystem.",
            "items": {
              "$ref": "#/$defs/VolumeMount"
            },
            "type": "array"
          },
          "workingDir": {
            "description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EnvVar": {
        "description": "EnvVar represents an environment variable present in a Container.",
        "properties": {
          "name": {
            "description": "Required. Name of the environment variable.",
            "type": "string"
          },
          "value": {
            "description": "Value of the environment variable. Defaults to \"\". Variable references are not supported in Cloud Run.",
            "type": "string"
          },
          "valueFrom": {
            "$ref": "#/$defs/EnvVarSource"
          }
        },
        "type": "object"
      },
      "EnvVarSource": {
        "description": "EnvVarSource represents a source for the value of an EnvVar.",
        "properties": {
          "configMapKeyRef": {
            "$ref": "#/$defs/ConfigMapKeySelector"
          },
          "secretKeyRef": {
            "$ref": "#/$defs/SecretKeySelector"
          }
        },
        "type": "object"
      },
      "ConfigMapKeySelector": {
        "description": "Not supported by Cloud Run.",
        "properties": {
          "key": {
            "description": "Required. Not supported by Cloud Run.",
            "type": "string"
          },
          "localObjectReference": {
            "$ref": "#/$defs/LocalObjectReference"
          },
          "name": {
            "description": "Required. Not supported by Cloud Run.",
            "type": "string"
          },
          "optional": {
            "description": "Not supported by Cloud Run.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "LocalObjectReference": {
        "description": "Not supported by Cloud Run. LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.",
        "properties": {
          "name": {
            "description": "Name of the referent.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SecretKeySelector": {
        "description": "SecretKeySelector selects a key of a Secret.",
        "properties": {
          "key": {
            "description": "Required. A Cloud Secret Manager secret version. Must be 'latest' for the latest version, an integer for a specific version, or a version alias. The key of the secret to select from. Must be a valid secret key.",
            "type": "string"
          },
          "localObjectReference": {
            "$ref": "#/$defs/LocalObjectReference"
          },
          "name": {
            "description": "The name of the secret in Cloud Secret Manager. By default, the secret is assumed to be in the same project. If the secret is in another project, you must define an alias. An alias definition has the form: :projects//secrets/. If multiple alias definitions are needed, they must be separated by commas. The alias definitions must be set on the run.googleapis.com/secrets annotation. The name of the secret in the pod's namespace to select from.",
            "type": "string"
          },
          "optional": {
            "description": "Specify whether the Secret or its key must be defined.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "EnvFromSource": {
        "description": "Not supported by Cloud Run. EnvFromSource represents the source of a set of ConfigMaps",
        "properties": {
          "configMapRef": {
            "$ref": "#/$defs/ConfigMapEnvSource"
          },
          "prefix": {
            "description": "An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.",
            "type": "string"
          },
          "secretRef": {
            "$ref": "#/$defs/SecretEnvSource"
          }
        },
        "type": "object"
      },
      "ConfigMapEnvSource": {
        "description": "Not supported by Cloud Run. ConfigMapEnvSource selects a ConfigMap to populate the environment variables with. The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.",
        "properties": {
          "localObjectReference": {
            "$ref": "#/$defs/LocalObjectReference"
          },
          "name": {
            "description": "The ConfigMap to select from.",
            "type": "string"
          },
          "optional": {
            "description": "Specify whether the ConfigMap must be defined.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "SecretEnvSource": {
        "description": "Not supported by Cloud Run. SecretEnvSource selects a Secret to populate the environment variables with. The contents of the target Secret's Data field will represent the key-value pairs as environment variables.",
        "properties": {
          "localObjectReference": {
            "$ref": "#/$defs/LocalObjectReference"
          },
          "name": {
            "description": "The Secret to select from.",
            "type": "string"
          },
          "optional": {
            "description": "Specify whether the Secret must be defined",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "Probe": {
        "description": "Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.",
        "properties": {
          "exec": {
            "$ref": "#/$defs/ExecAction"
          },
          "failureThreshold": {
            "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
            "format": "int32",
            "type": "integer"
          },
          "grpc": {
            "$ref": "#/$defs/GRPCAction"
          },
          "httpGet": {
            "$ref": "#/$defs/HTTPGetAction"
          },
          "initialDelaySeconds": {
            "description": "Number of seconds after the container has started before the probe is initiated. Defaults to 0 seconds. Minimum value is 0. Maximum value for liveness probe is 3600. Maximum value for startup probe is 240.",
            "format": "int32",
            "type": "integer"
          },
          "periodSeconds": {
            "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value for liveness probe is 3600. Maximum value for startup probe is 240. Must be greater or equal than timeout_seconds.",
            "format": "int32",
            "type": "integer"
          },
          "successThreshold": {
            "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 if set.",
            "format": "int32",
            "type": "integer"
          },
          "tcpSocket": {
            "$ref": "#/$defs/TCPSocketAction"
          },
          "timeoutSeconds": {
            "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 3600. Must be smaller than period_seconds; if period_seconds is not set, must be less or equal than 10.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ExecAction": {
        "description": "Not supported by Cloud Run. ExecAction describes a \"run in container\" action.",
        "properties": {
          "command": {
            "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GRPCAction": {
        "description": "GRPCAction describes an action involving a GRPC port.",
        "properties": {
          "port": {
            "description": "Port number of the gRPC service. Number must be in the range 1 to 65535.",
            "format": "int32",
            "type": "integer"
          },
          "service": {
            "description": "Service is the name of the service to place in the gRPC HealthCheckRequest. If this is not specified, the default behavior is defined by gRPC.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "HTTPGetAction": {
        "description": "HTTPGetAction describes an action based on HTTP Get requests.",
        "properties": {
          "host": {
            "description": "Not supported by Cloud Run.",
            "type": "string"
          },
          "httpHeaders": {
            "description": "Custom headers to set in the request. HTTP allows repeated headers.",
            "items": {
              "$ref": "#/$defs/HTTPHeader"
            },
            "type": "array"
          },
          "path": {
            "description": "Path to access on the HTTP server.",
            "type": "string"
          },
          "port": {
            "description": "Port number to access on the container. Number must be in the range 1 to 65535.",
            "format": "int32",
            "type": "integer"
          },
          "scheme": {
            "description": "Not supported by Cloud Run.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "HTTPHeader": {
        "description": "HTTPHeader describes a custom header to be used in HTTP probes",
        "properties": {
          "name": {
            "description": "Required. The header field name",
            "type": "string"
          },
          "value": {
            "description": "The header field value",
            "type": "string"
          }
        },
        "type": "object"
      },
      "TCPSocketAction": {
        "description": "TCPSocketAction describes an action based on opening a socket",
        "properties": {
          "host": {
            "description": "Not supported by Cloud Run.",
            "type": "string"
          },
          "port": {
            "description": "Port number to access on the container. Number must be in the range 1 to 65535.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ContainerPort": {
        "description": "ContainerPort represents a network port in a single container.",
        "properties": {
          "containerPort": {
            "description": "Port number the container listens on. If present, this must be a valid port number, 0 < x < 65536. If not present, it will default to port 8080. For more information, see https://cloud.google.com/run/docs/container-contract#port",
            "format": "int32",
            "type": "integer"
          },
          "name": {
            "description": "If specified, used to specify which protocol to use. Allowed values are \"http1\" and \"h2c\".",
            "type": "string"
          },
          "protocol": {
            "description": "Protocol for port. Must be \"TCP\". Defaults to \"TCP\".",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResourceRequirements": {
        "description": "ResourceRequirements describes the compute resource requirements.",
        "properties": {
          "limits": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Limits describes the maximum amount of compute resources allowed. Only 'cpu' and 'memory' keys are supported. * For supported 'cpu' values, go to https://cloud.google.com/run/docs/configuring/cpu. * For supported 'memory' values and syntax, go to https://cloud.google.com/run/docs/configuring/memory-limits",
            "type": "object"
          },
          "requests": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Requests describes the minimum amount of compute resources required. Only `cpu` and `memory` are supported. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. * For supported 'cpu' values, go to https://cloud.google.com/run/docs/configuring/cpu. * For supported 'memory' values and syntax, go to https://cloud.google.com/run/docs/configuring/memory-limits",
            "type": "object"
          }
        },
        "type": "object"
      },
      "SecurityContext": {
        "description": "Not supported by Cloud Run. SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext. When both are set, the values in SecurityContext take precedence.",
        "properties": {
          "runAsUser": {
            "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "VolumeMount": {
        "description": "VolumeMount describes a mounting of a Volume within a container.",
        "properties": {
          "mountPath": {
            "description": "Required. Path within the container at which the volume should be mounted. Must not contain ':'.",
            "type": "string"
          },
          "name": {
            "description": "Required. The name of the volume. There must be a corresponding Volume with the same name.",
            "type": "string"
          },
          "readOnly": {
            "description": "Sets the mount to be read-only or read-write. Not used by Cloud Run.",
            "type": "boolean"
          },
          "subPath": {
            "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Volume": {
        "description": "Volume represents a named volume in a container.",
        "properties": {
          "configMap": {
            "$ref": "#/$defs/ConfigMapVolumeSource"
          },
          "csi": {
            "$ref": "#/$defs/CSIVolumeSource"
          },
          "emptyDir": {
            "$ref": "#/$defs/EmptyDirVolumeSource"
          },
          "name": {
            "description": "Volume's name. In Cloud Run Fully Managed, the name 'cloudsql' is reserved.",
            "type": "string"
          },
          "nfs": {
            "$ref": "#/$defs/NFSVolumeSource"
          },
          "secret": {
            "$ref": "#/$defs/SecretVolumeSource"
          }
        },
        "type": "object"
      },
      "ConfigMapVolumeSource": {
        "description": "Not supported by Cloud Run. Adapts a ConfigMap into a volume. The contents of the target ConfigMap's Data field will be presented in a volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths.",
        "properties": {
          "defaultMode": {
            "description": "(Optional) Integer representation of mode bits to use on created files by default. Must be a value between 01 and 0777 (octal). If 0 or not set, it will default to 0644. Directories within the path are not affected by this setting. Notes * Internally, a umask of 0222 will be applied to any non-zero value. * This is an integer representation of the mode bits. So, the octal integer value should look exactly as the chmod numeric notation with a leading zero. Some examples: for chmod 777 (a=rwx), set to 0777 (octal) or 511 (base-10). For chmod 640 (u=rw,g=r), set to 0640 (octal) or 416 (base-10). For chmod 755 (u=rwx,g=rx,o=rx), set to 0755 (octal) or 493 (base-10). * This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "format": "int32",
            "type": "integer"
          },
          "items": {
            "description": "(Optional) If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified that is not present in the Secret, the volume setup will error unless it is marked optional.",
            "items": {
              "$ref": "#/$defs/KeyToPath"
            },
            "type": "array"
          },
          "name": {
            "description": "Name of the config.",
            "type": "string"
          },
          "optional": {
            "description": "(Optional) Specify whether the Secret or its keys must be defined.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "KeyToPath": {
        "description": "Maps a string key to a path within a volume.",
        "properties": {
          "key": {
            "description": "The Cloud Secret Manager secret version. Can be 'latest' for the latest value, or an integer or a secret alias for a specific version. The key to project.",
            "type": "string"
          },
          "mode": {
            "description": "(Optional) Mode bits to use on this file, must be a value between 01 and 0777 (octal). If 0 or not set, the Volume's default mode will be used. Notes * Internally, a umask of 0222 will be applied to any non-zero value. * This is an integer representation of the mode bits. So, the octal integer value should look exactly as the chmod numeric notation with a leading zero. Some examples: for chmod 777 (a=rwx), set to 0777 (octal) or 511 (base-10). For chmod 640 (u=rw,g=r), set to 0640 (octal) or 416 (base-10). For chmod 755 (u=rwx,g=rx,o=rx), set to 0755 (octal) or 493 (base-10). * This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "format": "int32",
            "type": "integer"
          },
          "path": {
            "description": "The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CSIVolumeSource": {
        "description": "Storage volume source using the Container Storage Interface.",
        "properties": {
          "driver": {
            "description": "name of the CSI driver for the requested storage system. Cloud Run supports the following drivers: * gcsfuse.run.googleapis.com : Mount a Cloud Storage Bucket as a volume.",
            "type": "string"
          },
          "readOnly": {
            "description": "If true, mount the volume as read only. Defaults to false.",
            "type": "boolean"
          },
          "volumeAttributes": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "stores driver specific attributes. For Google Cloud Storage volumes, the following attributes are supported: * bucketName: the name of the Cloud Storage bucket to mount. The Cloud Run Service identity must have access to this bucket.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "EmptyDirVolumeSource": {
        "description": "In memory (tmpfs) ephemeral storage. It is ephemeral in the sense that when the sandbox is taken down, the data is destroyed with it (it does not persist across sandbox runs).",
        "properties": {
          "medium": {
            "description": "The medium on which the data is stored. The default is \"\" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
            "type": "string"
          },
          "sizeLimit": {
            "description": "Limit on the storage usable by this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers. The default is nil which means that the limit is undefined. More info: https://cloud.google.com/run/docs/configuring/in-memory-volumes#configure-volume. Info in Kubernetes: https://kubernetes.io/docs/concepts/storage/volumes/#emptydir",
            "type": "string"
          }
        },
        "type": "object"
      },
      "NFSVolumeSource": {
        "description": "Represents a persistent volume that will be mounted using NFS. This volume will be shared between all instances of the Service and data will not be deleted when the instance is shut down.",
        "properties": {
          "path": {
            "description": "Path that is exported by the NFS server.",
            "type": "string"
          },
          "readOnly": {
            "description": "If true, mount the NFS volume as read only. Defaults to false.",
            "type": "boolean"
          },
          "server": {
            "description": "Hostname or IP address of the NFS server.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SecretVolumeSource": {
        "description": "A volume representing a secret stored in Google Secret Manager. The secret's value will be presented as the content of a file whose name is defined in the item path. If no items are defined, the name of the file is the secret_name. The contents of the target Secret's Data field will be presented in a volume as files using the keys in the Data field as the file names.",
        "properties": {
          "defaultMode": {
            "description": "Integer representation of mode bits to use on created files by default. Must be a value between 01 and 0777 (octal). If 0 or not set, it will default to 0444. Directories within the path are not affected by this setting. Notes * Internally, a umask of 0222 will be applied to any non-zero value. * This is an integer representation of the mode bits. So, the octal integer value should look exactly as the chmod numeric notation with a leading zero. Some examples: for chmod 777 (a=rwx), set to 0777 (octal) or 511 (base-10). For chmod 640 (u=rw,g=r), set to 0640 (octal) or 416 (base-10). For chmod 755 (u=rwx,g=rx,o=rx), set to 0755 (octal) or 493 (base-10). * This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "format": "int32",
            "type": "integer"
          },
          "items": {
            "description": "A list of secret versions to mount in the volume. If no items are specified, the volume will expose a file with the same name as the secret name. The contents of the file will be the data in the latest version of the secret. If items are specified, the key will be used as the version to fetch from Cloud Secret Manager and the path will be the name of the file exposed in the volume. When items are defined, they must specify both a key and a path.",
            "items": {
              "$ref": "#/$defs/KeyToPath"
            },
            "type": "array"
          },
          "optional": {
            "description": "Not supported by Cloud Run.",
            "type": "boolean"
          },
          "secretName": {
            "description": "The name of the secret in Cloud Secret Manager. By default, the secret is assumed to be in the same project. If the secret is in another project, you must define an alias. An alias definition has the form: :projects//secrets/. If multiple alias definitions are needed, they must be separated by commas. The alias definitions must be set on the run.googleapis.com/secrets annotation. Name of the secret in the container's namespace to use.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "TrafficTarget": {
        "description": "TrafficTarget holds a single entry of the routing table for a Route.",
        "properties": {
          "configurationName": {
            "deprecated": true,
            "description": "[Deprecated] Not supported in Cloud Run. It must be empty.",
            "type": "string"
          },
          "latestRevision": {
            "description": "Uses the \"status.latestReadyRevisionName\" of the Service to determine the traffic target. When it changes, traffic will automatically migrate from the prior \"latest ready\" revision to the new one. This field must be false if RevisionName is set. This field defaults to true otherwise. If the field is set to true on Status, this means that the Revision was resolved from the Service's latest ready revision.",
            "type": "boolean"
          },
          "percent": {
            "description": "Percent specifies percent of the traffic to this Revision or Configuration. This defaults to zero if unspecified.",
            "format": "int32",
            "type": "integer"
          },
          "revisionName": {
            "description": "Points this traffic target to a specific Revision. This field is mutually exclusive with latest_revision.",
            "type": "string"
          },
          "tag": {
            "description": "Tag is used to expose a dedicated url for referencing this target exclusively.",
            "type": "string"
          },
          "url": {
            "description": "Output only. URL displays the URL for accessing tagged traffic targets. URL is displayed in status, and is disallowed on spec. URL must contain a scheme (e.g. https://) and a hostname, but may not contain anything else (e.g. basic auth, url path, etc.)",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServiceStatus": {
        "description": "The current state of the Service. Output only.",
        "properties": {
          "address": {
            "$ref": "#/$defs/Addressable"
          },
          "conditions": {
            "description": "Conditions communicate information about ongoing/complete reconciliation processes that bring the `spec` inline with the observed state of the world. Service-specific conditions include: * `ConfigurationsReady`: `True` when the underlying Configuration is ready. * `RoutesReady`: `True` when the underlying Route is ready. * `Ready`: `True` when all underlying resources are ready.",
            "items": {
              "$ref": "#/$defs/GoogleCloudRunV1Condition"
            },
            "type": "array"
          },
          "latestCreatedRevisionName": {
            "description": "Name of the last revision that was created from this Service's Configuration. It might not be ready yet, for that use LatestReadyRevisionName.",
            "type": "string"
          },
          "latestReadyRevisionName": {
            "description": "Name of the latest Revision from this Service's Configuration that has had its `Ready` condition become `True`.",
            "type": "string"
          },
          "observedGeneration": {
            "description": "Returns the generation last seen by the system. Clients polling for completed reconciliation should poll until observedGeneration = metadata.generation and the Ready condition's status is True or False.",
            "format": "int32",
            "type": "integer"
          },
          "traffic": {
            "description": "Holds the configured traffic distribution. These entries will always contain RevisionName references. When ConfigurationName appears in the spec, this will hold the LatestReadyRevisionName that we last observed.",
            "items": {
              "$ref": "#/$defs/TrafficTarget"
            },
            "type": "array"
          },
          "url": {
            "description": "URL that will distribute traffic over the provided traffic targets. It generally has the form `https://{route-hash}-{project-hash}-{cluster-level-suffix}.a.run.app`",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Addressable": {
        "description": "Information for connecting over HTTP(s).",
        "properties": {
          "url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudRunV1Condition": {
        "description": "Conditions show the status of reconciliation progress on a given resource. Most resource use a top-level condition type \"Ready\" or \"Completed\" to show overall status with other conditions to checkpoint each stage of reconciliation. Note that if metadata.Generation does not equal status.ObservedGeneration, the conditions shown may not be relevant for the current spec.",
        "properties": {
          "lastTransitionTime": {
            "description": "Optional. Last time the condition transitioned from one status to another.",
            "format": "google-datetime",
            "type": "string"
          },
          "message": {
            "description": "Optional. Human readable message indicating details about the current status.",
            "type": "string"
          },
          "reason": {
            "description": "Optional. One-word CamelCase reason for the condition's last transition. These are intended to be stable, unique values which the client may use to trigger error handling logic, whereas messages which may be changed later by the server.",
            "type": "string"
          },
          "severity": {
            "description": "Optional. How to interpret this condition. One of Error, Warning, or Info. Conditions of severity Info do not contribute to resource readiness.",
            "type": "string"
          },
          "status": {
            "description": "Status of the condition, one of True, False, Unknown.",
            "type": "string"
          },
          "type": {
            "description": "type is used to communicate the status of the reconciliation process. Types common to all resources include: * \"Ready\" or \"Completed\": True when the Resource is ready.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://run.googleapis.com//v1/{parent}/services{?dryRun,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Service acts as a top-level container that manages a set of Routes and Configurations which implement a network service. Service exists to provide a singular abstraction which can be access controlled, reasoned about, and which encapsulates software lifecycle decisions such as rollout policy and team resource ownership. Service acts only as an orchestrator of the underlying Routes and Configurations (much as a kubernetes Deployment orchestrates ReplicaSets). The Service's controller will track the statuses of its owned Configuration and Route, reflecting their statuses and conditions as its own.",
        "**Key properties:**",
        {
          "$ul": [
            "**apiVersion**: The API version for this call. It must be \"serving.knative.dev/v1\".",
            "**kind**: The kind of resource. It must be \"Service\".",
            [
              "**metadata**: google.cloud.run.meta.v1.ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
              {
                "$ul": [
                  "**annotations**: Unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. In Cloud Run, annotations with 'run.googleapis.com/' and 'autoscaling.knative.dev' are restricted, and the accepted annotations will be different depending on the resource type. * `autoscaling.knative.dev/maxScale`: Revision. * `autoscaling.knative.dev/minScale`: Revision. * `run.googleapis.com/binary-authorization-breakglass`: Service, Job, * `run.googleapis.com/binary-authorization`: Service, Job, Execution. * `run.googleapis.com/client-name`: All resources. * `run.googleapis.com/cloudsql-instances`: Revision, Execution. * `run.googleapis.com/container-dependencies`: Revision . * `run.googleapis.com/cpu-throttling`: Revision. * `run.googleapis.com/custom-audiences`: Service. * `run.googleapis.com/default-url-disabled`: Service. * `run.googleapis.com/description`: Service. * `run.googleapis.com/encryption-key-shutdown-hours`: Revision * `run.googleapis.com/encryption-key`: Revision, Execution. * `run.googleapis.com/execution-environment`: Revision, Execution. * `run.googleapis.com/gc-traffic-tags`: Service. * `run.googleapis.com/ingress`: Service. * `run.googleapis.com/launch-stage`: Service, Job. * `run.googleapis.com/minScale`: Service (ALPHA) * `run.googleapis.com/network-interfaces`: Revision, Execution. * `run.googleapis.com/post-key-revocation-action-type`: Revision. * `run.googleapis.com/secrets`: Revision, Execution. * `run.googleapis.com/secure-session-agent`: Revision. * `run.googleapis.com/sessionAffinity`: Revision. * `run.googleapis.com/startup-cpu-boost`: Revision. * `run.googleapis.com/vpc-access-connector`: Revision, Execution. * `run.googleapis.com/vpc-access-egress`: Revision, Execution.",
                  "**clusterName**: Not supported by Cloud Run",
                  "**creationTimestamp**: UTC timestamp representing the server time when this object was created.",
                  "**deletionGracePeriodSeconds**: Not supported by Cloud Run",
                  "**deletionTimestamp**: The read-only soft deletion timestamp for this resource. In Cloud Run, users are not able to set this field. Instead, they must call the corresponding Delete API.",
                  "**finalizers**: Not supported by Cloud Run",
                  "**generateName**: Not supported by Cloud Run",
                  "**generation**: A system-provided sequence number representing a specific generation of the desired state.",
                  "**labels**: Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and routes.",
                  "**name**: Required. The name of the resource. Name is required when creating top-level resources (Service, Job), must be unique within a Cloud Run project/region, and cannot be changed once created.",
                  "**namespace**: Required. Defines the space within each name must be unique within a Cloud Run region. In Cloud Run, it must be project ID or number.",
                  "**ownerReferences**: Not supported by Cloud Run",
                  "**resourceVersion**: Opaque, system-generated value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server or omit the value to disable conflict-detection.",
                  "**selfLink**: URL representing this object.",
                  "**uid**: Unique, system-generated identifier for this resource."
                ]
              }
            ],
            [
              "**spec**: ServiceSpec holds the desired state of the Route (from the client), which is used to manipulate the underlying Route and Configuration(s).",
              {
                "$ul": [
                  [
                    "**template**: RevisionTemplateSpec describes the data a revision should have when created from a template.",
                    {
                      "$ul": [
                        [
                          "**metadata**: google.cloud.run.meta.v1.ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
                          {
                            "$ul": [
                              "**annotations**: Unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. In Cloud Run, annotations with 'run.googleapis.com/' and 'autoscaling.knative.dev' are restricted, and the accepted annotations will be different depending on the resource type. * `autoscaling.knative.dev/maxScale`: Revision. * `autoscaling.knative.dev/minScale`: Revision. * `run.googleapis.com/binary-authorization-breakglass`: Service, Job, * `run.googleapis.com/binary-authorization`: Service, Job, Execution. * `run.googleapis.com/client-name`: All resources. * `run.googleapis.com/cloudsql-instances`: Revision, Execution. * `run.googleapis.com/container-dependencies`: Revision . * `run.googleapis.com/cpu-throttling`: Revision. * `run.googleapis.com/custom-audiences`: Service. * `run.googleapis.com/default-url-disabled`: Service. * `run.googleapis.com/description`: Service. * `run.googleapis.com/encryption-key-shutdown-hours`: Revision * `run.googleapis.com/encryption-key`: Revision, Execution. * `run.googleapis.com/execution-environment`: Revision, Execution. * `run.googleapis.com/gc-traffic-tags`: Service. * `run.googleapis.com/ingress`: Service. * `run.googleapis.com/launch-stage`: Service, Job. * `run.googleapis.com/minScale`: Service (ALPHA) * `run.googleapis.com/network-interfaces`: Revision, Execution. * `run.googleapis.com/post-key-revocation-action-type`: Revision. * `run.googleapis.com/secrets`: Revision, Execution. * `run.googleapis.com/secure-session-agent`: Revision. * `run.googleapis.com/sessionAffinity`: Revision. * `run.googleapis.com/startup-cpu-boost`: Revision. * `run.googleapis.com/vpc-access-connector`: Revision, Execution. * `run.googleapis.com/vpc-access-egress`: Revision, Execution.",
                              "**clusterName**: Not supported by Cloud Run",
                              "**creationTimestamp**: UTC timestamp representing the server time when this object was created.",
                              "**deletionGracePeriodSeconds**: Not supported by Cloud Run",
                              "**deletionTimestamp**: The read-only soft deletion timestamp for this resource. In Cloud Run, users are not able to set this field. Instead, they must call the corresponding Delete API.",
                              "**finalizers**: Not supported by Cloud Run",
                              "**generateName**: Not supported by Cloud Run",
                              "**generation**: A system-provided sequence number representing a specific generation of the desired state.",
                              "**labels**: Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and routes.",
                              "**name**: Required. The name of the resource. Name is required when creating top-level resources (Service, Job), must be unique within a Cloud Run project/region, and cannot be changed once created.",
                              "**namespace**: Required. Defines the space within each name must be unique within a Cloud Run region. In Cloud Run, it must be project ID or number.",
                              "**ownerReferences**: Not supported by Cloud Run",
                              "**resourceVersion**: Opaque, system-generated value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server or omit the value to disable conflict-detection.",
                              "**selfLink**: URL representing this object.",
                              "**uid**: Unique, system-generated identifier for this resource."
                            ]
                          }
                        ],
                        [
                          "**spec**: RevisionSpec holds the desired state of the Revision (from the client).",
                          {
                            "$ul": [
                              "**containerConcurrency**: ContainerConcurrency specifies the maximum allowed in-flight (concurrent) requests per container instance of the Revision. If not specified, defaults to 80.",
                              "**containers**: Required. Containers holds the single container that defines the unit of execution for this Revision. In the context of a Revision, we disallow a number of fields on this Container, including: name and lifecycle. In Cloud Run, only a single container may be provided.",
                              "**enableServiceLinks**: Not supported by Cloud Run.",
                              "**imagePullSecrets**: Not supported by Cloud Run.",
                              "**serviceAccountName**: Email address of the IAM service account associated with the revision of the service. The service account represents the identity of the running revision, and determines what permissions the revision has. If not provided, the revision will use the project's default service account.",
                              "**timeoutSeconds**: TimeoutSeconds holds the max duration the instance is allowed for responding to a request. Cloud Run: defaults to 300 seconds (5 minutes). Maximum allowed value is 3600 seconds (1 hour).",
                              "**volumes**"
                            ]
                          }
                        ]
                      ]
                    }
                  ],
                  "**traffic**: Specifies how to distribute traffic over a collection of Knative Revisions and Configurations to the Service's main URL."
                ]
              }
            ],
            [
              "**status**: The current state of the Service. Output only.",
              {
                "$ul": [
                  [
                    "**address**: Information for connecting over HTTP(s).",
                    {
                      "$ul": [
                        "**url**"
                      ]
                    }
                  ],
                  "**conditions**: Conditions communicate information about ongoing/complete reconciliation processes that bring the `spec` inline with the observed state of the world. Service-specific conditions include: * `ConfigurationsReady`: `True` when the underlying Configuration is ready. * `RoutesReady`: `True` when the underlying Route is ready. * `Ready`: `True` when all underlying resources are ready.",
                  "**latestCreatedRevisionName**: Name of the last revision that was created from this Service's Configuration. It might not be ready yet, for that use LatestReadyRevisionName.",
                  "**latestReadyRevisionName**: Name of the latest Revision from this Service's Configuration that has had its `Ready` condition become `True`.",
                  "**observedGeneration**: Returns the generation last seen by the system. Clients polling for completed reconciliation should poll until observedGeneration = metadata.generation and the Ready condition's status is True or False.",
                  "**traffic**: Holds the configured traffic distribution. These entries will always contain RevisionName references. When ConfigurationName appears in the spec, this will hold the LatestReadyRevisionName that we last observed.",
                  "**url**: URL that will distribute traffic over the provided traffic targets. It generally has the form `https://{route-hash}-{project-hash}-{cluster-level-suffix}.a.run.app`"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
