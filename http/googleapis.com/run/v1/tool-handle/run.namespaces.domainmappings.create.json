{
  "name": "run_namespaces_domainmappings_create",
  "description": "Create a new domain mapping.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The namespace in which the domain mapping should be created. For Cloud Run (fully managed), replace {namespace} with the project ID or number. It takes the form namespaces/{namespace}. For example: namespaces/PROJECT_ID"
      },
      "dryRun": {
        "type": "string",
        "description": "Indicates that the server should validate the request and populate default values without persisting the request. Supported values: `all`"
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/DomainMapping"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "DomainMapping": {
        "description": "Resource to hold the state and status of a user's domain mapping. NOTE: This resource is currently in Beta.",
        "properties": {
          "apiVersion": {
            "description": "The API version for this call such as \"domains.cloudrun.com/v1\".",
            "type": "string"
          },
          "kind": {
            "description": "The kind of resource, in this case \"DomainMapping\".",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/$defs/ObjectMeta"
          },
          "spec": {
            "$ref": "#/$defs/DomainMappingSpec"
          },
          "status": {
            "$ref": "#/$defs/DomainMappingStatus"
          }
        },
        "type": "object"
      },
      "ObjectMeta": {
        "description": "google.cloud.run.meta.v1.ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. In Cloud Run, annotations with 'run.googleapis.com/' and 'autoscaling.knative.dev' are restricted, and the accepted annotations will be different depending on the resource type. * `autoscaling.knative.dev/maxScale`: Revision. * `autoscaling.knative.dev/minScale`: Revision. * `run.googleapis.com/binary-authorization-breakglass`: Service, Job, * `run.googleapis.com/binary-authorization`: Service, Job, Execution. * `run.googleapis.com/client-name`: All resources. * `run.googleapis.com/cloudsql-instances`: Revision, Execution. * `run.googleapis.com/container-dependencies`: Revision . * `run.googleapis.com/cpu-throttling`: Revision. * `run.googleapis.com/custom-audiences`: Service. * `run.googleapis.com/default-url-disabled`: Service. * `run.googleapis.com/description`: Service. * `run.googleapis.com/encryption-key-shutdown-hours`: Revision * `run.googleapis.com/encryption-key`: Revision, Execution. * `run.googleapis.com/execution-environment`: Revision, Execution. * `run.googleapis.com/gc-traffic-tags`: Service. * `run.googleapis.com/ingress`: Service. * `run.googleapis.com/launch-stage`: Service, Job. * `run.googleapis.com/minScale`: Service (ALPHA) * `run.googleapis.com/network-interfaces`: Revision, Execution. * `run.googleapis.com/post-key-revocation-action-type`: Revision. * `run.googleapis.com/secrets`: Revision, Execution. * `run.googleapis.com/secure-session-agent`: Revision. * `run.googleapis.com/sessionAffinity`: Revision. * `run.googleapis.com/startup-cpu-boost`: Revision. * `run.googleapis.com/vpc-access-connector`: Revision, Execution. * `run.googleapis.com/vpc-access-egress`: Revision, Execution.",
            "type": "object"
          },
          "clusterName": {
            "description": "Not supported by Cloud Run",
            "type": "string"
          },
          "creationTimestamp": {
            "description": "UTC timestamp representing the server time when this object was created.",
            "format": "google-datetime",
            "type": "string"
          },
          "deletionGracePeriodSeconds": {
            "description": "Not supported by Cloud Run",
            "format": "int32",
            "type": "integer"
          },
          "deletionTimestamp": {
            "description": "The read-only soft deletion timestamp for this resource. In Cloud Run, users are not able to set this field. Instead, they must call the corresponding Delete API.",
            "format": "google-datetime",
            "type": "string"
          },
          "finalizers": {
            "description": "Not supported by Cloud Run",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "generateName": {
            "description": "Not supported by Cloud Run",
            "type": "string"
          },
          "generation": {
            "description": "A system-provided sequence number representing a specific generation of the desired state.",
            "format": "int32",
            "type": "integer"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and routes.",
            "type": "object"
          },
          "name": {
            "description": "Required. The name of the resource. Name is required when creating top-level resources (Service, Job), must be unique within a Cloud Run project/region, and cannot be changed once created.",
            "type": "string"
          },
          "namespace": {
            "description": "Required. Defines the space within each name must be unique within a Cloud Run region. In Cloud Run, it must be project ID or number.",
            "type": "string"
          },
          "ownerReferences": {
            "description": "Not supported by Cloud Run",
            "items": {
              "$ref": "#/$defs/OwnerReference"
            },
            "type": "array"
          },
          "resourceVersion": {
            "description": "Opaque, system-generated value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server or omit the value to disable conflict-detection.",
            "type": "string"
          },
          "selfLink": {
            "description": "URL representing this object.",
            "type": "string"
          },
          "uid": {
            "description": "Unique, system-generated identifier for this resource.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OwnerReference": {
        "description": "This is not supported or used by Cloud Run.",
        "properties": {
          "apiVersion": {
            "description": "This is not supported or used by Cloud Run.",
            "type": "string"
          },
          "blockOwnerDeletion": {
            "description": "This is not supported or used by Cloud Run.",
            "type": "boolean"
          },
          "controller": {
            "description": "This is not supported or used by Cloud Run.",
            "type": "boolean"
          },
          "kind": {
            "description": "This is not supported or used by Cloud Run.",
            "type": "string"
          },
          "name": {
            "description": "This is not supported or used by Cloud Run.",
            "type": "string"
          },
          "uid": {
            "description": "This is not supported or used by Cloud Run.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DomainMappingSpec": {
        "description": "The desired state of the Domain Mapping.",
        "properties": {
          "certificateMode": {
            "description": "The mode of the certificate.",
            "enum": [
              "CERTIFICATE_MODE_UNSPECIFIED",
              "NONE",
              "AUTOMATIC"
            ],
            "type": "string"
          },
          "forceOverride": {
            "description": "If set, the mapping will override any mapping set before this spec was set. It is recommended that the user leaves this empty to receive an error warning about a potential conflict and only set it once the respective UI has given such a warning.",
            "type": "boolean"
          },
          "routeName": {
            "description": "The name of the Knative Route that this DomainMapping applies to. The route must exist.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DomainMappingStatus": {
        "description": "The current state of the Domain Mapping.",
        "properties": {
          "conditions": {
            "description": "Array of observed DomainMappingConditions, indicating the current state of the DomainMapping.",
            "items": {
              "$ref": "#/$defs/GoogleCloudRunV1Condition"
            },
            "type": "array"
          },
          "mappedRouteName": {
            "description": "The name of the route that the mapping currently points to.",
            "type": "string"
          },
          "observedGeneration": {
            "description": "ObservedGeneration is the 'Generation' of the DomainMapping that was last processed by the controller. Clients polling for completed reconciliation should poll until observedGeneration = metadata.generation and the Ready condition's status is True or False.",
            "format": "int32",
            "type": "integer"
          },
          "resourceRecords": {
            "description": "The resource records required to configure this domain mapping. These records must be added to the domain's DNS configuration in order to serve the application via this domain mapping.",
            "items": {
              "$ref": "#/$defs/ResourceRecord"
            },
            "type": "array"
          },
          "url": {
            "description": "Optional. Not supported by Cloud Run.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudRunV1Condition": {
        "description": "Conditions show the status of reconciliation progress on a given resource. Most resource use a top-level condition type \"Ready\" or \"Completed\" to show overall status with other conditions to checkpoint each stage of reconciliation. Note that if metadata.Generation does not equal status.ObservedGeneration, the conditions shown may not be relevant for the current spec.",
        "properties": {
          "lastTransitionTime": {
            "description": "Optional. Last time the condition transitioned from one status to another.",
            "format": "google-datetime",
            "type": "string"
          },
          "message": {
            "description": "Optional. Human readable message indicating details about the current status.",
            "type": "string"
          },
          "reason": {
            "description": "Optional. One-word CamelCase reason for the condition's last transition. These are intended to be stable, unique values which the client may use to trigger error handling logic, whereas messages which may be changed later by the server.",
            "type": "string"
          },
          "severity": {
            "description": "Optional. How to interpret this condition. One of Error, Warning, or Info. Conditions of severity Info do not contribute to resource readiness.",
            "type": "string"
          },
          "status": {
            "description": "Status of the condition, one of True, False, Unknown.",
            "type": "string"
          },
          "type": {
            "description": "type is used to communicate the status of the reconciliation process. Types common to all resources include: * \"Ready\" or \"Completed\": True when the Resource is ready.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResourceRecord": {
        "description": "A DNS resource record.",
        "properties": {
          "name": {
            "description": "Relative name of the object affected by this record. Only applicable for `CNAME` records. Example: 'www'.",
            "type": "string"
          },
          "rrdata": {
            "description": "Data for this record. Values vary by record type, as defined in RFC 1035 (section 5) and RFC 1034 (section 3.6.1).",
            "type": "string"
          },
          "type": {
            "description": "Resource record type. Example: `AAAA`.",
            "enum": [
              "RECORD_TYPE_UNSPECIFIED",
              "A",
              "AAAA",
              "CNAME"
            ],
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://run.googleapis.com//apis/domains.cloudrun.com/v1/{parent}/domainmappings{?dryRun,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Resource to hold the state and status of a user's domain mapping. NOTE: This resource is currently in Beta.",
        "**Key properties:**",
        {
          "$ul": [
            "**apiVersion**: The API version for this call such as \"domains.cloudrun.com/v1\".",
            "**kind**: The kind of resource, in this case \"DomainMapping\".",
            [
              "**metadata**: google.cloud.run.meta.v1.ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
              {
                "$ul": [
                  "**annotations**: Unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. In Cloud Run, annotations with 'run.googleapis.com/' and 'autoscaling.knative.dev' are restricted, and the accepted annotations will be different depending on the resource type. * `autoscaling.knative.dev/maxScale`: Revision. * `autoscaling.knative.dev/minScale`: Revision. * `run.googleapis.com/binary-authorization-breakglass`: Service, Job, * `run.googleapis.com/binary-authorization`: Service, Job, Execution. * `run.googleapis.com/client-name`: All resources. * `run.googleapis.com/cloudsql-instances`: Revision, Execution. * `run.googleapis.com/container-dependencies`: Revision . * `run.googleapis.com/cpu-throttling`: Revision. * `run.googleapis.com/custom-audiences`: Service. * `run.googleapis.com/default-url-disabled`: Service. * `run.googleapis.com/description`: Service. * `run.googleapis.com/encryption-key-shutdown-hours`: Revision * `run.googleapis.com/encryption-key`: Revision, Execution. * `run.googleapis.com/execution-environment`: Revision, Execution. * `run.googleapis.com/gc-traffic-tags`: Service. * `run.googleapis.com/ingress`: Service. * `run.googleapis.com/launch-stage`: Service, Job. * `run.googleapis.com/minScale`: Service (ALPHA) * `run.googleapis.com/network-interfaces`: Revision, Execution. * `run.googleapis.com/post-key-revocation-action-type`: Revision. * `run.googleapis.com/secrets`: Revision, Execution. * `run.googleapis.com/secure-session-agent`: Revision. * `run.googleapis.com/sessionAffinity`: Revision. * `run.googleapis.com/startup-cpu-boost`: Revision. * `run.googleapis.com/vpc-access-connector`: Revision, Execution. * `run.googleapis.com/vpc-access-egress`: Revision, Execution.",
                  "**clusterName**: Not supported by Cloud Run",
                  "**creationTimestamp**: UTC timestamp representing the server time when this object was created.",
                  "**deletionGracePeriodSeconds**: Not supported by Cloud Run",
                  "**deletionTimestamp**: The read-only soft deletion timestamp for this resource. In Cloud Run, users are not able to set this field. Instead, they must call the corresponding Delete API.",
                  "**finalizers**: Not supported by Cloud Run",
                  "**generateName**: Not supported by Cloud Run",
                  "**generation**: A system-provided sequence number representing a specific generation of the desired state.",
                  "**labels**: Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and routes.",
                  "**name**: Required. The name of the resource. Name is required when creating top-level resources (Service, Job), must be unique within a Cloud Run project/region, and cannot be changed once created.",
                  "**namespace**: Required. Defines the space within each name must be unique within a Cloud Run region. In Cloud Run, it must be project ID or number.",
                  "**ownerReferences**: Not supported by Cloud Run",
                  "**resourceVersion**: Opaque, system-generated value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server or omit the value to disable conflict-detection.",
                  "**selfLink**: URL representing this object.",
                  "**uid**: Unique, system-generated identifier for this resource."
                ]
              }
            ],
            [
              "**spec**: The desired state of the Domain Mapping.",
              {
                "$ul": [
                  "**certificateMode**: The mode of the certificate.",
                  "**forceOverride**: If set, the mapping will override any mapping set before this spec was set. It is recommended that the user leaves this empty to receive an error warning about a potential conflict and only set it once the respective UI has given such a warning.",
                  "**routeName**: The name of the Knative Route that this DomainMapping applies to. The route must exist."
                ]
              }
            ],
            [
              "**status**: The current state of the Domain Mapping.",
              {
                "$ul": [
                  "**conditions**: Array of observed DomainMappingConditions, indicating the current state of the DomainMapping.",
                  "**mappedRouteName**: The name of the route that the mapping currently points to.",
                  "**observedGeneration**: ObservedGeneration is the 'Generation' of the DomainMapping that was last processed by the controller. Clients polling for completed reconciliation should poll until observedGeneration = metadata.generation and the Ready condition's status is True or False.",
                  "**resourceRecords**: The resource records required to configure this domain mapping. These records must be added to the domain's DNS configuration in order to serve the application via this domain mapping.",
                  "**url**: Optional. Not supported by Cloud Run."
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
