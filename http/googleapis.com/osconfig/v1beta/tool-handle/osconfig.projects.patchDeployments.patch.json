{
  "name": "osconfig_projects_patchDeployments_patch",
  "description": "Update an OS Config patch deployment.",
  "parameters": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "Unique name for the patch deployment resource in a project. The patch deployment name is in the form: `projects/{project_id}/patchDeployments/{patch_deployment_id}`. This field is ignored when you create a new patch deployment."
      },
      "updateMask": {
        "type": "string",
        "description": "Optional. Field mask that controls which fields of the patch deployment should be updated."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/PatchDeployment"
      }
    },
    "required": [
      "name"
    ],
    "$defs": {
      "PatchDeployment": {
        "description": "Patch deployments are configurations that individual patch jobs use to complete a patch. These configurations include instance filter, package repository settings, and a schedule. For more information about creating and managing patch deployments, see [Scheduling patch jobs](https://cloud.google.com/compute/docs/os-patch-management/schedule-patch-jobs).",
        "properties": {
          "createTime": {
            "description": "Output only. Time the patch deployment was created. Timestamp is in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "description": {
            "description": "Optional. Description of the patch deployment. Length of the description is limited to 1024 characters.",
            "type": "string"
          },
          "duration": {
            "description": "Optional. Duration of the patch. After the duration ends, the patch times out.",
            "format": "google-duration",
            "type": "string"
          },
          "instanceFilter": {
            "$ref": "#/$defs/PatchInstanceFilter"
          },
          "lastExecuteTime": {
            "description": "Output only. The last time a patch job was started by this deployment. Timestamp is in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "Unique name for the patch deployment resource in a project. The patch deployment name is in the form: `projects/{project_id}/patchDeployments/{patch_deployment_id}`. This field is ignored when you create a new patch deployment.",
            "type": "string"
          },
          "oneTimeSchedule": {
            "$ref": "#/$defs/OneTimeSchedule"
          },
          "patchConfig": {
            "$ref": "#/$defs/PatchConfig"
          },
          "recurringSchedule": {
            "$ref": "#/$defs/RecurringSchedule"
          },
          "rollout": {
            "$ref": "#/$defs/PatchRollout"
          },
          "state": {
            "description": "Output only. Current state of the patch deployment.",
            "enum": [
              "STATE_UNSPECIFIED",
              "ACTIVE",
              "PAUSED"
            ],
            "readOnly": true,
            "type": "string"
          },
          "updateTime": {
            "description": "Output only. Time the patch deployment was last updated. Timestamp is in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "PatchInstanceFilter": {
        "description": "A filter to target VM instances for patching. The targeted VMs must meet all criteria specified. So if both labels and zones are specified, the patch job targets only VMs with those labels and in those zones.",
        "properties": {
          "all": {
            "description": "Target all VM instances in the project. If true, no other criteria is permitted.",
            "type": "boolean"
          },
          "groupLabels": {
            "description": "Targets VM instances matching at least one of these label sets. This allows targeting of disparate groups, for example \"env=prod or env=staging\".",
            "items": {
              "$ref": "#/$defs/PatchInstanceFilterGroupLabel"
            },
            "type": "array"
          },
          "instanceNamePrefixes": {
            "description": "Targets VMs whose name starts with one of these prefixes. Similar to labels, this is another way to group VMs when targeting configs, for example prefix=\"prod-\".",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "instances": {
            "description": "Targets any of the VM instances specified. Instances are specified by their URI in the form `zones/[ZONE]/instances/[INSTANCE_NAME]`, `projects/[PROJECT_ID]/zones/[ZONE]/instances/[INSTANCE_NAME]`, or `https://www.googleapis.com/compute/v1/projects/[PROJECT_ID]/zones/[ZONE]/instances/[INSTANCE_NAME]`",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "zones": {
            "description": "Targets VM instances in ANY of these zones. Leave empty to target VM instances in any zone.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PatchInstanceFilterGroupLabel": {
        "description": "Represents a group of VMs that can be identified as having all these labels, for example \"env=prod and app=web\".",
        "properties": {
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Compute Engine instance labels that must be present for a VM instance to be targeted by this filter.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "OneTimeSchedule": {
        "description": "Sets the time for a one time patch deployment. Timestamp is in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.",
        "properties": {
          "executeTime": {
            "description": "Required. The desired patch job execution time.",
            "format": "google-datetime",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PatchConfig": {
        "description": "Patch configuration specifications. Contains details on how to apply the patch(es) to a VM instance.",
        "properties": {
          "apt": {
            "$ref": "#/$defs/AptSettings"
          },
          "goo": {
            "$ref": "#/$defs/GooSettings"
          },
          "migInstancesAllowed": {
            "description": "Allows the patch job to run on Managed instance groups (MIGs).",
            "type": "boolean"
          },
          "postStep": {
            "$ref": "#/$defs/ExecStep"
          },
          "preStep": {
            "$ref": "#/$defs/ExecStep"
          },
          "rebootConfig": {
            "description": "Post-patch reboot settings.",
            "enum": [
              "REBOOT_CONFIG_UNSPECIFIED",
              "DEFAULT",
              "ALWAYS",
              "NEVER"
            ],
            "type": "string"
          },
          "windowsUpdate": {
            "$ref": "#/$defs/WindowsUpdateSettings"
          },
          "yum": {
            "$ref": "#/$defs/YumSettings"
          },
          "zypper": {
            "$ref": "#/$defs/ZypperSettings"
          }
        },
        "type": "object"
      },
      "AptSettings": {
        "description": "Apt patching is completed by executing `apt-get update && apt-get upgrade`. Additional options can be set to control how this is executed.",
        "properties": {
          "excludes": {
            "description": "List of packages to exclude from update. These packages will be excluded",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "exclusivePackages": {
            "description": "An exclusive list of packages to be updated. These are the only packages that will be updated. If these packages are not installed, they will be ignored. This field cannot be specified with any other patch configuration fields.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "type": {
            "description": "By changing the type to DIST, the patching is performed using `apt-get dist-upgrade` instead.",
            "enum": [
              "TYPE_UNSPECIFIED",
              "DIST",
              "UPGRADE"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "GooSettings": {
        "description": "Googet patching is performed by running `googet update`.",
        "properties": {},
        "type": "object"
      },
      "ExecStep": {
        "description": "A step that runs an executable for a PatchJob.",
        "properties": {
          "linuxExecStepConfig": {
            "$ref": "#/$defs/ExecStepConfig"
          },
          "windowsExecStepConfig": {
            "$ref": "#/$defs/ExecStepConfig"
          }
        },
        "type": "object"
      },
      "ExecStepConfig": {
        "description": "Common configurations for an ExecStep.",
        "properties": {
          "allowedSuccessCodes": {
            "description": "Defaults to [0]. A list of possible return values that the execution can return to indicate a success.",
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array"
          },
          "gcsObject": {
            "$ref": "#/$defs/GcsObject"
          },
          "interpreter": {
            "description": "The script interpreter to use to run the script. If no interpreter is specified the script will be executed directly, which will likely only succeed for scripts with [shebang lines] (https://en.wikipedia.org/wiki/Shebang_\\(Unix\\)).",
            "enum": [
              "INTERPRETER_UNSPECIFIED",
              "NONE",
              "SHELL",
              "POWERSHELL"
            ],
            "type": "string"
          },
          "localPath": {
            "description": "An absolute path to the executable on the VM.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GcsObject": {
        "description": "Google Cloud Storage object representation.",
        "properties": {
          "bucket": {
            "description": "Required. Bucket of the Google Cloud Storage object.",
            "type": "string"
          },
          "generationNumber": {
            "description": "Required. Generation number of the Google Cloud Storage object. This is used to ensure that the ExecStep specified by this PatchJob does not change.",
            "format": "int64",
            "type": "string"
          },
          "object": {
            "description": "Required. Name of the Google Cloud Storage object.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "WindowsUpdateSettings": {
        "description": "Windows patching is performed using the Windows Update Agent.",
        "properties": {
          "classifications": {
            "description": "Only apply updates of these windows update classifications. If empty, all updates are applied.",
            "items": {
              "enum": [
                "CLASSIFICATION_UNSPECIFIED",
                "CRITICAL",
                "SECURITY",
                "DEFINITION",
                "DRIVER",
                "FEATURE_PACK",
                "SERVICE_PACK",
                "TOOL",
                "UPDATE_ROLLUP",
                "UPDATE"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "excludes": {
            "description": "List of KBs to exclude from update.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "exclusivePatches": {
            "description": "An exclusive list of kbs to be updated. These are the only patches that will be updated. This field must not be used with other patch configurations.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "YumSettings": {
        "description": "Yum patching is performed by executing `yum update`. Additional options can be set to control how this is executed. Note that not all settings are supported on all platforms.",
        "properties": {
          "excludes": {
            "description": "List of packages to exclude from update. These packages are excluded by using the yum `--exclude` flag.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "exclusivePackages": {
            "description": "An exclusive list of packages to be updated. These are the only packages that will be updated. If these packages are not installed, they will be ignored. This field must not be specified with any other patch configuration fields.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "minimal": {
            "description": "Will cause patch to run `yum update-minimal` instead.",
            "type": "boolean"
          },
          "security": {
            "description": "Adds the `--security` flag to `yum update`. Not supported on all platforms.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ZypperSettings": {
        "description": "Zypper patching is performed by running `zypper patch`. See also https://en.opensuse.org/SDB:Zypper_manual.",
        "properties": {
          "categories": {
            "description": "Install only patches with these categories. Common categories include security, recommended, and feature.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "excludes": {
            "description": "List of patches to exclude from update.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "exclusivePatches": {
            "description": "An exclusive list of patches to be updated. These are the only patches that will be installed using 'zypper patch patch:' command. This field must not be used with any other patch configuration fields.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "severities": {
            "description": "Install only patches with these severities. Common severities include critical, important, moderate, and low.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "withOptional": {
            "description": "Adds the `--with-optional` flag to `zypper patch`.",
            "type": "boolean"
          },
          "withUpdate": {
            "description": "Adds the `--with-update` flag, to `zypper patch`.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "RecurringSchedule": {
        "description": "Sets the time for recurring patch deployments.",
        "properties": {
          "endTime": {
            "description": "Optional. The end time at which a recurring patch deployment schedule is no longer active.",
            "format": "google-datetime",
            "type": "string"
          },
          "frequency": {
            "description": "Required. The frequency unit of this recurring schedule.",
            "enum": [
              "FREQUENCY_UNSPECIFIED",
              "WEEKLY",
              "MONTHLY",
              "DAILY"
            ],
            "type": "string"
          },
          "lastExecuteTime": {
            "description": "Output only. The time the last patch job ran successfully.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "monthly": {
            "$ref": "#/$defs/MonthlySchedule"
          },
          "nextExecuteTime": {
            "description": "Output only. The time the next patch job is scheduled to run.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "startTime": {
            "description": "Optional. The time that the recurring schedule becomes effective. Defaults to `create_time` of the patch deployment.",
            "format": "google-datetime",
            "type": "string"
          },
          "timeOfDay": {
            "$ref": "#/$defs/TimeOfDay"
          },
          "timeZone": {
            "$ref": "#/$defs/TimeZone"
          },
          "weekly": {
            "$ref": "#/$defs/WeeklySchedule"
          }
        },
        "type": "object"
      },
      "MonthlySchedule": {
        "description": "Represents a monthly schedule. An example of a valid monthly schedule is \"on the third Tuesday of the month\" or \"on the 15th of the month\".",
        "properties": {
          "monthDay": {
            "description": "Required. One day of the month. 1-31 indicates the 1st to the 31st day. -1 indicates the last day of the month. Months without the target day will be skipped. For example, a schedule to run \"every month on the 31st\" will not run in February, April, June, etc.",
            "format": "int32",
            "type": "integer"
          },
          "weekDayOfMonth": {
            "$ref": "#/$defs/WeekDayOfMonth"
          }
        },
        "type": "object"
      },
      "WeekDayOfMonth": {
        "description": "Represents one week day in a month. An example is \"the 4th Sunday\".",
        "properties": {
          "dayOfWeek": {
            "description": "Required. A day of the week.",
            "enum": [
              "DAY_OF_WEEK_UNSPECIFIED",
              "MONDAY",
              "TUESDAY",
              "WEDNESDAY",
              "THURSDAY",
              "FRIDAY",
              "SATURDAY",
              "SUNDAY"
            ],
            "type": "string"
          },
          "dayOffset": {
            "description": "Optional. Represents the number of days before or after the given week day of month that the patch deployment is scheduled for. For example if `week_ordinal` and `day_of_week` values point to the second day of the month and this `day_offset` value is set to `3`, the patch deployment takes place three days after the second Tuesday of the month. If this value is negative, for example -5, the patches are deployed five days before before the second Tuesday of the month. Allowed values are in range [-30, 30].",
            "format": "int32",
            "type": "integer"
          },
          "weekOrdinal": {
            "description": "Required. Week number in a month. 1-4 indicates the 1st to 4th week of the month. -1 indicates the last week of the month.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TimeOfDay": {
        "description": "Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.",
        "properties": {
          "hours": {
            "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \"24:00:00\" for scenarios like business closing time.",
            "format": "int32",
            "type": "integer"
          },
          "minutes": {
            "description": "Minutes of hour of day. Must be from 0 to 59.",
            "format": "int32",
            "type": "integer"
          },
          "nanos": {
            "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.",
            "format": "int32",
            "type": "integer"
          },
          "seconds": {
            "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TimeZone": {
        "description": "Represents a time zone from the [IANA Time Zone Database](https://www.iana.org/time-zones).",
        "properties": {
          "id": {
            "description": "IANA Time Zone Database time zone, e.g. \"America/New_York\".",
            "type": "string"
          },
          "version": {
            "description": "Optional. IANA Time Zone Database version number, e.g. \"2019a\".",
            "type": "string"
          }
        },
        "type": "object"
      },
      "WeeklySchedule": {
        "description": "Represents a weekly schedule.",
        "properties": {
          "dayOfWeek": {
            "description": "Required. Day of the week.",
            "enum": [
              "DAY_OF_WEEK_UNSPECIFIED",
              "MONDAY",
              "TUESDAY",
              "WEDNESDAY",
              "THURSDAY",
              "FRIDAY",
              "SATURDAY",
              "SUNDAY"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "PatchRollout": {
        "description": "Patch rollout configuration specifications. Contains details on the concurrency control when applying patch(es) to all targeted VMs.",
        "properties": {
          "disruptionBudget": {
            "$ref": "#/$defs/FixedOrPercent"
          },
          "mode": {
            "description": "Mode of the patch rollout.",
            "enum": [
              "MODE_UNSPECIFIED",
              "ZONE_BY_ZONE",
              "CONCURRENT_ZONES"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "FixedOrPercent": {
        "description": "Message encapsulating a value that can be either absolute (\"fixed\") or relative (\"percent\") to a value.",
        "properties": {
          "fixed": {
            "description": "Specifies a fixed value.",
            "format": "int32",
            "type": "integer"
          },
          "percent": {
            "description": "Specifies the relative value defined as a percentage, which will be multiplied by a reference value.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PATCH",
    "url": {
      "$uri": "https://osconfig.googleapis.com//v1beta/{name}{?updateMask,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Patch deployments are configurations that individual patch jobs use to complete a patch. These configurations include instance filter, package repository settings, and a schedule. For more information about creating and managing patch deployments, see [Scheduling patch jobs](https://cloud.google.com/compute/docs/os-patch-management/schedule-patch-jobs).",
        "**Key properties:**",
        {
          "$ul": [
            "**createTime**: Output only. Time the patch deployment was created. Timestamp is in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.",
            "**description**: Optional. Description of the patch deployment. Length of the description is limited to 1024 characters.",
            "**duration**: Optional. Duration of the patch. After the duration ends, the patch times out.",
            [
              "**instanceFilter**: A filter to target VM instances for patching. The targeted VMs must meet all criteria specified. So if both labels and zones are specified, the patch job targets only VMs with those labels and in those zones.",
              {
                "$ul": [
                  "**all**: Target all VM instances in the project. If true, no other criteria is permitted.",
                  "**groupLabels**: Targets VM instances matching at least one of these label sets. This allows targeting of disparate groups, for example \"env=prod or env=staging\".",
                  "**instanceNamePrefixes**: Targets VMs whose name starts with one of these prefixes. Similar to labels, this is another way to group VMs when targeting configs, for example prefix=\"prod-\".",
                  "**instances**: Targets any of the VM instances specified. Instances are specified by their URI in the form `zones/[ZONE]/instances/[INSTANCE_NAME]`, `projects/[PROJECT_ID]/zones/[ZONE]/instances/[INSTANCE_NAME]`, or `https://www.googleapis.com/compute/v1/projects/[PROJECT_ID]/zones/[ZONE]/instances/[INSTANCE_NAME]`",
                  "**zones**: Targets VM instances in ANY of these zones. Leave empty to target VM instances in any zone."
                ]
              }
            ],
            "**lastExecuteTime**: Output only. The last time a patch job was started by this deployment. Timestamp is in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.",
            "**name**: Unique name for the patch deployment resource in a project. The patch deployment name is in the form: `projects/{project_id}/patchDeployments/{patch_deployment_id}`. This field is ignored when you create a new patch deployment.",
            [
              "**oneTimeSchedule**: Sets the time for a one time patch deployment. Timestamp is in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.",
              {
                "$ul": [
                  "**executeTime**: Required. The desired patch job execution time."
                ]
              }
            ],
            [
              "**patchConfig**: Patch configuration specifications. Contains details on how to apply the patch(es) to a VM instance.",
              {
                "$ul": [
                  [
                    "**apt**: Apt patching is completed by executing `apt-get update && apt-get upgrade`. Additional options can be set to control how this is executed.",
                    {
                      "$ul": [
                        "**excludes**: List of packages to exclude from update. These packages will be excluded",
                        "**exclusivePackages**: An exclusive list of packages to be updated. These are the only packages that will be updated. If these packages are not installed, they will be ignored. This field cannot be specified with any other patch configuration fields.",
                        "**type**: By changing the type to DIST, the patching is performed using `apt-get dist-upgrade` instead."
                      ]
                    }
                  ],
                  "**goo**: Googet patching is performed by running `googet update`.",
                  "**migInstancesAllowed**: Allows the patch job to run on Managed instance groups (MIGs).",
                  [
                    "**postStep**: A step that runs an executable for a PatchJob.",
                    {
                      "$ul": [
                        [
                          "**linuxExecStepConfig**: Common configurations for an ExecStep.",
                          {
                            "$ul": [
                              "**allowedSuccessCodes**: Defaults to [0]. A list of possible return values that the execution can return to indicate a success.",
                              [
                                "**gcsObject**: Google Cloud Storage object representation.",
                                {
                                  "$ul": [
                                    "**bucket**: Required. Bucket of the Google Cloud Storage object.",
                                    "**generationNumber**: Required. Generation number of the Google Cloud Storage object. This is used to ensure that the ExecStep specified by this PatchJob does not change.",
                                    "**object**: Required. Name of the Google Cloud Storage object."
                                  ]
                                }
                              ],
                              "**interpreter**: The script interpreter to use to run the script. If no interpreter is specified the script will be executed directly, which will likely only succeed for scripts with [shebang lines] (https://en.wikipedia.org/wiki/Shebang_\\(Unix\\)).",
                              "**localPath**: An absolute path to the executable on the VM."
                            ]
                          }
                        ],
                        [
                          "**windowsExecStepConfig**: Common configurations for an ExecStep.",
                          {
                            "$ul": [
                              "**allowedSuccessCodes**: Defaults to [0]. A list of possible return values that the execution can return to indicate a success.",
                              [
                                "**gcsObject**: Google Cloud Storage object representation.",
                                {
                                  "$ul": [
                                    "**bucket**: Required. Bucket of the Google Cloud Storage object.",
                                    "**generationNumber**: Required. Generation number of the Google Cloud Storage object. This is used to ensure that the ExecStep specified by this PatchJob does not change.",
                                    "**object**: Required. Name of the Google Cloud Storage object."
                                  ]
                                }
                              ],
                              "**interpreter**: The script interpreter to use to run the script. If no interpreter is specified the script will be executed directly, which will likely only succeed for scripts with [shebang lines] (https://en.wikipedia.org/wiki/Shebang_\\(Unix\\)).",
                              "**localPath**: An absolute path to the executable on the VM."
                            ]
                          }
                        ]
                      ]
                    }
                  ],
                  [
                    "**preStep**: A step that runs an executable for a PatchJob.",
                    {
                      "$ul": [
                        [
                          "**linuxExecStepConfig**: Common configurations for an ExecStep.",
                          {
                            "$ul": [
                              "**allowedSuccessCodes**: Defaults to [0]. A list of possible return values that the execution can return to indicate a success.",
                              [
                                "**gcsObject**: Google Cloud Storage object representation.",
                                {
                                  "$ul": [
                                    "**bucket**: Required. Bucket of the Google Cloud Storage object.",
                                    "**generationNumber**: Required. Generation number of the Google Cloud Storage object. This is used to ensure that the ExecStep specified by this PatchJob does not change.",
                                    "**object**: Required. Name of the Google Cloud Storage object."
                                  ]
                                }
                              ],
                              "**interpreter**: The script interpreter to use to run the script. If no interpreter is specified the script will be executed directly, which will likely only succeed for scripts with [shebang lines] (https://en.wikipedia.org/wiki/Shebang_\\(Unix\\)).",
                              "**localPath**: An absolute path to the executable on the VM."
                            ]
                          }
                        ],
                        [
                          "**windowsExecStepConfig**: Common configurations for an ExecStep.",
                          {
                            "$ul": [
                              "**allowedSuccessCodes**: Defaults to [0]. A list of possible return values that the execution can return to indicate a success.",
                              [
                                "**gcsObject**: Google Cloud Storage object representation.",
                                {
                                  "$ul": [
                                    "**bucket**: Required. Bucket of the Google Cloud Storage object.",
                                    "**generationNumber**: Required. Generation number of the Google Cloud Storage object. This is used to ensure that the ExecStep specified by this PatchJob does not change.",
                                    "**object**: Required. Name of the Google Cloud Storage object."
                                  ]
                                }
                              ],
                              "**interpreter**: The script interpreter to use to run the script. If no interpreter is specified the script will be executed directly, which will likely only succeed for scripts with [shebang lines] (https://en.wikipedia.org/wiki/Shebang_\\(Unix\\)).",
                              "**localPath**: An absolute path to the executable on the VM."
                            ]
                          }
                        ]
                      ]
                    }
                  ],
                  "**rebootConfig**: Post-patch reboot settings.",
                  [
                    "**windowsUpdate**: Windows patching is performed using the Windows Update Agent.",
                    {
                      "$ul": [
                        "**classifications**: Only apply updates of these windows update classifications. If empty, all updates are applied.",
                        "**excludes**: List of KBs to exclude from update.",
                        "**exclusivePatches**: An exclusive list of kbs to be updated. These are the only patches that will be updated. This field must not be used with other patch configurations."
                      ]
                    }
                  ],
                  [
                    "**yum**: Yum patching is performed by executing `yum update`. Additional options can be set to control how this is executed. Note that not all settings are supported on all platforms.",
                    {
                      "$ul": [
                        "**excludes**: List of packages to exclude from update. These packages are excluded by using the yum `--exclude` flag.",
                        "**exclusivePackages**: An exclusive list of packages to be updated. These are the only packages that will be updated. If these packages are not installed, they will be ignored. This field must not be specified with any other patch configuration fields.",
                        "**minimal**: Will cause patch to run `yum update-minimal` instead.",
                        "**security**: Adds the `--security` flag to `yum update`. Not supported on all platforms."
                      ]
                    }
                  ],
                  [
                    "**zypper**: Zypper patching is performed by running `zypper patch`. See also https://en.opensuse.org/SDB:Zypper_manual.",
                    {
                      "$ul": [
                        "**categories**: Install only patches with these categories. Common categories include security, recommended, and feature.",
                        "**excludes**: List of patches to exclude from update.",
                        "**exclusivePatches**: An exclusive list of patches to be updated. These are the only patches that will be installed using 'zypper patch patch:' command. This field must not be used with any other patch configuration fields.",
                        "**severities**: Install only patches with these severities. Common severities include critical, important, moderate, and low.",
                        "**withOptional**: Adds the `--with-optional` flag to `zypper patch`.",
                        "**withUpdate**: Adds the `--with-update` flag, to `zypper patch`."
                      ]
                    }
                  ]
                ]
              }
            ],
            [
              "**recurringSchedule**: Sets the time for recurring patch deployments.",
              {
                "$ul": [
                  "**endTime**: Optional. The end time at which a recurring patch deployment schedule is no longer active.",
                  "**frequency**: Required. The frequency unit of this recurring schedule.",
                  "**lastExecuteTime**: Output only. The time the last patch job ran successfully.",
                  [
                    "**monthly**: Represents a monthly schedule. An example of a valid monthly schedule is \"on the third Tuesday of the month\" or \"on the 15th of the month\".",
                    {
                      "$ul": [
                        "**monthDay**: Required. One day of the month. 1-31 indicates the 1st to the 31st day. -1 indicates the last day of the month. Months without the target day will be skipped. For example, a schedule to run \"every month on the 31st\" will not run in February, April, June, etc.",
                        [
                          "**weekDayOfMonth**: Represents one week day in a month. An example is \"the 4th Sunday\".",
                          {
                            "$ul": [
                              "**dayOfWeek**: Required. A day of the week.",
                              "**dayOffset**: Optional. Represents the number of days before or after the given week day of month that the patch deployment is scheduled for. For example if `week_ordinal` and `day_of_week` values point to the second day of the month and this `day_offset` value is set to `3`, the patch deployment takes place three days after the second Tuesday of the month. If this value is negative, for example -5, the patches are deployed five days before before the second Tuesday of the month. Allowed values are in range [-30, 30].",
                              "**weekOrdinal**: Required. Week number in a month. 1-4 indicates the 1st to 4th week of the month. -1 indicates the last week of the month."
                            ]
                          }
                        ]
                      ]
                    }
                  ],
                  "**nextExecuteTime**: Output only. The time the next patch job is scheduled to run.",
                  "**startTime**: Optional. The time that the recurring schedule becomes effective. Defaults to `create_time` of the patch deployment.",
                  [
                    "**timeOfDay**: Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.",
                    {
                      "$ul": [
                        "**hours**: Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \"24:00:00\" for scenarios like business closing time.",
                        "**minutes**: Minutes of hour of day. Must be from 0 to 59.",
                        "**nanos**: Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.",
                        "**seconds**: Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds."
                      ]
                    }
                  ],
                  [
                    "**timeZone**: Represents a time zone from the [IANA Time Zone Database](https://www.iana.org/time-zones).",
                    {
                      "$ul": [
                        "**id**: IANA Time Zone Database time zone, e.g. \"America/New_York\".",
                        "**version**: Optional. IANA Time Zone Database version number, e.g. \"2019a\"."
                      ]
                    }
                  ],
                  [
                    "**weekly**: Represents a weekly schedule.",
                    {
                      "$ul": [
                        "**dayOfWeek**: Required. Day of the week."
                      ]
                    }
                  ]
                ]
              }
            ],
            [
              "**rollout**: Patch rollout configuration specifications. Contains details on the concurrency control when applying patch(es) to all targeted VMs.",
              {
                "$ul": [
                  [
                    "**disruptionBudget**: Message encapsulating a value that can be either absolute (\"fixed\") or relative (\"percent\") to a value.",
                    {
                      "$ul": [
                        "**fixed**: Specifies a fixed value.",
                        "**percent**: Specifies the relative value defined as a percentage, which will be multiplied by a reference value."
                      ]
                    }
                  ],
                  "**mode**: Mode of the patch rollout."
                ]
              }
            ],
            "**state**: Output only. Current state of the patch deployment.",
            "**updateTime**: Output only. Time the patch deployment was last updated. Timestamp is in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
