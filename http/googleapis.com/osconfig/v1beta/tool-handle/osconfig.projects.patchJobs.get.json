{
  "name": "osconfig_projects_patchJobs_get",
  "description": "Get the patch job. This can be used to track the progress of an ongoing patch job or review the details of completed jobs.",
  "parameters": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "Required. Name of the patch in the form `projects/*/patchJobs/*`"
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      }
    },
    "required": [
      "name"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://osconfig.googleapis.com//v1beta/{name}{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A high level representation of a patch job that is either in progress or has completed. Instance details are not included in the job. To paginate through instance details, use `ListPatchJobInstanceDetails`. For more information about patch jobs, see [Creating patch jobs](https://cloud.google.com/compute/docs/os-patch-management/create-patch-job).",
        "**Key properties:**",
        {
          "$ul": [
            "**createTime**: Time this patch job was created.",
            "**description**: Description of the patch job. Length of the description is limited to 1024 characters.",
            "**displayName**: Display name for this patch job. This is not a unique identifier.",
            "**dryRun**: If this patch job is a dry run, the agent reports that it has finished without running any updates on the VM instance.",
            "**duration**: Duration of the patch job. After the duration ends, the patch job times out.",
            "**errorMessage**: If this patch job failed, this message provides information about the failure.",
            [
              "**instanceDetailsSummary**: A summary of the current patch state across all instances that this patch job affects. Contains counts of instances in different states. These states map to `InstancePatchState`. List patch job instance details to see the specific states of each instance.",
              {
                "$ul": [
                  "**ackedInstanceCount**: Number of instances that have acked and will start shortly.",
                  "**applyingPatchesInstanceCount**: Number of instances that are applying patches.",
                  "**downloadingPatchesInstanceCount**: Number of instances that are downloading patches.",
                  "**failedInstanceCount**: Number of instances that failed.",
                  "**inactiveInstanceCount**: Number of instances that are inactive.",
                  "**noAgentDetectedInstanceCount**: Number of instances that do not appear to be running the agent. Check to ensure that the agent is installed, running, and able to communicate with the service.",
                  "**notifiedInstanceCount**: Number of instances notified about patch job.",
                  "**pendingInstanceCount**: Number of instances pending patch job.",
                  "**postPatchStepInstanceCount**: Number of instances that are running the post-patch step.",
                  "**prePatchStepInstanceCount**: Number of instances that are running the pre-patch step.",
                  "**rebootingInstanceCount**: Number of instances rebooting.",
                  "**startedInstanceCount**: Number of instances that have started.",
                  "**succeededInstanceCount**: Number of instances that have completed successfully.",
                  "**succeededRebootRequiredInstanceCount**: Number of instances that require reboot.",
                  "**timedOutInstanceCount**: Number of instances that exceeded the time out while applying the patch."
                ]
              }
            ],
            [
              "**instanceFilter**: A filter to target VM instances for patching. The targeted VMs must meet all criteria specified. So if both labels and zones are specified, the patch job targets only VMs with those labels and in those zones.",
              {
                "$ul": [
                  "**all**: Target all VM instances in the project. If true, no other criteria is permitted.",
                  "**groupLabels**: Targets VM instances matching at least one of these label sets. This allows targeting of disparate groups, for example \"env=prod or env=staging\".",
                  "**instanceNamePrefixes**: Targets VMs whose name starts with one of these prefixes. Similar to labels, this is another way to group VMs when targeting configs, for example prefix=\"prod-\".",
                  "**instances**: Targets any of the VM instances specified. Instances are specified by their URI in the form `zones/[ZONE]/instances/[INSTANCE_NAME]`, `projects/[PROJECT_ID]/zones/[ZONE]/instances/[INSTANCE_NAME]`, or `https://www.googleapis.com/compute/v1/projects/[PROJECT_ID]/zones/[ZONE]/instances/[INSTANCE_NAME]`",
                  "**zones**: Targets VM instances in ANY of these zones. Leave empty to target VM instances in any zone."
                ]
              }
            ],
            "**name**: Unique identifier for this patch job in the form `projects/*/patchJobs/*`",
            [
              "**patchConfig**: Patch configuration specifications. Contains details on how to apply the patch(es) to a VM instance.",
              {
                "$ul": [
                  [
                    "**apt**: Apt patching is completed by executing `apt-get update && apt-get upgrade`. Additional options can be set to control how this is executed.",
                    {
                      "$ul": [
                        "**excludes**: List of packages to exclude from update. These packages will be excluded",
                        "**exclusivePackages**: An exclusive list of packages to be updated. These are the only packages that will be updated. If these packages are not installed, they will be ignored. This field cannot be specified with any other patch configuration fields.",
                        "**type**: By changing the type to DIST, the patching is performed using `apt-get dist-upgrade` instead."
                      ]
                    }
                  ],
                  "**goo**: Googet patching is performed by running `googet update`.",
                  "**migInstancesAllowed**: Allows the patch job to run on Managed instance groups (MIGs).",
                  [
                    "**postStep**: A step that runs an executable for a PatchJob.",
                    {
                      "$ul": [
                        [
                          "**linuxExecStepConfig**: Common configurations for an ExecStep.",
                          {
                            "$ul": [
                              "**allowedSuccessCodes**: Defaults to [0]. A list of possible return values that the execution can return to indicate a success.",
                              [
                                "**gcsObject**: Google Cloud Storage object representation.",
                                {
                                  "$ul": [
                                    "**bucket**: Required. Bucket of the Google Cloud Storage object.",
                                    "**generationNumber**: Required. Generation number of the Google Cloud Storage object. This is used to ensure that the ExecStep specified by this PatchJob does not change.",
                                    "**object**: Required. Name of the Google Cloud Storage object."
                                  ]
                                }
                              ],
                              "**interpreter**: The script interpreter to use to run the script. If no interpreter is specified the script will be executed directly, which will likely only succeed for scripts with [shebang lines] (https://en.wikipedia.org/wiki/Shebang_\\(Unix\\)).",
                              "**localPath**: An absolute path to the executable on the VM."
                            ]
                          }
                        ],
                        [
                          "**windowsExecStepConfig**: Common configurations for an ExecStep.",
                          {
                            "$ul": [
                              "**allowedSuccessCodes**: Defaults to [0]. A list of possible return values that the execution can return to indicate a success.",
                              [
                                "**gcsObject**: Google Cloud Storage object representation.",
                                {
                                  "$ul": [
                                    "**bucket**: Required. Bucket of the Google Cloud Storage object.",
                                    "**generationNumber**: Required. Generation number of the Google Cloud Storage object. This is used to ensure that the ExecStep specified by this PatchJob does not change.",
                                    "**object**: Required. Name of the Google Cloud Storage object."
                                  ]
                                }
                              ],
                              "**interpreter**: The script interpreter to use to run the script. If no interpreter is specified the script will be executed directly, which will likely only succeed for scripts with [shebang lines] (https://en.wikipedia.org/wiki/Shebang_\\(Unix\\)).",
                              "**localPath**: An absolute path to the executable on the VM."
                            ]
                          }
                        ]
                      ]
                    }
                  ],
                  [
                    "**preStep**: A step that runs an executable for a PatchJob.",
                    {
                      "$ul": [
                        [
                          "**linuxExecStepConfig**: Common configurations for an ExecStep.",
                          {
                            "$ul": [
                              "**allowedSuccessCodes**: Defaults to [0]. A list of possible return values that the execution can return to indicate a success.",
                              [
                                "**gcsObject**: Google Cloud Storage object representation.",
                                {
                                  "$ul": [
                                    "**bucket**: Required. Bucket of the Google Cloud Storage object.",
                                    "**generationNumber**: Required. Generation number of the Google Cloud Storage object. This is used to ensure that the ExecStep specified by this PatchJob does not change.",
                                    "**object**: Required. Name of the Google Cloud Storage object."
                                  ]
                                }
                              ],
                              "**interpreter**: The script interpreter to use to run the script. If no interpreter is specified the script will be executed directly, which will likely only succeed for scripts with [shebang lines] (https://en.wikipedia.org/wiki/Shebang_\\(Unix\\)).",
                              "**localPath**: An absolute path to the executable on the VM."
                            ]
                          }
                        ],
                        [
                          "**windowsExecStepConfig**: Common configurations for an ExecStep.",
                          {
                            "$ul": [
                              "**allowedSuccessCodes**: Defaults to [0]. A list of possible return values that the execution can return to indicate a success.",
                              [
                                "**gcsObject**: Google Cloud Storage object representation.",
                                {
                                  "$ul": [
                                    "**bucket**: Required. Bucket of the Google Cloud Storage object.",
                                    "**generationNumber**: Required. Generation number of the Google Cloud Storage object. This is used to ensure that the ExecStep specified by this PatchJob does not change.",
                                    "**object**: Required. Name of the Google Cloud Storage object."
                                  ]
                                }
                              ],
                              "**interpreter**: The script interpreter to use to run the script. If no interpreter is specified the script will be executed directly, which will likely only succeed for scripts with [shebang lines] (https://en.wikipedia.org/wiki/Shebang_\\(Unix\\)).",
                              "**localPath**: An absolute path to the executable on the VM."
                            ]
                          }
                        ]
                      ]
                    }
                  ],
                  "**rebootConfig**: Post-patch reboot settings.",
                  [
                    "**windowsUpdate**: Windows patching is performed using the Windows Update Agent.",
                    {
                      "$ul": [
                        "**classifications**: Only apply updates of these windows update classifications. If empty, all updates are applied.",
                        "**excludes**: List of KBs to exclude from update.",
                        "**exclusivePatches**: An exclusive list of kbs to be updated. These are the only patches that will be updated. This field must not be used with other patch configurations."
                      ]
                    }
                  ],
                  [
                    "**yum**: Yum patching is performed by executing `yum update`. Additional options can be set to control how this is executed. Note that not all settings are supported on all platforms.",
                    {
                      "$ul": [
                        "**excludes**: List of packages to exclude from update. These packages are excluded by using the yum `--exclude` flag.",
                        "**exclusivePackages**: An exclusive list of packages to be updated. These are the only packages that will be updated. If these packages are not installed, they will be ignored. This field must not be specified with any other patch configuration fields.",
                        "**minimal**: Will cause patch to run `yum update-minimal` instead.",
                        "**security**: Adds the `--security` flag to `yum update`. Not supported on all platforms."
                      ]
                    }
                  ],
                  [
                    "**zypper**: Zypper patching is performed by running `zypper patch`. See also https://en.opensuse.org/SDB:Zypper_manual.",
                    {
                      "$ul": [
                        "**categories**: Install only patches with these categories. Common categories include security, recommended, and feature.",
                        "**excludes**: List of patches to exclude from update.",
                        "**exclusivePatches**: An exclusive list of patches to be updated. These are the only patches that will be installed using 'zypper patch patch:' command. This field must not be used with any other patch configuration fields.",
                        "**severities**: Install only patches with these severities. Common severities include critical, important, moderate, and low.",
                        "**withOptional**: Adds the `--with-optional` flag to `zypper patch`.",
                        "**withUpdate**: Adds the `--with-update` flag, to `zypper patch`."
                      ]
                    }
                  ]
                ]
              }
            ],
            "**patchDeployment**: Output only. Name of the patch deployment that created this patch job.",
            "**percentComplete**: Reflects the overall progress of the patch job in the range of 0.0 being no progress to 100.0 being complete.",
            [
              "**rollout**: Patch rollout configuration specifications. Contains details on the concurrency control when applying patch(es) to all targeted VMs.",
              {
                "$ul": [
                  [
                    "**disruptionBudget**: Message encapsulating a value that can be either absolute (\"fixed\") or relative (\"percent\") to a value.",
                    {
                      "$ul": [
                        "**fixed**: Specifies a fixed value.",
                        "**percent**: Specifies the relative value defined as a percentage, which will be multiplied by a reference value."
                      ]
                    }
                  ],
                  "**mode**: Mode of the patch rollout."
                ]
              }
            ],
            "**state**: The current state of the PatchJob.",
            "**updateTime**: Last time this patch job was updated."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
