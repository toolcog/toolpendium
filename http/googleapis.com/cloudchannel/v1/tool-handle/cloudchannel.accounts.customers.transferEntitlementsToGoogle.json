{
  "name": "cloudchannel_accounts_customers_transferEntitlementsToGoogle",
  "description": "Transfers customer entitlements from their current reseller to Google. Possible error codes: * PERMISSION_DENIED: The customer doesn't belong to the reseller. * INVALID_ARGUMENT: Required request parameters are missing or invalid. * NOT_FOUND: The customer or offer resource was not found. * ALREADY_EXISTS: The SKU was already transferred for the customer. * CONDITION_NOT_MET or FAILED_PRECONDITION: * The SKU requires domain verification to transfer, but the domain is not verified. * An Add-On SKU (example, Vault or Drive) is missing the pre-requisite SKU (example, G Suite Basic). * (Developer accounts only) Reseller and resold domain must meet the following naming requirements: * Domain names must start with goog-test. * Domain names must include the reseller domain. * INTERNAL: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. * UNKNOWN: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. Return value: The ID of a long-running operation. To get the results of the operation, call the GetOperation method of CloudChannelOperationsService. The response will contain google.protobuf.Empty on success. The Operation metadata will contain an instance of OperationMetadata.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The resource name of the reseller's customer account where the entitlements transfer from. Parent uses the format: accounts/{account_id}/customers/{customer_id}"
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleCloudChannelV1TransferEntitlementsToGoogleRequest"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "GoogleCloudChannelV1TransferEntitlementsToGoogleRequest": {
        "description": "Request message for CloudChannelService.TransferEntitlementsToGoogle.",
        "properties": {
          "entitlements": {
            "description": "Required. The entitlements to transfer to Google.",
            "items": {
              "$ref": "#/$defs/GoogleCloudChannelV1Entitlement"
            },
            "type": "array"
          },
          "requestId": {
            "description": "Optional. You can specify an optional unique request ID, and if you need to retry your request, the server will know to ignore the request if it's complete. For example, you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if it received the original operation with the same request ID. If it did, it will ignore the second request. The request ID must be a valid [UUID](https://tools.ietf.org/html/rfc4122) with the exception that zero UUID is not supported (`00000000-0000-0000-0000-000000000000`).",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudChannelV1Entitlement": {
        "description": "An entitlement is a representation of a customer's ability to use a service.",
        "properties": {
          "associationInfo": {
            "$ref": "#/$defs/GoogleCloudChannelV1AssociationInfo"
          },
          "billingAccount": {
            "description": "Optional. The billing account resource name that is used to pay for this entitlement.",
            "type": "string"
          },
          "commitmentSettings": {
            "$ref": "#/$defs/GoogleCloudChannelV1CommitmentSettings"
          },
          "createTime": {
            "description": "Output only. The time at which the entitlement is created.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "Output only. Resource name of an entitlement in the form: accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}.",
            "readOnly": true,
            "type": "string"
          },
          "offer": {
            "description": "Required. The offer resource name for which the entitlement is to be created. Takes the form: accounts/{account_id}/offers/{offer_id}.",
            "type": "string"
          },
          "parameters": {
            "description": "Extended entitlement parameters. When creating an entitlement, valid parameter names and values are defined in the Offer.parameter_definitions. For Google Workspace, the following Parameters may be accepted as input: - max_units: The maximum assignable units for a flexible offer OR - num_units: The total commitment for commitment-based offers The response may additionally include the following output-only Parameters: - assigned_units: The number of licenses assigned to users. For Google Cloud billing subaccounts, the following Parameter may be accepted as input: - display_name: The display name of the billing subaccount.",
            "items": {
              "$ref": "#/$defs/GoogleCloudChannelV1Parameter"
            },
            "type": "array"
          },
          "provisionedService": {
            "$ref": "#/$defs/GoogleCloudChannelV1ProvisionedService"
          },
          "provisioningState": {
            "description": "Output only. Current provisioning state of the entitlement.",
            "enum": [
              "PROVISIONING_STATE_UNSPECIFIED",
              "ACTIVE",
              "SUSPENDED"
            ],
            "readOnly": true,
            "type": "string"
          },
          "purchaseOrderId": {
            "description": "Optional. This purchase order (PO) information is for resellers to use for their company tracking usage. If a purchaseOrderId value is given, it appears in the API responses and shows up in the invoice. The property accepts up to 80 plain text characters. This is only supported for Google Workspace entitlements.",
            "type": "string"
          },
          "suspensionReasons": {
            "description": "Output only. Enumerable of all current suspension reasons for an entitlement.",
            "items": {
              "enum": [
                "SUSPENSION_REASON_UNSPECIFIED",
                "RESELLER_INITIATED",
                "TRIAL_ENDED",
                "RENEWAL_WITH_TYPE_CANCEL",
                "PENDING_TOS_ACCEPTANCE",
                "OTHER"
              ],
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "trialSettings": {
            "$ref": "#/$defs/GoogleCloudChannelV1TrialSettings"
          },
          "updateTime": {
            "description": "Output only. The time at which the entitlement is updated.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudChannelV1AssociationInfo": {
        "description": "Association links that an entitlement has to other entitlements.",
        "properties": {
          "baseEntitlement": {
            "description": "The name of the base entitlement, for which this entitlement is an add-on.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudChannelV1CommitmentSettings": {
        "description": "Commitment settings for commitment-based offers.",
        "properties": {
          "endTime": {
            "description": "Output only. Commitment end timestamp.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "renewalSettings": {
            "$ref": "#/$defs/GoogleCloudChannelV1RenewalSettings"
          },
          "startTime": {
            "description": "Output only. Commitment start timestamp.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudChannelV1RenewalSettings": {
        "description": "Renewal settings for renewable Offers.",
        "properties": {
          "enableRenewal": {
            "description": "If false, the plan will be completed at the end date.",
            "type": "boolean"
          },
          "paymentCycle": {
            "$ref": "#/$defs/GoogleCloudChannelV1Period"
          },
          "paymentPlan": {
            "description": "Describes how a reseller will be billed.",
            "enum": [
              "PAYMENT_PLAN_UNSPECIFIED",
              "COMMITMENT",
              "FLEXIBLE",
              "FREE",
              "TRIAL",
              "OFFLINE"
            ],
            "type": "string"
          },
          "resizeUnitCount": {
            "description": "If true and enable_renewal = true, the unit (for example seats or licenses) will be set to the number of active units at renewal time.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GoogleCloudChannelV1Period": {
        "description": "Represents period in days/months/years.",
        "properties": {
          "duration": {
            "description": "Total duration of Period Type defined.",
            "format": "int32",
            "type": "integer"
          },
          "periodType": {
            "description": "Period Type.",
            "enum": [
              "PERIOD_TYPE_UNSPECIFIED",
              "DAY",
              "MONTH",
              "YEAR"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudChannelV1Parameter": {
        "description": "Definition for extended entitlement parameters.",
        "properties": {
          "editable": {
            "description": "Output only. Specifies whether this parameter is allowed to be changed. For example, for a Google Workspace Business Starter entitlement in commitment plan, num_units is editable when entitlement is active.",
            "readOnly": true,
            "type": "boolean"
          },
          "name": {
            "description": "Name of the parameter.",
            "type": "string"
          },
          "value": {
            "$ref": "#/$defs/GoogleCloudChannelV1Value"
          }
        },
        "type": "object"
      },
      "GoogleCloudChannelV1Value": {
        "description": "Data type and value of a parameter.",
        "properties": {
          "boolValue": {
            "description": "Represents a boolean value.",
            "type": "boolean"
          },
          "doubleValue": {
            "description": "Represents a double value.",
            "format": "double",
            "type": "number"
          },
          "int64Value": {
            "description": "Represents an int64 value.",
            "format": "int64",
            "type": "string"
          },
          "protoValue": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "description": "Represents an 'Any' proto value.",
            "type": "object"
          },
          "stringValue": {
            "description": "Represents a string value.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudChannelV1ProvisionedService": {
        "description": "Service provisioned for an entitlement.",
        "properties": {
          "productId": {
            "description": "Output only. The product pertaining to the provisioning resource as specified in the Offer.",
            "readOnly": true,
            "type": "string"
          },
          "provisioningId": {
            "description": "Output only. Provisioning ID of the entitlement. For Google Workspace, this is the underlying Subscription ID. For Google Cloud, this is the Billing Account ID of the billing subaccount.",
            "readOnly": true,
            "type": "string"
          },
          "skuId": {
            "description": "Output only. The SKU pertaining to the provisioning resource as specified in the Offer.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudChannelV1TrialSettings": {
        "description": "Settings for trial offers.",
        "properties": {
          "endTime": {
            "description": "Date when the trial ends. The value is in milliseconds using the UNIX Epoch format. See an example [Epoch converter](https://www.epochconverter.com).",
            "format": "google-datetime",
            "type": "string"
          },
          "trial": {
            "description": "Determines if the entitlement is in a trial or not: * `true` - The entitlement is in trial. * `false` - The entitlement is not in trial.",
            "type": "boolean"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://cloudchannel.googleapis.com//v1/{parent}:transferEntitlementsToGoogle{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "This resource represents a long-running operation that is the result of a network API call.",
        "**Key properties:**",
        {
          "$ul": [
            "**done**: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
            [
              "**error**: The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
              {
                "$ul": [
                  "**code**: The status code, which should be an enum value of google.rpc.Code.",
                  "**details**: A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                  "**message**: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                ]
              }
            ],
            "**metadata**: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
            "**name**: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
            "**response**: The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
