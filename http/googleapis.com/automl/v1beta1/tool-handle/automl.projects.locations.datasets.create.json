{
  "name": "automl_projects_locations_datasets_create",
  "description": "Creates a dataset.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The resource name of the project to create the dataset for."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/Dataset"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "Dataset": {
        "description": "A workspace for solving a single, particular machine learning (ML) problem. A workspace contains examples that may be annotated.",
        "properties": {
          "createTime": {
            "description": "Output only. Timestamp when this dataset was created.",
            "format": "google-datetime",
            "type": "string"
          },
          "description": {
            "description": "User-provided description of the dataset. The description can be up to 25000 characters long.",
            "type": "string"
          },
          "displayName": {
            "description": "Required. The name of the dataset to show in the interface. The name can be up to 32 characters long and can consist only of ASCII Latin letters A-Z and a-z, underscores (_), and ASCII digits 0-9.",
            "type": "string"
          },
          "etag": {
            "description": "Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
            "type": "string"
          },
          "exampleCount": {
            "description": "Output only. The number of examples in the dataset.",
            "format": "int32",
            "type": "integer"
          },
          "imageClassificationDatasetMetadata": {
            "$ref": "#/$defs/ImageClassificationDatasetMetadata"
          },
          "imageObjectDetectionDatasetMetadata": {
            "$ref": "#/$defs/ImageObjectDetectionDatasetMetadata"
          },
          "name": {
            "description": "Output only. The resource name of the dataset. Form: `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`",
            "type": "string"
          },
          "tablesDatasetMetadata": {
            "$ref": "#/$defs/TablesDatasetMetadata"
          },
          "textClassificationDatasetMetadata": {
            "$ref": "#/$defs/TextClassificationDatasetMetadata"
          },
          "textExtractionDatasetMetadata": {
            "$ref": "#/$defs/TextExtractionDatasetMetadata"
          },
          "textSentimentDatasetMetadata": {
            "$ref": "#/$defs/TextSentimentDatasetMetadata"
          },
          "translationDatasetMetadata": {
            "$ref": "#/$defs/TranslationDatasetMetadata"
          },
          "videoClassificationDatasetMetadata": {
            "$ref": "#/$defs/VideoClassificationDatasetMetadata"
          },
          "videoObjectTrackingDatasetMetadata": {
            "$ref": "#/$defs/VideoObjectTrackingDatasetMetadata"
          }
        },
        "type": "object"
      },
      "ImageClassificationDatasetMetadata": {
        "description": "Dataset metadata that is specific to image classification.",
        "properties": {
          "classificationType": {
            "description": "Required. Type of the classification problem.",
            "enum": [
              "CLASSIFICATION_TYPE_UNSPECIFIED",
              "MULTICLASS",
              "MULTILABEL"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "ImageObjectDetectionDatasetMetadata": {
        "description": "Dataset metadata specific to image object detection.",
        "properties": {},
        "type": "object"
      },
      "TablesDatasetMetadata": {
        "description": "Metadata for a dataset used for AutoML Tables.",
        "properties": {
          "mlUseColumnSpecId": {
            "description": "column_spec_id of the primary table column which specifies a possible ML use of the row, i.e. the column will be used to split the rows into TRAIN, VALIDATE and TEST sets. Required type: STRING. This column, if set, must either have all of `TRAIN`, `VALIDATE`, `TEST` among its values, or only have `TEST`, `UNASSIGNED` values. In the latter case the rows with `UNASSIGNED` value will be assigned by AutoML. Note that if a given ml use distribution makes it impossible to create a \"good\" model, that call will error describing the issue. If both this column_spec_id and primary table's time_column_spec_id are not set, then all rows are treated as `UNASSIGNED`. NOTE: Updates of this field will instantly affect any other users concurrently working with the dataset.",
            "type": "string"
          },
          "primaryTableSpecId": {
            "description": "Output only. The table_spec_id of the primary table of this dataset.",
            "type": "string"
          },
          "statsUpdateTime": {
            "description": "Output only. The most recent timestamp when target_column_correlations field and all descendant ColumnSpec.data_stats and ColumnSpec.top_correlated_columns fields were last (re-)generated. Any changes that happened to the dataset afterwards are not reflected in these fields values. The regeneration happens in the background on a best effort basis.",
            "format": "google-datetime",
            "type": "string"
          },
          "targetColumnCorrelations": {
            "additionalProperties": {
              "$ref": "#/$defs/CorrelationStats"
            },
            "description": "Output only. Correlations between TablesDatasetMetadata.target_column_spec_id, and other columns of the TablesDatasetMetadataprimary_table. Only set if the target column is set. Mapping from other column spec id to its CorrelationStats with the target column. This field may be stale, see the stats_update_time field for for the timestamp at which these stats were last updated.",
            "type": "object"
          },
          "targetColumnSpecId": {
            "description": "column_spec_id of the primary table's column that should be used as the training & prediction target. This column must be non-nullable and have one of following data types (otherwise model creation will error): * CATEGORY * FLOAT64 If the type is CATEGORY , only up to 100 unique values may exist in that column across all rows. NOTE: Updates of this field will instantly affect any other users concurrently working with the dataset.",
            "type": "string"
          },
          "weightColumnSpecId": {
            "description": "column_spec_id of the primary table's column that should be used as the weight column, i.e. the higher the value the more important the row will be during model training. Required type: FLOAT64. Allowed values: 0 to 10000, inclusive on both ends; 0 means the row is ignored for training. If not set all rows are assumed to have equal weight of 1. NOTE: Updates of this field will instantly affect any other users concurrently working with the dataset.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CorrelationStats": {
        "description": "A correlation statistics between two series of DataType values. The series may have differing DataType-s, but within a single series the DataType must be the same.",
        "properties": {
          "cramersV": {
            "description": "The correlation value using the Cramer's V measure.",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "TextClassificationDatasetMetadata": {
        "description": "Dataset metadata for classification.",
        "properties": {
          "classificationType": {
            "description": "Required. Type of the classification problem.",
            "enum": [
              "CLASSIFICATION_TYPE_UNSPECIFIED",
              "MULTICLASS",
              "MULTILABEL"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "TextExtractionDatasetMetadata": {
        "description": "Dataset metadata that is specific to text extraction",
        "properties": {},
        "type": "object"
      },
      "TextSentimentDatasetMetadata": {
        "description": "Dataset metadata for text sentiment.",
        "properties": {
          "sentimentMax": {
            "description": "Required. A sentiment is expressed as an integer ordinal, where higher value means a more positive sentiment. The range of sentiments that will be used is between 0 and sentiment_max (inclusive on both ends), and all the values in the range must be represented in the dataset before a model can be created. sentiment_max value must be between 1 and 10 (inclusive).",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TranslationDatasetMetadata": {
        "description": "Dataset metadata that is specific to translation.",
        "properties": {
          "sourceLanguageCode": {
            "description": "Required. The BCP-47 language code of the source language.",
            "type": "string"
          },
          "targetLanguageCode": {
            "description": "Required. The BCP-47 language code of the target language.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "VideoClassificationDatasetMetadata": {
        "description": "Dataset metadata specific to video classification. All Video Classification datasets are treated as multi label.",
        "properties": {},
        "type": "object"
      },
      "VideoObjectTrackingDatasetMetadata": {
        "description": "Dataset metadata specific to video object tracking.",
        "properties": {},
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://automl.googleapis.com//v1beta1/{parent}/datasets{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A workspace for solving a single, particular machine learning (ML) problem. A workspace contains examples that may be annotated.",
        "**Key properties:**",
        {
          "$ul": [
            "**createTime**: Output only. Timestamp when this dataset was created.",
            "**description**: User-provided description of the dataset. The description can be up to 25000 characters long.",
            "**displayName**: Required. The name of the dataset to show in the interface. The name can be up to 32 characters long and can consist only of ASCII Latin letters A-Z and a-z, underscores (_), and ASCII digits 0-9.",
            "**etag**: Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
            "**exampleCount**: Output only. The number of examples in the dataset.",
            [
              "**imageClassificationDatasetMetadata**: Dataset metadata that is specific to image classification.",
              {
                "$ul": [
                  "**classificationType**: Required. Type of the classification problem."
                ]
              }
            ],
            "**imageObjectDetectionDatasetMetadata**: Dataset metadata specific to image object detection.",
            "**name**: Output only. The resource name of the dataset. Form: `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`",
            [
              "**tablesDatasetMetadata**: Metadata for a dataset used for AutoML Tables.",
              {
                "$ul": [
                  "**mlUseColumnSpecId**: column_spec_id of the primary table column which specifies a possible ML use of the row, i.e. the column will be used to split the rows into TRAIN, VALIDATE and TEST sets. Required type: STRING. This column, if set, must either have all of `TRAIN`, `VALIDATE`, `TEST` among its values, or only have `TEST`, `UNASSIGNED` values. In the latter case the rows with `UNASSIGNED` value will be assigned by AutoML. Note that if a given ml use distribution makes it impossible to create a \"good\" model, that call will error describing the issue. If both this column_spec_id and primary table's time_column_spec_id are not set, then all rows are treated as `UNASSIGNED`. NOTE: Updates of this field will instantly affect any other users concurrently working with the dataset.",
                  "**primaryTableSpecId**: Output only. The table_spec_id of the primary table of this dataset.",
                  "**statsUpdateTime**: Output only. The most recent timestamp when target_column_correlations field and all descendant ColumnSpec.data_stats and ColumnSpec.top_correlated_columns fields were last (re-)generated. Any changes that happened to the dataset afterwards are not reflected in these fields values. The regeneration happens in the background on a best effort basis.",
                  "**targetColumnCorrelations**: Output only. Correlations between TablesDatasetMetadata.target_column_spec_id, and other columns of the TablesDatasetMetadataprimary_table. Only set if the target column is set. Mapping from other column spec id to its CorrelationStats with the target column. This field may be stale, see the stats_update_time field for for the timestamp at which these stats were last updated.",
                  "**targetColumnSpecId**: column_spec_id of the primary table's column that should be used as the training & prediction target. This column must be non-nullable and have one of following data types (otherwise model creation will error): * CATEGORY * FLOAT64 If the type is CATEGORY , only up to 100 unique values may exist in that column across all rows. NOTE: Updates of this field will instantly affect any other users concurrently working with the dataset.",
                  "**weightColumnSpecId**: column_spec_id of the primary table's column that should be used as the weight column, i.e. the higher the value the more important the row will be during model training. Required type: FLOAT64. Allowed values: 0 to 10000, inclusive on both ends; 0 means the row is ignored for training. If not set all rows are assumed to have equal weight of 1. NOTE: Updates of this field will instantly affect any other users concurrently working with the dataset."
                ]
              }
            ],
            [
              "**textClassificationDatasetMetadata**: Dataset metadata for classification.",
              {
                "$ul": [
                  "**classificationType**: Required. Type of the classification problem."
                ]
              }
            ],
            "**textExtractionDatasetMetadata**: Dataset metadata that is specific to text extraction",
            [
              "**textSentimentDatasetMetadata**: Dataset metadata for text sentiment.",
              {
                "$ul": [
                  "**sentimentMax**: Required. A sentiment is expressed as an integer ordinal, where higher value means a more positive sentiment. The range of sentiments that will be used is between 0 and sentiment_max (inclusive on both ends), and all the values in the range must be represented in the dataset before a model can be created. sentiment_max value must be between 1 and 10 (inclusive)."
                ]
              }
            ],
            [
              "**translationDatasetMetadata**: Dataset metadata that is specific to translation.",
              {
                "$ul": [
                  "**sourceLanguageCode**: Required. The BCP-47 language code of the source language.",
                  "**targetLanguageCode**: Required. The BCP-47 language code of the target language."
                ]
              }
            ],
            "**videoClassificationDatasetMetadata**: Dataset metadata specific to video classification. All Video Classification datasets are treated as multi label.",
            "**videoObjectTrackingDatasetMetadata**: Dataset metadata specific to video object tracking."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
