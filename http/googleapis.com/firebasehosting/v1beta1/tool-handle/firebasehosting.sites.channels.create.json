{
  "name": "firebasehosting_sites_channels_create",
  "description": "Creates a new channel in the specified site.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The site in which to create this channel, in the format: sites/ SITE_ID"
      },
      "channelId": {
        "type": "string",
        "description": "Required. Immutable. A unique ID within the site that identifies the channel."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/Channel"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "Channel": {
        "description": "A `Channel` represents a stream of releases for a site. All sites have a default `live` channel that serves content to the Firebase-provided subdomains and any connected custom domains.",
        "properties": {
          "createTime": {
            "description": "Output only. The time at which the channel was created.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "expireTime": {
            "description": "The time at which the channel will be automatically deleted. If null, the channel will not be automatically deleted. This field is present in the output whether it's set directly or via the `ttl` field.",
            "format": "google-datetime",
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Text labels used for extra metadata and/or filtering.",
            "type": "object"
          },
          "name": {
            "description": "The fully-qualified resource name for the channel, in the format: sites/ SITE_ID/channels/CHANNEL_ID",
            "type": "string"
          },
          "release": {
            "$ref": "#/$defs/Release"
          },
          "retainedReleaseCount": {
            "description": "The number of previous releases to retain on the channel for rollback or other purposes. Must be a number between 1-100. Defaults to 10 for new channels.",
            "format": "int32",
            "type": "integer"
          },
          "ttl": {
            "description": "Input only. A time-to-live for this channel. Sets `expire_time` to the provided duration past the time of the request.",
            "format": "google-duration",
            "type": "string"
          },
          "updateTime": {
            "description": "Output only. The time at which the channel was last updated.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "url": {
            "description": "Output only. The URL at which the content of this channel's current release can be viewed. This URL is a Firebase-provided subdomain of `web.app`. The content of this channel's current release can also be viewed at the Firebase-provided subdomain of `firebaseapp.com`. If this channel is the `live` channel for the Hosting site, then the content of this channel's current release can also be viewed at any connected custom domains.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "Release": {
        "description": " A `Release` is a particular [collection of configurations and files](sites.versions) that is set to be public at a particular time.",
        "properties": {
          "message": {
            "description": "The deploy description when the release was created. The value can be up to 512 characters.",
            "type": "string"
          },
          "name": {
            "description": "Output only. The unique identifier for the release, in either of the following formats: - sites/SITE_ID/releases/RELEASE_ID - sites/SITE_ID/channels/CHANNEL_ID/releases/RELEASE_ID This name is provided in the response body when you call [`releases.create`](sites.releases/create) or [`channels.releases.create`](sites.channels.releases/create).",
            "type": "string"
          },
          "releaseTime": {
            "description": "Output only. The time at which the version is set to be public.",
            "format": "google-datetime",
            "type": "string"
          },
          "releaseUser": {
            "$ref": "#/$defs/ActingUser"
          },
          "type": {
            "description": "Explains the reason for the release. Specify a value for this field only when creating a `SITE_DISABLE` type release.",
            "enum": [
              "TYPE_UNSPECIFIED",
              "DEPLOY",
              "ROLLBACK",
              "SITE_DISABLE"
            ],
            "type": "string"
          },
          "version": {
            "$ref": "#/$defs/Version"
          }
        },
        "type": "object"
      },
      "ActingUser": {
        "description": "Contains metadata about the user who performed an action, such as creating a release or finalizing a version.",
        "properties": {
          "email": {
            "description": "The email address of the user when the user performed the action.",
            "type": "string"
          },
          "imageUrl": {
            "description": "A profile image URL for the user. May not be present if the user has changed their email address or deleted their account.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Version": {
        "description": "A `Version` is a configuration and a collection of static files which determine how a site is displayed.",
        "properties": {
          "config": {
            "$ref": "#/$defs/ServingConfig"
          },
          "createTime": {
            "description": "Output only. The time at which the version was created.",
            "format": "google-datetime",
            "type": "string"
          },
          "createUser": {
            "$ref": "#/$defs/ActingUser"
          },
          "deleteTime": {
            "description": "Output only. The time at which the version was `DELETED`.",
            "format": "google-datetime",
            "type": "string"
          },
          "deleteUser": {
            "$ref": "#/$defs/ActingUser"
          },
          "fileCount": {
            "description": "Output only. The total number of files associated with the version. This value is calculated after a version is `FINALIZED`.",
            "format": "int64",
            "type": "string"
          },
          "finalizeTime": {
            "description": "Output only. The time at which the version was `FINALIZED`.",
            "format": "google-datetime",
            "type": "string"
          },
          "finalizeUser": {
            "$ref": "#/$defs/ActingUser"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The labels used for extra metadata and/or filtering.",
            "type": "object"
          },
          "name": {
            "description": "The fully-qualified resource name for the version, in the format: sites/ SITE_ID/versions/VERSION_ID This name is provided in the response body when you call [`CreateVersion`](sites.versions/create).",
            "type": "string"
          },
          "status": {
            "description": "The deploy status of the version. For a successful deploy, call [`CreateVersion`](sites.versions/create) to make a new version (`CREATED` status), [upload all desired files](sites.versions/populateFiles) to the version, then [update](sites.versions/patch) the version to the `FINALIZED` status. Note that if you leave the version in the `CREATED` state for more than 12 hours, the system will automatically mark the version as `ABANDONED`. You can also change the status of a version to `DELETED` by calling [`DeleteVersion`](sites.versions/delete).",
            "enum": [
              "VERSION_STATUS_UNSPECIFIED",
              "CREATED",
              "FINALIZED",
              "DELETED",
              "ABANDONED",
              "EXPIRED",
              "CLONING"
            ],
            "type": "string"
          },
          "versionBytes": {
            "description": "Output only. The total stored bytesize of the version. This value is calculated after a version is `FINALIZED`.",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServingConfig": {
        "description": "The configuration for how incoming requests to a site should be routed and processed before serving content. The URL request paths are matched against the specified URL patterns in the configuration, then Hosting applies the applicable configuration according to a specific [priority order](https://firebase.google.com/docs/hosting/full-config#hosting_priority_order).",
        "properties": {
          "appAssociation": {
            "description": "How to handle well known App Association files.",
            "enum": [
              "AUTO",
              "NONE"
            ],
            "type": "string"
          },
          "cleanUrls": {
            "description": "Defines whether to drop the file extension from uploaded files.",
            "type": "boolean"
          },
          "headers": {
            "description": "An array of objects, where each object specifies a URL pattern that, if matched to the request URL path, triggers Hosting to apply the specified custom response headers.",
            "items": {
              "$ref": "#/$defs/Header"
            },
            "type": "array"
          },
          "i18n": {
            "$ref": "#/$defs/I18nConfig"
          },
          "redirects": {
            "description": "An array of objects (called redirect rules), where each rule specifies a URL pattern that, if matched to the request URL path, triggers Hosting to respond with a redirect to the specified destination path.",
            "items": {
              "$ref": "#/$defs/Redirect"
            },
            "type": "array"
          },
          "rewrites": {
            "description": "An array of objects (called rewrite rules), where each rule specifies a URL pattern that, if matched to the request URL path, triggers Hosting to respond as if the service were given the specified destination URL.",
            "items": {
              "$ref": "#/$defs/Rewrite"
            },
            "type": "array"
          },
          "trailingSlashBehavior": {
            "description": "Defines how to handle a trailing slash in the URL path.",
            "enum": [
              "TRAILING_SLASH_BEHAVIOR_UNSPECIFIED",
              "ADD",
              "REMOVE"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "Header": {
        "description": "A [`Header`](https://firebase.google.com/docs/hosting/full-config#headers) specifies a URL pattern that, if matched to the request URL path, triggers Hosting to apply the specified custom response headers.",
        "properties": {
          "glob": {
            "description": "The user-supplied [glob](https://firebase.google.com/docs/hosting/full-config#glob_pattern_matching) to match against the request URL path.",
            "type": "string"
          },
          "headers": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Required. The additional headers to add to the response.",
            "type": "object"
          },
          "regex": {
            "description": "The user-supplied RE2 regular expression to match against the request URL path.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "I18nConfig": {
        "description": "If provided, i18n rewrites are enabled.",
        "properties": {
          "root": {
            "description": "Required. The user-supplied path where country and language specific content will be looked for within the public directory.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Redirect": {
        "description": "A [`Redirect`](https://firebase.google.com/docs/hosting/full-config#redirects) specifies a URL pattern that, if matched to the request URL path, triggers Hosting to respond with a redirect to the specified destination path.",
        "properties": {
          "glob": {
            "description": "The user-supplied [glob](https://firebase.google.com/docs/hosting/full-config#glob_pattern_matching) to match against the request URL path.",
            "type": "string"
          },
          "location": {
            "description": "Required. The value to put in the HTTP location header of the response. The location can contain capture group values from the pattern using a `:` prefix to identify the segment and an optional `*` to capture the rest of the URL. For example: \"glob\": \"/:capture*\", \"statusCode\": 301, \"location\": \"https://example.com/foo/:capture\"",
            "type": "string"
          },
          "regex": {
            "description": "The user-supplied RE2 regular expression to match against the request URL path.",
            "type": "string"
          },
          "statusCode": {
            "description": "Required. The status HTTP code to return in the response. It must be a valid 3xx status code.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Rewrite": {
        "description": "A [`Rewrite`](https://firebase.google.com/docs/hosting/full-config#rewrites) specifies a URL pattern that, if matched to the request URL path, triggers Hosting to respond as if the service were given the specified destination URL.",
        "properties": {
          "dynamicLinks": {
            "description": "The request will be forwarded to Firebase Dynamic Links.",
            "type": "boolean"
          },
          "function": {
            "description": "The function to proxy requests to. Must match the exported function name exactly.",
            "type": "string"
          },
          "functionRegion": {
            "description": "Optional. Specify a Cloud region for rewritten Functions invocations. If not provided, defaults to us-central1.",
            "type": "string"
          },
          "glob": {
            "description": "The user-supplied [glob](https://firebase.google.com/docs/hosting/full-config#glob_pattern_matching) to match against the request URL path.",
            "type": "string"
          },
          "path": {
            "description": "The URL path to rewrite the request to.",
            "type": "string"
          },
          "regex": {
            "description": "The user-supplied RE2 regular expression to match against the request URL path.",
            "type": "string"
          },
          "run": {
            "$ref": "#/$defs/CloudRunRewrite"
          }
        },
        "type": "object"
      },
      "CloudRunRewrite": {
        "description": "A configured rewrite that directs requests to a Cloud Run service. If the Cloud Run service does not exist when setting or updating your Firebase Hosting configuration, then the request fails. Any errors from the Cloud Run service are passed to the end user (for example, if you delete a service, any requests directed to that service receive a `404` error).",
        "properties": {
          "region": {
            "description": "Optional. User-provided region where the Cloud Run service is hosted. Defaults to `us-central1` if not supplied.",
            "type": "string"
          },
          "serviceId": {
            "description": "Required. User-defined ID of the Cloud Run service.",
            "type": "string"
          },
          "tag": {
            "description": "Optional. User-provided TrafficConfig tag to send traffic to. When omitted, traffic is sent to the service-wide URI",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://firebasehosting.googleapis.com//v1beta1/{parent}/channels{?channelId,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A `Channel` represents a stream of releases for a site. All sites have a default `live` channel that serves content to the Firebase-provided subdomains and any connected custom domains.",
        "**Key properties:**",
        {
          "$ul": [
            "**createTime**: Output only. The time at which the channel was created.",
            "**expireTime**: The time at which the channel will be automatically deleted. If null, the channel will not be automatically deleted. This field is present in the output whether it's set directly or via the `ttl` field.",
            "**labels**: Text labels used for extra metadata and/or filtering.",
            "**name**: The fully-qualified resource name for the channel, in the format: sites/ SITE_ID/channels/CHANNEL_ID",
            [
              "**release**:  A `Release` is a particular [collection of configurations and files](sites.versions) that is set to be public at a particular time.",
              {
                "$ul": [
                  "**message**: The deploy description when the release was created. The value can be up to 512 characters.",
                  "**name**: Output only. The unique identifier for the release, in either of the following formats: - sites/SITE_ID/releases/RELEASE_ID - sites/SITE_ID/channels/CHANNEL_ID/releases/RELEASE_ID This name is provided in the response body when you call [`releases.create`](sites.releases/create) or [`channels.releases.create`](sites.channels.releases/create).",
                  "**releaseTime**: Output only. The time at which the version is set to be public.",
                  [
                    "**releaseUser**: Contains metadata about the user who performed an action, such as creating a release or finalizing a version.",
                    {
                      "$ul": [
                        "**email**: The email address of the user when the user performed the action.",
                        "**imageUrl**: A profile image URL for the user. May not be present if the user has changed their email address or deleted their account."
                      ]
                    }
                  ],
                  "**type**: Explains the reason for the release. Specify a value for this field only when creating a `SITE_DISABLE` type release.",
                  [
                    "**version**: A `Version` is a configuration and a collection of static files which determine how a site is displayed.",
                    {
                      "$ul": [
                        [
                          "**config**: The configuration for how incoming requests to a site should be routed and processed before serving content. The URL request paths are matched against the specified URL patterns in the configuration, then Hosting applies the applicable configuration according to a specific [priority order](https://firebase.google.com/docs/hosting/full-config#hosting_priority_order).",
                          {
                            "$ul": [
                              "**appAssociation**: How to handle well known App Association files.",
                              "**cleanUrls**: Defines whether to drop the file extension from uploaded files.",
                              "**headers**: An array of objects, where each object specifies a URL pattern that, if matched to the request URL path, triggers Hosting to apply the specified custom response headers.",
                              [
                                "**i18n**: If provided, i18n rewrites are enabled.",
                                {
                                  "$ul": [
                                    "**root**: Required. The user-supplied path where country and language specific content will be looked for within the public directory."
                                  ]
                                }
                              ],
                              "**redirects**: An array of objects (called redirect rules), where each rule specifies a URL pattern that, if matched to the request URL path, triggers Hosting to respond with a redirect to the specified destination path.",
                              "**rewrites**: An array of objects (called rewrite rules), where each rule specifies a URL pattern that, if matched to the request URL path, triggers Hosting to respond as if the service were given the specified destination URL.",
                              "**trailingSlashBehavior**: Defines how to handle a trailing slash in the URL path."
                            ]
                          }
                        ],
                        "**createTime**: Output only. The time at which the version was created.",
                        [
                          "**createUser**: Contains metadata about the user who performed an action, such as creating a release or finalizing a version.",
                          {
                            "$ul": [
                              "**email**: The email address of the user when the user performed the action.",
                              "**imageUrl**: A profile image URL for the user. May not be present if the user has changed their email address or deleted their account."
                            ]
                          }
                        ],
                        "**deleteTime**: Output only. The time at which the version was `DELETED`.",
                        [
                          "**deleteUser**: Contains metadata about the user who performed an action, such as creating a release or finalizing a version.",
                          {
                            "$ul": [
                              "**email**: The email address of the user when the user performed the action.",
                              "**imageUrl**: A profile image URL for the user. May not be present if the user has changed their email address or deleted their account."
                            ]
                          }
                        ],
                        "**fileCount**: Output only. The total number of files associated with the version. This value is calculated after a version is `FINALIZED`.",
                        "**finalizeTime**: Output only. The time at which the version was `FINALIZED`.",
                        [
                          "**finalizeUser**: Contains metadata about the user who performed an action, such as creating a release or finalizing a version.",
                          {
                            "$ul": [
                              "**email**: The email address of the user when the user performed the action.",
                              "**imageUrl**: A profile image URL for the user. May not be present if the user has changed their email address or deleted their account."
                            ]
                          }
                        ],
                        "**labels**: The labels used for extra metadata and/or filtering.",
                        "**name**: The fully-qualified resource name for the version, in the format: sites/ SITE_ID/versions/VERSION_ID This name is provided in the response body when you call [`CreateVersion`](sites.versions/create).",
                        "**status**: The deploy status of the version. For a successful deploy, call [`CreateVersion`](sites.versions/create) to make a new version (`CREATED` status), [upload all desired files](sites.versions/populateFiles) to the version, then [update](sites.versions/patch) the version to the `FINALIZED` status. Note that if you leave the version in the `CREATED` state for more than 12 hours, the system will automatically mark the version as `ABANDONED`. You can also change the status of a version to `DELETED` by calling [`DeleteVersion`](sites.versions/delete).",
                        "**versionBytes**: Output only. The total stored bytesize of the version. This value is calculated after a version is `FINALIZED`."
                      ]
                    }
                  ]
                ]
              }
            ],
            "**retainedReleaseCount**: The number of previous releases to retain on the channel for rollback or other purposes. Must be a number between 1-100. Defaults to 10 for new channels.",
            "**ttl**: Input only. A time-to-live for this channel. Sets `expire_time` to the provided duration past the time of the request.",
            "**updateTime**: Output only. The time at which the channel was last updated.",
            "**url**: Output only. The URL at which the content of this channel's current release can be viewed. This URL is a Firebase-provided subdomain of `web.app`. The content of this channel's current release can also be viewed at the Firebase-provided subdomain of `firebaseapp.com`. If this channel is the `live` channel for the Hosting site, then the content of this channel's current release can also be viewed at any connected custom domains."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
