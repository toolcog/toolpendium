{
  "name": "firebasehosting_sites_domains_create",
  "description": "Creates a domain mapping on the specified site.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The parent to create the domain association for, in the format: sites/site-name"
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/Domain"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "Domain": {
        "description": "The intended behavior and status information of a domain.",
        "properties": {
          "domainName": {
            "description": "Required. The domain name of the association.",
            "type": "string"
          },
          "domainRedirect": {
            "$ref": "#/$defs/DomainRedirect"
          },
          "provisioning": {
            "$ref": "#/$defs/DomainProvisioning"
          },
          "site": {
            "description": "Required. The site name of the association.",
            "type": "string"
          },
          "status": {
            "description": "Output only. Additional status of the domain association.",
            "enum": [
              "DOMAIN_STATUS_UNSPECIFIED",
              "DOMAIN_CHANGE_PENDING",
              "DOMAIN_ACTIVE",
              "DOMAIN_VERIFICATION_REQUIRED",
              "DOMAIN_VERIFICATION_LOST"
            ],
            "type": "string",
            "x-enumDeprecated": [
              false,
              true,
              false,
              false,
              false
            ]
          },
          "updateTime": {
            "description": "Output only. The time at which the domain was last updated.",
            "format": "google-datetime",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DomainRedirect": {
        "description": "Defines the behavior of a domain-level redirect. Domain redirects preserve the path of the redirect but replace the requested domain with the one specified in the redirect configuration.",
        "properties": {
          "domainName": {
            "description": "Required. The domain name to redirect to.",
            "type": "string"
          },
          "type": {
            "description": "Required. The redirect status code.",
            "enum": [
              "REDIRECT_TYPE_UNSPECIFIED",
              "MOVED_PERMANENTLY"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "DomainProvisioning": {
        "description": "The current certificate provisioning status information for a domain.",
        "properties": {
          "certChallengeDiscoveredTxt": {
            "description": "The TXT records (for the certificate challenge) that were found at the last DNS fetch.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "certChallengeDns": {
            "$ref": "#/$defs/CertDnsChallenge"
          },
          "certChallengeHttp": {
            "$ref": "#/$defs/CertHttpChallenge"
          },
          "certStatus": {
            "description": "The certificate provisioning status; updated when Firebase Hosting provisions an SSL certificate for the domain.",
            "enum": [
              "CERT_STATUS_UNSPECIFIED",
              "CERT_PENDING",
              "CERT_MISSING",
              "CERT_PROCESSING",
              "CERT_PROPAGATING",
              "CERT_ACTIVE",
              "CERT_ERROR"
            ],
            "type": "string"
          },
          "discoveredIps": {
            "description": "The IPs found at the last DNS fetch.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "dnsFetchTime": {
            "description": "The time at which the last DNS fetch occurred.",
            "format": "google-datetime",
            "type": "string"
          },
          "dnsStatus": {
            "description": "The DNS record match status as of the last DNS fetch.",
            "enum": [
              "DNS_STATUS_UNSPECIFIED",
              "DNS_PENDING",
              "DNS_MISSING",
              "DNS_PARTIAL_MATCH",
              "DNS_MATCH",
              "DNS_EXTRANEOUS_MATCH"
            ],
            "type": "string"
          },
          "expectedIps": {
            "description": "The list of IPs to which the domain is expected to resolve.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "CertDnsChallenge": {
        "description": "Represents a DNS certificate challenge.",
        "properties": {
          "domainName": {
            "description": "The domain name upon which the DNS challenge must be satisfied.",
            "type": "string"
          },
          "token": {
            "description": "The value that must be present as a TXT record on the domain name to satisfy the challenge.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CertHttpChallenge": {
        "description": "Represents an HTTP certificate challenge.",
        "properties": {
          "path": {
            "description": "The URL path on which to serve the specified token to satisfy the certificate challenge.",
            "type": "string"
          },
          "token": {
            "description": "The token to serve at the specified URL path to satisfy the certificate challenge.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://firebasehosting.googleapis.com//v1beta1/{parent}/domains{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The intended behavior and status information of a domain.",
        "**Key properties:**",
        {
          "$ul": [
            "**domainName**: Required. The domain name of the association.",
            [
              "**domainRedirect**: Defines the behavior of a domain-level redirect. Domain redirects preserve the path of the redirect but replace the requested domain with the one specified in the redirect configuration.",
              {
                "$ul": [
                  "**domainName**: Required. The domain name to redirect to.",
                  "**type**: Required. The redirect status code."
                ]
              }
            ],
            [
              "**provisioning**: The current certificate provisioning status information for a domain.",
              {
                "$ul": [
                  "**certChallengeDiscoveredTxt**: The TXT records (for the certificate challenge) that were found at the last DNS fetch.",
                  [
                    "**certChallengeDns**: Represents a DNS certificate challenge.",
                    {
                      "$ul": [
                        "**domainName**: The domain name upon which the DNS challenge must be satisfied.",
                        "**token**: The value that must be present as a TXT record on the domain name to satisfy the challenge."
                      ]
                    }
                  ],
                  [
                    "**certChallengeHttp**: Represents an HTTP certificate challenge.",
                    {
                      "$ul": [
                        "**path**: The URL path on which to serve the specified token to satisfy the certificate challenge.",
                        "**token**: The token to serve at the specified URL path to satisfy the certificate challenge."
                      ]
                    }
                  ],
                  "**certStatus**: The certificate provisioning status; updated when Firebase Hosting provisions an SSL certificate for the domain.",
                  "**discoveredIps**: The IPs found at the last DNS fetch.",
                  "**dnsFetchTime**: The time at which the last DNS fetch occurred.",
                  "**dnsStatus**: The DNS record match status as of the last DNS fetch.",
                  "**expectedIps**: The list of IPs to which the domain is expected to resolve."
                ]
              }
            ],
            "**site**: Required. The site name of the association.",
            "**status**: Output only. Additional status of the domain association.",
            "**updateTime**: Output only. The time at which the domain was last updated."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
