{
  "name": "datastream_projects_locations_connectionProfiles_discover",
  "description": "Use this method to discover a connection profile. The discover API call exposes the data objects and metadata belonging to the profile. Typically, a request returns children data objects of a parent data object that's optionally supplied in the request.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The parent resource of the connection profile type. Must be in the format `projects/*/locations/*`."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/DiscoverConnectionProfileRequest"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "DiscoverConnectionProfileRequest": {
        "description": "Request message for 'discover' ConnectionProfile request.",
        "properties": {
          "connectionProfile": {
            "$ref": "#/$defs/ConnectionProfile"
          },
          "connectionProfileName": {
            "description": "A reference to an existing connection profile.",
            "type": "string"
          },
          "fullHierarchy": {
            "description": "Whether to retrieve the full hierarchy of data objects (TRUE) or only the current level (FALSE).",
            "type": "boolean"
          },
          "hierarchyDepth": {
            "description": "The number of hierarchy levels below the current level to be retrieved.",
            "format": "int32",
            "type": "integer"
          },
          "mysqlRdbms": {
            "$ref": "#/$defs/MysqlRdbms"
          },
          "oracleRdbms": {
            "$ref": "#/$defs/OracleRdbms"
          },
          "postgresqlRdbms": {
            "$ref": "#/$defs/PostgresqlRdbms"
          }
        },
        "type": "object"
      },
      "ConnectionProfile": {
        "description": "A set of reusable connection configurations to be used as a source or destination for a stream.",
        "properties": {
          "bigqueryProfile": {
            "$ref": "#/$defs/BigQueryProfile"
          },
          "createTime": {
            "description": "Output only. The create time of the resource.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "Required. Display name.",
            "type": "string"
          },
          "forwardSshConnectivity": {
            "$ref": "#/$defs/ForwardSshTunnelConnectivity"
          },
          "gcsProfile": {
            "$ref": "#/$defs/GcsProfile"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Labels.",
            "type": "object"
          },
          "mysqlProfile": {
            "$ref": "#/$defs/MysqlProfile"
          },
          "name": {
            "description": "Output only. The resource's name.",
            "readOnly": true,
            "type": "string"
          },
          "oracleProfile": {
            "$ref": "#/$defs/OracleProfile"
          },
          "postgresqlProfile": {
            "$ref": "#/$defs/PostgresqlProfile"
          },
          "privateConnectivity": {
            "$ref": "#/$defs/PrivateConnectivity"
          },
          "sqlServerProfile": {
            "$ref": "#/$defs/SqlServerProfile"
          },
          "staticServiceIpConnectivity": {
            "$ref": "#/$defs/StaticServiceIpConnectivity"
          },
          "updateTime": {
            "description": "Output only. The update time of the resource.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "BigQueryProfile": {
        "description": "BigQuery warehouse profile.",
        "properties": {},
        "type": "object"
      },
      "ForwardSshTunnelConnectivity": {
        "description": "Forward SSH Tunnel connectivity.",
        "properties": {
          "hostname": {
            "description": "Required. Hostname for the SSH tunnel.",
            "type": "string"
          },
          "password": {
            "description": "Input only. SSH password.",
            "type": "string"
          },
          "port": {
            "description": "Port for the SSH tunnel, default value is 22.",
            "format": "int32",
            "type": "integer"
          },
          "privateKey": {
            "description": "Input only. SSH private key.",
            "type": "string"
          },
          "username": {
            "description": "Required. Username for the SSH tunnel.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GcsProfile": {
        "description": "Cloud Storage bucket profile.",
        "properties": {
          "bucket": {
            "description": "Required. The Cloud Storage bucket name.",
            "type": "string"
          },
          "rootPath": {
            "description": "The root path inside the Cloud Storage bucket.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MysqlProfile": {
        "description": "MySQL database profile.",
        "properties": {
          "hostname": {
            "description": "Required. Hostname for the MySQL connection.",
            "type": "string"
          },
          "password": {
            "description": "Required. Input only. Password for the MySQL connection.",
            "type": "string"
          },
          "port": {
            "description": "Port for the MySQL connection, default value is 3306.",
            "format": "int32",
            "type": "integer"
          },
          "sslConfig": {
            "$ref": "#/$defs/MysqlSslConfig"
          },
          "username": {
            "description": "Required. Username for the MySQL connection.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MysqlSslConfig": {
        "description": "MySQL SSL configuration information.",
        "properties": {
          "caCertificate": {
            "description": "Input only. PEM-encoded certificate of the CA that signed the source database server's certificate.",
            "type": "string"
          },
          "caCertificateSet": {
            "description": "Output only. Indicates whether the ca_certificate field is set.",
            "readOnly": true,
            "type": "boolean"
          },
          "clientCertificate": {
            "description": "Input only. PEM-encoded certificate that will be used by the replica to authenticate against the source database server. If this field is used then the 'client_key' and the 'ca_certificate' fields are mandatory.",
            "type": "string"
          },
          "clientCertificateSet": {
            "description": "Output only. Indicates whether the client_certificate field is set.",
            "readOnly": true,
            "type": "boolean"
          },
          "clientKey": {
            "description": "Input only. PEM-encoded private key associated with the Client Certificate. If this field is used then the 'client_certificate' and the 'ca_certificate' fields are mandatory.",
            "type": "string"
          },
          "clientKeySet": {
            "description": "Output only. Indicates whether the client_key field is set.",
            "readOnly": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "OracleProfile": {
        "description": "Oracle database profile.",
        "properties": {
          "connectionAttributes": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Connection string attributes",
            "type": "object"
          },
          "databaseService": {
            "description": "Required. Database for the Oracle connection.",
            "type": "string"
          },
          "hostname": {
            "description": "Required. Hostname for the Oracle connection.",
            "type": "string"
          },
          "oracleSslConfig": {
            "$ref": "#/$defs/OracleSslConfig"
          },
          "password": {
            "description": "Required. Password for the Oracle connection.",
            "type": "string"
          },
          "port": {
            "description": "Port for the Oracle connection, default value is 1521.",
            "format": "int32",
            "type": "integer"
          },
          "username": {
            "description": "Required. Username for the Oracle connection.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OracleSslConfig": {
        "description": "Oracle SSL configuration information.",
        "properties": {
          "caCertificate": {
            "description": "Input only. PEM-encoded certificate of the CA that signed the source database server's certificate.",
            "type": "string"
          },
          "caCertificateSet": {
            "description": "Output only. Indicates whether the ca_certificate field has been set for this Connection-Profile.",
            "readOnly": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "PostgresqlProfile": {
        "description": "PostgreSQL database profile.",
        "properties": {
          "database": {
            "description": "Required. Database for the PostgreSQL connection.",
            "type": "string"
          },
          "hostname": {
            "description": "Required. Hostname for the PostgreSQL connection.",
            "type": "string"
          },
          "password": {
            "description": "Required. Password for the PostgreSQL connection.",
            "type": "string"
          },
          "port": {
            "description": "Port for the PostgreSQL connection, default value is 5432.",
            "format": "int32",
            "type": "integer"
          },
          "username": {
            "description": "Required. Username for the PostgreSQL connection.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PrivateConnectivity": {
        "description": "Private Connectivity",
        "properties": {
          "privateConnection": {
            "description": "Required. A reference to a private connection resource. Format: `projects/{project}/locations/{location}/privateConnections/{name}`",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SqlServerProfile": {
        "description": "SQLServer database profile",
        "properties": {
          "database": {
            "description": "Required. Database for the SQLServer connection.",
            "type": "string"
          },
          "hostname": {
            "description": "Required. Hostname for the SQLServer connection.",
            "type": "string"
          },
          "password": {
            "description": "Required. Password for the SQLServer connection.",
            "type": "string"
          },
          "port": {
            "description": "Port for the SQLServer connection, default value is 1433.",
            "format": "int32",
            "type": "integer"
          },
          "username": {
            "description": "Required. Username for the SQLServer connection.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "StaticServiceIpConnectivity": {
        "description": "Static IP address connectivity. Used when the source database is configured to allow incoming connections from the Datastream public IP addresses for the region specified in the connection profile.",
        "properties": {},
        "type": "object"
      },
      "MysqlRdbms": {
        "description": "MySQL database structure",
        "properties": {
          "mysqlDatabases": {
            "description": "Mysql databases on the server",
            "items": {
              "$ref": "#/$defs/MysqlDatabase"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "MysqlDatabase": {
        "description": "MySQL database.",
        "properties": {
          "database": {
            "description": "Database name.",
            "type": "string"
          },
          "mysqlTables": {
            "description": "Tables in the database.",
            "items": {
              "$ref": "#/$defs/MysqlTable"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "MysqlTable": {
        "description": "MySQL table.",
        "properties": {
          "mysqlColumns": {
            "description": "MySQL columns in the database. When unspecified as part of include/exclude objects, includes/excludes everything.",
            "items": {
              "$ref": "#/$defs/MysqlColumn"
            },
            "type": "array"
          },
          "table": {
            "description": "Table name.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MysqlColumn": {
        "description": "MySQL Column.",
        "properties": {
          "collation": {
            "description": "Column collation.",
            "type": "string"
          },
          "column": {
            "description": "Column name.",
            "type": "string"
          },
          "dataType": {
            "description": "The MySQL data type. Full data types list can be found here: https://dev.mysql.com/doc/refman/8.0/en/data-types.html",
            "type": "string"
          },
          "length": {
            "description": "Column length.",
            "format": "int32",
            "type": "integer"
          },
          "nullable": {
            "description": "Whether or not the column can accept a null value.",
            "type": "boolean"
          },
          "ordinalPosition": {
            "description": "The ordinal position of the column in the table.",
            "format": "int32",
            "type": "integer"
          },
          "precision": {
            "description": "Column precision.",
            "format": "int32",
            "type": "integer"
          },
          "primaryKey": {
            "description": "Whether or not the column represents a primary key.",
            "type": "boolean"
          },
          "scale": {
            "description": "Column scale.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "OracleRdbms": {
        "description": "Oracle database structure.",
        "properties": {
          "oracleSchemas": {
            "description": "Oracle schemas/databases in the database server.",
            "items": {
              "$ref": "#/$defs/OracleSchema"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "OracleSchema": {
        "description": "Oracle schema.",
        "properties": {
          "oracleTables": {
            "description": "Tables in the schema.",
            "items": {
              "$ref": "#/$defs/OracleTable"
            },
            "type": "array"
          },
          "schema": {
            "description": "Schema name.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OracleTable": {
        "description": "Oracle table.",
        "properties": {
          "oracleColumns": {
            "description": "Oracle columns in the schema. When unspecified as part of include/exclude objects, includes/excludes everything.",
            "items": {
              "$ref": "#/$defs/OracleColumn"
            },
            "type": "array"
          },
          "table": {
            "description": "Table name.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OracleColumn": {
        "description": "Oracle Column.",
        "properties": {
          "column": {
            "description": "Column name.",
            "type": "string"
          },
          "dataType": {
            "description": "The Oracle data type.",
            "type": "string"
          },
          "encoding": {
            "description": "Column encoding.",
            "type": "string"
          },
          "length": {
            "description": "Column length.",
            "format": "int32",
            "type": "integer"
          },
          "nullable": {
            "description": "Whether or not the column can accept a null value.",
            "type": "boolean"
          },
          "ordinalPosition": {
            "description": "The ordinal position of the column in the table.",
            "format": "int32",
            "type": "integer"
          },
          "precision": {
            "description": "Column precision.",
            "format": "int32",
            "type": "integer"
          },
          "primaryKey": {
            "description": "Whether or not the column represents a primary key.",
            "type": "boolean"
          },
          "scale": {
            "description": "Column scale.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "PostgresqlRdbms": {
        "description": "PostgreSQL database structure.",
        "properties": {
          "postgresqlSchemas": {
            "description": "PostgreSQL schemas in the database server.",
            "items": {
              "$ref": "#/$defs/PostgresqlSchema"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PostgresqlSchema": {
        "description": "PostgreSQL schema.",
        "properties": {
          "postgresqlTables": {
            "description": "Tables in the schema.",
            "items": {
              "$ref": "#/$defs/PostgresqlTable"
            },
            "type": "array"
          },
          "schema": {
            "description": "Schema name.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PostgresqlTable": {
        "description": "PostgreSQL table.",
        "properties": {
          "postgresqlColumns": {
            "description": "PostgreSQL columns in the schema. When unspecified as part of include/exclude objects, includes/excludes everything.",
            "items": {
              "$ref": "#/$defs/PostgresqlColumn"
            },
            "type": "array"
          },
          "table": {
            "description": "Table name.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PostgresqlColumn": {
        "description": "PostgreSQL Column.",
        "properties": {
          "column": {
            "description": "Column name.",
            "type": "string"
          },
          "dataType": {
            "description": "The PostgreSQL data type.",
            "type": "string"
          },
          "length": {
            "description": "Column length.",
            "format": "int32",
            "type": "integer"
          },
          "nullable": {
            "description": "Whether or not the column can accept a null value.",
            "type": "boolean"
          },
          "ordinalPosition": {
            "description": "The ordinal position of the column in the table.",
            "format": "int32",
            "type": "integer"
          },
          "precision": {
            "description": "Column precision.",
            "format": "int32",
            "type": "integer"
          },
          "primaryKey": {
            "description": "Whether or not the column represents a primary key.",
            "type": "boolean"
          },
          "scale": {
            "description": "Column scale.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://datastream.googleapis.com//v1/{parent}/connectionProfiles:discover{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Response from a discover request.",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**mysqlRdbms**: MySQL database structure",
              {
                "$ul": [
                  "**mysqlDatabases**: Mysql databases on the server"
                ]
              }
            ],
            [
              "**oracleRdbms**: Oracle database structure.",
              {
                "$ul": [
                  "**oracleSchemas**: Oracle schemas/databases in the database server."
                ]
              }
            ],
            [
              "**postgresqlRdbms**: PostgreSQL database structure.",
              {
                "$ul": [
                  "**postgresqlSchemas**: PostgreSQL schemas in the database server."
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
