{
  "name": "batch_projects_locations_state_report",
  "description": "Report agent's state, e.g. agent status and tasks information",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. Format: projects/{project}/locations/{location} {project} should be a project number."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/ReportAgentStateRequest"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "ReportAgentStateRequest": {
        "description": "Request to report agent's state. The Request itself implies the agent is healthy.",
        "properties": {
          "agentInfo": {
            "$ref": "#/$defs/AgentInfo"
          },
          "agentTimingInfo": {
            "$ref": "#/$defs/AgentTimingInfo"
          },
          "metadata": {
            "$ref": "#/$defs/AgentMetadata"
          }
        },
        "type": "object"
      },
      "AgentInfo": {
        "description": "VM Agent Info.",
        "properties": {
          "jobId": {
            "description": "Optional. The assigned Job ID",
            "type": "string"
          },
          "reportTime": {
            "description": "When the AgentInfo is generated.",
            "format": "google-datetime",
            "type": "string"
          },
          "state": {
            "description": "Agent state.",
            "enum": [
              "AGENT_STATE_UNSPECIFIED",
              "AGENT_STARTING",
              "AGENT_RUNNING",
              "AGENT_STOPPED"
            ],
            "type": "string"
          },
          "taskGroupId": {
            "description": "The assigned task group ID.",
            "type": "string"
          },
          "tasks": {
            "description": "Task Info.",
            "items": {
              "$ref": "#/$defs/AgentTaskInfo"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AgentTaskInfo": {
        "description": "Task Info",
        "properties": {
          "runnable": {
            "description": "The highest index of a runnable started by the agent for this task. The runnables are indexed from 1. Value 0 is undefined.",
            "format": "int64",
            "type": "string"
          },
          "taskId": {
            "description": "ID of the Task",
            "type": "string"
          },
          "taskStatus": {
            "$ref": "#/$defs/TaskStatus"
          }
        },
        "type": "object"
      },
      "TaskStatus": {
        "description": "Status of a task",
        "properties": {
          "state": {
            "description": "Task state",
            "enum": [
              "STATE_UNSPECIFIED",
              "PENDING",
              "ASSIGNED",
              "RUNNING",
              "FAILED",
              "SUCCEEDED",
              "UNEXECUTED"
            ],
            "type": "string"
          },
          "statusEvents": {
            "description": "Detailed info about why the state is reached.",
            "items": {
              "$ref": "#/$defs/StatusEvent"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "StatusEvent": {
        "description": "Status event",
        "properties": {
          "description": {
            "description": "Description of the event.",
            "type": "string"
          },
          "eventTime": {
            "description": "The time this event occurred.",
            "format": "google-datetime",
            "type": "string"
          },
          "taskExecution": {
            "$ref": "#/$defs/TaskExecution"
          },
          "taskState": {
            "description": "Task State",
            "enum": [
              "STATE_UNSPECIFIED",
              "PENDING",
              "ASSIGNED",
              "RUNNING",
              "FAILED",
              "SUCCEEDED",
              "UNEXECUTED"
            ],
            "type": "string"
          },
          "type": {
            "description": "Type of the event.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "TaskExecution": {
        "description": "This Task Execution field includes detail information for task execution procedures, based on StatusEvent types.",
        "properties": {
          "exitCode": {
            "description": "When task is completed as the status of FAILED or SUCCEEDED, exit code is for one task execution result, default is 0 as success.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "AgentTimingInfo": {
        "description": "VM timing information",
        "properties": {
          "agentStartupTime": {
            "description": "Agent startup time",
            "format": "google-datetime",
            "type": "string"
          },
          "bootTime": {
            "description": "Boot timestamp of the VM OS",
            "format": "google-datetime",
            "type": "string"
          },
          "scriptStartupTime": {
            "description": "Startup time of the Batch VM script.",
            "format": "google-datetime",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AgentMetadata": {
        "description": "VM Agent Metadata.",
        "properties": {
          "creationTime": {
            "deprecated": true,
            "description": "When the VM agent started. Use agent_startup_time instead.",
            "format": "google-datetime",
            "type": "string"
          },
          "creator": {
            "description": "Full name of the entity that created this vm. For MIG, this path is: projects/{project}/regions/{region}/InstanceGroupManagers/{igm} The value is retrieved from the vm metadata key of \"created-by\".",
            "type": "string"
          },
          "imageVersion": {
            "description": "image version for the VM that this agent is installed on.",
            "type": "string"
          },
          "instance": {
            "description": "GCP instance name (go/instance-name).",
            "type": "string"
          },
          "instanceId": {
            "description": "GCP instance ID (go/instance-id).",
            "format": "uint64",
            "type": "string"
          },
          "instancePreemptionNoticeReceived": {
            "description": "If the GCP instance has received preemption notice.",
            "type": "boolean"
          },
          "osRelease": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "parsed contents of /etc/os-release",
            "type": "object"
          },
          "version": {
            "description": "agent binary version running on VM",
            "type": "string"
          },
          "zone": {
            "description": "Agent zone.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://batch.googleapis.com//v1/{parent}/state:report{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Response to ReportAgentStateRequest.",
        "**Key properties:**",
        {
          "$ul": [
            "**defaultReportInterval**: Default report interval override",
            "**minReportInterval**: Minimum report interval override",
            "**tasks**: Tasks assigned to the agent",
            "**useBatchMonitoredResource**: If true, the cloud logging for batch agent will use batch.googleapis.com/Job as monitored resource for Batch job related logging."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
