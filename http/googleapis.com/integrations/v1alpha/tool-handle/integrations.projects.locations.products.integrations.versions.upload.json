{
  "name": "integrations_projects_locations_products_integrations_versions_upload",
  "description": "Uploads an integration. The content can be a previously downloaded integration. Performs the same function as CreateDraftIntegrationVersion, but accepts input in a string format, which holds the complete representation of the IntegrationVersion content.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The version to upload. Format: projects/{project}/locations/{location}/integrations/{integration}"
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleCloudIntegrationsV1alphaUploadIntegrationVersionRequest"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "GoogleCloudIntegrationsV1alphaUploadIntegrationVersionRequest": {
        "description": "Request for UploadIntegrationVersion.",
        "properties": {
          "content": {
            "description": "The textproto of the integration_version.",
            "type": "string"
          },
          "fileFormat": {
            "description": "File format for upload request.",
            "enum": [
              "FILE_FORMAT_UNSPECIFIED",
              "JSON",
              "YAML"
            ],
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://integrations.googleapis.com//v1alpha/{parent}/versions:upload{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Response for UploadIntegrationVersion.",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**integrationVersion**: The integration version definition.",
              {
                "$ul": [
                  "**createTime**: Output only. Auto-generated.",
                  "**databasePersistencePolicy**: Optional. Flag to disable database persistence for execution data, including event execution info, execution export info, execution metadata index and execution param index.",
                  "**description**: Optional. The integration description.",
                  "**errorCatcherConfigs**: Optional. Error Catch Task configuration for the integration. It's optional.",
                  "**integrationParameters**: Optional. Parameters that are expected to be passed to the integration when an event is triggered. This consists of all the parameters that are expected in the integration execution. This gives the user the ability to provide default values, add information like PII and also provide data types of each parameter.",
                  [
                    "**integrationParametersInternal**: LINT.IfChange This is the frontend version of WorkflowParameters. It's exactly like the backend version except that instead of flattening protobuf parameters and treating every field and subfield of a protobuf parameter as a separate parameter, the fields/subfields of a protobuf parameter will be nested as \"children\" (see 'children' field below) parameters of the parent parameter. Please refer to enterprise/crm/eventbus/proto/workflow_parameters.proto for more information about WorkflowParameters.",
                    {
                      "$ul": [
                        "**parameters**: Parameters are a part of Event and can be used to communiticate between different tasks that are part of the same workflow execution."
                      ]
                    }
                  ],
                  "**lastModifierEmail**: Optional. The last modifier's email address. Generated based on the End User Credentials/LOAS role of the user making the call.",
                  "**lockHolder**: Optional. The edit lock holder's email address. Generated based on the End User Credentials/LOAS role of the user making the call.",
                  "**name**: Output only. Auto-generated primary key.",
                  "**origin**: Optional. The origin that indicates where this integration is coming from.",
                  "**parentTemplateId**: Optional. The id of the template which was used to create this integration_version.",
                  "**runAsServiceAccount**: Optional. The run-as service account email, if set and auth config is not configured, that will be used to generate auth token to be used in Connector task, Rest caller task and Cloud function task.",
                  "**snapshotNumber**: Optional. An increasing sequence that is set when a new snapshot is created. The last created snapshot can be identified by [workflow_name, org_id latest(snapshot_number)]. However, last created snapshot need not be same as the HEAD. So users should always use \"HEAD\" tag to identify the head.",
                  "**state**: Output only. User should not set it as an input.",
                  "**status**: Output only. Generated by eventbus. User should not set it as an input.",
                  "**taskConfigs**: Optional. Task configuration for the integration. It's optional, but the integration doesn't do anything without task_configs.",
                  "**taskConfigsInternal**: Optional. Task configuration for the integration. It's optional, but the integration doesn't do anything without task_configs.",
                  [
                    "**teardown**",
                    {
                      "$ul": [
                        "**teardownTaskConfigs**: Required."
                      ]
                    }
                  ],
                  "**triggerConfigs**: Optional. Trigger configurations.",
                  "**triggerConfigsInternal**: Optional. Trigger configurations.",
                  "**updateTime**: Output only. Auto-generated.",
                  "**userLabel**: Optional. A user-defined label that annotates an integration version. Typically, this is only set when the integration version is created."
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
