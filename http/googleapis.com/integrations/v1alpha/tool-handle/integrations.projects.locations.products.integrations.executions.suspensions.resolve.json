{
  "name": "integrations_projects_locations_products_integrations_executions_suspensions_resolve",
  "description": "* Resolves (lifts/rejects) any number of suspensions. If the integration is already running, only the status of the suspension is updated. Otherwise, the suspended integration will begin execution again.",
  "parameters": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "Required. projects/{gcp_project_id}/locations/{location}/products/{product}/integrations/{integration_name}/executions/{execution_name}/suspensions/{suspension_id}"
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleCloudIntegrationsV1alphaResolveSuspensionRequest"
      }
    },
    "required": [
      "name"
    ],
    "$defs": {
      "GoogleCloudIntegrationsV1alphaResolveSuspensionRequest": {
        "description": "Request for [Suspensions.ResolveSuspensions].",
        "properties": {
          "suspension": {
            "$ref": "#/$defs/GoogleCloudIntegrationsV1alphaSuspension"
          }
        },
        "type": "object"
      },
      "GoogleCloudIntegrationsV1alphaSuspension": {
        "description": "A record representing a suspension.",
        "properties": {
          "approvalConfig": {
            "$ref": "#/$defs/GoogleCloudIntegrationsV1alphaSuspensionApprovalConfig"
          },
          "audit": {
            "$ref": "#/$defs/GoogleCloudIntegrationsV1alphaSuspensionAudit"
          },
          "createTime": {
            "description": "Output only. Auto-generated.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "eventExecutionInfoId": {
            "description": "Required. ID of the associated execution.",
            "type": "string"
          },
          "integration": {
            "description": "Required. The name of the originating integration.",
            "type": "string"
          },
          "lastModifyTime": {
            "description": "Output only. Auto-generated.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "Resource name for suspensions suspension/{suspension_id}",
            "type": "string"
          },
          "state": {
            "description": "Required. State of this suspension, indicating what action a resolver has taken.",
            "enum": [
              "RESOLUTION_STATE_UNSPECIFIED",
              "PENDING",
              "REJECTED",
              "LIFTED"
            ],
            "type": "string"
          },
          "suspensionConfig": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoSuspensionConfig"
          },
          "taskId": {
            "description": "Required. Task id of the associated SuspensionTask.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudIntegrationsV1alphaSuspensionApprovalConfig": {
        "description": "Configurations for approving the Suspension.",
        "properties": {
          "customMessage": {
            "description": "Information to provide for recipients.",
            "type": "string"
          },
          "emailAddresses": {
            "description": "Email addresses to send approval request to.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "expiration": {
            "$ref": "#/$defs/GoogleCloudIntegrationsV1alphaSuspensionApprovalExpiration"
          }
        },
        "type": "object"
      },
      "GoogleCloudIntegrationsV1alphaSuspensionApprovalExpiration": {
        "description": "Expiration configs for the approval request.",
        "properties": {
          "expireTime": {
            "description": "Output only. Time after which the suspension expires, if no action taken.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "liftWhenExpired": {
            "description": "Whether the suspension will be REJECTED or LIFTED upon expiration. REJECTED is the default behavior.",
            "type": "boolean"
          },
          "remindTime": {
            "description": "Time after the previous suspension action reminder, if any, is sent using the selected notification option, for a suspension which is still PENDING_UNSPECIFIED.",
            "format": "google-datetime",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudIntegrationsV1alphaSuspensionAudit": {
        "description": "Contains when and by whom the suspension was resolved.",
        "properties": {
          "resolveTime": {
            "description": "Time at which this suspension was resolved.",
            "format": "google-datetime",
            "type": "string"
          },
          "resolver": {
            "description": "Email address of the person who resolved this suspension.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoSuspensionConfig": {
        "properties": {
          "customMessage": {
            "description": "Optional information to provide recipients of the suspension in addition to the resolution URL, typically containing relevant parameter values from the originating workflow.",
            "type": "string"
          },
          "notifications": {
            "items": {
              "$ref": "#/$defs/EnterpriseCrmEventbusProtoNotification"
            },
            "type": "array"
          },
          "suspensionExpiration": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoSuspensionExpiration"
          },
          "whoMayResolve": {
            "description": "Identities able to resolve this suspension.",
            "items": {
              "$ref": "#/$defs/EnterpriseCrmEventbusProtoSuspensionAuthPermissions"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoNotification": {
        "properties": {
          "buganizerNotification": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoBuganizerNotification"
          },
          "emailAddress": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoAddress"
          },
          "escalatorQueue": {
            "type": "string"
          },
          "pubsubTopic": {
            "type": "string"
          },
          "request": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoCustomSuspensionRequest"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoBuganizerNotification": {
        "properties": {
          "assigneeEmailAddress": {
            "description": "Whom to assign the new bug. Optional.",
            "type": "string"
          },
          "componentId": {
            "description": "ID of the buganizer component within which to create a new issue. Required.",
            "format": "int64",
            "type": "string"
          },
          "templateId": {
            "description": "ID of the buganizer template to use. Optional.",
            "format": "int64",
            "type": "string"
          },
          "title": {
            "description": "Title of the issue to be created. Required.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoAddress": {
        "description": "Email address along with optional name and tokens. These tokens will be substituted for the variables in the form of [{var_name}], where var_name could be any string of no more than 32 bytes.",
        "properties": {
          "email": {
            "description": "Required.",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "tokens": {
            "items": {
              "$ref": "#/$defs/EnterpriseCrmEventbusProtoToken"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoToken": {
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoCustomSuspensionRequest": {
        "properties": {
          "postToQueueWithTriggerIdRequest": {
            "$ref": "#/$defs/GoogleInternalCloudCrmEventbusV3PostToQueueWithTriggerIdRequest"
          },
          "suspensionInfoEventParameterKey": {
            "description": "In the fired event, set the SuspensionInfo message as the value for this key.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleInternalCloudCrmEventbusV3PostToQueueWithTriggerIdRequest": {
        "description": "Use this request to post all workflows associated with a given trigger id. Next available id: 11",
        "properties": {
          "clientId": {
            "description": "Optional. If the client id is provided, then the combination of trigger id and client id is matched across all the workflows. If the client id is not provided, then workflows with matching trigger id are executed for each client id in the {@link TriggerConfig}. For Api Trigger, the client id is required and will be validated against the allowed clients.",
            "type": "string"
          },
          "ignoreErrorIfNoActiveWorkflow": {
            "description": "Optional. Flag to determine whether clients would suppress a warning when no ACTIVE workflows are not found. If this flag is set to be true, an error will not be thrown if the requested trigger_id or client_id is not found in any ACTIVE workflow. Otherwise, the error is always thrown. The flag is set to be false by default.",
            "type": "boolean"
          },
          "parameters": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoEventParameters"
          },
          "priority": {
            "description": "The request priority this request should be processed at. For internal users:",
            "enum": [
              "UNSPCIFIED",
              "SHEDDABLE",
              "SHEDDABLE_PLUS",
              "CRITICAL",
              "CRITICAL_PLUS"
            ],
            "type": "string"
          },
          "requestId": {
            "description": "Optional. This is used to de-dup incoming request: if the duplicate request was detected, the response from the previous execution is returned. Must have no more than 36 characters and contain only alphanumeric characters and hyphens.",
            "type": "string"
          },
          "resourceName": {
            "description": "This field is only required when using Admin Access. The resource name of target, or the parent resource name. For example: \"projects/*/locations/*/integrations/*\"",
            "type": "string"
          },
          "scheduledTime": {
            "description": "Optional. Time in milliseconds since epoch when the given event would be scheduled.",
            "format": "int64",
            "type": "string"
          },
          "testMode": {
            "description": "Optional. Sets test mode in {@link enterprise/crm/eventbus/event_message.proto}.",
            "type": "boolean"
          },
          "triggerId": {
            "description": "Matched against all {@link TriggerConfig}s across all workflows. i.e. TriggerConfig.trigger_id.equals(trigger_id) Required.",
            "type": "string"
          },
          "workflowName": {
            "description": "Optional. If provided, the workflow_name is used to filter all the matched workflows having same trigger_id+client_id. A combination of trigger_id, client_id and workflow_name identifies a unique workflow.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoEventParameters": {
        "description": "LINT.IfChange This message is used for processing and persisting (when applicable) key value pair parameters for each event in the event bus. Please see",
        "properties": {
          "parameters": {
            "description": "Parameters are a part of Event and can be used to communicate between different tasks that are part of the same integration execution.",
            "items": {
              "$ref": "#/$defs/EnterpriseCrmEventbusProtoParameterEntry"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoParameterEntry": {
        "description": "Key-value pair of EventBus parameters.",
        "properties": {
          "key": {
            "description": "Key is used to retrieve the corresponding parameter value. This should be unique for a given fired event. These parameters must be predefined in the integration definition.",
            "type": "string"
          },
          "value": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoParameterValueType"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoParameterValueType": {
        "description": "LINT.IfChange To support various types of parameter values. Next available id: 14",
        "properties": {
          "booleanArray": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoBooleanParameterArray"
          },
          "booleanValue": {
            "type": "boolean"
          },
          "doubleArray": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoDoubleParameterArray"
          },
          "doubleValue": {
            "format": "double",
            "type": "number"
          },
          "intArray": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoIntParameterArray"
          },
          "intValue": {
            "format": "int64",
            "type": "string"
          },
          "protoArray": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoProtoParameterArray"
          },
          "protoValue": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "type": "object"
          },
          "serializedObjectValue": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoSerializedObjectParameter"
          },
          "stringArray": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoStringParameterArray"
          },
          "stringValue": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoBooleanParameterArray": {
        "properties": {
          "booleanValues": {
            "items": {
              "type": "boolean"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoDoubleParameterArray": {
        "properties": {
          "doubleValues": {
            "items": {
              "format": "double",
              "type": "number"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoIntParameterArray": {
        "properties": {
          "intValues": {
            "items": {
              "format": "int64",
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoProtoParameterArray": {
        "properties": {
          "protoValues": {
            "items": {
              "additionalProperties": {
                "description": "Properties of the object. Contains field @type with type URL."
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoSerializedObjectParameter": {
        "properties": {
          "objectValue": {
            "format": "byte",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoStringParameterArray": {
        "properties": {
          "stringValues": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoSuspensionExpiration": {
        "properties": {
          "expireAfterMs": {
            "description": "Milliseconds after which the suspension expires, if no action taken.",
            "format": "int32",
            "type": "integer"
          },
          "liftWhenExpired": {
            "description": "Whether the suspension will be REJECTED or LIFTED upon expiration. REJECTED is the default behavior.",
            "type": "boolean"
          },
          "remindAfterMs": {
            "description": "Milliseconds after which the previous suspension action reminder, if any, is sent using the selected notification option, for a suspension which is still PENDING_UNSPECIFIED.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoSuspensionAuthPermissions": {
        "description": "LINT.IfChange",
        "properties": {
          "gaiaIdentity": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoSuspensionAuthPermissionsGaiaIdentity"
          },
          "googleGroup": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoSuspensionAuthPermissionsGaiaIdentity"
          },
          "loasRole": {
            "type": "string"
          },
          "mdbGroup": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoSuspensionAuthPermissionsGaiaIdentity": {
        "properties": {
          "emailAddress": {
            "type": "string"
          },
          "gaiaId": {
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://integrations.googleapis.com//v1alpha/{name}:resolve{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Response for Suspensions.ResolveSuspensions.",
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
