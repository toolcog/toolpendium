{
  "name": "integrations_projects_locations_products_integrations_execute",
  "description": "Executes integrations synchronously by passing the trigger id in the request body. The request is not returned until the requested executions are either fulfilled or experienced an error. If the integration name is not specified (passing `-`), all of the associated integration under the given trigger_id will be executed. Otherwise only the specified integration for the given `trigger_id` is executed. This is helpful for execution the integration from UI.",
  "parameters": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "Required. The integration resource name."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleCloudIntegrationsV1alphaExecuteIntegrationsRequest"
      }
    },
    "required": [
      "name"
    ],
    "$defs": {
      "GoogleCloudIntegrationsV1alphaExecuteIntegrationsRequest": {
        "description": "The request for executing an integration.",
        "properties": {
          "doNotPropagateError": {
            "description": "Optional. Flag to determine how to should propagate errors. If this flag is set to be true, it will not throw an exception. Instead, it will return a {@link ExecuteIntegrationsResponse} with an execution id and error messages as PostWithTriggerIdExecutionException in {@link EventParameters}. The flag is set to be false by default.",
            "type": "boolean"
          },
          "executionId": {
            "description": "Optional. The id of the ON_HOLD execution to be resumed.",
            "type": "string"
          },
          "inputParameters": {
            "additionalProperties": {
              "$ref": "#/$defs/GoogleCloudIntegrationsV1alphaValueType"
            },
            "description": "Optional. Input parameters used by integration execution.",
            "type": "object"
          },
          "parameterEntries": {
            "description": "Optional. Parameters are a part of Event and can be used to communicate between different tasks that are part of the same integration execution.",
            "items": {
              "$ref": "#/$defs/EnterpriseCrmFrontendsEventbusProtoParameterEntry"
            },
            "type": "array"
          },
          "parameters": {
            "$ref": "#/$defs/EnterpriseCrmFrontendsEventbusProtoEventParameters"
          },
          "requestId": {
            "description": "Optional. This is used to de-dup incoming request: if the duplicate request was detected, the response from the previous execution is returned.",
            "type": "string"
          },
          "triggerId": {
            "description": "Required. Matched against all {@link TriggerConfig}s across all integrations. i.e. TriggerConfig.trigger_id.equals(trigger_id). The trigger_id is in the format of `api_trigger/TRIGGER_NAME`.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudIntegrationsV1alphaValueType": {
        "description": "The type of the parameter.",
        "properties": {
          "booleanArray": {
            "$ref": "#/$defs/GoogleCloudIntegrationsV1alphaBooleanParameterArray"
          },
          "booleanValue": {
            "description": "Boolean.",
            "type": "boolean"
          },
          "doubleArray": {
            "$ref": "#/$defs/GoogleCloudIntegrationsV1alphaDoubleParameterArray"
          },
          "doubleValue": {
            "description": "Double Number.",
            "format": "double",
            "type": "number"
          },
          "intArray": {
            "$ref": "#/$defs/GoogleCloudIntegrationsV1alphaIntParameterArray"
          },
          "intValue": {
            "description": "Integer.",
            "format": "int64",
            "type": "string"
          },
          "jsonValue": {
            "description": "Json.",
            "type": "string"
          },
          "stringArray": {
            "$ref": "#/$defs/GoogleCloudIntegrationsV1alphaStringParameterArray"
          },
          "stringValue": {
            "description": "String.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudIntegrationsV1alphaBooleanParameterArray": {
        "description": "This message only contains a field of boolean array.",
        "properties": {
          "booleanValues": {
            "description": "Boolean array.",
            "items": {
              "type": "boolean"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudIntegrationsV1alphaDoubleParameterArray": {
        "description": "This message only contains a field of double number array.",
        "properties": {
          "doubleValues": {
            "description": "Double number array.",
            "items": {
              "format": "double",
              "type": "number"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudIntegrationsV1alphaIntParameterArray": {
        "description": "This message only contains a field of integer array.",
        "properties": {
          "intValues": {
            "description": "Integer array.",
            "items": {
              "format": "int64",
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudIntegrationsV1alphaStringParameterArray": {
        "description": "This message only contains a field of string array.",
        "properties": {
          "stringValues": {
            "description": "String array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmFrontendsEventbusProtoParameterEntry": {
        "description": "Key-value pair of EventBus parameters.",
        "properties": {
          "dataType": {
            "description": "Explicitly getting the type of the parameter.",
            "enum": [
              "DATA_TYPE_UNSPECIFIED",
              "STRING_VALUE",
              "INT_VALUE",
              "DOUBLE_VALUE",
              "BOOLEAN_VALUE",
              "PROTO_VALUE",
              "SERIALIZED_OBJECT_VALUE",
              "STRING_ARRAY",
              "INT_ARRAY",
              "DOUBLE_ARRAY",
              "PROTO_ARRAY",
              "PROTO_ENUM",
              "BOOLEAN_ARRAY",
              "PROTO_ENUM_ARRAY",
              "BYTES",
              "BYTES_ARRAY",
              "NON_SERIALIZABLE_OBJECT",
              "JSON_VALUE"
            ],
            "type": "string"
          },
          "key": {
            "description": "Key is used to retrieve the corresponding parameter value. This should be unique for a given fired event. These parameters must be predefined in the workflow definition.",
            "type": "string"
          },
          "value": {
            "$ref": "#/$defs/EnterpriseCrmFrontendsEventbusProtoParameterValueType"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmFrontendsEventbusProtoParameterValueType": {
        "description": "To support various types of parameter values. Next available id: 14",
        "properties": {
          "booleanArray": {
            "$ref": "#/$defs/EnterpriseCrmFrontendsEventbusProtoBooleanParameterArray"
          },
          "booleanValue": {
            "type": "boolean"
          },
          "doubleArray": {
            "$ref": "#/$defs/EnterpriseCrmFrontendsEventbusProtoDoubleParameterArray"
          },
          "doubleValue": {
            "format": "double",
            "type": "number"
          },
          "intArray": {
            "$ref": "#/$defs/EnterpriseCrmFrontendsEventbusProtoIntParameterArray"
          },
          "intValue": {
            "format": "int64",
            "type": "string"
          },
          "jsonValue": {
            "type": "string"
          },
          "protoArray": {
            "$ref": "#/$defs/EnterpriseCrmFrontendsEventbusProtoProtoParameterArray"
          },
          "protoValue": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "type": "object"
          },
          "serializedObjectValue": {
            "$ref": "#/$defs/EnterpriseCrmFrontendsEventbusProtoSerializedObjectParameter"
          },
          "stringArray": {
            "$ref": "#/$defs/EnterpriseCrmFrontendsEventbusProtoStringParameterArray"
          },
          "stringValue": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmFrontendsEventbusProtoBooleanParameterArray": {
        "properties": {
          "booleanValues": {
            "items": {
              "type": "boolean"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmFrontendsEventbusProtoDoubleParameterArray": {
        "properties": {
          "doubleValues": {
            "items": {
              "format": "double",
              "type": "number"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmFrontendsEventbusProtoIntParameterArray": {
        "properties": {
          "intValues": {
            "items": {
              "format": "int64",
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmFrontendsEventbusProtoProtoParameterArray": {
        "properties": {
          "protoValues": {
            "items": {
              "additionalProperties": {
                "description": "Properties of the object. Contains field @type with type URL."
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmFrontendsEventbusProtoSerializedObjectParameter": {
        "properties": {
          "objectValue": {
            "format": "byte",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmFrontendsEventbusProtoStringParameterArray": {
        "properties": {
          "stringValues": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmFrontendsEventbusProtoEventParameters": {
        "description": "LINT.IfChange This message is used for processing and persisting (when applicable) key value pair parameters for each event in the event bus. Please see",
        "properties": {
          "parameters": {
            "description": "Parameters are a part of Event and can be used to communicate between different tasks that are part of the same workflow execution.",
            "items": {
              "$ref": "#/$defs/EnterpriseCrmFrontendsEventbusProtoParameterEntry"
            },
            "type": "array"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://integrations.googleapis.com//v1alpha/{name}:execute{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The response for executing an integration.",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**eventParameters**: LINT.IfChange This message is used for processing and persisting (when applicable) key value pair parameters for each event in the event bus. Please see",
              {
                "$ul": [
                  "**parameters**: Parameters are a part of Event and can be used to communicate between different tasks that are part of the same workflow execution."
                ]
              }
            ],
            "**executionFailed**: Is true if any execution in the integration failed. False otherwise.",
            "**executionId**: The id of the execution corresponding to this run of integration.",
            "**outputParameters**: OUTPUT parameters in format of Map. Where Key is the name of the parameter. Note: Name of the system generated parameters are wrapped by backtick(`) to distinguish them from the user defined parameters.",
            "**parameterEntries**: Parameters are a part of Event and can be used to communicate between different tasks that are part of the same integration execution."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
