{
  "name": "integrations_projects_locations_getClients",
  "description": "Gets the client configuration for the given project and location resource name",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. Required: The ID of the GCP Project to be provisioned."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      }
    },
    "required": [
      "parent"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://integrations.googleapis.com//v1/{parent}/clients{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Response for the GetClient rpc",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**client**: The configuration information for the Client",
              {
                "$ul": [
                  "**billingType**: Indicates the billing type of the client",
                  "**clientState**: Indicates the activity state the client",
                  [
                    "**cloudKmsConfig**: Configuration information for Client's Cloud KMS information",
                    {
                      "$ul": [
                        "**key**: Required. A Cloud KMS key is a named object containing one or more key versions, along with metadata for the key. A key exists on exactly one key ring tied to a specific location.",
                        "**keyVersion**: Optional. Each version of a key contains key material used for encryption or signing. A key's version is represented by an integer, starting at 1. To decrypt data or verify a signature, you must use the same key version that was used to encrypt or sign the data.",
                        "**kmsLocation**: Required. Location name of the key ring, e.g. \"us-west1\".",
                        "**kmsProjectId**: Optional. The gcp project id of the project where the kms key stored. If empty, the kms key is stored at the same project as customer's project and ecrypted with CMEK, otherwise, the kms key is stored in the tenant project and encrypted with GMEK",
                        "**kmsRing**: Required. A key ring organizes keys in a specific Google Cloud location and allows you to manage access control on groups of keys. A key ring's name does not need to be unique across a Google Cloud project, but must be unique within a given location."
                      ]
                    }
                  ],
                  [
                    "**cloudLoggingConfig**: Config info for Cloud Logging",
                    {
                      "$ul": [
                        "**bucket**: Cloud bucket name for the project.",
                        "**enableCloudLogging**: This field determines whether the logs should be sent to cloud logging api"
                      ]
                    }
                  ],
                  "**createTime**: The timestamp when the client was first created.",
                  "**description**: Description of what the client is used for",
                  "**id**: Globally unique ID (project_id + region)",
                  "**p4ServiceAccount**: The service agent associated with this client",
                  "**projectId**: The GCP project id of the client associated with",
                  "**region**: The region the client is linked to."
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
