{
  "name": "integrations_projects_locations_products_integrations_test",
  "description": "Execute the integration in draft state",
  "parameters": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "Output only. Auto-generated primary key."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleCloudIntegrationsV1alphaTestIntegrationsRequest"
      }
    },
    "required": [
      "name"
    ],
    "$defs": {
      "GoogleCloudIntegrationsV1alphaTestIntegrationsRequest": {
        "description": "The request for testing an integration.",
        "properties": {
          "clientId": {
            "description": "Required. This is used to identify the client on whose behalf the event will be executed.",
            "type": "string"
          },
          "deadlineSecondsTime": {
            "description": "Optional. custom deadline of the rpc",
            "format": "google-datetime",
            "type": "string"
          },
          "inputParameters": {
            "additionalProperties": {
              "$ref": "#/$defs/GoogleCloudIntegrationsV1alphaValueType"
            },
            "description": "Optional. Input parameters used during integration execution.",
            "type": "object"
          },
          "integrationVersion": {
            "$ref": "#/$defs/GoogleCloudIntegrationsV1alphaIntegrationVersion"
          },
          "parameters": {
            "$ref": "#/$defs/EnterpriseCrmFrontendsEventbusProtoEventParameters"
          },
          "testMode": {
            "description": "Optional. Can be specified in the event request, otherwise false (default). If true, enables tasks with condition \"test_mode = true\". If false, disables tasks with condition \"test_mode = true\" if global test mode (set by platform) is also false {@link EventBusConfig}.",
            "type": "boolean"
          },
          "triggerId": {
            "description": "Required. The trigger id of the integration trigger config. If both trigger_id and client_id is present, the integration is executed from the start tasks provided by the matching trigger config otherwise it is executed from the default start tasks.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudIntegrationsV1alphaValueType": {
        "description": "The type of the parameter.",
        "properties": {
          "booleanArray": {
            "$ref": "#/$defs/GoogleCloudIntegrationsV1alphaBooleanParameterArray"
          },
          "booleanValue": {
            "description": "Boolean.",
            "type": "boolean"
          },
          "doubleArray": {
            "$ref": "#/$defs/GoogleCloudIntegrationsV1alphaDoubleParameterArray"
          },
          "doubleValue": {
            "description": "Double Number.",
            "format": "double",
            "type": "number"
          },
          "intArray": {
            "$ref": "#/$defs/GoogleCloudIntegrationsV1alphaIntParameterArray"
          },
          "intValue": {
            "description": "Integer.",
            "format": "int64",
            "type": "string"
          },
          "jsonValue": {
            "description": "Json.",
            "type": "string"
          },
          "stringArray": {
            "$ref": "#/$defs/GoogleCloudIntegrationsV1alphaStringParameterArray"
          },
          "stringValue": {
            "description": "String.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudIntegrationsV1alphaBooleanParameterArray": {
        "description": "This message only contains a field of boolean array.",
        "properties": {
          "booleanValues": {
            "description": "Boolean array.",
            "items": {
              "type": "boolean"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudIntegrationsV1alphaDoubleParameterArray": {
        "description": "This message only contains a field of double number array.",
        "properties": {
          "doubleValues": {
            "description": "Double number array.",
            "items": {
              "format": "double",
              "type": "number"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudIntegrationsV1alphaIntParameterArray": {
        "description": "This message only contains a field of integer array.",
        "properties": {
          "intValues": {
            "description": "Integer array.",
            "items": {
              "format": "int64",
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudIntegrationsV1alphaStringParameterArray": {
        "description": "This message only contains a field of string array.",
        "properties": {
          "stringValues": {
            "description": "String array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudIntegrationsV1alphaIntegrationVersion": {
        "description": "The integration version definition.",
        "properties": {
          "createTime": {
            "description": "Output only. Auto-generated.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "databasePersistencePolicy": {
            "description": "Optional. Flag to disable database persistence for execution data, including event execution info, execution export info, execution metadata index and execution param index.",
            "enum": [
              "DATABASE_PERSISTENCE_POLICY_UNSPECIFIED",
              "DATABASE_PERSISTENCE_DISABLED"
            ],
            "type": "string"
          },
          "description": {
            "description": "Optional. The integration description.",
            "type": "string"
          },
          "errorCatcherConfigs": {
            "description": "Optional. Error Catch Task configuration for the integration. It's optional.",
            "items": {
              "$ref": "#/$defs/GoogleCloudIntegrationsV1alphaErrorCatcherConfig"
            },
            "type": "array"
          },
          "integrationParameters": {
            "description": "Optional. Parameters that are expected to be passed to the integration when an event is triggered. This consists of all the parameters that are expected in the integration execution. This gives the user the ability to provide default values, add information like PII and also provide data types of each parameter.",
            "items": {
              "$ref": "#/$defs/GoogleCloudIntegrationsV1alphaIntegrationParameter"
            },
            "type": "array"
          },
          "integrationParametersInternal": {
            "$ref": "#/$defs/EnterpriseCrmFrontendsEventbusProtoWorkflowParameters"
          },
          "lastModifierEmail": {
            "description": "Optional. The last modifier's email address. Generated based on the End User Credentials/LOAS role of the user making the call.",
            "type": "string"
          },
          "lockHolder": {
            "description": "Optional. The edit lock holder's email address. Generated based on the End User Credentials/LOAS role of the user making the call.",
            "type": "string"
          },
          "name": {
            "description": "Output only. Auto-generated primary key.",
            "readOnly": true,
            "type": "string"
          },
          "origin": {
            "description": "Optional. The origin that indicates where this integration is coming from.",
            "enum": [
              "UNSPECIFIED",
              "UI",
              "PIPER_V2",
              "PIPER_V3",
              "APPLICATION_IP_PROVISIONING"
            ],
            "type": "string"
          },
          "parentTemplateId": {
            "description": "Optional. The id of the template which was used to create this integration_version.",
            "type": "string"
          },
          "runAsServiceAccount": {
            "description": "Optional. The run-as service account email, if set and auth config is not configured, that will be used to generate auth token to be used in Connector task, Rest caller task and Cloud function task.",
            "type": "string"
          },
          "snapshotNumber": {
            "description": "Optional. An increasing sequence that is set when a new snapshot is created. The last created snapshot can be identified by [workflow_name, org_id latest(snapshot_number)]. However, last created snapshot need not be same as the HEAD. So users should always use \"HEAD\" tag to identify the head.",
            "format": "int64",
            "type": "string"
          },
          "state": {
            "description": "Output only. User should not set it as an input.",
            "enum": [
              "INTEGRATION_STATE_UNSPECIFIED",
              "DRAFT",
              "ACTIVE",
              "ARCHIVED",
              "SNAPSHOT"
            ],
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "description": "Output only. Generated by eventbus. User should not set it as an input.",
            "enum": [
              "UNKNOWN",
              "DRAFT",
              "ACTIVE",
              "ARCHIVED",
              "SNAPSHOT"
            ],
            "readOnly": true,
            "type": "string"
          },
          "taskConfigs": {
            "description": "Optional. Task configuration for the integration. It's optional, but the integration doesn't do anything without task_configs.",
            "items": {
              "$ref": "#/$defs/GoogleCloudIntegrationsV1alphaTaskConfig"
            },
            "type": "array"
          },
          "taskConfigsInternal": {
            "description": "Optional. Task configuration for the integration. It's optional, but the integration doesn't do anything without task_configs.",
            "items": {
              "$ref": "#/$defs/EnterpriseCrmFrontendsEventbusProtoTaskConfig"
            },
            "type": "array"
          },
          "teardown": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoTeardown"
          },
          "triggerConfigs": {
            "description": "Optional. Trigger configurations.",
            "items": {
              "$ref": "#/$defs/GoogleCloudIntegrationsV1alphaTriggerConfig"
            },
            "type": "array"
          },
          "triggerConfigsInternal": {
            "description": "Optional. Trigger configurations.",
            "items": {
              "$ref": "#/$defs/EnterpriseCrmFrontendsEventbusProtoTriggerConfig"
            },
            "type": "array"
          },
          "updateTime": {
            "description": "Output only. Auto-generated.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "userLabel": {
            "description": "Optional. A user-defined label that annotates an integration version. Typically, this is only set when the integration version is created.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudIntegrationsV1alphaErrorCatcherConfig": {
        "description": "Configuration detail of a error catch task",
        "properties": {
          "description": {
            "description": "Optional. User-provided description intended to give more business context about the error catcher config.",
            "type": "string"
          },
          "errorCatcherId": {
            "description": "Required. An error catcher id is string representation for the error catcher config. Within a workflow, error_catcher_id uniquely identifies an error catcher config among all error catcher configs for the workflow",
            "type": "string"
          },
          "errorCatcherNumber": {
            "description": "Required. A number to uniquely identify each error catcher config within the workflow on UI.",
            "type": "string"
          },
          "label": {
            "description": "Optional. The user created label for a particular error catcher. Optional.",
            "type": "string"
          },
          "position": {
            "$ref": "#/$defs/GoogleCloudIntegrationsV1alphaCoordinate"
          },
          "startErrorTasks": {
            "description": "Required. The set of start tasks that are to be executed for the error catch flow",
            "items": {
              "$ref": "#/$defs/GoogleCloudIntegrationsV1alphaNextTask"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudIntegrationsV1alphaCoordinate": {
        "description": "Configuration detail of coordinate, it used for UI",
        "properties": {
          "x": {
            "description": "Required. X axis of the coordinate",
            "format": "int32",
            "type": "integer"
          },
          "y": {
            "description": "Required. Y axis of the coordinate",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GoogleCloudIntegrationsV1alphaNextTask": {
        "description": "The task that is next in line to be executed, if the condition specified evaluated to true.",
        "properties": {
          "condition": {
            "description": "Standard filter expression for this task to become an eligible next task.",
            "type": "string"
          },
          "description": {
            "description": "User-provided description intended to give additional business context about the task.",
            "type": "string"
          },
          "displayName": {
            "description": "User-provided label that is attached to this edge in the UI.",
            "type": "string"
          },
          "taskConfigId": {
            "description": "ID of the next task.",
            "type": "string"
          },
          "taskId": {
            "description": "Task number of the next task.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudIntegrationsV1alphaIntegrationParameter": {
        "description": "Integration Parameter is defined in the integration config and are used to provide information about data types of the expected parameters and provide any default values if needed. They can also be used to add custom attributes. These are static in nature and should not be used for dynamic event definition.",
        "properties": {
          "dataType": {
            "description": "Type of the parameter.",
            "enum": [
              "INTEGRATION_PARAMETER_DATA_TYPE_UNSPECIFIED",
              "STRING_VALUE",
              "INT_VALUE",
              "DOUBLE_VALUE",
              "BOOLEAN_VALUE",
              "STRING_ARRAY",
              "INT_ARRAY",
              "DOUBLE_ARRAY",
              "BOOLEAN_ARRAY",
              "JSON_VALUE",
              "PROTO_VALUE",
              "PROTO_ARRAY"
            ],
            "type": "string"
          },
          "defaultValue": {
            "$ref": "#/$defs/GoogleCloudIntegrationsV1alphaValueType"
          },
          "displayName": {
            "description": "The name (without prefix) to be displayed in the UI for this parameter. E.g. if the key is \"foo.bar.myName\", then the name would be \"myName\".",
            "type": "string"
          },
          "inputOutputType": {
            "description": "Specifies the input/output type for the parameter.",
            "enum": [
              "IN_OUT_TYPE_UNSPECIFIED",
              "IN",
              "OUT",
              "IN_OUT"
            ],
            "type": "string"
          },
          "isTransient": {
            "description": "Whether this parameter is a transient parameter.",
            "type": "boolean"
          },
          "jsonSchema": {
            "description": "This schema will be used to validate runtime JSON-typed values of this parameter.",
            "type": "string"
          },
          "key": {
            "description": "Key is used to retrieve the corresponding parameter value. This should be unique for a given fired event. These parameters must be predefined in the integration definition.",
            "type": "string"
          },
          "producer": {
            "description": "The identifier of the node (TaskConfig/TriggerConfig) this parameter was produced by, if it is a transient param or a copy of an input param.",
            "type": "string"
          },
          "searchable": {
            "description": "Searchable in the execution log or not.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmFrontendsEventbusProtoWorkflowParameters": {
        "description": "LINT.IfChange This is the frontend version of WorkflowParameters. It's exactly like the backend version except that instead of flattening protobuf parameters and treating every field and subfield of a protobuf parameter as a separate parameter, the fields/subfields of a protobuf parameter will be nested as \"children\" (see 'children' field below) parameters of the parent parameter. Please refer to enterprise/crm/eventbus/proto/workflow_parameters.proto for more information about WorkflowParameters.",
        "properties": {
          "parameters": {
            "description": "Parameters are a part of Event and can be used to communiticate between different tasks that are part of the same workflow execution.",
            "items": {
              "$ref": "#/$defs/EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntry"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntry": {
        "properties": {
          "attributes": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoAttributes"
          },
          "children": {
            "description": "Child parameters nested within this parameter. This field only applies to protobuf parameters",
            "items": {
              "$ref": "#/$defs/EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntry"
            },
            "type": "array"
          },
          "dataType": {
            "description": "The data type of the parameter.",
            "enum": [
              "DATA_TYPE_UNSPECIFIED",
              "STRING_VALUE",
              "INT_VALUE",
              "DOUBLE_VALUE",
              "BOOLEAN_VALUE",
              "PROTO_VALUE",
              "SERIALIZED_OBJECT_VALUE",
              "STRING_ARRAY",
              "INT_ARRAY",
              "DOUBLE_ARRAY",
              "PROTO_ARRAY",
              "PROTO_ENUM",
              "BOOLEAN_ARRAY",
              "PROTO_ENUM_ARRAY",
              "BYTES",
              "BYTES_ARRAY",
              "NON_SERIALIZABLE_OBJECT",
              "JSON_VALUE"
            ],
            "type": "string"
          },
          "defaultValue": {
            "$ref": "#/$defs/EnterpriseCrmFrontendsEventbusProtoParameterValueType"
          },
          "inOutType": {
            "description": "Specifies the input/output type for the parameter.",
            "enum": [
              "IN_OUT_TYPE_UNSPECIFIED",
              "IN",
              "OUT",
              "IN_OUT"
            ],
            "type": "string"
          },
          "isTransient": {
            "description": "Whether this parameter is a transient parameter.",
            "type": "boolean"
          },
          "jsonSchema": {
            "description": "This schema will be used to validate runtime JSON-typed values of this parameter.",
            "type": "string"
          },
          "key": {
            "description": "Key is used to retrieve the corresponding parameter value. This should be unique for a given fired event. These parameters must be predefined in the workflow definition.",
            "type": "string"
          },
          "name": {
            "description": "The name (without prefix) to be displayed in the UI for this parameter. E.g. if the key is \"foo.bar.myName\", then the name would be \"myName\".",
            "type": "string"
          },
          "producedBy": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoNodeIdentifier"
          },
          "producer": {
            "type": "string"
          },
          "protoDefName": {
            "description": "The name of the protobuf type if the parameter has a protobuf data type.",
            "type": "string"
          },
          "protoDefPath": {
            "description": "If the data type is of type proto or proto array, this field needs to be populated with the fully qualified proto name. This message, for example, would be \"enterprise.crm.frontends.eventbus.proto.WorkflowParameterEntry\".",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoAttributes": {
        "description": "Attributes are additional options that can be associated with each event property. For more information, see",
        "properties": {
          "dataType": {
            "description": "Things like URL, Email, Currency, Timestamp (rather than string, int64...)",
            "enum": [
              "DATA_TYPE_UNSPECIFIED",
              "EMAIL",
              "URL",
              "CURRENCY",
              "TIMESTAMP",
              "DOMAIN_NAME"
            ],
            "type": "string"
          },
          "defaultValue": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoValueType"
          },
          "isRequired": {
            "description": "Required for event execution. The validation will be done by the event bus when the event is triggered.",
            "type": "boolean"
          },
          "isSearchable": {
            "description": "Used to indicate if a ParameterEntry should be converted to ParamIndexes for ST-Spanner full-text search. DEPRECATED: use searchable.",
            "type": "boolean"
          },
          "logSettings": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoLogSettings"
          },
          "searchable": {
            "enum": [
              "UNSPECIFIED",
              "YES",
              "NO"
            ],
            "type": "string"
          },
          "taskVisibility": {
            "description": "List of tasks that can view this property, if empty then all.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoValueType": {
        "description": "Used for define type for values. Currently supported value types include int, string, double, array, and any proto message.",
        "properties": {
          "booleanValue": {
            "type": "boolean"
          },
          "doubleArray": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoDoubleArray"
          },
          "doubleValue": {
            "format": "double",
            "type": "number"
          },
          "intArray": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoIntArray"
          },
          "intValue": {
            "format": "int64",
            "type": "string"
          },
          "protoValue": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "type": "object"
          },
          "stringArray": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoStringArray"
          },
          "stringValue": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoDoubleArray": {
        "properties": {
          "values": {
            "items": {
              "format": "double",
              "type": "number"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoIntArray": {
        "properties": {
          "values": {
            "items": {
              "format": "int64",
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoStringArray": {
        "properties": {
          "values": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoLogSettings": {
        "description": "The LogSettings define the logging attributes for an event property. These attributes are used to map the property to the parameter in the log proto. Also used to define scrubbing/truncation behavior and PII information.",
        "properties": {
          "logFieldName": {
            "description": "The name of corresponding logging field of the event property. If omitted, assumes the same name as the event property key.",
            "type": "string"
          },
          "sanitizeOptions": {
            "$ref": "#/$defs/EnterpriseCrmLoggingGwsSanitizeOptions"
          },
          "seedPeriod": {
            "enum": [
              "SEED_PERIOD_UNSPECIFIED",
              "DAY",
              "WEEK",
              "MONTH"
            ],
            "type": "string"
          },
          "seedScope": {
            "enum": [
              "SEED_SCOPE_UNSPECIFIED",
              "EVENT_NAME",
              "TIME_PERIOD",
              "PARAM_NAME"
            ],
            "type": "string"
          },
          "shorteningLimits": {
            "$ref": "#/$defs/EnterpriseCrmLoggingGwsFieldLimits"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmLoggingGwsSanitizeOptions": {
        "description": "Identifies whether a field contains, or may contain, PII or sensitive data, and how to sanitize the field if it does. If a field's privacy type cannot be determined then it is sanitized (e.g., scrubbed). The specific sanitizer implementation is determined by run-time configuration and environment options (e.g., prod vs. qa). next_id: 5",
        "properties": {
          "isAlreadySanitized": {
            "description": "If true, the value has already been sanitized and needs no further sanitization. For instance, a D3 customer id is already an obfuscated entity and *might not* need further sanitization.",
            "type": "boolean"
          },
          "logType": {
            "description": "To which type(s) of logs the sanitize options apply.",
            "items": {
              "enum": [
                "LOG_TYPE_UNSPECIFIED",
                "GWS",
                "GTS",
                "ALL"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "privacy": {
            "enum": [
              "PRIVACY_TYPE_UNSPECIFIED",
              "NOT_PII",
              "PII",
              "SPII",
              "UNSURE"
            ],
            "type": "string"
          },
          "sanitizeType": {
            "enum": [
              "SANITIZE_TYPE_UNSPECIFIED",
              "SCRUB",
              "ANONYMIZE",
              "ANONYMIZE_LIMITED_REPEATABLE",
              "OBFUSCATE",
              "ENCRYPT",
              "DO_NOT_SANITIZE"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmLoggingGwsFieldLimits": {
        "description": "Describes string and array limits when writing to logs. When a limit is exceeded the *shortener_type* describes how to shorten the field. next_id: 6",
        "properties": {
          "logAction": {
            "enum": [
              "LOG_ACTION_UNSPECIFIED",
              "DONT_LOG",
              "LOG"
            ],
            "type": "string"
          },
          "logType": {
            "description": "To which type(s) of logs the limits apply.",
            "items": {
              "enum": [
                "LOG_TYPE_UNSPECIFIED",
                "GWS",
                "GTS",
                "ALL"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "maxArraySize": {
            "description": "maximum array size. If the array exceds this size, the field (list) is truncated.",
            "format": "int32",
            "type": "integer"
          },
          "maxStringLength": {
            "description": "maximum string length. If the field exceeds this amount the field is shortened.",
            "format": "int32",
            "type": "integer"
          },
          "shortenerType": {
            "enum": [
              "SHORTENER_TYPE_UNSPECIFIED",
              "SHORTEN",
              "HASH",
              "SHORTEN_WITH_HASH",
              "SHORTEN_EMAIL",
              "SHORTEN_EMAIL_WITH_HASH",
              "SHORTEN_DOMAIN"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmFrontendsEventbusProtoParameterValueType": {
        "description": "To support various types of parameter values. Next available id: 14",
        "properties": {
          "booleanArray": {
            "$ref": "#/$defs/EnterpriseCrmFrontendsEventbusProtoBooleanParameterArray"
          },
          "booleanValue": {
            "type": "boolean"
          },
          "doubleArray": {
            "$ref": "#/$defs/EnterpriseCrmFrontendsEventbusProtoDoubleParameterArray"
          },
          "doubleValue": {
            "format": "double",
            "type": "number"
          },
          "intArray": {
            "$ref": "#/$defs/EnterpriseCrmFrontendsEventbusProtoIntParameterArray"
          },
          "intValue": {
            "format": "int64",
            "type": "string"
          },
          "jsonValue": {
            "type": "string"
          },
          "protoArray": {
            "$ref": "#/$defs/EnterpriseCrmFrontendsEventbusProtoProtoParameterArray"
          },
          "protoValue": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "type": "object"
          },
          "serializedObjectValue": {
            "$ref": "#/$defs/EnterpriseCrmFrontendsEventbusProtoSerializedObjectParameter"
          },
          "stringArray": {
            "$ref": "#/$defs/EnterpriseCrmFrontendsEventbusProtoStringParameterArray"
          },
          "stringValue": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmFrontendsEventbusProtoBooleanParameterArray": {
        "properties": {
          "booleanValues": {
            "items": {
              "type": "boolean"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmFrontendsEventbusProtoDoubleParameterArray": {
        "properties": {
          "doubleValues": {
            "items": {
              "format": "double",
              "type": "number"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmFrontendsEventbusProtoIntParameterArray": {
        "properties": {
          "intValues": {
            "items": {
              "format": "int64",
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmFrontendsEventbusProtoProtoParameterArray": {
        "properties": {
          "protoValues": {
            "items": {
              "additionalProperties": {
                "description": "Properties of the object. Contains field @type with type URL."
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmFrontendsEventbusProtoSerializedObjectParameter": {
        "properties": {
          "objectValue": {
            "format": "byte",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmFrontendsEventbusProtoStringParameterArray": {
        "properties": {
          "stringValues": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoNodeIdentifier": {
        "description": "Represents a node identifier (type + id). Next highest id: 3",
        "properties": {
          "elementIdentifier": {
            "description": "Configuration of the edge.",
            "type": "string"
          },
          "elementType": {
            "description": "Destination node where the edge ends. It can only be a task config.",
            "enum": [
              "UNKNOWN_TYPE",
              "TASK_CONFIG",
              "TRIGGER_CONFIG"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudIntegrationsV1alphaTaskConfig": {
        "description": "The task configuration details. This is not the implementation of Task. There might be multiple TaskConfigs for the same Task.",
        "properties": {
          "description": {
            "description": "Optional. User-provided description intended to give additional business context about the task.",
            "type": "string"
          },
          "displayName": {
            "description": "Optional. User-provided label that is attached to this TaskConfig in the UI.",
            "type": "string"
          },
          "errorCatcherId": {
            "description": "Optional. Optional Error catcher id of the error catch flow which will be executed when execution error happens in the task",
            "type": "string"
          },
          "externalTaskType": {
            "description": "Optional. External task type of the task",
            "enum": [
              "EXTERNAL_TASK_TYPE_UNSPECIFIED",
              "NORMAL_TASK",
              "ERROR_TASK"
            ],
            "type": "string"
          },
          "failurePolicy": {
            "$ref": "#/$defs/GoogleCloudIntegrationsV1alphaFailurePolicy"
          },
          "jsonValidationOption": {
            "description": "Optional. If set, overrides the option configured in the Task implementation class.",
            "enum": [
              "JSON_VALIDATION_OPTION_UNSPECIFIED",
              "SKIP",
              "PRE_EXECUTION",
              "POST_EXECUTION",
              "PRE_POST_EXECUTION"
            ],
            "type": "string"
          },
          "nextTasks": {
            "description": "Optional. The set of tasks that are next in line to be executed as per the execution graph defined for the parent event, specified by `event_config_id`. Each of these next tasks are executed only if the condition associated with them evaluates to true.",
            "items": {
              "$ref": "#/$defs/GoogleCloudIntegrationsV1alphaNextTask"
            },
            "type": "array"
          },
          "nextTasksExecutionPolicy": {
            "description": "Optional. The policy dictating the execution of the next set of tasks for the current task.",
            "enum": [
              "NEXT_TASKS_EXECUTION_POLICY_UNSPECIFIED",
              "RUN_ALL_MATCH",
              "RUN_FIRST_MATCH"
            ],
            "type": "string"
          },
          "parameters": {
            "additionalProperties": {
              "$ref": "#/$defs/GoogleCloudIntegrationsV1alphaEventParameter"
            },
            "description": "Optional. The customized parameters the user can pass to this task.",
            "type": "object"
          },
          "position": {
            "$ref": "#/$defs/GoogleCloudIntegrationsV1alphaCoordinate"
          },
          "successPolicy": {
            "$ref": "#/$defs/GoogleCloudIntegrationsV1alphaSuccessPolicy"
          },
          "synchronousCallFailurePolicy": {
            "$ref": "#/$defs/GoogleCloudIntegrationsV1alphaFailurePolicy"
          },
          "task": {
            "description": "Optional. The name for the task.",
            "type": "string"
          },
          "taskExecutionStrategy": {
            "description": "Optional. The policy dictating the execution strategy of this task.",
            "enum": [
              "TASK_EXECUTION_STRATEGY_UNSPECIFIED",
              "WHEN_ALL_SUCCEED",
              "WHEN_ANY_SUCCEED",
              "WHEN_ALL_TASKS_AND_CONDITIONS_SUCCEED"
            ],
            "type": "string"
          },
          "taskId": {
            "description": "Required. The identifier of this task within its parent event config, specified by the client. This should be unique among all the tasks belong to the same event config. We use this field as the identifier to find next tasks (via field `next_tasks.task_id`).",
            "type": "string"
          },
          "taskTemplate": {
            "description": "Optional. Used to define task-template name if task is of type task-template",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudIntegrationsV1alphaFailurePolicy": {
        "description": "Policy that defines the task retry logic and failure type. If no FailurePolicy is defined for a task, all its dependent tasks will not be executed (i.e, a `retry_strategy` of NONE will be applied).",
        "properties": {
          "intervalTime": {
            "description": "Required if retry_strategy is FIXED_INTERVAL or LINEAR/EXPONENTIAL_BACKOFF/RESTART_INTEGRATION_WITH_BACKOFF. Defines the initial interval in seconds for backoff.",
            "format": "google-datetime",
            "type": "string"
          },
          "maxRetries": {
            "description": "Required if retry_strategy is FIXED_INTERVAL or LINEAR/EXPONENTIAL_BACKOFF/RESTART_INTEGRATION_WITH_BACKOFF. Defines the number of times the task will be retried if failed.",
            "format": "int32",
            "type": "integer"
          },
          "retryStrategy": {
            "description": "Defines what happens to the task upon failure.",
            "enum": [
              "RETRY_STRATEGY_UNSPECIFIED",
              "IGNORE",
              "NONE",
              "FATAL",
              "FIXED_INTERVAL",
              "LINEAR_BACKOFF",
              "EXPONENTIAL_BACKOFF",
              "RESTART_INTEGRATION_WITH_BACKOFF"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudIntegrationsV1alphaEventParameter": {
        "description": "This message is used for processing and persisting (when applicable) key value pair parameters for each event in the event bus.",
        "properties": {
          "key": {
            "description": "Key is used to retrieve the corresponding parameter value. This should be unique for a given fired event. These parameters must be predefined in the integration definition.",
            "type": "string"
          },
          "value": {
            "$ref": "#/$defs/GoogleCloudIntegrationsV1alphaValueType"
          }
        },
        "type": "object"
      },
      "GoogleCloudIntegrationsV1alphaSuccessPolicy": {
        "description": "Policy that dictates the behavior for the task after it completes successfully.",
        "properties": {
          "finalState": {
            "description": "State to which the execution snapshot status will be set if the task succeeds.",
            "enum": [
              "FINAL_STATE_UNSPECIFIED",
              "SUCCEEDED",
              "SUSPENDED"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmFrontendsEventbusProtoTaskConfig": {
        "description": "The task configuration details. This is not the implementation of Task. There might be multiple TaskConfigs for the same Task.",
        "properties": {
          "alertConfigs": {
            "description": "Alert configurations on error rate, warning rate, number of runs, durations, etc.",
            "items": {
              "$ref": "#/$defs/EnterpriseCrmEventbusProtoTaskAlertConfig"
            },
            "type": "array"
          },
          "createTime": {
            "description": "Auto-generated.",
            "format": "google-datetime",
            "type": "string"
          },
          "creatorEmail": {
            "description": "The creator's email address. Auto-generated from the user's email.",
            "type": "string"
          },
          "description": {
            "description": "User-provided description intended to give more business context about the task.",
            "type": "string"
          },
          "disableStrictTypeValidation": {
            "description": "If this config contains a TypedTask, allow validation to succeed if an input is read from the output of another TypedTask whose output type is declared as a superclass of the requested input type. For instance, if the previous task declares an output of type Message, any task with this flag enabled will pass validation when attempting to read any proto Message type from the resultant Event parameter.",
            "type": "boolean"
          },
          "errorCatcherId": {
            "description": "Optional Error catcher id of the error catch flow which will be executed when execution error happens in the task",
            "type": "string"
          },
          "externalTaskType": {
            "enum": [
              "EXTERNAL_TASK_TYPE_UNSPECIFIED",
              "NORMAL_TASK",
              "ERROR_TASK"
            ],
            "type": "string"
          },
          "failurePolicy": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoFailurePolicy"
          },
          "incomingEdgeCount": {
            "description": "The number of edges leading into this TaskConfig.",
            "format": "int32",
            "type": "integer"
          },
          "jsonValidationOption": {
            "description": "If set, overrides the option configured in the Task implementation class.",
            "enum": [
              "UNSPECIFIED_JSON_VALIDATION_OPTION",
              "SKIP",
              "PRE_EXECUTION",
              "POST_EXECUTION",
              "PRE_POST_EXECUTION"
            ],
            "type": "string"
          },
          "label": {
            "description": "User-provided label that is attached to this TaskConfig in the UI.",
            "type": "string"
          },
          "lastModifiedTime": {
            "description": "Auto-generated.",
            "format": "google-datetime",
            "type": "string"
          },
          "nextTasks": {
            "description": "The set of tasks that are next in line to be executed as per the execution graph defined for the parent event, specified by `event_config_id`. Each of these next tasks are executed only if the condition associated with them evaluates to true.",
            "items": {
              "$ref": "#/$defs/EnterpriseCrmEventbusProtoNextTask"
            },
            "type": "array"
          },
          "nextTasksExecutionPolicy": {
            "description": "The policy dictating the execution of the next set of tasks for the current task.",
            "enum": [
              "UNSPECIFIED",
              "RUN_ALL_MATCH",
              "RUN_FIRST_MATCH"
            ],
            "type": "string"
          },
          "parameters": {
            "additionalProperties": {
              "$ref": "#/$defs/EnterpriseCrmFrontendsEventbusProtoParameterEntry"
            },
            "description": "The customized parameters the user can pass to this task.",
            "type": "object"
          },
          "position": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoCoordinate"
          },
          "precondition": {
            "description": "Optional. Standard filter expression evaluated before execution. Independent of other conditions and tasks. Can be used to enable rollout. e.g. \"rollout(5)\" will only allow 5% of incoming traffic to task.",
            "type": "string"
          },
          "preconditionLabel": {
            "description": "Optional. User-provided label that is attached to precondition in the UI.",
            "type": "string"
          },
          "rollbackStrategy": {
            "$ref": "#/$defs/EnterpriseCrmFrontendsEventbusProtoRollbackStrategy"
          },
          "successPolicy": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoSuccessPolicy"
          },
          "synchronousCallFailurePolicy": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoFailurePolicy"
          },
          "taskEntity": {
            "$ref": "#/$defs/EnterpriseCrmFrontendsEventbusProtoTaskEntity"
          },
          "taskExecutionStrategy": {
            "description": "The policy dictating the execution strategy of this task.",
            "enum": [
              "WHEN_ALL_SUCCEED",
              "WHEN_ANY_SUCCEED",
              "WHEN_ALL_TASKS_AND_CONDITIONS_SUCCEED"
            ],
            "type": "string"
          },
          "taskName": {
            "description": "The name for the task.",
            "type": "string"
          },
          "taskNumber": {
            "description": "REQUIRED: the identifier of this task within its parent event config, specified by the client. This should be unique among all the tasks belong to the same event config. We use this field as the identifier to find next tasks (via field `next_tasks.task_number`).",
            "type": "string"
          },
          "taskSpec": {
            "description": "A string template that allows user to configure task parameters (with either literal default values or tokens which will be resolved at execution time) for the task. It will eventually replace the old \"parameters\" field.",
            "type": "string"
          },
          "taskTemplateName": {
            "description": "Used to define task-template name if task is of type task-template",
            "type": "string"
          },
          "taskType": {
            "description": "Defines the type of the task",
            "enum": [
              "TASK",
              "ASIS_TEMPLATE",
              "IO_TEMPLATE"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoTaskAlertConfig": {
        "description": "Message to be used to configure alerting in the {@code TaskConfig} protos for tasks in an event.",
        "properties": {
          "aggregationPeriod": {
            "description": "The period over which the metric value should be aggregated and evaluated. Format is , where integer should be a positive integer and unit should be one of (s,m,h,d,w) meaning (second, minute, hour, day, week).",
            "type": "string"
          },
          "alertDisabled": {
            "description": "Set to false by default. When set to true, the metrics are not aggregated or pushed to Monarch for this workflow alert.",
            "type": "boolean"
          },
          "alertName": {
            "description": "A name to identify this alert. This will be displayed in the alert subject. If set, this name should be unique in within the scope of the containing workflow.",
            "type": "string"
          },
          "clientId": {
            "description": "Client associated with this alert configuration. Must be a client enabled in one of the containing workflow's triggers.",
            "type": "string"
          },
          "durationThresholdMs": {
            "description": "Should be specified only for TASK_AVERAGE_DURATION and TASK_PERCENTILE_DURATION metrics. This member should be used to specify what duration value the metrics should exceed for the alert to trigger.",
            "format": "int64",
            "type": "string"
          },
          "errorEnumList": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoBaseAlertConfigErrorEnumList"
          },
          "metricType": {
            "enum": [
              "METRIC_TYPE_UNSPECIFIED",
              "TASK_ERROR_RATE",
              "TASK_WARNING_RATE",
              "TASK_RATE",
              "TASK_AVERAGE_DURATION",
              "TASK_PERCENTILE_DURATION"
            ],
            "type": "string"
          },
          "numAggregationPeriods": {
            "description": "For how many contiguous aggregation periods should the expected min or max be violated for the alert to be fired.",
            "format": "int32",
            "type": "integer"
          },
          "onlyFinalAttempt": {
            "description": "Only count final task attempts, not retries.",
            "type": "boolean"
          },
          "playbookUrl": {
            "description": "Link to a playbook for resolving the issue that triggered this alert.",
            "type": "string"
          },
          "thresholdType": {
            "description": "The threshold type for which this alert is being configured. If value falls below expected_min or exceeds expected_max, an alert will be fired.",
            "enum": [
              "UNSPECIFIED_THRESHOLD_TYPE",
              "EXPECTED_MIN",
              "EXPECTED_MAX"
            ],
            "type": "string"
          },
          "thresholdValue": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoBaseAlertConfigThresholdValue"
          },
          "warningEnumList": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoBaseAlertConfigErrorEnumList"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoBaseAlertConfigErrorEnumList": {
        "description": "List of error enums for alerts.",
        "properties": {
          "enumStrings": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "filterType": {
            "enum": [
              "DEFAULT_INCLUSIVE",
              "EXCLUSIVE"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoBaseAlertConfigThresholdValue": {
        "description": "The threshold value of the metric, above or below which the alert should be triggered. See EventAlertConfig or TaskAlertConfig for the different alert metric types in each case. For the *RATE metrics, one or both of these fields may be set. Zero is the default value and can be left at that. For *PERCENTILE_DURATION metrics, one or both of these fields may be set, and also, the duration threshold value should be specified in the threshold_duration_ms member below. For *AVERAGE_DURATION metrics, these fields should not be set at all. A different member, threshold_duration_ms, must be set in the EventAlertConfig or the TaskAlertConfig.",
        "properties": {
          "absolute": {
            "format": "int64",
            "type": "string"
          },
          "percentage": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoFailurePolicy": {
        "description": "Policy that defines the task retry logic and failure type. If no FailurePolicy is defined for a task, all its dependent tasks will not be executed (i.e, a `retry_strategy` of NONE will be applied).",
        "properties": {
          "intervalInSeconds": {
            "description": "Required if retry_strategy is FIXED_INTERVAL or LINEAR/EXPONENTIAL_BACKOFF/RESTART_WORKFLOW_WITH_BACKOFF. Defines the initial interval for backoff.",
            "format": "int64",
            "type": "string"
          },
          "maxNumRetries": {
            "description": "Required if retry_strategy is FIXED_INTERVAL or LINEAR/EXPONENTIAL_BACKOFF/RESTART_WORKFLOW_WITH_BACKOFF. Defines the number of times the task will be retried if failed.",
            "format": "int32",
            "type": "integer"
          },
          "retryStrategy": {
            "description": "Defines what happens to the task upon failure.",
            "enum": [
              "UNSPECIFIED",
              "IGNORE",
              "NONE",
              "FATAL",
              "FIXED_INTERVAL",
              "LINEAR_BACKOFF",
              "EXPONENTIAL_BACKOFF",
              "RESTART_WORKFLOW_WITH_BACKOFF"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoNextTask": {
        "description": "The task that is next in line to be executed, if the condition specified evaluated to true.",
        "properties": {
          "combinedConditions": {
            "description": "Combined condition for this task to become an eligible next task. Each of these combined_conditions are joined with logical OR. DEPRECATED: use `condition`",
            "items": {
              "$ref": "#/$defs/EnterpriseCrmEventbusProtoCombinedCondition"
            },
            "type": "array"
          },
          "condition": {
            "description": "Standard filter expression for this task to become an eligible next task.",
            "type": "string"
          },
          "description": {
            "description": "User-provided description intended to give more business context about the next task edge or condition.",
            "type": "string"
          },
          "label": {
            "description": "User-provided label that is attached to this edge in the UI.",
            "type": "string"
          },
          "taskConfigId": {
            "description": "ID of the next task.",
            "type": "string"
          },
          "taskNumber": {
            "description": "Task number of the next task.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoCombinedCondition": {
        "description": "This message recursively combines constituent conditions using logical AND.",
        "properties": {
          "conditions": {
            "description": "A set of individual constituent conditions.",
            "items": {
              "$ref": "#/$defs/EnterpriseCrmEventbusProtoCondition"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoCondition": {
        "description": "Condition that uses `operator` to evaluate the key against the value.",
        "properties": {
          "eventPropertyKey": {
            "description": "Key that's evaluated against the `value`. Please note the data type of the runtime value associated with the key should match the data type of `value`, else an IllegalArgumentException is thrown.",
            "type": "string"
          },
          "operator": {
            "description": "Operator used to evaluate the condition. Please note that an operator with an inappropriate key/value operand will result in IllegalArgumentException, e.g. CONTAINS with boolean key/value pair.",
            "enum": [
              "UNSET",
              "EQUALS",
              "CONTAINS",
              "LESS_THAN",
              "GREATER_THAN",
              "EXISTS",
              "DOES_NOT_EXIST",
              "IS_EMPTY",
              "IS_NOT_EMPTY"
            ],
            "type": "string"
          },
          "value": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoValueType"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmFrontendsEventbusProtoParameterEntry": {
        "description": "Key-value pair of EventBus parameters.",
        "properties": {
          "dataType": {
            "description": "Explicitly getting the type of the parameter.",
            "enum": [
              "DATA_TYPE_UNSPECIFIED",
              "STRING_VALUE",
              "INT_VALUE",
              "DOUBLE_VALUE",
              "BOOLEAN_VALUE",
              "PROTO_VALUE",
              "SERIALIZED_OBJECT_VALUE",
              "STRING_ARRAY",
              "INT_ARRAY",
              "DOUBLE_ARRAY",
              "PROTO_ARRAY",
              "PROTO_ENUM",
              "BOOLEAN_ARRAY",
              "PROTO_ENUM_ARRAY",
              "BYTES",
              "BYTES_ARRAY",
              "NON_SERIALIZABLE_OBJECT",
              "JSON_VALUE"
            ],
            "type": "string"
          },
          "key": {
            "description": "Key is used to retrieve the corresponding parameter value. This should be unique for a given fired event. These parameters must be predefined in the workflow definition.",
            "type": "string"
          },
          "value": {
            "$ref": "#/$defs/EnterpriseCrmFrontendsEventbusProtoParameterValueType"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoCoordinate": {
        "description": "Represents two-dimensional positions.",
        "properties": {
          "x": {
            "format": "int32",
            "type": "integer"
          },
          "y": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmFrontendsEventbusProtoRollbackStrategy": {
        "description": "Next available id: 4",
        "properties": {
          "parameters": {
            "$ref": "#/$defs/EnterpriseCrmFrontendsEventbusProtoEventParameters"
          },
          "rollbackTaskImplementationClassName": {
            "description": "Required. This is the name of the task that needs to be executed upon rollback of this task.",
            "type": "string"
          },
          "taskNumbersToRollback": {
            "description": "Required. These are the tasks numbers of the tasks whose `rollback_strategy.rollback_task_implementation_class_name` needs to be executed upon failure of this task.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmFrontendsEventbusProtoEventParameters": {
        "description": "LINT.IfChange This message is used for processing and persisting (when applicable) key value pair parameters for each event in the event bus. Please see",
        "properties": {
          "parameters": {
            "description": "Parameters are a part of Event and can be used to communicate between different tasks that are part of the same workflow execution.",
            "items": {
              "$ref": "#/$defs/EnterpriseCrmFrontendsEventbusProtoParameterEntry"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoSuccessPolicy": {
        "description": "Policy that dictates the behavior for the task after it completes successfully.",
        "properties": {
          "finalState": {
            "description": "State to which the execution snapshot status will be set if the task succeeds.",
            "enum": [
              "UNSPECIFIED",
              "SUCCEEDED",
              "SUSPENDED"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmFrontendsEventbusProtoTaskEntity": {
        "description": "Contains a task's metadata and associated information. Next available id: 7",
        "properties": {
          "disabledForVpcSc": {
            "description": "True if the task has conflict with vpcsc",
            "type": "boolean"
          },
          "metadata": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoTaskMetadata"
          },
          "paramSpecs": {
            "$ref": "#/$defs/EnterpriseCrmFrontendsEventbusProtoParamSpecsMessage"
          },
          "stats": {
            "$ref": "#/$defs/EnterpriseCrmEventbusStats"
          },
          "taskType": {
            "description": "Defines the type of the task",
            "enum": [
              "TASK",
              "ASIS_TEMPLATE",
              "IO_TEMPLATE"
            ],
            "type": "string"
          },
          "uiConfig": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoTaskUiConfig"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoTaskMetadata": {
        "description": "TaskMetadata are attributes that are associated to every common Task we have.",
        "properties": {
          "activeTaskName": {
            "description": "The new task name to replace the current task if it is deprecated. Otherwise, it is the same as the current task name.",
            "type": "string"
          },
          "admins": {
            "items": {
              "$ref": "#/$defs/EnterpriseCrmEventbusProtoTaskMetadataAdmin"
            },
            "type": "array"
          },
          "category": {
            "enum": [
              "UNSPECIFIED_CATEGORY",
              "CUSTOM",
              "FLOW_CONTROL",
              "DATA_MANIPULATION",
              "SCRIPTING",
              "CONNECTOR",
              "HIDDEN",
              "CLOUD_SYSTEMS",
              "CUSTOM_TASK_TEMPLATE",
              "TASK_RECOMMENDATIONS"
            ],
            "type": "string"
          },
          "codeSearchLink": {
            "description": "The Code Search link to the Task Java file.",
            "type": "string"
          },
          "defaultJsonValidationOption": {
            "description": "Controls whether JSON workflow parameters are validated against provided schemas before and/or after this task's execution.",
            "enum": [
              "UNSPECIFIED_JSON_VALIDATION_OPTION",
              "SKIP",
              "PRE_EXECUTION",
              "POST_EXECUTION",
              "PRE_POST_EXECUTION"
            ],
            "type": "string"
          },
          "defaultSpec": {
            "description": "Contains the initial configuration of the task with default values set. For now, The string should be compatible to an ASCII-proto format.",
            "type": "string"
          },
          "description": {
            "description": "In a few sentences, describe the purpose and usage of the task.",
            "type": "string"
          },
          "descriptiveName": {
            "description": "The string name to show on the task list on the Workflow editor screen. This should be a very short, one to two words name for the task. (e.g. \"Send Mail\")",
            "type": "string"
          },
          "docMarkdown": {
            "description": "Snippet of markdown documentation to embed in the RHP for this task.",
            "type": "string"
          },
          "externalCategory": {
            "enum": [
              "UNSPECIFIED_EXTERNAL_CATEGORY",
              "CORE",
              "CONNECTORS",
              "EXTERNAL_HTTP",
              "EXTERNAL_INTEGRATION_SERVICES",
              "EXTERNAL_CUSTOMER_ACTIONS",
              "EXTERNAL_FLOW_CONTROL",
              "EXTERNAL_WORKSPACE",
              "EXTERNAL_SECURITY",
              "EXTERNAL_DATABASES",
              "EXTERNAL_ANALYTICS",
              "EXTERNAL_BYOC",
              "EXTERNAL_BYOT",
              "EXTERNAL_ARTIFICIAL_INTELIGENCE",
              "EXTERNAL_DATA_MANIPULATION"
            ],
            "type": "string"
          },
          "externalCategorySequence": {
            "description": "Sequence with which the task in specific category to be displayed in task discovery panel for external users.",
            "format": "int32",
            "type": "integer"
          },
          "externalDocHtml": {
            "description": "External-facing documention embedded in the RHP for this task.",
            "type": "string"
          },
          "externalDocLink": {
            "description": "Doc link for external-facing documentation (separate from g3doc).",
            "type": "string"
          },
          "externalDocMarkdown": {
            "description": "DEPRECATED: Use external_doc_html.",
            "type": "string"
          },
          "g3DocLink": {
            "description": "URL to the associated G3 Doc for the task if available",
            "type": "string"
          },
          "iconLink": {
            "description": "URL to gstatic image icon for this task. This icon shows up on the task list panel along with the task name in the Workflow Editor screen. Use the 24p, 2x, gray color icon image format.",
            "type": "string"
          },
          "isDeprecated": {
            "description": "The deprecation status of the current task. Default value is false;",
            "type": "boolean"
          },
          "name": {
            "description": "The actual class name or the annotated name of the task. Task Author should initialize this field with value from the getName() method of the Task class.",
            "type": "string"
          },
          "standaloneExternalDocHtml": {
            "description": "External-facing documention for standalone IP in pantheon embedded in the RHP for this task. Non null only if different from external_doc_html",
            "type": "string"
          },
          "status": {
            "description": "Allows author to indicate if the task is ready to use or not. If not set, then it will default to INACTIVE.",
            "enum": [
              "UNSPECIFIED_STATUS",
              "DEFAULT_INACTIVE",
              "ACTIVE"
            ],
            "type": "string"
          },
          "system": {
            "enum": [
              "UNSPECIFIED_SYSTEM",
              "GENERIC",
              "BUGANIZER",
              "SALESFORCE",
              "CLOUD_SQL",
              "PLX",
              "SHEETS",
              "GOOGLE_GROUPS",
              "EMAIL",
              "SPANNER",
              "DATA_BRIDGE"
            ],
            "type": "string"
          },
          "tags": {
            "description": "A set of tags that pertain to a particular task. This can be used to improve the searchability of tasks with several names (\"REST Caller\" vs. \"Call REST Endpoint\") or to help users find tasks based on related words.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoTaskMetadataAdmin": {
        "description": "Admins are owners of a Task, and have all permissions on a particular task identified by the task name. By default, Eventbus periodically scans all task metadata and syncs (adds) any new admins defined here to Zanzibar.",
        "properties": {
          "googleGroupEmail": {
            "type": "string"
          },
          "userEmail": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmFrontendsEventbusProtoParamSpecsMessage": {
        "properties": {
          "parameters": {
            "items": {
              "$ref": "#/$defs/EnterpriseCrmFrontendsEventbusProtoParamSpecEntry"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmFrontendsEventbusProtoParamSpecEntry": {
        "description": "Key-value pair of EventBus task parameters. Next id: 13",
        "properties": {
          "className": {
            "description": "The FQCN of the Java object this represents. A string, for example, would be \"java.lang.String\". If this is \"java.lang.Object\", the parameter can be of any type.",
            "type": "string"
          },
          "collectionElementClassName": {
            "description": "If it is a collection of objects, this would be the FCQN of every individual element in the collection. If this is \"java.lang.Object\", the parameter is a collection of any type.",
            "type": "string"
          },
          "config": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoParamSpecEntryConfig"
          },
          "dataType": {
            "description": "The data type of the parameter.",
            "enum": [
              "DATA_TYPE_UNSPECIFIED",
              "STRING_VALUE",
              "INT_VALUE",
              "DOUBLE_VALUE",
              "BOOLEAN_VALUE",
              "PROTO_VALUE",
              "SERIALIZED_OBJECT_VALUE",
              "STRING_ARRAY",
              "INT_ARRAY",
              "DOUBLE_ARRAY",
              "PROTO_ARRAY",
              "PROTO_ENUM",
              "BOOLEAN_ARRAY",
              "PROTO_ENUM_ARRAY",
              "BYTES",
              "BYTES_ARRAY",
              "NON_SERIALIZABLE_OBJECT",
              "JSON_VALUE"
            ],
            "type": "string"
          },
          "defaultValue": {
            "$ref": "#/$defs/EnterpriseCrmFrontendsEventbusProtoParameterValueType"
          },
          "isDeprecated": {
            "description": "If set, this entry is deprecated, so further use of this parameter should be prohibited.",
            "type": "boolean"
          },
          "isOutput": {
            "type": "boolean"
          },
          "jsonSchema": {
            "description": "If the data_type is JSON_VALUE, then this will define its schema.",
            "type": "string"
          },
          "key": {
            "description": "Key is used to retrieve the corresponding parameter value. This should be unique for a given task. These parameters must be predefined in the workflow definition.",
            "type": "string"
          },
          "protoDef": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoParamSpecEntryProtoDefinition"
          },
          "required": {
            "description": "If set, the user must provide an input value for this parameter.",
            "type": "boolean"
          },
          "validationRule": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoParamSpecEntryValidationRule"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoParamSpecEntryConfig": {
        "properties": {
          "descriptivePhrase": {
            "description": "A short phrase to describe what this parameter contains.",
            "type": "string"
          },
          "helpText": {
            "description": "Detailed help text for this parameter containing information not provided elsewhere. For example, instructions on how to migrate from a deprecated parameter.",
            "type": "string"
          },
          "hideDefaultValue": {
            "description": "Whether the default value is hidden in the UI.",
            "type": "boolean"
          },
          "inputDisplayOption": {
            "enum": [
              "DEFAULT",
              "STRING_MULTI_LINE",
              "NUMBER_SLIDER",
              "BOOLEAN_TOGGLE"
            ],
            "type": "string"
          },
          "isHidden": {
            "description": "Whether this field is hidden in the UI.",
            "type": "boolean"
          },
          "label": {
            "description": "A user-friendly label for the parameter.",
            "type": "string"
          },
          "parameterNameOption": {
            "enum": [
              "DEFAULT_NOT_PARAMETER_NAME",
              "IS_PARAMETER_NAME",
              "KEY_IS_PARAMETER_NAME",
              "VALUE_IS_PARAMETER_NAME"
            ],
            "type": "string"
          },
          "subSectionLabel": {
            "description": "A user-friendly label for subSection under which the parameter will be displayed.",
            "type": "string"
          },
          "uiPlaceholderText": {
            "description": "Placeholder text which will appear in the UI input form for this parameter.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoParamSpecEntryProtoDefinition": {
        "properties": {
          "fullName": {
            "description": "The fully-qualified proto name. This message, for example, would be \"enterprise.crm.eventbus.proto.ParamSpecEntry.ProtoDefinition\".",
            "type": "string"
          },
          "path": {
            "description": "Path to the proto file that contains the message type's definition.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoParamSpecEntryValidationRule": {
        "properties": {
          "doubleRange": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoParamSpecEntryValidationRuleDoubleRange"
          },
          "intRange": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoParamSpecEntryValidationRuleIntRange"
          },
          "stringRegex": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoParamSpecEntryValidationRuleStringRegex"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoParamSpecEntryValidationRuleDoubleRange": {
        "description": "Range used to validate doubles and floats.",
        "properties": {
          "max": {
            "description": "The inclusive maximum of the acceptable range.",
            "format": "double",
            "type": "number"
          },
          "min": {
            "description": "The inclusive minimum of the acceptable range.",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoParamSpecEntryValidationRuleIntRange": {
        "description": "Range used to validate longs and ints.",
        "properties": {
          "max": {
            "description": "The inclusive maximum of the acceptable range.",
            "format": "int64",
            "type": "string"
          },
          "min": {
            "description": "The inclusive minimum of the acceptable range.",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoParamSpecEntryValidationRuleStringRegex": {
        "description": "Rule used to validate strings.",
        "properties": {
          "exclusive": {
            "description": "Whether the regex matcher is applied exclusively (if true, matching values will be rejected).",
            "type": "boolean"
          },
          "regex": {
            "description": "The regex applied to the input value(s).",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusStats": {
        "description": "Stats for the requested dimensions: QPS, duration, and error/warning rate",
        "properties": {
          "dimensions": {
            "$ref": "#/$defs/EnterpriseCrmEventbusStatsDimensions"
          },
          "durationInSeconds": {
            "description": "Average duration in seconds.",
            "format": "double",
            "type": "number"
          },
          "errorRate": {
            "description": "Average error rate.",
            "format": "double",
            "type": "number"
          },
          "qps": {
            "description": "Queries per second.",
            "format": "double",
            "type": "number"
          },
          "warningRate": {
            "description": "Average warning rate.",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusStatsDimensions": {
        "properties": {
          "clientId": {
            "type": "string"
          },
          "enumFilterType": {
            "description": "Whether to include or exclude the enums matching the regex.",
            "enum": [
              "DEFAULT_INCLUSIVE",
              "EXCLUSIVE"
            ],
            "type": "string"
          },
          "errorEnumString": {
            "type": "string"
          },
          "retryAttempt": {
            "enum": [
              "UNSPECIFIED",
              "FINAL",
              "RETRYABLE",
              "CANCELED"
            ],
            "type": "string"
          },
          "taskName": {
            "type": "string"
          },
          "taskNumber": {
            "type": "string"
          },
          "triggerId": {
            "description": "Stats have been or will be aggregated on set fields for any semantically-meaningful combination.",
            "type": "string"
          },
          "warningEnumString": {
            "type": "string"
          },
          "workflowId": {
            "type": "string"
          },
          "workflowName": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoTaskUiConfig": {
        "description": "Task authors would use this type to configure the UI for a particular task by specifying what UI config modules should be included to compose the UI. Learn more about config module framework:",
        "properties": {
          "taskUiModuleConfigs": {
            "description": "Configurations of included config modules.",
            "items": {
              "$ref": "#/$defs/EnterpriseCrmEventbusProtoTaskUiModuleConfig"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoTaskUiModuleConfig": {
        "description": "Task author would use this type to configure a config module.",
        "properties": {
          "moduleId": {
            "description": "ID of the config module.",
            "enum": [
              "UNSPECIFIED_TASK_MODULE",
              "LABEL",
              "ERROR_HANDLING",
              "TASK_PARAM_TABLE",
              "TASK_PARAM_FORM",
              "PRECONDITION",
              "SCRIPT_EDITOR",
              "RPC",
              "TASK_SUMMARY",
              "SUSPENSION",
              "RPC_TYPED",
              "SUB_WORKFLOW",
              "APPS_SCRIPT_NAVIGATOR",
              "SUB_WORKFLOW_FOR_EACH_LOOP",
              "FIELD_MAPPING",
              "README",
              "REST_CALLER",
              "SUB_WORKFLOW_SCATTER_GATHER",
              "CLOUD_SQL",
              "GENERIC_CONNECTOR_TASK"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoTeardown": {
        "properties": {
          "teardownTaskConfigs": {
            "description": "Required.",
            "items": {
              "$ref": "#/$defs/EnterpriseCrmEventbusProtoTeardownTaskConfig"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoTeardownTaskConfig": {
        "properties": {
          "creatorEmail": {
            "description": "The creator's email address.",
            "type": "string"
          },
          "name": {
            "description": "Required. Unique identifier of the teardown task within this Config. We use this field as the identifier to find next teardown tasks.",
            "type": "string"
          },
          "nextTeardownTask": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoNextTeardownTask"
          },
          "parameters": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoEventParameters"
          },
          "properties": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoEventBusProperties"
          },
          "teardownTaskImplementationClassName": {
            "description": "Required. Implementation class name.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoNextTeardownTask": {
        "description": "The teardown task that is next in line to be executed. We support only sequential execution of teardown tasks (i.e. no branching).",
        "properties": {
          "name": {
            "description": "Required. Name of the next teardown task.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoEventParameters": {
        "description": "LINT.IfChange This message is used for processing and persisting (when applicable) key value pair parameters for each event in the event bus. Please see",
        "properties": {
          "parameters": {
            "description": "Parameters are a part of Event and can be used to communicate between different tasks that are part of the same integration execution.",
            "items": {
              "$ref": "#/$defs/EnterpriseCrmEventbusProtoParameterEntry"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoParameterEntry": {
        "description": "Key-value pair of EventBus parameters.",
        "properties": {
          "key": {
            "description": "Key is used to retrieve the corresponding parameter value. This should be unique for a given fired event. These parameters must be predefined in the integration definition.",
            "type": "string"
          },
          "value": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoParameterValueType"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoParameterValueType": {
        "description": "LINT.IfChange To support various types of parameter values. Next available id: 14",
        "properties": {
          "booleanArray": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoBooleanParameterArray"
          },
          "booleanValue": {
            "type": "boolean"
          },
          "doubleArray": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoDoubleParameterArray"
          },
          "doubleValue": {
            "format": "double",
            "type": "number"
          },
          "intArray": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoIntParameterArray"
          },
          "intValue": {
            "format": "int64",
            "type": "string"
          },
          "protoArray": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoProtoParameterArray"
          },
          "protoValue": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "type": "object"
          },
          "serializedObjectValue": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoSerializedObjectParameter"
          },
          "stringArray": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoStringParameterArray"
          },
          "stringValue": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoBooleanParameterArray": {
        "properties": {
          "booleanValues": {
            "items": {
              "type": "boolean"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoDoubleParameterArray": {
        "properties": {
          "doubleValues": {
            "items": {
              "format": "double",
              "type": "number"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoIntParameterArray": {
        "properties": {
          "intValues": {
            "items": {
              "format": "int64",
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoProtoParameterArray": {
        "properties": {
          "protoValues": {
            "items": {
              "additionalProperties": {
                "description": "Properties of the object. Contains field @type with type URL."
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoSerializedObjectParameter": {
        "properties": {
          "objectValue": {
            "format": "byte",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoStringParameterArray": {
        "properties": {
          "stringValues": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoEventBusProperties": {
        "description": "LINT.IfChange This message is used for storing key value pair properties for each Event / Task in the EventBus.",
        "properties": {
          "properties": {
            "description": "An unordered list of property entries.",
            "items": {
              "$ref": "#/$defs/EnterpriseCrmEventbusProtoPropertyEntry"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoPropertyEntry": {
        "description": "Key-value pair of EventBus property.",
        "properties": {
          "key": {
            "description": "Key is used to retrieve the corresponding property value. This should be unique for a given fired event. The Tasks should be aware of the keys used while firing the events for them to be able to retrieve the values.",
            "type": "string"
          },
          "value": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoValueType"
          }
        },
        "type": "object"
      },
      "GoogleCloudIntegrationsV1alphaTriggerConfig": {
        "description": "Configuration detail of a trigger.",
        "properties": {
          "alertConfig": {
            "description": "Optional. An alert threshold configuration for the [trigger + client + integration] tuple. If these values are not specified in the trigger config, default values will be populated by the system. Note that there must be exactly one alert threshold configured per [client + trigger + integration] when published.",
            "items": {
              "$ref": "#/$defs/GoogleCloudIntegrationsV1alphaIntegrationAlertConfig"
            },
            "type": "array"
          },
          "cloudSchedulerConfig": {
            "$ref": "#/$defs/GoogleCloudIntegrationsV1alphaCloudSchedulerConfig"
          },
          "description": {
            "description": "Optional. User-provided description intended to give additional business context about the task.",
            "type": "string"
          },
          "errorCatcherId": {
            "description": "Optional. Optional Error catcher id of the error catch flow which will be executed when execution error happens in the task",
            "type": "string"
          },
          "label": {
            "description": "Optional. The user created label for a particular trigger.",
            "type": "string"
          },
          "nextTasksExecutionPolicy": {
            "description": "Optional. Dictates how next tasks will be executed.",
            "enum": [
              "NEXT_TASKS_EXECUTION_POLICY_UNSPECIFIED",
              "RUN_ALL_MATCH",
              "RUN_FIRST_MATCH"
            ],
            "type": "string"
          },
          "position": {
            "$ref": "#/$defs/GoogleCloudIntegrationsV1alphaCoordinate"
          },
          "properties": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Optional. Configurable properties of the trigger, not to be confused with integration parameters. E.g. \"name\" is a property for API triggers and \"subscription\" is a property for Pub/sub triggers.",
            "type": "object"
          },
          "startTasks": {
            "description": "Optional. Set of tasks numbers from where the integration execution is started by this trigger. If this is empty, then integration is executed with default start tasks. In the list of start tasks, none of two tasks can have direct ancestor-descendant relationships (i.e. in a same integration execution graph).",
            "items": {
              "$ref": "#/$defs/GoogleCloudIntegrationsV1alphaNextTask"
            },
            "type": "array"
          },
          "trigger": {
            "description": "Optional. Name of the trigger. Example: \"API Trigger\", \"Cloud Pub Sub Trigger\" When set will be sent out to monitoring dashabord for tracking purpose.",
            "type": "string"
          },
          "triggerId": {
            "description": "Optional. The backend trigger ID.",
            "type": "string"
          },
          "triggerNumber": {
            "description": "Required. A number to uniquely identify each trigger config within the integration on UI.",
            "type": "string"
          },
          "triggerType": {
            "description": "Optional. Type of trigger",
            "enum": [
              "TRIGGER_TYPE_UNSPECIFIED",
              "CRON",
              "API",
              "SFDC_CHANNEL",
              "CLOUD_PUBSUB_EXTERNAL",
              "SFDC_CDC_CHANNEL",
              "CLOUD_SCHEDULER",
              "INTEGRATION_CONNECTOR_TRIGGER"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudIntegrationsV1alphaIntegrationAlertConfig": {
        "description": "Message to be used to configure custom alerting in the {@code EventConfig} protos for an event.",
        "properties": {
          "aggregationPeriod": {
            "description": "The period over which the metric value should be aggregated and evaluated. Format is , where integer should be a positive integer and unit should be one of (s,m,h,d,w) meaning (second, minute, hour, day, week). For an EXPECTED_MIN threshold, this aggregation_period must be lesser than 24 hours.",
            "type": "string"
          },
          "alertThreshold": {
            "description": "For how many contiguous aggregation periods should the expected min or max be violated for the alert to be fired.",
            "format": "int32",
            "type": "integer"
          },
          "disableAlert": {
            "description": "Set to false by default. When set to true, the metrics are not aggregated or pushed to Monarch for this integration alert.",
            "type": "boolean"
          },
          "displayName": {
            "description": "Name of the alert. This will be displayed in the alert subject. If set, this name should be unique within the scope of the integration.",
            "type": "string"
          },
          "durationThreshold": {
            "description": "Should be specified only for *AVERAGE_DURATION and *PERCENTILE_DURATION metrics. This member should be used to specify what duration value the metrics should exceed for the alert to trigger.",
            "format": "google-duration",
            "type": "string"
          },
          "metricType": {
            "description": "The type of metric.",
            "enum": [
              "METRIC_TYPE_UNSPECIFIED",
              "EVENT_ERROR_RATE",
              "EVENT_WARNING_RATE",
              "TASK_ERROR_RATE",
              "TASK_WARNING_RATE",
              "TASK_RATE",
              "EVENT_RATE",
              "EVENT_AVERAGE_DURATION",
              "EVENT_PERCENTILE_DURATION",
              "TASK_AVERAGE_DURATION",
              "TASK_PERCENTILE_DURATION"
            ],
            "type": "string"
          },
          "onlyFinalAttempt": {
            "description": "For either events or tasks, depending on the type of alert, count only final attempts, not retries.",
            "type": "boolean"
          },
          "thresholdType": {
            "description": "The threshold type, whether lower(expected_min) or upper(expected_max), for which this alert is being configured. If value falls below expected_min or exceeds expected_max, an alert will be fired.",
            "enum": [
              "THRESHOLD_TYPE_UNSPECIFIED",
              "EXPECTED_MIN",
              "EXPECTED_MAX"
            ],
            "type": "string"
          },
          "thresholdValue": {
            "$ref": "#/$defs/GoogleCloudIntegrationsV1alphaIntegrationAlertConfigThresholdValue"
          }
        },
        "type": "object"
      },
      "GoogleCloudIntegrationsV1alphaIntegrationAlertConfigThresholdValue": {
        "description": "The threshold value of the metric, above or below which the alert should be triggered. See EventAlertConfig or TaskAlertConfig for the different alert metric types in each case. For the *RATE metrics, one or both of these fields may be set. Zero is the default value and can be left at that. For *PERCENTILE_DURATION metrics, one or both of these fields may be set, and also, the duration threshold value should be specified in the threshold_duration_ms member below. For *AVERAGE_DURATION metrics, these fields should not be set at all. A different member, threshold_duration_ms, must be set in the EventAlertConfig or the TaskAlertConfig.",
        "properties": {
          "absolute": {
            "description": "Absolute value threshold.",
            "format": "int64",
            "type": "string"
          },
          "percentage": {
            "description": "Percentage threshold.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GoogleCloudIntegrationsV1alphaCloudSchedulerConfig": {
        "description": "Cloud Scheduler Trigger configuration",
        "properties": {
          "cronTab": {
            "description": "Required. The cron tab of cloud scheduler trigger.",
            "type": "string"
          },
          "errorMessage": {
            "description": "Optional. When the job was deleted from Pantheon UI, error_message will be populated when Get/List integrations",
            "type": "string"
          },
          "location": {
            "description": "Required. The location where associated cloud scheduler job will be created",
            "type": "string"
          },
          "serviceAccountEmail": {
            "description": "Required. Service account used by Cloud Scheduler to trigger the integration at scheduled time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmFrontendsEventbusProtoTriggerConfig": {
        "description": "Configuration detail of a trigger. Next available id: 20",
        "properties": {
          "alertConfig": {
            "description": "An alert threshold configuration for the [trigger + client + workflow] tuple. If these values are not specified in the trigger config, default values will be populated by the system. Note that there must be exactly one alert threshold configured per [client + trigger + workflow] when published.",
            "items": {
              "$ref": "#/$defs/EnterpriseCrmEventbusProtoWorkflowAlertConfig"
            },
            "type": "array"
          },
          "cloudSchedulerConfig": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoCloudSchedulerConfig"
          },
          "description": {
            "description": "User-provided description intended to give more business context about the task.",
            "type": "string"
          },
          "enabledClients": {
            "description": "Required. The list of client ids which are enabled to execute the workflow using this trigger. In other words, these clients have the workflow execution privledges for this trigger. For API trigger, the client id in the incoming request is validated against the list of enabled clients. For non-API triggers, one workflow execution is triggered on behalf of each enabled client.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "errorCatcherId": {
            "description": "Optional Error catcher id of the error catch flow which will be executed when execution error happens in the task",
            "type": "string"
          },
          "label": {
            "description": "The user created label for a particular trigger.",
            "type": "string"
          },
          "nextTasksExecutionPolicy": {
            "description": "Dictates how next tasks will be executed.",
            "enum": [
              "UNSPECIFIED",
              "RUN_ALL_MATCH",
              "RUN_FIRST_MATCH"
            ],
            "type": "string"
          },
          "pauseWorkflowExecutions": {
            "description": "Optional. If set to true, any upcoming requests for this trigger config will be paused and the executions will be resumed later when the flag is reset. The workflow to which this trigger config belongs has to be in ACTIVE status for the executions to be paused or resumed.",
            "type": "boolean"
          },
          "position": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoCoordinate"
          },
          "properties": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Configurable properties of the trigger, not to be confused with workflow parameters. E.g. \"name\" is a property for API triggers and \"subscription\" is a property for Cloud Pubsub triggers.",
            "type": "object"
          },
          "startTasks": {
            "description": "Set of tasks numbers from where the workflow execution is started by this trigger. If this is empty, then workflow is executed with default start tasks. In the list of start tasks, none of two tasks can have direct ancestor-descendant relationships (i.e. in a same workflow execution graph).",
            "items": {
              "$ref": "#/$defs/EnterpriseCrmEventbusProtoNextTask"
            },
            "type": "array"
          },
          "triggerCriteria": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoTriggerCriteria"
          },
          "triggerId": {
            "description": "The backend trigger ID.",
            "type": "string"
          },
          "triggerName": {
            "description": "Optional. Name of the trigger This is added to identify the type of trigger. This is avoid the logic on triggerId to identify the trigger_type and push the same to monitoring.",
            "type": "string"
          },
          "triggerNumber": {
            "description": "Required. A number to uniquely identify each trigger config within the workflow on UI.",
            "type": "string"
          },
          "triggerType": {
            "enum": [
              "UNKNOWN",
              "CLOUD_PUBSUB",
              "GOOPS",
              "SFDC_SYNC",
              "CRON",
              "API",
              "MANIFOLD_TRIGGER",
              "DATALAYER_DATA_CHANGE",
              "SFDC_CHANNEL",
              "CLOUD_PUBSUB_EXTERNAL",
              "SFDC_CDC_CHANNEL",
              "SFDC_PLATFORM_EVENTS_CHANNEL",
              "CLOUD_SCHEDULER",
              "INTEGRATION_CONNECTOR_TRIGGER"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoWorkflowAlertConfig": {
        "description": "Message to be used to configure custom alerting in the {@code EventConfig} protos for an event.",
        "properties": {
          "aggregationPeriod": {
            "description": "For an EXPECTED_MIN threshold, this aggregation_period must be lesser than 24 hours.",
            "type": "string"
          },
          "alertDisabled": {
            "description": "Set to false by default. When set to true, the metrics are not aggregated or pushed to Monarch for this workflow alert.",
            "type": "boolean"
          },
          "alertName": {
            "description": "A name to identify this alert. This will be displayed in the alert subject. If set, this name should be unique within the scope of the workflow.",
            "type": "string"
          },
          "clientId": {
            "description": "Client associated with this alert configuration.",
            "type": "string"
          },
          "durationThresholdMs": {
            "description": "Should be specified only for *AVERAGE_DURATION and *PERCENTILE_DURATION metrics. This member should be used to specify what duration value the metrics should exceed for the alert to trigger.",
            "format": "int64",
            "type": "string"
          },
          "errorEnumList": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoBaseAlertConfigErrorEnumList"
          },
          "metricType": {
            "enum": [
              "METRIC_TYPE_UNSPECIFIED",
              "EVENT_ERROR_RATE",
              "EVENT_WARNING_RATE",
              "TASK_ERROR_RATE",
              "TASK_WARNING_RATE",
              "TASK_RATE",
              "EVENT_RATE",
              "EVENT_AVERAGE_DURATION",
              "EVENT_PERCENTILE_DURATION",
              "TASK_AVERAGE_DURATION",
              "TASK_PERCENTILE_DURATION"
            ],
            "type": "string"
          },
          "numAggregationPeriods": {
            "description": "For how many contiguous aggregation periods should the expected min or max be violated for the alert to be fired.",
            "format": "int32",
            "type": "integer"
          },
          "onlyFinalAttempt": {
            "description": "For either events or tasks, depending on the type of alert, count only final attempts, not retries.",
            "type": "boolean"
          },
          "playbookUrl": {
            "description": "Link to a playbook for resolving the issue that triggered this alert.",
            "type": "string"
          },
          "thresholdType": {
            "description": "The threshold type, whether lower(expected_min) or upper(expected_max), for which this alert is being configured. If value falls below expected_min or exceeds expected_max, an alert will be fired.",
            "enum": [
              "UNSPECIFIED_THRESHOLD_TYPE",
              "EXPECTED_MIN",
              "EXPECTED_MAX"
            ],
            "type": "string"
          },
          "thresholdValue": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoBaseAlertConfigThresholdValue"
          },
          "warningEnumList": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoBaseAlertConfigErrorEnumList"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoCloudSchedulerConfig": {
        "description": "Cloud Scheduler Trigger configuration",
        "properties": {
          "cronTab": {
            "description": "Required. The cron tab of cloud scheduler trigger.",
            "type": "string"
          },
          "errorMessage": {
            "description": "Optional. When the job was deleted from Pantheon UI, error_message will be populated when Get/List integrations",
            "type": "string"
          },
          "location": {
            "description": "Required. The location where associated cloud scheduler job will be created",
            "type": "string"
          },
          "serviceAccountEmail": {
            "description": "Required. Service account used by Cloud Scheduler to trigger the integration at scheduled time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoTriggerCriteria": {
        "properties": {
          "condition": {
            "description": "Required. Standard filter expression, when true the workflow will be executed. If there's no trigger_criteria_task_implementation_class_name specified, the condition will be validated directly.",
            "type": "string"
          },
          "parameters": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoEventParameters"
          },
          "triggerCriteriaTaskImplementationClassName": {
            "description": "Optional. Implementation class name. The class should implement the “TypedTask” interface.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://integrations.googleapis.com//v1/{name}:test{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The response for testing an integration.",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**eventParameters**: LINT.IfChange This message is used for processing and persisting (when applicable) key value pair parameters for each event in the event bus. Please see",
              {
                "$ul": [
                  "**parameters**: Parameters are a part of Event and can be used to communicate between different tasks that are part of the same workflow execution."
                ]
              }
            ],
            "**executionFailed**: Is true if any execution in the integration failed. False otherwise.",
            "**executionId**: The id of the execution corresponding to this run of integration.",
            "**parameterEntries**: Parameters are a part of Event and can be used to communicate between different tasks that are part of the same integration execution.",
            "**parameters**: Optional. Parameters are a part of Event and can be used to communicate between different tasks that are part of the same integration execution."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
