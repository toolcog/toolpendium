{
  "name": "integrations_projects_locations_products_integrations_schedule",
  "description": "Schedules an integration for execution by passing the trigger id and the scheduled time in the request body.",
  "parameters": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "The integration resource name."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleCloudIntegrationsV1alphaScheduleIntegrationsRequest"
      }
    },
    "required": [
      "name"
    ],
    "$defs": {
      "GoogleCloudIntegrationsV1alphaScheduleIntegrationsRequest": {
        "description": "The request for scheduling an integration.",
        "properties": {
          "inputParameters": {
            "additionalProperties": {
              "$ref": "#/$defs/GoogleCloudIntegrationsV1alphaValueType"
            },
            "description": "Optional. Input parameters used by integration execution.",
            "type": "object"
          },
          "parameterEntries": {
            "description": "Parameters are a part of Event and can be used to communicate between different tasks that are part of the same integration execution.",
            "items": {
              "$ref": "#/$defs/EnterpriseCrmFrontendsEventbusProtoParameterEntry"
            },
            "type": "array"
          },
          "parameters": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoEventParameters"
          },
          "requestId": {
            "description": "This is used to de-dup incoming request: if the duplicate request was detected, the response from the previous execution is returned.",
            "type": "string"
          },
          "scheduleTime": {
            "description": "The time that the integration should be executed. If the time is less or equal to the current time, the integration is executed immediately.",
            "format": "google-datetime",
            "type": "string"
          },
          "triggerId": {
            "description": "Required. Matched against all {@link TriggerConfig}s across all integrations. i.e. TriggerConfig.trigger_id.equals(trigger_id)",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudIntegrationsV1alphaValueType": {
        "description": "The type of the parameter.",
        "properties": {
          "booleanArray": {
            "$ref": "#/$defs/GoogleCloudIntegrationsV1alphaBooleanParameterArray"
          },
          "booleanValue": {
            "description": "Boolean.",
            "type": "boolean"
          },
          "doubleArray": {
            "$ref": "#/$defs/GoogleCloudIntegrationsV1alphaDoubleParameterArray"
          },
          "doubleValue": {
            "description": "Double Number.",
            "format": "double",
            "type": "number"
          },
          "intArray": {
            "$ref": "#/$defs/GoogleCloudIntegrationsV1alphaIntParameterArray"
          },
          "intValue": {
            "description": "Integer.",
            "format": "int64",
            "type": "string"
          },
          "jsonValue": {
            "description": "Json.",
            "type": "string"
          },
          "stringArray": {
            "$ref": "#/$defs/GoogleCloudIntegrationsV1alphaStringParameterArray"
          },
          "stringValue": {
            "description": "String.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudIntegrationsV1alphaBooleanParameterArray": {
        "description": "This message only contains a field of boolean array.",
        "properties": {
          "booleanValues": {
            "description": "Boolean array.",
            "items": {
              "type": "boolean"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudIntegrationsV1alphaDoubleParameterArray": {
        "description": "This message only contains a field of double number array.",
        "properties": {
          "doubleValues": {
            "description": "Double number array.",
            "items": {
              "format": "double",
              "type": "number"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudIntegrationsV1alphaIntParameterArray": {
        "description": "This message only contains a field of integer array.",
        "properties": {
          "intValues": {
            "description": "Integer array.",
            "items": {
              "format": "int64",
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudIntegrationsV1alphaStringParameterArray": {
        "description": "This message only contains a field of string array.",
        "properties": {
          "stringValues": {
            "description": "String array.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmFrontendsEventbusProtoParameterEntry": {
        "description": "Key-value pair of EventBus parameters.",
        "properties": {
          "dataType": {
            "description": "Explicitly getting the type of the parameter.",
            "enum": [
              "DATA_TYPE_UNSPECIFIED",
              "STRING_VALUE",
              "INT_VALUE",
              "DOUBLE_VALUE",
              "BOOLEAN_VALUE",
              "PROTO_VALUE",
              "SERIALIZED_OBJECT_VALUE",
              "STRING_ARRAY",
              "INT_ARRAY",
              "DOUBLE_ARRAY",
              "PROTO_ARRAY",
              "PROTO_ENUM",
              "BOOLEAN_ARRAY",
              "PROTO_ENUM_ARRAY",
              "BYTES",
              "BYTES_ARRAY",
              "NON_SERIALIZABLE_OBJECT",
              "JSON_VALUE"
            ],
            "type": "string"
          },
          "key": {
            "description": "Key is used to retrieve the corresponding parameter value. This should be unique for a given fired event. These parameters must be predefined in the workflow definition.",
            "type": "string"
          },
          "value": {
            "$ref": "#/$defs/EnterpriseCrmFrontendsEventbusProtoParameterValueType"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmFrontendsEventbusProtoParameterValueType": {
        "description": "To support various types of parameter values. Next available id: 14",
        "properties": {
          "booleanArray": {
            "$ref": "#/$defs/EnterpriseCrmFrontendsEventbusProtoBooleanParameterArray"
          },
          "booleanValue": {
            "type": "boolean"
          },
          "doubleArray": {
            "$ref": "#/$defs/EnterpriseCrmFrontendsEventbusProtoDoubleParameterArray"
          },
          "doubleValue": {
            "format": "double",
            "type": "number"
          },
          "intArray": {
            "$ref": "#/$defs/EnterpriseCrmFrontendsEventbusProtoIntParameterArray"
          },
          "intValue": {
            "format": "int64",
            "type": "string"
          },
          "jsonValue": {
            "type": "string"
          },
          "protoArray": {
            "$ref": "#/$defs/EnterpriseCrmFrontendsEventbusProtoProtoParameterArray"
          },
          "protoValue": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "type": "object"
          },
          "serializedObjectValue": {
            "$ref": "#/$defs/EnterpriseCrmFrontendsEventbusProtoSerializedObjectParameter"
          },
          "stringArray": {
            "$ref": "#/$defs/EnterpriseCrmFrontendsEventbusProtoStringParameterArray"
          },
          "stringValue": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmFrontendsEventbusProtoBooleanParameterArray": {
        "properties": {
          "booleanValues": {
            "items": {
              "type": "boolean"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmFrontendsEventbusProtoDoubleParameterArray": {
        "properties": {
          "doubleValues": {
            "items": {
              "format": "double",
              "type": "number"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmFrontendsEventbusProtoIntParameterArray": {
        "properties": {
          "intValues": {
            "items": {
              "format": "int64",
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmFrontendsEventbusProtoProtoParameterArray": {
        "properties": {
          "protoValues": {
            "items": {
              "additionalProperties": {
                "description": "Properties of the object. Contains field @type with type URL."
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmFrontendsEventbusProtoSerializedObjectParameter": {
        "properties": {
          "objectValue": {
            "format": "byte",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmFrontendsEventbusProtoStringParameterArray": {
        "properties": {
          "stringValues": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoEventParameters": {
        "description": "LINT.IfChange This message is used for processing and persisting (when applicable) key value pair parameters for each event in the event bus. Please see",
        "properties": {
          "parameters": {
            "description": "Parameters are a part of Event and can be used to communicate between different tasks that are part of the same integration execution.",
            "items": {
              "$ref": "#/$defs/EnterpriseCrmEventbusProtoParameterEntry"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoParameterEntry": {
        "description": "Key-value pair of EventBus parameters.",
        "properties": {
          "key": {
            "description": "Key is used to retrieve the corresponding parameter value. This should be unique for a given fired event. These parameters must be predefined in the integration definition.",
            "type": "string"
          },
          "value": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoParameterValueType"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoParameterValueType": {
        "description": "LINT.IfChange To support various types of parameter values. Next available id: 14",
        "properties": {
          "booleanArray": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoBooleanParameterArray"
          },
          "booleanValue": {
            "type": "boolean"
          },
          "doubleArray": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoDoubleParameterArray"
          },
          "doubleValue": {
            "format": "double",
            "type": "number"
          },
          "intArray": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoIntParameterArray"
          },
          "intValue": {
            "format": "int64",
            "type": "string"
          },
          "protoArray": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoProtoParameterArray"
          },
          "protoValue": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "type": "object"
          },
          "serializedObjectValue": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoSerializedObjectParameter"
          },
          "stringArray": {
            "$ref": "#/$defs/EnterpriseCrmEventbusProtoStringParameterArray"
          },
          "stringValue": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoBooleanParameterArray": {
        "properties": {
          "booleanValues": {
            "items": {
              "type": "boolean"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoDoubleParameterArray": {
        "properties": {
          "doubleValues": {
            "items": {
              "format": "double",
              "type": "number"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoIntParameterArray": {
        "properties": {
          "intValues": {
            "items": {
              "format": "int64",
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoProtoParameterArray": {
        "properties": {
          "protoValues": {
            "items": {
              "additionalProperties": {
                "description": "Properties of the object. Contains field @type with type URL."
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoSerializedObjectParameter": {
        "properties": {
          "objectValue": {
            "format": "byte",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EnterpriseCrmEventbusProtoStringParameterArray": {
        "properties": {
          "stringValues": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://integrations.googleapis.com//v1/{name}:schedule{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The response for executing an integration.",
        "**Key properties:**",
        {
          "$ul": [
            "**executionInfoIds**: The execution info id for the executed integrations."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
