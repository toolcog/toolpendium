{
  "name": "cloudbuild_projects_locations_workerPools_patch",
  "description": "Updates a `WorkerPool`. NOTE: As of now, this method returns an `Operation` that is always complete.",
  "parameters": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "Output only. The resource name of the `WorkerPool`, with format `projects/{project}/locations/{location}/workerPools/{worker_pool}`. The value of `{worker_pool}` is provided by `worker_pool_id` in `CreateWorkerPool` request and the value of `{location}` is determined by the endpoint accessed."
      },
      "updateMask": {
        "type": "string",
        "description": "A mask specifying which fields in `WorkerPool` to update."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/WorkerPool"
      }
    },
    "required": [
      "name"
    ],
    "$defs": {
      "WorkerPool": {
        "description": "Configuration for a `WorkerPool` to run the builds. Workers provide a build environment where Cloud Build runs your builds. Cloud Build owns and maintains a pool of workers for general use. By default, when you submit a build, Cloud Build uses one of the workers from this pool. Builds that run in the default worker pool have access to the public internet. If your build needs access to resources on a private network, create and use a `WorkerPool` to run your builds. Custom `WorkerPool`s give your builds access to any single VPC network that you administer, including any on-prem resources connected to that VPC network. For an overview of custom worker pools, see [Custom workers overview](https://cloud.google.com/cloud-build/docs/custom-workers/custom-workers-overview).",
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "User specified annotations. See https://google.aip.dev/128#annotations for more details such as format and size limitations.",
            "type": "object"
          },
          "createTime": {
            "description": "Output only. Time at which the request to create the `WorkerPool` was received.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "deleteTime": {
            "description": "Output only. Time at which the request to delete the `WorkerPool` was received.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "A user-specified, human-readable name for the `WorkerPool`. If provided, this value must be 1-63 characters.",
            "type": "string"
          },
          "etag": {
            "description": "Output only. Checksum computed by the server. May be sent on update and delete requests to ensure that the client has an up-to-date value before proceeding.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "Output only. The resource name of the `WorkerPool`, with format `projects/{project}/locations/{location}/workerPools/{worker_pool}`. The value of `{worker_pool}` is provided by `worker_pool_id` in `CreateWorkerPool` request and the value of `{location}` is determined by the endpoint accessed.",
            "readOnly": true,
            "type": "string"
          },
          "networkConfig": {
            "$ref": "#/$defs/NetworkConfig"
          },
          "state": {
            "description": "Output only. `WorkerPool` state.",
            "enum": [
              "STATE_UNSPECIFIED",
              "CREATING",
              "RUNNING",
              "DELETING",
              "DELETED"
            ],
            "readOnly": true,
            "type": "string"
          },
          "uid": {
            "description": "Output only. A unique identifier for the `WorkerPool`.",
            "readOnly": true,
            "type": "string"
          },
          "updateTime": {
            "description": "Output only. Time at which the request to update the `WorkerPool` was received.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "workerConfig": {
            "$ref": "#/$defs/WorkerConfig"
          }
        },
        "type": "object"
      },
      "NetworkConfig": {
        "description": "Network describes the network configuration for a `WorkerPool`.",
        "properties": {
          "peeredNetwork": {
            "description": "Required. Immutable. The network definition that the workers are peered to. If this section is left empty, the workers will be peered to `WorkerPool.project_id` on the service producer network. Must be in the format `projects/{project}/global/networks/{network}`, where `{project}` is a project number, such as `12345`, and `{network}` is the name of a VPC network in the project. See [Understanding network configuration options](https://cloud.google.com/cloud-build/docs/custom-workers/set-up-custom-worker-pool-environment#understanding_the_network_configuration_options)",
            "type": "string"
          }
        },
        "type": "object"
      },
      "WorkerConfig": {
        "description": "Defines the configuration to be used for creating workers in the pool.",
        "properties": {
          "diskSizeGb": {
            "description": "Size of the disk attached to the worker, in GB. See [Worker pool config file](https://cloud.google.com/cloud-build/docs/custom-workers/worker-pool-config-file). Specify a value of up to 1000. If `0` is specified, Cloud Build will use a standard disk size.",
            "format": "int64",
            "type": "string"
          },
          "machineType": {
            "description": "Machine type of a worker, such as `n1-standard-1`. See [Worker pool config file](https://cloud.google.com/cloud-build/docs/custom-workers/worker-pool-config-file). If left blank, Cloud Build will use `n1-standard-1`.",
            "type": "string"
          },
          "noExternalIp": {
            "description": "If true, workers are created without any public address, which prevents network egress to public IPs.",
            "type": "boolean"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PATCH",
    "url": {
      "$uri": "https://cloudbuild.googleapis.com//v1beta1/{name}{?updateMask,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "This resource represents a long-running operation that is the result of a network API call.",
        "**Key properties:**",
        {
          "$ul": [
            "**done**: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
            [
              "**error**: The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
              {
                "$ul": [
                  "**code**: The status code, which should be an enum value of google.rpc.Code.",
                  "**details**: A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                  "**message**: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                ]
              }
            ],
            "**metadata**: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
            "**name**: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
            "**response**: The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
