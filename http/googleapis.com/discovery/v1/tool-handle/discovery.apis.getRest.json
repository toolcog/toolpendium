{
  "name": "discovery_apis_getRest",
  "description": "Retrieve the description of a particular version of an api.",
  "parameters": {
    "type": "object",
    "properties": {
      "api": {
        "type": "string",
        "description": "The name of the API."
      },
      "version": {
        "type": "string",
        "description": "The version of the API."
      },
      "alt": {
        "enum": [
          "json"
        ],
        "type": "string",
        "description": "Data format for the response."
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "An opaque string that represents a user for quota purposes. Must not exceed 40 characters."
      },
      "userIp": {
        "type": "string",
        "description": "Deprecated. Please use quotaUser instead."
      }
    },
    "required": [
      "api",
      "version"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://www.googleapis.com/discovery/v1/apis/{api}/{version}/rest{?alt,fields,key,oauth_token,prettyPrint,quotaUser,userIp}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**auth**: Authentication information.",
              {
                "$ul": [
                  [
                    "**oauth2**: OAuth 2.0 authentication information.",
                    {
                      "$ul": [
                        "**scopes**: Available OAuth 2.0 scopes."
                      ]
                    }
                  ]
                ]
              }
            ],
            "**basePath**: [DEPRECATED] The base path for REST requests.",
            "**baseUrl**: [DEPRECATED] The base URL for REST requests.",
            "**batchPath**: The path for REST batch requests.",
            "**canonicalName**: Indicates how the API name should be capitalized and split into various parts. Useful for generating pretty class names.",
            "**description**: The description of this API.",
            "**discoveryVersion**: Indicate the version of the Discovery API used to generate this doc. (default: v1)",
            "**documentationLink**: A link to human readable documentation for the API.",
            "**endpoints**: A list of location-based endpoint objects for this API. Each object contains the endpoint URL, location, description and deprecation status.",
            "**etag**: The ETag for this response.",
            "**exponentialBackoffDefault**: Enable exponential backoff for suitable methods in the generated clients.",
            "**features**: A list of supported features for this API.",
            [
              "**icons**: Links to 16x16 and 32x32 icons representing the API.",
              {
                "$ul": [
                  "**x16**: The URL of the 16x16 icon.",
                  "**x32**: The URL of the 32x32 icon."
                ]
              }
            ],
            "**id**: The ID of this API.",
            "**kind**: The kind for this response. (default: discovery#restDescription)",
            "**labels**: Labels for the status of this API, such as labs or deprecated.",
            "**methods**: API-level methods for this API.",
            "**name**: The name of this API.",
            "**ownerDomain**: The domain of the owner of this API. Together with the ownerName and a packagePath values, this can be used to generate a library for this API which would have a unique fully qualified name.",
            "**ownerName**: The name of the owner of this API. See ownerDomain.",
            "**packagePath**: The package of the owner of this API. See ownerDomain.",
            "**parameters**: Common parameters that apply across all apis.",
            "**protocol**: The protocol described by this document. (default: rest)",
            "**resources**: The resources in this API.",
            "**revision**: The version of this API.",
            "**rootUrl**: The root URL under which all API services live.",
            "**schemas**: The schemas for this API.",
            "**servicePath**: The base path for all REST requests.",
            "**title**: The title of this API.",
            "**version**: The version of this API.",
            "**version_module**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
