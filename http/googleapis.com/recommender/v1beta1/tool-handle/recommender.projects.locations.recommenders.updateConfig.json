{
  "name": "recommender_projects_locations_recommenders_updateConfig",
  "description": "Updates a Recommender Config. This will create a new revision of the config.",
  "parameters": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "Name of recommender config. Eg, projects/[PROJECT_NUMBER]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]/config"
      },
      "updateMask": {
        "type": "string",
        "description": "The list of fields to be updated."
      },
      "validateOnly": {
        "type": "boolean",
        "description": "If true, validate the request and preview the change, but do not actually update it."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleCloudRecommenderV1beta1RecommenderConfig"
      }
    },
    "required": [
      "name"
    ],
    "$defs": {
      "GoogleCloudRecommenderV1beta1RecommenderConfig": {
        "description": "Configuration for a Recommender.",
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Allows clients to store small amounts of arbitrary data. Annotations must follow the Kubernetes syntax. The total size of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.",
            "type": "object"
          },
          "displayName": {
            "description": "A user-settable field to provide a human-readable name to be used in user interfaces.",
            "type": "string"
          },
          "etag": {
            "description": "Fingerprint of the RecommenderConfig. Provides optimistic locking when updating.",
            "type": "string"
          },
          "name": {
            "description": "Name of recommender config. Eg, projects/[PROJECT_NUMBER]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]/config",
            "type": "string"
          },
          "recommenderGenerationConfig": {
            "$ref": "#/$defs/GoogleCloudRecommenderV1beta1RecommenderGenerationConfig"
          },
          "revisionId": {
            "description": "Output only. Immutable. The revision ID of the config. A new revision is committed whenever the config is changed in any way. The format is an 8-character hexadecimal string.",
            "readOnly": true,
            "type": "string"
          },
          "updateTime": {
            "description": "Last time when the config was updated.",
            "format": "google-datetime",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudRecommenderV1beta1RecommenderGenerationConfig": {
        "description": "A Configuration to customize the generation of recommendations. Eg, customizing the lookback period considered when generating a recommendation.",
        "properties": {
          "params": {
            "additionalProperties": {
              "description": "Properties of the object."
            },
            "description": "Parameters for this RecommenderGenerationConfig. These configs can be used by or are applied to all subtypes.",
            "type": "object"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PATCH",
    "url": {
      "$uri": "https://recommender.googleapis.com//v1beta1/{name}{?updateMask,validateOnly,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Configuration for a Recommender.",
        "**Key properties:**",
        {
          "$ul": [
            "**annotations**: Allows clients to store small amounts of arbitrary data. Annotations must follow the Kubernetes syntax. The total size of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.",
            "**displayName**: A user-settable field to provide a human-readable name to be used in user interfaces.",
            "**etag**: Fingerprint of the RecommenderConfig. Provides optimistic locking when updating.",
            "**name**: Name of recommender config. Eg, projects/[PROJECT_NUMBER]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]/config",
            [
              "**recommenderGenerationConfig**: A Configuration to customize the generation of recommendations. Eg, customizing the lookback period considered when generating a recommendation.",
              {
                "$ul": [
                  "**params**: Parameters for this RecommenderGenerationConfig. These configs can be used by or are applied to all subtypes."
                ]
              }
            ],
            "**revisionId**: Output only. Immutable. The revision ID of the config. A new revision is committed whenever the config is changed in any way. The format is an 8-character hexadecimal string.",
            "**updateTime**: Last time when the config was updated."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
