{
  "name": "recommender_projects_locations_recommenders_recommendations_markSucceeded",
  "description": "Marks the Recommendation State as Succeeded. Users can use this method to indicate to the Recommender API that they have applied the recommendation themselves, and the operation was successful. This stops the recommendation content from being updated. Associated insights are frozen and placed in the ACCEPTED state. MarkRecommendationSucceeded can be applied to recommendations in ACTIVE, CLAIMED, SUCCEEDED, or FAILED state. Requires the recommender.*.update IAM permission for the specified recommender.",
  "parameters": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "Required. Name of the recommendation."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleCloudRecommenderV1beta1MarkRecommendationSucceededRequest"
      }
    },
    "required": [
      "name"
    ],
    "$defs": {
      "GoogleCloudRecommenderV1beta1MarkRecommendationSucceededRequest": {
        "description": "Request for the `MarkRecommendationSucceeded` Method.",
        "properties": {
          "etag": {
            "description": "Required. Fingerprint of the Recommendation. Provides optimistic locking.",
            "type": "string"
          },
          "stateMetadata": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "State properties to include with this state. Overwrites any existing `state_metadata`. Keys must match the regex `/^a-z0-9{0,62}$/`. Values must match the regex `/^[a-zA-Z0-9_./-]{0,255}$/`.",
            "type": "object"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://recommender.googleapis.com//v1beta1/{name}:markSucceeded{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A recommendation along with a suggested action. E.g., a rightsizing recommendation for an underutilized VM, IAM role recommendations, etc",
        "**Key properties:**",
        {
          "$ul": [
            "**additionalImpact**: Optional set of additional impact that this recommendation may have when trying to optimize for the primary category. These may be positive or negative.",
            "**associatedInsights**: Insights that led to this recommendation.",
            [
              "**content**: Contains what resources are changing and how they are changing.",
              {
                "$ul": [
                  "**operationGroups**: Operations to one or more Google Cloud resources grouped in such a way that, all operations within one group are expected to be performed atomically and in an order.",
                  "**overview**: Condensed overview information about the recommendation."
                ]
              }
            ],
            "**description**: Free-form human readable summary in English. The maximum length is 500 characters.",
            "**etag**: Fingerprint of the Recommendation. Provides optimistic locking when updating states.",
            "**lastRefreshTime**: Last time this recommendation was refreshed by the system that created it in the first place.",
            "**name**: Name of recommendation.",
            [
              "**primaryImpact**: Contains the impact a recommendation can have for a given category.",
              {
                "$ul": [
                  "**category**: Category that is being targeted.",
                  [
                    "**costProjection**: Contains metadata about how much money a recommendation can save or incur.",
                    {
                      "$ul": [
                        [
                          "**cost**: Represents an amount of money with its currency type.",
                          {
                            "$ul": [
                              "**currencyCode**: The three-letter currency code defined in ISO 4217.",
                              "**nanos**: Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.",
                              "**units**: The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar."
                            ]
                          }
                        ],
                        [
                          "**costInLocalCurrency**: Represents an amount of money with its currency type.",
                          {
                            "$ul": [
                              "**currencyCode**: The three-letter currency code defined in ISO 4217.",
                              "**nanos**: Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.",
                              "**units**: The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar."
                            ]
                          }
                        ],
                        "**duration**: Duration for which this cost applies.",
                        "**pricingType**: How the cost is calculated."
                      ]
                    }
                  ],
                  [
                    "**reliabilityProjection**: Contains information on the impact of a reliability recommendation.",
                    {
                      "$ul": [
                        "**details**: Per-recommender projection.",
                        "**risks**: Reliability risks mitigated by this recommendation."
                      ]
                    }
                  ],
                  [
                    "**securityProjection**: Contains various ways of describing the impact on Security.",
                    {
                      "$ul": [
                        "**details**: This field can be used by the recommender to define details specific to security impact."
                      ]
                    }
                  ],
                  [
                    "**sustainabilityProjection**: Contains metadata about how much sustainability a recommendation can save or incur.",
                    {
                      "$ul": [
                        "**duration**: Duration for which this sustanability applies.",
                        "**kgCO2e**: Carbon Footprint generated in kg of CO2 equivalent. Chose kg_c_o2e so that the name renders correctly in camelCase (kgCO2e)."
                      ]
                    }
                  ]
                ]
              }
            ],
            "**priority**: Recommendation's priority.",
            "**recommenderSubtype**: Contains an identifier for a subtype of recommendations produced for the same recommender. Subtype is a function of content and impact, meaning a new subtype might be added when significant changes to `content` or `primary_impact.category` are introduced. See the Recommenders section to see a list of subtypes for a given Recommender. Examples: For recommender = \"google.iam.policy.Recommender\", recommender_subtype can be one of \"REMOVE_ROLE\"/\"REPLACE_ROLE\"",
            [
              "**stateInfo**: Information for state. Contains state and metadata.",
              {
                "$ul": [
                  "**state**: The state of the recommendation, Eg ACTIVE, SUCCEEDED, FAILED.",
                  "**stateMetadata**: A map of metadata for the state, provided by user or automations systems."
                ]
              }
            ],
            "**targetResources**: Fully qualified resource names that this recommendation is targeting.",
            "**xorGroupId**: Corresponds to a mutually exclusive group ID within a recommender. A non-empty ID indicates that the recommendation belongs to a mutually exclusive group. This means that only one recommendation within the group is suggested to be applied."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
