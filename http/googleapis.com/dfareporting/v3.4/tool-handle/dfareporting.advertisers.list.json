{
  "name": "dfareporting_advertisers_list",
  "description": "Retrieves a list of advertisers, possibly filtered. This method supports paging.",
  "parameters": {
    "type": "object",
    "properties": {
      "profileId": {
        "type": "string",
        "description": "User profile ID associated with this request."
      },
      "advertiserGroupIds": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "Select only advertisers with these advertiser group IDs."
      },
      "floodlightConfigurationIds": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "Select only advertisers with these floodlight configuration IDs."
      },
      "ids": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "Select only advertisers with these IDs."
      },
      "includeAdvertisersWithoutGroupsOnly": {
        "type": "boolean",
        "description": "Select only advertisers which do not belong to any advertiser group."
      },
      "maxResults": {
        "maximum": 1000,
        "minimum": 0,
        "type": "integer",
        "description": "Maximum number of results to return."
      },
      "onlyParent": {
        "type": "boolean",
        "description": "Select only advertisers which use another advertiser's floodlight configuration."
      },
      "pageToken": {
        "type": "string",
        "description": "Value of the nextPageToken from the previous result page."
      },
      "searchString": {
        "type": "string",
        "description": "Allows searching for objects by name or ID. Wildcards (*) are allowed. For example, \"advertiser*2015\" will return objects with names like \"advertiser June 2015\", \"advertiser April 2015\", or simply \"advertiser 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"advertiser\" will match objects with name \"my advertiser\", \"advertiser 2015\", or simply \"advertiser\" ."
      },
      "sortField": {
        "enum": [
          "ID",
          "NAME"
        ],
        "type": "string",
        "description": "Field by which to sort the list."
      },
      "sortOrder": {
        "enum": [
          "ASCENDING",
          "DESCENDING"
        ],
        "type": "string",
        "description": "Order of sorted results."
      },
      "status": {
        "enum": [
          "APPROVED",
          "ON_HOLD"
        ],
        "type": "string",
        "description": "Select only advertisers with the specified status."
      },
      "subaccountId": {
        "type": "string",
        "description": "Select only advertisers with these subaccount IDs."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      }
    },
    "required": [
      "profileId"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://dfareporting.googleapis.com/dfareporting/v3.4/userprofiles/{profileId}/advertisers{?advertiserGroupIds,floodlightConfigurationIds,ids,includeAdvertisersWithoutGroupsOnly,maxResults,onlyParent,pageToken,searchString,sortField,sortOrder,status,subaccountId,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Advertiser List Response",
        "**Key properties:**",
        {
          "$ul": [
            "**advertisers**: Advertiser collection.",
            "**kind**: Identifies what kind of resource this is. Value: the fixed string \"dfareporting#advertisersListResponse\".",
            "**nextPageToken**: Pagination token to be used for the next list operation."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
