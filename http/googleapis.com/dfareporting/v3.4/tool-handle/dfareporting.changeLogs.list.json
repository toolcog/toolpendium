{
  "name": "dfareporting_changeLogs_list",
  "description": "Retrieves a list of change logs. This method supports paging.",
  "parameters": {
    "type": "object",
    "properties": {
      "profileId": {
        "type": "string",
        "description": "User profile ID associated with this request."
      },
      "action": {
        "enum": [
          "ACTION_CREATE",
          "ACTION_UPDATE",
          "ACTION_DELETE",
          "ACTION_ENABLE",
          "ACTION_DISABLE",
          "ACTION_ADD",
          "ACTION_REMOVE",
          "ACTION_MARK_AS_DEFAULT",
          "ACTION_ASSOCIATE",
          "ACTION_ASSIGN",
          "ACTION_UNASSIGN",
          "ACTION_SEND",
          "ACTION_LINK",
          "ACTION_UNLINK",
          "ACTION_PUSH",
          "ACTION_EMAIL_TAGS",
          "ACTION_SHARE"
        ],
        "type": "string",
        "description": "Select only change logs with the specified action."
      },
      "ids": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "Select only change logs with these IDs."
      },
      "maxChangeTime": {
        "type": "string",
        "description": "Select only change logs whose change time is before the specified maxChangeTime.The time should be formatted as an RFC3339 date/time string. For example, for 10:54 PM on July 18th, 2015, in the America/New York time zone, the format is \"2015-07-18T22:54:00-04:00\". In other words, the year, month, day, the letter T, the hour (24-hour clock system), minute, second, and then the time zone offset."
      },
      "maxResults": {
        "maximum": 1000,
        "minimum": 0,
        "type": "integer",
        "description": "Maximum number of results to return."
      },
      "minChangeTime": {
        "type": "string",
        "description": "Select only change logs whose change time is after the specified minChangeTime.The time should be formatted as an RFC3339 date/time string. For example, for 10:54 PM on July 18th, 2015, in the America/New York time zone, the format is \"2015-07-18T22:54:00-04:00\". In other words, the year, month, day, the letter T, the hour (24-hour clock system), minute, second, and then the time zone offset."
      },
      "objectIds": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "Select only change logs with these object IDs."
      },
      "objectType": {
        "enum": [
          "OBJECT_ADVERTISER",
          "OBJECT_FLOODLIGHT_CONFIGURATION",
          "OBJECT_AD",
          "OBJECT_FLOODLIGHT_ACTVITY",
          "OBJECT_CAMPAIGN",
          "OBJECT_FLOODLIGHT_ACTIVITY_GROUP",
          "OBJECT_CREATIVE",
          "OBJECT_PLACEMENT",
          "OBJECT_DFA_SITE",
          "OBJECT_USER_ROLE",
          "OBJECT_USER_PROFILE",
          "OBJECT_ADVERTISER_GROUP",
          "OBJECT_ACCOUNT",
          "OBJECT_SUBACCOUNT",
          "OBJECT_RICHMEDIA_CREATIVE",
          "OBJECT_INSTREAM_CREATIVE",
          "OBJECT_MEDIA_ORDER",
          "OBJECT_CONTENT_CATEGORY",
          "OBJECT_PLACEMENT_STRATEGY",
          "OBJECT_SD_SITE",
          "OBJECT_SIZE",
          "OBJECT_CREATIVE_GROUP",
          "OBJECT_CREATIVE_ASSET",
          "OBJECT_USER_PROFILE_FILTER",
          "OBJECT_LANDING_PAGE",
          "OBJECT_CREATIVE_FIELD",
          "OBJECT_REMARKETING_LIST",
          "OBJECT_PROVIDED_LIST_CLIENT",
          "OBJECT_EVENT_TAG",
          "OBJECT_CREATIVE_BUNDLE",
          "OBJECT_BILLING_ACCOUNT_GROUP",
          "OBJECT_BILLING_FEATURE",
          "OBJECT_RATE_CARD",
          "OBJECT_ACCOUNT_BILLING_FEATURE",
          "OBJECT_BILLING_MINIMUM_FEE",
          "OBJECT_BILLING_PROFILE",
          "OBJECT_PLAYSTORE_LINK",
          "OBJECT_TARGETING_TEMPLATE",
          "OBJECT_SEARCH_LIFT_STUDY",
          "OBJECT_FLOODLIGHT_DV360_LINK",
          "OBJECT_ADVERTISER_CUSTOMER_LINK"
        ],
        "type": "string",
        "description": "Select only change logs with the specified object type."
      },
      "pageToken": {
        "type": "string",
        "description": "Value of the nextPageToken from the previous result page."
      },
      "searchString": {
        "type": "string",
        "description": "Select only change logs whose object ID, user name, old or new values match the search string."
      },
      "userProfileIds": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "Select only change logs with these user profile IDs."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      }
    },
    "required": [
      "profileId"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://dfareporting.googleapis.com/dfareporting/v3.4/userprofiles/{profileId}/changeLogs{?action,ids,maxChangeTime,maxResults,minChangeTime,objectIds,objectType,pageToken,searchString,userProfileIds,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Change Log List Response",
        "**Key properties:**",
        {
          "$ul": [
            "**changeLogs**: Change log collection.",
            "**kind**: Identifies what kind of resource this is. Value: the fixed string \"dfareporting#changeLogsListResponse\".",
            "**nextPageToken**: Pagination token to be used for the next list operation."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
