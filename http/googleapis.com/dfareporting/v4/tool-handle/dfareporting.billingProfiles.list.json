{
  "name": "dfareporting_billingProfiles_list",
  "description": "Retrieves a list of billing profiles, possibly filtered. This method supports paging.",
  "parameters": {
    "type": "object",
    "properties": {
      "profileId": {
        "type": "string",
        "description": "User profile ID associated with this request."
      },
      "currency_code": {
        "type": "string",
        "description": "Select only billing profile with currency."
      },
      "ids": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "Select only billing profile with these IDs."
      },
      "maxResults": {
        "type": "integer",
        "description": "Maximum number of results to return."
      },
      "name": {
        "type": "string",
        "description": "Allows searching for billing profiles by name. Wildcards (*) are allowed. For example, \"profile*2020\" will return objects with names like \"profile June 2020\", \"profile April 2020\", or simply \"profile 2020\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"profile\" will match objects with name \"my profile\", \"profile 2021\", or simply \"profile\"."
      },
      "onlySuggestion": {
        "type": "boolean",
        "description": "Select only billing profile which is suggested for the currency_code & subaccount_id using the Billing Suggestion API."
      },
      "pageToken": {
        "type": "string",
        "description": "Value of the nextPageToken from the previous result page."
      },
      "sortField": {
        "enum": [
          "ID",
          "NAME"
        ],
        "type": "string",
        "description": "Field by which to sort the list."
      },
      "sortOrder": {
        "enum": [
          "ASCENDING",
          "DESCENDING"
        ],
        "type": "string",
        "description": "Order of sorted results."
      },
      "status": {
        "items": {
          "enum": [
            "UNDER_REVIEW",
            "ACTIVE",
            "ARCHIVED"
          ],
          "type": "string"
        },
        "type": "array",
        "description": "Select only billing profile with the specified status."
      },
      "subaccountIds": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "Select only billing profile with the specified subaccount.When only_suggestion is true, only a single subaccount_id is supported."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      }
    },
    "required": [
      "profileId"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://dfareporting.googleapis.com/dfareporting/v4/userprofiles/{profileId}/billingProfiles{?currency_code,ids,maxResults,name,onlySuggestion,pageToken,sortField,sortOrder,status,subaccountIds,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Billing profile List Response",
        "**Key properties:**",
        {
          "$ul": [
            "**billingProfiles**: Billing profiles collection.",
            "**kind**: Identifies what kind of resource this is. Value: the fixed string \"dfareporting#billingProfilesListResponse\".",
            "**nextPageToken**: Pagination token to be used for the next list operation."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
