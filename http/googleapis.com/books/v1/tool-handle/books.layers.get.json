{
  "name": "books_layers_get",
  "description": "Gets the layer summary for a volume.",
  "parameters": {
    "type": "object",
    "properties": {
      "volumeId": {
        "type": "string",
        "description": "The volume to retrieve layers for."
      },
      "summaryId": {
        "type": "string",
        "description": "The ID for the layer to get the summary for."
      },
      "contentVersion": {
        "type": "string",
        "description": "The content version for the requested volume."
      },
      "source": {
        "type": "string",
        "description": "String to identify the originator of this request."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      }
    },
    "required": [
      "volumeId",
      "summaryId"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://books.googleapis.com//books/v1/volumes/{volumeId}/layersummary/{summaryId}{?contentVersion,source,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**annotationCount**: The number of annotations for this layer.",
            "**annotationTypes**: The list of annotation types contained for this layer.",
            "**annotationsDataLink**: Link to get data for this annotation.",
            "**annotationsLink**: The link to get the annotations for this layer.",
            "**contentVersion**: The content version this resource is for.",
            "**dataCount**: The number of data items for this layer.",
            "**id**: Unique id of this layer summary.",
            "**kind**: Resource Type",
            "**layerId**: The layer id for this summary.",
            "**selfLink**: URL to this resource.",
            "**updated**: Timestamp for the last time an item in this layer was updated. (RFC 3339 UTC date-time format).",
            "**volumeAnnotationsVersion**: The current version of this layer's volume annotations. Note that this version applies only to the data in the books.layers.volumeAnnotations.* responses. The actual annotation data is versioned separately.",
            "**volumeId**: The volume id this resource is for."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
