{
  "name": "books_layers_annotationData_list",
  "description": "Gets the annotation data for a volume and layer.",
  "parameters": {
    "type": "object",
    "properties": {
      "volumeId": {
        "type": "string",
        "description": "The volume to retrieve annotation data for."
      },
      "layerId": {
        "type": "string",
        "description": "The ID for the layer to get the annotation data."
      },
      "contentVersion": {
        "type": "string",
        "description": "The content version for the requested volume."
      },
      "annotationDataId": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "The list of Annotation Data Ids to retrieve. Pagination is ignored if this is set."
      },
      "h": {
        "type": "integer",
        "description": "The requested pixel height for any images. If height is provided width must also be provided."
      },
      "locale": {
        "type": "string",
        "description": "The locale information for the data. ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'."
      },
      "maxResults": {
        "maximum": 200,
        "minimum": 0,
        "type": "integer",
        "description": "Maximum number of results to return"
      },
      "pageToken": {
        "type": "string",
        "description": "The value of the nextToken from the previous page."
      },
      "scale": {
        "minimum": 0,
        "type": "integer",
        "description": "The requested scale for the image."
      },
      "source": {
        "type": "string",
        "description": "String to identify the originator of this request."
      },
      "updatedMax": {
        "type": "string",
        "description": "RFC 3339 timestamp to restrict to items updated prior to this timestamp (exclusive)."
      },
      "updatedMin": {
        "type": "string",
        "description": "RFC 3339 timestamp to restrict to items updated since this timestamp (inclusive)."
      },
      "w": {
        "type": "integer",
        "description": "The requested pixel width for any images. If width is provided height must also be provided."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      }
    },
    "required": [
      "volumeId",
      "layerId",
      "contentVersion"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://books.googleapis.com//books/v1/volumes/{volumeId}/layers/{layerId}/data{?contentVersion,annotationDataId,h,locale,maxResults,pageToken,scale,source,updatedMax,updatedMin,w,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**items**: A list of Annotation Data.",
            "**kind**: Resource type",
            "**nextPageToken**: Token to pass in for pagination for the next page. This will not be present if this request does not have more results.",
            "**totalItems**: The total number of volume annotations found."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
