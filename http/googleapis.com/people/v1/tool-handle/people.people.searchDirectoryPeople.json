{
  "name": "people_people_searchDirectoryPeople",
  "description": "Provides a list of domain profiles and domain contacts in the authenticated user's domain directory that match the search query.",
  "parameters": {
    "type": "object",
    "properties": {
      "mergeSources": {
        "items": {
          "enum": [
            "DIRECTORY_MERGE_SOURCE_TYPE_UNSPECIFIED",
            "DIRECTORY_MERGE_SOURCE_TYPE_CONTACT"
          ],
          "type": "string"
        },
        "type": "array",
        "description": "Optional. Additional data to merge into the directory sources if they are connected through verified join keys such as email addresses or phone numbers."
      },
      "pageSize": {
        "type": "integer",
        "description": "Optional. The number of people to include in the response. Valid values are between 1 and 500, inclusive. Defaults to 100 if not set or set to 0."
      },
      "pageToken": {
        "type": "string",
        "description": "Optional. A page token, received from a previous response `next_page_token`. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `SearchDirectoryPeople` must match the first call that provided the page token."
      },
      "query": {
        "type": "string",
        "description": "Required. Prefix query that matches fields in the person. Does NOT use the read_mask for determining what fields to match."
      },
      "readMask": {
        "type": "string",
        "description": "Required. A field mask to restrict which fields on each person are returned. Multiple fields can be specified by separating them with commas. Valid values are: * addresses * ageRanges * biographies * birthdays * calendarUrls * clientData * coverPhotos * emailAddresses * events * externalIds * genders * imClients * interests * locales * locations * memberships * metadata * miscKeywords * names * nicknames * occupations * organizations * phoneNumbers * photos * relations * sipAddresses * skills * urls * userDefined"
      },
      "sources": {
        "items": {
          "enum": [
            "DIRECTORY_SOURCE_TYPE_UNSPECIFIED",
            "DIRECTORY_SOURCE_TYPE_DOMAIN_CONTACT",
            "DIRECTORY_SOURCE_TYPE_DOMAIN_PROFILE"
          ],
          "type": "string"
        },
        "type": "array",
        "description": "Required. Directory sources to return."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://people.googleapis.com//v1/people:searchDirectoryPeople{?mergeSources,pageSize,pageToken,query,readMask,sources,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The response to a request for people in the authenticated user's domain directory that match the specified query.",
        "**Key properties:**",
        {
          "$ul": [
            "**nextPageToken**: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
            "**people**: The list of people in the domain directory that match the query.",
            "**totalSize**: The total number of items in the list without pagination."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
