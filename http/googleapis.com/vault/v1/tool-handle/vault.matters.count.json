{
  "name": "vault_matters_count",
  "description": "Counts the accounts processed by the specified query.",
  "parameters": {
    "type": "object",
    "properties": {
      "matterId": {
        "type": "string",
        "description": "The matter ID."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/CountArtifactsRequest"
      }
    },
    "required": [
      "matterId"
    ],
    "$defs": {
      "CountArtifactsRequest": {
        "description": "Count artifacts request.",
        "properties": {
          "query": {
            "$ref": "#/$defs/Query"
          },
          "view": {
            "description": "Sets the granularity of the count results.",
            "enum": [
              "COUNT_RESULT_VIEW_UNSPECIFIED",
              "TOTAL_COUNT",
              "ALL"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "Query": {
        "description": "The query definition used for search and export.",
        "properties": {
          "accountInfo": {
            "$ref": "#/$defs/AccountInfo"
          },
          "calendarOptions": {
            "$ref": "#/$defs/CalendarOptions"
          },
          "corpus": {
            "description": "The Google Workspace service to search.",
            "enum": [
              "CORPUS_TYPE_UNSPECIFIED",
              "DRIVE",
              "MAIL",
              "GROUPS",
              "HANGOUTS_CHAT",
              "VOICE",
              "CALENDAR"
            ],
            "type": "string"
          },
          "dataScope": {
            "description": "The data source to search.",
            "enum": [
              "DATA_SCOPE_UNSPECIFIED",
              "ALL_DATA",
              "HELD_DATA",
              "UNPROCESSED_DATA"
            ],
            "type": "string"
          },
          "driveOptions": {
            "$ref": "#/$defs/DriveOptions"
          },
          "endTime": {
            "description": "The end time for the search query. Specify in GMT. The value is rounded to 12 AM on the specified date.",
            "format": "google-datetime",
            "type": "string"
          },
          "hangoutsChatInfo": {
            "$ref": "#/$defs/HangoutsChatInfo"
          },
          "hangoutsChatOptions": {
            "$ref": "#/$defs/HangoutsChatOptions"
          },
          "mailOptions": {
            "$ref": "#/$defs/MailOptions"
          },
          "method": {
            "description": "The entity to search. This field replaces **searchMethod** to support shared drives. When **searchMethod** is **TEAM_DRIVE**, the response of this field is **SHARED_DRIVE**.",
            "enum": [
              "SEARCH_METHOD_UNSPECIFIED",
              "ACCOUNT",
              "ORG_UNIT",
              "TEAM_DRIVE",
              "ENTIRE_ORG",
              "ROOM",
              "SITES_URL",
              "SHARED_DRIVE"
            ],
            "type": "string",
            "x-enumDeprecated": [
              false,
              false,
              false,
              true,
              false,
              false,
              false,
              false
            ]
          },
          "orgUnitInfo": {
            "$ref": "#/$defs/OrgUnitInfo"
          },
          "searchMethod": {
            "deprecated": true,
            "description": "The search method to use.",
            "enum": [
              "SEARCH_METHOD_UNSPECIFIED",
              "ACCOUNT",
              "ORG_UNIT",
              "TEAM_DRIVE",
              "ENTIRE_ORG",
              "ROOM",
              "SITES_URL",
              "SHARED_DRIVE"
            ],
            "type": "string",
            "x-enumDeprecated": [
              false,
              false,
              false,
              true,
              false,
              false,
              false,
              false
            ]
          },
          "sharedDriveInfo": {
            "$ref": "#/$defs/SharedDriveInfo"
          },
          "sitesUrlInfo": {
            "$ref": "#/$defs/SitesUrlInfo"
          },
          "startTime": {
            "description": "The start time for the search query. Specify in GMT. The value is rounded to 12 AM on the specified date.",
            "format": "google-datetime",
            "type": "string"
          },
          "teamDriveInfo": {
            "$ref": "#/$defs/TeamDriveInfo"
          },
          "terms": {
            "description": "Service-specific [search operators](https://support.google.com/vault/answer/2474474) to filter search results.",
            "type": "string"
          },
          "timeZone": {
            "description": "The time zone name. It should be an IANA TZ name, such as \"America/Los_Angeles\". For a list of time zone names, see [Time Zone](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). For more information about how Vault uses time zones, see [the Vault help center](https://support.google.com/vault/answer/6092995#time).",
            "type": "string"
          },
          "voiceOptions": {
            "$ref": "#/$defs/VoiceOptions"
          }
        },
        "type": "object"
      },
      "AccountInfo": {
        "description": "The accounts to search",
        "properties": {
          "emails": {
            "description": "A set of accounts to search.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "CalendarOptions": {
        "description": "Additional options for Calendar search",
        "properties": {
          "locationQuery": {
            "description": "Matches only those events whose location contains all of the words in the given set. If the string contains quoted phrases, this method only matches those events whose location contain the exact phrase. Entries in the set are considered in \"and\". Word splitting example: [\"New Zealand\"] vs [\"New\",\"Zealand\"] \"New Zealand\": matched by both \"New and better Zealand\": only matched by the later",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "minusWords": {
            "description": "Matches only those events that do not contain any of the words in the given set in title, description, location, or attendees. Entries in the set are considered in \"or\".",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "peopleQuery": {
            "description": "Matches only those events whose attendees contain all of the words in the given set. Entries in the set are considered in \"and\".",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "responseStatuses": {
            "description": "Matches only events for which the custodian gave one of these responses. If the set is empty or contains ATTENDEE_RESPONSE_UNSPECIFIED there will be no filtering on responses.",
            "items": {
              "enum": [
                "ATTENDEE_RESPONSE_UNSPECIFIED",
                "ATTENDEE_RESPONSE_NEEDS_ACTION",
                "ATTENDEE_RESPONSE_ACCEPTED",
                "ATTENDEE_RESPONSE_DECLINED",
                "ATTENDEE_RESPONSE_TENTATIVE"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "versionDate": {
            "description": "Search the current version of the Calendar event, but export the contents of the last version saved before 12:00 AM UTC on the specified date. Enter the date in UTC.",
            "format": "google-datetime",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DriveOptions": {
        "description": "Additional options for Drive search",
        "properties": {
          "clientSideEncryptedOption": {
            "description": "Set whether the results include only content encrypted with [Google Workspace Client-side encryption](https://support.google.com/a?p=cse_ov) content, only unencrypted content, or both. Defaults to both. Currently supported for Drive.",
            "enum": [
              "CLIENT_SIDE_ENCRYPTED_OPTION_UNSPECIFIED",
              "CLIENT_SIDE_ENCRYPTED_OPTION_ANY",
              "CLIENT_SIDE_ENCRYPTED_OPTION_ENCRYPTED",
              "CLIENT_SIDE_ENCRYPTED_OPTION_UNENCRYPTED"
            ],
            "type": "string"
          },
          "includeSharedDrives": {
            "description": "Set to **true** to include shared drives.",
            "type": "boolean"
          },
          "includeTeamDrives": {
            "deprecated": true,
            "description": "Set to true to include Team Drive.",
            "type": "boolean"
          },
          "versionDate": {
            "description": "Search the current version of the Drive file, but export the contents of the last version saved before 12:00 AM UTC on the specified date. Enter the date in UTC.",
            "format": "google-datetime",
            "type": "string"
          }
        },
        "type": "object"
      },
      "HangoutsChatInfo": {
        "description": "The Chat spaces to search",
        "properties": {
          "roomId": {
            "description": "A list of Chat spaces IDs, as provided by the [Chat API](https://developers.google.com/chat). There is a limit of exporting from 500 Chat spaces per request.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "HangoutsChatOptions": {
        "description": "Additional options for Google Chat search",
        "properties": {
          "includeRooms": {
            "description": "For searches by account or organizational unit, set to **true** to include rooms.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "MailOptions": {
        "description": "Additional options for Gmail search",
        "properties": {
          "clientSideEncryptedOption": {
            "description": "Specifies whether the results should include encrypted content, unencrypted content, or both. Defaults to including both.",
            "enum": [
              "CLIENT_SIDE_ENCRYPTED_OPTION_UNSPECIFIED",
              "CLIENT_SIDE_ENCRYPTED_OPTION_ANY",
              "CLIENT_SIDE_ENCRYPTED_OPTION_ENCRYPTED",
              "CLIENT_SIDE_ENCRYPTED_OPTION_UNENCRYPTED"
            ],
            "type": "string"
          },
          "excludeDrafts": {
            "description": "Set to **true** to exclude drafts.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "OrgUnitInfo": {
        "description": "The organizational unit to search",
        "properties": {
          "orgUnitId": {
            "description": "The name of the organizational unit to search, as provided by the [Admin SDK Directory API](https://developers.google.com/admin-sdk/directory/).",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SharedDriveInfo": {
        "description": "The shared drives to search",
        "properties": {
          "sharedDriveIds": {
            "description": "A list of shared drive IDs, as provided by the [Drive API](https://developers.google.com/drive).",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "SitesUrlInfo": {
        "description": "The published site URLs of new Google Sites to search",
        "properties": {
          "urls": {
            "description": "A list of published site URLs.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "TeamDriveInfo": {
        "deprecated": true,
        "description": "Team Drives to search",
        "properties": {
          "teamDriveIds": {
            "deprecated": true,
            "description": "List of Team Drive IDs, as provided by the [Drive API](https://developers.google.com/drive).",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "VoiceOptions": {
        "description": "Additional options for Voice search",
        "properties": {
          "coveredData": {
            "description": "Datatypes to search",
            "items": {
              "enum": [
                "COVERED_DATA_UNSPECIFIED",
                "TEXT_MESSAGES",
                "VOICEMAILS",
                "CALL_LOGS"
              ],
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://vault.googleapis.com//v1/matters/{matterId}:count{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "This resource represents a long-running operation that is the result of a network API call.",
        "**Key properties:**",
        {
          "$ul": [
            "**done**: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
            [
              "**error**: The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
              {
                "$ul": [
                  "**code**: The status code, which should be an enum value of google.rpc.Code.",
                  "**details**: A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                  "**message**: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                ]
              }
            ],
            "**metadata**: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
            "**name**: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
            "**response**: The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
