{
  "name": "androiddeviceprovisioning_partners_devices_claimAsync",
  "description": "Claims a batch of devices for a customer asynchronously. Adds the devices to zero-touch enrollment. To learn more, read [Long‑running batch operations](/zero-touch/guides/how-it-works#operations).",
  "parameters": {
    "type": "object",
    "properties": {
      "partnerId": {
        "type": "string",
        "description": "Required. The ID of the reseller partner."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/ClaimDevicesRequest"
      }
    },
    "required": [
      "partnerId"
    ],
    "$defs": {
      "ClaimDevicesRequest": {
        "description": "Request to claim devices asynchronously in batch. Claiming a device adds the device to zero-touch enrollment and shows the device in the customer's view of the portal.",
        "properties": {
          "claims": {
            "description": "Required. A list of device claims.",
            "items": {
              "$ref": "#/$defs/PartnerClaim"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PartnerClaim": {
        "description": "Identifies one claim request.",
        "properties": {
          "configurationId": {
            "description": "Optional. The ID of the configuration applied to the device section.",
            "format": "int64",
            "type": "string"
          },
          "customerId": {
            "description": "The ID of the customer for whom the device is being claimed.",
            "format": "int64",
            "type": "string"
          },
          "deviceIdentifier": {
            "$ref": "#/$defs/DeviceIdentifier"
          },
          "deviceMetadata": {
            "$ref": "#/$defs/DeviceMetadata"
          },
          "googleWorkspaceCustomerId": {
            "description": "The Google Workspace customer ID.",
            "type": "string"
          },
          "preProvisioningToken": {
            "description": "Optional. Must and can only be set for Chrome OS devices.",
            "type": "string"
          },
          "sectionType": {
            "description": "Required. The section type of the device's provisioning record.",
            "enum": [
              "SECTION_TYPE_UNSPECIFIED",
              "SECTION_TYPE_SIM_LOCK",
              "SECTION_TYPE_ZERO_TOUCH"
            ],
            "type": "string"
          },
          "simlockProfileId": {
            "description": "Optional. Must and can only be set when DeviceProvisioningSectionType is SECTION_TYPE_SIM_LOCK. The unique identifier of the SimLock profile.",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeviceIdentifier": {
        "description": "Encapsulates hardware and product IDs to identify a manufactured device. To understand requirements on identifier sets, read [Identifiers](https://developers.google.com/zero-touch/guides/identifiers).",
        "properties": {
          "chromeOsAttestedDeviceId": {
            "description": "An identifier provided by OEMs, carried through the production and sales process. Only applicable to Chrome OS devices.",
            "type": "string"
          },
          "deviceType": {
            "description": "The type of the device",
            "enum": [
              "DEVICE_TYPE_UNSPECIFIED",
              "DEVICE_TYPE_ANDROID",
              "DEVICE_TYPE_CHROME_OS"
            ],
            "type": "string"
          },
          "imei": {
            "description": "The device’s IMEI number. Validated on input.",
            "type": "string"
          },
          "manufacturer": {
            "description": "The device manufacturer’s name. Matches the device's built-in value returned from `android.os.Build.MANUFACTURER`. Allowed values are listed in [Android manufacturers](/zero-touch/resources/manufacturer-names#manufacturers-names).",
            "type": "string"
          },
          "meid": {
            "description": "The device’s MEID number.",
            "type": "string"
          },
          "model": {
            "description": "The device model's name. Allowed values are listed in [Android models](/zero-touch/resources/manufacturer-names#model-names) and [Chrome OS models](https://support.google.com/chrome/a/answer/10130175#identify_compatible).",
            "type": "string"
          },
          "serialNumber": {
            "description": "The manufacturer's serial number for the device. This value might not be unique across different device models.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeviceMetadata": {
        "description": "Metadata entries that can be attached to a `Device`. To learn more, read [Device metadata](https://developers.google.com/zero-touch/guides/metadata).",
        "properties": {
          "entries": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Metadata entries recorded as key-value pairs.",
            "type": "object"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://androiddeviceprovisioning.googleapis.com//v1/partners/{partnerId}/devices:claimAsync{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "This resource represents a long-running operation that is the result of a network API call.",
        "**Key properties:**",
        {
          "$ul": [
            "**done**: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
            [
              "**error**: The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
              {
                "$ul": [
                  "**code**: The status code, which should be an enum value of google.rpc.Code.",
                  "**details**: A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                  "**message**: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                ]
              }
            ],
            "**metadata**: This field will contain a `DevicesLongRunningOperationMetadata` object if the operation is created by `claimAsync`, `unclaimAsync`, or `updateMetadataAsync`.",
            "**name**: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
            "**response**: This field will contain a `DevicesLongRunningOperationResponse` object if the operation is created by `claimAsync`, `unclaimAsync`, or `updateMetadataAsync`."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
