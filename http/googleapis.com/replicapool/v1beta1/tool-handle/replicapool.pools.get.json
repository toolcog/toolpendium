{
  "name": "replicapool_pools_get",
  "description": "Gets information about a single replica pool.",
  "parameters": {
    "type": "object",
    "properties": {
      "projectName": {
        "type": "string",
        "description": "The project ID for this replica pool."
      },
      "zone": {
        "type": "string",
        "description": "The zone for this replica pool."
      },
      "poolName": {
        "type": "string",
        "description": "The name of the replica pool for this request."
      },
      "alt": {
        "default": "json",
        "enum": [
          "json"
        ],
        "type": "string",
        "description": "Data format for the response."
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "default": true,
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "An opaque string that represents a user for quota purposes. Must not exceed 40 characters."
      },
      "userIp": {
        "type": "string",
        "description": "Deprecated. Please use quotaUser instead."
      }
    },
    "required": [
      "projectName",
      "zone",
      "poolName"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://www.googleapis.com/replicapool/v1beta1/projects/{projectName}/zones/{zone}/pools/{poolName}{?alt,fields,key,oauth_token,prettyPrint,quotaUser,userIp}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**autoRestart**: Whether replicas in this pool should be restarted if they experience a failure. The default value is true.",
            "**baseInstanceName**: The base instance name to use for the replicas in this pool. This must match the regex [a-z]([-a-z0-9]*[a-z0-9])?. If specified, the instances in this replica pool will be named in the format <base-instance-name>-<ID>. The <ID> postfix will be a four character alphanumeric identifier generated by the service.",
            "**currentNumReplicas**: [Output Only] The current number of replicas in the pool.",
            "**description**: An optional description of the replica pool.",
            "**healthChecks**: Deprecated. Please use template[].healthChecks instead.",
            "**initialNumReplicas**: The initial number of replicas this pool should have. You must provide a value greater than or equal to 0.",
            "**labels**: A list of labels to attach to this replica pool and all created virtual machines in this replica pool.",
            "**name**: The name of the replica pool. Must follow the regex [a-z]([-a-z0-9]*[a-z0-9])? and be 1-28 characters long.",
            "**numReplicas**: Deprecated! Use initial_num_replicas instead.",
            "**resourceViews**: The list of resource views that should be updated with all the replicas that are managed by this pool.",
            "**selfLink**: [Output Only] A self-link to the replica pool.",
            "**targetPool**: Deprecated, please use target_pools instead.",
            "**targetPools**: A list of target pools to update with the replicas that are managed by this pool. If specified, the replicas in this replica pool will be added to the specified target pools for load balancing purposes. The replica pool must live in the same region as the specified target pools. These values must be the target pool resource names, and not fully qualified URLs.",
            [
              "**template**: The template used for creating replicas in the pool.",
              {
                "$ul": [
                  [
                    "**action**: An action that gets executed during initialization of the replicas.",
                    {
                      "$ul": [
                        "**commands**: A list of commands to run, one per line. If any command fails, the whole action is considered a failure and no further actions are run. This also marks the virtual machine or replica as a failure.",
                        "**envVariables**: A list of environment variables to use for the commands in this action.",
                        "**timeoutMilliSeconds**: If an action's commands on a particular replica do not finish in the specified timeoutMilliSeconds, the replica is considered to be in a FAILING state. No efforts are made to stop any processes that were spawned or created as the result of running the action's commands. The default is the max allowed value, 1 hour (i.e. 3600000 milliseconds)."
                      ]
                    }
                  ],
                  "**healthChecks**: A list of HTTP Health Checks to configure for this replica pool and all virtual machines in this replica pool.",
                  "**version**: A free-form string describing the version of this template. You can provide any versioning string you would like. For example, version1 or template-v1.",
                  [
                    "**vmParams**: Parameters for creating a Compute Engine Instance resource. Most fields are identical to the corresponding Compute Engine resource.",
                    {
                      "$ul": [
                        "**baseInstanceName**: Deprecated. Please use baseInstanceName instead.",
                        "**canIpForward**: Enables IP Forwarding, which allows this instance to receive packets destined for a different IP address, and send packets with a different source IP. See IP Forwarding for more information.",
                        "**description**: An optional textual description of the instance.",
                        "**disksToAttach**: A list of existing Persistent Disk resources to attach to each replica in the pool. Each disk will be attached in read-only mode to every replica.",
                        "**disksToCreate**: A list of Disk resources to create and attach to each Replica in the Pool. Currently, you can only define one disk and it must be a root persistent disk. Note that Replica Pool will create a root persistent disk for each replica.",
                        "**machineType**: The machine type for this instance. The resource name (e.g. n1-standard-1).",
                        [
                          "**metadata**: A Compute Engine metadata entry. Identical to the metadata on the corresponding Compute Engine resource.",
                          {
                            "$ul": [
                              "**fingerPrint**: The fingerprint of the metadata. Required for updating the metadata entries for this instance.",
                              "**items**: A list of metadata items."
                            ]
                          }
                        ],
                        "**networkInterfaces**: A list of network interfaces for the instance. Currently only one interface is supported by Google Compute Engine, ONE_TO_ONE_NAT.",
                        "**onHostMaintenance**",
                        "**serviceAccounts**: A list of Service Accounts to enable for this instance.",
                        [
                          "**tags**: A Compute Engine Instance tag, identical to the tags on the corresponding Compute Engine Instance resource.",
                          {
                            "$ul": [
                              "**fingerPrint**: The fingerprint of the tag. Required for updating the list of tags.",
                              "**items**: Items contained in this tag."
                            ]
                          }
                        ]
                      ]
                    }
                  ]
                ]
              }
            ],
            "**type**: Deprecated! Do not set."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
