{
  "name": "advisorynotifications_organizations_locations_updateSettings",
  "description": "Update notification settings.",
  "parameters": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "Identifier. The resource name of the settings to retrieve. Format: organizations/{organization}/locations/{location}/settings."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleCloudAdvisorynotificationsV1Settings"
      }
    },
    "required": [
      "name"
    ],
    "$defs": {
      "GoogleCloudAdvisorynotificationsV1Settings": {
        "description": "Settings for Advisory Notifications.",
        "properties": {
          "etag": {
            "description": "Required. Fingerprint for optimistic concurrency returned in Get requests. Must be provided for Update requests. If the value provided does not match the value known to the server, ABORTED will be thrown, and the client should retry the read-modify-write cycle.",
            "type": "string"
          },
          "name": {
            "description": "Identifier. The resource name of the settings to retrieve. Format: organizations/{organization}/locations/{location}/settings.",
            "type": "string"
          },
          "notificationSettings": {
            "additionalProperties": {
              "$ref": "#/$defs/GoogleCloudAdvisorynotificationsV1NotificationSettings"
            },
            "description": "Required. Map of each notification type and its settings to get/set all settings at once. The server will validate the value for each notification type.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "GoogleCloudAdvisorynotificationsV1NotificationSettings": {
        "description": "Settings for each NotificationType.",
        "properties": {
          "enabled": {
            "description": "Whether the associated NotificationType is enabled.",
            "type": "boolean"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PATCH",
    "url": {
      "$uri": "https://advisorynotifications.googleapis.com//v1/{name}{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Settings for Advisory Notifications.",
        "**Key properties:**",
        {
          "$ul": [
            "**etag**: Required. Fingerprint for optimistic concurrency returned in Get requests. Must be provided for Update requests. If the value provided does not match the value known to the server, ABORTED will be thrown, and the client should retry the read-modify-write cycle.",
            "**name**: Identifier. The resource name of the settings to retrieve. Format: organizations/{organization}/locations/{location}/settings.",
            "**notificationSettings**: Required. Map of each notification type and its settings to get/set all settings at once. The server will validate the value for each notification type."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
