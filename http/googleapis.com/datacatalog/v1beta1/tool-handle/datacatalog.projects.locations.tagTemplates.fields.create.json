{
  "name": "datacatalog_projects_locations_tagTemplates_fields_create",
  "description": "Creates a field in a tag template. The user should enable the Data Catalog API in the project identified by the `parent` parameter (see [Data Catalog Resource Project](https://cloud.google.com/data-catalog/docs/concepts/resource-project) for more information).",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The name of the project and the template location [region](https://cloud.google.com/data-catalog/docs/concepts/regions). Example: * projects/{project_id}/locations/us-central1/tagTemplates/{tag_template_id}"
      },
      "tagTemplateFieldId": {
        "type": "string",
        "description": "Required. The ID of the tag template field to create. Field ids can contain letters (both uppercase and lowercase), numbers (0-9), underscores (_) and dashes (-). Field IDs must be at least 1 character long and at most 128 characters long. Field IDs must also be unique within their template."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleCloudDatacatalogV1beta1TagTemplateField"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "GoogleCloudDatacatalogV1beta1TagTemplateField": {
        "description": "The template for an individual field within a tag template.",
        "properties": {
          "description": {
            "description": "The description for this field. Defaults to an empty string.",
            "type": "string"
          },
          "displayName": {
            "description": "The display name for this field. Defaults to an empty string.",
            "type": "string"
          },
          "isRequired": {
            "description": "Whether this is a required field. Defaults to false.",
            "type": "boolean"
          },
          "name": {
            "description": "Output only. The resource name of the tag template field in URL format. Example: * projects/{project_id}/locations/{location}/tagTemplates/{tag_template}/fields/{field} Note that this TagTemplateField may not actually be stored in the location in this name.",
            "readOnly": true,
            "type": "string"
          },
          "order": {
            "description": "The order of this field with respect to other fields in this tag template. A higher value indicates a more important field. The value can be negative. Multiple fields can have the same order, and field orders within a tag do not have to be sequential.",
            "format": "int32",
            "type": "integer"
          },
          "type": {
            "$ref": "#/$defs/GoogleCloudDatacatalogV1beta1FieldType"
          }
        },
        "type": "object"
      },
      "GoogleCloudDatacatalogV1beta1FieldType": {
        "properties": {
          "enumType": {
            "$ref": "#/$defs/GoogleCloudDatacatalogV1beta1FieldTypeEnumType"
          },
          "primitiveType": {
            "description": "Represents primitive types - string, bool etc.",
            "enum": [
              "PRIMITIVE_TYPE_UNSPECIFIED",
              "DOUBLE",
              "STRING",
              "BOOL",
              "TIMESTAMP"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDatacatalogV1beta1FieldTypeEnumType": {
        "properties": {
          "allowedValues": {
            "items": {
              "$ref": "#/$defs/GoogleCloudDatacatalogV1beta1FieldTypeEnumTypeEnumValue"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudDatacatalogV1beta1FieldTypeEnumTypeEnumValue": {
        "properties": {
          "displayName": {
            "description": "Required. The display name of the enum value. Must not be an empty string.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://datacatalog.googleapis.com//v1beta1/{parent}/fields{?tagTemplateFieldId,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The template for an individual field within a tag template.",
        "**Key properties:**",
        {
          "$ul": [
            "**description**: The description for this field. Defaults to an empty string.",
            "**displayName**: The display name for this field. Defaults to an empty string.",
            "**isRequired**: Whether this is a required field. Defaults to false.",
            "**name**: Output only. The resource name of the tag template field in URL format. Example: * projects/{project_id}/locations/{location}/tagTemplates/{tag_template}/fields/{field} Note that this TagTemplateField may not actually be stored in the location in this name.",
            "**order**: The order of this field with respect to other fields in this tag template. A higher value indicates a more important field. The value can be negative. Multiple fields can have the same order, and field orders within a tag do not have to be sequential.",
            [
              "**type**",
              {
                "$ul": [
                  [
                    "**enumType**",
                    {
                      "$ul": [
                        "**allowedValues**"
                      ]
                    }
                  ],
                  "**primitiveType**: Represents primitive types - string, bool etc."
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
