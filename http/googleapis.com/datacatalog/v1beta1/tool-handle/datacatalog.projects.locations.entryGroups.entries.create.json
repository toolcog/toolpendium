{
  "name": "datacatalog_projects_locations_entryGroups_entries_create",
  "description": "Creates an entry. Only entries of 'FILESET' type or user-specified type can be created. Users should enable the Data Catalog API in the project identified by the `parent` parameter (see [Data Catalog Resource Project] (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for more information). A maximum of 100,000 entries may be created per entry group.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The name of the entry group this entry is in. Example: * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id} Note that this Entry and its child resources may not actually be stored in the location in this name."
      },
      "entryId": {
        "type": "string",
        "description": "Required. The id of the entry to create."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleCloudDatacatalogV1beta1Entry"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "GoogleCloudDatacatalogV1beta1Entry": {
        "description": "Entry Metadata. A Data Catalog Entry resource represents another resource in Google Cloud Platform (such as a BigQuery dataset or a Pub/Sub topic), or outside of Google Cloud Platform. Clients can use the `linked_resource` field in the Entry resource to refer to the original resource ID of the source system. An Entry resource contains resource details, such as its schema. An Entry can also be used to attach flexible metadata, such as a Tag.",
        "properties": {
          "bigqueryDateShardedSpec": {
            "$ref": "#/$defs/GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpec"
          },
          "bigqueryTableSpec": {
            "$ref": "#/$defs/GoogleCloudDatacatalogV1beta1BigQueryTableSpec"
          },
          "description": {
            "description": "Entry description, which can consist of several sentences or paragraphs that describe entry contents. Default value is an empty string.",
            "type": "string"
          },
          "displayName": {
            "description": "Display information such as title and description. A short name to identify the entry, for example, \"Analytics Data - Jan 2011\". Default value is an empty string.",
            "type": "string"
          },
          "gcsFilesetSpec": {
            "$ref": "#/$defs/GoogleCloudDatacatalogV1beta1GcsFilesetSpec"
          },
          "integratedSystem": {
            "description": "Output only. This field indicates the entry's source system that Data Catalog integrates with, such as BigQuery or Pub/Sub.",
            "enum": [
              "INTEGRATED_SYSTEM_UNSPECIFIED",
              "BIGQUERY",
              "CLOUD_PUBSUB"
            ],
            "readOnly": true,
            "type": "string"
          },
          "linkedResource": {
            "description": "The resource this metadata entry refers to. For Google Cloud Platform resources, `linked_resource` is the [full name of the resource](https://cloud.google.com/apis/design/resource_names#full_resource_name). For example, the `linked_resource` for a table resource from BigQuery is: * //bigquery.googleapis.com/projects/projectId/datasets/datasetId/tables/tableId Output only when Entry is of type in the EntryType enum. For entries with user_specified_type, this field is optional and defaults to an empty string.",
            "type": "string"
          },
          "name": {
            "description": "Output only. The Data Catalog resource name of the entry in URL format. Example: * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id} Note that this Entry and its child resources may not actually be stored in the location in this name.",
            "readOnly": true,
            "type": "string"
          },
          "schema": {
            "$ref": "#/$defs/GoogleCloudDatacatalogV1beta1Schema"
          },
          "sourceSystemTimestamps": {
            "$ref": "#/$defs/GoogleCloudDatacatalogV1beta1SystemTimestamps"
          },
          "type": {
            "description": "The type of the entry. Only used for Entries with types in the EntryType enum.",
            "enum": [
              "ENTRY_TYPE_UNSPECIFIED",
              "TABLE",
              "MODEL",
              "DATA_STREAM",
              "FILESET"
            ],
            "type": "string"
          },
          "usageSignal": {
            "$ref": "#/$defs/GoogleCloudDatacatalogV1beta1UsageSignal"
          },
          "userSpecifiedSystem": {
            "description": "This field indicates the entry's source system that Data Catalog does not integrate with. `user_specified_system` strings must begin with a letter or underscore and can only contain letters, numbers, and underscores; are case insensitive; must be at least 1 character and at most 64 characters long.",
            "type": "string"
          },
          "userSpecifiedType": {
            "description": "Entry type if it does not fit any of the input-allowed values listed in `EntryType` enum above. When creating an entry, users should check the enum values first, if nothing matches the entry to be created, then provide a custom value, for example \"my_special_type\". `user_specified_type` strings must begin with a letter or underscore and can only contain letters, numbers, and underscores; are case insensitive; must be at least 1 character and at most 64 characters long. Currently, only FILESET enum value is allowed. All other entries created through Data Catalog must use `user_specified_type`.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpec": {
        "description": "Spec for a group of BigQuery tables with name pattern `[prefix]YYYYMMDD`. Context: https://cloud.google.com/bigquery/docs/partitioned-tables#partitioning_versus_sharding",
        "properties": {
          "dataset": {
            "description": "Output only. The Data Catalog resource name of the dataset entry the current table belongs to, for example, `projects/{project_id}/locations/{location}/entrygroups/{entry_group_id}/entries/{entry_id}`.",
            "readOnly": true,
            "type": "string"
          },
          "shardCount": {
            "description": "Output only. Total number of shards.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "tablePrefix": {
            "description": "Output only. The table name prefix of the shards. The name of any given shard is `[table_prefix]YYYYMMDD`, for example, for shard `MyTable20180101`, the `table_prefix` is `MyTable`.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDatacatalogV1beta1BigQueryTableSpec": {
        "description": "Describes a BigQuery table.",
        "properties": {
          "tableSourceType": {
            "description": "Output only. The table source type.",
            "enum": [
              "TABLE_SOURCE_TYPE_UNSPECIFIED",
              "BIGQUERY_VIEW",
              "BIGQUERY_TABLE",
              "BIGQUERY_MATERIALIZED_VIEW"
            ],
            "readOnly": true,
            "type": "string"
          },
          "tableSpec": {
            "$ref": "#/$defs/GoogleCloudDatacatalogV1beta1TableSpec"
          },
          "viewSpec": {
            "$ref": "#/$defs/GoogleCloudDatacatalogV1beta1ViewSpec"
          }
        },
        "type": "object"
      },
      "GoogleCloudDatacatalogV1beta1TableSpec": {
        "description": "Normal BigQuery table spec.",
        "properties": {
          "groupedEntry": {
            "description": "Output only. If the table is a dated shard, i.e., with name pattern `[prefix]YYYYMMDD`, `grouped_entry` is the Data Catalog resource name of the date sharded grouped entry, for example, `projects/{project_id}/locations/{location}/entrygroups/{entry_group_id}/entries/{entry_id}`. Otherwise, `grouped_entry` is empty.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDatacatalogV1beta1ViewSpec": {
        "description": "Table view specification.",
        "properties": {
          "viewQuery": {
            "description": "Output only. The query that defines the table view.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDatacatalogV1beta1GcsFilesetSpec": {
        "description": "Describes a Cloud Storage fileset entry.",
        "properties": {
          "filePatterns": {
            "description": "Required. Patterns to identify a set of files in Google Cloud Storage. See [Cloud Storage documentation](https://cloud.google.com/storage/docs/gsutil/addlhelp/WildcardNames) for more information. Note that bucket wildcards are currently not supported. Examples of valid file_patterns: * `gs://bucket_name/dir/*`: matches all files within `bucket_name/dir` directory. * `gs://bucket_name/dir/**`: matches all files in `bucket_name/dir` spanning all subdirectories. * `gs://bucket_name/file*`: matches files prefixed by `file` in `bucket_name` * `gs://bucket_name/??.txt`: matches files with two characters followed by `.txt` in `bucket_name` * `gs://bucket_name/[aeiou].txt`: matches files that contain a single vowel character followed by `.txt` in `bucket_name` * `gs://bucket_name/[a-m].txt`: matches files that contain `a`, `b`, ... or `m` followed by `.txt` in `bucket_name` * `gs://bucket_name/a/*/b`: matches all files in `bucket_name` that match `a/*/b` pattern, such as `a/c/b`, `a/d/b` * `gs://another_bucket/a.txt`: matches `gs://another_bucket/a.txt` You can combine wildcards to provide more powerful matches, for example: * `gs://bucket_name/[a-m]??.j*g`",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "sampleGcsFileSpecs": {
            "description": "Output only. Sample files contained in this fileset, not all files contained in this fileset are represented here.",
            "items": {
              "$ref": "#/$defs/GoogleCloudDatacatalogV1beta1GcsFileSpec"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudDatacatalogV1beta1GcsFileSpec": {
        "description": "Specifications of a single file in Cloud Storage.",
        "properties": {
          "filePath": {
            "description": "Required. The full file path. Example: `gs://bucket_name/a/b.txt`.",
            "type": "string"
          },
          "gcsTimestamps": {
            "$ref": "#/$defs/GoogleCloudDatacatalogV1beta1SystemTimestamps"
          },
          "sizeBytes": {
            "description": "Output only. The size of the file, in bytes.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDatacatalogV1beta1SystemTimestamps": {
        "description": "Timestamps about this resource according to a particular system.",
        "properties": {
          "createTime": {
            "description": "The creation time of the resource within the given system.",
            "format": "google-datetime",
            "type": "string"
          },
          "expireTime": {
            "description": "Output only. The expiration time of the resource within the given system. Currently only apllicable to BigQuery resources.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "updateTime": {
            "description": "The last-modified time of the resource within the given system.",
            "format": "google-datetime",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDatacatalogV1beta1Schema": {
        "description": "Represents a schema (e.g. BigQuery, GoogleSQL, Avro schema).",
        "properties": {
          "columns": {
            "description": "Required. Schema of columns. A maximum of 10,000 columns and sub-columns can be specified.",
            "items": {
              "$ref": "#/$defs/GoogleCloudDatacatalogV1beta1ColumnSchema"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudDatacatalogV1beta1ColumnSchema": {
        "description": "Representation of a column within a schema. Columns could be nested inside other columns.",
        "properties": {
          "column": {
            "description": "Required. Name of the column.",
            "type": "string"
          },
          "description": {
            "description": "Optional. Description of the column. Default value is an empty string.",
            "type": "string"
          },
          "mode": {
            "description": "Optional. A column's mode indicates whether the values in this column are required, nullable, etc. Only `NULLABLE`, `REQUIRED` and `REPEATED` are supported. Default mode is `NULLABLE`.",
            "type": "string"
          },
          "subcolumns": {
            "description": "Optional. Schema of sub-columns. A column can have zero or more sub-columns.",
            "items": {
              "$ref": "#/$defs/GoogleCloudDatacatalogV1beta1ColumnSchema"
            },
            "type": "array"
          },
          "type": {
            "description": "Required. Type of the column.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDatacatalogV1beta1UsageSignal": {
        "description": "The set of all usage signals that we store in Data Catalog.",
        "properties": {
          "updateTime": {
            "description": "The timestamp of the end of the usage statistics duration.",
            "format": "google-datetime",
            "type": "string"
          },
          "usageWithinTimeRange": {
            "additionalProperties": {
              "$ref": "#/$defs/GoogleCloudDatacatalogV1beta1UsageStats"
            },
            "description": "Usage statistics over each of the pre-defined time ranges, supported strings for time ranges are {\"24H\", \"7D\", \"30D\"}.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "GoogleCloudDatacatalogV1beta1UsageStats": {
        "description": "Detailed counts on the entry's usage. Caveats: - Only BigQuery tables have usage stats - The usage stats only include BigQuery query jobs - The usage stats might be underestimated, e.g. wildcard table references are not yet counted in usage computation https://cloud.google.com/bigquery/docs/querying-wildcard-tables",
        "properties": {
          "totalCancellations": {
            "description": "The number of times that the underlying entry was attempted to be used but was cancelled by the user.",
            "format": "float",
            "type": "number"
          },
          "totalCompletions": {
            "description": "The number of times that the underlying entry was successfully used.",
            "format": "float",
            "type": "number"
          },
          "totalExecutionTimeForCompletionsMillis": {
            "description": "Total time spent (in milliseconds) during uses the resulted in completions.",
            "format": "float",
            "type": "number"
          },
          "totalFailures": {
            "description": "The number of times that the underlying entry was attempted to be used but failed.",
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://datacatalog.googleapis.com//v1beta1/{parent}/entries{?entryId,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Entry Metadata. A Data Catalog Entry resource represents another resource in Google Cloud Platform (such as a BigQuery dataset or a Pub/Sub topic), or outside of Google Cloud Platform. Clients can use the `linked_resource` field in the Entry resource to refer to the original resource ID of the source system. An Entry resource contains resource details, such as its schema. An Entry can also be used to attach flexible metadata, such as a Tag.",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**bigqueryDateShardedSpec**: Spec for a group of BigQuery tables with name pattern `[prefix]YYYYMMDD`. Context: https://cloud.google.com/bigquery/docs/partitioned-tables#partitioning_versus_sharding",
              {
                "$ul": [
                  "**dataset**: Output only. The Data Catalog resource name of the dataset entry the current table belongs to, for example, `projects/{project_id}/locations/{location}/entrygroups/{entry_group_id}/entries/{entry_id}`.",
                  "**shardCount**: Output only. Total number of shards.",
                  "**tablePrefix**: Output only. The table name prefix of the shards. The name of any given shard is `[table_prefix]YYYYMMDD`, for example, for shard `MyTable20180101`, the `table_prefix` is `MyTable`."
                ]
              }
            ],
            [
              "**bigqueryTableSpec**: Describes a BigQuery table.",
              {
                "$ul": [
                  "**tableSourceType**: Output only. The table source type.",
                  [
                    "**tableSpec**: Normal BigQuery table spec.",
                    {
                      "$ul": [
                        "**groupedEntry**: Output only. If the table is a dated shard, i.e., with name pattern `[prefix]YYYYMMDD`, `grouped_entry` is the Data Catalog resource name of the date sharded grouped entry, for example, `projects/{project_id}/locations/{location}/entrygroups/{entry_group_id}/entries/{entry_id}`. Otherwise, `grouped_entry` is empty."
                      ]
                    }
                  ],
                  [
                    "**viewSpec**: Table view specification.",
                    {
                      "$ul": [
                        "**viewQuery**: Output only. The query that defines the table view."
                      ]
                    }
                  ]
                ]
              }
            ],
            "**description**: Entry description, which can consist of several sentences or paragraphs that describe entry contents. Default value is an empty string.",
            "**displayName**: Display information such as title and description. A short name to identify the entry, for example, \"Analytics Data - Jan 2011\". Default value is an empty string.",
            [
              "**gcsFilesetSpec**: Describes a Cloud Storage fileset entry.",
              {
                "$ul": [
                  "**filePatterns**: Required. Patterns to identify a set of files in Google Cloud Storage. See [Cloud Storage documentation](https://cloud.google.com/storage/docs/gsutil/addlhelp/WildcardNames) for more information. Note that bucket wildcards are currently not supported. Examples of valid file_patterns: * `gs://bucket_name/dir/*`: matches all files within `bucket_name/dir` directory. * `gs://bucket_name/dir/**`: matches all files in `bucket_name/dir` spanning all subdirectories. * `gs://bucket_name/file*`: matches files prefixed by `file` in `bucket_name` * `gs://bucket_name/??.txt`: matches files with two characters followed by `.txt` in `bucket_name` * `gs://bucket_name/[aeiou].txt`: matches files that contain a single vowel character followed by `.txt` in `bucket_name` * `gs://bucket_name/[a-m].txt`: matches files that contain `a`, `b`, ... or `m` followed by `.txt` in `bucket_name` * `gs://bucket_name/a/*/b`: matches all files in `bucket_name` that match `a/*/b` pattern, such as `a/c/b`, `a/d/b` * `gs://another_bucket/a.txt`: matches `gs://another_bucket/a.txt` You can combine wildcards to provide more powerful matches, for example: * `gs://bucket_name/[a-m]??.j*g`",
                  "**sampleGcsFileSpecs**: Output only. Sample files contained in this fileset, not all files contained in this fileset are represented here."
                ]
              }
            ],
            "**integratedSystem**: Output only. This field indicates the entry's source system that Data Catalog integrates with, such as BigQuery or Pub/Sub.",
            "**linkedResource**: The resource this metadata entry refers to. For Google Cloud Platform resources, `linked_resource` is the [full name of the resource](https://cloud.google.com/apis/design/resource_names#full_resource_name). For example, the `linked_resource` for a table resource from BigQuery is: * //bigquery.googleapis.com/projects/projectId/datasets/datasetId/tables/tableId Output only when Entry is of type in the EntryType enum. For entries with user_specified_type, this field is optional and defaults to an empty string.",
            "**name**: Output only. The Data Catalog resource name of the entry in URL format. Example: * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id} Note that this Entry and its child resources may not actually be stored in the location in this name.",
            [
              "**schema**: Represents a schema (e.g. BigQuery, GoogleSQL, Avro schema).",
              {
                "$ul": [
                  "**columns**: Required. Schema of columns. A maximum of 10,000 columns and sub-columns can be specified."
                ]
              }
            ],
            [
              "**sourceSystemTimestamps**: Timestamps about this resource according to a particular system.",
              {
                "$ul": [
                  "**createTime**: The creation time of the resource within the given system.",
                  "**expireTime**: Output only. The expiration time of the resource within the given system. Currently only apllicable to BigQuery resources.",
                  "**updateTime**: The last-modified time of the resource within the given system."
                ]
              }
            ],
            "**type**: The type of the entry. Only used for Entries with types in the EntryType enum.",
            [
              "**usageSignal**: The set of all usage signals that we store in Data Catalog.",
              {
                "$ul": [
                  "**updateTime**: The timestamp of the end of the usage statistics duration.",
                  "**usageWithinTimeRange**: Usage statistics over each of the pre-defined time ranges, supported strings for time ranges are {\"24H\", \"7D\", \"30D\"}."
                ]
              }
            ],
            "**userSpecifiedSystem**: This field indicates the entry's source system that Data Catalog does not integrate with. `user_specified_system` strings must begin with a letter or underscore and can only contain letters, numbers, and underscores; are case insensitive; must be at least 1 character and at most 64 characters long.",
            "**userSpecifiedType**: Entry type if it does not fit any of the input-allowed values listed in `EntryType` enum above. When creating an entry, users should check the enum values first, if nothing matches the entry to be created, then provide a custom value, for example \"my_special_type\". `user_specified_type` strings must begin with a letter or underscore and can only contain letters, numbers, and underscores; are case insensitive; must be at least 1 character and at most 64 characters long. Currently, only FILESET enum value is allowed. All other entries created through Data Catalog must use `user_specified_type`."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
