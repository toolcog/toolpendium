{
  "name": "cloudsearch_indexing_datasources_items_push",
  "description": "Pushes an item onto a queue for later polling and updating. This API requires an admin or service account to execute. The service account used is the one whitelisted in the corresponding data source.",
  "parameters": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "The name of the item to push into the indexing queue. Format: datasources/{source_id}/items/{ID} This is a required field. The maximum length is 1536 characters."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/PushItemRequest"
      }
    },
    "required": [
      "name"
    ],
    "$defs": {
      "PushItemRequest": {
        "properties": {
          "connectorName": {
            "description": "The name of connector making this call. Format: datasources/{source_id}/connectors/{ID}",
            "type": "string"
          },
          "debugOptions": {
            "$ref": "#/$defs/DebugOptions"
          },
          "item": {
            "$ref": "#/$defs/PushItem"
          }
        },
        "type": "object"
      },
      "DebugOptions": {
        "description": "Shared request debug options for all cloudsearch RPC methods.",
        "properties": {
          "enableDebugging": {
            "description": "If you are asked by Google to help with debugging, set this field. Otherwise, ignore this field.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "PushItem": {
        "description": "Represents an item to be pushed to the indexing queue.",
        "properties": {
          "contentHash": {
            "description": "Content hash of the item according to the repository. If specified, this is used to determine how to modify this item's status. Setting this field and the type field results in argument error. The maximum length is 2048 characters.",
            "type": "string"
          },
          "metadataHash": {
            "description": "The metadata hash of the item according to the repository. If specified, this is used to determine how to modify this item's status. Setting this field and the type field results in argument error. The maximum length is 2048 characters.",
            "type": "string"
          },
          "payload": {
            "description": "Provides additional document state information for the connector, such as an alternate repository ID and other metadata. The maximum length is 8192 bytes.",
            "format": "byte",
            "type": "string"
          },
          "queue": {
            "description": "Queue to which this item belongs. The `default` queue is chosen if this field is not specified. The maximum length is 512 characters.",
            "type": "string"
          },
          "repositoryError": {
            "$ref": "#/$defs/RepositoryError"
          },
          "structuredDataHash": {
            "description": "Structured data hash of the item according to the repository. If specified, this is used to determine how to modify this item's status. Setting this field and the type field results in argument error. The maximum length is 2048 characters.",
            "type": "string"
          },
          "type": {
            "description": "The type of the push operation that defines the push behavior.",
            "enum": [
              "UNSPECIFIED",
              "MODIFIED",
              "NOT_MODIFIED",
              "REPOSITORY_ERROR",
              "REQUEUE"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "RepositoryError": {
        "description": "Errors when the connector is communicating to the source repository.",
        "properties": {
          "errorMessage": {
            "description": "Message that describes the error. The maximum allowable length of the message is 8192 characters.",
            "type": "string"
          },
          "httpStatusCode": {
            "description": "Error codes. Matches the definition of HTTP status codes.",
            "format": "int32",
            "type": "integer"
          },
          "type": {
            "description": "The type of error.",
            "enum": [
              "UNKNOWN",
              "NETWORK_ERROR",
              "DNS_ERROR",
              "CONNECTION_ERROR",
              "AUTHENTICATION_ERROR",
              "AUTHORIZATION_ERROR",
              "SERVER_ERROR",
              "QUOTA_EXCEEDED",
              "SERVICE_UNAVAILABLE",
              "CLIENT_ERROR"
            ],
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://cloudsearch.googleapis.com//v1/indexing/{name}:push{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Represents a single object that is an item in the search index, such as a file, folder, or a database record.",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**acl**: Access control list information for the item. For more information see [Map ACLs](https://developers.google.com/cloud-search/docs/guides/acls).",
              {
                "$ul": [
                  "**aclInheritanceType**: Sets the type of access rules to apply when an item inherits its ACL from a parent. This should always be set in tandem with the inheritAclFrom field. Also, when the inheritAclFrom field is set, this field should be set to a valid AclInheritanceType.",
                  "**deniedReaders**: List of principals who are explicitly denied access to the item in search results. While principals are denied access by default, use denied readers to handle exceptions and override the list allowed readers. The maximum number of elements is 100.",
                  "**inheritAclFrom**: The name of the item to inherit the Access Permission List (ACL) from. Note: ACL inheritance *only* provides access permissions to child items and does not define structural relationships, nor does it provide convenient ways to delete large groups of items. Deleting an ACL parent from the index only alters the access permissions of child items that reference the parent in the inheritAclFrom field. The item is still in the index, but may not visible in search results. By contrast, deletion of a container item also deletes all items that reference the container via the containerName field. The maximum length for this field is 1536 characters.",
                  "**owners**: Optional. List of owners for the item. This field has no bearing on document access permissions. It does, however, offer a slight ranking boosts items where the querying user is an owner. The maximum number of elements is 5.",
                  "**readers**: List of principals who are allowed to see the item in search results. Optional if inheriting permissions from another item or if the item is not intended to be visible, such as virtual containers. The maximum number of elements is 1000."
                ]
              }
            ],
            [
              "**content**: Content of an item to be indexed and surfaced by Cloud Search. Only UTF-8 encoded strings are allowed as inlineContent. If the content is uploaded and not binary, it must be UTF-8 encoded.",
              {
                "$ul": [
                  [
                    "**contentDataRef**: Represents an upload session reference. This reference is created via upload method. This reference is valid for 30 days after its creation. Updating of item content may refer to this uploaded content via contentDataRef.",
                    {
                      "$ul": [
                        "**name**: The name of the content reference. The maximum length is 2048 characters."
                      ]
                    }
                  ],
                  "**contentFormat**",
                  "**hash**: Hashing info calculated and provided by the API client for content. Can be used with the items.push method to calculate modified state. The maximum length is 2048 characters.",
                  "**inlineContent**: Content that is supplied inlined within the update method. The maximum length is 102400 bytes (100 KiB)."
                ]
              }
            ],
            "**itemType**: The type for this item.",
            [
              "**metadata**: Available metadata fields for the item.",
              {
                "$ul": [
                  "**containerName**: The name of the container for this item. Deletion of the container item leads to automatic deletion of this item. Note: ACLs are not inherited from a container item. To provide ACL inheritance for an item, use the inheritAclFrom field. The maximum length is 1536 characters.",
                  "**contentLanguage**: The BCP-47 language code for the item, such as \"en-US\" or \"sr-Latn\". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier. The maximum length is 32 characters.",
                  "**contextAttributes**: A set of named attributes associated with the item. This can be used for influencing the ranking of the item based on the context in the request. The maximum number of elements is 10.",
                  "**createTime**: The time when the item was created in the source repository.",
                  "**hash**: Hashing value provided by the API caller. This can be used with the items.push method to calculate modified state. The maximum length is 2048 characters.",
                  "**interactions**: A list of interactions for the item. Interactions are used to improve Search quality, but are not exposed to end users. The maximum number of elements is 1000.",
                  "**keywords**: Additional keywords or phrases that should match the item. Used internally for user generated content. The maximum number of elements is 100. The maximum length is 8192 characters.",
                  "**mimeType**: The original mime-type of ItemContent.content in the source repository. The maximum length is 256 characters.",
                  "**objectType**: The type of the item. This should correspond to the name of an object definition in the schema registered for the data source. For example, if the schema for the data source contains an object definition with name 'document', then item indexing requests for objects of that type should set objectType to 'document'. The maximum length is 256 characters.",
                  [
                    "**searchQualityMetadata**: Additional search quality metadata of the item.",
                    {
                      "$ul": [
                        "**quality**: An indication of the quality of the item, used to influence search quality. Value should be between 0.0 (lowest quality) and 1.0 (highest quality). The default value is 0.0."
                      ]
                    }
                  ],
                  "**sourceRepositoryUrl**: Link to the source repository serving the data. Seach results apply this link to the title. Whitespace or special characters may cause Cloud Seach result links to trigger a redirect notice; to avoid this, encode the URL. The maximum length is 2048 characters.",
                  "**title**: The title of the item. If given, this will be the displayed title of the Search result. The maximum length is 2048 characters.",
                  "**updateTime**: The time when the item was last modified in the source repository."
                ]
              }
            ],
            "**name**: The name of the Item. Format: datasources/{source_id}/items/{item_id} This is a required field. The maximum length is 1536 characters.",
            "**payload**: Additional state connector can store for this item. The maximum length is 10000 bytes.",
            "**queue**: Queue this item belongs to. The maximum length is 100 characters.",
            [
              "**status**: This contains item's status and any errors.",
              {
                "$ul": [
                  "**code**: Status code.",
                  "**processingErrors**: Error details in case the item is in ERROR state.",
                  "**repositoryErrors**: Repository error reported by connector."
                ]
              }
            ],
            [
              "**structuredData**: Available structured data fields for the item.",
              {
                "$ul": [
                  "**hash**: Hashing value provided by the API caller. This can be used with the items.push method to calculate modified state. The maximum length is 2048 characters.",
                  [
                    "**object**: A structured data object consisting of named properties.",
                    {
                      "$ul": [
                        "**properties**: The properties for the object. The maximum number of elements is 1000."
                      ]
                    }
                  ]
                ]
              }
            ],
            "**version**: Required. The indexing system stores the version from the datasource as a byte string and compares the Item version in the index to the version of the queued Item using lexical ordering. Cloud Search Indexing won't index or delete any queued item with a version value that is less than or equal to the version of the currently indexed item. The maximum length for this field is 1024 bytes. For information on how item version affects the deletion process, refer to [Handle revisions after manual deletes](https://developers.google.com/cloud-search/docs/guides/operations)."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
