{
  "name": "cloudsearch_settings_searchapplications_get",
  "description": "Gets the specified search application. **Note:** This API requires an admin account to execute.",
  "parameters": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "The name of the search application. Format: searchapplications/{application_id}."
      },
      "debugOptions.enableDebugging": {
        "type": "boolean",
        "description": "If you are asked by Google to help with debugging, set this field. Otherwise, ignore this field."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      }
    },
    "required": [
      "name"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://cloudsearch.googleapis.com//v1/settings/{name}{?debugOptions.enableDebugging,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "SearchApplication",
        "**Key properties:**",
        {
          "$ul": [
            "**dataSourceRestrictions**: Retrictions applied to the configurations. The maximum number of elements is 10.",
            "**defaultFacetOptions**: The default fields for returning facet results. The sources specified here also have been included in data_source_restrictions above.",
            [
              "**defaultSortOptions**",
              {
                "$ul": [
                  "**operatorName**: The name of the operator corresponding to the field to sort on. The corresponding property must be marked as sortable.",
                  "**sortOrder**: Ascending is the default sort order"
                ]
              }
            ],
            "**displayName**: Display name of the Search Application. The maximum length is 300 characters.",
            "**enableAuditLog**: Indicates whether audit logging is on/off for requests made for the search application in query APIs.",
            "**name**: The name of the Search Application. Format: searchapplications/{application_id}.",
            "**operationIds**: Output only. IDs of the Long Running Operations (LROs) currently running for this schema. Output only field.",
            [
              "**queryInterpretationConfig**: Default options to interpret user query.",
              {
                "$ul": [
                  "**forceDisableSupplementalResults**: Set this flag to disable supplemental results retrieval, setting a flag here will not retrieve supplemental results for queries associated with a given search application. If this flag is set to True, it will take precedence over the option set at Query level. For the default value of False, query level flag will set the correct interpretation for supplemental results.",
                  "**forceVerbatimMode**: Enable this flag to turn off all internal optimizations like natural language (NL) interpretation of queries, supplemental results retrieval, and usage of synonyms including custom ones. If this flag is set to True, it will take precedence over the option set at Query level. For the default value of False, query level flag will set the correct interpretation for verbatim mode."
                ]
              }
            ],
            "**returnResultThumbnailUrls**: With each result we should return the URI for its thumbnail (when applicable)",
            [
              "**scoringConfig**: Scoring configurations for a source while processing a Search or Suggest request.",
              {
                "$ul": [
                  "**disableFreshness**: Whether to use freshness as a ranking signal. By default, freshness is used as a ranking signal. Note that this setting is not available in the Admin UI.",
                  "**disablePersonalization**: Whether to personalize the results. By default, personal signals will be used to boost results."
                ]
              }
            ],
            "**sourceConfig**: Configuration for a sources specified in data_source_restrictions."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
