{
  "name": "baremetalsolution_projects_locations_volumes_patch",
  "description": "Update details of a single storage volume.",
  "parameters": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "Output only. The resource name of this `Volume`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/volumes/{volume}`"
      },
      "updateMask": {
        "type": "string",
        "description": "The list of fields to update. The only currently supported fields are: 'labels'"
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/Volume"
      }
    },
    "required": [
      "name"
    ],
    "$defs": {
      "Volume": {
        "description": "A storage volume.",
        "properties": {
          "attached": {
            "description": "Output only. Is the Volume attached at at least one instance. This field is a lightweight counterpart of `instances` field. It is filled in List responses as well.",
            "readOnly": true,
            "type": "boolean"
          },
          "autoGrownSizeGib": {
            "description": "The size, in GiB, that this storage volume has expanded as a result of an auto grow policy. In the absence of auto-grow, the value is 0.",
            "format": "int64",
            "type": "string"
          },
          "bootVolume": {
            "description": "Output only. Whether this volume is a boot volume. A boot volume is one which contains a boot LUN.",
            "readOnly": true,
            "type": "boolean"
          },
          "currentSizeGib": {
            "description": "The current size of this storage volume, in GiB, including space reserved for snapshots. This size might be different than the requested size if the storage volume has been configured with auto grow or auto shrink.",
            "format": "int64",
            "type": "string"
          },
          "emergencySizeGib": {
            "description": "Additional emergency size that was requested for this Volume, in GiB. current_size_gib includes this value.",
            "format": "int64",
            "type": "string"
          },
          "expireTime": {
            "description": "Output only. Time after which volume will be fully deleted. It is filled only for volumes in COOLOFF state.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "description": "An identifier for the `Volume`, generated by the backend.",
            "type": "string"
          },
          "instances": {
            "description": "Output only. Instances this Volume is attached to. This field is set only in Get requests.",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Labels as key value pairs.",
            "type": "object"
          },
          "maxSizeGib": {
            "description": "Maximum size volume can be expanded to in case of evergency, in GiB.",
            "format": "int64",
            "type": "string"
          },
          "name": {
            "description": "Output only. The resource name of this `Volume`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/volumes/{volume}`",
            "readOnly": true,
            "type": "string"
          },
          "notes": {
            "description": "Input only. User-specified notes for new Volume. Used to provision Volumes that require manual intervention.",
            "type": "string"
          },
          "originallyRequestedSizeGib": {
            "description": "Originally requested size, in GiB.",
            "format": "int64",
            "type": "string"
          },
          "performanceTier": {
            "description": "Immutable. Performance tier of the Volume. Default is SHARED.",
            "enum": [
              "VOLUME_PERFORMANCE_TIER_UNSPECIFIED",
              "VOLUME_PERFORMANCE_TIER_SHARED",
              "VOLUME_PERFORMANCE_TIER_ASSIGNED",
              "VOLUME_PERFORMANCE_TIER_HT",
              "VOLUME_PERFORMANCE_TIER_QOS2_PERFORMANCE"
            ],
            "type": "string"
          },
          "pod": {
            "description": "Immutable. Pod name. Pod is an independent part of infrastructure. Volume can only be connected to the instances allocated in the same pod.",
            "type": "string"
          },
          "protocol": {
            "description": "Output only. Storage protocol for the Volume.",
            "enum": [
              "PROTOCOL_UNSPECIFIED",
              "FIBRE_CHANNEL",
              "NFS"
            ],
            "readOnly": true,
            "type": "string"
          },
          "remainingSpaceGib": {
            "description": "The space remaining in the storage volume for new LUNs, in GiB, excluding space reserved for snapshots.",
            "format": "int64",
            "type": "string"
          },
          "requestedSizeGib": {
            "description": "The requested size of this storage volume, in GiB.",
            "format": "int64",
            "type": "string"
          },
          "snapshotAutoDeleteBehavior": {
            "description": "The behavior to use when snapshot reserved space is full.",
            "enum": [
              "SNAPSHOT_AUTO_DELETE_BEHAVIOR_UNSPECIFIED",
              "DISABLED",
              "OLDEST_FIRST",
              "NEWEST_FIRST"
            ],
            "type": "string"
          },
          "snapshotEnabled": {
            "description": "Whether snapshots are enabled.",
            "type": "boolean"
          },
          "snapshotReservationDetail": {
            "$ref": "#/$defs/SnapshotReservationDetail"
          },
          "state": {
            "description": "The state of this storage volume.",
            "enum": [
              "STATE_UNSPECIFIED",
              "CREATING",
              "READY",
              "DELETING",
              "UPDATING",
              "COOL_OFF"
            ],
            "type": "string"
          },
          "storageType": {
            "description": "The storage type for this volume.",
            "enum": [
              "STORAGE_TYPE_UNSPECIFIED",
              "SSD",
              "HDD"
            ],
            "type": "string"
          },
          "workloadProfile": {
            "description": "The workload profile for the volume.",
            "enum": [
              "WORKLOAD_PROFILE_UNSPECIFIED",
              "GENERIC",
              "HANA"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "SnapshotReservationDetail": {
        "description": "Details about snapshot space reservation and usage on the storage volume.",
        "properties": {
          "reservedSpaceGib": {
            "description": "The space on this storage volume reserved for snapshots, shown in GiB.",
            "format": "int64",
            "type": "string"
          },
          "reservedSpacePercent": {
            "description": "Percent of the total Volume size reserved for snapshot copies. Enabling snapshots requires reserving 20% or more of the storage volume space for snapshots. Maximum reserved space for snapshots is 40%. Setting this field will effectively set snapshot_enabled to true.",
            "format": "int32",
            "type": "integer"
          },
          "reservedSpaceRemainingGib": {
            "description": "The amount, in GiB, of available space in this storage volume's reserved snapshot space.",
            "format": "int64",
            "type": "string"
          },
          "reservedSpaceUsedPercent": {
            "description": "The percent of snapshot space on this storage volume actually being used by the snapshot copies. This value might be higher than 100% if the snapshot copies have overflowed into the data portion of the storage volume.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PATCH",
    "url": {
      "$uri": "https://baremetalsolution.googleapis.com//v2/{name}{?updateMask,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "This resource represents a long-running operation that is the result of a network API call.",
        "**Key properties:**",
        {
          "$ul": [
            "**done**: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
            [
              "**error**: The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
              {
                "$ul": [
                  "**code**: The status code, which should be an enum value of google.rpc.Code.",
                  "**details**: A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                  "**message**: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                ]
              }
            ],
            "**metadata**: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
            "**name**: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
            "**response**: The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
