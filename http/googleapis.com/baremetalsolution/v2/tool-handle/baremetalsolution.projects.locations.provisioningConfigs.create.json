{
  "name": "baremetalsolution_projects_locations_provisioningConfigs_create",
  "description": "Create new ProvisioningConfig.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The parent project and location containing the ProvisioningConfig."
      },
      "email": {
        "type": "string",
        "description": "Optional. Email provided to send a confirmation with provisioning config to."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/ProvisioningConfig"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "ProvisioningConfig": {
        "description": "A provisioning configuration.",
        "properties": {
          "cloudConsoleUri": {
            "description": "Output only. URI to Cloud Console UI view of this provisioning config.",
            "readOnly": true,
            "type": "string"
          },
          "customId": {
            "description": "Optional. The user-defined identifier of the provisioning config.",
            "type": "string"
          },
          "email": {
            "deprecated": true,
            "description": "Email provided to send a confirmation with provisioning config to. Deprecated in favour of email field in request messages.",
            "type": "string"
          },
          "handoverServiceAccount": {
            "description": "A service account to enable customers to access instance credentials upon handover.",
            "type": "string"
          },
          "instances": {
            "description": "Instances to be created.",
            "items": {
              "$ref": "#/$defs/InstanceConfig"
            },
            "type": "array"
          },
          "location": {
            "description": "Optional. Location name of this ProvisioningConfig. It is optional only for Intake UI transition period.",
            "type": "string"
          },
          "name": {
            "description": "Output only. The system-generated name of the provisioning config. This follows the UUID format.",
            "readOnly": true,
            "type": "string"
          },
          "networks": {
            "description": "Networks to be created.",
            "items": {
              "$ref": "#/$defs/NetworkConfig"
            },
            "type": "array"
          },
          "pod": {
            "description": "Optional. Pod name. Pod is an independent part of infrastructure. Instance can be connected to the assets (networks, volumes, nfsshares) allocated in the same pod only.",
            "type": "string"
          },
          "state": {
            "description": "Output only. State of ProvisioningConfig.",
            "enum": [
              "STATE_UNSPECIFIED",
              "DRAFT",
              "SUBMITTED",
              "PROVISIONING",
              "PROVISIONED",
              "VALIDATED",
              "CANCELLED",
              "FAILED"
            ],
            "readOnly": true,
            "type": "string"
          },
          "statusMessage": {
            "description": "Optional status messages associated with the FAILED state.",
            "type": "string"
          },
          "ticketId": {
            "description": "A generated ticket id to track provisioning request.",
            "type": "string"
          },
          "updateTime": {
            "description": "Output only. Last update timestamp.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "volumes": {
            "description": "Volumes to be created.",
            "items": {
              "$ref": "#/$defs/VolumeConfig"
            },
            "type": "array"
          },
          "vpcScEnabled": {
            "description": "If true, VPC SC is enabled for the cluster.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "InstanceConfig": {
        "description": "Configuration parameters for a new instance.",
        "properties": {
          "accountNetworksEnabled": {
            "description": "If true networks can be from different projects of the same vendor account.",
            "type": "boolean"
          },
          "clientNetwork": {
            "$ref": "#/$defs/NetworkAddress"
          },
          "hyperthreading": {
            "description": "Whether the instance should be provisioned with Hyperthreading enabled.",
            "type": "boolean"
          },
          "id": {
            "deprecated": true,
            "description": "A transient unique identifier to idenfity an instance within an ProvisioningConfig request.",
            "type": "string"
          },
          "instanceType": {
            "description": "Instance type. [Available types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)",
            "type": "string"
          },
          "kmsKeyVersion": {
            "description": "Name of the KMS crypto key version used to encrypt the initial passwords. The key has to have ASYMMETRIC_DECRYPT purpose.",
            "type": "string"
          },
          "logicalInterfaces": {
            "description": "List of logical interfaces for the instance. The number of logical interfaces will be the same as number of hardware bond/nic on the chosen network template. Filled if InstanceConfig.multivlan_config is true.",
            "items": {
              "$ref": "#/$defs/GoogleCloudBaremetalsolutionV2LogicalInterface"
            },
            "type": "array"
          },
          "name": {
            "description": "The name of the instance config.",
            "type": "string"
          },
          "networkConfig": {
            "description": "The type of network configuration on the instance.",
            "enum": [
              "NETWORKCONFIG_UNSPECIFIED",
              "SINGLE_VLAN",
              "MULTI_VLAN"
            ],
            "type": "string"
          },
          "networkTemplate": {
            "description": "Server network template name. Filled if InstanceConfig.multivlan_config is true.",
            "type": "string"
          },
          "osImage": {
            "description": "OS image to initialize the instance. [Available images](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)",
            "type": "string"
          },
          "privateNetwork": {
            "$ref": "#/$defs/NetworkAddress"
          },
          "sshKeyNames": {
            "description": "Optional. List of names of ssh keys used to provision the instance.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "userNote": {
            "description": "User note field, it can be used by customers to add additional information for the BMS Ops team .",
            "type": "string"
          }
        },
        "type": "object"
      },
      "NetworkAddress": {
        "description": "A network.",
        "properties": {
          "address": {
            "description": "IPv4 address to be assigned to the server.",
            "type": "string"
          },
          "existingNetworkId": {
            "description": "Name of the existing network to use.",
            "type": "string"
          },
          "networkId": {
            "description": "Id of the network to use, within the same ProvisioningConfig request.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudBaremetalsolutionV2LogicalInterface": {
        "description": "Each logical interface represents a logical abstraction of the underlying physical interface (for eg. bond, nic) of the instance. Each logical interface can effectively map to multiple network-IP pairs and still be mapped to one underlying physical interface.",
        "properties": {
          "interfaceIndex": {
            "deprecated": true,
            "description": "The index of the logical interface mapping to the index of the hardware bond or nic on the chosen network template. This field is deprecated.",
            "format": "int32",
            "type": "integer"
          },
          "logicalNetworkInterfaces": {
            "description": "List of logical network interfaces within a logical interface.",
            "items": {
              "$ref": "#/$defs/LogicalNetworkInterface"
            },
            "type": "array"
          },
          "name": {
            "description": "Interface name. This is of syntax or and forms part of the network template name.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "LogicalNetworkInterface": {
        "description": "Each logical network interface is effectively a network and IP pair.",
        "properties": {
          "defaultGateway": {
            "description": "Whether this interface is the default gateway for the instance. Only one interface can be the default gateway for the instance.",
            "type": "boolean"
          },
          "id": {
            "description": "An identifier for the `Network`, generated by the backend.",
            "type": "string"
          },
          "ipAddress": {
            "description": "IP address in the network",
            "type": "string"
          },
          "network": {
            "description": "Name of the network",
            "type": "string"
          },
          "networkType": {
            "description": "Type of network.",
            "enum": [
              "TYPE_UNSPECIFIED",
              "CLIENT",
              "PRIVATE"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "NetworkConfig": {
        "description": "Configuration parameters for a new network.",
        "properties": {
          "bandwidth": {
            "description": "Interconnect bandwidth. Set only when type is CLIENT.",
            "enum": [
              "BANDWIDTH_UNSPECIFIED",
              "BW_1_GBPS",
              "BW_2_GBPS",
              "BW_5_GBPS",
              "BW_10_GBPS"
            ],
            "type": "string"
          },
          "cidr": {
            "description": "CIDR range of the network.",
            "type": "string"
          },
          "gcpService": {
            "description": "The GCP service of the network. Available gcp_service are in https://cloud.google.com/bare-metal/docs/bms-planning.",
            "type": "string"
          },
          "id": {
            "description": "A transient unique identifier to identify a volume within an ProvisioningConfig request.",
            "type": "string"
          },
          "jumboFramesEnabled": {
            "description": "The JumboFramesEnabled option for customer to set.",
            "type": "boolean"
          },
          "name": {
            "description": "Output only. The name of the network config.",
            "readOnly": true,
            "type": "string"
          },
          "serviceCidr": {
            "description": "Service CIDR, if any.",
            "enum": [
              "SERVICE_CIDR_UNSPECIFIED",
              "DISABLED",
              "HIGH_26",
              "HIGH_27",
              "HIGH_28"
            ],
            "type": "string"
          },
          "type": {
            "description": "The type of this network, either Client or Private.",
            "enum": [
              "TYPE_UNSPECIFIED",
              "CLIENT",
              "PRIVATE"
            ],
            "type": "string"
          },
          "userNote": {
            "description": "User note field, it can be used by customers to add additional information for the BMS Ops team .",
            "type": "string"
          },
          "vlanAttachments": {
            "description": "List of VLAN attachments. As of now there are always 2 attachments, but it is going to change in the future (multi vlan).",
            "items": {
              "$ref": "#/$defs/IntakeVlanAttachment"
            },
            "type": "array"
          },
          "vlanSameProject": {
            "description": "Whether the VLAN attachment pair is located in the same project.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "IntakeVlanAttachment": {
        "description": "A GCP vlan attachment.",
        "properties": {
          "id": {
            "description": "Identifier of the VLAN attachment.",
            "type": "string"
          },
          "pairingKey": {
            "description": "Attachment pairing key.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "VolumeConfig": {
        "description": "Configuration parameters for a new volume.",
        "properties": {
          "gcpService": {
            "description": "The GCP service of the storage volume. Available gcp_service are in https://cloud.google.com/bare-metal/docs/bms-planning.",
            "type": "string"
          },
          "id": {
            "description": "A transient unique identifier to identify a volume within an ProvisioningConfig request.",
            "type": "string"
          },
          "lunRanges": {
            "description": "LUN ranges to be configured. Set only when protocol is PROTOCOL_FC.",
            "items": {
              "$ref": "#/$defs/LunRange"
            },
            "type": "array"
          },
          "machineIds": {
            "description": "Machine ids connected to this volume. Set only when protocol is PROTOCOL_FC.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "name": {
            "description": "Output only. The name of the volume config.",
            "readOnly": true,
            "type": "string"
          },
          "nfsExports": {
            "description": "NFS exports. Set only when protocol is PROTOCOL_NFS.",
            "items": {
              "$ref": "#/$defs/NfsExport"
            },
            "type": "array"
          },
          "performanceTier": {
            "description": "Performance tier of the Volume. Default is SHARED.",
            "enum": [
              "VOLUME_PERFORMANCE_TIER_UNSPECIFIED",
              "VOLUME_PERFORMANCE_TIER_SHARED",
              "VOLUME_PERFORMANCE_TIER_ASSIGNED",
              "VOLUME_PERFORMANCE_TIER_HT",
              "VOLUME_PERFORMANCE_TIER_QOS2_PERFORMANCE"
            ],
            "type": "string"
          },
          "protocol": {
            "description": "Volume protocol.",
            "enum": [
              "PROTOCOL_UNSPECIFIED",
              "PROTOCOL_FC",
              "PROTOCOL_NFS"
            ],
            "type": "string"
          },
          "sizeGb": {
            "description": "The requested size of this volume, in GB.",
            "format": "int32",
            "type": "integer"
          },
          "snapshotsEnabled": {
            "description": "Whether snapshots should be enabled.",
            "type": "boolean"
          },
          "type": {
            "description": "The type of this Volume.",
            "enum": [
              "TYPE_UNSPECIFIED",
              "FLASH",
              "DISK"
            ],
            "type": "string"
          },
          "userNote": {
            "description": "User note field, it can be used by customers to add additional information for the BMS Ops team .",
            "type": "string"
          }
        },
        "type": "object"
      },
      "LunRange": {
        "description": "A LUN(Logical Unit Number) range.",
        "properties": {
          "quantity": {
            "description": "Number of LUNs to create.",
            "format": "int32",
            "type": "integer"
          },
          "sizeGb": {
            "description": "The requested size of each LUN, in GB.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NfsExport": {
        "description": "A NFS export entry.",
        "properties": {
          "allowDev": {
            "description": "Allow dev flag in NfsShare AllowedClientsRequest.",
            "type": "boolean"
          },
          "allowSuid": {
            "description": "Allow the setuid flag.",
            "type": "boolean"
          },
          "cidr": {
            "description": "A CIDR range.",
            "type": "string"
          },
          "machineId": {
            "description": "Either a single machine, identified by an ID, or a comma-separated list of machine IDs.",
            "type": "string"
          },
          "networkId": {
            "description": "Network to use to publish the export.",
            "type": "string"
          },
          "noRootSquash": {
            "description": "Disable root squashing, which is a feature of NFS. Root squash is a special mapping of the remote superuser (root) identity when using identity authentication.",
            "type": "boolean"
          },
          "permissions": {
            "description": "Export permissions.",
            "enum": [
              "PERMISSIONS_UNSPECIFIED",
              "READ_ONLY",
              "READ_WRITE"
            ],
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://baremetalsolution.googleapis.com//v2/{parent}/provisioningConfigs{?email,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A provisioning configuration.",
        "**Key properties:**",
        {
          "$ul": [
            "**cloudConsoleUri**: Output only. URI to Cloud Console UI view of this provisioning config.",
            "**customId**: Optional. The user-defined identifier of the provisioning config.",
            "**email**: Email provided to send a confirmation with provisioning config to. Deprecated in favour of email field in request messages.",
            "**handoverServiceAccount**: A service account to enable customers to access instance credentials upon handover.",
            "**instances**: Instances to be created.",
            "**location**: Optional. Location name of this ProvisioningConfig. It is optional only for Intake UI transition period.",
            "**name**: Output only. The system-generated name of the provisioning config. This follows the UUID format.",
            "**networks**: Networks to be created.",
            "**pod**: Optional. Pod name. Pod is an independent part of infrastructure. Instance can be connected to the assets (networks, volumes, nfsshares) allocated in the same pod only.",
            "**state**: Output only. State of ProvisioningConfig.",
            "**statusMessage**: Optional status messages associated with the FAILED state.",
            "**ticketId**: A generated ticket id to track provisioning request.",
            "**updateTime**: Output only. Last update timestamp.",
            "**volumes**: Volumes to be created.",
            "**vpcScEnabled**: If true, VPC SC is enabled for the cluster."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
