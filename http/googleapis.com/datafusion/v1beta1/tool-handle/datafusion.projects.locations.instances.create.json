{
  "name": "datafusion_projects_locations_instances_create",
  "description": "Creates a new Data Fusion instance in the specified project and location.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The instance's project and location in the format projects/{project}/locations/{location}."
      },
      "instanceId": {
        "type": "string",
        "description": "Required. The name of the instance to create. Instance name can only contain lowercase alphanumeric characters and hyphens. It must start with a letter and must not end with a hyphen. It can have a maximum of 30 characters."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/Instance"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "Instance": {
        "description": "Represents a Data Fusion instance.",
        "properties": {
          "accelerators": {
            "description": "Output only. List of accelerators enabled for this CDF instance.",
            "items": {
              "$ref": "#/$defs/Accelerator"
            },
            "readOnly": true,
            "type": "array"
          },
          "apiEndpoint": {
            "description": "Output only. Endpoint on which the REST APIs is accessible.",
            "readOnly": true,
            "type": "string"
          },
          "availableVersion": {
            "description": "Output only. Available versions that the instance can be upgraded to using UpdateInstanceRequest.",
            "items": {
              "$ref": "#/$defs/Version"
            },
            "readOnly": true,
            "type": "array"
          },
          "createTime": {
            "description": "Output only. The time the instance was created.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "cryptoKeyConfig": {
            "$ref": "#/$defs/CryptoKeyConfig"
          },
          "dataplexDataLineageIntegrationEnabled": {
            "description": "Optional. Option to enable the Dataplex Lineage Integration feature.",
            "type": "boolean"
          },
          "dataprocServiceAccount": {
            "description": "User-managed service account to set on Dataproc when Cloud Data Fusion creates Dataproc to run data processing pipelines. This allows users to have fine-grained access control on Dataproc's accesses to cloud resources.",
            "type": "string"
          },
          "description": {
            "description": "A description of this instance.",
            "type": "string"
          },
          "disabledReason": {
            "description": "Output only. If the instance state is DISABLED, the reason for disabling the instance.",
            "items": {
              "enum": [
                "DISABLED_REASON_UNSPECIFIED",
                "KMS_KEY_ISSUE"
              ],
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "displayName": {
            "description": "Display name for an instance.",
            "type": "string"
          },
          "enableRbac": {
            "description": "Option to enable granular role-based access control.",
            "type": "boolean"
          },
          "enableStackdriverLogging": {
            "description": "Option to enable Stackdriver Logging.",
            "type": "boolean"
          },
          "enableStackdriverMonitoring": {
            "description": "Option to enable Stackdriver Monitoring.",
            "type": "boolean"
          },
          "enableZoneSeparation": {
            "description": "Option to enable zone separation.",
            "type": "boolean"
          },
          "eventPublishConfig": {
            "$ref": "#/$defs/EventPublishConfig"
          },
          "gcsBucket": {
            "description": "Output only. Cloud Storage bucket generated by Data Fusion in the customer project.",
            "readOnly": true,
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The resource labels for instance to use to annotate any related underlying resources such as Compute Engine VMs. The character '=' is not allowed to be used within the labels.",
            "type": "object"
          },
          "name": {
            "description": "Output only. The name of this instance is in the form of projects/{project}/locations/{location}/instances/{instance}.",
            "readOnly": true,
            "type": "string"
          },
          "networkConfig": {
            "$ref": "#/$defs/NetworkConfig"
          },
          "options": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Map of additional options used to configure the behavior of Data Fusion instance.",
            "type": "object"
          },
          "p4ServiceAccount": {
            "description": "Output only. P4 service account for the customer project.",
            "readOnly": true,
            "type": "string"
          },
          "patchRevision": {
            "description": "Optional. Current patch revision of the Data Fusion.",
            "type": "string"
          },
          "privateInstance": {
            "description": "Specifies whether the Data Fusion instance should be private. If set to true, all Data Fusion nodes will have private IP addresses and will not be able to access the public internet.",
            "type": "boolean"
          },
          "satisfiesPzs": {
            "description": "Output only. Reserved for future use.",
            "readOnly": true,
            "type": "boolean"
          },
          "serviceAccount": {
            "deprecated": true,
            "description": "Output only. Deprecated. Use tenant_project_id instead to extract the tenant project ID.",
            "readOnly": true,
            "type": "string"
          },
          "serviceEndpoint": {
            "description": "Output only. Endpoint on which the Data Fusion UI is accessible.",
            "readOnly": true,
            "type": "string"
          },
          "state": {
            "description": "Output only. The current state of this Data Fusion instance.",
            "enum": [
              "STATE_UNSPECIFIED",
              "CREATING",
              "RUNNING",
              "FAILED",
              "DELETING",
              "UPGRADING",
              "RESTARTING",
              "UPDATING",
              "AUTO_UPDATING",
              "AUTO_UPGRADING",
              "DISABLED"
            ],
            "readOnly": true,
            "type": "string"
          },
          "stateMessage": {
            "description": "Output only. Additional information about the current state of this Data Fusion instance if available.",
            "readOnly": true,
            "type": "string"
          },
          "tenantProjectId": {
            "description": "Output only. The name of the tenant project.",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "Required. Instance type.",
            "enum": [
              "TYPE_UNSPECIFIED",
              "BASIC",
              "ENTERPRISE",
              "DEVELOPER"
            ],
            "type": "string"
          },
          "updateTime": {
            "description": "Output only. The time the instance was last updated.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "version": {
            "description": "Current version of Data Fusion.",
            "type": "string"
          },
          "workforceIdentityServiceEndpoint": {
            "description": "Output only. Endpoint on which the Data Fusion UI is accessible to third-party users.",
            "readOnly": true,
            "type": "string"
          },
          "zone": {
            "description": "Name of the zone in which the Data Fusion instance will be created. Only DEVELOPER instances use this field.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Accelerator": {
        "description": "Identifies Data Fusion accelerators for an instance.",
        "properties": {
          "acceleratorType": {
            "description": "The type of an accelator for a CDF instance.",
            "enum": [
              "ACCELERATOR_TYPE_UNSPECIFIED",
              "CDC",
              "HEALTHCARE",
              "CCAI_INSIGHTS",
              "CLOUDSEARCH"
            ],
            "type": "string"
          },
          "state": {
            "description": "The state of the accelerator.",
            "enum": [
              "STATE_UNSPECIFIED",
              "ENABLED",
              "DISABLED",
              "UNKNOWN"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "Version": {
        "description": "The Data Fusion version.",
        "properties": {
          "availableFeatures": {
            "description": "Represents a list of available feature names for a given version.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "defaultVersion": {
            "description": "Whether this is currently the default version for Cloud Data Fusion",
            "type": "boolean"
          },
          "type": {
            "description": "Type represents the release availability of the version",
            "enum": [
              "TYPE_UNSPECIFIED",
              "TYPE_PREVIEW",
              "TYPE_GENERAL_AVAILABILITY"
            ],
            "type": "string"
          },
          "versionNumber": {
            "description": "The version number of the Data Fusion instance, such as '6.0.1.0'.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CryptoKeyConfig": {
        "description": "The crypto key configuration. This field is used by the Customer-managed encryption keys (CMEK) feature.",
        "properties": {
          "keyReference": {
            "description": "The name of the key which is used to encrypt/decrypt customer data. For key in Cloud KMS, the key should be in the format of `projects/*/locations/*/keyRings/*/cryptoKeys/*`.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EventPublishConfig": {
        "description": "Confirguration of PubSubEventWriter.",
        "properties": {
          "enabled": {
            "description": "Required. Option to enable Event Publishing.",
            "type": "boolean"
          },
          "topic": {
            "description": "Required. The resource name of the Pub/Sub topic. Format: projects/{project_id}/topics/{topic_id}",
            "type": "string"
          }
        },
        "type": "object"
      },
      "NetworkConfig": {
        "description": "Network configuration for a Data Fusion instance. These configurations are used for peering with the customer network. Configurations are optional when a public Data Fusion instance is to be created. However, providing these configurations allows several benefits, such as reduced network latency while accessing the customer resources from managed Data Fusion instance nodes, as well as access to the customer on-prem resources.",
        "properties": {
          "connectionType": {
            "description": "Optional. Type of connection for establishing private IP connectivity between the Data Fusion customer project VPC and the corresponding tenant project from a predefined list of available connection modes. If this field is unspecified for a private instance, VPC peering is used.",
            "enum": [
              "CONNECTION_TYPE_UNSPECIFIED",
              "VPC_PEERING",
              "PRIVATE_SERVICE_CONNECT_INTERFACES"
            ],
            "type": "string"
          },
          "ipAllocation": {
            "description": "Optional. The IP range in CIDR notation to use for the managed Data Fusion instance nodes. This range must not overlap with any other ranges used in the Data Fusion instance network. This is required only when using connection type VPC_PEERING. Format: a.b.c.d/22 Example: 192.168.0.0/22",
            "type": "string"
          },
          "network": {
            "description": "Optional. Name of the network in the customer project with which the Tenant Project will be peered for executing pipelines. This is required only when using connection type VPC peering. In case of shared VPC where the network resides in another host project the network should specified in the form of projects/{host-project-id}/global/networks/{network}. This is only required for connectivity type VPC_PEERING.",
            "type": "string"
          },
          "privateServiceConnectConfig": {
            "$ref": "#/$defs/PrivateServiceConnectConfig"
          }
        },
        "type": "object"
      },
      "PrivateServiceConnectConfig": {
        "description": "Configuration for using Private Service Connect to establish connectivity between the Data Fusion consumer project and the corresponding tenant project.",
        "properties": {
          "effectiveUnreachableCidrBlock": {
            "description": "Output only. The CIDR block to which the CDF instance can't route traffic to in the consumer project VPC. The size of this block is /25. The format of this field is governed by RFC 4632. Example: 240.0.0.0/25",
            "readOnly": true,
            "type": "string"
          },
          "networkAttachment": {
            "description": "Required. The reference to the network attachment used to establish private connectivity. It will be of the form projects/{project-id}/regions/{region}/networkAttachments/{network-attachment-id}.",
            "type": "string"
          },
          "unreachableCidrBlock": {
            "description": "Optional. Input only. The CIDR block to which the CDF instance can't route traffic to in the consumer project VPC. The size of this block should be at least /25. This range should not overlap with the primary address range of any subnetwork used by the network attachment. This range can be used for other purposes in the consumer VPC as long as there is no requirement for CDF to reach destinations using these addresses. If this value is not provided, the server chooses a non RFC 1918 address range. The format of this field is governed by RFC 4632. Example: 192.168.0.0/25",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://datafusion.googleapis.com//v1beta1/{parent}/instances{?instanceId,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "This resource represents a long-running operation that is the result of a network API call.",
        "**Key properties:**",
        {
          "$ul": [
            "**done**: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
            [
              "**error**: The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
              {
                "$ul": [
                  "**code**: The status code, which should be an enum value of google.rpc.Code.",
                  "**details**: A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                  "**message**: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                ]
              }
            ],
            "**metadata**: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
            "**name**: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
            "**response**: The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
