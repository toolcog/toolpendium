{
  "name": "tasks_tasks_list",
  "description": "Returns all tasks in the specified task list.",
  "parameters": {
    "type": "object",
    "properties": {
      "tasklist": {
        "type": "string",
        "description": "Task list identifier."
      },
      "completedMax": {
        "type": "string",
        "description": "Upper bound for a task's completion date (as a RFC 3339 timestamp) to filter by. Optional. The default is not to filter by completion date."
      },
      "completedMin": {
        "type": "string",
        "description": "Lower bound for a task's completion date (as a RFC 3339 timestamp) to filter by. Optional. The default is not to filter by completion date."
      },
      "dueMax": {
        "type": "string",
        "description": "Upper bound for a task's due date (as a RFC 3339 timestamp) to filter by. Optional. The default is not to filter by due date."
      },
      "dueMin": {
        "type": "string",
        "description": "Lower bound for a task's due date (as a RFC 3339 timestamp) to filter by. Optional. The default is not to filter by due date."
      },
      "maxResults": {
        "type": "integer",
        "description": "Maximum number of tasks returned on one page. Optional. The default is 20 (max allowed: 100)."
      },
      "pageToken": {
        "type": "string",
        "description": "Token specifying the result page to return. Optional."
      },
      "showCompleted": {
        "type": "boolean",
        "description": "Flag indicating whether completed tasks are returned in the result. Optional. The default is True. Note that showHidden must also be True to show tasks completed in first party clients, such as the web UI and Google's mobile apps."
      },
      "showDeleted": {
        "type": "boolean",
        "description": "Flag indicating whether deleted tasks are returned in the result. Optional. The default is False."
      },
      "showHidden": {
        "type": "boolean",
        "description": "Flag indicating whether hidden tasks are returned in the result. Optional. The default is False."
      },
      "updatedMin": {
        "type": "string",
        "description": "Lower bound for a task's last modification time (as a RFC 3339 timestamp) to filter by. Optional. The default is not to filter by last modification time."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      }
    },
    "required": [
      "tasklist"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://tasks.googleapis.com//tasks/v1/lists/{tasklist}/tasks{?completedMax,completedMin,dueMax,dueMin,maxResults,pageToken,showCompleted,showDeleted,showHidden,updatedMin,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**etag**: ETag of the resource.",
            "**items**: Collection of tasks.",
            "**kind**: Type of the resource. This is always \"tasks#tasks\".",
            "**nextPageToken**: Token used to access the next page of this result."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
