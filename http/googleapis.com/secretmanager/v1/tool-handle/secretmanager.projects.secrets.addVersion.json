{
  "name": "secretmanager_projects_secrets_addVersion",
  "description": "Creates a new SecretVersion containing secret data and attaches it to an existing Secret.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The resource name of the Secret to associate with the SecretVersion in the format `projects/*/secrets/*` or `projects/*/locations/*/secrets/*`."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/AddSecretVersionRequest"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "AddSecretVersionRequest": {
        "description": "Request message for SecretManagerService.AddSecretVersion.",
        "properties": {
          "payload": {
            "$ref": "#/$defs/SecretPayload"
          }
        },
        "type": "object"
      },
      "SecretPayload": {
        "description": "A secret payload resource in the Secret Manager API. This contains the sensitive secret payload that is associated with a SecretVersion.",
        "properties": {
          "data": {
            "description": "The secret data. Must be no larger than 64KiB.",
            "format": "byte",
            "type": "string"
          },
          "dataCrc32c": {
            "description": "Optional. If specified, SecretManagerService will verify the integrity of the received data on SecretManagerService.AddSecretVersion calls using the crc32c checksum and store it to include in future SecretManagerService.AccessSecretVersion responses. If a checksum is not provided in the SecretManagerService.AddSecretVersion request, the SecretManagerService will generate and store one for you. The CRC32C value is encoded as a Int64 for compatibility, and can be safely downconverted to uint32 in languages that support this type. https://cloud.google.com/apis/design/design_patterns#integer_types",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://secretmanager.googleapis.com//v1/{parent}:addVersion{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A secret version resource in the Secret Manager API.",
        "**Key properties:**",
        {
          "$ul": [
            "**clientSpecifiedPayloadChecksum**: Output only. True if payload checksum specified in SecretPayload object has been received by SecretManagerService on SecretManagerService.AddSecretVersion.",
            "**createTime**: Output only. The time at which the SecretVersion was created.",
            "**destroyTime**: Output only. The time this SecretVersion was destroyed. Only present if state is DESTROYED.",
            "**etag**: Output only. Etag of the currently stored SecretVersion.",
            "**name**: Output only. The resource name of the SecretVersion in the format `projects/*/secrets/*/versions/*`. SecretVersion IDs in a Secret start at 1 and are incremented for each subsequent version of the secret.",
            [
              "**replicationStatus**: The replication status of a SecretVersion.",
              {
                "$ul": [
                  [
                    "**automatic**: The replication status of a SecretVersion using automatic replication. Only populated if the parent Secret has an automatic replication policy.",
                    {
                      "$ul": [
                        [
                          "**customerManagedEncryption**: Describes the status of customer-managed encryption.",
                          {
                            "$ul": [
                              "**kmsKeyVersionName**: Required. The resource name of the Cloud KMS CryptoKeyVersion used to encrypt the secret payload, in the following format: `projects/*/locations/*/keyRings/*/cryptoKeys/*/versions/*`."
                            ]
                          }
                        ]
                      ]
                    }
                  ],
                  [
                    "**userManaged**: The replication status of a SecretVersion using user-managed replication. Only populated if the parent Secret has a user-managed replication policy.",
                    {
                      "$ul": [
                        "**replicas**: Output only. The list of replica statuses for the SecretVersion."
                      ]
                    }
                  ]
                ]
              }
            ],
            "**state**: Output only. The current state of the SecretVersion."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
