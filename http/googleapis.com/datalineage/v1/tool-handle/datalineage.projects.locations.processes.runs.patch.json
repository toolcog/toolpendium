{
  "name": "datalineage_projects_locations_processes_runs_patch",
  "description": "Updates a run.",
  "parameters": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "Immutable. The resource name of the run. Format: `projects/{project}/locations/{location}/processes/{process}/runs/{run}`. Can be specified or auto-assigned. {run} must be not longer than 200 characters and only contain characters in a set: `a-zA-Z0-9_-:.`"
      },
      "allowMissing": {
        "type": "boolean",
        "description": "If set to true and the run is not found, the request creates it."
      },
      "updateMask": {
        "type": "string",
        "description": "The list of fields to update. Currently not used. The whole message is updated."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleCloudDatacatalogLineageV1Run"
      }
    },
    "required": [
      "name"
    ],
    "$defs": {
      "GoogleCloudDatacatalogLineageV1Run": {
        "description": "A lineage run represents an execution of a process that creates lineage events.",
        "properties": {
          "attributes": {
            "additionalProperties": {},
            "description": "Optional. The attributes of the run. Should only be used for the purpose of non-semantic management (classifying, describing or labeling the run). Up to 100 attributes are allowed.",
            "type": "object"
          },
          "displayName": {
            "description": "Optional. A human-readable name you can set to display in a user interface. Must be not longer than 1024 characters and only contain UTF-8 letters or numbers, spaces or characters like `_-:&.`",
            "type": "string"
          },
          "endTime": {
            "description": "Optional. The timestamp of the end of the run.",
            "format": "google-datetime",
            "type": "string"
          },
          "name": {
            "description": "Immutable. The resource name of the run. Format: `projects/{project}/locations/{location}/processes/{process}/runs/{run}`. Can be specified or auto-assigned. {run} must be not longer than 200 characters and only contain characters in a set: `a-zA-Z0-9_-:.`",
            "type": "string"
          },
          "startTime": {
            "description": "Required. The timestamp of the start of the run.",
            "format": "google-datetime",
            "type": "string"
          },
          "state": {
            "description": "Required. The state of the run.",
            "enum": [
              "UNKNOWN",
              "STARTED",
              "COMPLETED",
              "FAILED",
              "ABORTED"
            ],
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PATCH",
    "url": {
      "$uri": "https://datalineage.googleapis.com//v1/{name}{?allowMissing,updateMask,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A lineage run represents an execution of a process that creates lineage events.",
        "**Key properties:**",
        {
          "$ul": [
            "**attributes**: Optional. The attributes of the run. Should only be used for the purpose of non-semantic management (classifying, describing or labeling the run). Up to 100 attributes are allowed.",
            "**displayName**: Optional. A human-readable name you can set to display in a user interface. Must be not longer than 1024 characters and only contain UTF-8 letters or numbers, spaces or characters like `_-:&.`",
            "**endTime**: Optional. The timestamp of the end of the run.",
            "**name**: Immutable. The resource name of the run. Format: `projects/{project}/locations/{location}/processes/{process}/runs/{run}`. Can be specified or auto-assigned. {run} must be not longer than 200 characters and only contain characters in a set: `a-zA-Z0-9_-:.`",
            "**startTime**: Required. The timestamp of the start of the run.",
            "**state**: Required. The state of the run."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
