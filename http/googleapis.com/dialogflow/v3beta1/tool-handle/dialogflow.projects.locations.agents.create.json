{
  "name": "dialogflow_projects_locations_agents_create",
  "description": "Creates an agent in the specified location. Note: You should always train a flow prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The location to create a agent for. Format: `projects//locations/`."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleCloudDialogflowCxV3beta1Agent"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "GoogleCloudDialogflowCxV3beta1Agent": {
        "description": "Agents are best described as Natural Language Understanding (NLU) modules that transform user requests into actionable data. You can include agents in your app, product, or service to determine user intent and respond to the user in a natural way. After you create an agent, you can add Intents, Entity Types, Flows, Fulfillments, Webhooks, TransitionRouteGroups and so on to manage the conversation flows.",
        "properties": {
          "advancedSettings": {
            "$ref": "#/$defs/GoogleCloudDialogflowCxV3beta1AdvancedSettings"
          },
          "answerFeedbackSettings": {
            "$ref": "#/$defs/GoogleCloudDialogflowCxV3beta1AgentAnswerFeedbackSettings"
          },
          "avatarUri": {
            "description": "The URI of the agent's avatar. Avatars are used throughout the Dialogflow console and in the self-hosted [Web Demo](https://cloud.google.com/dialogflow/docs/integrations/web-demo) integration.",
            "type": "string"
          },
          "defaultLanguageCode": {
            "description": "Required. Immutable. The default language of the agent as a language tag. See [Language Support](https://cloud.google.com/dialogflow/cx/docs/reference/language) for a list of the currently supported language codes. This field cannot be set by the Agents.UpdateAgent method.",
            "type": "string"
          },
          "description": {
            "description": "The description of the agent. The maximum length is 500 characters. If exceeded, the request is rejected.",
            "type": "string"
          },
          "displayName": {
            "description": "Required. The human-readable name of the agent, unique within the location.",
            "type": "string"
          },
          "enableSpellCorrection": {
            "description": "Indicates if automatic spell correction is enabled in detect intent requests.",
            "type": "boolean"
          },
          "enableStackdriverLogging": {
            "deprecated": true,
            "description": "Indicates if stackdriver logging is enabled for the agent. Please use agent.advanced_settings instead.",
            "type": "boolean"
          },
          "genAppBuilderSettings": {
            "$ref": "#/$defs/GoogleCloudDialogflowCxV3beta1AgentGenAppBuilderSettings"
          },
          "gitIntegrationSettings": {
            "$ref": "#/$defs/GoogleCloudDialogflowCxV3beta1AgentGitIntegrationSettings"
          },
          "locked": {
            "description": "Indicates whether the agent is locked for changes. If the agent is locked, modifications to the agent will be rejected except for RestoreAgent.",
            "type": "boolean"
          },
          "name": {
            "description": "The unique identifier of the agent. Required for the Agents.UpdateAgent method. Agents.CreateAgent populates the name automatically. Format: `projects//locations//agents/`.",
            "type": "string"
          },
          "securitySettings": {
            "description": "Name of the SecuritySettings reference for the agent. Format: `projects//locations//securitySettings/`.",
            "type": "string"
          },
          "speechToTextSettings": {
            "$ref": "#/$defs/GoogleCloudDialogflowCxV3beta1SpeechToTextSettings"
          },
          "startFlow": {
            "description": "Immutable. Name of the start flow in this agent. A start flow will be automatically created when the agent is created, and can only be deleted by deleting the agent. Format: `projects//locations//agents//flows/`.",
            "type": "string"
          },
          "supportedLanguageCodes": {
            "description": "The list of all languages supported by the agent (except for the `default_language_code`).",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "textToSpeechSettings": {
            "$ref": "#/$defs/GoogleCloudDialogflowCxV3beta1TextToSpeechSettings"
          },
          "timeZone": {
            "description": "Required. The time zone of the agent from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York, Europe/Paris.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowCxV3beta1AdvancedSettings": {
        "description": "Hierarchical advanced settings for agent/flow/page/fulfillment/parameter. Settings exposed at lower level overrides the settings exposed at higher level. Overriding occurs at the sub-setting level. For example, the playback_interruption_settings at fulfillment level only overrides the playback_interruption_settings at the agent level, leaving other settings at the agent level unchanged. DTMF settings does not override each other. DTMF settings set at different levels define DTMF detections running in parallel. Hierarchy: Agent->Flow->Page->Fulfillment/Parameter.",
        "properties": {
          "audioExportGcsDestination": {
            "$ref": "#/$defs/GoogleCloudDialogflowCxV3beta1GcsDestination"
          },
          "dtmfSettings": {
            "$ref": "#/$defs/GoogleCloudDialogflowCxV3beta1AdvancedSettingsDtmfSettings"
          },
          "loggingSettings": {
            "$ref": "#/$defs/GoogleCloudDialogflowCxV3beta1AdvancedSettingsLoggingSettings"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowCxV3beta1GcsDestination": {
        "description": "Google Cloud Storage location for a Dialogflow operation that writes or exports objects (e.g. exported agent or transcripts) outside of Dialogflow.",
        "properties": {
          "uri": {
            "description": "Required. The Google Cloud Storage URI for the exported objects. A URI is of the form: `gs://bucket/object-name-or-prefix` Whether a full object name, or just a prefix, its usage depends on the Dialogflow operation.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowCxV3beta1AdvancedSettingsDtmfSettings": {
        "description": "Define behaviors for DTMF (dual tone multi frequency).",
        "properties": {
          "enabled": {
            "description": "If true, incoming audio is processed for DTMF (dual tone multi frequency) events. For example, if the caller presses a button on their telephone keypad and DTMF processing is enabled, Dialogflow will detect the event (e.g. a \"3\" was pressed) in the incoming audio and pass the event to the bot to drive business logic (e.g. when 3 is pressed, return the account balance).",
            "type": "boolean"
          },
          "finishDigit": {
            "description": "The digit that terminates a DTMF digit sequence.",
            "type": "string"
          },
          "maxDigits": {
            "description": "Max length of DTMF digits.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowCxV3beta1AdvancedSettingsLoggingSettings": {
        "description": "Define behaviors on logging.",
        "properties": {
          "enableInteractionLogging": {
            "description": "If true, DF Interaction logging is currently enabled.",
            "type": "boolean"
          },
          "enableStackdriverLogging": {
            "description": "If true, StackDriver logging is currently enabled.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowCxV3beta1AgentAnswerFeedbackSettings": {
        "description": "Settings for answer feedback collection.",
        "properties": {
          "enableAnswerFeedback": {
            "description": "Optional. If enabled, end users will be able to provide answer feedback to Dialogflow responses. Feature works only if interaction logging is enabled in the Dialogflow agent.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowCxV3beta1AgentGenAppBuilderSettings": {
        "description": "Settings for Gen App Builder.",
        "properties": {
          "engine": {
            "description": "Required. The full name of the Gen App Builder engine related to this agent if there is one. Format: `projects/{Project ID}/locations/{Location ID}/collections/{Collection ID}/engines/{Engine ID}`",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowCxV3beta1AgentGitIntegrationSettings": {
        "description": "Settings for connecting to Git repository for an agent.",
        "properties": {
          "githubSettings": {
            "$ref": "#/$defs/GoogleCloudDialogflowCxV3beta1AgentGitIntegrationSettingsGithubSettings"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowCxV3beta1AgentGitIntegrationSettingsGithubSettings": {
        "description": "Settings of integration with GitHub.",
        "properties": {
          "accessToken": {
            "description": "The access token used to authenticate the access to the GitHub repository.",
            "type": "string"
          },
          "branches": {
            "description": "A list of branches configured to be used from Dialogflow.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "displayName": {
            "description": "The unique repository display name for the GitHub repository.",
            "type": "string"
          },
          "repositoryUri": {
            "description": "The GitHub repository URI related to the agent.",
            "type": "string"
          },
          "trackingBranch": {
            "description": "The branch of the GitHub repository tracked for this agent.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowCxV3beta1SpeechToTextSettings": {
        "description": "Settings related to speech recognition.",
        "properties": {
          "enableSpeechAdaptation": {
            "description": "Whether to use speech adaptation for speech recognition.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowCxV3beta1TextToSpeechSettings": {
        "description": "Settings related to speech synthesizing.",
        "properties": {
          "synthesizeSpeechConfigs": {
            "additionalProperties": {
              "$ref": "#/$defs/GoogleCloudDialogflowCxV3beta1SynthesizeSpeechConfig"
            },
            "description": "Configuration of how speech should be synthesized, mapping from language (https://cloud.google.com/dialogflow/cx/docs/reference/language) to SynthesizeSpeechConfig. These settings affect: - The [phone gateway](https://cloud.google.com/dialogflow/cx/docs/concept/integration/phone-gateway) synthesize configuration set via Agent.text_to_speech_settings. - How speech is synthesized when invoking session APIs. Agent.text_to_speech_settings only applies if OutputAudioConfig.synthesize_speech_config is not specified.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowCxV3beta1SynthesizeSpeechConfig": {
        "description": "Configuration of how speech should be synthesized.",
        "properties": {
          "effectsProfileId": {
            "description": "Optional. An identifier which selects 'audio effects' profiles that are applied on (post synthesized) text to speech. Effects are applied on top of each other in the order they are given.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "pitch": {
            "description": "Optional. Speaking pitch, in the range [-20.0, 20.0]. 20 means increase 20 semitones from the original pitch. -20 means decrease 20 semitones from the original pitch.",
            "format": "double",
            "type": "number"
          },
          "speakingRate": {
            "description": "Optional. Speaking rate/speed, in the range [0.25, 4.0]. 1.0 is the normal native speed supported by the specific voice. 2.0 is twice as fast, and 0.5 is half as fast. If unset(0.0), defaults to the native 1.0 speed. Any other values < 0.25 or > 4.0 will return an error.",
            "format": "double",
            "type": "number"
          },
          "voice": {
            "$ref": "#/$defs/GoogleCloudDialogflowCxV3beta1VoiceSelectionParams"
          },
          "volumeGainDb": {
            "description": "Optional. Volume gain (in dB) of the normal native volume supported by the specific voice, in the range [-96.0, 16.0]. If unset, or set to a value of 0.0 (dB), will play at normal native signal amplitude. A value of -6.0 (dB) will play at approximately half the amplitude of the normal native signal amplitude. A value of +6.0 (dB) will play at approximately twice the amplitude of the normal native signal amplitude. We strongly recommend not to exceed +10 (dB) as there's usually no effective increase in loudness for any value greater than that.",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowCxV3beta1VoiceSelectionParams": {
        "description": "Description of which voice to use for speech synthesis.",
        "properties": {
          "name": {
            "description": "Optional. The name of the voice. If not set, the service will choose a voice based on the other parameters such as language_code and ssml_gender. For the list of available voices, please refer to [Supported voices and languages](https://cloud.google.com/text-to-speech/docs/voices).",
            "type": "string"
          },
          "ssmlGender": {
            "description": "Optional. The preferred gender of the voice. If not set, the service will choose a voice based on the other parameters such as language_code and name. Note that this is only a preference, not requirement. If a voice of the appropriate gender is not available, the synthesizer should substitute a voice with a different gender rather than failing the request.",
            "enum": [
              "SSML_VOICE_GENDER_UNSPECIFIED",
              "SSML_VOICE_GENDER_MALE",
              "SSML_VOICE_GENDER_FEMALE",
              "SSML_VOICE_GENDER_NEUTRAL"
            ],
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://dialogflow.googleapis.com//v3beta1/{parent}/agents{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Agents are best described as Natural Language Understanding (NLU) modules that transform user requests into actionable data. You can include agents in your app, product, or service to determine user intent and respond to the user in a natural way. After you create an agent, you can add Intents, Entity Types, Flows, Fulfillments, Webhooks, TransitionRouteGroups and so on to manage the conversation flows.",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**advancedSettings**: Hierarchical advanced settings for agent/flow/page/fulfillment/parameter. Settings exposed at lower level overrides the settings exposed at higher level. Overriding occurs at the sub-setting level. For example, the playback_interruption_settings at fulfillment level only overrides the playback_interruption_settings at the agent level, leaving other settings at the agent level unchanged. DTMF settings does not override each other. DTMF settings set at different levels define DTMF detections running in parallel. Hierarchy: Agent->Flow->Page->Fulfillment/Parameter.",
              {
                "$ul": [
                  [
                    "**audioExportGcsDestination**: Google Cloud Storage location for a Dialogflow operation that writes or exports objects (e.g. exported agent or transcripts) outside of Dialogflow.",
                    {
                      "$ul": [
                        "**uri**: Required. The Google Cloud Storage URI for the exported objects. A URI is of the form: `gs://bucket/object-name-or-prefix` Whether a full object name, or just a prefix, its usage depends on the Dialogflow operation."
                      ]
                    }
                  ],
                  [
                    "**dtmfSettings**: Define behaviors for DTMF (dual tone multi frequency).",
                    {
                      "$ul": [
                        "**enabled**: If true, incoming audio is processed for DTMF (dual tone multi frequency) events. For example, if the caller presses a button on their telephone keypad and DTMF processing is enabled, Dialogflow will detect the event (e.g. a \"3\" was pressed) in the incoming audio and pass the event to the bot to drive business logic (e.g. when 3 is pressed, return the account balance).",
                        "**finishDigit**: The digit that terminates a DTMF digit sequence.",
                        "**maxDigits**: Max length of DTMF digits."
                      ]
                    }
                  ],
                  [
                    "**loggingSettings**: Define behaviors on logging.",
                    {
                      "$ul": [
                        "**enableInteractionLogging**: If true, DF Interaction logging is currently enabled.",
                        "**enableStackdriverLogging**: If true, StackDriver logging is currently enabled."
                      ]
                    }
                  ]
                ]
              }
            ],
            [
              "**answerFeedbackSettings**: Settings for answer feedback collection.",
              {
                "$ul": [
                  "**enableAnswerFeedback**: Optional. If enabled, end users will be able to provide answer feedback to Dialogflow responses. Feature works only if interaction logging is enabled in the Dialogflow agent."
                ]
              }
            ],
            "**avatarUri**: The URI of the agent's avatar. Avatars are used throughout the Dialogflow console and in the self-hosted [Web Demo](https://cloud.google.com/dialogflow/docs/integrations/web-demo) integration.",
            "**defaultLanguageCode**: Required. Immutable. The default language of the agent as a language tag. See [Language Support](https://cloud.google.com/dialogflow/cx/docs/reference/language) for a list of the currently supported language codes. This field cannot be set by the Agents.UpdateAgent method.",
            "**description**: The description of the agent. The maximum length is 500 characters. If exceeded, the request is rejected.",
            "**displayName**: Required. The human-readable name of the agent, unique within the location.",
            "**enableSpellCorrection**: Indicates if automatic spell correction is enabled in detect intent requests.",
            "**enableStackdriverLogging**: Indicates if stackdriver logging is enabled for the agent. Please use agent.advanced_settings instead.",
            [
              "**genAppBuilderSettings**: Settings for Gen App Builder.",
              {
                "$ul": [
                  "**engine**: Required. The full name of the Gen App Builder engine related to this agent if there is one. Format: `projects/{Project ID}/locations/{Location ID}/collections/{Collection ID}/engines/{Engine ID}`"
                ]
              }
            ],
            [
              "**gitIntegrationSettings**: Settings for connecting to Git repository for an agent.",
              {
                "$ul": [
                  [
                    "**githubSettings**: Settings of integration with GitHub.",
                    {
                      "$ul": [
                        "**accessToken**: The access token used to authenticate the access to the GitHub repository.",
                        "**branches**: A list of branches configured to be used from Dialogflow.",
                        "**displayName**: The unique repository display name for the GitHub repository.",
                        "**repositoryUri**: The GitHub repository URI related to the agent.",
                        "**trackingBranch**: The branch of the GitHub repository tracked for this agent."
                      ]
                    }
                  ]
                ]
              }
            ],
            "**locked**: Indicates whether the agent is locked for changes. If the agent is locked, modifications to the agent will be rejected except for RestoreAgent.",
            "**name**: The unique identifier of the agent. Required for the Agents.UpdateAgent method. Agents.CreateAgent populates the name automatically. Format: `projects//locations//agents/`.",
            "**securitySettings**: Name of the SecuritySettings reference for the agent. Format: `projects//locations//securitySettings/`.",
            [
              "**speechToTextSettings**: Settings related to speech recognition.",
              {
                "$ul": [
                  "**enableSpeechAdaptation**: Whether to use speech adaptation for speech recognition."
                ]
              }
            ],
            "**startFlow**: Immutable. Name of the start flow in this agent. A start flow will be automatically created when the agent is created, and can only be deleted by deleting the agent. Format: `projects//locations//agents//flows/`.",
            "**supportedLanguageCodes**: The list of all languages supported by the agent (except for the `default_language_code`).",
            [
              "**textToSpeechSettings**: Settings related to speech synthesizing.",
              {
                "$ul": [
                  "**synthesizeSpeechConfigs**: Configuration of how speech should be synthesized, mapping from language (https://cloud.google.com/dialogflow/cx/docs/reference/language) to SynthesizeSpeechConfig. These settings affect: - The [phone gateway](https://cloud.google.com/dialogflow/cx/docs/concept/integration/phone-gateway) synthesize configuration set via Agent.text_to_speech_settings. - How speech is synthesized when invoking session APIs. Agent.text_to_speech_settings only applies if OutputAudioConfig.synthesize_speech_config is not specified."
                ]
              }
            ],
            "**timeZone**: Required. The time zone of the agent from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York, Europe/Paris."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
