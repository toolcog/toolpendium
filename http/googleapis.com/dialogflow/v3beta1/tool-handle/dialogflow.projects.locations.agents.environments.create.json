{
  "name": "dialogflow_projects_locations_agents_environments_create",
  "description": "Creates an Environment in the specified Agent. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: Environment",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The Agent to create an Environment for. Format: `projects//locations//agents/`."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleCloudDialogflowCxV3beta1Environment"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "GoogleCloudDialogflowCxV3beta1Environment": {
        "description": "Represents an environment for an agent. You can create multiple versions of your agent and publish them to separate environments. When you edit an agent, you are editing the draft agent. At any point, you can save the draft agent as an agent version, which is an immutable snapshot of your agent. When you save the draft agent, it is published to the default environment. When you create agent versions, you can publish them to custom environments. You can create a variety of custom environments for testing, development, production, etc.",
        "properties": {
          "description": {
            "description": "The human-readable description of the environment. The maximum length is 500 characters. If exceeded, the request is rejected.",
            "type": "string"
          },
          "displayName": {
            "description": "Required. The human-readable name of the environment (unique in an agent). Limit of 64 characters.",
            "type": "string"
          },
          "name": {
            "description": "The name of the environment. Format: `projects//locations//agents//environments/`.",
            "type": "string"
          },
          "testCasesConfig": {
            "$ref": "#/$defs/GoogleCloudDialogflowCxV3beta1EnvironmentTestCasesConfig"
          },
          "updateTime": {
            "description": "Output only. Update time of this environment.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "versionConfigs": {
            "description": "A list of configurations for flow versions. You should include version configs for all flows that are reachable from `Start Flow` in the agent. Otherwise, an error will be returned.",
            "items": {
              "$ref": "#/$defs/GoogleCloudDialogflowCxV3beta1EnvironmentVersionConfig"
            },
            "type": "array"
          },
          "webhookConfig": {
            "$ref": "#/$defs/GoogleCloudDialogflowCxV3beta1EnvironmentWebhookConfig"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowCxV3beta1EnvironmentTestCasesConfig": {
        "description": "The configuration for continuous tests.",
        "properties": {
          "enableContinuousRun": {
            "description": "Whether to run test cases in TestCasesConfig.test_cases periodically. Default false. If set to true, run once a day.",
            "type": "boolean"
          },
          "enablePredeploymentRun": {
            "description": "Whether to run test cases in TestCasesConfig.test_cases before deploying a flow version to the environment. Default false.",
            "type": "boolean"
          },
          "testCases": {
            "description": "A list of test case names to run. They should be under the same agent. Format of each test case name: `projects//locations/ /agents//testCases/`",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowCxV3beta1EnvironmentVersionConfig": {
        "description": "Configuration for the version.",
        "properties": {
          "version": {
            "description": "Required. Format: projects//locations//agents//flows//versions/.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowCxV3beta1EnvironmentWebhookConfig": {
        "description": "Configuration for webhooks.",
        "properties": {
          "webhookOverrides": {
            "description": "The list of webhooks to override for the agent environment. The webhook must exist in the agent. You can override fields in `generic_web_service` and `service_directory`.",
            "items": {
              "$ref": "#/$defs/GoogleCloudDialogflowCxV3beta1Webhook"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowCxV3beta1Webhook": {
        "description": "Webhooks host the developer's business logic. During a session, webhooks allow the developer to use the data extracted by Dialogflow's natural language processing to generate dynamic responses, validate collected data, or trigger actions on the backend.",
        "properties": {
          "disabled": {
            "description": "Indicates whether the webhook is disabled.",
            "type": "boolean"
          },
          "displayName": {
            "description": "Required. The human-readable name of the webhook, unique within the agent.",
            "type": "string"
          },
          "genericWebService": {
            "$ref": "#/$defs/GoogleCloudDialogflowCxV3beta1WebhookGenericWebService"
          },
          "name": {
            "description": "The unique identifier of the webhook. Required for the Webhooks.UpdateWebhook method. Webhooks.CreateWebhook populates the name automatically. Format: `projects//locations//agents//webhooks/`.",
            "type": "string"
          },
          "serviceDirectory": {
            "$ref": "#/$defs/GoogleCloudDialogflowCxV3beta1WebhookServiceDirectoryConfig"
          },
          "timeout": {
            "description": "Webhook execution timeout. Execution is considered failed if Dialogflow doesn't receive a response from webhook at the end of the timeout period. Defaults to 5 seconds, maximum allowed timeout is 30 seconds.",
            "format": "google-duration",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowCxV3beta1WebhookGenericWebService": {
        "description": "Represents configuration for a generic web service.",
        "properties": {
          "allowedCaCerts": {
            "description": "Optional. Specifies a list of allowed custom CA certificates (in DER format) for HTTPS verification. This overrides the default SSL trust store. If this is empty or unspecified, Dialogflow will use Google's default trust store to verify certificates. N.B. Make sure the HTTPS server certificates are signed with \"subject alt name\". For instance a certificate can be self-signed using the following command, ``` openssl x509 -req -days 200 -in example.com.csr \\ -signkey example.com.key \\ -out example.com.crt \\ -extfile <(printf \"\\nsubjectAltName='DNS:www.example.com'\") ```",
            "items": {
              "format": "byte",
              "type": "string"
            },
            "type": "array"
          },
          "httpMethod": {
            "description": "Optional. HTTP method for the flexible webhook calls. Standard webhook always uses POST.",
            "enum": [
              "HTTP_METHOD_UNSPECIFIED",
              "POST",
              "GET",
              "HEAD",
              "PUT",
              "DELETE",
              "PATCH",
              "OPTIONS"
            ],
            "type": "string"
          },
          "parameterMapping": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Optional. Maps the values extracted from specific fields of the flexible webhook response into session parameters. - Key: session parameter name - Value: field path in the webhook response",
            "type": "object"
          },
          "password": {
            "deprecated": true,
            "description": "The password for HTTP Basic authentication.",
            "type": "string"
          },
          "requestBody": {
            "description": "Optional. Defines a custom JSON object as request body to send to flexible webhook.",
            "type": "string"
          },
          "requestHeaders": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The HTTP request headers to send together with webhook requests.",
            "type": "object"
          },
          "uri": {
            "description": "Required. The webhook URI for receiving POST requests. It must use https protocol.",
            "type": "string"
          },
          "username": {
            "deprecated": true,
            "description": "The user name for HTTP Basic authentication.",
            "type": "string"
          },
          "webhookType": {
            "description": "Optional. Type of the webhook.",
            "enum": [
              "WEBHOOK_TYPE_UNSPECIFIED",
              "STANDARD",
              "FLEXIBLE"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowCxV3beta1WebhookServiceDirectoryConfig": {
        "description": "Represents configuration for a [Service Directory](https://cloud.google.com/service-directory) service.",
        "properties": {
          "genericWebService": {
            "$ref": "#/$defs/GoogleCloudDialogflowCxV3beta1WebhookGenericWebService"
          },
          "service": {
            "description": "Required. The name of [Service Directory](https://cloud.google.com/service-directory) service. Format: `projects//locations//namespaces//services/`. `Location ID` of the service directory must be the same as the location of the agent.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://dialogflow.googleapis.com//v3beta1/{parent}/environments{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "This resource represents a long-running operation that is the result of a network API call.",
        "**Key properties:**",
        {
          "$ul": [
            "**done**: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
            [
              "**error**: The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
              {
                "$ul": [
                  "**code**: The status code, which should be an enum value of google.rpc.Code.",
                  "**details**: A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                  "**message**: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                ]
              }
            ],
            "**metadata**: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
            "**name**: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
            "**response**: The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
