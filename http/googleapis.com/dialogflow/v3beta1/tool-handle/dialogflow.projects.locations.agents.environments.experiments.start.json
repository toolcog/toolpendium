{
  "name": "dialogflow_projects_locations_agents_environments_experiments_start",
  "description": "Starts the specified Experiment. This rpc only changes the state of experiment from PENDING to RUNNING.",
  "parameters": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "Required. Resource name of the experiment to start. Format: `projects//locations//agents//environments//experiments/`."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleCloudDialogflowCxV3beta1StartExperimentRequest"
      }
    },
    "required": [
      "name"
    ],
    "$defs": {
      "GoogleCloudDialogflowCxV3beta1StartExperimentRequest": {
        "description": "The request message for Experiments.StartExperiment.",
        "properties": {},
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://dialogflow.googleapis.com//v3beta1/{name}:start{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Represents an experiment in an environment.",
        "**Key properties:**",
        {
          "$ul": [
            "**createTime**: Creation time of this experiment.",
            [
              "**definition**: Definition of the experiment.",
              {
                "$ul": [
                  "**condition**: The condition defines which subset of sessions are selected for this experiment. If not specified, all sessions are eligible. E.g. \"query_input.language_code=en\" See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).",
                  [
                    "**versionVariants**: A list of flow version variants.",
                    {
                      "$ul": [
                        "**variants**: A list of flow version variants."
                      ]
                    }
                  ]
                ]
              }
            ],
            "**description**: The human-readable description of the experiment.",
            "**displayName**: Required. The human-readable name of the experiment (unique in an environment). Limit of 64 characters.",
            "**endTime**: End time of this experiment.",
            "**experimentLength**: Maximum number of days to run the experiment. If auto-rollout is not enabled, default value and maximum will be 30 days. If auto-rollout is enabled, default value and maximum will be 6 days.",
            "**lastUpdateTime**: Last update time of this experiment.",
            "**name**: The name of the experiment. Format: projects//locations//agents//environments//experiments/..",
            [
              "**result**: The inference result which includes an objective metric to optimize and the confidence interval.",
              {
                "$ul": [
                  "**lastUpdateTime**: The last time the experiment's stats data was updated. Will have default value if stats have never been computed for this experiment.",
                  "**versionMetrics**: Version variants and metrics."
                ]
              }
            ],
            [
              "**rolloutConfig**: The configuration for auto rollout.",
              {
                "$ul": [
                  "**failureCondition**: The conditions that are used to evaluate the failure of a rollout step. If not specified, no rollout steps will fail. E.g. \"containment_rate < 10% OR average_turn_count < 3\". See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).",
                  "**rolloutCondition**: The conditions that are used to evaluate the success of a rollout step. If not specified, all rollout steps will proceed to the next one unless failure conditions are met. E.g. \"containment_rate > 60% AND callback_rate < 20%\". See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).",
                  "**rolloutSteps**: Steps to roll out a flow version. Steps should be sorted by percentage in ascending order."
                ]
              }
            ],
            "**rolloutFailureReason**: The reason why rollout has failed. Should only be set when state is ROLLOUT_FAILED.",
            [
              "**rolloutState**: State of the auto-rollout process.",
              {
                "$ul": [
                  "**startTime**: Start time of the current step.",
                  "**step**: Display name of the current auto rollout step.",
                  "**stepIndex**: Index of the current step in the auto rollout steps list."
                ]
              }
            ],
            "**startTime**: Start time of this experiment.",
            "**state**: The current state of the experiment. Transition triggered by Experiments.StartExperiment: DRAFT->RUNNING. Transition triggered by Experiments.CancelExperiment: DRAFT->DONE or RUNNING->DONE.",
            "**variantsHistory**: The history of updates to the experiment variants."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
