{
  "name": "dialogflow_projects_locations_conversations_messages_batchCreate",
  "description": "Batch ingests messages to conversation. Customers can use this RPC to ingest historical messages to conversation.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. Resource identifier of the conversation to create message. Format: `projects//locations//conversations/`."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleCloudDialogflowV2beta1BatchCreateMessagesRequest"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "GoogleCloudDialogflowV2beta1BatchCreateMessagesRequest": {
        "description": "The request message for Conversations.BatchCreateMessagesRequest.",
        "properties": {
          "requests": {
            "description": "Required. A maximum of 300 messages can be created in a batch. CreateMessageRequest.message.send_time is required. All created messages will have identical Message.create_time.",
            "items": {
              "$ref": "#/$defs/GoogleCloudDialogflowV2beta1CreateMessageRequest"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowV2beta1CreateMessageRequest": {
        "description": "The request message to create one Message. Currently it is only used in BatchCreateMessagesRequest.",
        "properties": {
          "message": {
            "$ref": "#/$defs/GoogleCloudDialogflowV2beta1Message"
          },
          "parent": {
            "description": "Required. Resource identifier of the conversation to create message. Format: `projects//locations//conversations/`.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowV2beta1Message": {
        "description": "Represents a message posted into a conversation.",
        "properties": {
          "content": {
            "description": "Required. The message content.",
            "type": "string"
          },
          "createTime": {
            "description": "Output only. The time when the message was created in Contact Center AI.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "languageCode": {
            "description": "Optional. The message language. This should be a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: \"en-US\".",
            "type": "string"
          },
          "messageAnnotation": {
            "$ref": "#/$defs/GoogleCloudDialogflowV2beta1MessageAnnotation"
          },
          "name": {
            "description": "Optional. The unique identifier of the message. Format: `projects//locations//conversations//messages/`.",
            "type": "string"
          },
          "participant": {
            "description": "Output only. The participant that sends this message.",
            "readOnly": true,
            "type": "string"
          },
          "participantRole": {
            "description": "Output only. The role of the participant.",
            "enum": [
              "ROLE_UNSPECIFIED",
              "HUMAN_AGENT",
              "AUTOMATED_AGENT",
              "END_USER"
            ],
            "readOnly": true,
            "type": "string"
          },
          "sendTime": {
            "description": "Optional. The time when the message was sent.",
            "format": "google-datetime",
            "type": "string"
          },
          "sentimentAnalysis": {
            "$ref": "#/$defs/GoogleCloudDialogflowV2beta1SentimentAnalysisResult"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowV2beta1MessageAnnotation": {
        "description": "Represents the result of annotation for the message.",
        "properties": {
          "containEntities": {
            "description": "Required. Indicates whether the text message contains entities.",
            "type": "boolean"
          },
          "parts": {
            "description": "Optional. The collection of annotated message parts ordered by their position in the message. You can recover the annotated message by concatenating [AnnotatedMessagePart.text].",
            "items": {
              "$ref": "#/$defs/GoogleCloudDialogflowV2beta1AnnotatedMessagePart"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowV2beta1AnnotatedMessagePart": {
        "description": "Represents a part of a message possibly annotated with an entity. The part can be an entity or purely a part of the message between two entities or message start/end.",
        "properties": {
          "entityType": {
            "description": "Optional. The [Dialogflow system entity type](https://cloud.google.com/dialogflow/docs/reference/system-entities) of this message part. If this is empty, Dialogflow could not annotate the phrase part with a system entity.",
            "type": "string"
          },
          "formattedValue": {
            "description": "Optional. The [Dialogflow system entity formatted value ](https://cloud.google.com/dialogflow/docs/reference/system-entities) of this message part. For example for a system entity of type `@sys.unit-currency`, this may contain: { \"amount\": 5, \"currency\": \"USD\" } "
          },
          "text": {
            "description": "Required. A part of a message possibly annotated with an entity.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowV2beta1SentimentAnalysisResult": {
        "description": "The result of sentiment analysis. Sentiment analysis inspects user input and identifies the prevailing subjective opinion, especially to determine a user's attitude as positive, negative, or neutral. For Participants.DetectIntent, it needs to be configured in DetectIntentRequest.query_params. For Participants.StreamingDetectIntent, it needs to be configured in StreamingDetectIntentRequest.query_params. And for Participants.AnalyzeContent and Participants.StreamingAnalyzeContent, it needs to be configured in ConversationProfile.human_agent_assistant_config",
        "properties": {
          "queryTextSentiment": {
            "$ref": "#/$defs/GoogleCloudDialogflowV2beta1Sentiment"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowV2beta1Sentiment": {
        "description": "The sentiment, such as positive/negative feeling or association, for a unit of analysis, such as the query text. See: https://cloud.google.com/natural-language/docs/basics#interpreting_sentiment_analysis_values for how to interpret the result.",
        "properties": {
          "magnitude": {
            "description": "A non-negative number in the [0, +inf) range, which represents the absolute magnitude of sentiment, regardless of score (positive or negative).",
            "format": "float",
            "type": "number"
          },
          "score": {
            "description": "Sentiment score between -1.0 (negative sentiment) and 1.0 (positive sentiment).",
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://dialogflow.googleapis.com//v2beta1/{parent}/messages:batchCreate{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The request message for Conversations.BatchCreateMessagesResponse.",
        "**Key properties:**",
        {
          "$ul": [
            "**messages**: Messages created."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
