{
  "name": "dialogflow_projects_suggestions_generateStatelessSummary",
  "description": "Generates and returns a summary for a conversation that does not have a resource created for it.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The parent resource to charge for the Summary's generation. Format: `projects//locations/`."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleCloudDialogflowV2GenerateStatelessSummaryRequest"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "GoogleCloudDialogflowV2GenerateStatelessSummaryRequest": {
        "description": "The request message for Conversations.GenerateStatelessSummary.",
        "properties": {
          "conversationProfile": {
            "$ref": "#/$defs/GoogleCloudDialogflowV2ConversationProfile"
          },
          "latestMessage": {
            "description": "The name of the latest conversation message used as context for generating a Summary. If empty, the latest message of the conversation will be used. The format is specific to the user and the names of the messages provided.",
            "type": "string"
          },
          "maxContextSize": {
            "description": "Max number of messages prior to and including [latest_message] to use as context when compiling the suggestion. By default 500 and at most 1000.",
            "format": "int32",
            "type": "integer"
          },
          "statelessConversation": {
            "$ref": "#/$defs/GoogleCloudDialogflowV2GenerateStatelessSummaryRequestMinimalConversation"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowV2ConversationProfile": {
        "description": "Defines the services to connect to incoming Dialogflow conversations.",
        "properties": {
          "automatedAgentConfig": {
            "$ref": "#/$defs/GoogleCloudDialogflowV2AutomatedAgentConfig"
          },
          "createTime": {
            "description": "Output only. Create time of the conversation profile.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "Required. Human readable name for this profile. Max length 1024 bytes.",
            "type": "string"
          },
          "humanAgentAssistantConfig": {
            "$ref": "#/$defs/GoogleCloudDialogflowV2HumanAgentAssistantConfig"
          },
          "humanAgentHandoffConfig": {
            "$ref": "#/$defs/GoogleCloudDialogflowV2HumanAgentHandoffConfig"
          },
          "languageCode": {
            "description": "Language code for the conversation profile. If not specified, the language is en-US. Language at ConversationProfile should be set for all non en-US languages. This should be a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: \"en-US\".",
            "type": "string"
          },
          "loggingConfig": {
            "$ref": "#/$defs/GoogleCloudDialogflowV2LoggingConfig"
          },
          "name": {
            "description": "The unique identifier of this conversation profile. Format: `projects//locations//conversationProfiles/`.",
            "type": "string"
          },
          "newMessageEventNotificationConfig": {
            "$ref": "#/$defs/GoogleCloudDialogflowV2NotificationConfig"
          },
          "notificationConfig": {
            "$ref": "#/$defs/GoogleCloudDialogflowV2NotificationConfig"
          },
          "securitySettings": {
            "description": "Name of the CX SecuritySettings reference for the agent. Format: `projects//locations//securitySettings/`.",
            "type": "string"
          },
          "sttConfig": {
            "$ref": "#/$defs/GoogleCloudDialogflowV2SpeechToTextConfig"
          },
          "timeZone": {
            "description": "The time zone of this conversational profile from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York, Europe/Paris. Defaults to America/New_York.",
            "type": "string"
          },
          "ttsConfig": {
            "$ref": "#/$defs/GoogleCloudDialogflowV2SynthesizeSpeechConfig"
          },
          "updateTime": {
            "description": "Output only. Update time of the conversation profile.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowV2AutomatedAgentConfig": {
        "description": "Defines the Automated Agent to connect to a conversation.",
        "properties": {
          "agent": {
            "description": "Required. ID of the Dialogflow agent environment to use. This project needs to either be the same project as the conversation or you need to grant `service-@gcp-sa-dialogflow.iam.gserviceaccount.com` the `Dialogflow API Service Agent` role in this project. - For ES agents, use format: `projects//locations//agent/environments/`. If environment is not specified, the default `draft` environment is used. Refer to [DetectIntentRequest](/dialogflow/docs/reference/rpc/google.cloud.dialogflow.v2#google.cloud.dialogflow.v2.DetectIntentRequest) for more details. - For CX agents, use format `projects//locations//agents//environments/`. If environment is not specified, the default `draft` environment is used.",
            "type": "string"
          },
          "sessionTtl": {
            "description": "Optional. Configure lifetime of the Dialogflow session. By default, a Dialogflow CX session remains active and its data is stored for 30 minutes after the last request is sent for the session. This value should be no longer than 1 day.",
            "format": "google-duration",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowV2HumanAgentAssistantConfig": {
        "description": "Defines the Human Agent Assist to connect to a conversation.",
        "properties": {
          "endUserSuggestionConfig": {
            "$ref": "#/$defs/GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionConfig"
          },
          "humanAgentSuggestionConfig": {
            "$ref": "#/$defs/GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionConfig"
          },
          "messageAnalysisConfig": {
            "$ref": "#/$defs/GoogleCloudDialogflowV2HumanAgentAssistantConfigMessageAnalysisConfig"
          },
          "notificationConfig": {
            "$ref": "#/$defs/GoogleCloudDialogflowV2NotificationConfig"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionConfig": {
        "description": "Detail human agent assistant config.",
        "properties": {
          "featureConfigs": {
            "description": "Configuration of different suggestion features. One feature can have only one config.",
            "items": {
              "$ref": "#/$defs/GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionFeatureConfig"
            },
            "type": "array"
          },
          "groupSuggestionResponses": {
            "description": "If `group_suggestion_responses` is false, and there are multiple `feature_configs` in `event based suggestion` or StreamingAnalyzeContent, we will try to deliver suggestions to customers as soon as we get new suggestion. Different type of suggestions based on the same context will be in separate Pub/Sub event or `StreamingAnalyzeContentResponse`. If `group_suggestion_responses` set to true. All the suggestions to the same participant based on the same context will be grouped into a single Pub/Sub event or StreamingAnalyzeContentResponse.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionFeatureConfig": {
        "description": "Config for suggestion features.",
        "properties": {
          "conversationModelConfig": {
            "$ref": "#/$defs/GoogleCloudDialogflowV2HumanAgentAssistantConfigConversationModelConfig"
          },
          "conversationProcessConfig": {
            "$ref": "#/$defs/GoogleCloudDialogflowV2HumanAgentAssistantConfigConversationProcessConfig"
          },
          "disableAgentQueryLogging": {
            "description": "Optional. Disable the logging of search queries sent by human agents. It can prevent those queries from being stored at answer records. Supported features: KNOWLEDGE_SEARCH.",
            "type": "boolean"
          },
          "enableConversationAugmentedQuery": {
            "description": "Optional. Enable including conversation context during query answer generation. Supported features: KNOWLEDGE_SEARCH.",
            "type": "boolean"
          },
          "enableEventBasedSuggestion": {
            "description": "Automatically iterates all participants and tries to compile suggestions. Supported features: ARTICLE_SUGGESTION, FAQ, DIALOGFLOW_ASSIST, KNOWLEDGE_ASSIST.",
            "type": "boolean"
          },
          "queryConfig": {
            "$ref": "#/$defs/GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfig"
          },
          "suggestionFeature": {
            "$ref": "#/$defs/GoogleCloudDialogflowV2SuggestionFeature"
          },
          "suggestionTriggerSettings": {
            "$ref": "#/$defs/GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionTriggerSettings"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowV2HumanAgentAssistantConfigConversationModelConfig": {
        "description": "Custom conversation models used in agent assist feature. Supported feature: ARTICLE_SUGGESTION, SMART_COMPOSE, SMART_REPLY, CONVERSATION_SUMMARIZATION.",
        "properties": {
          "baselineModelVersion": {
            "description": "Version of current baseline model. It will be ignored if model is set. Valid versions are: Article Suggestion baseline model: - 0.9 - 1.0 (default) Summarization baseline model: - 1.0",
            "type": "string"
          },
          "model": {
            "description": "Conversation model resource name. Format: `projects//conversationModels/`.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowV2HumanAgentAssistantConfigConversationProcessConfig": {
        "description": "Config to process conversation.",
        "properties": {
          "recentSentencesCount": {
            "description": "Number of recent non-small-talk sentences to use as context for article and FAQ suggestion",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfig": {
        "description": "Config for suggestion query.",
        "properties": {
          "confidenceThreshold": {
            "description": "Confidence threshold of query result. Agent Assist gives each suggestion a score in the range [0.0, 1.0], based on the relevance between the suggestion and the current conversation context. A score of 0.0 has no relevance, while a score of 1.0 has high relevance. Only suggestions with a score greater than or equal to the value of this field are included in the results. For a baseline model (the default), the recommended value is in the range [0.05, 0.1]. For a custom model, there is no recommended value. Tune this value by starting from a very low value and slowly increasing until you have desired results. If this field is not set, it defaults to 0.0, which means that all suggestions are returned. Supported features: ARTICLE_SUGGESTION, FAQ, SMART_REPLY, SMART_COMPOSE, KNOWLEDGE_SEARCH, KNOWLEDGE_ASSIST, ENTITY_EXTRACTION.",
            "format": "float",
            "type": "number"
          },
          "contextFilterSettings": {
            "$ref": "#/$defs/GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigContextFilterSettings"
          },
          "dialogflowQuerySource": {
            "$ref": "#/$defs/GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigDialogflowQuerySource"
          },
          "documentQuerySource": {
            "$ref": "#/$defs/GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigDocumentQuerySource"
          },
          "knowledgeBaseQuerySource": {
            "$ref": "#/$defs/GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigKnowledgeBaseQuerySource"
          },
          "maxResults": {
            "description": "Maximum number of results to return. Currently, if unset, defaults to 10. And the max number is 20.",
            "format": "int32",
            "type": "integer"
          },
          "sections": {
            "$ref": "#/$defs/GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigSections"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigContextFilterSettings": {
        "description": "Settings that determine how to filter recent conversation context when generating suggestions.",
        "properties": {
          "dropHandoffMessages": {
            "description": "If set to true, the last message from virtual agent (hand off message) and the message before it (trigger message of hand off) are dropped.",
            "type": "boolean"
          },
          "dropIvrMessages": {
            "description": "If set to true, all messages from ivr stage are dropped.",
            "type": "boolean"
          },
          "dropVirtualAgentMessages": {
            "description": "If set to true, all messages from virtual agent are dropped.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigDialogflowQuerySource": {
        "description": "Dialogflow source setting. Supported feature: DIALOGFLOW_ASSIST.",
        "properties": {
          "agent": {
            "description": "Required. The name of a Dialogflow virtual agent used for end user side intent detection and suggestion. Format: `projects//locations//agent`. When multiple agents are allowed in the same Dialogflow project.",
            "type": "string"
          },
          "humanAgentSideConfig": {
            "$ref": "#/$defs/GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigDialogflowQuerySourceHumanAgentSideConfig"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigDialogflowQuerySourceHumanAgentSideConfig": {
        "description": "The configuration used for human agent side Dialogflow assist suggestion.",
        "properties": {
          "agent": {
            "description": "Optional. The name of a dialogflow virtual agent used for intent detection and suggestion triggered by human agent. Format: `projects//locations//agent`.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigDocumentQuerySource": {
        "description": "Document source settings. Supported features: SMART_REPLY, SMART_COMPOSE.",
        "properties": {
          "documents": {
            "description": "Required. Knowledge documents to query from. Format: `projects//locations//knowledgeBases//documents/`. Currently, at most 5 documents are supported.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigKnowledgeBaseQuerySource": {
        "description": "Knowledge base source settings. Supported features: ARTICLE_SUGGESTION, FAQ.",
        "properties": {
          "knowledgeBases": {
            "description": "Required. Knowledge bases to query. Format: `projects//locations//knowledgeBases/`. Currently, at most 5 knowledge bases are supported.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigSections": {
        "description": "Custom sections to return when requesting a summary of a conversation. This is only supported when `baseline_model_version` == '2.0'. Supported features: CONVERSATION_SUMMARIZATION, CONVERSATION_SUMMARIZATION_VOICE.",
        "properties": {
          "sectionTypes": {
            "description": "The selected sections chosen to return when requesting a summary of a conversation. A duplicate selected section will be treated as a single selected section. If section types are not provided, the default will be {SITUATION, ACTION, RESULT}.",
            "items": {
              "enum": [
                "SECTION_TYPE_UNSPECIFIED",
                "SITUATION",
                "ACTION",
                "RESOLUTION",
                "REASON_FOR_CANCELLATION",
                "CUSTOMER_SATISFACTION",
                "ENTITIES"
              ],
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowV2SuggestionFeature": {
        "description": "The type of Human Agent Assistant API suggestion to perform, and the maximum number of results to return for that type. Multiple `Feature` objects can be specified in the `features` list.",
        "properties": {
          "type": {
            "description": "Type of Human Agent Assistant API feature to request.",
            "enum": [
              "TYPE_UNSPECIFIED",
              "ARTICLE_SUGGESTION",
              "FAQ",
              "SMART_REPLY",
              "KNOWLEDGE_SEARCH"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionTriggerSettings": {
        "description": "Settings of suggestion trigger.",
        "properties": {
          "noSmalltalk": {
            "description": "Do not trigger if last utterance is small talk.",
            "type": "boolean"
          },
          "onlyEndUser": {
            "description": "Only trigger suggestion if participant role of last utterance is END_USER.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowV2HumanAgentAssistantConfigMessageAnalysisConfig": {
        "description": "Configuration for analyses to run on each conversation message.",
        "properties": {
          "enableEntityExtraction": {
            "description": "Enable entity extraction in conversation messages on [agent assist stage](https://cloud.google.com/dialogflow/priv/docs/contact-center/basics#stages). If unspecified, defaults to false. Currently, this feature is not general available, please contact Google to get access.",
            "type": "boolean"
          },
          "enableSentimentAnalysis": {
            "description": "Enable sentiment analysis in conversation messages on [agent assist stage](https://cloud.google.com/dialogflow/priv/docs/contact-center/basics#stages). If unspecified, defaults to false. Sentiment analysis inspects user input and identifies the prevailing subjective opinion, especially to determine a user's attitude as positive, negative, or neutral: https://cloud.google.com/natural-language/docs/basics#sentiment_analysis For Participants.StreamingAnalyzeContent method, result will be in StreamingAnalyzeContentResponse.message.SentimentAnalysisResult. For Participants.AnalyzeContent method, result will be in AnalyzeContentResponse.message.SentimentAnalysisResult For Conversations.ListMessages method, result will be in ListMessagesResponse.messages.SentimentAnalysisResult If Pub/Sub notification is configured, result will be in ConversationEvent.new_message_payload.SentimentAnalysisResult.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowV2NotificationConfig": {
        "description": "Defines notification behavior.",
        "properties": {
          "messageFormat": {
            "description": "Format of message.",
            "enum": [
              "MESSAGE_FORMAT_UNSPECIFIED",
              "PROTO",
              "JSON"
            ],
            "type": "string"
          },
          "topic": {
            "description": "Name of the Pub/Sub topic to publish conversation events like CONVERSATION_STARTED as serialized ConversationEvent protos. For telephony integration to receive notification, make sure either this topic is in the same project as the conversation or you grant `service-@gcp-sa-dialogflow.iam.gserviceaccount.com` the `Dialogflow Service Agent` role in the topic project. For chat integration to receive notification, make sure API caller has been granted the `Dialogflow Service Agent` role for the topic. Format: `projects//locations//topics/`.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowV2HumanAgentHandoffConfig": {
        "description": "Defines the hand off to a live agent, typically on which external agent service provider to connect to a conversation. Currently, this feature is not general available, please contact Google to get access.",
        "properties": {
          "livePersonConfig": {
            "$ref": "#/$defs/GoogleCloudDialogflowV2HumanAgentHandoffConfigLivePersonConfig"
          },
          "salesforceLiveAgentConfig": {
            "$ref": "#/$defs/GoogleCloudDialogflowV2HumanAgentHandoffConfigSalesforceLiveAgentConfig"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowV2HumanAgentHandoffConfigLivePersonConfig": {
        "description": "Configuration specific to LivePerson (https://www.liveperson.com).",
        "properties": {
          "accountNumber": {
            "description": "Required. Account number of the LivePerson account to connect. This is the account number you input at the login page.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowV2HumanAgentHandoffConfigSalesforceLiveAgentConfig": {
        "description": "Configuration specific to Salesforce Live Agent.",
        "properties": {
          "buttonId": {
            "description": "Required. Live Agent chat button ID.",
            "type": "string"
          },
          "deploymentId": {
            "description": "Required. Live Agent deployment ID.",
            "type": "string"
          },
          "endpointDomain": {
            "description": "Required. Domain of the Live Agent endpoint for this agent. You can find the endpoint URL in the `Live Agent settings` page. For example if URL has the form https://d.la4-c2-phx.salesforceliveagent.com/..., you should fill in d.la4-c2-phx.salesforceliveagent.com.",
            "type": "string"
          },
          "organizationId": {
            "description": "Required. The organization ID of the Salesforce account.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowV2LoggingConfig": {
        "description": "Defines logging behavior for conversation lifecycle events.",
        "properties": {
          "enableStackdriverLogging": {
            "description": "Whether to log conversation events like CONVERSATION_STARTED to Stackdriver in the conversation project as JSON format ConversationEvent protos.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowV2SpeechToTextConfig": {
        "description": "Configures speech transcription for ConversationProfile.",
        "properties": {
          "model": {
            "description": "Which Speech model to select. Select the model best suited to your domain to get best results. If a model is not explicitly specified, then Dialogflow auto-selects a model based on other parameters in the SpeechToTextConfig and Agent settings. If enhanced speech model is enabled for the agent and an enhanced version of the specified model for the language does not exist, then the speech is recognized using the standard version of the specified model. Refer to [Cloud Speech API documentation](https://cloud.google.com/speech-to-text/docs/basics#select-model) for more details. If you specify a model, the following models typically have the best performance: - phone_call (best for Agent Assist and telephony) - latest_short (best for Dialogflow non-telephony) - command_and_search Leave this field unspecified to use [Agent Speech settings](https://cloud.google.com/dialogflow/cx/docs/concept/agent#settings-speech) for model selection.",
            "type": "string"
          },
          "speechModelVariant": {
            "description": "The speech model used in speech to text. `SPEECH_MODEL_VARIANT_UNSPECIFIED`, `USE_BEST_AVAILABLE` will be treated as `USE_ENHANCED`. It can be overridden in AnalyzeContentRequest and StreamingAnalyzeContentRequest request. If enhanced model variant is specified and an enhanced version of the specified model for the language does not exist, then it would emit an error.",
            "enum": [
              "SPEECH_MODEL_VARIANT_UNSPECIFIED",
              "USE_BEST_AVAILABLE",
              "USE_STANDARD",
              "USE_ENHANCED"
            ],
            "type": "string"
          },
          "useTimeoutBasedEndpointing": {
            "description": "Use timeout based endpointing, interpreting endpointer sensitivy as seconds of timeout value.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowV2SynthesizeSpeechConfig": {
        "description": "Configuration of how speech should be synthesized.",
        "properties": {
          "effectsProfileId": {
            "description": "Optional. An identifier which selects 'audio effects' profiles that are applied on (post synthesized) text to speech. Effects are applied on top of each other in the order they are given.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "pitch": {
            "description": "Optional. Speaking pitch, in the range [-20.0, 20.0]. 20 means increase 20 semitones from the original pitch. -20 means decrease 20 semitones from the original pitch.",
            "format": "double",
            "type": "number"
          },
          "speakingRate": {
            "description": "Optional. Speaking rate/speed, in the range [0.25, 4.0]. 1.0 is the normal native speed supported by the specific voice. 2.0 is twice as fast, and 0.5 is half as fast. If unset(0.0), defaults to the native 1.0 speed. Any other values < 0.25 or > 4.0 will return an error.",
            "format": "double",
            "type": "number"
          },
          "voice": {
            "$ref": "#/$defs/GoogleCloudDialogflowV2VoiceSelectionParams"
          },
          "volumeGainDb": {
            "description": "Optional. Volume gain (in dB) of the normal native volume supported by the specific voice, in the range [-96.0, 16.0]. If unset, or set to a value of 0.0 (dB), will play at normal native signal amplitude. A value of -6.0 (dB) will play at approximately half the amplitude of the normal native signal amplitude. A value of +6.0 (dB) will play at approximately twice the amplitude of the normal native signal amplitude. We strongly recommend not to exceed +10 (dB) as there's usually no effective increase in loudness for any value greater than that.",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowV2VoiceSelectionParams": {
        "description": "Description of which voice to use for speech synthesis.",
        "properties": {
          "name": {
            "description": "Optional. The name of the voice. If not set, the service will choose a voice based on the other parameters such as language_code and ssml_gender.",
            "type": "string"
          },
          "ssmlGender": {
            "description": "Optional. The preferred gender of the voice. If not set, the service will choose a voice based on the other parameters such as language_code and name. Note that this is only a preference, not requirement. If a voice of the appropriate gender is not available, the synthesizer should substitute a voice with a different gender rather than failing the request.",
            "enum": [
              "SSML_VOICE_GENDER_UNSPECIFIED",
              "SSML_VOICE_GENDER_MALE",
              "SSML_VOICE_GENDER_FEMALE",
              "SSML_VOICE_GENDER_NEUTRAL"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowV2GenerateStatelessSummaryRequestMinimalConversation": {
        "description": "The minimum amount of information required to generate a Summary without having a Conversation resource created.",
        "properties": {
          "messages": {
            "description": "Required. The messages that the Summary will be generated from. It is expected that this message content is already redacted and does not contain any PII. Required fields: {content, language_code, participant, participant_role} Optional fields: {send_time} If send_time is not provided, then the messages must be provided in chronological order.",
            "items": {
              "$ref": "#/$defs/GoogleCloudDialogflowV2Message"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowV2Message": {
        "description": "Represents a message posted into a conversation.",
        "properties": {
          "content": {
            "description": "Required. The message content.",
            "type": "string"
          },
          "createTime": {
            "description": "Output only. The time when the message was created in Contact Center AI.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "languageCode": {
            "description": "Optional. The message language. This should be a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: \"en-US\".",
            "type": "string"
          },
          "messageAnnotation": {
            "$ref": "#/$defs/GoogleCloudDialogflowV2MessageAnnotation"
          },
          "name": {
            "description": "Optional. The unique identifier of the message. Format: `projects//locations//conversations//messages/`.",
            "type": "string"
          },
          "participant": {
            "description": "Output only. The participant that sends this message.",
            "readOnly": true,
            "type": "string"
          },
          "participantRole": {
            "description": "Output only. The role of the participant.",
            "enum": [
              "ROLE_UNSPECIFIED",
              "HUMAN_AGENT",
              "AUTOMATED_AGENT",
              "END_USER"
            ],
            "readOnly": true,
            "type": "string"
          },
          "sendTime": {
            "description": "Optional. The time when the message was sent.",
            "format": "google-datetime",
            "type": "string"
          },
          "sentimentAnalysis": {
            "$ref": "#/$defs/GoogleCloudDialogflowV2SentimentAnalysisResult"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowV2MessageAnnotation": {
        "description": "Represents the result of annotation for the message.",
        "properties": {
          "containEntities": {
            "description": "Indicates whether the text message contains entities.",
            "type": "boolean"
          },
          "parts": {
            "description": "The collection of annotated message parts ordered by their position in the message. You can recover the annotated message by concatenating [AnnotatedMessagePart.text].",
            "items": {
              "$ref": "#/$defs/GoogleCloudDialogflowV2AnnotatedMessagePart"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowV2AnnotatedMessagePart": {
        "description": "Represents a part of a message possibly annotated with an entity. The part can be an entity or purely a part of the message between two entities or message start/end.",
        "properties": {
          "entityType": {
            "description": "The [Dialogflow system entity type](https://cloud.google.com/dialogflow/docs/reference/system-entities) of this message part. If this is empty, Dialogflow could not annotate the phrase part with a system entity.",
            "type": "string"
          },
          "formattedValue": {
            "description": "The [Dialogflow system entity formatted value ](https://cloud.google.com/dialogflow/docs/reference/system-entities) of this message part. For example for a system entity of type `@sys.unit-currency`, this may contain: { \"amount\": 5, \"currency\": \"USD\" } "
          },
          "text": {
            "description": "A part of a message possibly annotated with an entity.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowV2SentimentAnalysisResult": {
        "description": "The result of sentiment analysis. Sentiment analysis inspects user input and identifies the prevailing subjective opinion, especially to determine a user's attitude as positive, negative, or neutral. For Participants.DetectIntent, it needs to be configured in DetectIntentRequest.query_params. For Participants.StreamingDetectIntent, it needs to be configured in StreamingDetectIntentRequest.query_params. And for Participants.AnalyzeContent and Participants.StreamingAnalyzeContent, it needs to be configured in ConversationProfile.human_agent_assistant_config",
        "properties": {
          "queryTextSentiment": {
            "$ref": "#/$defs/GoogleCloudDialogflowV2Sentiment"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowV2Sentiment": {
        "description": "The sentiment, such as positive/negative feeling or association, for a unit of analysis, such as the query text. See: https://cloud.google.com/natural-language/docs/basics#interpreting_sentiment_analysis_values for how to interpret the result.",
        "properties": {
          "magnitude": {
            "description": "A non-negative number in the [0, +inf) range, which represents the absolute magnitude of sentiment, regardless of score (positive or negative).",
            "format": "float",
            "type": "number"
          },
          "score": {
            "description": "Sentiment score between -1.0 (negative sentiment) and 1.0 (positive sentiment).",
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://dialogflow.googleapis.com//v2/{parent}/suggestions:generateStatelessSummary{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The response message for Conversations.GenerateStatelessSummary.",
        "**Key properties:**",
        {
          "$ul": [
            "**contextSize**: Number of messages prior to and including last_conversation_message used to compile the suggestion. It may be smaller than the GenerateStatelessSummaryRequest.context_size field in the request if there weren't that many messages in the conversation.",
            "**latestMessage**: The name of the latest conversation message used as context for compiling suggestion. The format is specific to the user and the names of the messages provided.",
            [
              "**summary**: Generated summary for a conversation.",
              {
                "$ul": [
                  "**baselineModelVersion**: The baseline model version used to generate this summary. It is empty if a baseline model was not used to generate this summary.",
                  "**text**: The summary content that is concatenated into one string.",
                  "**textSections**: The summary content that is divided into sections. The key is the section's name and the value is the section's content. There is no specific format for the key or value."
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
