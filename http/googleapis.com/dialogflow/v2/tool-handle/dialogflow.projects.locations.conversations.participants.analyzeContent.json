{
  "name": "dialogflow_projects_locations_conversations_participants_analyzeContent",
  "description": "Adds a text (chat, for example), or audio (phone recording, for example) message from a participant into the conversation. Note: Always use agent versions for production traffic sent to virtual agents. See [Versions and environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).",
  "parameters": {
    "type": "object",
    "properties": {
      "participant": {
        "type": "string",
        "description": "Required. The name of the participant this text comes from. Format: `projects//locations//conversations//participants/`."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleCloudDialogflowV2AnalyzeContentRequest"
      }
    },
    "required": [
      "participant"
    ],
    "$defs": {
      "GoogleCloudDialogflowV2AnalyzeContentRequest": {
        "description": "The request message for Participants.AnalyzeContent.",
        "properties": {
          "assistQueryParams": {
            "$ref": "#/$defs/GoogleCloudDialogflowV2AssistQueryParameters"
          },
          "cxParameters": {
            "additionalProperties": {
              "description": "Properties of the object."
            },
            "description": "Additional parameters to be put into Dialogflow CX session parameters. To remove a parameter from the session, clients should explicitly set the parameter value to null. Note: this field should only be used if you are connecting to a Dialogflow CX agent.",
            "type": "object"
          },
          "eventInput": {
            "$ref": "#/$defs/GoogleCloudDialogflowV2EventInput"
          },
          "queryParams": {
            "$ref": "#/$defs/GoogleCloudDialogflowV2QueryParameters"
          },
          "replyAudioConfig": {
            "$ref": "#/$defs/GoogleCloudDialogflowV2OutputAudioConfig"
          },
          "requestId": {
            "description": "A unique identifier for this request. Restricted to 36 ASCII characters. A random UUID is recommended. This request is only idempotent if a `request_id` is provided.",
            "type": "string"
          },
          "suggestionInput": {
            "$ref": "#/$defs/GoogleCloudDialogflowV2SuggestionInput"
          },
          "textInput": {
            "$ref": "#/$defs/GoogleCloudDialogflowV2TextInput"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowV2AssistQueryParameters": {
        "description": "Represents the parameters of human assist query.",
        "properties": {
          "documentsMetadataFilters": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Key-value filters on the metadata of documents returned by article suggestion. If specified, article suggestion only returns suggested documents that match all filters in their Document.metadata. Multiple values for a metadata key should be concatenated by comma. For example, filters to match all documents that have 'US' or 'CA' in their market metadata values and 'agent' in their user metadata values will be ``` documents_metadata_filters { key: \"market\" value: \"US,CA\" } documents_metadata_filters { key: \"user\" value: \"agent\" } ```",
            "type": "object"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowV2EventInput": {
        "description": "Events allow for matching intents by event name instead of the natural language input. For instance, input `` can trigger a personalized welcome response. The parameter `name` may be used by the agent in the response: `\"Hello #welcome_event.name! What can I do for you today?\"`.",
        "properties": {
          "languageCode": {
            "description": "Required. The language of this query. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes. Note that queries in the same session do not necessarily need to specify the same language. This field is ignored when used in the context of a WebhookResponse.followup_event_input field, because the language was already defined in the originating detect intent request.",
            "type": "string"
          },
          "name": {
            "description": "Required. The unique identifier of the event.",
            "type": "string"
          },
          "parameters": {
            "additionalProperties": {
              "description": "Properties of the object."
            },
            "description": "The collection of parameters associated with the event. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: * MapKey type: string * MapKey value: parameter name * MapValue type: If parameter's entity type is a composite entity then use map, otherwise, depending on the parameter value type, it could be one of string, number, boolean, null, list or map. * MapValue value: If parameter's entity type is a composite entity then use map from composite entity property names to property values, otherwise, use parameter value.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowV2QueryParameters": {
        "description": "Represents the parameters of the conversational query.",
        "properties": {
          "contexts": {
            "description": "The collection of contexts to be activated before this query is executed.",
            "items": {
              "$ref": "#/$defs/GoogleCloudDialogflowV2Context"
            },
            "type": "array"
          },
          "geoLocation": {
            "$ref": "#/$defs/GoogleTypeLatLng"
          },
          "payload": {
            "additionalProperties": {
              "description": "Properties of the object."
            },
            "description": "This field can be used to pass custom data to your webhook. Arbitrary JSON objects are supported. If supplied, the value is used to populate the `WebhookRequest.original_detect_intent_request.payload` field sent to your webhook.",
            "type": "object"
          },
          "platform": {
            "description": "The platform of the virtual agent response messages. If not empty, only emits messages from this platform in the response. Valid values are the enum names of platform.",
            "type": "string"
          },
          "resetContexts": {
            "description": "Specifies whether to delete all contexts in the current session before the new ones are activated.",
            "type": "boolean"
          },
          "sentimentAnalysisRequestConfig": {
            "$ref": "#/$defs/GoogleCloudDialogflowV2SentimentAnalysisRequestConfig"
          },
          "sessionEntityTypes": {
            "description": "Additional session entity types to replace or extend developer entity types with. The entity synonyms apply to all languages and persist for the session of this query.",
            "items": {
              "$ref": "#/$defs/GoogleCloudDialogflowV2SessionEntityType"
            },
            "type": "array"
          },
          "timeZone": {
            "description": "The time zone of this conversational query from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York, Europe/Paris. If not provided, the time zone specified in agent settings is used.",
            "type": "string"
          },
          "webhookHeaders": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "This field can be used to pass HTTP headers for a webhook call. These headers will be sent to webhook along with the headers that have been configured through the Dialogflow web console. The headers defined within this field will overwrite the headers configured through the Dialogflow console if there is a conflict. Header names are case-insensitive. Google's specified headers are not allowed. Including: \"Host\", \"Content-Length\", \"Connection\", \"From\", \"User-Agent\", \"Accept-Encoding\", \"If-Modified-Since\", \"If-None-Match\", \"X-Forwarded-For\", etc.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowV2Context": {
        "description": "Dialogflow contexts are similar to natural language context. If a person says to you \"they are orange\", you need context in order to understand what \"they\" is referring to. Similarly, for Dialogflow to handle an end-user expression like that, it needs to be provided with context in order to correctly match an intent. Using contexts, you can control the flow of a conversation. You can configure contexts for an intent by setting input and output contexts, which are identified by string names. When an intent is matched, any configured output contexts for that intent become active. While any contexts are active, Dialogflow is more likely to match intents that are configured with input contexts that correspond to the currently active contexts. For more information about context, see the [Contexts guide](https://cloud.google.com/dialogflow/docs/contexts-overview).",
        "properties": {
          "lifespanCount": {
            "description": "Optional. The number of conversational query requests after which the context expires. The default is `0`. If set to `0`, the context expires immediately. Contexts expire automatically after 20 minutes if there are no matching queries.",
            "format": "int32",
            "type": "integer"
          },
          "name": {
            "description": "Required. The unique identifier of the context. Format: `projects//agent/sessions//contexts/`, or `projects//agent/environments//users//sessions//contexts/`. The `Context ID` is always converted to lowercase, may only contain characters in `a-zA-Z0-9_-%` and may be at most 250 bytes long. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. The following context names are reserved for internal use by Dialogflow. You should not use these contexts or create contexts with these names: * `__system_counters__` * `*_id_dialog_context` * `*_dialog_params_size`",
            "type": "string"
          },
          "parameters": {
            "additionalProperties": {
              "description": "Properties of the object."
            },
            "description": "Optional. The collection of parameters associated with this context. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: * MapKey type: string * MapKey value: parameter name * MapValue type: If parameter's entity type is a composite entity then use map, otherwise, depending on the parameter value type, it could be one of string, number, boolean, null, list or map. * MapValue value: If parameter's entity type is a composite entity then use map from composite entity property names to property values, otherwise, use parameter value.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "GoogleTypeLatLng": {
        "description": "An object that represents a latitude/longitude pair. This is expressed as a pair of doubles to represent degrees latitude and degrees longitude. Unless specified otherwise, this object must conform to the WGS84 standard. Values must be within normalized ranges.",
        "properties": {
          "latitude": {
            "description": "The latitude in degrees. It must be in the range [-90.0, +90.0].",
            "format": "double",
            "type": "number"
          },
          "longitude": {
            "description": "The longitude in degrees. It must be in the range [-180.0, +180.0].",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowV2SentimentAnalysisRequestConfig": {
        "description": "Configures the types of sentiment analysis to perform.",
        "properties": {
          "analyzeQueryTextSentiment": {
            "description": "Instructs the service to perform sentiment analysis on `query_text`. If not provided, sentiment analysis is not performed on `query_text`.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowV2SessionEntityType": {
        "description": "A session represents a conversation between a Dialogflow agent and an end-user. You can create special entities, called session entities, during a session. Session entities can extend or replace custom entity types and only exist during the session that they were created for. All session data, including session entities, is stored by Dialogflow for 20 minutes. For more information, see the [session entity guide](https://cloud.google.com/dialogflow/docs/entities-session).",
        "properties": {
          "entities": {
            "description": "Required. The collection of entities associated with this session entity type.",
            "items": {
              "$ref": "#/$defs/GoogleCloudDialogflowV2EntityTypeEntity"
            },
            "type": "array"
          },
          "entityOverrideMode": {
            "description": "Required. Indicates whether the additional data should override or supplement the custom entity type definition.",
            "enum": [
              "ENTITY_OVERRIDE_MODE_UNSPECIFIED",
              "ENTITY_OVERRIDE_MODE_OVERRIDE",
              "ENTITY_OVERRIDE_MODE_SUPPLEMENT"
            ],
            "type": "string"
          },
          "name": {
            "description": "Required. The unique identifier of this session entity type. Format: `projects//agent/sessions//entityTypes/`, or `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. `` must be the display name of an existing entity type in the same agent that will be overridden or supplemented.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowV2EntityTypeEntity": {
        "description": "An **entity entry** for an associated entity type.",
        "properties": {
          "synonyms": {
            "description": "Required. A collection of value synonyms. For example, if the entity type is *vegetable*, and `value` is *scallions*, a synonym could be *green onions*. For `KIND_LIST` entity types: * This collection must contain exactly one synonym equal to `value`.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "value": {
            "description": "Required. The primary value associated with this entity entry. For example, if the entity type is *vegetable*, the value could be *scallions*. For `KIND_MAP` entity types: * A reference value to be used in place of synonyms. For `KIND_LIST` entity types: * A string that can contain references to other entity types (with or without aliases).",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowV2OutputAudioConfig": {
        "description": "Instructs the speech synthesizer on how to generate the output audio content. If this audio config is supplied in a request, it overrides all existing text-to-speech settings applied to the agent.",
        "properties": {
          "audioEncoding": {
            "description": "Required. Audio encoding of the synthesized audio content.",
            "enum": [
              "OUTPUT_AUDIO_ENCODING_UNSPECIFIED",
              "OUTPUT_AUDIO_ENCODING_LINEAR_16",
              "OUTPUT_AUDIO_ENCODING_MP3",
              "OUTPUT_AUDIO_ENCODING_MP3_64_KBPS",
              "OUTPUT_AUDIO_ENCODING_OGG_OPUS",
              "OUTPUT_AUDIO_ENCODING_MULAW"
            ],
            "type": "string"
          },
          "sampleRateHertz": {
            "description": "The synthesis sample rate (in hertz) for this audio. If not provided, then the synthesizer will use the default sample rate based on the audio encoding. If this is different from the voice's natural sample rate, then the synthesizer will honor this request by converting to the desired sample rate (which might result in worse audio quality).",
            "format": "int32",
            "type": "integer"
          },
          "synthesizeSpeechConfig": {
            "$ref": "#/$defs/GoogleCloudDialogflowV2SynthesizeSpeechConfig"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowV2SynthesizeSpeechConfig": {
        "description": "Configuration of how speech should be synthesized.",
        "properties": {
          "effectsProfileId": {
            "description": "Optional. An identifier which selects 'audio effects' profiles that are applied on (post synthesized) text to speech. Effects are applied on top of each other in the order they are given.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "pitch": {
            "description": "Optional. Speaking pitch, in the range [-20.0, 20.0]. 20 means increase 20 semitones from the original pitch. -20 means decrease 20 semitones from the original pitch.",
            "format": "double",
            "type": "number"
          },
          "speakingRate": {
            "description": "Optional. Speaking rate/speed, in the range [0.25, 4.0]. 1.0 is the normal native speed supported by the specific voice. 2.0 is twice as fast, and 0.5 is half as fast. If unset(0.0), defaults to the native 1.0 speed. Any other values < 0.25 or > 4.0 will return an error.",
            "format": "double",
            "type": "number"
          },
          "voice": {
            "$ref": "#/$defs/GoogleCloudDialogflowV2VoiceSelectionParams"
          },
          "volumeGainDb": {
            "description": "Optional. Volume gain (in dB) of the normal native volume supported by the specific voice, in the range [-96.0, 16.0]. If unset, or set to a value of 0.0 (dB), will play at normal native signal amplitude. A value of -6.0 (dB) will play at approximately half the amplitude of the normal native signal amplitude. A value of +6.0 (dB) will play at approximately twice the amplitude of the normal native signal amplitude. We strongly recommend not to exceed +10 (dB) as there's usually no effective increase in loudness for any value greater than that.",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowV2VoiceSelectionParams": {
        "description": "Description of which voice to use for speech synthesis.",
        "properties": {
          "name": {
            "description": "Optional. The name of the voice. If not set, the service will choose a voice based on the other parameters such as language_code and ssml_gender.",
            "type": "string"
          },
          "ssmlGender": {
            "description": "Optional. The preferred gender of the voice. If not set, the service will choose a voice based on the other parameters such as language_code and name. Note that this is only a preference, not requirement. If a voice of the appropriate gender is not available, the synthesizer should substitute a voice with a different gender rather than failing the request.",
            "enum": [
              "SSML_VOICE_GENDER_UNSPECIFIED",
              "SSML_VOICE_GENDER_MALE",
              "SSML_VOICE_GENDER_FEMALE",
              "SSML_VOICE_GENDER_NEUTRAL"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowV2SuggestionInput": {
        "description": "Represents the selection of a suggestion.",
        "properties": {
          "answerRecord": {
            "description": "Required. The ID of a suggestion selected by the human agent. The suggestion(s) were generated in a previous call to request Dialogflow assist. The format is: `projects//locations//answerRecords/` where is an alphanumeric string.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowV2TextInput": {
        "description": "Auxiliary proto messages. Represents the natural language text to be processed.",
        "properties": {
          "languageCode": {
            "description": "Required. The language of this conversational query. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes. Note that queries in the same session do not necessarily need to specify the same language.",
            "type": "string"
          },
          "text": {
            "description": "Required. The UTF-8 encoded natural language text to be processed. Text length must not exceed 256 characters for virtual agent interactions.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://dialogflow.googleapis.com//v2/{participant}:analyzeContent{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The response message for Participants.AnalyzeContent.",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**automatedAgentReply**: Represents a response from an automated agent.",
              {
                "$ul": [
                  "**allowCancellation**: Indicates whether the partial automated agent reply is interruptible when a later reply message arrives. e.g. if the agent specified some music as partial response, it can be cancelled.",
                  "**automatedAgentReplyType**: AutomatedAgentReply type.",
                  "**cxCurrentPage**: The unique identifier of the current Dialogflow CX conversation page. Format: `projects//locations//agents//flows//pages/`.",
                  [
                    "**detectIntentResponse**: The message returned from the DetectIntent method.",
                    {
                      "$ul": [
                        "**outputAudio**: The audio data bytes encoded as specified in the request. Note: The output audio is generated based on the values of default platform text responses found in the `query_result.fulfillment_messages` field. If multiple default text responses exist, they will be concatenated when generating audio. If no default platform text responses exist, the generated audio content will be empty. In some scenarios, multiple output audio fields may be present in the response structure. In these cases, only the top-most-level audio output has content.",
                        [
                          "**outputAudioConfig**: Instructs the speech synthesizer on how to generate the output audio content. If this audio config is supplied in a request, it overrides all existing text-to-speech settings applied to the agent.",
                          {
                            "$ul": [
                              "**audioEncoding**: Required. Audio encoding of the synthesized audio content.",
                              "**sampleRateHertz**: The synthesis sample rate (in hertz) for this audio. If not provided, then the synthesizer will use the default sample rate based on the audio encoding. If this is different from the voice's natural sample rate, then the synthesizer will honor this request by converting to the desired sample rate (which might result in worse audio quality).",
                              [
                                "**synthesizeSpeechConfig**: Configuration of how speech should be synthesized.",
                                {
                                  "$ul": [
                                    "**effectsProfileId**: Optional. An identifier which selects 'audio effects' profiles that are applied on (post synthesized) text to speech. Effects are applied on top of each other in the order they are given.",
                                    "**pitch**: Optional. Speaking pitch, in the range [-20.0, 20.0]. 20 means increase 20 semitones from the original pitch. -20 means decrease 20 semitones from the original pitch.",
                                    "**speakingRate**: Optional. Speaking rate/speed, in the range [0.25, 4.0]. 1.0 is the normal native speed supported by the specific voice. 2.0 is twice as fast, and 0.5 is half as fast. If unset(0.0), defaults to the native 1.0 speed. Any other values < 0.25 or > 4.0 will return an error.",
                                    [
                                      "**voice**: Description of which voice to use for speech synthesis.",
                                      {
                                        "$ul": [
                                          "**name**: Optional. The name of the voice. If not set, the service will choose a voice based on the other parameters such as language_code and ssml_gender.",
                                          "**ssmlGender**: Optional. The preferred gender of the voice. If not set, the service will choose a voice based on the other parameters such as language_code and name. Note that this is only a preference, not requirement. If a voice of the appropriate gender is not available, the synthesizer should substitute a voice with a different gender rather than failing the request."
                                        ]
                                      }
                                    ],
                                    "**volumeGainDb**: Optional. Volume gain (in dB) of the normal native volume supported by the specific voice, in the range [-96.0, 16.0]. If unset, or set to a value of 0.0 (dB), will play at normal native signal amplitude. A value of -6.0 (dB) will play at approximately half the amplitude of the normal native signal amplitude. A value of +6.0 (dB) will play at approximately twice the amplitude of the normal native signal amplitude. We strongly recommend not to exceed +10 (dB) as there's usually no effective increase in loudness for any value greater than that."
                                  ]
                                }
                              ]
                            ]
                          }
                        ],
                        [
                          "**queryResult**: Represents the result of conversational query or event processing.",
                          {
                            "$ul": [
                              "**action**: The action name from the matched intent.",
                              "**allRequiredParamsPresent**: This field is set to: - `false` if the matched intent has required parameters and not all of the required parameter values have been collected. - `true` if all required parameter values have been collected, or if the matched intent doesn't contain any required parameters.",
                              "**cancelsSlotFilling**: Indicates whether the conversational query triggers a cancellation for slot filling. For more information, see the [cancel slot filling documentation](https://cloud.google.com/dialogflow/es/docs/intents-actions-parameters#cancel).",
                              "**diagnosticInfo**: Free-form diagnostic information for the associated detect intent request. The fields of this data can change without notice, so you should not write code that depends on its structure. The data may contain: - webhook call latency - webhook errors",
                              "**fulfillmentMessages**: The collection of rich messages to present to the user.",
                              "**fulfillmentText**: The text to be pronounced to the user or shown on the screen. Note: This is a legacy field, `fulfillment_messages` should be preferred.",
                              [
                                "**intent**: An intent categorizes an end-user's intention for one conversation turn. For each agent, you define many intents, where your combined intents can handle a complete conversation. When an end-user writes or says something, referred to as an end-user expression or end-user input, Dialogflow matches the end-user input to the best intent in your agent. Matching an intent is also known as intent classification. For more information, see the [intent guide](https://cloud.google.com/dialogflow/docs/intents-overview).",
                                {
                                  "$ul": [
                                    "**action**: Optional. The name of the action associated with the intent. Note: The action name must not contain whitespaces.",
                                    "**defaultResponsePlatforms**: Optional. The list of platforms for which the first responses will be copied from the messages in PLATFORM_UNSPECIFIED (i.e. default platform).",
                                    "**displayName**: Required. The name of this intent.",
                                    "**endInteraction**: Optional. Indicates that this intent ends an interaction. Some integrations (e.g., Actions on Google or Dialogflow phone gateway) use this information to close interaction with an end user. Default is false.",
                                    "**events**: Optional. The collection of event names that trigger the intent. If the collection of input contexts is not empty, all of the contexts must be present in the active user session for an event to trigger this intent. Event names are limited to 150 characters.",
                                    "**followupIntentInfo**: Output only. Read-only. Information about all followup intents that have this intent as a direct or indirect parent. We populate this field only in the output.",
                                    "**inputContextNames**: Optional. The list of context names required for this intent to be triggered. Format: `projects//agent/sessions/-/contexts/`.",
                                    "**isFallback**: Optional. Indicates whether this is a fallback intent.",
                                    "**liveAgentHandoff**: Optional. Indicates that a live agent should be brought in to handle the interaction with the user. In most cases, when you set this flag to true, you would also want to set end_interaction to true as well. Default is false.",
                                    "**messages**: Optional. The collection of rich messages corresponding to the `Response` field in the Dialogflow console.",
                                    "**mlDisabled**: Optional. Indicates whether Machine Learning is disabled for the intent. Note: If `ml_disabled` setting is set to true, then this intent is not taken into account during inference in `ML ONLY` match mode. Also, auto-markup in the UI is turned off.",
                                    "**name**: Optional. The unique identifier of this intent. Required for Intents.UpdateIntent and Intents.BatchUpdateIntents methods. Format: `projects//agent/intents/`.",
                                    "**outputContexts**: Optional. The collection of contexts that are activated when the intent is matched. Context messages in this collection should not set the parameters field. Setting the `lifespan_count` to 0 will reset the context when the intent is matched. Format: `projects//agent/sessions/-/contexts/`.",
                                    "**parameters**: Optional. The collection of parameters associated with the intent.",
                                    "**parentFollowupIntentName**: Read-only after creation. The unique identifier of the parent intent in the chain of followup intents. You can set this field when creating an intent, for example with CreateIntent or BatchUpdateIntents, in order to make this intent a followup intent. It identifies the parent followup intent. Format: `projects//agent/intents/`.",
                                    "**priority**: Optional. The priority of this intent. Higher numbers represent higher priorities. - If the supplied value is unspecified or 0, the service translates the value to 500,000, which corresponds to the `Normal` priority in the console. - If the supplied value is negative, the intent is ignored in runtime detect intent requests.",
                                    "**resetContexts**: Optional. Indicates whether to delete all contexts in the current session when this intent is matched.",
                                    "**rootFollowupIntentName**: Output only. Read-only. The unique identifier of the root intent in the chain of followup intents. It identifies the correct followup intents chain for this intent. We populate this field only in the output. Format: `projects//agent/intents/`.",
                                    "**trainingPhrases**: Optional. The collection of examples that the agent is trained on.",
                                    "**webhookState**: Optional. Indicates whether webhooks are enabled for the intent."
                                  ]
                                }
                              ],
                              "**intentDetectionConfidence**: The intent detection confidence. Values range from 0.0 (completely uncertain) to 1.0 (completely certain). This value is for informational purpose only and is only used to help match the best intent within the classification threshold. This value may change for the same end-user expression at any time due to a model retraining or change in implementation. If there are `multiple knowledge_answers` messages, this value is set to the greatest `knowledgeAnswers.match_confidence` value in the list.",
                              "**languageCode**: The language that was triggered during intent detection. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes.",
                              "**outputContexts**: The collection of output contexts. If applicable, `output_contexts.parameters` contains entries with name `.original` containing the original parameter values before the query.",
                              "**parameters**: The collection of extracted parameters. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: * MapKey type: string * MapKey value: parameter name * MapValue type: If parameter's entity type is a composite entity then use map, otherwise, depending on the parameter value type, it could be one of string, number, boolean, null, list or map. * MapValue value: If parameter's entity type is a composite entity then use map from composite entity property names to property values, otherwise, use parameter value.",
                              "**queryText**: The original conversational query text: - If natural language text was provided as input, `query_text` contains a copy of the input. - If natural language speech audio was provided as input, `query_text` contains the speech recognition result. If speech recognizer produced multiple alternatives, a particular one is picked. - If automatic spell correction is enabled, `query_text` will contain the corrected user input.",
                              [
                                "**sentimentAnalysisResult**: The result of sentiment analysis. Sentiment analysis inspects user input and identifies the prevailing subjective opinion, especially to determine a user's attitude as positive, negative, or neutral. For Participants.DetectIntent, it needs to be configured in DetectIntentRequest.query_params. For Participants.StreamingDetectIntent, it needs to be configured in StreamingDetectIntentRequest.query_params. And for Participants.AnalyzeContent and Participants.StreamingAnalyzeContent, it needs to be configured in ConversationProfile.human_agent_assistant_config",
                                {
                                  "$ul": [
                                    [
                                      "**queryTextSentiment**: The sentiment, such as positive/negative feeling or association, for a unit of analysis, such as the query text. See: https://cloud.google.com/natural-language/docs/basics#interpreting_sentiment_analysis_values for how to interpret the result.",
                                      {
                                        "$ul": [
                                          "**magnitude**: A non-negative number in the [0, +inf) range, which represents the absolute magnitude of sentiment, regardless of score (positive or negative).",
                                          "**score**: Sentiment score between -1.0 (negative sentiment) and 1.0 (positive sentiment)."
                                        ]
                                      }
                                    ]
                                  ]
                                }
                              ],
                              "**speechRecognitionConfidence**: The Speech recognition confidence between 0.0 and 1.0. A higher number indicates an estimated greater likelihood that the recognized words are correct. The default of 0.0 is a sentinel value indicating that confidence was not set. This field is not guaranteed to be accurate or set. In particular this field isn't set for StreamingDetectIntent since the streaming endpoint has separate confidence estimates per portion of the audio in StreamingRecognitionResult.",
                              "**webhookPayload**: If the query was fulfilled by a webhook call, this field is set to the value of the `payload` field returned in the webhook response.",
                              "**webhookSource**: If the query was fulfilled by a webhook call, this field is set to the value of the `source` field returned in the webhook response."
                            ]
                          }
                        ],
                        "**responseId**: The unique identifier of the response. It can be used to locate a response in the training example set or for reporting issues.",
                        [
                          "**webhookStatus**: The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
                          {
                            "$ul": [
                              "**code**: The status code, which should be an enum value of google.rpc.Code.",
                              "**details**: A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                              "**message**: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                            ]
                          }
                        ]
                      ]
                    }
                  ]
                ]
              }
            ],
            [
              "**dtmfParameters**: The message in the response that indicates the parameters of DTMF.",
              {
                "$ul": [
                  "**acceptsDtmfInput**: Indicates whether DTMF input can be handled in the next request."
                ]
              }
            ],
            "**endUserSuggestionResults**: The suggestions for end user. The order is the same as HumanAgentAssistantConfig.SuggestionConfig.feature_configs of HumanAgentAssistantConfig.end_user_suggestion_config. Same as human_agent_suggestion_results, any failure of Agent Assist features will not lead to the overall failure of an AnalyzeContent API call. Instead, the features will fail silently with the error field set in the corresponding SuggestionResult.",
            "**humanAgentSuggestionResults**: The suggestions for most recent human agent. The order is the same as HumanAgentAssistantConfig.SuggestionConfig.feature_configs of HumanAgentAssistantConfig.human_agent_suggestion_config. Note that any failure of Agent Assist features will not lead to the overall failure of an AnalyzeContent API call. Instead, the features will fail silently with the error field set in the corresponding SuggestionResult.",
            [
              "**message**: Represents a message posted into a conversation.",
              {
                "$ul": [
                  "**content**: Required. The message content.",
                  "**createTime**: Output only. The time when the message was created in Contact Center AI.",
                  "**languageCode**: Optional. The message language. This should be a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: \"en-US\".",
                  [
                    "**messageAnnotation**: Represents the result of annotation for the message.",
                    {
                      "$ul": [
                        "**containEntities**: Indicates whether the text message contains entities.",
                        "**parts**: The collection of annotated message parts ordered by their position in the message. You can recover the annotated message by concatenating [AnnotatedMessagePart.text]."
                      ]
                    }
                  ],
                  "**name**: Optional. The unique identifier of the message. Format: `projects//locations//conversations//messages/`.",
                  "**participant**: Output only. The participant that sends this message.",
                  "**participantRole**: Output only. The role of the participant.",
                  "**sendTime**: Optional. The time when the message was sent.",
                  [
                    "**sentimentAnalysis**: The result of sentiment analysis. Sentiment analysis inspects user input and identifies the prevailing subjective opinion, especially to determine a user's attitude as positive, negative, or neutral. For Participants.DetectIntent, it needs to be configured in DetectIntentRequest.query_params. For Participants.StreamingDetectIntent, it needs to be configured in StreamingDetectIntentRequest.query_params. And for Participants.AnalyzeContent and Participants.StreamingAnalyzeContent, it needs to be configured in ConversationProfile.human_agent_assistant_config",
                    {
                      "$ul": [
                        [
                          "**queryTextSentiment**: The sentiment, such as positive/negative feeling or association, for a unit of analysis, such as the query text. See: https://cloud.google.com/natural-language/docs/basics#interpreting_sentiment_analysis_values for how to interpret the result.",
                          {
                            "$ul": [
                              "**magnitude**: A non-negative number in the [0, +inf) range, which represents the absolute magnitude of sentiment, regardless of score (positive or negative).",
                              "**score**: Sentiment score between -1.0 (negative sentiment) and 1.0 (positive sentiment)."
                            ]
                          }
                        ]
                      ]
                    }
                  ]
                ]
              }
            ],
            [
              "**replyAudio**: Represents the natural language speech audio to be played to the end user.",
              {
                "$ul": [
                  "**audio**: The natural language speech audio.",
                  [
                    "**config**: Instructs the speech synthesizer on how to generate the output audio content. If this audio config is supplied in a request, it overrides all existing text-to-speech settings applied to the agent.",
                    {
                      "$ul": [
                        "**audioEncoding**: Required. Audio encoding of the synthesized audio content.",
                        "**sampleRateHertz**: The synthesis sample rate (in hertz) for this audio. If not provided, then the synthesizer will use the default sample rate based on the audio encoding. If this is different from the voice's natural sample rate, then the synthesizer will honor this request by converting to the desired sample rate (which might result in worse audio quality).",
                        [
                          "**synthesizeSpeechConfig**: Configuration of how speech should be synthesized.",
                          {
                            "$ul": [
                              "**effectsProfileId**: Optional. An identifier which selects 'audio effects' profiles that are applied on (post synthesized) text to speech. Effects are applied on top of each other in the order they are given.",
                              "**pitch**: Optional. Speaking pitch, in the range [-20.0, 20.0]. 20 means increase 20 semitones from the original pitch. -20 means decrease 20 semitones from the original pitch.",
                              "**speakingRate**: Optional. Speaking rate/speed, in the range [0.25, 4.0]. 1.0 is the normal native speed supported by the specific voice. 2.0 is twice as fast, and 0.5 is half as fast. If unset(0.0), defaults to the native 1.0 speed. Any other values < 0.25 or > 4.0 will return an error.",
                              [
                                "**voice**: Description of which voice to use for speech synthesis.",
                                {
                                  "$ul": [
                                    "**name**: Optional. The name of the voice. If not set, the service will choose a voice based on the other parameters such as language_code and ssml_gender.",
                                    "**ssmlGender**: Optional. The preferred gender of the voice. If not set, the service will choose a voice based on the other parameters such as language_code and name. Note that this is only a preference, not requirement. If a voice of the appropriate gender is not available, the synthesizer should substitute a voice with a different gender rather than failing the request."
                                  ]
                                }
                              ],
                              "**volumeGainDb**: Optional. Volume gain (in dB) of the normal native volume supported by the specific voice, in the range [-96.0, 16.0]. If unset, or set to a value of 0.0 (dB), will play at normal native signal amplitude. A value of -6.0 (dB) will play at approximately half the amplitude of the normal native signal amplitude. A value of +6.0 (dB) will play at approximately twice the amplitude of the normal native signal amplitude. We strongly recommend not to exceed +10 (dB) as there's usually no effective increase in loudness for any value greater than that."
                            ]
                          }
                        ]
                      ]
                    }
                  ]
                ]
              }
            ],
            "**replyText**: The output text content. This field is set if the automated agent responded with text to show to the user."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
