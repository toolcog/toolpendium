{
  "name": "dialogflow_projects_locations_conversationModels_evaluations_create",
  "description": "Creates evaluation of a conversation model.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The conversation model resource name. Format: `projects//locations//conversationModels/`"
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleCloudDialogflowV2CreateConversationModelEvaluationRequest"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "GoogleCloudDialogflowV2CreateConversationModelEvaluationRequest": {
        "description": "The request message for ConversationModels.CreateConversationModelEvaluation",
        "properties": {
          "conversationModelEvaluation": {
            "$ref": "#/$defs/GoogleCloudDialogflowV2ConversationModelEvaluation"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowV2ConversationModelEvaluation": {
        "description": "Represents evaluation result of a conversation model.",
        "properties": {
          "createTime": {
            "description": "Output only. Creation time of this model.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "Optional. The display name of the model evaluation. At most 64 bytes long.",
            "type": "string"
          },
          "evaluationConfig": {
            "$ref": "#/$defs/GoogleCloudDialogflowV2EvaluationConfig"
          },
          "name": {
            "description": "The resource name of the evaluation. Format: `projects//conversationModels//evaluations/`",
            "type": "string"
          },
          "rawHumanEvalTemplateCsv": {
            "description": "Output only. Human eval template in csv format. It tooks real-world conversations provided through input dataset, generates example suggestions for customer to verify quality of the model. For Smart Reply, the generated csv file contains columns of Context, (Suggestions,Q1,Q2)*3, Actual reply. Context contains at most 10 latest messages in the conversation prior to the current suggestion. Q1: \"Would you send it as the next message of agent?\" Evaluated based on whether the suggest is appropriate to be sent by agent in current context. Q2: \"Does the suggestion move the conversation closer to resolution?\" Evaluated based on whether the suggestion provide solutions, or answers customer's question or collect information from customer to resolve the customer's issue. Actual reply column contains the actual agent reply sent in the context.",
            "readOnly": true,
            "type": "string"
          },
          "smartReplyMetrics": {
            "$ref": "#/$defs/GoogleCloudDialogflowV2SmartReplyMetrics"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowV2EvaluationConfig": {
        "description": "The configuration for model evaluation.",
        "properties": {
          "datasets": {
            "description": "Required. Datasets used for evaluation.",
            "items": {
              "$ref": "#/$defs/GoogleCloudDialogflowV2InputDataset"
            },
            "type": "array"
          },
          "smartComposeConfig": {
            "$ref": "#/$defs/GoogleCloudDialogflowV2EvaluationConfigSmartComposeConfig"
          },
          "smartReplyConfig": {
            "$ref": "#/$defs/GoogleCloudDialogflowV2EvaluationConfigSmartReplyConfig"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowV2InputDataset": {
        "description": "InputDataset used to create model or do evaluation. NextID:5",
        "properties": {
          "dataset": {
            "description": "Required. ConversationDataset resource name. Format: `projects//locations//conversationDatasets/`",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowV2EvaluationConfigSmartComposeConfig": {
        "description": "Smart compose specific configuration for evaluation job.",
        "properties": {
          "allowlistDocument": {
            "description": "The allowlist document resource name. Format: `projects//knowledgeBases//documents/`. Only used for smart compose model.",
            "type": "string"
          },
          "maxResultCount": {
            "description": "Required. The model to be evaluated can return multiple results with confidence score on each query. These results will be sorted by the descending order of the scores and we only keep the first max_result_count results as the final results to evaluate.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowV2EvaluationConfigSmartReplyConfig": {
        "description": "Smart reply specific configuration for evaluation job.",
        "properties": {
          "allowlistDocument": {
            "description": "The allowlist document resource name. Format: `projects//knowledgeBases//documents/`. Only used for smart reply model.",
            "type": "string"
          },
          "maxResultCount": {
            "description": "Required. The model to be evaluated can return multiple results with confidence score on each query. These results will be sorted by the descending order of the scores and we only keep the first max_result_count results as the final results to evaluate.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowV2SmartReplyMetrics": {
        "description": "The evaluation metrics for smart reply model.",
        "properties": {
          "allowlistCoverage": {
            "description": "Percentage of target participant messages in the evaluation dataset for which similar messages have appeared at least once in the allowlist. Should be [0, 1].",
            "format": "float",
            "type": "number"
          },
          "conversationCount": {
            "description": "Total number of conversations used to generate this metric.",
            "format": "int64",
            "type": "string"
          },
          "topNMetrics": {
            "description": "Metrics of top n smart replies, sorted by TopNMetric.n.",
            "items": {
              "$ref": "#/$defs/GoogleCloudDialogflowV2SmartReplyMetricsTopNMetrics"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudDialogflowV2SmartReplyMetricsTopNMetrics": {
        "description": "Evaluation metrics when retrieving `n` smart replies with the model.",
        "properties": {
          "n": {
            "description": "Number of retrieved smart replies. For example, when `n` is 3, this evaluation contains metrics for when Dialogflow retrieves 3 smart replies with the model.",
            "format": "int32",
            "type": "integer"
          },
          "recall": {
            "description": "Defined as `number of queries whose top n smart replies have at least one similar (token match similarity above the defined threshold) reply as the real reply` divided by `number of queries with at least one smart reply`. Value ranges from 0.0 to 1.0 inclusive.",
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://dialogflow.googleapis.com//v2/{parent}/evaluations{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "This resource represents a long-running operation that is the result of a network API call.",
        "**Key properties:**",
        {
          "$ul": [
            "**done**: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
            [
              "**error**: The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
              {
                "$ul": [
                  "**code**: The status code, which should be an enum value of google.rpc.Code.",
                  "**details**: A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                  "**message**: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                ]
              }
            ],
            "**metadata**: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
            "**name**: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
            "**response**: The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
