{
  "name": "analyticsadmin_accounts_searchChangeHistoryEvents",
  "description": "Searches through all changes to an account or its children given the specified set of filters.",
  "parameters": {
    "type": "object",
    "properties": {
      "account": {
        "type": "string",
        "description": "Required. The account resource for which to return change history resources. Format: accounts/{account} Example: \"accounts/100\""
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleAnalyticsAdminV1betaSearchChangeHistoryEventsRequest"
      }
    },
    "required": [
      "account"
    ],
    "$defs": {
      "GoogleAnalyticsAdminV1betaSearchChangeHistoryEventsRequest": {
        "description": "Request message for SearchChangeHistoryEvents RPC.",
        "properties": {
          "action": {
            "description": "Optional. If set, only return changes that match one or more of these types of actions.",
            "items": {
              "enum": [
                "ACTION_TYPE_UNSPECIFIED",
                "CREATED",
                "UPDATED",
                "DELETED"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "actorEmail": {
            "description": "Optional. If set, only return changes if they are made by a user in this list.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "earliestChangeTime": {
            "description": "Optional. If set, only return changes made after this time (inclusive).",
            "format": "google-datetime",
            "type": "string"
          },
          "latestChangeTime": {
            "description": "Optional. If set, only return changes made before this time (inclusive).",
            "format": "google-datetime",
            "type": "string"
          },
          "pageSize": {
            "description": "Optional. The maximum number of ChangeHistoryEvent items to return. The service may return fewer than this value, even if there are additional pages. If unspecified, at most 50 items will be returned. The maximum value is 200 (higher values will be coerced to the maximum).",
            "format": "int32",
            "type": "integer"
          },
          "pageToken": {
            "description": "Optional. A page token, received from a previous `SearchChangeHistoryEvents` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `SearchChangeHistoryEvents` must match the call that provided the page token.",
            "type": "string"
          },
          "property": {
            "description": "Optional. Resource name for a child property. If set, only return changes made to this property or its child resources. Format: properties/{propertyId} Example: \"properties/100\"",
            "type": "string"
          },
          "resourceType": {
            "description": "Optional. If set, only return changes if they are for a resource that matches at least one of these types.",
            "items": {
              "enum": [
                "CHANGE_HISTORY_RESOURCE_TYPE_UNSPECIFIED",
                "ACCOUNT",
                "PROPERTY",
                "FIREBASE_LINK",
                "GOOGLE_ADS_LINK",
                "GOOGLE_SIGNALS_SETTINGS",
                "CONVERSION_EVENT",
                "MEASUREMENT_PROTOCOL_SECRET",
                "DATA_RETENTION_SETTINGS",
                "DISPLAY_VIDEO_360_ADVERTISER_LINK",
                "DISPLAY_VIDEO_360_ADVERTISER_LINK_PROPOSAL",
                "DATA_STREAM",
                "ATTRIBUTION_SETTINGS"
              ],
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://analyticsadmin.googleapis.com//v1beta/{account}:searchChangeHistoryEvents{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Response message for SearchAccounts RPC.",
        "**Key properties:**",
        {
          "$ul": [
            "**changeHistoryEvents**: Results that were accessible to the caller.",
            "**nextPageToken**: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
