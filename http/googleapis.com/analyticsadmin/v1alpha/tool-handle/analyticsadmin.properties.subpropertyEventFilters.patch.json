{
  "name": "analyticsadmin_properties_subpropertyEventFilters_patch",
  "description": "Updates a subproperty Event Filter.",
  "parameters": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "Output only. Format: properties/{ordinary_property_id}/subpropertyEventFilters/{sub_property_event_filter} Example: properties/1234/subpropertyEventFilters/5678"
      },
      "updateMask": {
        "type": "string",
        "description": "Required. The list of fields to update. Field names must be in snake case (for example, \"field_to_update\"). Omitted fields will not be updated. To replace the entire entity, use one path with the string \"*\" to match all fields."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleAnalyticsAdminV1alphaSubpropertyEventFilter"
      }
    },
    "required": [
      "name"
    ],
    "$defs": {
      "GoogleAnalyticsAdminV1alphaSubpropertyEventFilter": {
        "description": "A resource message representing a GA4 Subproperty event filter.",
        "properties": {
          "applyToProperty": {
            "description": "Immutable. Resource name of the Subproperty that uses this filter.",
            "type": "string"
          },
          "filterClauses": {
            "description": "Required. Unordered list. Filter clauses that define the SubpropertyEventFilter. All clauses are AND'ed together to determine what data is sent to the subproperty.",
            "items": {
              "$ref": "#/$defs/GoogleAnalyticsAdminV1alphaSubpropertyEventFilterClause"
            },
            "type": "array"
          },
          "name": {
            "description": "Output only. Format: properties/{ordinary_property_id}/subpropertyEventFilters/{sub_property_event_filter} Example: properties/1234/subpropertyEventFilters/5678",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleAnalyticsAdminV1alphaSubpropertyEventFilterClause": {
        "description": "A clause for defining a filter. A filter may be inclusive (events satisfying the filter clause are included in the subproperty's data) or exclusive (events satisfying the filter clause are excluded from the subproperty's data).",
        "properties": {
          "filterClauseType": {
            "description": "Required. The type for the filter clause.",
            "enum": [
              "FILTER_CLAUSE_TYPE_UNSPECIFIED",
              "INCLUDE",
              "EXCLUDE"
            ],
            "type": "string"
          },
          "filterExpression": {
            "$ref": "#/$defs/GoogleAnalyticsAdminV1alphaSubpropertyEventFilterExpression"
          }
        },
        "type": "object"
      },
      "GoogleAnalyticsAdminV1alphaSubpropertyEventFilterExpression": {
        "description": "A logical expression of Subproperty event filters.",
        "properties": {
          "filterCondition": {
            "$ref": "#/$defs/GoogleAnalyticsAdminV1alphaSubpropertyEventFilterCondition"
          },
          "notExpression": {
            "$ref": "#/$defs/GoogleAnalyticsAdminV1alphaSubpropertyEventFilterExpression"
          },
          "orGroup": {
            "$ref": "#/$defs/GoogleAnalyticsAdminV1alphaSubpropertyEventFilterExpressionList"
          }
        },
        "type": "object"
      },
      "GoogleAnalyticsAdminV1alphaSubpropertyEventFilterCondition": {
        "description": "A specific filter expression",
        "properties": {
          "fieldName": {
            "description": "Required. The field that is being filtered.",
            "type": "string"
          },
          "nullFilter": {
            "description": "A filter for null values.",
            "type": "boolean"
          },
          "stringFilter": {
            "$ref": "#/$defs/GoogleAnalyticsAdminV1alphaSubpropertyEventFilterConditionStringFilter"
          }
        },
        "type": "object"
      },
      "GoogleAnalyticsAdminV1alphaSubpropertyEventFilterConditionStringFilter": {
        "description": "A filter for a string-type dimension that matches a particular pattern.",
        "properties": {
          "caseSensitive": {
            "description": "Optional. If true, the string value is case sensitive. If false, the match is case-insensitive.",
            "type": "boolean"
          },
          "matchType": {
            "description": "Required. The match type for the string filter.",
            "enum": [
              "MATCH_TYPE_UNSPECIFIED",
              "EXACT",
              "BEGINS_WITH",
              "ENDS_WITH",
              "CONTAINS",
              "FULL_REGEXP",
              "PARTIAL_REGEXP"
            ],
            "type": "string"
          },
          "value": {
            "description": "Required. The string value used for the matching.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleAnalyticsAdminV1alphaSubpropertyEventFilterExpressionList": {
        "description": "A list of Subproperty event filter expressions.",
        "properties": {
          "filterExpressions": {
            "description": "Required. Unordered list. A list of Subproperty event filter expressions",
            "items": {
              "$ref": "#/$defs/GoogleAnalyticsAdminV1alphaSubpropertyEventFilterExpression"
            },
            "type": "array"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PATCH",
    "url": {
      "$uri": "https://analyticsadmin.googleapis.com//v1alpha/{name}{?updateMask,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A resource message representing a GA4 Subproperty event filter.",
        "**Key properties:**",
        {
          "$ul": [
            "**applyToProperty**: Immutable. Resource name of the Subproperty that uses this filter.",
            "**filterClauses**: Required. Unordered list. Filter clauses that define the SubpropertyEventFilter. All clauses are AND'ed together to determine what data is sent to the subproperty.",
            "**name**: Output only. Format: properties/{ordinary_property_id}/subpropertyEventFilters/{sub_property_event_filter} Example: properties/1234/subpropertyEventFilters/5678"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
