{
  "name": "analyticsadmin_properties_audiences_create",
  "description": "Creates an Audience.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. Example format: properties/1234"
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleAnalyticsAdminV1alphaAudience"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "GoogleAnalyticsAdminV1alphaAudience": {
        "description": "A resource message representing a GA4 Audience.",
        "properties": {
          "adsPersonalizationEnabled": {
            "description": "Output only. It is automatically set by GA to false if this is an NPA Audience and is excluded from ads personalization.",
            "readOnly": true,
            "type": "boolean"
          },
          "description": {
            "description": "Required. The description of the Audience.",
            "type": "string"
          },
          "displayName": {
            "description": "Required. The display name of the Audience.",
            "type": "string"
          },
          "eventTrigger": {
            "$ref": "#/$defs/GoogleAnalyticsAdminV1alphaAudienceEventTrigger"
          },
          "exclusionDurationMode": {
            "description": "Immutable. Specifies how long an exclusion lasts for users that meet the exclusion filter. It is applied to all EXCLUDE filter clauses and is ignored when there is no EXCLUDE filter clause in the Audience.",
            "enum": [
              "AUDIENCE_EXCLUSION_DURATION_MODE_UNSPECIFIED",
              "EXCLUDE_TEMPORARILY",
              "EXCLUDE_PERMANENTLY"
            ],
            "type": "string"
          },
          "filterClauses": {
            "description": "Required. Immutable. Unordered list. Filter clauses that define the Audience. All clauses will be ANDâ€™ed together.",
            "items": {
              "$ref": "#/$defs/GoogleAnalyticsAdminV1alphaAudienceFilterClause"
            },
            "type": "array"
          },
          "membershipDurationDays": {
            "description": "Required. Immutable. The duration a user should stay in an Audience. It cannot be set to more than 540 days.",
            "format": "int32",
            "type": "integer"
          },
          "name": {
            "description": "Output only. The resource name for this Audience resource. Format: properties/{propertyId}/audiences/{audienceId}",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleAnalyticsAdminV1alphaAudienceEventTrigger": {
        "description": "Specifies an event to log when a user joins the Audience.",
        "properties": {
          "eventName": {
            "description": "Required. The event name that will be logged.",
            "type": "string"
          },
          "logCondition": {
            "description": "Required. When to log the event.",
            "enum": [
              "LOG_CONDITION_UNSPECIFIED",
              "AUDIENCE_JOINED",
              "AUDIENCE_MEMBERSHIP_RENEWED"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleAnalyticsAdminV1alphaAudienceFilterClause": {
        "description": "A clause for defining either a simple or sequence filter. A filter can be inclusive (For example, users satisfying the filter clause are included in the Audience) or exclusive (For example, users satisfying the filter clause are excluded from the Audience).",
        "properties": {
          "clauseType": {
            "description": "Required. Specifies whether this is an include or exclude filter clause.",
            "enum": [
              "AUDIENCE_CLAUSE_TYPE_UNSPECIFIED",
              "INCLUDE",
              "EXCLUDE"
            ],
            "type": "string"
          },
          "sequenceFilter": {
            "$ref": "#/$defs/GoogleAnalyticsAdminV1alphaAudienceSequenceFilter"
          },
          "simpleFilter": {
            "$ref": "#/$defs/GoogleAnalyticsAdminV1alphaAudienceSimpleFilter"
          }
        },
        "type": "object"
      },
      "GoogleAnalyticsAdminV1alphaAudienceSequenceFilter": {
        "description": "Defines filters that must occur in a specific order for the user to be a member of the Audience.",
        "properties": {
          "scope": {
            "description": "Required. Immutable. Specifies the scope for this filter.",
            "enum": [
              "AUDIENCE_FILTER_SCOPE_UNSPECIFIED",
              "AUDIENCE_FILTER_SCOPE_WITHIN_SAME_EVENT",
              "AUDIENCE_FILTER_SCOPE_WITHIN_SAME_SESSION",
              "AUDIENCE_FILTER_SCOPE_ACROSS_ALL_SESSIONS"
            ],
            "type": "string"
          },
          "sequenceMaximumDuration": {
            "description": "Optional. Defines the time period in which the whole sequence must occur.",
            "format": "google-duration",
            "type": "string"
          },
          "sequenceSteps": {
            "description": "Required. An ordered sequence of steps. A user must complete each step in order to join the sequence filter.",
            "items": {
              "$ref": "#/$defs/GoogleAnalyticsAdminV1alphaAudienceSequenceFilterAudienceSequenceStep"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleAnalyticsAdminV1alphaAudienceSequenceFilterAudienceSequenceStep": {
        "description": "A condition that must occur in the specified step order for this user to match the sequence.",
        "properties": {
          "constraintDuration": {
            "description": "Optional. When set, this step must be satisfied within the constraint_duration of the previous step (For example, t[i] - t[i-1] <= constraint_duration). If not set, there is no duration requirement (the duration is effectively unlimited). It is ignored for the first step.",
            "format": "google-duration",
            "type": "string"
          },
          "filterExpression": {
            "$ref": "#/$defs/GoogleAnalyticsAdminV1alphaAudienceFilterExpression"
          },
          "immediatelyFollows": {
            "description": "Optional. If true, the event satisfying this step must be the very next event after the event satisfying the last step. If unset or false, this step indirectly follows the prior step; for example, there may be events between the prior step and this step. It is ignored for the first step.",
            "type": "boolean"
          },
          "scope": {
            "description": "Required. Immutable. Specifies the scope for this step.",
            "enum": [
              "AUDIENCE_FILTER_SCOPE_UNSPECIFIED",
              "AUDIENCE_FILTER_SCOPE_WITHIN_SAME_EVENT",
              "AUDIENCE_FILTER_SCOPE_WITHIN_SAME_SESSION",
              "AUDIENCE_FILTER_SCOPE_ACROSS_ALL_SESSIONS"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleAnalyticsAdminV1alphaAudienceFilterExpression": {
        "description": "A logical expression of Audience dimension, metric, or event filters.",
        "properties": {
          "andGroup": {
            "$ref": "#/$defs/GoogleAnalyticsAdminV1alphaAudienceFilterExpressionList"
          },
          "dimensionOrMetricFilter": {
            "$ref": "#/$defs/GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilter"
          },
          "eventFilter": {
            "$ref": "#/$defs/GoogleAnalyticsAdminV1alphaAudienceEventFilter"
          },
          "notExpression": {
            "$ref": "#/$defs/GoogleAnalyticsAdminV1alphaAudienceFilterExpression"
          },
          "orGroup": {
            "$ref": "#/$defs/GoogleAnalyticsAdminV1alphaAudienceFilterExpressionList"
          }
        },
        "type": "object"
      },
      "GoogleAnalyticsAdminV1alphaAudienceFilterExpressionList": {
        "description": "A list of Audience filter expressions.",
        "properties": {
          "filterExpressions": {
            "description": "A list of Audience filter expressions.",
            "items": {
              "$ref": "#/$defs/GoogleAnalyticsAdminV1alphaAudienceFilterExpression"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilter": {
        "description": "A specific filter for a single dimension or metric.",
        "properties": {
          "atAnyPointInTime": {
            "description": "Optional. Indicates whether this filter needs dynamic evaluation or not. If set to true, users join the Audience if they ever met the condition (static evaluation). If unset or set to false, user evaluation for an Audience is dynamic; users are added to an Audience when they meet the conditions and then removed when they no longer meet them. This can only be set when Audience scope is ACROSS_ALL_SESSIONS.",
            "type": "boolean"
          },
          "betweenFilter": {
            "$ref": "#/$defs/GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilterBetweenFilter"
          },
          "fieldName": {
            "description": "Required. Immutable. The dimension name or metric name to filter. If the field name refers to a custom dimension or metric, a scope prefix will be added to the front of the custom dimensions or metric name. For more on scope prefixes or custom dimensions/metrics, reference the [Google Analytics Data API documentation] (https://developers.google.com/analytics/devguides/reporting/data/v1/api-schema#custom_dimensions).",
            "type": "string"
          },
          "inAnyNDayPeriod": {
            "description": "Optional. If set, specifies the time window for which to evaluate data in number of days. If not set, then audience data is evaluated against lifetime data (For example, infinite time window). For example, if set to 1 day, only the current day's data is evaluated. The reference point is the current day when at_any_point_in_time is unset or false. It can only be set when Audience scope is ACROSS_ALL_SESSIONS and cannot be greater than 60 days.",
            "format": "int32",
            "type": "integer"
          },
          "inListFilter": {
            "$ref": "#/$defs/GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilterInListFilter"
          },
          "numericFilter": {
            "$ref": "#/$defs/GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilterNumericFilter"
          },
          "stringFilter": {
            "$ref": "#/$defs/GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilterStringFilter"
          }
        },
        "type": "object"
      },
      "GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilterBetweenFilter": {
        "description": "A filter for numeric or date values between certain values on a dimension or metric.",
        "properties": {
          "fromValue": {
            "$ref": "#/$defs/GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilterNumericValue"
          },
          "toValue": {
            "$ref": "#/$defs/GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilterNumericValue"
          }
        },
        "type": "object"
      },
      "GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilterNumericValue": {
        "description": "To represent a number.",
        "properties": {
          "doubleValue": {
            "description": "Double value.",
            "format": "double",
            "type": "number"
          },
          "int64Value": {
            "description": "Integer value.",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilterInListFilter": {
        "description": "A filter for a string dimension that matches a particular list of options.",
        "properties": {
          "caseSensitive": {
            "description": "Optional. If true, the match is case-sensitive. If false, the match is case-insensitive.",
            "type": "boolean"
          },
          "values": {
            "description": "Required. The list of possible string values to match against. Must be non-empty.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilterNumericFilter": {
        "description": "A filter for numeric or date values on a dimension or metric.",
        "properties": {
          "operation": {
            "description": "Required. The operation applied to a numeric filter.",
            "enum": [
              "OPERATION_UNSPECIFIED",
              "EQUAL",
              "LESS_THAN",
              "GREATER_THAN"
            ],
            "type": "string"
          },
          "value": {
            "$ref": "#/$defs/GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilterNumericValue"
          }
        },
        "type": "object"
      },
      "GoogleAnalyticsAdminV1alphaAudienceDimensionOrMetricFilterStringFilter": {
        "description": "A filter for a string-type dimension that matches a particular pattern.",
        "properties": {
          "caseSensitive": {
            "description": "Optional. If true, the match is case-sensitive. If false, the match is case-insensitive.",
            "type": "boolean"
          },
          "matchType": {
            "description": "Required. The match type for the string filter.",
            "enum": [
              "MATCH_TYPE_UNSPECIFIED",
              "EXACT",
              "BEGINS_WITH",
              "ENDS_WITH",
              "CONTAINS",
              "FULL_REGEXP"
            ],
            "type": "string"
          },
          "value": {
            "description": "Required. The string value to be matched against.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleAnalyticsAdminV1alphaAudienceEventFilter": {
        "description": "A filter that matches events of a single event name. If an event parameter is specified, only the subset of events that match both the single event name and the parameter filter expressions match this event filter.",
        "properties": {
          "eventName": {
            "description": "Required. Immutable. The name of the event to match against.",
            "type": "string"
          },
          "eventParameterFilterExpression": {
            "$ref": "#/$defs/GoogleAnalyticsAdminV1alphaAudienceFilterExpression"
          }
        },
        "type": "object"
      },
      "GoogleAnalyticsAdminV1alphaAudienceSimpleFilter": {
        "description": "Defines a simple filter that a user must satisfy to be a member of the Audience.",
        "properties": {
          "filterExpression": {
            "$ref": "#/$defs/GoogleAnalyticsAdminV1alphaAudienceFilterExpression"
          },
          "scope": {
            "description": "Required. Immutable. Specifies the scope for this filter.",
            "enum": [
              "AUDIENCE_FILTER_SCOPE_UNSPECIFIED",
              "AUDIENCE_FILTER_SCOPE_WITHIN_SAME_EVENT",
              "AUDIENCE_FILTER_SCOPE_WITHIN_SAME_SESSION",
              "AUDIENCE_FILTER_SCOPE_ACROSS_ALL_SESSIONS"
            ],
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://analyticsadmin.googleapis.com//v1alpha/{parent}/audiences{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A resource message representing a GA4 Audience.",
        "**Key properties:**",
        {
          "$ul": [
            "**adsPersonalizationEnabled**: Output only. It is automatically set by GA to false if this is an NPA Audience and is excluded from ads personalization.",
            "**description**: Required. The description of the Audience.",
            "**displayName**: Required. The display name of the Audience.",
            [
              "**eventTrigger**: Specifies an event to log when a user joins the Audience.",
              {
                "$ul": [
                  "**eventName**: Required. The event name that will be logged.",
                  "**logCondition**: Required. When to log the event."
                ]
              }
            ],
            "**exclusionDurationMode**: Immutable. Specifies how long an exclusion lasts for users that meet the exclusion filter. It is applied to all EXCLUDE filter clauses and is ignored when there is no EXCLUDE filter clause in the Audience.",
            "**filterClauses**: Required. Immutable. Unordered list. Filter clauses that define the Audience. All clauses will be ANDâ€™ed together.",
            "**membershipDurationDays**: Required. Immutable. The duration a user should stay in an Audience. It cannot be set to more than 540 days.",
            "**name**: Output only. The resource name for this Audience resource. Format: properties/{propertyId}/audiences/{audienceId}"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
