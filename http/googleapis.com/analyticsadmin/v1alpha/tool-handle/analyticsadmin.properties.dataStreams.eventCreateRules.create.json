{
  "name": "analyticsadmin_properties_dataStreams_eventCreateRules_create",
  "description": "Creates an EventCreateRule.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. Example format: properties/123/dataStreams/456"
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleAnalyticsAdminV1alphaEventCreateRule"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "GoogleAnalyticsAdminV1alphaEventCreateRule": {
        "description": "An Event Create Rule defines conditions that will trigger the creation of an entirely new event based upon matched criteria of a source event. Additional mutations of the parameters from the source event can be defined. Unlike Event Edit rules, Event Creation Rules have no defined order. They will all be run independently. Event Edit and Event Create rules can't be used to modify an event created from an Event Create rule.",
        "properties": {
          "destinationEvent": {
            "description": "Required. The name of the new event to be created. This value must: * be less than 40 characters * consist only of letters, digits or _ (underscores) * start with a letter",
            "type": "string"
          },
          "eventConditions": {
            "description": "Required. Must have at least one condition, and can have up to 10 max. Conditions on the source event must match for this rule to be applied.",
            "items": {
              "$ref": "#/$defs/GoogleAnalyticsAdminV1alphaMatchingCondition"
            },
            "type": "array"
          },
          "name": {
            "description": "Output only. Resource name for this EventCreateRule resource. Format: properties/{property}/dataStreams/{data_stream}/eventCreateRules/{event_create_rule}",
            "readOnly": true,
            "type": "string"
          },
          "parameterMutations": {
            "description": "Parameter mutations define parameter behavior on the new event, and are applied in order. A maximum of 20 mutations can be applied.",
            "items": {
              "$ref": "#/$defs/GoogleAnalyticsAdminV1alphaParameterMutation"
            },
            "type": "array"
          },
          "sourceCopyParameters": {
            "description": "If true, the source parameters are copied to the new event. If false, or unset, all non-internal parameters are not copied from the source event. Parameter mutations are applied after the parameters have been copied.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GoogleAnalyticsAdminV1alphaMatchingCondition": {
        "description": "Defines a condition for when an Event Edit or Event Creation rule applies to an event.",
        "properties": {
          "comparisonType": {
            "description": "Required. The type of comparison to be applied to the value.",
            "enum": [
              "COMPARISON_TYPE_UNSPECIFIED",
              "EQUALS",
              "EQUALS_CASE_INSENSITIVE",
              "CONTAINS",
              "CONTAINS_CASE_INSENSITIVE",
              "STARTS_WITH",
              "STARTS_WITH_CASE_INSENSITIVE",
              "ENDS_WITH",
              "ENDS_WITH_CASE_INSENSITIVE",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL",
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL",
              "REGULAR_EXPRESSION",
              "REGULAR_EXPRESSION_CASE_INSENSITIVE"
            ],
            "type": "string"
          },
          "field": {
            "description": "Required. The name of the field that is compared against for the condition. If 'event_name' is specified this condition will apply to the name of the event. Otherwise the condition will apply to a parameter with the specified name. This value cannot contain spaces.",
            "type": "string"
          },
          "negated": {
            "description": "Whether or not the result of the comparison should be negated. For example, if `negated` is true, then 'equals' comparisons would function as 'not equals'.",
            "type": "boolean"
          },
          "value": {
            "description": "Required. The value being compared against for this condition. The runtime implementation may perform type coercion of this value to evaluate this condition based on the type of the parameter value.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleAnalyticsAdminV1alphaParameterMutation": {
        "description": "Defines an event parameter to mutate.",
        "properties": {
          "parameter": {
            "description": "Required. The name of the parameter to mutate. This value must: * be less than 40 characters. * be unique across across all mutations within the rule * consist only of letters, digits or _ (underscores) For event edit rules, the name may also be set to 'event_name' to modify the event_name in place.",
            "type": "string"
          },
          "parameterValue": {
            "description": "Required. The value mutation to perform. * Must be less than 100 characters. * To specify a constant value for the param, use the value's string. * To copy value from another parameter, use syntax like \"[[other_parameter]]\" For more details, see this [help center article](https://support.google.com/analytics/answer/10085872#modify-an-event&zippy=%2Cin-this-article%2Cmodify-parameters).",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://analyticsadmin.googleapis.com//v1alpha/{parent}/eventCreateRules{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "An Event Create Rule defines conditions that will trigger the creation of an entirely new event based upon matched criteria of a source event. Additional mutations of the parameters from the source event can be defined. Unlike Event Edit rules, Event Creation Rules have no defined order. They will all be run independently. Event Edit and Event Create rules can't be used to modify an event created from an Event Create rule.",
        "**Key properties:**",
        {
          "$ul": [
            "**destinationEvent**: Required. The name of the new event to be created. This value must: * be less than 40 characters * consist only of letters, digits or _ (underscores) * start with a letter",
            "**eventConditions**: Required. Must have at least one condition, and can have up to 10 max. Conditions on the source event must match for this rule to be applied.",
            "**name**: Output only. Resource name for this EventCreateRule resource. Format: properties/{property}/dataStreams/{data_stream}/eventCreateRules/{event_create_rule}",
            "**parameterMutations**: Parameter mutations define parameter behavior on the new event, and are applied in order. A maximum of 20 mutations can be applied.",
            "**sourceCopyParameters**: If true, the source parameters are copied to the new event. If false, or unset, all non-internal parameters are not copied from the source event. Parameter mutations are applied after the parameters have been copied."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
