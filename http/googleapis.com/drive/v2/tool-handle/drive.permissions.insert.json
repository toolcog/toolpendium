{
  "name": "drive_permissions_insert",
  "description": "Inserts a permission for a file or shared drive. **Warning:** Concurrent permissions operations on the same file are not supported; only the last update is applied.",
  "parameters": {
    "type": "object",
    "properties": {
      "fileId": {
        "type": "string",
        "description": "The ID for the file or shared drive."
      },
      "emailMessage": {
        "type": "string",
        "description": "A plain text custom message to include in notification emails."
      },
      "enforceSingleParent": {
        "type": "boolean",
        "description": "Deprecated: See `moveToNewOwnersRoot` for details."
      },
      "moveToNewOwnersRoot": {
        "type": "boolean",
        "description": "This parameter will only take effect if the item is not in a shared drive and the request is attempting to transfer the ownership of the item. If set to `true`, the item will be moved to the new owner's My Drive root folder and all prior parents removed. If set to `false`, parents are not changed."
      },
      "sendNotificationEmails": {
        "type": "boolean",
        "description": "Whether to send notification emails when sharing to users or groups. This parameter is ignored and an email is sent if the `role` is `owner`."
      },
      "supportsAllDrives": {
        "type": "boolean",
        "description": "Whether the requesting application supports both My Drives and shared drives."
      },
      "supportsTeamDrives": {
        "type": "boolean",
        "description": "Deprecated: Use `supportsAllDrives` instead."
      },
      "useDomainAdminAccess": {
        "type": "boolean",
        "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if the file ID parameter refers to a shared drive and the requester is an administrator of the domain to which the shared drive belongs."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/Permission"
      }
    },
    "required": [
      "fileId"
    ],
    "$defs": {
      "Permission": {
        "description": "A permission for a file. A permission grants a user, group, domain, or the world access to a file or a folder hierarchy. Some resource methods (such as `permissions.update`) require a `permissionId`. Use the `permissions.list` method to retrieve the ID for a file, folder, or shared drive.",
        "properties": {
          "additionalRoles": {
            "description": "Additional roles for this user. Only `commenter` is currently allowed, though more may be supported in the future.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "authKey": {
            "deprecated": true,
            "description": "Output only. Deprecated.",
            "type": "string"
          },
          "deleted": {
            "description": "Output only. Whether the account associated with this permission has been deleted. This field only pertains to user and group permissions.",
            "type": "boolean"
          },
          "domain": {
            "description": "Output only. The domain name of the entity this permission refers to. This is an output-only field which is present when the permission type is `user`, `group` or `domain`.",
            "type": "string"
          },
          "emailAddress": {
            "description": "Output only. The email address of the user or group this permission refers to. This is an output-only field which is present when the permission type is `user` or `group`.",
            "type": "string"
          },
          "etag": {
            "description": "Output only. The ETag of the permission.",
            "type": "string"
          },
          "expirationDate": {
            "description": "The time at which this permission will expire (RFC 3339 date-time). Expiration dates have the following restrictions: - They can only be set on user and group permissions - The date must be in the future - The date cannot be more than a year in the future - The date can only be set on drive.permissions.update or drive.permissions.patch requests",
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "description": "The ID of the user this permission refers to, and identical to the `permissionId` in the About and Files resources. When making a `drive.permissions.insert` request, exactly one of the `id` or `value` fields must be specified unless the permission type is `anyone`, in which case both `id` and `value` are ignored.",
            "type": "string"
          },
          "kind": {
            "default": "drive#permission",
            "description": "Output only. This is always `drive#permission`.",
            "type": "string"
          },
          "name": {
            "description": "Output only. The name for this permission.",
            "type": "string"
          },
          "pendingOwner": {
            "description": "Whether the account associated with this permission is a pending owner. Only populated for `user` type permissions for files that are not in a shared drive.",
            "type": "boolean"
          },
          "permissionDetails": {
            "description": "Output only. Details of whether the permissions on this shared drive item are inherited or directly on this item. This is an output-only field which is present only for shared drive items.",
            "items": {
              "properties": {
                "additionalRoles": {
                  "description": "Output only. Additional roles for this user. Only `commenter` is currently possible, though more may be supported in the future.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "inherited": {
                  "description": "Output only. Whether this permission is inherited. This field is always populated. This is an output-only field.",
                  "type": "boolean"
                },
                "inheritedFrom": {
                  "description": "Output only. The ID of the item from which this permission is inherited. This is an output-only field.",
                  "type": "string"
                },
                "permissionType": {
                  "description": "Output only. The permission type for this user. While new values may be added in future, the following are currently possible: * `file` * `member`",
                  "type": "string"
                },
                "role": {
                  "description": "Output only. The primary role for this user. While new values may be added in the future, the following are currently possible: * `organizer` * `fileOrganizer` * `writer` * `reader`",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "readOnly": true,
            "type": "array"
          },
          "photoLink": {
            "description": "Output only. A link to the profile photo, if available.",
            "type": "string"
          },
          "role": {
            "description": "The primary role for this user. While new values may be supported in the future, the following are currently allowed: * `owner` * `organizer` * `fileOrganizer` * `writer` * `reader`",
            "type": "string"
          },
          "selfLink": {
            "description": "Output only. A link back to this permission.",
            "type": "string"
          },
          "teamDrivePermissionDetails": {
            "deprecated": true,
            "description": "Output only. Deprecated: Use `permissionDetails` instead.",
            "items": {
              "properties": {
                "additionalRoles": {
                  "deprecated": true,
                  "description": "Output only. Deprecated: Use `permissionDetails/additionalRoles` instead.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "inherited": {
                  "deprecated": true,
                  "description": "Output only. Deprecated: Use `permissionDetails/inherited` instead.",
                  "type": "boolean"
                },
                "inheritedFrom": {
                  "deprecated": true,
                  "description": "Output only. Deprecated: Use `permissionDetails/inheritedFrom` instead.",
                  "type": "string"
                },
                "role": {
                  "deprecated": true,
                  "description": "Output only. Deprecated: Use `permissionDetails/role` instead.",
                  "type": "string"
                },
                "teamDrivePermissionType": {
                  "deprecated": true,
                  "description": "Output only. Deprecated: Use `permissionDetails/permissionType` instead.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "readOnly": true,
            "type": "array"
          },
          "type": {
            "description": "The account type. Allowed values are: * `user` * `group` * `domain` * `anyone`",
            "type": "string"
          },
          "value": {
            "description": "The email address or domain name for the entity. This is used during inserts and is not populated in responses. When making a `drive.permissions.insert` request, exactly one of the `id` or `value` fields must be specified unless the permission type is `anyone`, in which case both `id` and `value` are ignored.",
            "type": "string"
          },
          "view": {
            "description": "Indicates the view for this permission. Only populated for permissions that belong to a view. `published` is the only supported value.",
            "type": "string"
          },
          "withLink": {
            "description": "Whether the link is required for this permission.",
            "type": "boolean"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://www.googleapis.com/drive/v2/files/{fileId}/permissions{?emailMessage,enforceSingleParent,moveToNewOwnersRoot,sendNotificationEmails,supportsAllDrives,supportsTeamDrives,useDomainAdminAccess,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A permission for a file. A permission grants a user, group, domain, or the world access to a file or a folder hierarchy. Some resource methods (such as `permissions.update`) require a `permissionId`. Use the `permissions.list` method to retrieve the ID for a file, folder, or shared drive.",
        "**Key properties:**",
        {
          "$ul": [
            "**additionalRoles**: Additional roles for this user. Only `commenter` is currently allowed, though more may be supported in the future.",
            "**authKey**: Output only. Deprecated.",
            "**deleted**: Output only. Whether the account associated with this permission has been deleted. This field only pertains to user and group permissions.",
            "**domain**: Output only. The domain name of the entity this permission refers to. This is an output-only field which is present when the permission type is `user`, `group` or `domain`.",
            "**emailAddress**: Output only. The email address of the user or group this permission refers to. This is an output-only field which is present when the permission type is `user` or `group`.",
            "**etag**: Output only. The ETag of the permission.",
            "**expirationDate**: The time at which this permission will expire (RFC 3339 date-time). Expiration dates have the following restrictions: - They can only be set on user and group permissions - The date must be in the future - The date cannot be more than a year in the future - The date can only be set on drive.permissions.update or drive.permissions.patch requests",
            "**id**: The ID of the user this permission refers to, and identical to the `permissionId` in the About and Files resources. When making a `drive.permissions.insert` request, exactly one of the `id` or `value` fields must be specified unless the permission type is `anyone`, in which case both `id` and `value` are ignored.",
            "**kind**: Output only. This is always `drive#permission`. (default: drive#permission)",
            "**name**: Output only. The name for this permission.",
            "**pendingOwner**: Whether the account associated with this permission is a pending owner. Only populated for `user` type permissions for files that are not in a shared drive.",
            "**permissionDetails**: Output only. Details of whether the permissions on this shared drive item are inherited or directly on this item. This is an output-only field which is present only for shared drive items.",
            "**photoLink**: Output only. A link to the profile photo, if available.",
            "**role**: The primary role for this user. While new values may be supported in the future, the following are currently allowed: * `owner` * `organizer` * `fileOrganizer` * `writer` * `reader`",
            "**selfLink**: Output only. A link back to this permission.",
            "**teamDrivePermissionDetails**: Output only. Deprecated: Use `permissionDetails` instead.",
            "**type**: The account type. Allowed values are: * `user` * `group` * `domain` * `anyone`",
            "**value**: The email address or domain name for the entity. This is used during inserts and is not populated in responses. When making a `drive.permissions.insert` request, exactly one of the `id` or `value` fields must be specified unless the permission type is `anyone`, in which case both `id` and `value` are ignored.",
            "**view**: Indicates the view for this permission. Only populated for permissions that belong to a view. `published` is the only supported value.",
            "**withLink**: Whether the link is required for this permission."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
