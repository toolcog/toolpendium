{
  "name": "drive_files_patch",
  "description": "Updates a file's metadata and/or content. When calling this method, only populate fields in the request that you want to modify. When updating fields, some fields might change automatically, such as modifiedDate. This method supports patch semantics.",
  "parameters": {
    "type": "object",
    "properties": {
      "fileId": {
        "type": "string",
        "description": "The ID of the file to update."
      },
      "addParents": {
        "type": "string",
        "description": "Comma-separated list of parent IDs to add."
      },
      "convert": {
        "type": "boolean",
        "description": "Deprecated: This parameter has no function."
      },
      "enforceSingleParent": {
        "type": "boolean",
        "description": "Deprecated: Adding files to multiple folders is no longer supported. Use `shortcuts` instead."
      },
      "includeLabels": {
        "type": "string",
        "description": "A comma-separated list of IDs of labels to include in the `labelInfo` part of the response."
      },
      "includePermissionsForView": {
        "type": "string",
        "description": "Specifies which additional view's permissions to include in the response. Only `published` is supported."
      },
      "modifiedDateBehavior": {
        "enum": [
          "fromBody",
          "fromBodyIfNeeded",
          "fromBodyOrNow",
          "noChange",
          "now",
          "nowIfNeeded"
        ],
        "type": "string",
        "description": "Determines the behavior in which `modifiedDate` is updated. This overrides `setModifiedDate`."
      },
      "newRevision": {
        "type": "boolean",
        "description": "Whether a blob upload should create a new revision. If false, the blob data in the current head revision is replaced. If true or not set, a new blob is created as head revision, and previous unpinned revisions are preserved for a short period of time. Pinned revisions are stored indefinitely, using additional storage quota, up to a maximum of 200 revisions. For details on how revisions are retained, see the [Drive Help Center](https://support.google.com/drive/answer/2409045). Note that this field is ignored if there is no payload in the request."
      },
      "ocr": {
        "type": "boolean",
        "description": "Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads."
      },
      "ocrLanguage": {
        "type": "string",
        "description": "If ocr is true, hints at the language to use. Valid values are BCP 47 codes."
      },
      "pinned": {
        "type": "boolean",
        "description": "Whether to pin the new revision. A file can have a maximum of 200 pinned revisions. Note that this field is ignored if there is no payload in the request."
      },
      "removeParents": {
        "type": "string",
        "description": "Comma-separated list of parent IDs to remove."
      },
      "setModifiedDate": {
        "type": "boolean",
        "description": "Whether to set the modified date using the value supplied in the request body. Setting this field to `true` is equivalent to `modifiedDateBehavior=fromBodyOrNow`, and `false` is equivalent to `modifiedDateBehavior=now`. To prevent any changes to the modified date set `modifiedDateBehavior=noChange`."
      },
      "supportsAllDrives": {
        "type": "boolean",
        "description": "Whether the requesting application supports both My Drives and shared drives."
      },
      "supportsTeamDrives": {
        "type": "boolean",
        "description": "Deprecated: Use `supportsAllDrives` instead."
      },
      "timedTextLanguage": {
        "type": "string",
        "description": "The language of the timed text."
      },
      "timedTextTrackName": {
        "type": "string",
        "description": "The timed text track name."
      },
      "updateViewedDate": {
        "type": "boolean",
        "description": "Whether to update the view date after successfully updating the file."
      },
      "useContentAsIndexableText": {
        "type": "boolean",
        "description": "Whether to use the content as indexable text."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/File"
      }
    },
    "required": [
      "fileId"
    ],
    "$defs": {
      "File": {
        "description": "The metadata for a file. Some resource methods (such as `files.update`) require a `fileId`. Use the `files.list` method to retrieve the ID for a file.",
        "properties": {
          "alternateLink": {
            "description": "Output only. A link for opening the file in a relevant Google editor or viewer.",
            "type": "string"
          },
          "appDataContents": {
            "description": "Output only. Whether this file is in the Application Data folder.",
            "type": "boolean"
          },
          "canComment": {
            "deprecated": true,
            "description": "Output only. Deprecated: Use `capabilities/canComment` instead.",
            "type": "boolean"
          },
          "canReadRevisions": {
            "deprecated": true,
            "description": "Output only. Deprecated: Use `capabilities/canReadRevisions` instead.",
            "type": "boolean"
          },
          "capabilities": {
            "description": "Output only. Capabilities the current user has on this file. Each capability corresponds to a fine-grained action that a user may take.",
            "properties": {
              "canAcceptOwnership": {
                "description": "Output only. Whether the current user is the pending owner of the file. Not populated for shared drive files.",
                "type": "boolean"
              },
              "canAddChildren": {
                "description": "Output only. Whether the current user can add children to this folder. This is always false when the item is not a folder.",
                "type": "boolean"
              },
              "canAddFolderFromAnotherDrive": {
                "description": "Output only. Whether the current user can add a folder from another drive (different shared drive or My Drive) to this folder. This is false when the item is not a folder. Only populated for items in shared drives.",
                "type": "boolean"
              },
              "canAddMyDriveParent": {
                "description": "Output only. Whether the current user can add a parent for the item without removing an existing parent in the same request. Not populated for shared drive files.",
                "type": "boolean"
              },
              "canChangeCopyRequiresWriterPermission": {
                "description": "Output only. Whether the current user can change the `copyRequiresWriterPermission` restriction of this file.",
                "type": "boolean"
              },
              "canChangeRestrictedDownload": {
                "deprecated": true,
                "description": "Output only. Deprecated.",
                "type": "boolean"
              },
              "canChangeSecurityUpdateEnabled": {
                "description": "Output only. Whether the current user can change the securityUpdateEnabled field on link share metadata.",
                "type": "boolean"
              },
              "canComment": {
                "description": "Output only. Whether the current user can comment on this file.",
                "type": "boolean"
              },
              "canCopy": {
                "description": "Output only. Whether the current user can copy this file. For an item in a shared drive, whether the current user can copy non-folder descendants of this item, or this item itself if it is not a folder.",
                "type": "boolean"
              },
              "canDelete": {
                "description": "Output only. Whether the current user can delete this file.",
                "type": "boolean"
              },
              "canDeleteChildren": {
                "description": "Output only. Whether the current user can delete children of this folder. This is false when the item is not a folder. Only populated for items in shared drives.",
                "type": "boolean"
              },
              "canDownload": {
                "description": "Output only. Whether the current user can download this file.",
                "type": "boolean"
              },
              "canEdit": {
                "description": "Output only. Whether the current user can edit this file. Other factors may limit the type of changes a user can make to a file. For example, see `canChangeCopyRequiresWriterPermission` or `canModifyContent`.",
                "type": "boolean"
              },
              "canListChildren": {
                "description": "Output only. Whether the current user can list the children of this folder. This is always false when the item is not a folder.",
                "type": "boolean"
              },
              "canModifyContent": {
                "description": "Output only. Whether the current user can modify the content of this file.",
                "type": "boolean"
              },
              "canModifyContentRestriction": {
                "deprecated": true,
                "description": "Deprecated: Output only. Use one of `canModifyEditorContentRestriction`, `canModifyOwnerContentRestriction` or `canRemoveContentRestriction`.",
                "type": "boolean"
              },
              "canModifyEditorContentRestriction": {
                "description": "Output only. Whether the current user can add or modify content restrictions on the file which are editor restricted.",
                "type": "boolean"
              },
              "canModifyLabels": {
                "description": "Output only. Whether the current user can modify the labels on the file.",
                "type": "boolean"
              },
              "canModifyOwnerContentRestriction": {
                "description": "Output only. Whether the current user can add or modify content restrictions which are owner restricted.",
                "type": "boolean"
              },
              "canMoveChildrenOutOfDrive": {
                "description": "Output only. Whether the current user can move children of this folder outside of the shared drive. This is false when the item is not a folder. Only populated for items in shared drives.",
                "type": "boolean"
              },
              "canMoveChildrenOutOfTeamDrive": {
                "deprecated": true,
                "description": "Output only. Deprecated: Use `canMoveChildrenOutOfDrive` instead.",
                "type": "boolean"
              },
              "canMoveChildrenWithinDrive": {
                "description": "Output only. Whether the current user can move children of this folder within this drive. This is false when the item is not a folder. Note that a request to move the child may still fail depending on the current user's access to the child and to the destination folder.",
                "type": "boolean"
              },
              "canMoveChildrenWithinTeamDrive": {
                "deprecated": true,
                "description": "Output only. Deprecated: Use `canMoveChildrenWithinDrive` instead.",
                "type": "boolean"
              },
              "canMoveItemIntoTeamDrive": {
                "deprecated": true,
                "description": "Output only. Deprecated: Use `canMoveItemOutOfDrive` instead.",
                "type": "boolean"
              },
              "canMoveItemOutOfDrive": {
                "description": "Output only. Whether the current user can move this item outside of this drive by changing its parent. Note that a request to change the parent of the item may still fail depending on the new parent that is being added.",
                "type": "boolean"
              },
              "canMoveItemOutOfTeamDrive": {
                "deprecated": true,
                "description": "Output only. Deprecated: Use `canMoveItemOutOfDrive` instead.",
                "type": "boolean"
              },
              "canMoveItemWithinDrive": {
                "description": "Output only. Whether the current user can move this item within this drive. Note that a request to change the parent of the item may still fail depending on the new parent that is being added and the parent that is being removed.",
                "type": "boolean"
              },
              "canMoveItemWithinTeamDrive": {
                "deprecated": true,
                "description": "Output only. Deprecated: Use `canMoveItemWithinDrive` instead.",
                "type": "boolean"
              },
              "canMoveTeamDriveItem": {
                "deprecated": true,
                "description": "Output only. Deprecated: Use `canMoveItemWithinDrive` or `canMoveItemOutOfDrive` instead.",
                "type": "boolean"
              },
              "canReadDrive": {
                "description": "Output only. Whether the current user can read the shared drive to which this file belongs. Only populated for items in shared drives.",
                "type": "boolean"
              },
              "canReadLabels": {
                "description": "Output only. Whether the current user can read the labels on the file.",
                "type": "boolean"
              },
              "canReadRevisions": {
                "description": "Output only. Whether the current user can read the revisions resource of this file. For a shared drive item, whether revisions of non-folder descendants of this item, or this item itself if it is not a folder, can be read.",
                "type": "boolean"
              },
              "canReadTeamDrive": {
                "deprecated": true,
                "description": "Output only. Deprecated: Use `canReadDrive` instead.",
                "type": "boolean"
              },
              "canRemoveChildren": {
                "description": "Output only. Whether the current user can remove children from this folder. This is always false when the item is not a folder. For a folder in a shared drive, use `canDeleteChildren` or `canTrashChildren` instead.",
                "type": "boolean"
              },
              "canRemoveContentRestriction": {
                "description": "Output only. Whether there is a content restriction on the file that can be removed by the current user.",
                "type": "boolean"
              },
              "canRemoveMyDriveParent": {
                "description": "Output only. Whether the current user can remove a parent from the item without adding another parent in the same request. Not populated for shared drive files.",
                "type": "boolean"
              },
              "canRename": {
                "description": "Output only. Whether the current user can rename this file.",
                "type": "boolean"
              },
              "canShare": {
                "description": "Output only. Whether the current user can modify the sharing settings for this file.",
                "type": "boolean"
              },
              "canTrash": {
                "description": "Output only. Whether the current user can move this file to trash.",
                "type": "boolean"
              },
              "canTrashChildren": {
                "description": "Output only. Whether the current user can trash children of this folder. This is false when the item is not a folder. Only populated for items in shared drives.",
                "type": "boolean"
              },
              "canUntrash": {
                "description": "Output only. Whether the current user can restore this file from trash.",
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "contentRestrictions": {
            "description": "Restrictions for accessing the content of the file. Only populated if such a restriction exists.",
            "items": {
              "$ref": "#/$defs/ContentRestriction"
            },
            "type": "array"
          },
          "copyRequiresWriterPermission": {
            "description": "Whether the options to copy, print, or download this file, should be disabled for readers and commenters.",
            "type": "boolean"
          },
          "copyable": {
            "deprecated": true,
            "description": "Output only. Deprecated: Use `capabilities/canCopy` instead.",
            "type": "boolean"
          },
          "createdDate": {
            "description": "Create time for this file (formatted RFC 3339 timestamp).",
            "format": "date-time",
            "type": "string"
          },
          "defaultOpenWithLink": {
            "description": "Output only. A link to open this file with the user's default app for this file. Only populated when the drive.apps.readonly scope is used.",
            "type": "string"
          },
          "description": {
            "description": "A short description of the file.",
            "type": "string"
          },
          "downloadUrl": {
            "description": "Output only. Short lived download URL for the file. This field is only populated for files with content stored in Google Drive; it is not populated for Google Docs or shortcut files.",
            "type": "string"
          },
          "driveId": {
            "description": "Output only. ID of the shared drive the file resides in. Only populated for items in shared drives.",
            "type": "string"
          },
          "editable": {
            "deprecated": true,
            "description": "Output only. Deprecated: Use `capabilities/canEdit` instead.",
            "type": "boolean"
          },
          "embedLink": {
            "description": "Output only. A link for embedding the file.",
            "type": "string"
          },
          "etag": {
            "description": "Output only. ETag of the file.",
            "type": "string"
          },
          "explicitlyTrashed": {
            "description": "Output only. Whether this file has been explicitly trashed, as opposed to recursively trashed.",
            "type": "boolean"
          },
          "exportLinks": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Output only. Links for exporting Docs Editors files to specific formats.",
            "readOnly": true,
            "type": "object"
          },
          "fileExtension": {
            "description": "Output only. The final component of `fullFileExtension` with trailing text that does not appear to be part of the extension removed. This field is only populated for files with content stored in Google Drive; it is not populated for Docs Editors or shortcut files.",
            "type": "string"
          },
          "fileSize": {
            "description": "Output only. Size in bytes of blobs and first party editor files. Won't be populated for files that have no size, like shortcuts and folders.",
            "format": "int64",
            "type": "string"
          },
          "folderColorRgb": {
            "description": "Folder color as an RGB hex string if the file is a folder or a shortcut to a folder. The list of supported colors is available in the folderColorPalette field of the About resource. If an unsupported color is specified, it will be changed to the closest color in the palette.",
            "type": "string"
          },
          "fullFileExtension": {
            "description": "Output only. The full file extension; extracted from the title. May contain multiple concatenated extensions, such as \"tar.gz\". Removing an extension from the title does not clear this field; however, changing the extension on the title does update this field. This field is only populated for files with content stored in Google Drive; it is not populated for Docs Editors or shortcut files.",
            "type": "string"
          },
          "hasAugmentedPermissions": {
            "description": "Output only. Whether there are permissions directly on this file. This field is only populated for items in shared drives.",
            "type": "boolean"
          },
          "hasThumbnail": {
            "description": "Output only. Whether this file has a thumbnail. This does not indicate whether the requesting app has access to the thumbnail. To check access, look for the presence of the thumbnailLink field.",
            "type": "boolean"
          },
          "headRevisionId": {
            "description": "Output only. The ID of the file's head revision. This field is only populated for files with content stored in Google Drive; it is not populated for Docs Editors or shortcut files.",
            "type": "string"
          },
          "iconLink": {
            "description": "Output only. A link to the file's icon.",
            "type": "string"
          },
          "id": {
            "description": "The ID of the file.",
            "type": "string"
          },
          "imageMediaMetadata": {
            "description": "Output only. Metadata about image media. This will only be present for image types, and its contents will depend on what can be parsed from the image content.",
            "properties": {
              "aperture": {
                "description": "Output only. The aperture used to create the photo (f-number).",
                "format": "float",
                "type": "number"
              },
              "cameraMake": {
                "description": "Output only. The make of the camera used to create the photo.",
                "type": "string"
              },
              "cameraModel": {
                "description": "Output only. The model of the camera used to create the photo.",
                "type": "string"
              },
              "colorSpace": {
                "description": "Output only. The color space of the photo.",
                "type": "string"
              },
              "date": {
                "description": "Output only. The date and time the photo was taken (EXIF format timestamp).",
                "type": "string"
              },
              "exposureBias": {
                "description": "Output only. The exposure bias of the photo (APEX value).",
                "format": "float",
                "type": "number"
              },
              "exposureMode": {
                "description": "Output only. The exposure mode used to create the photo.",
                "type": "string"
              },
              "exposureTime": {
                "description": "Output only. The length of the exposure, in seconds.",
                "format": "float",
                "type": "number"
              },
              "flashUsed": {
                "description": "Output only. Whether a flash was used to create the photo.",
                "type": "boolean"
              },
              "focalLength": {
                "description": "Output only. The focal length used to create the photo, in millimeters.",
                "format": "float",
                "type": "number"
              },
              "height": {
                "description": "Output only. The height of the image in pixels.",
                "format": "int32",
                "type": "integer"
              },
              "isoSpeed": {
                "description": "Output only. The ISO speed used to create the photo.",
                "format": "int32",
                "type": "integer"
              },
              "lens": {
                "description": "Output only. The lens used to create the photo.",
                "type": "string"
              },
              "location": {
                "description": "Output only. Geographic location information stored in the image.",
                "properties": {
                  "altitude": {
                    "description": "Output only. The altitude stored in the image.",
                    "format": "double",
                    "type": "number"
                  },
                  "latitude": {
                    "description": "Output only. The latitude stored in the image.",
                    "format": "double",
                    "type": "number"
                  },
                  "longitude": {
                    "description": "Output only. The longitude stored in the image.",
                    "format": "double",
                    "type": "number"
                  }
                },
                "type": "object"
              },
              "maxApertureValue": {
                "description": "Output only. The smallest f-number of the lens at the focal length used to create the photo (APEX value).",
                "format": "float",
                "type": "number"
              },
              "meteringMode": {
                "description": "Output only. The metering mode used to create the photo.",
                "type": "string"
              },
              "rotation": {
                "description": "Output only. The number of clockwise 90 degree rotations applied from the image's original orientation.",
                "format": "int32",
                "type": "integer"
              },
              "sensor": {
                "description": "Output only. The type of sensor used to create the photo.",
                "type": "string"
              },
              "subjectDistance": {
                "description": "Output only. The distance to the subject of the photo, in meters.",
                "format": "int32",
                "type": "integer"
              },
              "whiteBalance": {
                "description": "Output only. The white balance mode used to create the photo.",
                "type": "string"
              },
              "width": {
                "description": "Output only. The width of the image in pixels.",
                "format": "int32",
                "type": "integer"
              }
            },
            "type": "object"
          },
          "indexableText": {
            "description": "Indexable text attributes for the file (can only be written)",
            "properties": {
              "text": {
                "description": "The text to be indexed for this file.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "isAppAuthorized": {
            "description": "Output only. Whether the file was created or opened by the requesting app.",
            "type": "boolean"
          },
          "kind": {
            "default": "drive#file",
            "description": "Output only. The type of file. This is always `drive#file`.",
            "type": "string"
          },
          "labelInfo": {
            "description": "Output only. An overview of the labels on the file.",
            "properties": {
              "labels": {
                "description": "Output only. The set of labels on the file as requested by the label IDs in the `includeLabels` parameter. By default, no labels are returned.",
                "items": {
                  "$ref": "#/$defs/Label"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "labels": {
            "description": "A group of labels for the file.",
            "properties": {
              "hidden": {
                "deprecated": true,
                "description": "Output only. Deprecated.",
                "type": "boolean"
              },
              "modified": {
                "description": "Output only. Whether the file has been modified by this user.",
                "type": "boolean"
              },
              "restricted": {
                "deprecated": true,
                "description": "Output only. Deprecated: Use `copyRequiresWriterPermission` instead.",
                "type": "boolean"
              },
              "starred": {
                "description": "Whether this file is starred by the user.",
                "type": "boolean"
              },
              "trashed": {
                "description": "Whether this file has been trashed. This label applies to all users accessing the file; however, only owners are allowed to see and untrash files.",
                "type": "boolean"
              },
              "viewed": {
                "description": "Whether this file has been viewed by this user.",
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "lastModifyingUser": {
            "$ref": "#/$defs/User"
          },
          "lastModifyingUserName": {
            "description": "Output only. Name of the last user to modify this file.",
            "type": "string"
          },
          "lastViewedByMeDate": {
            "description": "Last time this file was viewed by the user (formatted RFC 3339 timestamp).",
            "format": "date-time",
            "type": "string"
          },
          "linkShareMetadata": {
            "description": "Contains details about the link URLs that clients are using to refer to this item.",
            "properties": {
              "securityUpdateEligible": {
                "description": "Output only. Whether the file is eligible for security update.",
                "type": "boolean"
              },
              "securityUpdateEnabled": {
                "description": "Output only. Whether the security update is enabled for this file.",
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "markedViewedByMeDate": {
            "description": "Deprecated.",
            "format": "date-time",
            "type": "string"
          },
          "md5Checksum": {
            "description": "Output only. An MD5 checksum for the content of this file. This field is only populated for files with content stored in Google Drive; it is not populated for Docs Editors or shortcut files.",
            "type": "string"
          },
          "mimeType": {
            "description": "The MIME type of the file. This is only mutable on update when uploading new content. This field can be left blank, and the mimetype will be determined from the uploaded content's MIME type.",
            "type": "string"
          },
          "modifiedByMeDate": {
            "description": "Last time this file was modified by the user (formatted RFC 3339 timestamp). Note that setting modifiedDate will also update the modifiedByMe date for the user which set the date.",
            "format": "date-time",
            "type": "string"
          },
          "modifiedDate": {
            "description": "Last time this file was modified by anyone (formatted RFC 3339 timestamp). This is only mutable on update when the setModifiedDate parameter is set.",
            "format": "date-time",
            "type": "string"
          },
          "openWithLinks": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Output only. A map of the id of each of the user's apps to a link to open this file with that app. Only populated when the drive.apps.readonly scope is used.",
            "type": "object"
          },
          "originalFilename": {
            "description": "The original filename of the uploaded content if available, or else the original value of the `title` field. This is only available for files with binary content in Google Drive.",
            "type": "string"
          },
          "ownedByMe": {
            "description": "Output only. Whether the file is owned by the current user. Not populated for items in shared drives.",
            "type": "boolean"
          },
          "ownerNames": {
            "description": "Output only. Name(s) of the owner(s) of this file. Not populated for items in shared drives.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "owners": {
            "description": "Output only. The owner of this file. Only certain legacy files may have more than one owner. This field isn't populated for items in shared drives.",
            "items": {
              "$ref": "#/$defs/User"
            },
            "type": "array"
          },
          "parents": {
            "description": "Collection of parent folders which contain this file. If not specified as part of an insert request, the file will be placed directly in the user's My Drive folder. If not specified as part of a copy request, the file will inherit any discoverable parents of the source file. Update requests can also use the `addParents` and `removeParents` parameters to modify the parents list.",
            "items": {
              "$ref": "#/$defs/ParentReference"
            },
            "type": "array"
          },
          "permissionIds": {
            "description": "Output only. List of permission IDs for users with access to this file.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "permissions": {
            "description": "Output only. The list of permissions for users with access to this file. Not populated for items in shared drives.",
            "items": {
              "$ref": "#/$defs/Permission"
            },
            "type": "array"
          },
          "properties": {
            "description": "The list of properties.",
            "items": {
              "$ref": "#/$defs/Property"
            },
            "type": "array"
          },
          "quotaBytesUsed": {
            "description": "Output only. The number of quota bytes used by this file.",
            "format": "int64",
            "type": "string"
          },
          "resourceKey": {
            "description": "Output only. A key needed to access the item via a shared link.",
            "type": "string"
          },
          "selfLink": {
            "description": "Output only. A link back to this file.",
            "type": "string"
          },
          "sha1Checksum": {
            "description": "Output only. The SHA1 checksum associated with this file, if available. This field is only populated for files with content stored in Google Drive; it is not populated for Docs Editors or shortcut files.",
            "type": "string"
          },
          "sha256Checksum": {
            "description": "Output only. The SHA256 checksum associated with this file, if available. This field is only populated for files with content stored in Google Drive; it is not populated for Docs Editors or shortcut files.",
            "type": "string"
          },
          "shareable": {
            "deprecated": true,
            "description": "Output only. Deprecated: Use `capabilities/canShare` instead.",
            "type": "boolean"
          },
          "shared": {
            "description": "Output only. Whether the file has been shared. Not populated for items in shared drives.",
            "type": "boolean"
          },
          "sharedWithMeDate": {
            "description": "Time at which this file was shared with the user (formatted RFC 3339 timestamp).",
            "format": "date-time",
            "type": "string"
          },
          "sharingUser": {
            "$ref": "#/$defs/User"
          },
          "shortcutDetails": {
            "description": "Shortcut file details. Only populated for shortcut files, which have the mimeType field set to `application/vnd.google-apps.shortcut`.",
            "properties": {
              "targetId": {
                "description": "The ID of the file that this shortcut points to.",
                "type": "string"
              },
              "targetMimeType": {
                "description": "Output only. The MIME type of the file that this shortcut points to. The value of this field is a snapshot of the target's MIME type, captured when the shortcut is created.",
                "type": "string"
              },
              "targetResourceKey": {
                "description": "Output only. The ResourceKey for the target file.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "spaces": {
            "description": "Output only. The list of spaces which contain the file. Supported values are `drive`, `appDataFolder` and `photos`.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "teamDriveId": {
            "deprecated": true,
            "description": "Output only. Deprecated: Use `driveId` instead.",
            "type": "string"
          },
          "thumbnail": {
            "description": "A thumbnail for the file. This will only be used if a standard thumbnail cannot be generated.",
            "properties": {
              "image": {
                "description": "The URL-safe Base64 encoded bytes of the thumbnail image. It should conform to RFC 4648 section 5.",
                "format": "byte",
                "type": "string"
              },
              "mimeType": {
                "description": "The MIME type of the thumbnail.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "thumbnailLink": {
            "description": "Output only. A short-lived link to the file's thumbnail, if available. Typically lasts on the order of hours. Only populated when the requesting app can access the file's content. If the file isn't shared publicly, the URL returned in `Files.thumbnailLink` must be fetched using a credentialed request.",
            "type": "string"
          },
          "thumbnailVersion": {
            "description": "Output only. The thumbnail version for use in thumbnail cache invalidation.",
            "format": "int64",
            "type": "string"
          },
          "title": {
            "description": "The title of this file. Note that for immutable items such as the top level folders of shared drives, My Drive root folder, and Application Data folder the title is constant.",
            "type": "string"
          },
          "trashedDate": {
            "description": "The time that the item was trashed (formatted RFC 3339 timestamp). Only populated for items in shared drives.",
            "format": "date-time",
            "type": "string"
          },
          "trashingUser": {
            "$ref": "#/$defs/User"
          },
          "userPermission": {
            "$ref": "#/$defs/Permission"
          },
          "version": {
            "description": "Output only. A monotonically increasing version number for the file. This reflects every change made to the file on the server, even those not visible to the requesting user.",
            "format": "int64",
            "type": "string"
          },
          "videoMediaMetadata": {
            "description": "Output only. Metadata about video media. This will only be present for video types.",
            "properties": {
              "durationMillis": {
                "description": "Output only. The duration of the video in milliseconds.",
                "format": "int64",
                "type": "string"
              },
              "height": {
                "description": "Output only. The height of the video in pixels.",
                "format": "int32",
                "type": "integer"
              },
              "width": {
                "description": "Output only. The width of the video in pixels.",
                "format": "int32",
                "type": "integer"
              }
            },
            "type": "object"
          },
          "webContentLink": {
            "description": "Output only. A link for downloading the content of the file in a browser using cookie based authentication. In cases where the content is shared publicly, the content can be downloaded without any credentials.",
            "type": "string"
          },
          "webViewLink": {
            "description": "Output only. A link only available on public folders for viewing their static web assets (HTML, CSS, JS, etc) via Google Drive's Website Hosting.",
            "type": "string"
          },
          "writersCanShare": {
            "description": "Whether writers can share the document with other users. Not populated for items in shared drives.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ContentRestriction": {
        "description": "A restriction for accessing the content of the file.",
        "properties": {
          "ownerRestricted": {
            "description": "Whether the content restriction can only be modified or removed by a user who owns the file. For files in shared drives, any user with `organizer` capabilities can modify or remove this content restriction.",
            "type": "boolean"
          },
          "readOnly": {
            "description": "Whether the content of the file is read-only. If a file is read-only, a new revision of the file may not be added, comments may not be added or modified, and the title of the file may not be modified.",
            "type": "boolean"
          },
          "reason": {
            "description": "Reason for why the content of the file is restricted. This is only mutable on requests that also set `readOnly=true`.",
            "type": "string"
          },
          "restrictingUser": {
            "$ref": "#/$defs/User"
          },
          "restrictionDate": {
            "description": "The time at which the content restriction was set (formatted RFC 3339 timestamp). Only populated if readOnly is true.",
            "format": "date-time",
            "type": "string"
          },
          "systemRestricted": {
            "description": "Output only. Whether the content restriction was applied by the system, for example due to an esignature. Users cannot modify or remove system restricted content restrictions.",
            "type": "boolean"
          },
          "type": {
            "description": "Output only. The type of the content restriction. Currently the only possible value is `globalContentRestriction`.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "User": {
        "description": "Information about a Drive user.",
        "properties": {
          "displayName": {
            "description": "Output only. A plain text displayable name for this user.",
            "type": "string"
          },
          "emailAddress": {
            "description": "Output only. The email address of the user.",
            "type": "string"
          },
          "isAuthenticatedUser": {
            "description": "Output only. Whether this user is the same as the authenticated user for whom the request was made.",
            "type": "boolean"
          },
          "kind": {
            "default": "drive#user",
            "description": "Output only. This is always `drive#user`.",
            "type": "string"
          },
          "permissionId": {
            "description": "Output only. The user's ID as visible in the permissions collection.",
            "type": "string"
          },
          "picture": {
            "description": "Output only. The user's profile picture.",
            "properties": {
              "url": {
                "description": "Output Only. A URL that points to a profile picture of this user.",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Label": {
        "description": "Representation of a label and label fields.",
        "properties": {
          "fields": {
            "additionalProperties": {
              "$ref": "#/$defs/LabelField"
            },
            "description": "A map of the fields on the label, keyed by the field's ID.",
            "type": "object"
          },
          "id": {
            "description": "The ID of the label.",
            "type": "string"
          },
          "kind": {
            "default": "drive#label",
            "description": "This is always `drive#label`",
            "type": "string"
          },
          "revisionId": {
            "description": "The revision ID of the label.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "LabelField": {
        "description": "Representation of field, which is a typed key-value pair.",
        "properties": {
          "dateString": {
            "description": "Only present if valueType is dateString. RFC 3339 formatted date: YYYY-MM-DD.",
            "items": {
              "format": "date",
              "type": "string"
            },
            "type": "array"
          },
          "id": {
            "description": "The identifier of this label field.",
            "type": "string"
          },
          "integer": {
            "description": "Only present if `valueType` is `integer`.",
            "items": {
              "format": "int64",
              "type": "string"
            },
            "type": "array"
          },
          "kind": {
            "default": "drive#labelField",
            "description": "This is always `drive#labelField`.",
            "type": "string"
          },
          "selection": {
            "description": "Only present if `valueType` is `selection`",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "text": {
            "description": "Only present if `valueType` is `text`.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "user": {
            "description": "Only present if `valueType` is `user`.",
            "items": {
              "$ref": "#/$defs/User"
            },
            "type": "array"
          },
          "valueType": {
            "description": "The field type. While new values may be supported in the future, the following are currently allowed: * `dateString` * `integer` * `selection` * `text` * `user`",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ParentReference": {
        "description": "A reference to a file's parent. Some resource methods (such as `parents.get`) require a `parentId`. Use the `parents.list` method to retrieve the ID for a parent.",
        "properties": {
          "id": {
            "description": "The ID of the parent.",
            "type": "string"
          },
          "isRoot": {
            "description": "Output only. Whether or not the parent is the root folder.",
            "type": "boolean"
          },
          "kind": {
            "default": "drive#parentReference",
            "description": "Output only. This is always `drive#parentReference`.",
            "type": "string"
          },
          "parentLink": {
            "description": "Output only. A link to the parent.",
            "type": "string"
          },
          "selfLink": {
            "description": "Output only. A link back to this reference.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Permission": {
        "description": "A permission for a file. A permission grants a user, group, domain, or the world access to a file or a folder hierarchy. Some resource methods (such as `permissions.update`) require a `permissionId`. Use the `permissions.list` method to retrieve the ID for a file, folder, or shared drive.",
        "properties": {
          "additionalRoles": {
            "description": "Additional roles for this user. Only `commenter` is currently allowed, though more may be supported in the future.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "authKey": {
            "deprecated": true,
            "description": "Output only. Deprecated.",
            "type": "string"
          },
          "deleted": {
            "description": "Output only. Whether the account associated with this permission has been deleted. This field only pertains to user and group permissions.",
            "type": "boolean"
          },
          "domain": {
            "description": "Output only. The domain name of the entity this permission refers to. This is an output-only field which is present when the permission type is `user`, `group` or `domain`.",
            "type": "string"
          },
          "emailAddress": {
            "description": "Output only. The email address of the user or group this permission refers to. This is an output-only field which is present when the permission type is `user` or `group`.",
            "type": "string"
          },
          "etag": {
            "description": "Output only. The ETag of the permission.",
            "type": "string"
          },
          "expirationDate": {
            "description": "The time at which this permission will expire (RFC 3339 date-time). Expiration dates have the following restrictions: - They can only be set on user and group permissions - The date must be in the future - The date cannot be more than a year in the future - The date can only be set on drive.permissions.update or drive.permissions.patch requests",
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "description": "The ID of the user this permission refers to, and identical to the `permissionId` in the About and Files resources. When making a `drive.permissions.insert` request, exactly one of the `id` or `value` fields must be specified unless the permission type is `anyone`, in which case both `id` and `value` are ignored.",
            "type": "string"
          },
          "kind": {
            "default": "drive#permission",
            "description": "Output only. This is always `drive#permission`.",
            "type": "string"
          },
          "name": {
            "description": "Output only. The name for this permission.",
            "type": "string"
          },
          "pendingOwner": {
            "description": "Whether the account associated with this permission is a pending owner. Only populated for `user` type permissions for files that are not in a shared drive.",
            "type": "boolean"
          },
          "permissionDetails": {
            "description": "Output only. Details of whether the permissions on this shared drive item are inherited or directly on this item. This is an output-only field which is present only for shared drive items.",
            "items": {
              "properties": {
                "additionalRoles": {
                  "description": "Output only. Additional roles for this user. Only `commenter` is currently possible, though more may be supported in the future.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "inherited": {
                  "description": "Output only. Whether this permission is inherited. This field is always populated. This is an output-only field.",
                  "type": "boolean"
                },
                "inheritedFrom": {
                  "description": "Output only. The ID of the item from which this permission is inherited. This is an output-only field.",
                  "type": "string"
                },
                "permissionType": {
                  "description": "Output only. The permission type for this user. While new values may be added in future, the following are currently possible: * `file` * `member`",
                  "type": "string"
                },
                "role": {
                  "description": "Output only. The primary role for this user. While new values may be added in the future, the following are currently possible: * `organizer` * `fileOrganizer` * `writer` * `reader`",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "readOnly": true,
            "type": "array"
          },
          "photoLink": {
            "description": "Output only. A link to the profile photo, if available.",
            "type": "string"
          },
          "role": {
            "description": "The primary role for this user. While new values may be supported in the future, the following are currently allowed: * `owner` * `organizer` * `fileOrganizer` * `writer` * `reader`",
            "type": "string"
          },
          "selfLink": {
            "description": "Output only. A link back to this permission.",
            "type": "string"
          },
          "teamDrivePermissionDetails": {
            "deprecated": true,
            "description": "Output only. Deprecated: Use `permissionDetails` instead.",
            "items": {
              "properties": {
                "additionalRoles": {
                  "deprecated": true,
                  "description": "Output only. Deprecated: Use `permissionDetails/additionalRoles` instead.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "inherited": {
                  "deprecated": true,
                  "description": "Output only. Deprecated: Use `permissionDetails/inherited` instead.",
                  "type": "boolean"
                },
                "inheritedFrom": {
                  "deprecated": true,
                  "description": "Output only. Deprecated: Use `permissionDetails/inheritedFrom` instead.",
                  "type": "string"
                },
                "role": {
                  "deprecated": true,
                  "description": "Output only. Deprecated: Use `permissionDetails/role` instead.",
                  "type": "string"
                },
                "teamDrivePermissionType": {
                  "deprecated": true,
                  "description": "Output only. Deprecated: Use `permissionDetails/permissionType` instead.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "readOnly": true,
            "type": "array"
          },
          "type": {
            "description": "The account type. Allowed values are: * `user` * `group` * `domain` * `anyone`",
            "type": "string"
          },
          "value": {
            "description": "The email address or domain name for the entity. This is used during inserts and is not populated in responses. When making a `drive.permissions.insert` request, exactly one of the `id` or `value` fields must be specified unless the permission type is `anyone`, in which case both `id` and `value` are ignored.",
            "type": "string"
          },
          "view": {
            "description": "Indicates the view for this permission. Only populated for permissions that belong to a view. `published` is the only supported value.",
            "type": "string"
          },
          "withLink": {
            "description": "Whether the link is required for this permission.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "Property": {
        "description": "A key-value pair attached to a file that is either public or private to an application. The following limits apply to file properties: * Maximum of 100 properties total per file * Maximum of 30 private properties per app * Maximum of 30 public properties * Maximum of 124 bytes size limit on (key + value) string in UTF-8 encoding for a single property Some resource methods (such as `properties.update`) require a `propertyKey`. Use the `properties.list` method to retrieve the key for a property.",
        "properties": {
          "etag": {
            "description": "Output only. ETag of the property.",
            "type": "string"
          },
          "key": {
            "description": "The key of this property.",
            "type": "string"
          },
          "kind": {
            "default": "drive#property",
            "description": "Output only. This is always `drive#property`.",
            "type": "string"
          },
          "selfLink": {
            "description": "Output only. The link back to this property.",
            "type": "string"
          },
          "value": {
            "description": "The value of this property.",
            "type": "string"
          },
          "visibility": {
            "description": "The visibility of this property. Allowed values are PRIVATE (default) and PUBLIC. Private properties can only be retrieved using an authenticated request. An authenticated request uses an access token obtained with a OAuth 2 client ID. You cannot use an API key to retrieve private properties.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PATCH",
    "url": {
      "$uri": "https://www.googleapis.com/drive/v2/files/{fileId}{?addParents,convert,enforceSingleParent,includeLabels,includePermissionsForView,modifiedDateBehavior,newRevision,ocr,ocrLanguage,pinned,removeParents,setModifiedDate,supportsAllDrives,supportsTeamDrives,timedTextLanguage,timedTextTrackName,updateViewedDate,useContentAsIndexableText,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The metadata for a file. Some resource methods (such as `files.update`) require a `fileId`. Use the `files.list` method to retrieve the ID for a file.",
        "**Key properties:**",
        {
          "$ul": [
            "**alternateLink**: Output only. A link for opening the file in a relevant Google editor or viewer.",
            "**appDataContents**: Output only. Whether this file is in the Application Data folder.",
            "**canComment**: Output only. Deprecated: Use `capabilities/canComment` instead.",
            "**canReadRevisions**: Output only. Deprecated: Use `capabilities/canReadRevisions` instead.",
            [
              "**capabilities**: Output only. Capabilities the current user has on this file. Each capability corresponds to a fine-grained action that a user may take.",
              {
                "$ul": [
                  "**canAcceptOwnership**: Output only. Whether the current user is the pending owner of the file. Not populated for shared drive files.",
                  "**canAddChildren**: Output only. Whether the current user can add children to this folder. This is always false when the item is not a folder.",
                  "**canAddFolderFromAnotherDrive**: Output only. Whether the current user can add a folder from another drive (different shared drive or My Drive) to this folder. This is false when the item is not a folder. Only populated for items in shared drives.",
                  "**canAddMyDriveParent**: Output only. Whether the current user can add a parent for the item without removing an existing parent in the same request. Not populated for shared drive files.",
                  "**canChangeCopyRequiresWriterPermission**: Output only. Whether the current user can change the `copyRequiresWriterPermission` restriction of this file.",
                  "**canChangeRestrictedDownload**: Output only. Deprecated.",
                  "**canChangeSecurityUpdateEnabled**: Output only. Whether the current user can change the securityUpdateEnabled field on link share metadata.",
                  "**canComment**: Output only. Whether the current user can comment on this file.",
                  "**canCopy**: Output only. Whether the current user can copy this file. For an item in a shared drive, whether the current user can copy non-folder descendants of this item, or this item itself if it is not a folder.",
                  "**canDelete**: Output only. Whether the current user can delete this file.",
                  "**canDeleteChildren**: Output only. Whether the current user can delete children of this folder. This is false when the item is not a folder. Only populated for items in shared drives.",
                  "**canDownload**: Output only. Whether the current user can download this file.",
                  "**canEdit**: Output only. Whether the current user can edit this file. Other factors may limit the type of changes a user can make to a file. For example, see `canChangeCopyRequiresWriterPermission` or `canModifyContent`.",
                  "**canListChildren**: Output only. Whether the current user can list the children of this folder. This is always false when the item is not a folder.",
                  "**canModifyContent**: Output only. Whether the current user can modify the content of this file.",
                  "**canModifyContentRestriction**: Deprecated: Output only. Use one of `canModifyEditorContentRestriction`, `canModifyOwnerContentRestriction` or `canRemoveContentRestriction`.",
                  "**canModifyEditorContentRestriction**: Output only. Whether the current user can add or modify content restrictions on the file which are editor restricted.",
                  "**canModifyLabels**: Output only. Whether the current user can modify the labels on the file.",
                  "**canModifyOwnerContentRestriction**: Output only. Whether the current user can add or modify content restrictions which are owner restricted.",
                  "**canMoveChildrenOutOfDrive**: Output only. Whether the current user can move children of this folder outside of the shared drive. This is false when the item is not a folder. Only populated for items in shared drives.",
                  "**canMoveChildrenOutOfTeamDrive**: Output only. Deprecated: Use `canMoveChildrenOutOfDrive` instead.",
                  "**canMoveChildrenWithinDrive**: Output only. Whether the current user can move children of this folder within this drive. This is false when the item is not a folder. Note that a request to move the child may still fail depending on the current user's access to the child and to the destination folder.",
                  "**canMoveChildrenWithinTeamDrive**: Output only. Deprecated: Use `canMoveChildrenWithinDrive` instead.",
                  "**canMoveItemIntoTeamDrive**: Output only. Deprecated: Use `canMoveItemOutOfDrive` instead.",
                  "**canMoveItemOutOfDrive**: Output only. Whether the current user can move this item outside of this drive by changing its parent. Note that a request to change the parent of the item may still fail depending on the new parent that is being added.",
                  "**canMoveItemOutOfTeamDrive**: Output only. Deprecated: Use `canMoveItemOutOfDrive` instead.",
                  "**canMoveItemWithinDrive**: Output only. Whether the current user can move this item within this drive. Note that a request to change the parent of the item may still fail depending on the new parent that is being added and the parent that is being removed.",
                  "**canMoveItemWithinTeamDrive**: Output only. Deprecated: Use `canMoveItemWithinDrive` instead.",
                  "**canMoveTeamDriveItem**: Output only. Deprecated: Use `canMoveItemWithinDrive` or `canMoveItemOutOfDrive` instead.",
                  "**canReadDrive**: Output only. Whether the current user can read the shared drive to which this file belongs. Only populated for items in shared drives.",
                  "**canReadLabels**: Output only. Whether the current user can read the labels on the file.",
                  "**canReadRevisions**: Output only. Whether the current user can read the revisions resource of this file. For a shared drive item, whether revisions of non-folder descendants of this item, or this item itself if it is not a folder, can be read.",
                  "**canReadTeamDrive**: Output only. Deprecated: Use `canReadDrive` instead.",
                  "**canRemoveChildren**: Output only. Whether the current user can remove children from this folder. This is always false when the item is not a folder. For a folder in a shared drive, use `canDeleteChildren` or `canTrashChildren` instead.",
                  "**canRemoveContentRestriction**: Output only. Whether there is a content restriction on the file that can be removed by the current user.",
                  "**canRemoveMyDriveParent**: Output only. Whether the current user can remove a parent from the item without adding another parent in the same request. Not populated for shared drive files.",
                  "**canRename**: Output only. Whether the current user can rename this file.",
                  "**canShare**: Output only. Whether the current user can modify the sharing settings for this file.",
                  "**canTrash**: Output only. Whether the current user can move this file to trash.",
                  "**canTrashChildren**: Output only. Whether the current user can trash children of this folder. This is false when the item is not a folder. Only populated for items in shared drives.",
                  "**canUntrash**: Output only. Whether the current user can restore this file from trash."
                ]
              }
            ],
            "**contentRestrictions**: Restrictions for accessing the content of the file. Only populated if such a restriction exists.",
            "**copyRequiresWriterPermission**: Whether the options to copy, print, or download this file, should be disabled for readers and commenters.",
            "**copyable**: Output only. Deprecated: Use `capabilities/canCopy` instead.",
            "**createdDate**: Create time for this file (formatted RFC 3339 timestamp).",
            "**defaultOpenWithLink**: Output only. A link to open this file with the user's default app for this file. Only populated when the drive.apps.readonly scope is used.",
            "**description**: A short description of the file.",
            "**downloadUrl**: Output only. Short lived download URL for the file. This field is only populated for files with content stored in Google Drive; it is not populated for Google Docs or shortcut files.",
            "**driveId**: Output only. ID of the shared drive the file resides in. Only populated for items in shared drives.",
            "**editable**: Output only. Deprecated: Use `capabilities/canEdit` instead.",
            "**embedLink**: Output only. A link for embedding the file.",
            "**etag**: Output only. ETag of the file.",
            "**explicitlyTrashed**: Output only. Whether this file has been explicitly trashed, as opposed to recursively trashed.",
            "**exportLinks**: Output only. Links for exporting Docs Editors files to specific formats.",
            "**fileExtension**: Output only. The final component of `fullFileExtension` with trailing text that does not appear to be part of the extension removed. This field is only populated for files with content stored in Google Drive; it is not populated for Docs Editors or shortcut files.",
            "**fileSize**: Output only. Size in bytes of blobs and first party editor files. Won't be populated for files that have no size, like shortcuts and folders.",
            "**folderColorRgb**: Folder color as an RGB hex string if the file is a folder or a shortcut to a folder. The list of supported colors is available in the folderColorPalette field of the About resource. If an unsupported color is specified, it will be changed to the closest color in the palette.",
            "**fullFileExtension**: Output only. The full file extension; extracted from the title. May contain multiple concatenated extensions, such as \"tar.gz\". Removing an extension from the title does not clear this field; however, changing the extension on the title does update this field. This field is only populated for files with content stored in Google Drive; it is not populated for Docs Editors or shortcut files.",
            "**hasAugmentedPermissions**: Output only. Whether there are permissions directly on this file. This field is only populated for items in shared drives.",
            "**hasThumbnail**: Output only. Whether this file has a thumbnail. This does not indicate whether the requesting app has access to the thumbnail. To check access, look for the presence of the thumbnailLink field.",
            "**headRevisionId**: Output only. The ID of the file's head revision. This field is only populated for files with content stored in Google Drive; it is not populated for Docs Editors or shortcut files.",
            "**iconLink**: Output only. A link to the file's icon.",
            "**id**: The ID of the file.",
            [
              "**imageMediaMetadata**: Output only. Metadata about image media. This will only be present for image types, and its contents will depend on what can be parsed from the image content.",
              {
                "$ul": [
                  "**aperture**: Output only. The aperture used to create the photo (f-number).",
                  "**cameraMake**: Output only. The make of the camera used to create the photo.",
                  "**cameraModel**: Output only. The model of the camera used to create the photo.",
                  "**colorSpace**: Output only. The color space of the photo.",
                  "**date**: Output only. The date and time the photo was taken (EXIF format timestamp).",
                  "**exposureBias**: Output only. The exposure bias of the photo (APEX value).",
                  "**exposureMode**: Output only. The exposure mode used to create the photo.",
                  "**exposureTime**: Output only. The length of the exposure, in seconds.",
                  "**flashUsed**: Output only. Whether a flash was used to create the photo.",
                  "**focalLength**: Output only. The focal length used to create the photo, in millimeters.",
                  "**height**: Output only. The height of the image in pixels.",
                  "**isoSpeed**: Output only. The ISO speed used to create the photo.",
                  "**lens**: Output only. The lens used to create the photo.",
                  [
                    "**location**: Output only. Geographic location information stored in the image.",
                    {
                      "$ul": [
                        "**altitude**: Output only. The altitude stored in the image.",
                        "**latitude**: Output only. The latitude stored in the image.",
                        "**longitude**: Output only. The longitude stored in the image."
                      ]
                    }
                  ],
                  "**maxApertureValue**: Output only. The smallest f-number of the lens at the focal length used to create the photo (APEX value).",
                  "**meteringMode**: Output only. The metering mode used to create the photo.",
                  "**rotation**: Output only. The number of clockwise 90 degree rotations applied from the image's original orientation.",
                  "**sensor**: Output only. The type of sensor used to create the photo.",
                  "**subjectDistance**: Output only. The distance to the subject of the photo, in meters.",
                  "**whiteBalance**: Output only. The white balance mode used to create the photo.",
                  "**width**: Output only. The width of the image in pixels."
                ]
              }
            ],
            [
              "**indexableText**: Indexable text attributes for the file (can only be written)",
              {
                "$ul": [
                  "**text**: The text to be indexed for this file."
                ]
              }
            ],
            "**isAppAuthorized**: Output only. Whether the file was created or opened by the requesting app.",
            "**kind**: Output only. The type of file. This is always `drive#file`. (default: drive#file)",
            [
              "**labelInfo**: Output only. An overview of the labels on the file.",
              {
                "$ul": [
                  "**labels**: Output only. The set of labels on the file as requested by the label IDs in the `includeLabels` parameter. By default, no labels are returned."
                ]
              }
            ],
            [
              "**labels**: A group of labels for the file.",
              {
                "$ul": [
                  "**hidden**: Output only. Deprecated.",
                  "**modified**: Output only. Whether the file has been modified by this user.",
                  "**restricted**: Output only. Deprecated: Use `copyRequiresWriterPermission` instead.",
                  "**starred**: Whether this file is starred by the user.",
                  "**trashed**: Whether this file has been trashed. This label applies to all users accessing the file; however, only owners are allowed to see and untrash files.",
                  "**viewed**: Whether this file has been viewed by this user."
                ]
              }
            ],
            [
              "**lastModifyingUser**: Information about a Drive user.",
              {
                "$ul": [
                  "**displayName**: Output only. A plain text displayable name for this user.",
                  "**emailAddress**: Output only. The email address of the user.",
                  "**isAuthenticatedUser**: Output only. Whether this user is the same as the authenticated user for whom the request was made.",
                  "**kind**: Output only. This is always `drive#user`. (default: drive#user)",
                  "**permissionId**: Output only. The user's ID as visible in the permissions collection.",
                  [
                    "**picture**: Output only. The user's profile picture.",
                    {
                      "$ul": [
                        "**url**: Output Only. A URL that points to a profile picture of this user."
                      ]
                    }
                  ]
                ]
              }
            ],
            "**lastModifyingUserName**: Output only. Name of the last user to modify this file.",
            "**lastViewedByMeDate**: Last time this file was viewed by the user (formatted RFC 3339 timestamp).",
            [
              "**linkShareMetadata**: Contains details about the link URLs that clients are using to refer to this item.",
              {
                "$ul": [
                  "**securityUpdateEligible**: Output only. Whether the file is eligible for security update.",
                  "**securityUpdateEnabled**: Output only. Whether the security update is enabled for this file."
                ]
              }
            ],
            "**markedViewedByMeDate**: Deprecated.",
            "**md5Checksum**: Output only. An MD5 checksum for the content of this file. This field is only populated for files with content stored in Google Drive; it is not populated for Docs Editors or shortcut files.",
            "**mimeType**: The MIME type of the file. This is only mutable on update when uploading new content. This field can be left blank, and the mimetype will be determined from the uploaded content's MIME type.",
            "**modifiedByMeDate**: Last time this file was modified by the user (formatted RFC 3339 timestamp). Note that setting modifiedDate will also update the modifiedByMe date for the user which set the date.",
            "**modifiedDate**: Last time this file was modified by anyone (formatted RFC 3339 timestamp). This is only mutable on update when the setModifiedDate parameter is set.",
            "**openWithLinks**: Output only. A map of the id of each of the user's apps to a link to open this file with that app. Only populated when the drive.apps.readonly scope is used.",
            "**originalFilename**: The original filename of the uploaded content if available, or else the original value of the `title` field. This is only available for files with binary content in Google Drive.",
            "**ownedByMe**: Output only. Whether the file is owned by the current user. Not populated for items in shared drives.",
            "**ownerNames**: Output only. Name(s) of the owner(s) of this file. Not populated for items in shared drives.",
            "**owners**: Output only. The owner of this file. Only certain legacy files may have more than one owner. This field isn't populated for items in shared drives.",
            "**parents**: Collection of parent folders which contain this file. If not specified as part of an insert request, the file will be placed directly in the user's My Drive folder. If not specified as part of a copy request, the file will inherit any discoverable parents of the source file. Update requests can also use the `addParents` and `removeParents` parameters to modify the parents list.",
            "**permissionIds**: Output only. List of permission IDs for users with access to this file.",
            "**permissions**: Output only. The list of permissions for users with access to this file. Not populated for items in shared drives.",
            "**properties**: The list of properties.",
            "**quotaBytesUsed**: Output only. The number of quota bytes used by this file.",
            "**resourceKey**: Output only. A key needed to access the item via a shared link.",
            "**selfLink**: Output only. A link back to this file.",
            "**sha1Checksum**: Output only. The SHA1 checksum associated with this file, if available. This field is only populated for files with content stored in Google Drive; it is not populated for Docs Editors or shortcut files.",
            "**sha256Checksum**: Output only. The SHA256 checksum associated with this file, if available. This field is only populated for files with content stored in Google Drive; it is not populated for Docs Editors or shortcut files.",
            "**shareable**: Output only. Deprecated: Use `capabilities/canShare` instead.",
            "**shared**: Output only. Whether the file has been shared. Not populated for items in shared drives.",
            "**sharedWithMeDate**: Time at which this file was shared with the user (formatted RFC 3339 timestamp).",
            [
              "**sharingUser**: Information about a Drive user.",
              {
                "$ul": [
                  "**displayName**: Output only. A plain text displayable name for this user.",
                  "**emailAddress**: Output only. The email address of the user.",
                  "**isAuthenticatedUser**: Output only. Whether this user is the same as the authenticated user for whom the request was made.",
                  "**kind**: Output only. This is always `drive#user`. (default: drive#user)",
                  "**permissionId**: Output only. The user's ID as visible in the permissions collection.",
                  [
                    "**picture**: Output only. The user's profile picture.",
                    {
                      "$ul": [
                        "**url**: Output Only. A URL that points to a profile picture of this user."
                      ]
                    }
                  ]
                ]
              }
            ],
            [
              "**shortcutDetails**: Shortcut file details. Only populated for shortcut files, which have the mimeType field set to `application/vnd.google-apps.shortcut`.",
              {
                "$ul": [
                  "**targetId**: The ID of the file that this shortcut points to.",
                  "**targetMimeType**: Output only. The MIME type of the file that this shortcut points to. The value of this field is a snapshot of the target's MIME type, captured when the shortcut is created.",
                  "**targetResourceKey**: Output only. The ResourceKey for the target file."
                ]
              }
            ],
            "**spaces**: Output only. The list of spaces which contain the file. Supported values are `drive`, `appDataFolder` and `photos`.",
            "**teamDriveId**: Output only. Deprecated: Use `driveId` instead.",
            [
              "**thumbnail**: A thumbnail for the file. This will only be used if a standard thumbnail cannot be generated.",
              {
                "$ul": [
                  "**image**: The URL-safe Base64 encoded bytes of the thumbnail image. It should conform to RFC 4648 section 5.",
                  "**mimeType**: The MIME type of the thumbnail."
                ]
              }
            ],
            "**thumbnailLink**: Output only. A short-lived link to the file's thumbnail, if available. Typically lasts on the order of hours. Only populated when the requesting app can access the file's content. If the file isn't shared publicly, the URL returned in `Files.thumbnailLink` must be fetched using a credentialed request.",
            "**thumbnailVersion**: Output only. The thumbnail version for use in thumbnail cache invalidation.",
            "**title**: The title of this file. Note that for immutable items such as the top level folders of shared drives, My Drive root folder, and Application Data folder the title is constant.",
            "**trashedDate**: The time that the item was trashed (formatted RFC 3339 timestamp). Only populated for items in shared drives.",
            [
              "**trashingUser**: Information about a Drive user.",
              {
                "$ul": [
                  "**displayName**: Output only. A plain text displayable name for this user.",
                  "**emailAddress**: Output only. The email address of the user.",
                  "**isAuthenticatedUser**: Output only. Whether this user is the same as the authenticated user for whom the request was made.",
                  "**kind**: Output only. This is always `drive#user`. (default: drive#user)",
                  "**permissionId**: Output only. The user's ID as visible in the permissions collection.",
                  [
                    "**picture**: Output only. The user's profile picture.",
                    {
                      "$ul": [
                        "**url**: Output Only. A URL that points to a profile picture of this user."
                      ]
                    }
                  ]
                ]
              }
            ],
            [
              "**userPermission**: A permission for a file. A permission grants a user, group, domain, or the world access to a file or a folder hierarchy. Some resource methods (such as `permissions.update`) require a `permissionId`. Use the `permissions.list` method to retrieve the ID for a file, folder, or shared drive.",
              {
                "$ul": [
                  "**additionalRoles**: Additional roles for this user. Only `commenter` is currently allowed, though more may be supported in the future.",
                  "**authKey**: Output only. Deprecated.",
                  "**deleted**: Output only. Whether the account associated with this permission has been deleted. This field only pertains to user and group permissions.",
                  "**domain**: Output only. The domain name of the entity this permission refers to. This is an output-only field which is present when the permission type is `user`, `group` or `domain`.",
                  "**emailAddress**: Output only. The email address of the user or group this permission refers to. This is an output-only field which is present when the permission type is `user` or `group`.",
                  "**etag**: Output only. The ETag of the permission.",
                  "**expirationDate**: The time at which this permission will expire (RFC 3339 date-time). Expiration dates have the following restrictions: - They can only be set on user and group permissions - The date must be in the future - The date cannot be more than a year in the future - The date can only be set on drive.permissions.update or drive.permissions.patch requests",
                  "**id**: The ID of the user this permission refers to, and identical to the `permissionId` in the About and Files resources. When making a `drive.permissions.insert` request, exactly one of the `id` or `value` fields must be specified unless the permission type is `anyone`, in which case both `id` and `value` are ignored.",
                  "**kind**: Output only. This is always `drive#permission`. (default: drive#permission)",
                  "**name**: Output only. The name for this permission.",
                  "**pendingOwner**: Whether the account associated with this permission is a pending owner. Only populated for `user` type permissions for files that are not in a shared drive.",
                  "**permissionDetails**: Output only. Details of whether the permissions on this shared drive item are inherited or directly on this item. This is an output-only field which is present only for shared drive items.",
                  "**photoLink**: Output only. A link to the profile photo, if available.",
                  "**role**: The primary role for this user. While new values may be supported in the future, the following are currently allowed: * `owner` * `organizer` * `fileOrganizer` * `writer` * `reader`",
                  "**selfLink**: Output only. A link back to this permission.",
                  "**teamDrivePermissionDetails**: Output only. Deprecated: Use `permissionDetails` instead.",
                  "**type**: The account type. Allowed values are: * `user` * `group` * `domain` * `anyone`",
                  "**value**: The email address or domain name for the entity. This is used during inserts and is not populated in responses. When making a `drive.permissions.insert` request, exactly one of the `id` or `value` fields must be specified unless the permission type is `anyone`, in which case both `id` and `value` are ignored.",
                  "**view**: Indicates the view for this permission. Only populated for permissions that belong to a view. `published` is the only supported value.",
                  "**withLink**: Whether the link is required for this permission."
                ]
              }
            ],
            "**version**: Output only. A monotonically increasing version number for the file. This reflects every change made to the file on the server, even those not visible to the requesting user.",
            [
              "**videoMediaMetadata**: Output only. Metadata about video media. This will only be present for video types.",
              {
                "$ul": [
                  "**durationMillis**: Output only. The duration of the video in milliseconds.",
                  "**height**: Output only. The height of the video in pixels.",
                  "**width**: Output only. The width of the video in pixels."
                ]
              }
            ],
            "**webContentLink**: Output only. A link for downloading the content of the file in a browser using cookie based authentication. In cases where the content is shared publicly, the content can be downloaded without any credentials.",
            "**webViewLink**: Output only. A link only available on public folders for viewing their static web assets (HTML, CSS, JS, etc) via Google Drive's Website Hosting.",
            "**writersCanShare**: Whether writers can share the document with other users. Not populated for items in shared drives."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
