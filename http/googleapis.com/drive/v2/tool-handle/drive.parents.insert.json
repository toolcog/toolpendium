{
  "name": "drive_parents_insert",
  "description": "Adds a parent folder for a file.",
  "parameters": {
    "type": "object",
    "properties": {
      "fileId": {
        "type": "string",
        "description": "The ID of the file."
      },
      "enforceSingleParent": {
        "type": "boolean",
        "description": "Deprecated: Adding files to multiple folders is no longer supported. Use `shortcuts` instead."
      },
      "supportsAllDrives": {
        "type": "boolean",
        "description": "Whether the requesting application supports both My Drives and shared drives."
      },
      "supportsTeamDrives": {
        "type": "boolean",
        "description": "Deprecated: Use `supportsAllDrives` instead."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/ParentReference"
      }
    },
    "required": [
      "fileId"
    ],
    "$defs": {
      "ParentReference": {
        "description": "A reference to a file's parent. Some resource methods (such as `parents.get`) require a `parentId`. Use the `parents.list` method to retrieve the ID for a parent.",
        "properties": {
          "id": {
            "description": "The ID of the parent.",
            "type": "string"
          },
          "isRoot": {
            "description": "Output only. Whether or not the parent is the root folder.",
            "type": "boolean"
          },
          "kind": {
            "default": "drive#parentReference",
            "description": "Output only. This is always `drive#parentReference`.",
            "type": "string"
          },
          "parentLink": {
            "description": "Output only. A link to the parent.",
            "type": "string"
          },
          "selfLink": {
            "description": "Output only. A link back to this reference.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://www.googleapis.com/drive/v2/files/{fileId}/parents{?enforceSingleParent,supportsAllDrives,supportsTeamDrives,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A reference to a file's parent. Some resource methods (such as `parents.get`) require a `parentId`. Use the `parents.list` method to retrieve the ID for a parent.",
        "**Key properties:**",
        {
          "$ul": [
            "**id**: The ID of the parent.",
            "**isRoot**: Output only. Whether or not the parent is the root folder.",
            "**kind**: Output only. This is always `drive#parentReference`. (default: drive#parentReference)",
            "**parentLink**: Output only. A link to the parent.",
            "**selfLink**: Output only. A link back to this reference."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
