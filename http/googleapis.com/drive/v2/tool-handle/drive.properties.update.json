{
  "name": "drive_properties_update",
  "description": "Updates a property.",
  "parameters": {
    "type": "object",
    "properties": {
      "fileId": {
        "type": "string",
        "description": "The ID of the file."
      },
      "propertyKey": {
        "type": "string",
        "description": "The key of the property."
      },
      "visibility": {
        "type": "string",
        "description": "The visibility of the property. Allowed values are PRIVATE and PUBLIC. (Default: PRIVATE)"
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/Property"
      }
    },
    "required": [
      "fileId",
      "propertyKey"
    ],
    "$defs": {
      "Property": {
        "description": "A key-value pair attached to a file that is either public or private to an application. The following limits apply to file properties: * Maximum of 100 properties total per file * Maximum of 30 private properties per app * Maximum of 30 public properties * Maximum of 124 bytes size limit on (key + value) string in UTF-8 encoding for a single property Some resource methods (such as `properties.update`) require a `propertyKey`. Use the `properties.list` method to retrieve the key for a property.",
        "properties": {
          "etag": {
            "description": "Output only. ETag of the property.",
            "type": "string"
          },
          "key": {
            "description": "The key of this property.",
            "type": "string"
          },
          "kind": {
            "default": "drive#property",
            "description": "Output only. This is always `drive#property`.",
            "type": "string"
          },
          "selfLink": {
            "description": "Output only. The link back to this property.",
            "type": "string"
          },
          "value": {
            "description": "The value of this property.",
            "type": "string"
          },
          "visibility": {
            "description": "The visibility of this property. Allowed values are PRIVATE (default) and PUBLIC. Private properties can only be retrieved using an authenticated request. An authenticated request uses an access token obtained with a OAuth 2 client ID. You cannot use an API key to retrieve private properties.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "https://www.googleapis.com/drive/v2/files/{fileId}/properties/{propertyKey}{?visibility,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A key-value pair attached to a file that is either public or private to an application. The following limits apply to file properties: * Maximum of 100 properties total per file * Maximum of 30 private properties per app * Maximum of 30 public properties * Maximum of 124 bytes size limit on (key + value) string in UTF-8 encoding for a single property Some resource methods (such as `properties.update`) require a `propertyKey`. Use the `properties.list` method to retrieve the key for a property.",
        "**Key properties:**",
        {
          "$ul": [
            "**etag**: Output only. ETag of the property.",
            "**key**: The key of this property.",
            "**kind**: Output only. This is always `drive#property`. (default: drive#property)",
            "**selfLink**: Output only. The link back to this property.",
            "**value**: The value of this property.",
            "**visibility**: The visibility of this property. Allowed values are PRIVATE (default) and PUBLIC. Private properties can only be retrieved using an authenticated request. An authenticated request uses an access token obtained with a OAuth 2 client ID. You cannot use an API key to retrieve private properties."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
