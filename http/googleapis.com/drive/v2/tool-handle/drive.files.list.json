{
  "name": "drive_files_list",
  "description": " Lists the user's files. This method accepts the `q` parameter, which is a search query combining one or more search terms. For more information, see the [Search for files & folders](/drive/api/guides/search-files) guide. *Note:* This method returns *all* files by default, including trashed files. If you don't want trashed files to appear in the list, use the `trashed=false` query parameter to remove trashed files from the results.",
  "parameters": {
    "type": "object",
    "properties": {
      "corpora": {
        "type": "string",
        "description": "Bodies of items (files/documents) to which the query applies. Supported bodies are `default`, `domain`, `drive` and `allDrives`. Prefer `default` or `drive` to `allDrives` for efficiency."
      },
      "corpus": {
        "enum": [
          "DEFAULT",
          "DOMAIN"
        ],
        "type": "string",
        "description": "Deprecated: The body of items (files/documents) to which the query applies. Use `corpora` instead."
      },
      "driveId": {
        "type": "string",
        "description": "ID of the shared drive to search."
      },
      "includeItemsFromAllDrives": {
        "type": "boolean",
        "description": "Whether both My Drive and shared drive items should be included in results."
      },
      "includeLabels": {
        "type": "string",
        "description": "A comma-separated list of IDs of labels to include in the `labelInfo` part of the response."
      },
      "includePermissionsForView": {
        "type": "string",
        "description": "Specifies which additional view's permissions to include in the response. Only `published` is supported."
      },
      "includeTeamDriveItems": {
        "type": "boolean",
        "description": "Deprecated: Use `includeItemsFromAllDrives` instead."
      },
      "maxResults": {
        "minimum": 0,
        "type": "integer",
        "description": "The maximum number of files to return per page. Partial or empty result pages are possible even before the end of the files list has been reached."
      },
      "orderBy": {
        "type": "string",
        "description": "A comma-separated list of sort keys. Valid keys are `createdDate`, `folder`, `lastViewedByMeDate`, `modifiedByMeDate`, `modifiedDate`, `quotaBytesUsed`, `recency`, `sharedWithMeDate`, `starred`, `title`, and `title_natural`. Each key sorts ascending by default, but may be reversed with the `desc` modifier. Example usage: ?orderBy=folder,modifiedDate desc,title. Please note that there is a current limitation for users with approximately one million files in which the requested sort order is ignored."
      },
      "pageToken": {
        "type": "string",
        "description": "Page token for files."
      },
      "projection": {
        "enum": [
          "BASIC",
          "FULL"
        ],
        "type": "string",
        "description": "Deprecated: This parameter has no function."
      },
      "q": {
        "type": "string",
        "description": "Query string for searching files."
      },
      "spaces": {
        "type": "string",
        "description": "A comma-separated list of spaces to query. Supported values are `drive`, and `appDataFolder`."
      },
      "supportsAllDrives": {
        "type": "boolean",
        "description": "Whether the requesting application supports both My Drives and shared drives."
      },
      "supportsTeamDrives": {
        "type": "boolean",
        "description": "Deprecated: Use `supportsAllDrives` instead."
      },
      "teamDriveId": {
        "type": "string",
        "description": "Deprecated: Use `driveId` instead."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://www.googleapis.com/drive/v2/files{?corpora,corpus,driveId,includeItemsFromAllDrives,includeLabels,includePermissionsForView,includeTeamDriveItems,maxResults,orderBy,pageToken,projection,q,spaces,supportsAllDrives,supportsTeamDrives,teamDriveId,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A list of files.",
        "**Key properties:**",
        {
          "$ul": [
            "**etag**: The ETag of the list.",
            "**incompleteSearch**: Whether the search process was incomplete. If true, then some search results may be missing, since all documents were not searched. This may occur when searching multiple drives with the \"allDrives\" corpora, but all corpora could not be searched. When this happens, it is suggested that clients narrow their query by choosing a different corpus such as \"default\" or \"drive\".",
            "**items**: The list of files. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.",
            "**kind**: This is always `drive#fileList`. (default: drive#fileList)",
            "**nextLink**: A link to the next page of files.",
            "**nextPageToken**: The page token for the next page of files. This will be absent if the end of the files list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results.",
            "**selfLink**: A link back to this list."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
