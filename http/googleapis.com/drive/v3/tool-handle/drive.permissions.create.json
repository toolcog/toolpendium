{
  "name": "drive_permissions_create",
  "description": "Creates a permission for a file or shared drive. **Warning:** Concurrent permissions operations on the same file are not supported; only the last update is applied.",
  "parameters": {
    "type": "object",
    "properties": {
      "fileId": {
        "type": "string",
        "description": "The ID of the file or shared drive."
      },
      "emailMessage": {
        "type": "string",
        "description": "A plain text custom message to include in the notification email."
      },
      "enforceSingleParent": {
        "type": "boolean",
        "description": "Deprecated: See `moveToNewOwnersRoot` for details."
      },
      "moveToNewOwnersRoot": {
        "type": "boolean",
        "description": "This parameter will only take effect if the item is not in a shared drive and the request is attempting to transfer the ownership of the item. If set to `true`, the item will be moved to the new owner's My Drive root folder and all prior parents removed. If set to `false`, parents are not changed."
      },
      "sendNotificationEmail": {
        "type": "boolean",
        "description": "Whether to send a notification email when sharing to users or groups. This defaults to true for users and groups, and is not allowed for other requests. It must not be disabled for ownership transfers."
      },
      "supportsAllDrives": {
        "type": "boolean",
        "description": "Whether the requesting application supports both My Drives and shared drives."
      },
      "supportsTeamDrives": {
        "type": "boolean",
        "description": "Deprecated: Use `supportsAllDrives` instead."
      },
      "transferOwnership": {
        "type": "boolean",
        "description": "Whether to transfer ownership to the specified user and downgrade the current owner to a writer. This parameter is required as an acknowledgement of the side effect."
      },
      "useDomainAdminAccess": {
        "type": "boolean",
        "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if the file ID parameter refers to a shared drive and the requester is an administrator of the domain to which the shared drive belongs."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/Permission"
      }
    },
    "required": [
      "fileId"
    ],
    "$defs": {
      "Permission": {
        "description": "A permission for a file. A permission grants a user, group, domain, or the world access to a file or a folder hierarchy. Some resource methods (such as `permissions.update`) require a `permissionId`. Use the `permissions.list` method to retrieve the ID for a file, folder, or shared drive.",
        "properties": {
          "allowFileDiscovery": {
            "description": "Whether the permission allows the file to be discovered through search. This is only applicable for permissions of type `domain` or `anyone`.",
            "type": "boolean"
          },
          "deleted": {
            "description": "Output only. Whether the account associated with this permission has been deleted. This field only pertains to user and group permissions.",
            "type": "boolean"
          },
          "displayName": {
            "description": "Output only. The \"pretty\" name of the value of the permission. The following is a list of examples for each type of permission: * `user` - User's full name, as defined for their Google account, such as \"Joe Smith.\" * `group` - Name of the Google Group, such as \"The Company Administrators.\" * `domain` - String domain name, such as \"thecompany.com.\" * `anyone` - No `displayName` is present.",
            "type": "string"
          },
          "domain": {
            "description": "The domain to which this permission refers.",
            "type": "string"
          },
          "emailAddress": {
            "description": "The email address of the user or group to which this permission refers.",
            "type": "string"
          },
          "expirationTime": {
            "description": "The time at which this permission will expire (RFC 3339 date-time). Expiration times have the following restrictions: - They can only be set on user and group permissions - The time must be in the future - The time cannot be more than a year in the future",
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "description": "Output only. The ID of this permission. This is a unique identifier for the grantee, and is published in User resources as `permissionId`. IDs should be treated as opaque values.",
            "type": "string"
          },
          "kind": {
            "default": "drive#permission",
            "description": "Output only. Identifies what kind of resource this is. Value: the fixed string `\"drive#permission\"`.",
            "type": "string"
          },
          "pendingOwner": {
            "description": "Whether the account associated with this permission is a pending owner. Only populated for `user` type permissions for files that are not in a shared drive.",
            "type": "boolean"
          },
          "permissionDetails": {
            "description": "Output only. Details of whether the permissions on this shared drive item are inherited or directly on this item. This is an output-only field which is present only for shared drive items.",
            "items": {
              "properties": {
                "inherited": {
                  "description": "Output only. Whether this permission is inherited. This field is always populated. This is an output-only field.",
                  "type": "boolean"
                },
                "inheritedFrom": {
                  "description": "Output only. The ID of the item from which this permission is inherited. This is an output-only field.",
                  "type": "string"
                },
                "permissionType": {
                  "description": "Output only. The permission type for this user. While new values may be added in future, the following are currently possible: * `file` * `member`",
                  "type": "string"
                },
                "role": {
                  "description": "Output only. The primary role for this user. While new values may be added in the future, the following are currently possible: * `organizer` * `fileOrganizer` * `writer` * `commenter` * `reader`",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "readOnly": true,
            "type": "array"
          },
          "photoLink": {
            "description": "Output only. A link to the user's profile photo, if available.",
            "type": "string"
          },
          "role": {
            "description": "The role granted by this permission. While new values may be supported in the future, the following are currently allowed: * `owner` * `organizer` * `fileOrganizer` * `writer` * `commenter` * `reader`",
            "type": "string"
          },
          "teamDrivePermissionDetails": {
            "deprecated": true,
            "description": "Output only. Deprecated: Output only. Use `permissionDetails` instead.",
            "items": {
              "properties": {
                "inherited": {
                  "deprecated": true,
                  "description": "Deprecated: Output only. Use `permissionDetails/inherited` instead.",
                  "type": "boolean"
                },
                "inheritedFrom": {
                  "deprecated": true,
                  "description": "Deprecated: Output only. Use `permissionDetails/inheritedFrom` instead.",
                  "type": "string"
                },
                "role": {
                  "deprecated": true,
                  "description": "Deprecated: Output only. Use `permissionDetails/role` instead.",
                  "type": "string"
                },
                "teamDrivePermissionType": {
                  "deprecated": true,
                  "description": "Deprecated: Output only. Use `permissionDetails/permissionType` instead.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "readOnly": true,
            "type": "array"
          },
          "type": {
            "description": "The type of the grantee. Valid values are: * `user` * `group` * `domain` * `anyone` When creating a permission, if `type` is `user` or `group`, you must provide an `emailAddress` for the user or group. When `type` is `domain`, you must provide a `domain`. There isn't extra information required for an `anyone` type.",
            "type": "string"
          },
          "view": {
            "description": "Indicates the view for this permission. Only populated for permissions that belong to a view. 'published' is the only supported value.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://www.googleapis.com/drive/v3/files/{fileId}/permissions{?emailMessage,enforceSingleParent,moveToNewOwnersRoot,sendNotificationEmail,supportsAllDrives,supportsTeamDrives,transferOwnership,useDomainAdminAccess,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A permission for a file. A permission grants a user, group, domain, or the world access to a file or a folder hierarchy. Some resource methods (such as `permissions.update`) require a `permissionId`. Use the `permissions.list` method to retrieve the ID for a file, folder, or shared drive.",
        "**Key properties:**",
        {
          "$ul": [
            "**allowFileDiscovery**: Whether the permission allows the file to be discovered through search. This is only applicable for permissions of type `domain` or `anyone`.",
            "**deleted**: Output only. Whether the account associated with this permission has been deleted. This field only pertains to user and group permissions.",
            "**displayName**: Output only. The \"pretty\" name of the value of the permission. The following is a list of examples for each type of permission: * `user` - User's full name, as defined for their Google account, such as \"Joe Smith.\" * `group` - Name of the Google Group, such as \"The Company Administrators.\" * `domain` - String domain name, such as \"thecompany.com.\" * `anyone` - No `displayName` is present.",
            "**domain**: The domain to which this permission refers.",
            "**emailAddress**: The email address of the user or group to which this permission refers.",
            "**expirationTime**: The time at which this permission will expire (RFC 3339 date-time). Expiration times have the following restrictions: - They can only be set on user and group permissions - The time must be in the future - The time cannot be more than a year in the future",
            "**id**: Output only. The ID of this permission. This is a unique identifier for the grantee, and is published in User resources as `permissionId`. IDs should be treated as opaque values.",
            "**kind**: Output only. Identifies what kind of resource this is. Value: the fixed string `\"drive#permission\"`. (default: drive#permission)",
            "**pendingOwner**: Whether the account associated with this permission is a pending owner. Only populated for `user` type permissions for files that are not in a shared drive.",
            "**permissionDetails**: Output only. Details of whether the permissions on this shared drive item are inherited or directly on this item. This is an output-only field which is present only for shared drive items.",
            "**photoLink**: Output only. A link to the user's profile photo, if available.",
            "**role**: The role granted by this permission. While new values may be supported in the future, the following are currently allowed: * `owner` * `organizer` * `fileOrganizer` * `writer` * `commenter` * `reader`",
            "**teamDrivePermissionDetails**: Output only. Deprecated: Output only. Use `permissionDetails` instead.",
            "**type**: The type of the grantee. Valid values are: * `user` * `group` * `domain` * `anyone` When creating a permission, if `type` is `user` or `group`, you must provide an `emailAddress` for the user or group. When `type` is `domain`, you must provide a `domain`. There isn't extra information required for an `anyone` type.",
            "**view**: Indicates the view for this permission. Only populated for permissions that belong to a view. 'published' is the only supported value."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
