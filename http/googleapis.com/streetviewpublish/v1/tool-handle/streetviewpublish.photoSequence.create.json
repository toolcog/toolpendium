{
  "name": "streetviewpublish_photoSequence_create",
  "description": "After the client finishes uploading the PhotoSequence with the returned UploadRef, CreatePhotoSequence extracts a sequence of 360 photos from a video or Extensible Device Metadata (XDM, http://www.xdm.org/) to be published to Street View on Google Maps. `CreatePhotoSequence` returns an Operation, with the PhotoSequence Id set in the `Operation.name` field. This method returns the following error codes: * google.rpc.Code.INVALID_ARGUMENT if the request is malformed. * google.rpc.Code.NOT_FOUND if the upload reference does not exist.",
  "parameters": {
    "type": "object",
    "properties": {
      "inputType": {
        "enum": [
          "INPUT_TYPE_UNSPECIFIED",
          "VIDEO",
          "XDM"
        ],
        "type": "string",
        "description": "Required. The input form of PhotoSequence."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/PhotoSequence"
      }
    },
    "$defs": {
      "PhotoSequence": {
        "description": "A sequence of 360 photos along with metadata.",
        "properties": {
          "captureTimeOverride": {
            "description": "Optional. Absolute time when the photo sequence starts to be captured. If the photo sequence is a video, this is the start time of the video. If this field is populated in input, it overrides the capture time in the video or XDM file.",
            "format": "google-datetime",
            "type": "string"
          },
          "distanceMeters": {
            "description": "Output only. The computed distance of the photo sequence in meters.",
            "format": "double",
            "readOnly": true,
            "type": "number"
          },
          "failureDetails": {
            "$ref": "#/$defs/ProcessingFailureDetails"
          },
          "failureReason": {
            "description": "Output only. If this sequence has processing_state = FAILED, this will contain the reason why it failed. If the processing_state is any other value, this field will be unset.",
            "enum": [
              "PROCESSING_FAILURE_REASON_UNSPECIFIED",
              "LOW_RESOLUTION",
              "DUPLICATE",
              "INSUFFICIENT_GPS",
              "NO_OVERLAP_GPS",
              "INVALID_GPS",
              "FAILED_TO_REFINE_POSITIONS",
              "TAKEDOWN",
              "CORRUPT_VIDEO",
              "INTERNAL",
              "INVALID_VIDEO_FORMAT",
              "INVALID_VIDEO_DIMENSIONS",
              "INVALID_CAPTURE_TIME",
              "GPS_DATA_GAP",
              "JUMPY_GPS",
              "INVALID_IMU",
              "INSUFFICIENT_IMU",
              "INSUFFICIENT_OVERLAP_TIME_SERIES",
              "IMU_DATA_GAP",
              "UNSUPPORTED_CAMERA",
              "NOT_OUTDOORS",
              "INSUFFICIENT_VIDEO_FRAMES",
              "INSUFFICIENT_MOVEMENT",
              "MAST_DOWN",
              "CAMERA_COVERED"
            ],
            "readOnly": true,
            "type": "string"
          },
          "filename": {
            "description": "Output only. The filename of the upload. Does not include the directory path. Only available if the sequence was uploaded on a platform that provides the filename.",
            "readOnly": true,
            "type": "string"
          },
          "gpsSource": {
            "description": "Input only. If both raw_gps_timeline and the Camera Motion Metadata Track (CAMM) contain GPS measurements, indicate which takes precedence.",
            "enum": [
              "PHOTO_SEQUENCE",
              "CAMERA_MOTION_METADATA_TRACK"
            ],
            "type": "string"
          },
          "id": {
            "description": "Output only. Unique identifier for the photo sequence. This also acts as a long running operation ID if uploading is performed asynchronously.",
            "readOnly": true,
            "type": "string"
          },
          "imu": {
            "$ref": "#/$defs/Imu"
          },
          "photos": {
            "description": "Output only. Photos with increasing timestamps.",
            "items": {
              "$ref": "#/$defs/Photo"
            },
            "readOnly": true,
            "type": "array"
          },
          "processingState": {
            "description": "Output only. The processing state of this sequence.",
            "enum": [
              "PROCESSING_STATE_UNSPECIFIED",
              "PENDING",
              "PROCESSING",
              "PROCESSED",
              "FAILED"
            ],
            "readOnly": true,
            "type": "string"
          },
          "rawGpsTimeline": {
            "description": "Input only. Raw GPS measurements with increasing timestamps from the device that aren't time synced with each photo. These raw measurements will be used to infer the pose of each frame. Required in input when InputType is VIDEO and raw GPS measurements are not in Camera Motion Metadata Track (CAMM). User can indicate which takes precedence using gps_source if raw GPS measurements are provided in both raw_gps_timeline and Camera Motion Metadata Track (CAMM).",
            "items": {
              "$ref": "#/$defs/Pose"
            },
            "type": "array"
          },
          "sequenceBounds": {
            "$ref": "#/$defs/LatLngBounds"
          },
          "uploadReference": {
            "$ref": "#/$defs/UploadRef"
          },
          "uploadTime": {
            "description": "Output only. The time this photo sequence was created in uSV Store service.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "viewCount": {
            "description": "Output only. The total number of views that all the published images in this PhotoSequence have received.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProcessingFailureDetails": {
        "description": "Additional details to accompany the ProcessingFailureReason enum. This message is always expected to be used in conjunction with ProcessingFailureReason, and the oneof value set in this message should match the FailureReason.",
        "properties": {
          "gpsDataGapDetails": {
            "$ref": "#/$defs/GpsDataGapFailureDetails"
          },
          "imuDataGapDetails": {
            "$ref": "#/$defs/ImuDataGapFailureDetails"
          },
          "insufficientGpsDetails": {
            "$ref": "#/$defs/InsufficientGpsFailureDetails"
          },
          "noOverlapGpsDetails": {
            "$ref": "#/$defs/NoOverlapGpsFailureDetails"
          },
          "notOutdoorsDetails": {
            "$ref": "#/$defs/NotOutdoorsFailureDetails"
          }
        },
        "type": "object"
      },
      "GpsDataGapFailureDetails": {
        "description": "Details related to ProcessingFailureReason#GPS_DATA_GAP. If there are multiple GPS data gaps, only the one with the largest duration is reported here.",
        "properties": {
          "gapDuration": {
            "description": "The duration of the gap in GPS data that was found.",
            "format": "google-duration",
            "type": "string"
          },
          "gapStartTime": {
            "description": "Relative time (from the start of the video stream) when the gap started.",
            "format": "google-duration",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ImuDataGapFailureDetails": {
        "description": "Details related to ProcessingFailureReason#IMU_DATA_GAP. If there are multiple IMU data gaps, only the one with the largest duration is reported here.",
        "properties": {
          "gapDuration": {
            "description": "The duration of the gap in IMU data that was found.",
            "format": "google-duration",
            "type": "string"
          },
          "gapStartTime": {
            "description": "Relative time (from the start of the video stream) when the gap started.",
            "format": "google-duration",
            "type": "string"
          }
        },
        "type": "object"
      },
      "InsufficientGpsFailureDetails": {
        "description": "Details related to ProcessingFailureReason#INSUFFICIENT_GPS.",
        "properties": {
          "gpsPointsFound": {
            "description": "The number of GPS points that were found in the video.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NoOverlapGpsFailureDetails": {
        "description": "Details related to PhotoSequenceProcessingFailureReason#NO_OVERLAP_GPS.",
        "properties": {
          "gpsEndTime": {
            "description": "Time of last recorded GPS point.",
            "format": "google-datetime",
            "type": "string"
          },
          "gpsStartTime": {
            "description": "Time of first recorded GPS point.",
            "format": "google-datetime",
            "type": "string"
          },
          "videoEndTime": {
            "description": "End time of video.",
            "format": "google-datetime",
            "type": "string"
          },
          "videoStartTime": {
            "description": "Start time of video.",
            "format": "google-datetime",
            "type": "string"
          }
        },
        "type": "object"
      },
      "NotOutdoorsFailureDetails": {
        "description": "Details related to ProcessingFailureReason#NOT_OUTDOORS. If there are multiple indoor frames found, the first frame is recorded here.",
        "properties": {
          "startTime": {
            "description": "Relative time (from the start of the video stream) when an indoor frame was found.",
            "format": "google-duration",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Imu": {
        "description": "IMU data from the device sensors.",
        "properties": {
          "accelMpsps": {
            "description": "The accelerometer measurements in meters/sec^2 with increasing timestamps from devices.",
            "items": {
              "$ref": "#/$defs/Measurement3d"
            },
            "type": "array"
          },
          "gyroRps": {
            "description": "The gyroscope measurements in radians/sec with increasing timestamps from devices.",
            "items": {
              "$ref": "#/$defs/Measurement3d"
            },
            "type": "array"
          },
          "magUt": {
            "description": "The magnetometer measurements of the magnetic field in microtesla (uT) with increasing timestamps from devices.",
            "items": {
              "$ref": "#/$defs/Measurement3d"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Measurement3d": {
        "description": "A Generic 3d measurement sample.",
        "properties": {
          "captureTime": {
            "description": "The timestamp of the IMU measurement.",
            "format": "google-datetime",
            "type": "string"
          },
          "x": {
            "description": "The sensor measurement in the x axis.",
            "format": "float",
            "type": "number"
          },
          "y": {
            "description": "The sensor measurement in the y axis.",
            "format": "float",
            "type": "number"
          },
          "z": {
            "description": "The sensor measurement in the z axis.",
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "Photo": {
        "description": "Photo is used to store 360 photos along with photo metadata.",
        "properties": {
          "captureTime": {
            "description": "Optional. Absolute time when the photo was captured. When the photo has no exif timestamp, this is used to set a timestamp in the photo metadata.",
            "format": "google-datetime",
            "type": "string"
          },
          "connections": {
            "description": "Optional. Connections to other photos. A connection represents the link from this photo to another photo.",
            "items": {
              "$ref": "#/$defs/Connection"
            },
            "type": "array"
          },
          "downloadUrl": {
            "description": "Output only. The download URL for the photo bytes. This field is set only when GetPhotoRequest.view is set to PhotoView.INCLUDE_DOWNLOAD_URL.",
            "readOnly": true,
            "type": "string"
          },
          "mapsPublishStatus": {
            "description": "Output only. Status in Google Maps, whether this photo was published or rejected.",
            "enum": [
              "UNSPECIFIED_MAPS_PUBLISH_STATUS",
              "PUBLISHED",
              "REJECTED_UNKNOWN"
            ],
            "readOnly": true,
            "type": "string"
          },
          "photoId": {
            "$ref": "#/$defs/PhotoId"
          },
          "places": {
            "description": "Optional. Places where this photo belongs.",
            "items": {
              "$ref": "#/$defs/Place"
            },
            "type": "array"
          },
          "pose": {
            "$ref": "#/$defs/Pose"
          },
          "shareLink": {
            "description": "Output only. The share link for the photo.",
            "readOnly": true,
            "type": "string"
          },
          "thumbnailUrl": {
            "description": "Output only. The thumbnail URL for showing a preview of the given photo.",
            "readOnly": true,
            "type": "string"
          },
          "transferStatus": {
            "description": "Output only. Status of rights transfer on this photo.",
            "enum": [
              "TRANSFER_STATUS_UNKNOWN",
              "NEVER_TRANSFERRED",
              "PENDING",
              "COMPLETED",
              "REJECTED",
              "EXPIRED",
              "CANCELLED",
              "RECEIVED_VIA_TRANSFER"
            ],
            "readOnly": true,
            "type": "string"
          },
          "uploadReference": {
            "$ref": "#/$defs/UploadRef"
          },
          "uploadTime": {
            "description": "Output only. Time when the image was uploaded.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "viewCount": {
            "description": "Output only. View count of the photo.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "Connection": {
        "description": "A connection is the link from a source photo to a destination photo.",
        "properties": {
          "target": {
            "$ref": "#/$defs/PhotoId"
          }
        },
        "type": "object"
      },
      "PhotoId": {
        "description": "Identifier for a Photo.",
        "properties": {
          "id": {
            "description": "A unique identifier for a photo.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Place": {
        "description": "Place metadata for an entity.",
        "properties": {
          "languageCode": {
            "description": "Output only. The language_code that the name is localized with. This should be the language_code specified in the request, but may be a fallback.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "Output only. The name of the place, localized to the language_code.",
            "readOnly": true,
            "type": "string"
          },
          "placeId": {
            "description": "Place identifier, as described in https://developers.google.com/places/place-id.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Pose": {
        "description": "Raw pose measurement for an entity.",
        "properties": {
          "accuracyMeters": {
            "description": "The estimated horizontal accuracy of this pose in meters with 68% confidence (one standard deviation). For example, on Android, this value is available from this method: https://developer.android.com/reference/android/location/Location#getAccuracy(). Other platforms have different methods of obtaining similar accuracy estimations.",
            "format": "float",
            "type": "number"
          },
          "altitude": {
            "description": "Altitude of the pose in meters above WGS84 ellipsoid. NaN indicates an unmeasured quantity.",
            "format": "double",
            "type": "number"
          },
          "gpsRecordTimestampUnixEpoch": {
            "description": "Time of the GPS record since UTC epoch.",
            "format": "google-datetime",
            "type": "string"
          },
          "heading": {
            "description": "The following pose parameters pertain to the center of the photo. They match https://developers.google.com/streetview/spherical-metadata. Compass heading, measured at the center of the photo in degrees clockwise from North. Value must be >=0 and <360. NaN indicates an unmeasured quantity.",
            "format": "double",
            "type": "number"
          },
          "latLngPair": {
            "$ref": "#/$defs/LatLng"
          },
          "level": {
            "$ref": "#/$defs/Level"
          },
          "pitch": {
            "description": "Pitch, measured at the center of the photo in degrees. Value must be >=-90 and <= 90. A value of -90 means looking directly down, and a value of 90 means looking directly up. NaN indicates an unmeasured quantity.",
            "format": "double",
            "type": "number"
          },
          "roll": {
            "description": "Roll, measured in degrees. Value must be >= 0 and <360. A value of 0 means level with the horizon. NaN indicates an unmeasured quantity.",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "LatLng": {
        "description": "An object that represents a latitude/longitude pair. This is expressed as a pair of doubles to represent degrees latitude and degrees longitude. Unless specified otherwise, this object must conform to the WGS84 standard. Values must be within normalized ranges.",
        "properties": {
          "latitude": {
            "description": "The latitude in degrees. It must be in the range [-90.0, +90.0].",
            "format": "double",
            "type": "number"
          },
          "longitude": {
            "description": "The longitude in degrees. It must be in the range [-180.0, +180.0].",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "Level": {
        "description": "Level information containing level number and its corresponding name.",
        "properties": {
          "name": {
            "description": "Required. A name assigned to this Level, restricted to 3 characters. Consider how the elevator buttons would be labeled for this level if there was an elevator.",
            "type": "string"
          },
          "number": {
            "description": "Optional. Floor number, used for ordering. 0 indicates the ground level, 1 indicates the first level above ground level, -1 indicates the first level under ground level. Non-integer values are OK.",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "UploadRef": {
        "description": "Upload reference for media files.",
        "properties": {
          "uploadUrl": {
            "description": "An upload reference should be unique for each user. It follows the form: \"https://streetviewpublish.googleapis.com/media/user/{account_id}/photo/{upload_reference}\"",
            "type": "string"
          }
        },
        "type": "object"
      },
      "LatLngBounds": {
        "description": "A rectangle in geographical coordinates.",
        "properties": {
          "northeast": {
            "$ref": "#/$defs/LatLng"
          },
          "southwest": {
            "$ref": "#/$defs/LatLng"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://streetviewpublish.googleapis.com//v1/photoSequence{?inputType,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "This resource represents a long-running operation that is the result of a network API call.",
        "**Key properties:**",
        {
          "$ul": [
            "**done**: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
            [
              "**error**: The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
              {
                "$ul": [
                  "**code**: The status code, which should be an enum value of google.rpc.Code.",
                  "**details**: A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                  "**message**: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                ]
              }
            ],
            "**metadata**: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
            "**name**: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
            "**response**: The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
