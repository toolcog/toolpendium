{
  "name": "streetviewpublish_photo_get",
  "description": "Gets the metadata of the specified Photo. This method returns the following error codes: * google.rpc.Code.PERMISSION_DENIED if the requesting user did not create the requested Photo. * google.rpc.Code.NOT_FOUND if the requested Photo does not exist. * google.rpc.Code.UNAVAILABLE if the requested Photo is still being indexed.",
  "parameters": {
    "type": "object",
    "properties": {
      "photoId": {
        "type": "string",
        "description": "Required. ID of the Photo."
      },
      "languageCode": {
        "type": "string",
        "description": "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier. If language_code is unspecified, the user's language preference for Google services is used."
      },
      "view": {
        "enum": [
          "BASIC",
          "INCLUDE_DOWNLOAD_URL"
        ],
        "type": "string",
        "description": "Required. Specifies if a download URL for the photo bytes should be returned in the Photo response."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      }
    },
    "required": [
      "photoId"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://streetviewpublish.googleapis.com//v1/photo/{photoId}{?languageCode,view,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Photo is used to store 360 photos along with photo metadata.",
        "**Key properties:**",
        {
          "$ul": [
            "**captureTime**: Optional. Absolute time when the photo was captured. When the photo has no exif timestamp, this is used to set a timestamp in the photo metadata.",
            "**connections**: Optional. Connections to other photos. A connection represents the link from this photo to another photo.",
            "**downloadUrl**: Output only. The download URL for the photo bytes. This field is set only when GetPhotoRequest.view is set to PhotoView.INCLUDE_DOWNLOAD_URL.",
            "**mapsPublishStatus**: Output only. Status in Google Maps, whether this photo was published or rejected.",
            [
              "**photoId**: Identifier for a Photo.",
              {
                "$ul": [
                  "**id**: A unique identifier for a photo."
                ]
              }
            ],
            "**places**: Optional. Places where this photo belongs.",
            [
              "**pose**: Raw pose measurement for an entity.",
              {
                "$ul": [
                  "**accuracyMeters**: The estimated horizontal accuracy of this pose in meters with 68% confidence (one standard deviation). For example, on Android, this value is available from this method: https://developer.android.com/reference/android/location/Location#getAccuracy(). Other platforms have different methods of obtaining similar accuracy estimations.",
                  "**altitude**: Altitude of the pose in meters above WGS84 ellipsoid. NaN indicates an unmeasured quantity.",
                  "**gpsRecordTimestampUnixEpoch**: Time of the GPS record since UTC epoch.",
                  "**heading**: The following pose parameters pertain to the center of the photo. They match https://developers.google.com/streetview/spherical-metadata. Compass heading, measured at the center of the photo in degrees clockwise from North. Value must be >=0 and <360. NaN indicates an unmeasured quantity.",
                  [
                    "**latLngPair**: An object that represents a latitude/longitude pair. This is expressed as a pair of doubles to represent degrees latitude and degrees longitude. Unless specified otherwise, this object must conform to the WGS84 standard. Values must be within normalized ranges.",
                    {
                      "$ul": [
                        "**latitude**: The latitude in degrees. It must be in the range [-90.0, +90.0].",
                        "**longitude**: The longitude in degrees. It must be in the range [-180.0, +180.0]."
                      ]
                    }
                  ],
                  [
                    "**level**: Level information containing level number and its corresponding name.",
                    {
                      "$ul": [
                        "**name**: Required. A name assigned to this Level, restricted to 3 characters. Consider how the elevator buttons would be labeled for this level if there was an elevator.",
                        "**number**: Optional. Floor number, used for ordering. 0 indicates the ground level, 1 indicates the first level above ground level, -1 indicates the first level under ground level. Non-integer values are OK."
                      ]
                    }
                  ],
                  "**pitch**: Pitch, measured at the center of the photo in degrees. Value must be >=-90 and <= 90. A value of -90 means looking directly down, and a value of 90 means looking directly up. NaN indicates an unmeasured quantity.",
                  "**roll**: Roll, measured in degrees. Value must be >= 0 and <360. A value of 0 means level with the horizon. NaN indicates an unmeasured quantity."
                ]
              }
            ],
            "**shareLink**: Output only. The share link for the photo.",
            "**thumbnailUrl**: Output only. The thumbnail URL for showing a preview of the given photo.",
            "**transferStatus**: Output only. Status of rights transfer on this photo.",
            [
              "**uploadReference**: Upload reference for media files.",
              {
                "$ul": [
                  "**uploadUrl**: An upload reference should be unique for each user. It follows the form: \"https://streetviewpublish.googleapis.com/media/user/{account_id}/photo/{upload_reference}\""
                ]
              }
            ],
            "**uploadTime**: Output only. Time when the image was uploaded.",
            "**viewCount**: Output only. View count of the photo."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
