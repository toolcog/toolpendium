{
  "name": "blogger_postUserInfos_get",
  "description": "Gets one post and user info pair, by post_id and user_id.",
  "parameters": {
    "type": "object",
    "properties": {
      "userId": {
        "type": "string"
      },
      "blogId": {
        "type": "string"
      },
      "postId": {
        "type": "string"
      },
      "maxComments": {
        "type": "integer"
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      }
    },
    "required": [
      "userId",
      "blogId",
      "postId"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://blogger.googleapis.com//v3/users/{userId}/blogs/{blogId}/posts/{postId}{?maxComments,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**kind**: The kind of this entity. Always blogger#postUserInfo.",
            [
              "**post**",
              {
                "$ul": [
                  [
                    "**author**: The author of this Post.",
                    {
                      "$ul": [
                        "**displayName**: The display name.",
                        "**id**: The identifier of the creator.",
                        [
                          "**image**: The creator's avatar.",
                          {
                            "$ul": [
                              "**url**: The creator's avatar URL."
                            ]
                          }
                        ],
                        "**url**: The URL of the creator's Profile page."
                      ]
                    }
                  ],
                  [
                    "**blog**: Data about the blog containing this Post.",
                    {
                      "$ul": [
                        "**id**: The identifier of the Blog that contains this Post."
                      ]
                    }
                  ],
                  "**content**: The content of the Post. May contain HTML markup.",
                  "**customMetaData**: The JSON meta-data for the Post.",
                  "**etag**: Etag of the resource.",
                  "**id**: The identifier of this Post.",
                  "**images**: Display image for the Post.",
                  "**kind**: The kind of this entity. Always blogger#post.",
                  "**labels**: The list of labels this Post was tagged with.",
                  [
                    "**location**: The location for geotagged posts.",
                    {
                      "$ul": [
                        "**lat**: Location's latitude.",
                        "**lng**: Location's longitude.",
                        "**name**: Location name.",
                        "**span**: Location's viewport span. Can be used when rendering a map preview."
                      ]
                    }
                  ],
                  "**published**: RFC 3339 date-time when this Post was published.",
                  "**readerComments**: Comment control and display setting for readers of this post.",
                  [
                    "**replies**: The container of comments on this Post.",
                    {
                      "$ul": [
                        "**items**: The List of Comments for this Post.",
                        "**selfLink**: The URL of the comments on this post.",
                        "**totalItems**: The count of comments on this post."
                      ]
                    }
                  ],
                  "**selfLink**: The API REST URL to fetch this resource from.",
                  "**status**: Status of the post. Only set for admin-level requests.",
                  "**title**: The title of the Post.",
                  "**titleLink**: The title link URL, similar to atom's related link.",
                  "**trashed**: RFC 3339 date-time when this Post was last trashed.",
                  "**updated**: RFC 3339 date-time when this Post was last updated.",
                  "**url**: The URL where this Post is displayed."
                ]
              }
            ],
            [
              "**post_user_info**",
              {
                "$ul": [
                  "**blogId**: ID of the Blog that the post resource belongs to.",
                  "**hasEditAccess**: True if the user has Author level access to the post.",
                  "**kind**: The kind of this entity. Always blogger#postPerUserInfo.",
                  "**postId**: ID of the Post resource.",
                  "**userId**: ID of the User."
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
