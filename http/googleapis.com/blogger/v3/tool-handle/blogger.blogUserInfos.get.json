{
  "name": "blogger_blogUserInfos_get",
  "description": "Gets one blog and user info pair by blog id and user id.",
  "parameters": {
    "type": "object",
    "properties": {
      "userId": {
        "type": "string"
      },
      "blogId": {
        "type": "string"
      },
      "maxPosts": {
        "type": "integer"
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      }
    },
    "required": [
      "userId",
      "blogId"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://blogger.googleapis.com//v3/users/{userId}/blogs/{blogId}{?maxPosts,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**blog**",
              {
                "$ul": [
                  "**customMetaData**: The JSON custom meta-data for the Blog.",
                  "**description**: The description of this blog. This is displayed underneath the title.",
                  "**id**: The identifier for this resource.",
                  "**kind**: The kind of this entry. Always blogger#blog.",
                  [
                    "**locale**: The locale this Blog is set to.",
                    {
                      "$ul": [
                        "**country**: The country this blog's locale is set to.",
                        "**language**: The language this blog is authored in.",
                        "**variant**: The language variant this blog is authored in."
                      ]
                    }
                  ],
                  "**name**: The name of this blog. This is displayed as the title.",
                  [
                    "**pages**: The container of pages in this blog.",
                    {
                      "$ul": [
                        "**selfLink**: The URL of the container for pages in this blog.",
                        "**totalItems**: The count of pages in this blog."
                      ]
                    }
                  ],
                  [
                    "**posts**: The container of posts in this blog.",
                    {
                      "$ul": [
                        "**items**: The List of Posts for this Blog.",
                        "**selfLink**: The URL of the container for posts in this blog.",
                        "**totalItems**: The count of posts in this blog."
                      ]
                    }
                  ],
                  "**published**: RFC 3339 date-time when this blog was published.",
                  "**selfLink**: The API REST URL to fetch this resource from.",
                  "**status**: The status of the blog.",
                  "**updated**: RFC 3339 date-time when this blog was last updated.",
                  "**url**: The URL where this blog is published."
                ]
              }
            ],
            [
              "**blog_user_info**",
              {
                "$ul": [
                  "**blogId**: ID of the Blog resource.",
                  "**hasAdminAccess**: True if the user has Admin level access to the blog.",
                  "**kind**: The kind of this entity. Always blogger#blogPerUserInfo.",
                  "**photosAlbumKey**: The Photo Album Key for the user when adding photos to the blog.",
                  "**role**: Access permissions that the user has for the blog (ADMIN, AUTHOR, or READER).",
                  "**userId**: ID of the User."
                ]
              }
            ],
            "**kind**: The kind of this entity. Always blogger#blogUserInfo."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
