{
  "name": "recommendationengine_projects_locations_catalogs_catalogItems_create",
  "description": "Creates a catalog item.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The parent catalog resource name, such as `projects/*/locations/global/catalogs/default_catalog`."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleCloudRecommendationengineV1beta1CatalogItem"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "GoogleCloudRecommendationengineV1beta1CatalogItem": {
        "description": "CatalogItem captures all metadata information of items to be recommended.",
        "properties": {
          "categoryHierarchies": {
            "description": "Required. Catalog item categories. This field is repeated for supporting one catalog item belonging to several parallel category hierarchies. For example, if a shoes product belongs to both [\"Shoes & Accessories\" -> \"Shoes\"] and [\"Sports & Fitness\" -> \"Athletic Clothing\" -> \"Shoes\"], it could be represented as: \"categoryHierarchies\": [ { \"categories\": [\"Shoes & Accessories\", \"Shoes\"]}, { \"categories\": [\"Sports & Fitness\", \"Athletic Clothing\", \"Shoes\"] } ]",
            "items": {
              "$ref": "#/$defs/GoogleCloudRecommendationengineV1beta1CatalogItemCategoryHierarchy"
            },
            "type": "array"
          },
          "description": {
            "description": "Optional. Catalog item description. UTF-8 encoded string with a length limit of 5 KiB.",
            "type": "string"
          },
          "id": {
            "description": "Required. Catalog item identifier. UTF-8 encoded string with a length limit of 128 bytes. This id must be unique among all catalog items within the same catalog. It should also be used when logging user events in order for the user events to be joined with the Catalog.",
            "type": "string"
          },
          "itemAttributes": {
            "$ref": "#/$defs/GoogleCloudRecommendationengineV1beta1FeatureMap"
          },
          "itemGroupId": {
            "description": "Optional. Variant group identifier for prediction results. UTF-8 encoded string with a length limit of 128 bytes. This field must be enabled before it can be used. [Learn more](/recommendations-ai/docs/catalog#item-group-id).",
            "type": "string"
          },
          "languageCode": {
            "description": "Optional. Deprecated. The model automatically detects the text language. Your catalog can include text in different languages, but duplicating catalog items to provide text in multiple languages can result in degraded model performance.",
            "type": "string"
          },
          "productMetadata": {
            "$ref": "#/$defs/GoogleCloudRecommendationengineV1beta1ProductCatalogItem"
          },
          "tags": {
            "description": "Optional. Filtering tags associated with the catalog item. Each tag should be a UTF-8 encoded string with a length limit of 1 KiB. This tag can be used for filtering recommendation results by passing the tag as part of the predict request filter.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "title": {
            "description": "Required. Catalog item title. UTF-8 encoded string with a length limit of 1 KiB.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudRecommendationengineV1beta1CatalogItemCategoryHierarchy": {
        "description": "Category represents catalog item category hierarchy.",
        "properties": {
          "categories": {
            "description": "Required. Catalog item categories. Each category should be a UTF-8 encoded string with a length limit of 2 KiB. Note that the order in the list denotes the specificity (from least to most specific).",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudRecommendationengineV1beta1FeatureMap": {
        "description": "FeatureMap represents extra features that customers want to include in the recommendation model for catalogs/user events as categorical/numerical features.",
        "properties": {
          "categoricalFeatures": {
            "additionalProperties": {
              "$ref": "#/$defs/GoogleCloudRecommendationengineV1beta1FeatureMapStringList"
            },
            "description": "Categorical features that can take on one of a limited number of possible values. Some examples would be the brand/maker of a product, or country of a customer. Feature names and values must be UTF-8 encoded strings. For example: `{ \"colors\": {\"value\": [\"yellow\", \"green\"]}, \"sizes\": {\"value\":[\"S\", \"M\"]}`",
            "type": "object"
          },
          "numericalFeatures": {
            "additionalProperties": {
              "$ref": "#/$defs/GoogleCloudRecommendationengineV1beta1FeatureMapFloatList"
            },
            "description": "Numerical features. Some examples would be the height/weight of a product, or age of a customer. Feature names must be UTF-8 encoded strings. For example: `{ \"lengths_cm\": {\"value\":[2.3, 15.4]}, \"heights_cm\": {\"value\":[8.1, 6.4]} }`",
            "type": "object"
          }
        },
        "type": "object"
      },
      "GoogleCloudRecommendationengineV1beta1FeatureMapStringList": {
        "description": "A list of string features.",
        "properties": {
          "value": {
            "description": "String feature value with a length limit of 128 bytes.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudRecommendationengineV1beta1FeatureMapFloatList": {
        "description": "A list of float features.",
        "properties": {
          "value": {
            "description": "Float feature value.",
            "items": {
              "format": "float",
              "type": "number"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudRecommendationengineV1beta1ProductCatalogItem": {
        "description": "ProductCatalogItem captures item metadata specific to retail products.",
        "properties": {
          "availableQuantity": {
            "description": "Optional. The available quantity of the item.",
            "format": "int64",
            "type": "string"
          },
          "canonicalProductUri": {
            "description": "Optional. Canonical URL directly linking to the item detail page with a length limit of 5 KiB..",
            "type": "string"
          },
          "costs": {
            "additionalProperties": {
              "format": "float",
              "type": "number"
            },
            "description": "Optional. A map to pass the costs associated with the product. For example: {\"manufacturing\": 45.5} The profit of selling this item is computed like so: * If 'exactPrice' is provided, profit = displayPrice - sum(costs) * If 'priceRange' is provided, profit = minPrice - sum(costs)",
            "type": "object"
          },
          "currencyCode": {
            "description": "Optional. Only required if the price is set. Currency code for price/costs. Use three-character ISO-4217 code.",
            "type": "string"
          },
          "exactPrice": {
            "$ref": "#/$defs/GoogleCloudRecommendationengineV1beta1ProductCatalogItemExactPrice"
          },
          "images": {
            "description": "Optional. Product images for the catalog item.",
            "items": {
              "$ref": "#/$defs/GoogleCloudRecommendationengineV1beta1Image"
            },
            "type": "array"
          },
          "priceRange": {
            "$ref": "#/$defs/GoogleCloudRecommendationengineV1beta1ProductCatalogItemPriceRange"
          },
          "stockState": {
            "description": "Optional. Online stock state of the catalog item. Default is `IN_STOCK`.",
            "enum": [
              "STOCK_STATE_UNSPECIFIED",
              "IN_STOCK",
              "OUT_OF_STOCK",
              "PREORDER",
              "BACKORDER"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudRecommendationengineV1beta1ProductCatalogItemExactPrice": {
        "description": "Exact product price.",
        "properties": {
          "displayPrice": {
            "description": "Optional. Display price of the product.",
            "format": "float",
            "type": "number"
          },
          "originalPrice": {
            "description": "Optional. Price of the product without any discount. If zero, by default set to be the 'displayPrice'.",
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "GoogleCloudRecommendationengineV1beta1Image": {
        "description": "Catalog item thumbnail/detail image.",
        "properties": {
          "height": {
            "description": "Optional. Height of the image in number of pixels.",
            "format": "int32",
            "type": "integer"
          },
          "uri": {
            "description": "Required. URL of the image with a length limit of 5 KiB.",
            "type": "string"
          },
          "width": {
            "description": "Optional. Width of the image in number of pixels.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GoogleCloudRecommendationengineV1beta1ProductCatalogItemPriceRange": {
        "description": "Product price range when there are a range of prices for different variations of the same product.",
        "properties": {
          "max": {
            "description": "Required. The maximum product price.",
            "format": "float",
            "type": "number"
          },
          "min": {
            "description": "Required. The minimum product price.",
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://recommendationengine.googleapis.com//v1beta1/{parent}/catalogItems{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "CatalogItem captures all metadata information of items to be recommended.",
        "**Key properties:**",
        {
          "$ul": [
            "**categoryHierarchies**: Required. Catalog item categories. This field is repeated for supporting one catalog item belonging to several parallel category hierarchies. For example, if a shoes product belongs to both [\"Shoes & Accessories\" -> \"Shoes\"] and [\"Sports & Fitness\" -> \"Athletic Clothing\" -> \"Shoes\"], it could be represented as: \"categoryHierarchies\": [ { \"categories\": [\"Shoes & Accessories\", \"Shoes\"]}, { \"categories\": [\"Sports & Fitness\", \"Athletic Clothing\", \"Shoes\"] } ]",
            "**description**: Optional. Catalog item description. UTF-8 encoded string with a length limit of 5 KiB.",
            "**id**: Required. Catalog item identifier. UTF-8 encoded string with a length limit of 128 bytes. This id must be unique among all catalog items within the same catalog. It should also be used when logging user events in order for the user events to be joined with the Catalog.",
            [
              "**itemAttributes**: FeatureMap represents extra features that customers want to include in the recommendation model for catalogs/user events as categorical/numerical features.",
              {
                "$ul": [
                  "**categoricalFeatures**: Categorical features that can take on one of a limited number of possible values. Some examples would be the brand/maker of a product, or country of a customer. Feature names and values must be UTF-8 encoded strings. For example: `{ \"colors\": {\"value\": [\"yellow\", \"green\"]}, \"sizes\": {\"value\":[\"S\", \"M\"]}`",
                  "**numericalFeatures**: Numerical features. Some examples would be the height/weight of a product, or age of a customer. Feature names must be UTF-8 encoded strings. For example: `{ \"lengths_cm\": {\"value\":[2.3, 15.4]}, \"heights_cm\": {\"value\":[8.1, 6.4]} }`"
                ]
              }
            ],
            "**itemGroupId**: Optional. Variant group identifier for prediction results. UTF-8 encoded string with a length limit of 128 bytes. This field must be enabled before it can be used. [Learn more](/recommendations-ai/docs/catalog#item-group-id).",
            "**languageCode**: Optional. Deprecated. The model automatically detects the text language. Your catalog can include text in different languages, but duplicating catalog items to provide text in multiple languages can result in degraded model performance.",
            [
              "**productMetadata**: ProductCatalogItem captures item metadata specific to retail products.",
              {
                "$ul": [
                  "**availableQuantity**: Optional. The available quantity of the item.",
                  "**canonicalProductUri**: Optional. Canonical URL directly linking to the item detail page with a length limit of 5 KiB..",
                  "**costs**: Optional. A map to pass the costs associated with the product. For example: {\"manufacturing\": 45.5} The profit of selling this item is computed like so: * If 'exactPrice' is provided, profit = displayPrice - sum(costs) * If 'priceRange' is provided, profit = minPrice - sum(costs)",
                  "**currencyCode**: Optional. Only required if the price is set. Currency code for price/costs. Use three-character ISO-4217 code.",
                  [
                    "**exactPrice**: Exact product price.",
                    {
                      "$ul": [
                        "**displayPrice**: Optional. Display price of the product.",
                        "**originalPrice**: Optional. Price of the product without any discount. If zero, by default set to be the 'displayPrice'."
                      ]
                    }
                  ],
                  "**images**: Optional. Product images for the catalog item.",
                  [
                    "**priceRange**: Product price range when there are a range of prices for different variations of the same product.",
                    {
                      "$ul": [
                        "**max**: Required. The maximum product price.",
                        "**min**: Required. The minimum product price."
                      ]
                    }
                  ],
                  "**stockState**: Optional. Online stock state of the catalog item. Default is `IN_STOCK`."
                ]
              }
            ],
            "**tags**: Optional. Filtering tags associated with the catalog item. Each tag should be a UTF-8 encoded string with a length limit of 1 KiB. This tag can be used for filtering recommendation results by passing the tag as part of the predict request filter.",
            "**title**: Required. Catalog item title. UTF-8 encoded string with a length limit of 1 KiB."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
