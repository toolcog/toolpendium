{
  "name": "apikeys_projects_locations_keys_patch",
  "description": "Patches the modifiable fields of an API key. The key string of the API key isn't included in the response. NOTE: Key is a global resource; hence the only supported value for location is `global`.",
  "parameters": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "Output only. The resource name of the key. The `name` has the form: `projects//locations/global/keys/`. For example: `projects/123456867718/locations/global/keys/b7ff1f9f-8275-410a-94dd-3855ee9b5dd2` NOTE: Key is a global resource; hence the only supported value for location is `global`."
      },
      "updateMask": {
        "type": "string",
        "description": "The field mask specifies which fields to be updated as part of this request. All other fields are ignored. Mutable fields are: `display_name`, `restrictions`, and `annotations`. If an update mask is not provided, the service treats it as an implied mask equivalent to all allowed fields that are set on the wire. If the field mask has a special value \"*\", the service treats it equivalent to replace all allowed mutable fields."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/V2Key"
      }
    },
    "required": [
      "name"
    ],
    "$defs": {
      "V2Key": {
        "description": "The representation of a key managed by the API Keys API.",
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Annotations is an unstructured key-value map stored with a policy that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects.",
            "type": "object"
          },
          "createTime": {
            "description": "Output only. A timestamp identifying the time this key was originally created.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "deleteTime": {
            "description": "Output only. A timestamp when this key was deleted. If the resource is not deleted, this must be empty.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "Human-readable display name of this key that you can modify. The maximum length is 63 characters.",
            "type": "string"
          },
          "etag": {
            "description": "Output only. A checksum computed by the server based on the current value of the Key resource. This may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding. See https://google.aip.dev/154.",
            "readOnly": true,
            "type": "string"
          },
          "keyString": {
            "description": "Output only. An encrypted and signed value held by this key. This field can be accessed only through the `GetKeyString` method.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "Output only. The resource name of the key. The `name` has the form: `projects//locations/global/keys/`. For example: `projects/123456867718/locations/global/keys/b7ff1f9f-8275-410a-94dd-3855ee9b5dd2` NOTE: Key is a global resource; hence the only supported value for location is `global`.",
            "readOnly": true,
            "type": "string"
          },
          "restrictions": {
            "$ref": "#/$defs/V2Restrictions"
          },
          "uid": {
            "description": "Output only. Unique id in UUID4 format.",
            "readOnly": true,
            "type": "string"
          },
          "updateTime": {
            "description": "Output only. A timestamp identifying the time this key was last updated.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "V2Restrictions": {
        "description": "Describes the restrictions on the key.",
        "properties": {
          "androidKeyRestrictions": {
            "$ref": "#/$defs/V2AndroidKeyRestrictions"
          },
          "apiTargets": {
            "description": "A restriction for a specific service and optionally one or more specific methods. Requests are allowed if they match any of these restrictions. If no restrictions are specified, all targets are allowed.",
            "items": {
              "$ref": "#/$defs/V2ApiTarget"
            },
            "type": "array"
          },
          "browserKeyRestrictions": {
            "$ref": "#/$defs/V2BrowserKeyRestrictions"
          },
          "iosKeyRestrictions": {
            "$ref": "#/$defs/V2IosKeyRestrictions"
          },
          "serverKeyRestrictions": {
            "$ref": "#/$defs/V2ServerKeyRestrictions"
          }
        },
        "type": "object"
      },
      "V2AndroidKeyRestrictions": {
        "description": "The Android apps that are allowed to use the key.",
        "properties": {
          "allowedApplications": {
            "description": "A list of Android applications that are allowed to make API calls with this key.",
            "items": {
              "$ref": "#/$defs/V2AndroidApplication"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "V2AndroidApplication": {
        "description": "Identifier of an Android application for key use.",
        "properties": {
          "packageName": {
            "description": "The package name of the application.",
            "type": "string"
          },
          "sha1Fingerprint": {
            "description": "The SHA1 fingerprint of the application. For example, both sha1 formats are acceptable : DA:39:A3:EE:5E:6B:4B:0D:32:55:BF:EF:95:60:18:90:AF:D8:07:09 or DA39A3EE5E6B4B0D3255BFEF95601890AFD80709. Output format is the latter.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "V2ApiTarget": {
        "description": "A restriction for a specific service and optionally one or multiple specific methods. Both fields are case insensitive.",
        "properties": {
          "methods": {
            "description": "Optional. List of one or more methods that can be called. If empty, all methods for the service are allowed. A wildcard (*) can be used as the last symbol. Valid examples: `google.cloud.translate.v2.TranslateService.GetSupportedLanguage` `TranslateText` `Get*` `translate.googleapis.com.Get*`",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "service": {
            "description": "The service for this restriction. It should be the canonical service name, for example: `translate.googleapis.com`. You can use [`gcloud services list`](/sdk/gcloud/reference/services/list) to get a list of services that are enabled in the project.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "V2BrowserKeyRestrictions": {
        "description": "The HTTP referrers (websites) that are allowed to use the key.",
        "properties": {
          "allowedReferrers": {
            "description": "A list of regular expressions for the referrer URLs that are allowed to make API calls with this key.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "V2IosKeyRestrictions": {
        "description": "The iOS apps that are allowed to use the key.",
        "properties": {
          "allowedBundleIds": {
            "description": "A list of bundle IDs that are allowed when making API calls with this key.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "V2ServerKeyRestrictions": {
        "description": "The IP addresses of callers that are allowed to use the key.",
        "properties": {
          "allowedIps": {
            "description": "A list of the caller IP addresses that are allowed to make API calls with this key.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PATCH",
    "url": {
      "$uri": "https://apikeys.googleapis.com//v2/{name}{?updateMask,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "This resource represents a long-running operation that is the result of a network API call.",
        "**Key properties:**",
        {
          "$ul": [
            "**done**: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
            [
              "**error**: The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
              {
                "$ul": [
                  "**code**: The status code, which should be an enum value of google.rpc.Code.",
                  "**details**: A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                  "**message**: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                ]
              }
            ],
            "**metadata**: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
            "**name**: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
            "**response**: The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
