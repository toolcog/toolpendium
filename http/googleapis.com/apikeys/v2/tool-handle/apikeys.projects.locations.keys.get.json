{
  "name": "apikeys_projects_locations_keys_get",
  "description": "Gets the metadata for an API key. The key string of the API key isn't included in the response. NOTE: Key is a global resource; hence the only supported value for location is `global`.",
  "parameters": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "Required. The resource name of the API key to get."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      }
    },
    "required": [
      "name"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://apikeys.googleapis.com//v2/{name}{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The representation of a key managed by the API Keys API.",
        "**Key properties:**",
        {
          "$ul": [
            "**annotations**: Annotations is an unstructured key-value map stored with a policy that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects.",
            "**createTime**: Output only. A timestamp identifying the time this key was originally created.",
            "**deleteTime**: Output only. A timestamp when this key was deleted. If the resource is not deleted, this must be empty.",
            "**displayName**: Human-readable display name of this key that you can modify. The maximum length is 63 characters.",
            "**etag**: Output only. A checksum computed by the server based on the current value of the Key resource. This may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding. See https://google.aip.dev/154.",
            "**keyString**: Output only. An encrypted and signed value held by this key. This field can be accessed only through the `GetKeyString` method.",
            "**name**: Output only. The resource name of the key. The `name` has the form: `projects//locations/global/keys/`. For example: `projects/123456867718/locations/global/keys/b7ff1f9f-8275-410a-94dd-3855ee9b5dd2` NOTE: Key is a global resource; hence the only supported value for location is `global`.",
            [
              "**restrictions**: Describes the restrictions on the key.",
              {
                "$ul": [
                  [
                    "**androidKeyRestrictions**: The Android apps that are allowed to use the key.",
                    {
                      "$ul": [
                        "**allowedApplications**: A list of Android applications that are allowed to make API calls with this key."
                      ]
                    }
                  ],
                  "**apiTargets**: A restriction for a specific service and optionally one or more specific methods. Requests are allowed if they match any of these restrictions. If no restrictions are specified, all targets are allowed.",
                  [
                    "**browserKeyRestrictions**: The HTTP referrers (websites) that are allowed to use the key.",
                    {
                      "$ul": [
                        "**allowedReferrers**: A list of regular expressions for the referrer URLs that are allowed to make API calls with this key."
                      ]
                    }
                  ],
                  [
                    "**iosKeyRestrictions**: The iOS apps that are allowed to use the key.",
                    {
                      "$ul": [
                        "**allowedBundleIds**: A list of bundle IDs that are allowed when making API calls with this key."
                      ]
                    }
                  ],
                  [
                    "**serverKeyRestrictions**: The IP addresses of callers that are allowed to use the key.",
                    {
                      "$ul": [
                        "**allowedIps**: A list of the caller IP addresses that are allowed to make API calls with this key."
                      ]
                    }
                  ]
                ]
              }
            ],
            "**uid**: Output only. Unique id in UUID4 format.",
            "**updateTime**: Output only. A timestamp identifying the time this key was last updated."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
