{
  "name": "dataplex_projects_locations_lakes_zones_assets_create",
  "description": "Creates an asset resource.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The resource name of the parent zone: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}."
      },
      "assetId": {
        "type": "string",
        "description": "Required. Asset identifier. This ID will be used to generate names such as table names when publishing metadata to Hive Metastore and BigQuery. * Must contain only lowercase letters, numbers and hyphens. * Must start with a letter. * Must end with a number or a letter. * Must be between 1-63 characters. * Must be unique within the zone."
      },
      "validateOnly": {
        "type": "boolean",
        "description": "Optional. Only validate the request, but do not perform mutations. The default is false."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleCloudDataplexV1Asset"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "GoogleCloudDataplexV1Asset": {
        "description": "An asset represents a cloud resource that is being managed within a lake as a member of a zone.",
        "properties": {
          "createTime": {
            "description": "Output only. The time when the asset was created.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "description": {
            "description": "Optional. Description of the asset.",
            "type": "string"
          },
          "discoverySpec": {
            "$ref": "#/$defs/GoogleCloudDataplexV1AssetDiscoverySpec"
          },
          "discoveryStatus": {
            "$ref": "#/$defs/GoogleCloudDataplexV1AssetDiscoveryStatus"
          },
          "displayName": {
            "description": "Optional. User friendly display name.",
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Optional. User defined labels for the asset.",
            "type": "object"
          },
          "name": {
            "description": "Output only. The relative resource name of the asset, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/assets/{asset_id}.",
            "readOnly": true,
            "type": "string"
          },
          "resourceSpec": {
            "$ref": "#/$defs/GoogleCloudDataplexV1AssetResourceSpec"
          },
          "resourceStatus": {
            "$ref": "#/$defs/GoogleCloudDataplexV1AssetResourceStatus"
          },
          "securityStatus": {
            "$ref": "#/$defs/GoogleCloudDataplexV1AssetSecurityStatus"
          },
          "state": {
            "description": "Output only. Current state of the asset.",
            "enum": [
              "STATE_UNSPECIFIED",
              "ACTIVE",
              "CREATING",
              "DELETING",
              "ACTION_REQUIRED"
            ],
            "readOnly": true,
            "type": "string"
          },
          "uid": {
            "description": "Output only. System generated globally unique ID for the asset. This ID will be different if the asset is deleted and re-created with the same name.",
            "readOnly": true,
            "type": "string"
          },
          "updateTime": {
            "description": "Output only. The time when the asset was last updated.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDataplexV1AssetDiscoverySpec": {
        "description": "Settings to manage the metadata discovery and publishing for an asset.",
        "properties": {
          "csvOptions": {
            "$ref": "#/$defs/GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions"
          },
          "enabled": {
            "description": "Optional. Whether discovery is enabled.",
            "type": "boolean"
          },
          "excludePatterns": {
            "description": "Optional. The list of patterns to apply for selecting data to exclude during discovery. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "includePatterns": {
            "description": "Optional. The list of patterns to apply for selecting data to include during discovery if only a subset of the data should considered. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "jsonOptions": {
            "$ref": "#/$defs/GoogleCloudDataplexV1AssetDiscoverySpecJsonOptions"
          },
          "schedule": {
            "description": "Optional. Cron schedule (https://en.wikipedia.org/wiki/Cron) for running discovery periodically. Successive discovery runs must be scheduled at least 60 minutes apart. The default value is to run discovery every 60 minutes. To explicitly set a timezone to the cron tab, apply a prefix in the cron tab: \"CRON_TZ=${IANA_TIME_ZONE}\" or TZ=${IANA_TIME_ZONE}\". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database. For example, CRON_TZ=America/New_York 1 * * * *, or TZ=America/New_York 1 * * * *.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions": {
        "description": "Describe CSV and similar semi-structured data formats.",
        "properties": {
          "delimiter": {
            "description": "Optional. The delimiter being used to separate values. This defaults to ','.",
            "type": "string"
          },
          "disableTypeInference": {
            "description": "Optional. Whether to disable the inference of data type for CSV data. If true, all columns will be registered as strings.",
            "type": "boolean"
          },
          "encoding": {
            "description": "Optional. The character encoding of the data. The default is UTF-8.",
            "type": "string"
          },
          "headerRows": {
            "description": "Optional. The number of rows to interpret as header rows that should be skipped when reading data rows.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GoogleCloudDataplexV1AssetDiscoverySpecJsonOptions": {
        "description": "Describe JSON data format.",
        "properties": {
          "disableTypeInference": {
            "description": "Optional. Whether to disable the inference of data type for Json data. If true, all columns will be registered as their primitive types (strings, number or boolean).",
            "type": "boolean"
          },
          "encoding": {
            "description": "Optional. The character encoding of the data. The default is UTF-8.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDataplexV1AssetDiscoveryStatus": {
        "description": "Status of discovery for an asset.",
        "properties": {
          "lastRunDuration": {
            "description": "The duration of the last discovery run.",
            "format": "google-duration",
            "type": "string"
          },
          "lastRunTime": {
            "description": "The start time of the last discovery run.",
            "format": "google-datetime",
            "type": "string"
          },
          "message": {
            "description": "Additional information about the current state.",
            "type": "string"
          },
          "state": {
            "description": "The current status of the discovery feature.",
            "enum": [
              "STATE_UNSPECIFIED",
              "SCHEDULED",
              "IN_PROGRESS",
              "PAUSED",
              "DISABLED"
            ],
            "type": "string"
          },
          "stats": {
            "$ref": "#/$defs/GoogleCloudDataplexV1AssetDiscoveryStatusStats"
          },
          "updateTime": {
            "description": "Last update time of the status.",
            "format": "google-datetime",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDataplexV1AssetDiscoveryStatusStats": {
        "description": "The aggregated data statistics for the asset reported by discovery.",
        "properties": {
          "dataItems": {
            "description": "The count of data items within the referenced resource.",
            "format": "int64",
            "type": "string"
          },
          "dataSize": {
            "description": "The number of stored data bytes within the referenced resource.",
            "format": "int64",
            "type": "string"
          },
          "filesets": {
            "description": "The count of fileset entities within the referenced resource.",
            "format": "int64",
            "type": "string"
          },
          "tables": {
            "description": "The count of table entities within the referenced resource.",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDataplexV1AssetResourceSpec": {
        "description": "Identifies the cloud resource that is referenced by this asset.",
        "properties": {
          "name": {
            "description": "Immutable. Relative name of the cloud resource that contains the data that is being managed within a lake. For example: projects/{project_number}/buckets/{bucket_id} projects/{project_number}/datasets/{dataset_id}",
            "type": "string"
          },
          "readAccessMode": {
            "description": "Optional. Determines how read permissions are handled for each asset and their associated tables. Only available to storage buckets assets.",
            "enum": [
              "ACCESS_MODE_UNSPECIFIED",
              "DIRECT",
              "MANAGED"
            ],
            "type": "string"
          },
          "type": {
            "description": "Required. Immutable. Type of resource.",
            "enum": [
              "TYPE_UNSPECIFIED",
              "STORAGE_BUCKET",
              "BIGQUERY_DATASET"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDataplexV1AssetResourceStatus": {
        "description": "Status of the resource referenced by an asset.",
        "properties": {
          "managedAccessIdentity": {
            "description": "Output only. Service account associated with the BigQuery Connection.",
            "readOnly": true,
            "type": "string"
          },
          "message": {
            "description": "Additional information about the current state.",
            "type": "string"
          },
          "state": {
            "description": "The current state of the managed resource.",
            "enum": [
              "STATE_UNSPECIFIED",
              "READY",
              "ERROR"
            ],
            "type": "string"
          },
          "updateTime": {
            "description": "Last update time of the status.",
            "format": "google-datetime",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDataplexV1AssetSecurityStatus": {
        "description": "Security policy status of the asset. Data security policy, i.e., readers, writers & owners, should be specified in the lake/zone/asset IAM policy.",
        "properties": {
          "message": {
            "description": "Additional information about the current state.",
            "type": "string"
          },
          "state": {
            "description": "The current state of the security policy applied to the attached resource.",
            "enum": [
              "STATE_UNSPECIFIED",
              "READY",
              "APPLYING",
              "ERROR"
            ],
            "type": "string"
          },
          "updateTime": {
            "description": "Last update time of the status.",
            "format": "google-datetime",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://dataplex.googleapis.com//v1/{parent}/assets{?assetId,validateOnly,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "This resource represents a long-running operation that is the result of a network API call.",
        "**Key properties:**",
        {
          "$ul": [
            "**done**: If the value is false, it means the operation is still in progress. If true, the operation is completed, and either error or response is available.",
            [
              "**error**: The Status type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by gRPC (https://github.com/grpc). Each Status message contains three pieces of data: error code, error message, and error details.You can find out more about this error model and how to work with it in the API Design Guide (https://cloud.google.com/apis/design/errors).",
              {
                "$ul": [
                  "**code**: The status code, which should be an enum value of google.rpc.Code.",
                  "**details**: A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                  "**message**: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                ]
              }
            ],
            "**metadata**: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
            "**name**: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the name should be a resource name ending with operations/{unique_id}.",
            "**response**: The normal, successful response of the operation. If the original method returns no data on success, such as Delete, the response is google.protobuf.Empty. If the original method is standard Get/Create/Update, the response should be the resource. For other methods, the response should have the type XxxResponse, where Xxx is the original method name. For example, if the original method name is TakeSnapshot(), the inferred response type is TakeSnapshotResponse."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
