{
  "name": "dataplex_projects_locations_dataScans_create",
  "description": "Creates a DataScan resource.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The resource name of the parent location: projects/{project}/locations/{location_id} where project refers to a project_id or project_number and location_id refers to a GCP region."
      },
      "dataScanId": {
        "type": "string",
        "description": "Required. DataScan identifier. Must contain only lowercase letters, numbers and hyphens. Must start with a letter. Must end with a number or a letter. Must be between 1-63 characters. Must be unique within the customer project / location."
      },
      "validateOnly": {
        "type": "boolean",
        "description": "Optional. Only validate the request, but do not perform mutations. The default is false."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleCloudDataplexV1DataScan"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "GoogleCloudDataplexV1DataScan": {
        "description": "Represents a user-visible job which provides the insights for the related data source.For example: Data Quality: generates queries based on the rules and runs against the data to get data quality check results. Data Profile: analyzes the data in table(s) and generates insights about the structure, content and relationships (such as null percent, cardinality, min/max/mean, etc).",
        "properties": {
          "createTime": {
            "description": "Output only. The time when the scan was created.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "data": {
            "$ref": "#/$defs/GoogleCloudDataplexV1DataSource"
          },
          "dataProfileResult": {
            "$ref": "#/$defs/GoogleCloudDataplexV1DataProfileResult"
          },
          "dataProfileSpec": {
            "$ref": "#/$defs/GoogleCloudDataplexV1DataProfileSpec"
          },
          "dataQualityResult": {
            "$ref": "#/$defs/GoogleCloudDataplexV1DataQualityResult"
          },
          "dataQualitySpec": {
            "$ref": "#/$defs/GoogleCloudDataplexV1DataQualitySpec"
          },
          "description": {
            "description": "Optional. Description of the scan. Must be between 1-1024 characters.",
            "type": "string"
          },
          "displayName": {
            "description": "Optional. User friendly display name. Must be between 1-256 characters.",
            "type": "string"
          },
          "executionSpec": {
            "$ref": "#/$defs/GoogleCloudDataplexV1DataScanExecutionSpec"
          },
          "executionStatus": {
            "$ref": "#/$defs/GoogleCloudDataplexV1DataScanExecutionStatus"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Optional. User-defined labels for the scan.",
            "type": "object"
          },
          "name": {
            "description": "Output only. The relative resource name of the scan, of the form: projects/{project}/locations/{location_id}/dataScans/{datascan_id}, where project refers to a project_id or project_number and location_id refers to a GCP region.",
            "readOnly": true,
            "type": "string"
          },
          "state": {
            "description": "Output only. Current state of the DataScan.",
            "enum": [
              "STATE_UNSPECIFIED",
              "ACTIVE",
              "CREATING",
              "DELETING",
              "ACTION_REQUIRED"
            ],
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "Output only. The type of DataScan.",
            "enum": [
              "DATA_SCAN_TYPE_UNSPECIFIED",
              "DATA_QUALITY",
              "DATA_PROFILE"
            ],
            "readOnly": true,
            "type": "string"
          },
          "uid": {
            "description": "Output only. System generated globally unique ID for the scan. This ID will be different if the scan is deleted and re-created with the same name.",
            "readOnly": true,
            "type": "string"
          },
          "updateTime": {
            "description": "Output only. The time when the scan was last updated.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDataplexV1DataSource": {
        "description": "The data source for DataScan.",
        "properties": {
          "entity": {
            "description": "Immutable. The Dataplex entity that represents the data source (e.g. BigQuery table) for DataScan, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/entities/{entity_id}.",
            "type": "string"
          },
          "resource": {
            "description": "Immutable. The service-qualified full resource name of the cloud resource for a DataScan job to scan against. The field could be: BigQuery table of type \"TABLE\" for DataProfileScan/DataQualityScan Format: //bigquery.googleapis.com/projects/PROJECT_ID/datasets/DATASET_ID/tables/TABLE_ID",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDataplexV1DataProfileResult": {
        "description": "DataProfileResult defines the output of DataProfileScan. Each field of the table will have field type specific profile result.",
        "properties": {
          "postScanActionsResult": {
            "$ref": "#/$defs/GoogleCloudDataplexV1DataProfileResultPostScanActionsResult"
          },
          "profile": {
            "$ref": "#/$defs/GoogleCloudDataplexV1DataProfileResultProfile"
          },
          "rowCount": {
            "description": "The count of rows scanned.",
            "format": "int64",
            "type": "string"
          },
          "scannedData": {
            "$ref": "#/$defs/GoogleCloudDataplexV1ScannedData"
          }
        },
        "type": "object"
      },
      "GoogleCloudDataplexV1DataProfileResultPostScanActionsResult": {
        "description": "The result of post scan actions of DataProfileScan job.",
        "properties": {
          "bigqueryExportResult": {
            "$ref": "#/$defs/GoogleCloudDataplexV1DataProfileResultPostScanActionsResultBigQueryExportResult"
          }
        },
        "type": "object"
      },
      "GoogleCloudDataplexV1DataProfileResultPostScanActionsResultBigQueryExportResult": {
        "description": "The result of BigQuery export post scan action.",
        "properties": {
          "message": {
            "description": "Output only. Additional information about the BigQuery exporting.",
            "readOnly": true,
            "type": "string"
          },
          "state": {
            "description": "Output only. Execution state for the BigQuery exporting.",
            "enum": [
              "STATE_UNSPECIFIED",
              "SUCCEEDED",
              "FAILED",
              "SKIPPED"
            ],
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDataplexV1DataProfileResultProfile": {
        "description": "Contains name, type, mode and field type specific profile information.",
        "properties": {
          "fields": {
            "description": "List of fields with structural and profile information for each field.",
            "items": {
              "$ref": "#/$defs/GoogleCloudDataplexV1DataProfileResultProfileField"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudDataplexV1DataProfileResultProfileField": {
        "description": "A field within a table.",
        "properties": {
          "mode": {
            "description": "The mode of the field. Possible values include: REQUIRED, if it is a required field. NULLABLE, if it is an optional field. REPEATED, if it is a repeated field.",
            "type": "string"
          },
          "name": {
            "description": "The name of the field.",
            "type": "string"
          },
          "profile": {
            "$ref": "#/$defs/GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfo"
          },
          "type": {
            "description": "The data type retrieved from the schema of the data source. For instance, for a BigQuery native table, it is the BigQuery Table Schema (https://cloud.google.com/bigquery/docs/reference/rest/v2/tables#tablefieldschema). For a Dataplex Entity, it is the Entity Schema (https://cloud.google.com/dataplex/docs/reference/rpc/google.cloud.dataplex.v1#type_3).",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfo": {
        "description": "The profile information for each field type.",
        "properties": {
          "distinctRatio": {
            "description": "Ratio of rows with distinct values against total scanned rows. Not available for complex non-groupable field type RECORD and fields with REPEATABLE mode.",
            "format": "double",
            "type": "number"
          },
          "doubleProfile": {
            "$ref": "#/$defs/GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfo"
          },
          "integerProfile": {
            "$ref": "#/$defs/GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoIntegerFieldInfo"
          },
          "nullRatio": {
            "description": "Ratio of rows with null value against total scanned rows.",
            "format": "double",
            "type": "number"
          },
          "stringProfile": {
            "$ref": "#/$defs/GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoStringFieldInfo"
          },
          "topNValues": {
            "description": "The list of top N non-null values, frequency and ratio with which they occur in the scanned data. N is 10 or equal to the number of distinct values in the field, whichever is smaller. Not available for complex non-groupable field type RECORD and fields with REPEATABLE mode.",
            "items": {
              "$ref": "#/$defs/GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoTopNValue"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfo": {
        "description": "The profile information for a double type field.",
        "properties": {
          "average": {
            "description": "Average of non-null values in the scanned data. NaN, if the field has a NaN.",
            "format": "double",
            "type": "number"
          },
          "max": {
            "description": "Maximum of non-null values in the scanned data. NaN, if the field has a NaN.",
            "format": "double",
            "type": "number"
          },
          "min": {
            "description": "Minimum of non-null values in the scanned data. NaN, if the field has a NaN.",
            "format": "double",
            "type": "number"
          },
          "quartiles": {
            "description": "A quartile divides the number of data points into four parts, or quarters, of more-or-less equal size. Three main quartiles used are: The first quartile (Q1) splits off the lowest 25% of data from the highest 75%. It is also known as the lower or 25th empirical quartile, as 25% of the data is below this point. The second quartile (Q2) is the median of a data set. So, 50% of the data lies below this point. The third quartile (Q3) splits off the highest 25% of data from the lowest 75%. It is known as the upper or 75th empirical quartile, as 75% of the data lies below this point. Here, the quartiles is provided as an ordered list of quartile values for the scanned data, occurring in order Q1, median, Q3.",
            "items": {
              "format": "double",
              "type": "number"
            },
            "type": "array"
          },
          "standardDeviation": {
            "description": "Standard deviation of non-null values in the scanned data. NaN, if the field has a NaN.",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoIntegerFieldInfo": {
        "description": "The profile information for an integer type field.",
        "properties": {
          "average": {
            "description": "Average of non-null values in the scanned data. NaN, if the field has a NaN.",
            "format": "double",
            "type": "number"
          },
          "max": {
            "description": "Maximum of non-null values in the scanned data. NaN, if the field has a NaN.",
            "format": "int64",
            "type": "string"
          },
          "min": {
            "description": "Minimum of non-null values in the scanned data. NaN, if the field has a NaN.",
            "format": "int64",
            "type": "string"
          },
          "quartiles": {
            "description": "A quartile divides the number of data points into four parts, or quarters, of more-or-less equal size. Three main quartiles used are: The first quartile (Q1) splits off the lowest 25% of data from the highest 75%. It is also known as the lower or 25th empirical quartile, as 25% of the data is below this point. The second quartile (Q2) is the median of a data set. So, 50% of the data lies below this point. The third quartile (Q3) splits off the highest 25% of data from the lowest 75%. It is known as the upper or 75th empirical quartile, as 75% of the data lies below this point. Here, the quartiles is provided as an ordered list of approximate quartile values for the scanned data, occurring in order Q1, median, Q3.",
            "items": {
              "format": "int64",
              "type": "string"
            },
            "type": "array"
          },
          "standardDeviation": {
            "description": "Standard deviation of non-null values in the scanned data. NaN, if the field has a NaN.",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoStringFieldInfo": {
        "description": "The profile information for a string type field.",
        "properties": {
          "averageLength": {
            "description": "Average length of non-null values in the scanned data.",
            "format": "double",
            "type": "number"
          },
          "maxLength": {
            "description": "Maximum length of non-null values in the scanned data.",
            "format": "int64",
            "type": "string"
          },
          "minLength": {
            "description": "Minimum length of non-null values in the scanned data.",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoTopNValue": {
        "description": "Top N non-null values in the scanned data.",
        "properties": {
          "count": {
            "description": "Count of the corresponding value in the scanned data.",
            "format": "int64",
            "type": "string"
          },
          "ratio": {
            "description": "Ratio of the corresponding value in the field against the total number of rows in the scanned data.",
            "format": "double",
            "type": "number"
          },
          "value": {
            "description": "String value of a top N non-null value.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDataplexV1ScannedData": {
        "description": "The data scanned during processing (e.g. in incremental DataScan)",
        "properties": {
          "incrementalField": {
            "$ref": "#/$defs/GoogleCloudDataplexV1ScannedDataIncrementalField"
          }
        },
        "type": "object"
      },
      "GoogleCloudDataplexV1ScannedDataIncrementalField": {
        "description": "A data range denoted by a pair of start/end values of a field.",
        "properties": {
          "end": {
            "description": "Value that marks the end of the range.",
            "type": "string"
          },
          "field": {
            "description": "The field that contains values which monotonically increases over time (e.g. a timestamp column).",
            "type": "string"
          },
          "start": {
            "description": "Value that marks the start of the range.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDataplexV1DataProfileSpec": {
        "description": "DataProfileScan related setting.",
        "properties": {
          "excludeFields": {
            "$ref": "#/$defs/GoogleCloudDataplexV1DataProfileSpecSelectedFields"
          },
          "includeFields": {
            "$ref": "#/$defs/GoogleCloudDataplexV1DataProfileSpecSelectedFields"
          },
          "postScanActions": {
            "$ref": "#/$defs/GoogleCloudDataplexV1DataProfileSpecPostScanActions"
          },
          "rowFilter": {
            "description": "Optional. A filter applied to all rows in a single DataScan job. The filter needs to be a valid SQL expression for a WHERE clause in BigQuery standard SQL syntax. Example: col1 >= 0 AND col2 < 10",
            "type": "string"
          },
          "samplingPercent": {
            "description": "Optional. The percentage of the records to be selected from the dataset for DataScan. Value can range between 0.0 and 100.0 with up to 3 significant decimal digits. Sampling is not applied if sampling_percent is not specified, 0 or 100.",
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "GoogleCloudDataplexV1DataProfileSpecSelectedFields": {
        "description": "The specification for fields to include or exclude in data profile scan.",
        "properties": {
          "fieldNames": {
            "description": "Optional. Expected input is a list of fully qualified names of fields as in the schema.Only top-level field names for nested fields are supported. For instance, if 'x' is of nested field type, listing 'x' is supported but 'x.y.z' is not supported. Here 'y' and 'y.z' are nested fields of 'x'.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudDataplexV1DataProfileSpecPostScanActions": {
        "description": "The configuration of post scan actions of DataProfileScan job.",
        "properties": {
          "bigqueryExport": {
            "$ref": "#/$defs/GoogleCloudDataplexV1DataProfileSpecPostScanActionsBigQueryExport"
          }
        },
        "type": "object"
      },
      "GoogleCloudDataplexV1DataProfileSpecPostScanActionsBigQueryExport": {
        "description": "The configuration of BigQuery export post scan action.",
        "properties": {
          "resultsTable": {
            "description": "Optional. The BigQuery table to export DataProfileScan results to. Format: //bigquery.googleapis.com/projects/PROJECT_ID/datasets/DATASET_ID/tables/TABLE_ID",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDataplexV1DataQualityResult": {
        "description": "The output of a DataQualityScan.",
        "properties": {
          "columns": {
            "description": "Output only. A list of results at the column level.A column will have a corresponding DataQualityColumnResult if and only if there is at least one rule with the 'column' field set to it.",
            "items": {
              "$ref": "#/$defs/GoogleCloudDataplexV1DataQualityColumnResult"
            },
            "readOnly": true,
            "type": "array"
          },
          "dimensions": {
            "description": "A list of results at the dimension level.A dimension will have a corresponding DataQualityDimensionResult if and only if there is at least one rule with the 'dimension' field set to it.",
            "items": {
              "$ref": "#/$defs/GoogleCloudDataplexV1DataQualityDimensionResult"
            },
            "type": "array"
          },
          "passed": {
            "description": "Overall data quality result -- true if all rules passed.",
            "type": "boolean"
          },
          "postScanActionsResult": {
            "$ref": "#/$defs/GoogleCloudDataplexV1DataQualityResultPostScanActionsResult"
          },
          "rowCount": {
            "description": "The count of rows processed.",
            "format": "int64",
            "type": "string"
          },
          "rules": {
            "description": "A list of all the rules in a job, and their results.",
            "items": {
              "$ref": "#/$defs/GoogleCloudDataplexV1DataQualityRuleResult"
            },
            "type": "array"
          },
          "scannedData": {
            "$ref": "#/$defs/GoogleCloudDataplexV1ScannedData"
          },
          "score": {
            "description": "Output only. The overall data quality score.The score ranges between 0, 100 (up to two decimal points).",
            "format": "float",
            "readOnly": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "GoogleCloudDataplexV1DataQualityColumnResult": {
        "description": "DataQualityColumnResult provides a more detailed, per-column view of the results.",
        "properties": {
          "column": {
            "description": "Output only. The column specified in the DataQualityRule.",
            "readOnly": true,
            "type": "string"
          },
          "score": {
            "description": "Output only. The column-level data quality score for this data scan job if and only if the 'column' field is set.The score ranges between between 0, 100 (up to two decimal points).",
            "format": "float",
            "readOnly": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "GoogleCloudDataplexV1DataQualityDimensionResult": {
        "description": "DataQualityDimensionResult provides a more detailed, per-dimension view of the results.",
        "properties": {
          "dimension": {
            "$ref": "#/$defs/GoogleCloudDataplexV1DataQualityDimension"
          },
          "passed": {
            "description": "Whether the dimension passed or failed.",
            "type": "boolean"
          },
          "score": {
            "description": "Output only. The dimension-level data quality score for this data scan job if and only if the 'dimension' field is set.The score ranges between 0, 100 (up to two decimal points).",
            "format": "float",
            "readOnly": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "GoogleCloudDataplexV1DataQualityDimension": {
        "description": "A dimension captures data quality intent about a defined subset of the rules specified.",
        "properties": {
          "name": {
            "description": "The dimension name a rule belongs to. Supported dimensions are \"COMPLETENESS\", \"ACCURACY\", \"CONSISTENCY\", \"VALIDITY\", \"UNIQUENESS\", \"INTEGRITY\"",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDataplexV1DataQualityResultPostScanActionsResult": {
        "description": "The result of post scan actions of DataQualityScan job.",
        "properties": {
          "bigqueryExportResult": {
            "$ref": "#/$defs/GoogleCloudDataplexV1DataQualityResultPostScanActionsResultBigQueryExportResult"
          }
        },
        "type": "object"
      },
      "GoogleCloudDataplexV1DataQualityResultPostScanActionsResultBigQueryExportResult": {
        "description": "The result of BigQuery export post scan action.",
        "properties": {
          "message": {
            "description": "Output only. Additional information about the BigQuery exporting.",
            "readOnly": true,
            "type": "string"
          },
          "state": {
            "description": "Output only. Execution state for the BigQuery exporting.",
            "enum": [
              "STATE_UNSPECIFIED",
              "SUCCEEDED",
              "FAILED",
              "SKIPPED"
            ],
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDataplexV1DataQualityRuleResult": {
        "description": "DataQualityRuleResult provides a more detailed, per-rule view of the results.",
        "properties": {
          "evaluatedCount": {
            "description": "The number of rows a rule was evaluated against.This field is only valid for row-level type rules.Evaluated count can be configured to either include all rows (default) - with null rows automatically failing rule evaluation, or exclude null rows from the evaluated_count, by setting ignore_nulls = true.",
            "format": "int64",
            "type": "string"
          },
          "failingRowsQuery": {
            "description": "The query to find rows that did not pass this rule.This field is only valid for row-level type rules.",
            "type": "string"
          },
          "nullCount": {
            "description": "The number of rows with null values in the specified column.",
            "format": "int64",
            "type": "string"
          },
          "passRatio": {
            "description": "The ratio of passed_count / evaluated_count.This field is only valid for row-level type rules.",
            "format": "double",
            "type": "number"
          },
          "passed": {
            "description": "Whether the rule passed or failed.",
            "type": "boolean"
          },
          "passedCount": {
            "description": "The number of rows which passed a rule evaluation.This field is only valid for row-level type rules.",
            "format": "int64",
            "type": "string"
          },
          "rule": {
            "$ref": "#/$defs/GoogleCloudDataplexV1DataQualityRule"
          }
        },
        "type": "object"
      },
      "GoogleCloudDataplexV1DataQualityRule": {
        "description": "A rule captures data quality intent about a data source.",
        "properties": {
          "column": {
            "description": "Optional. The unnested column which this rule is evaluated against.",
            "type": "string"
          },
          "description": {
            "description": "Optional. Description of the rule. The maximum length is 1,024 characters.",
            "type": "string"
          },
          "dimension": {
            "description": "Required. The dimension a rule belongs to. Results are also aggregated at the dimension level. Supported dimensions are \"COMPLETENESS\", \"ACCURACY\", \"CONSISTENCY\", \"VALIDITY\", \"UNIQUENESS\", \"INTEGRITY\"",
            "type": "string"
          },
          "ignoreNull": {
            "description": "Optional. Rows with null values will automatically fail a rule, unless ignore_null is true. In that case, such null rows are trivially considered passing.This field is only valid for the following type of rules: RangeExpectation RegexExpectation SetExpectation UniquenessExpectation",
            "type": "boolean"
          },
          "name": {
            "description": "Optional. A mutable name for the rule. The name must contain only letters (a-z, A-Z), numbers (0-9), or hyphens (-). The maximum length is 63 characters. Must start with a letter. Must end with a number or a letter.",
            "type": "string"
          },
          "nonNullExpectation": {
            "$ref": "#/$defs/GoogleCloudDataplexV1DataQualityRuleNonNullExpectation"
          },
          "rangeExpectation": {
            "$ref": "#/$defs/GoogleCloudDataplexV1DataQualityRuleRangeExpectation"
          },
          "regexExpectation": {
            "$ref": "#/$defs/GoogleCloudDataplexV1DataQualityRuleRegexExpectation"
          },
          "rowConditionExpectation": {
            "$ref": "#/$defs/GoogleCloudDataplexV1DataQualityRuleRowConditionExpectation"
          },
          "setExpectation": {
            "$ref": "#/$defs/GoogleCloudDataplexV1DataQualityRuleSetExpectation"
          },
          "statisticRangeExpectation": {
            "$ref": "#/$defs/GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectation"
          },
          "tableConditionExpectation": {
            "$ref": "#/$defs/GoogleCloudDataplexV1DataQualityRuleTableConditionExpectation"
          },
          "threshold": {
            "description": "Optional. The minimum ratio of passing_rows / total_rows required to pass this rule, with a range of 0.0, 1.0.0 indicates default value (i.e. 1.0).This field is only valid for row-level type rules.",
            "format": "double",
            "type": "number"
          },
          "uniquenessExpectation": {
            "$ref": "#/$defs/GoogleCloudDataplexV1DataQualityRuleUniquenessExpectation"
          }
        },
        "type": "object"
      },
      "GoogleCloudDataplexV1DataQualityRuleNonNullExpectation": {
        "description": "Evaluates whether each column value is null.",
        "properties": {},
        "type": "object"
      },
      "GoogleCloudDataplexV1DataQualityRuleRangeExpectation": {
        "description": "Evaluates whether each column value lies between a specified range.",
        "properties": {
          "maxValue": {
            "description": "Optional. The maximum column value allowed for a row to pass this validation. At least one of min_value and max_value need to be provided.",
            "type": "string"
          },
          "minValue": {
            "description": "Optional. The minimum column value allowed for a row to pass this validation. At least one of min_value and max_value need to be provided.",
            "type": "string"
          },
          "strictMaxEnabled": {
            "description": "Optional. Whether each value needs to be strictly lesser than ('<') the maximum, or if equality is allowed.Only relevant if a max_value has been defined. Default = false.",
            "type": "boolean"
          },
          "strictMinEnabled": {
            "description": "Optional. Whether each value needs to be strictly greater than ('>') the minimum, or if equality is allowed.Only relevant if a min_value has been defined. Default = false.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GoogleCloudDataplexV1DataQualityRuleRegexExpectation": {
        "description": "Evaluates whether each column value matches a specified regex.",
        "properties": {
          "regex": {
            "description": "Optional. A regular expression the column value is expected to match.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDataplexV1DataQualityRuleRowConditionExpectation": {
        "description": "Evaluates whether each row passes the specified condition.The SQL expression needs to use BigQuery standard SQL syntax and should produce a boolean value per row as the result.Example: col1 >= 0 AND col2 < 10",
        "properties": {
          "sqlExpression": {
            "description": "Optional. The SQL expression.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDataplexV1DataQualityRuleSetExpectation": {
        "description": "Evaluates whether each column value is contained by a specified set.",
        "properties": {
          "values": {
            "description": "Optional. Expected values for the column value.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectation": {
        "description": "Evaluates whether the column aggregate statistic lies between a specified range.",
        "properties": {
          "maxValue": {
            "description": "Optional. The maximum column statistic value allowed for a row to pass this validation.At least one of min_value and max_value need to be provided.",
            "type": "string"
          },
          "minValue": {
            "description": "Optional. The minimum column statistic value allowed for a row to pass this validation.At least one of min_value and max_value need to be provided.",
            "type": "string"
          },
          "statistic": {
            "description": "Optional. The aggregate metric to evaluate.",
            "enum": [
              "STATISTIC_UNDEFINED",
              "MEAN",
              "MIN",
              "MAX"
            ],
            "type": "string"
          },
          "strictMaxEnabled": {
            "description": "Optional. Whether column statistic needs to be strictly lesser than ('<') the maximum, or if equality is allowed.Only relevant if a max_value has been defined. Default = false.",
            "type": "boolean"
          },
          "strictMinEnabled": {
            "description": "Optional. Whether column statistic needs to be strictly greater than ('>') the minimum, or if equality is allowed.Only relevant if a min_value has been defined. Default = false.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GoogleCloudDataplexV1DataQualityRuleTableConditionExpectation": {
        "description": "Evaluates whether the provided expression is true.The SQL expression needs to use BigQuery standard SQL syntax and should produce a scalar boolean result.Example: MIN(col1) >= 0",
        "properties": {
          "sqlExpression": {
            "description": "Optional. The SQL expression.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDataplexV1DataQualityRuleUniquenessExpectation": {
        "description": "Evaluates whether the column has duplicates.",
        "properties": {},
        "type": "object"
      },
      "GoogleCloudDataplexV1DataQualitySpec": {
        "description": "DataQualityScan related setting.",
        "properties": {
          "postScanActions": {
            "$ref": "#/$defs/GoogleCloudDataplexV1DataQualitySpecPostScanActions"
          },
          "rowFilter": {
            "description": "Optional. A filter applied to all rows in a single DataScan job. The filter needs to be a valid SQL expression for a WHERE clause in BigQuery standard SQL syntax. Example: col1 >= 0 AND col2 < 10",
            "type": "string"
          },
          "rules": {
            "description": "Required. The list of rules to evaluate against a data source. At least one rule is required.",
            "items": {
              "$ref": "#/$defs/GoogleCloudDataplexV1DataQualityRule"
            },
            "type": "array"
          },
          "samplingPercent": {
            "description": "Optional. The percentage of the records to be selected from the dataset for DataScan. Value can range between 0.0 and 100.0 with up to 3 significant decimal digits. Sampling is not applied if sampling_percent is not specified, 0 or 100.",
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "GoogleCloudDataplexV1DataQualitySpecPostScanActions": {
        "description": "The configuration of post scan actions of DataQualityScan.",
        "properties": {
          "bigqueryExport": {
            "$ref": "#/$defs/GoogleCloudDataplexV1DataQualitySpecPostScanActionsBigQueryExport"
          }
        },
        "type": "object"
      },
      "GoogleCloudDataplexV1DataQualitySpecPostScanActionsBigQueryExport": {
        "description": "The configuration of BigQuery export post scan action.",
        "properties": {
          "resultsTable": {
            "description": "Optional. The BigQuery table to export DataQualityScan results to. Format: //bigquery.googleapis.com/projects/PROJECT_ID/datasets/DATASET_ID/tables/TABLE_ID",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDataplexV1DataScanExecutionSpec": {
        "description": "DataScan execution settings.",
        "properties": {
          "field": {
            "description": "Immutable. The unnested field (of type Date or Timestamp) that contains values which monotonically increase over time.If not specified, a data scan will run for all data in the table.",
            "type": "string"
          },
          "trigger": {
            "$ref": "#/$defs/GoogleCloudDataplexV1Trigger"
          }
        },
        "type": "object"
      },
      "GoogleCloudDataplexV1Trigger": {
        "description": "DataScan scheduling and trigger settings.",
        "properties": {
          "onDemand": {
            "$ref": "#/$defs/GoogleCloudDataplexV1TriggerOnDemand"
          },
          "schedule": {
            "$ref": "#/$defs/GoogleCloudDataplexV1TriggerSchedule"
          }
        },
        "type": "object"
      },
      "GoogleCloudDataplexV1TriggerOnDemand": {
        "description": "The scan runs once via RunDataScan API.",
        "properties": {},
        "type": "object"
      },
      "GoogleCloudDataplexV1TriggerSchedule": {
        "description": "The scan is scheduled to run periodically.",
        "properties": {
          "cron": {
            "description": "Required. Cron (https://en.wikipedia.org/wiki/Cron) schedule for running scans periodically.To explicitly set a timezone in the cron tab, apply a prefix in the cron tab: \"CRON_TZ=${IANA_TIME_ZONE}\" or \"TZ=${IANA_TIME_ZONE}\". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database (wikipedia (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)). For example, CRON_TZ=America/New_York 1 * * * *, or TZ=America/New_York 1 * * * *.This field is required for Schedule scans.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDataplexV1DataScanExecutionStatus": {
        "description": "Status of the data scan execution.",
        "properties": {
          "latestJobEndTime": {
            "description": "The time when the latest DataScanJob ended.",
            "format": "google-datetime",
            "type": "string"
          },
          "latestJobStartTime": {
            "description": "The time when the latest DataScanJob started.",
            "format": "google-datetime",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://dataplex.googleapis.com//v1/{parent}/dataScans{?dataScanId,validateOnly,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "This resource represents a long-running operation that is the result of a network API call.",
        "**Key properties:**",
        {
          "$ul": [
            "**done**: If the value is false, it means the operation is still in progress. If true, the operation is completed, and either error or response is available.",
            [
              "**error**: The Status type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by gRPC (https://github.com/grpc). Each Status message contains three pieces of data: error code, error message, and error details.You can find out more about this error model and how to work with it in the API Design Guide (https://cloud.google.com/apis/design/errors).",
              {
                "$ul": [
                  "**code**: The status code, which should be an enum value of google.rpc.Code.",
                  "**details**: A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                  "**message**: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                ]
              }
            ],
            "**metadata**: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
            "**name**: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the name should be a resource name ending with operations/{unique_id}.",
            "**response**: The normal, successful response of the operation. If the original method returns no data on success, such as Delete, the response is google.protobuf.Empty. If the original method is standard Get/Create/Update, the response should be the resource. For other methods, the response should have the type XxxResponse, where Xxx is the original method name. For example, if the original method name is TakeSnapshot(), the inferred response type is TakeSnapshotResponse."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
