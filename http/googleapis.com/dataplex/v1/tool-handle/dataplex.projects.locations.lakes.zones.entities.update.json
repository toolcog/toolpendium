{
  "name": "dataplex_projects_locations_lakes_zones_entities_update",
  "description": "Update a metadata entity. Only supports full resource update.",
  "parameters": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "Output only. The resource name of the entity, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/entities/{id}."
      },
      "validateOnly": {
        "type": "boolean",
        "description": "Optional. Only validate the request, but do not perform mutations. The default is false."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleCloudDataplexV1Entity"
      }
    },
    "required": [
      "name"
    ],
    "$defs": {
      "GoogleCloudDataplexV1Entity": {
        "description": "Represents tables and fileset metadata contained within a zone.",
        "properties": {
          "access": {
            "$ref": "#/$defs/GoogleCloudDataplexV1StorageAccess"
          },
          "asset": {
            "description": "Required. Immutable. The ID of the asset associated with the storage location containing the entity data. The entity must be with in the same zone with the asset.",
            "type": "string"
          },
          "catalogEntry": {
            "description": "Output only. The name of the associated Data Catalog entry.",
            "readOnly": true,
            "type": "string"
          },
          "compatibility": {
            "$ref": "#/$defs/GoogleCloudDataplexV1EntityCompatibilityStatus"
          },
          "createTime": {
            "description": "Output only. The time when the entity was created.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "dataPath": {
            "description": "Required. Immutable. The storage path of the entity data. For Cloud Storage data, this is the fully-qualified path to the entity, such as gs://bucket/path/to/data. For BigQuery data, this is the name of the table resource, such as projects/project_id/datasets/dataset_id/tables/table_id.",
            "type": "string"
          },
          "dataPathPattern": {
            "description": "Optional. The set of items within the data path constituting the data in the entity, represented as a glob path. Example: gs://bucket/path/to/data/**/*.csv.",
            "type": "string"
          },
          "description": {
            "description": "Optional. User friendly longer description text. Must be shorter than or equal to 1024 characters.",
            "type": "string"
          },
          "displayName": {
            "description": "Optional. Display name must be shorter than or equal to 256 characters.",
            "type": "string"
          },
          "etag": {
            "description": "Optional. The etag associated with the entity, which can be retrieved with a GetEntity request. Required for update and delete requests.",
            "type": "string"
          },
          "format": {
            "$ref": "#/$defs/GoogleCloudDataplexV1StorageFormat"
          },
          "id": {
            "description": "Required. A user-provided entity ID. It is mutable, and will be used as the published table name. Specifying a new ID in an update entity request will override the existing value. The ID must contain only letters (a-z, A-Z), numbers (0-9), and underscores, and consist of 256 or fewer characters.",
            "type": "string"
          },
          "name": {
            "description": "Output only. The resource name of the entity, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/entities/{id}.",
            "readOnly": true,
            "type": "string"
          },
          "schema": {
            "$ref": "#/$defs/GoogleCloudDataplexV1Schema"
          },
          "system": {
            "description": "Required. Immutable. Identifies the storage system of the entity data.",
            "enum": [
              "STORAGE_SYSTEM_UNSPECIFIED",
              "CLOUD_STORAGE",
              "BIGQUERY"
            ],
            "type": "string"
          },
          "type": {
            "description": "Required. Immutable. The type of entity.",
            "enum": [
              "TYPE_UNSPECIFIED",
              "TABLE",
              "FILESET"
            ],
            "type": "string"
          },
          "uid": {
            "description": "Output only. System generated unique ID for the Entity. This ID will be different if the Entity is deleted and re-created with the same name.",
            "readOnly": true,
            "type": "string"
          },
          "updateTime": {
            "description": "Output only. The time when the entity was last updated.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDataplexV1StorageAccess": {
        "description": "Describes the access mechanism of the data within its storage location.",
        "properties": {
          "read": {
            "description": "Output only. Describes the read access mechanism of the data. Not user settable.",
            "enum": [
              "ACCESS_MODE_UNSPECIFIED",
              "DIRECT",
              "MANAGED"
            ],
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDataplexV1EntityCompatibilityStatus": {
        "description": "Provides compatibility information for various metadata stores.",
        "properties": {
          "bigquery": {
            "$ref": "#/$defs/GoogleCloudDataplexV1EntityCompatibilityStatusCompatibility"
          },
          "hiveMetastore": {
            "$ref": "#/$defs/GoogleCloudDataplexV1EntityCompatibilityStatusCompatibility"
          }
        },
        "type": "object"
      },
      "GoogleCloudDataplexV1EntityCompatibilityStatusCompatibility": {
        "description": "Provides compatibility information for a specific metadata store.",
        "properties": {
          "compatible": {
            "description": "Output only. Whether the entity is compatible and can be represented in the metadata store.",
            "readOnly": true,
            "type": "boolean"
          },
          "reason": {
            "description": "Output only. Provides additional detail if the entity is incompatible with the metadata store.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDataplexV1StorageFormat": {
        "description": "Describes the format of the data within its storage location.",
        "properties": {
          "compressionFormat": {
            "description": "Optional. The compression type associated with the stored data. If unspecified, the data is uncompressed.",
            "enum": [
              "COMPRESSION_FORMAT_UNSPECIFIED",
              "GZIP",
              "BZIP2"
            ],
            "type": "string"
          },
          "csv": {
            "$ref": "#/$defs/GoogleCloudDataplexV1StorageFormatCsvOptions"
          },
          "format": {
            "description": "Output only. The data format associated with the stored data, which represents content type values. The value is inferred from mime type.",
            "enum": [
              "FORMAT_UNSPECIFIED",
              "PARQUET",
              "AVRO",
              "ORC",
              "CSV",
              "JSON",
              "IMAGE",
              "AUDIO",
              "VIDEO",
              "TEXT",
              "TFRECORD",
              "OTHER",
              "UNKNOWN"
            ],
            "readOnly": true,
            "type": "string"
          },
          "iceberg": {
            "$ref": "#/$defs/GoogleCloudDataplexV1StorageFormatIcebergOptions"
          },
          "json": {
            "$ref": "#/$defs/GoogleCloudDataplexV1StorageFormatJsonOptions"
          },
          "mimeType": {
            "description": "Required. The mime type descriptor for the data. Must match the pattern {type}/{subtype}. Supported values: application/x-parquet application/x-avro application/x-orc application/x-tfrecord application/x-parquet+iceberg application/x-avro+iceberg application/x-orc+iceberg application/json application/{subtypes} text/csv text/ image/{image subtype} video/{video subtype} audio/{audio subtype}",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDataplexV1StorageFormatCsvOptions": {
        "description": "Describes CSV and similar semi-structured data formats.",
        "properties": {
          "delimiter": {
            "description": "Optional. The delimiter used to separate values. Defaults to ','.",
            "type": "string"
          },
          "encoding": {
            "description": "Optional. The character encoding of the data. Accepts \"US-ASCII\", \"UTF-8\", and \"ISO-8859-1\". Defaults to UTF-8 if unspecified.",
            "type": "string"
          },
          "headerRows": {
            "description": "Optional. The number of rows to interpret as header rows that should be skipped when reading data rows. Defaults to 0.",
            "format": "int32",
            "type": "integer"
          },
          "quote": {
            "description": "Optional. The character used to quote column values. Accepts '\"' (double quotation mark) or ''' (single quotation mark). Defaults to '\"' (double quotation mark) if unspecified.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDataplexV1StorageFormatIcebergOptions": {
        "description": "Describes Iceberg data format.",
        "properties": {
          "metadataLocation": {
            "description": "Optional. The location of where the iceberg metadata is present, must be within the table path",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDataplexV1StorageFormatJsonOptions": {
        "description": "Describes JSON data format.",
        "properties": {
          "encoding": {
            "description": "Optional. The character encoding of the data. Accepts \"US-ASCII\", \"UTF-8\" and \"ISO-8859-1\". Defaults to UTF-8 if not specified.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDataplexV1Schema": {
        "description": "Schema information describing the structure and layout of the data.",
        "properties": {
          "fields": {
            "description": "Optional. The sequence of fields describing data in table entities. Note: BigQuery SchemaFields are immutable.",
            "items": {
              "$ref": "#/$defs/GoogleCloudDataplexV1SchemaSchemaField"
            },
            "type": "array"
          },
          "partitionFields": {
            "description": "Optional. The sequence of fields describing the partition structure in entities. If this field is empty, there are no partitions within the data.",
            "items": {
              "$ref": "#/$defs/GoogleCloudDataplexV1SchemaPartitionField"
            },
            "type": "array"
          },
          "partitionStyle": {
            "description": "Optional. The structure of paths containing partition data within the entity.",
            "enum": [
              "PARTITION_STYLE_UNSPECIFIED",
              "HIVE_COMPATIBLE"
            ],
            "type": "string"
          },
          "userManaged": {
            "description": "Required. Set to true if user-managed or false if managed by Dataplex. The default is false (managed by Dataplex). Set to falseto enable Dataplex discovery to update the schema. including new data discovery, schema inference, and schema evolution. Users retain the ability to input and edit the schema. Dataplex treats schema input by the user as though produced by a previous Dataplex discovery operation, and it will evolve the schema and take action based on that treatment. Set to true to fully manage the entity schema. This setting guarantees that Dataplex will not change schema fields.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GoogleCloudDataplexV1SchemaSchemaField": {
        "description": "Represents a column field within a table schema.",
        "properties": {
          "description": {
            "description": "Optional. User friendly field description. Must be less than or equal to 1024 characters.",
            "type": "string"
          },
          "fields": {
            "description": "Optional. Any nested field for complex types.",
            "items": {
              "$ref": "#/$defs/GoogleCloudDataplexV1SchemaSchemaField"
            },
            "type": "array"
          },
          "mode": {
            "description": "Required. Additional field semantics.",
            "enum": [
              "MODE_UNSPECIFIED",
              "REQUIRED",
              "NULLABLE",
              "REPEATED"
            ],
            "type": "string"
          },
          "name": {
            "description": "Required. The name of the field. Must contain only letters, numbers and underscores, with a maximum length of 767 characters, and must begin with a letter or underscore.",
            "type": "string"
          },
          "type": {
            "description": "Required. The type of field.",
            "enum": [
              "TYPE_UNSPECIFIED",
              "BOOLEAN",
              "BYTE",
              "INT16",
              "INT32",
              "INT64",
              "FLOAT",
              "DOUBLE",
              "DECIMAL",
              "STRING",
              "BINARY",
              "TIMESTAMP",
              "DATE",
              "TIME",
              "RECORD",
              "NULL"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDataplexV1SchemaPartitionField": {
        "description": "Represents a key field within the entity's partition structure. You could have up to 20 partition fields, but only the first 10 partitions have the filtering ability due to performance consideration. Note: Partition fields are immutable.",
        "properties": {
          "name": {
            "description": "Required. Partition field name must consist of letters, numbers, and underscores only, with a maximum of length of 256 characters, and must begin with a letter or underscore..",
            "type": "string"
          },
          "type": {
            "description": "Required. Immutable. The type of field.",
            "enum": [
              "TYPE_UNSPECIFIED",
              "BOOLEAN",
              "BYTE",
              "INT16",
              "INT32",
              "INT64",
              "FLOAT",
              "DOUBLE",
              "DECIMAL",
              "STRING",
              "BINARY",
              "TIMESTAMP",
              "DATE",
              "TIME",
              "RECORD",
              "NULL"
            ],
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "https://dataplex.googleapis.com//v1/{name}{?validateOnly,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Represents tables and fileset metadata contained within a zone.",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**access**: Describes the access mechanism of the data within its storage location.",
              {
                "$ul": [
                  "**read**: Output only. Describes the read access mechanism of the data. Not user settable."
                ]
              }
            ],
            "**asset**: Required. Immutable. The ID of the asset associated with the storage location containing the entity data. The entity must be with in the same zone with the asset.",
            "**catalogEntry**: Output only. The name of the associated Data Catalog entry.",
            [
              "**compatibility**: Provides compatibility information for various metadata stores.",
              {
                "$ul": [
                  [
                    "**bigquery**: Provides compatibility information for a specific metadata store.",
                    {
                      "$ul": [
                        "**compatible**: Output only. Whether the entity is compatible and can be represented in the metadata store.",
                        "**reason**: Output only. Provides additional detail if the entity is incompatible with the metadata store."
                      ]
                    }
                  ],
                  [
                    "**hiveMetastore**: Provides compatibility information for a specific metadata store.",
                    {
                      "$ul": [
                        "**compatible**: Output only. Whether the entity is compatible and can be represented in the metadata store.",
                        "**reason**: Output only. Provides additional detail if the entity is incompatible with the metadata store."
                      ]
                    }
                  ]
                ]
              }
            ],
            "**createTime**: Output only. The time when the entity was created.",
            "**dataPath**: Required. Immutable. The storage path of the entity data. For Cloud Storage data, this is the fully-qualified path to the entity, such as gs://bucket/path/to/data. For BigQuery data, this is the name of the table resource, such as projects/project_id/datasets/dataset_id/tables/table_id.",
            "**dataPathPattern**: Optional. The set of items within the data path constituting the data in the entity, represented as a glob path. Example: gs://bucket/path/to/data/**/*.csv.",
            "**description**: Optional. User friendly longer description text. Must be shorter than or equal to 1024 characters.",
            "**displayName**: Optional. Display name must be shorter than or equal to 256 characters.",
            "**etag**: Optional. The etag associated with the entity, which can be retrieved with a GetEntity request. Required for update and delete requests.",
            [
              "**format**: Describes the format of the data within its storage location.",
              {
                "$ul": [
                  "**compressionFormat**: Optional. The compression type associated with the stored data. If unspecified, the data is uncompressed.",
                  [
                    "**csv**: Describes CSV and similar semi-structured data formats.",
                    {
                      "$ul": [
                        "**delimiter**: Optional. The delimiter used to separate values. Defaults to ','.",
                        "**encoding**: Optional. The character encoding of the data. Accepts \"US-ASCII\", \"UTF-8\", and \"ISO-8859-1\". Defaults to UTF-8 if unspecified.",
                        "**headerRows**: Optional. The number of rows to interpret as header rows that should be skipped when reading data rows. Defaults to 0.",
                        "**quote**: Optional. The character used to quote column values. Accepts '\"' (double quotation mark) or ''' (single quotation mark). Defaults to '\"' (double quotation mark) if unspecified."
                      ]
                    }
                  ],
                  "**format**: Output only. The data format associated with the stored data, which represents content type values. The value is inferred from mime type.",
                  [
                    "**iceberg**: Describes Iceberg data format.",
                    {
                      "$ul": [
                        "**metadataLocation**: Optional. The location of where the iceberg metadata is present, must be within the table path"
                      ]
                    }
                  ],
                  [
                    "**json**: Describes JSON data format.",
                    {
                      "$ul": [
                        "**encoding**: Optional. The character encoding of the data. Accepts \"US-ASCII\", \"UTF-8\" and \"ISO-8859-1\". Defaults to UTF-8 if not specified."
                      ]
                    }
                  ],
                  "**mimeType**: Required. The mime type descriptor for the data. Must match the pattern {type}/{subtype}. Supported values: application/x-parquet application/x-avro application/x-orc application/x-tfrecord application/x-parquet+iceberg application/x-avro+iceberg application/x-orc+iceberg application/json application/{subtypes} text/csv text/ image/{image subtype} video/{video subtype} audio/{audio subtype}"
                ]
              }
            ],
            "**id**: Required. A user-provided entity ID. It is mutable, and will be used as the published table name. Specifying a new ID in an update entity request will override the existing value. The ID must contain only letters (a-z, A-Z), numbers (0-9), and underscores, and consist of 256 or fewer characters.",
            "**name**: Output only. The resource name of the entity, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/entities/{id}.",
            [
              "**schema**: Schema information describing the structure and layout of the data.",
              {
                "$ul": [
                  "**fields**: Optional. The sequence of fields describing data in table entities. Note: BigQuery SchemaFields are immutable.",
                  "**partitionFields**: Optional. The sequence of fields describing the partition structure in entities. If this field is empty, there are no partitions within the data.",
                  "**partitionStyle**: Optional. The structure of paths containing partition data within the entity.",
                  "**userManaged**: Required. Set to true if user-managed or false if managed by Dataplex. The default is false (managed by Dataplex). Set to falseto enable Dataplex discovery to update the schema. including new data discovery, schema inference, and schema evolution. Users retain the ability to input and edit the schema. Dataplex treats schema input by the user as though produced by a previous Dataplex discovery operation, and it will evolve the schema and take action based on that treatment. Set to true to fully manage the entity schema. This setting guarantees that Dataplex will not change schema fields."
                ]
              }
            ],
            "**system**: Required. Immutable. Identifies the storage system of the entity data.",
            "**type**: Required. Immutable. The type of entity.",
            "**uid**: Output only. System generated unique ID for the Entity. This ID will be different if the Entity is deleted and re-created with the same name.",
            "**updateTime**: Output only. The time when the entity was last updated."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
