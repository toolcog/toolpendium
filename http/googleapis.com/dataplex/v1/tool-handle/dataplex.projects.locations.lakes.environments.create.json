{
  "name": "dataplex_projects_locations_lakes_environments_create",
  "description": "Create an environment resource.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The resource name of the parent lake: projects/{project_id}/locations/{location_id}/lakes/{lake_id}."
      },
      "environmentId": {
        "type": "string",
        "description": "Required. Environment identifier. * Must contain only lowercase letters, numbers and hyphens. * Must start with a letter. * Must be between 1-63 characters. * Must end with a number or a letter. * Must be unique within the lake."
      },
      "validateOnly": {
        "type": "boolean",
        "description": "Optional. Only validate the request, but do not perform mutations. The default is false."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleCloudDataplexV1Environment"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "GoogleCloudDataplexV1Environment": {
        "description": "Environment represents a user-visible compute infrastructure for analytics within a lake.",
        "properties": {
          "createTime": {
            "description": "Output only. Environment creation time.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "description": {
            "description": "Optional. Description of the environment.",
            "type": "string"
          },
          "displayName": {
            "description": "Optional. User friendly display name.",
            "type": "string"
          },
          "endpoints": {
            "$ref": "#/$defs/GoogleCloudDataplexV1EnvironmentEndpoints"
          },
          "infrastructureSpec": {
            "$ref": "#/$defs/GoogleCloudDataplexV1EnvironmentInfrastructureSpec"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Optional. User defined labels for the environment.",
            "type": "object"
          },
          "name": {
            "description": "Output only. The relative resource name of the environment, of the form: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/environment/{environment_id}",
            "readOnly": true,
            "type": "string"
          },
          "sessionSpec": {
            "$ref": "#/$defs/GoogleCloudDataplexV1EnvironmentSessionSpec"
          },
          "sessionStatus": {
            "$ref": "#/$defs/GoogleCloudDataplexV1EnvironmentSessionStatus"
          },
          "state": {
            "description": "Output only. Current state of the environment.",
            "enum": [
              "STATE_UNSPECIFIED",
              "ACTIVE",
              "CREATING",
              "DELETING",
              "ACTION_REQUIRED"
            ],
            "readOnly": true,
            "type": "string"
          },
          "uid": {
            "description": "Output only. System generated globally unique ID for the environment. This ID will be different if the environment is deleted and re-created with the same name.",
            "readOnly": true,
            "type": "string"
          },
          "updateTime": {
            "description": "Output only. The time when the environment was last updated.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDataplexV1EnvironmentEndpoints": {
        "description": "URI Endpoints to access sessions associated with the Environment.",
        "properties": {
          "notebooks": {
            "description": "Output only. URI to serve notebook APIs",
            "readOnly": true,
            "type": "string"
          },
          "sql": {
            "description": "Output only. URI to serve SQL APIs",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDataplexV1EnvironmentInfrastructureSpec": {
        "description": "Configuration for the underlying infrastructure used to run workloads.",
        "properties": {
          "compute": {
            "$ref": "#/$defs/GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResources"
          },
          "osImage": {
            "$ref": "#/$defs/GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime"
          }
        },
        "type": "object"
      },
      "GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResources": {
        "description": "Compute resources associated with the analyze interactive workloads.",
        "properties": {
          "diskSizeGb": {
            "description": "Optional. Size in GB of the disk. Default is 100 GB.",
            "format": "int32",
            "type": "integer"
          },
          "maxNodeCount": {
            "description": "Optional. Max configurable nodes. If max_node_count > node_count, then auto-scaling is enabled.",
            "format": "int32",
            "type": "integer"
          },
          "nodeCount": {
            "description": "Optional. Total number of nodes in the sessions created for this environment.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime": {
        "description": "Software Runtime Configuration to run Analyze.",
        "properties": {
          "imageVersion": {
            "description": "Required. Dataplex Image version.",
            "type": "string"
          },
          "javaLibraries": {
            "description": "Optional. List of Java jars to be included in the runtime environment. Valid input includes Cloud Storage URIs to Jar binaries. For example, gs://bucket-name/my/path/to/file.jar",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "properties": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Optional. Spark properties to provide configuration for use in sessions created for this environment. The properties to set on daemon config files. Property keys are specified in prefix:property format. The prefix must be \"spark\".",
            "type": "object"
          },
          "pythonPackages": {
            "description": "Optional. A list of python packages to be installed. Valid formats include Cloud Storage URI to a PIP installable library. For example, gs://bucket-name/my/path/to/lib.tar.gz",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudDataplexV1EnvironmentSessionSpec": {
        "description": "Configuration for sessions created for this environment.",
        "properties": {
          "enableFastStartup": {
            "description": "Optional. If True, this causes sessions to be pre-created and available for faster startup to enable interactive exploration use-cases. This defaults to False to avoid additional billed charges. These can only be set to True for the environment with name set to \"default\", and with default configuration.",
            "type": "boolean"
          },
          "maxIdleDuration": {
            "description": "Optional. The idle time configuration of the session. The session will be auto-terminated at the end of this period.",
            "format": "google-duration",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDataplexV1EnvironmentSessionStatus": {
        "description": "Status of sessions created for this environment.",
        "properties": {
          "active": {
            "description": "Output only. Queries over sessions to mark whether the environment is currently active or not",
            "readOnly": true,
            "type": "boolean"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://dataplex.googleapis.com//v1/{parent}/environments{?environmentId,validateOnly,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "This resource represents a long-running operation that is the result of a network API call.",
        "**Key properties:**",
        {
          "$ul": [
            "**done**: If the value is false, it means the operation is still in progress. If true, the operation is completed, and either error or response is available.",
            [
              "**error**: The Status type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by gRPC (https://github.com/grpc). Each Status message contains three pieces of data: error code, error message, and error details.You can find out more about this error model and how to work with it in the API Design Guide (https://cloud.google.com/apis/design/errors).",
              {
                "$ul": [
                  "**code**: The status code, which should be an enum value of google.rpc.Code.",
                  "**details**: A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                  "**message**: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                ]
              }
            ],
            "**metadata**: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
            "**name**: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the name should be a resource name ending with operations/{unique_id}.",
            "**response**: The normal, successful response of the operation. If the original method returns no data on success, such as Delete, the response is google.protobuf.Empty. If the original method is standard Get/Create/Update, the response should be the resource. For other methods, the response should have the type XxxResponse, where Xxx is the original method name. For example, if the original method name is TakeSnapshot(), the inferred response type is TakeSnapshotResponse."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
