{
  "name": "content_orders_createtestorder",
  "description": "Sandbox only. Creates a test order.",
  "parameters": {
    "type": "object",
    "properties": {
      "merchantId": {
        "type": "string",
        "description": "The ID of the account that should manage the order. This cannot be a multi-client account."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/OrdersCreateTestOrderRequest"
      }
    },
    "required": [
      "merchantId"
    ],
    "$defs": {
      "OrdersCreateTestOrderRequest": {
        "properties": {
          "country": {
            "description": "The CLDR territory code of the country of the test order to create. Affects the currency and addresses of orders created via `template_name`, or the addresses of orders created via `test_order`. Acceptable values are: - \"`US`\" - \"`FR`\" Defaults to `US`.",
            "type": "string"
          },
          "templateName": {
            "description": "The test order template to use. Specify as an alternative to `testOrder` as a shortcut for retrieving a template and then creating an order using that template. Acceptable values are: - \"`template1`\" - \"`template1a`\" - \"`template1b`\" - \"`template2`\" - \"`template3`\" ",
            "type": "string"
          },
          "testOrder": {
            "$ref": "#/$defs/TestOrder"
          }
        },
        "type": "object"
      },
      "TestOrder": {
        "properties": {
          "customer": {
            "$ref": "#/$defs/TestOrderCustomer"
          },
          "enableOrderinvoices": {
            "description": "Whether the orderinvoices service should support this order.",
            "type": "boolean"
          },
          "kind": {
            "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#testOrder`\"",
            "type": "string"
          },
          "lineItems": {
            "description": "Required. Line items that are ordered. At least one line item must be provided.",
            "items": {
              "$ref": "#/$defs/TestOrderLineItem"
            },
            "type": "array"
          },
          "notificationMode": {
            "description": "Restricted. Do not use.",
            "type": "string"
          },
          "paymentMethod": {
            "$ref": "#/$defs/TestOrderPaymentMethod"
          },
          "predefinedDeliveryAddress": {
            "description": "Required. Identifier of one of the predefined delivery addresses for the delivery. Acceptable values are: - \"`dwight`\" - \"`jim`\" - \"`pam`\" ",
            "type": "string"
          },
          "predefinedPickupDetails": {
            "description": "Identifier of one of the predefined pickup details. Required for orders containing line items with shipping type `pickup`. Acceptable values are: - \"`dwight`\" - \"`jim`\" - \"`pam`\" ",
            "type": "string"
          },
          "promotions": {
            "description": "Deprecated. Ignored if provided.",
            "items": {
              "$ref": "#/$defs/OrderLegacyPromotion"
            },
            "type": "array"
          },
          "shippingCost": {
            "$ref": "#/$defs/Price"
          },
          "shippingCostTax": {
            "$ref": "#/$defs/Price"
          },
          "shippingOption": {
            "description": "Required. The requested shipping option. Acceptable values are: - \"`economy`\" - \"`expedited`\" - \"`oneDay`\" - \"`sameDay`\" - \"`standard`\" - \"`twoDay`\" ",
            "type": "string"
          }
        },
        "type": "object"
      },
      "TestOrderCustomer": {
        "properties": {
          "email": {
            "description": "Required. Email address of the customer. Acceptable values are: - \"`pog.dwight.schrute@gmail.com`\" - \"`pog.jim.halpert@gmail.com`\" - \"`penpog.pam.beesly@gmail.comding`\" ",
            "type": "string"
          },
          "explicitMarketingPreference": {
            "description": "Deprecated. Please use marketingRightsInfo instead.",
            "type": "boolean"
          },
          "fullName": {
            "description": "Full name of the customer.",
            "type": "string"
          },
          "marketingRightsInfo": {
            "$ref": "#/$defs/TestOrderCustomerMarketingRightsInfo"
          }
        },
        "type": "object"
      },
      "TestOrderCustomerMarketingRightsInfo": {
        "properties": {
          "explicitMarketingPreference": {
            "description": "Last know user use selection regards marketing preferences. In certain cases selection might not be known, so this field would be empty. Acceptable values are: - \"`denied`\" - \"`granted`\" ",
            "type": "string"
          },
          "lastUpdatedTimestamp": {
            "description": "Timestamp when last time marketing preference was updated. Could be empty, if user wasn't offered a selection yet.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "TestOrderLineItem": {
        "properties": {
          "product": {
            "$ref": "#/$defs/TestOrderLineItemProduct"
          },
          "quantityOrdered": {
            "description": "Required. Number of items ordered.",
            "format": "uint32",
            "type": "integer"
          },
          "returnInfo": {
            "$ref": "#/$defs/OrderLineItemReturnInfo"
          },
          "shippingDetails": {
            "$ref": "#/$defs/OrderLineItemShippingDetails"
          },
          "unitTax": {
            "$ref": "#/$defs/Price"
          }
        },
        "type": "object"
      },
      "TestOrderLineItemProduct": {
        "properties": {
          "brand": {
            "description": "Required. Brand of the item.",
            "type": "string"
          },
          "channel": {
            "description": "Deprecated. Acceptable values are: - \"`online`\" ",
            "type": "string"
          },
          "condition": {
            "description": "Required. Condition or state of the item. Acceptable values are: - \"`new`\" ",
            "type": "string"
          },
          "contentLanguage": {
            "description": "Required. The two-letter ISO 639-1 language code for the item. Acceptable values are: - \"`en`\" - \"`fr`\" ",
            "type": "string"
          },
          "fees": {
            "description": "Fees for the item. Optional.",
            "items": {
              "$ref": "#/$defs/OrderLineItemProductFee"
            },
            "type": "array"
          },
          "gtin": {
            "description": "Global Trade Item Number (GTIN) of the item. Optional.",
            "type": "string"
          },
          "imageLink": {
            "description": "Required. URL of an image of the item.",
            "type": "string"
          },
          "itemGroupId": {
            "description": "Shared identifier for all variants of the same product. Optional.",
            "type": "string"
          },
          "mpn": {
            "description": "Manufacturer Part Number (MPN) of the item. Optional.",
            "type": "string"
          },
          "offerId": {
            "description": "Required. An identifier of the item.",
            "type": "string"
          },
          "price": {
            "$ref": "#/$defs/Price"
          },
          "targetCountry": {
            "description": "Required. The CLDR territory // code of the target country of the product.",
            "type": "string"
          },
          "title": {
            "description": "Required. The title of the product.",
            "type": "string"
          },
          "variantAttributes": {
            "description": "Variant attributes for the item. Optional.",
            "items": {
              "$ref": "#/$defs/OrderLineItemProductVariantAttribute"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "OrderLineItemProductFee": {
        "properties": {
          "amount": {
            "$ref": "#/$defs/Price"
          },
          "name": {
            "description": "Name of the fee.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Price": {
        "properties": {
          "currency": {
            "description": "The currency of the price.",
            "type": "string"
          },
          "value": {
            "description": "The price represented as a number.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OrderLineItemProductVariantAttribute": {
        "properties": {
          "dimension": {
            "description": "The dimension of the variant.",
            "type": "string"
          },
          "value": {
            "description": "The value for the dimension.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OrderLineItemReturnInfo": {
        "properties": {
          "daysToReturn": {
            "description": "Required. How many days later the item can be returned.",
            "format": "int32",
            "type": "integer"
          },
          "isReturnable": {
            "description": "Required. Whether the item is returnable.",
            "type": "boolean"
          },
          "policyUrl": {
            "description": "Required. URL of the item return policy.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OrderLineItemShippingDetails": {
        "properties": {
          "deliverByDate": {
            "description": "Required. The delivery by date, in ISO 8601 format.",
            "type": "string"
          },
          "method": {
            "$ref": "#/$defs/OrderLineItemShippingDetailsMethod"
          },
          "shipByDate": {
            "description": "Required. The ship by date, in ISO 8601 format.",
            "type": "string"
          },
          "type": {
            "description": "Type of shipment. Indicates whether `deliveryDetails` or `pickupDetails` is applicable for this shipment. Acceptable values are: - \"`delivery`\" - \"`pickup`\" ",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OrderLineItemShippingDetailsMethod": {
        "properties": {
          "carrier": {
            "description": "The carrier for the shipping. Optional. See `shipments[].carrier` for a list of acceptable values.",
            "type": "string"
          },
          "maxDaysInTransit": {
            "description": "Required. Maximum transit time.",
            "format": "uint32",
            "type": "integer"
          },
          "methodName": {
            "description": "Required. The name of the shipping method.",
            "type": "string"
          },
          "minDaysInTransit": {
            "description": "Required. Minimum transit time.",
            "format": "uint32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TestOrderPaymentMethod": {
        "properties": {
          "expirationMonth": {
            "description": "The card expiration month (January = 1, February = 2 etc.).",
            "format": "int32",
            "type": "integer"
          },
          "expirationYear": {
            "description": "The card expiration year (4-digit, e.g. 2015).",
            "format": "int32",
            "type": "integer"
          },
          "lastFourDigits": {
            "description": "The last four digits of the card number.",
            "type": "string"
          },
          "predefinedBillingAddress": {
            "description": "The billing address. Acceptable values are: - \"`dwight`\" - \"`jim`\" - \"`pam`\" ",
            "type": "string"
          },
          "type": {
            "description": "The type of instrument. Note that real orders might have different values than the four values accepted by `createTestOrder`. Acceptable values are: - \"`AMEX`\" - \"`DISCOVER`\" - \"`MASTERCARD`\" - \"`VISA`\" ",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OrderLegacyPromotion": {
        "properties": {
          "benefits": {
            "items": {
              "$ref": "#/$defs/OrderLegacyPromotionBenefit"
            },
            "type": "array"
          },
          "effectiveDates": {
            "description": "The date and time frame when the promotion is active and ready for validation review. Note that the promotion live time may be delayed for a few hours due to the validation review. Start date and end date are separated by a forward slash (/). The start date is specified by the format (YYYY-MM-DD), followed by the letter ?T?, the time of the day when the sale starts (in Greenwich Mean Time, GMT), followed by an expression of the time zone for the sale. The end date is in the same format.",
            "type": "string"
          },
          "genericRedemptionCode": {
            "description": "Optional. The text code that corresponds to the promotion when applied on the retailer?s website.",
            "type": "string"
          },
          "id": {
            "description": "The unique ID of the promotion.",
            "type": "string"
          },
          "longTitle": {
            "description": "The full title of the promotion.",
            "type": "string"
          },
          "productApplicability": {
            "description": "Whether the promotion is applicable to all products or only specific products. Acceptable values are: - \"`allProducts`\" - \"`specificProducts`\" ",
            "type": "string"
          },
          "redemptionChannel": {
            "description": "Indicates that the promotion is valid online. Acceptable values are: - \"`online`\" ",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OrderLegacyPromotionBenefit": {
        "properties": {
          "discount": {
            "$ref": "#/$defs/Price"
          },
          "offerIds": {
            "description": "The OfferId(s) that were purchased in this order and map to this specific benefit of the promotion.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "subType": {
            "description": "Further describes the benefit of the promotion. Note that we will expand on this enumeration as we support new promotion sub-types. Acceptable values are: - \"`buyMGetMoneyOff`\" - \"`buyMGetNMoneyOff`\" - \"`buyMGetNPercentOff`\" - \"`buyMGetPercentOff`\" - \"`freeGift`\" - \"`freeGiftWithItemId`\" - \"`freeGiftWithValue`\" - \"`freeOvernightShipping`\" - \"`freeShipping`\" - \"`freeTwoDayShipping`\" - \"`moneyOff`\" - \"`percentageOff`\" - \"`rewardPoints`\" - \"`salePrice`\" ",
            "type": "string"
          },
          "taxImpact": {
            "$ref": "#/$defs/Price"
          },
          "type": {
            "description": "Describes whether the promotion applies to products (e.g. 20% off) or to shipping (e.g. Free Shipping). Acceptable values are: - \"`product`\" - \"`shipping`\" ",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://shoppingcontent.googleapis.com/content/v2/{merchantId}/testorders{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**kind**: Identifies what kind of resource this is. Value: the fixed string \"content#ordersCreateTestOrderResponse\".",
            "**orderId**: The ID of the newly created test order."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
