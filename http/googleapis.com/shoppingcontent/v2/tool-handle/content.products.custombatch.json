{
  "name": "content_products_custombatch",
  "description": "Retrieves, inserts, and deletes multiple products in a single request.",
  "parameters": {
    "type": "object",
    "properties": {
      "dryRun": {
        "type": "boolean",
        "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any)."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/ProductsCustomBatchRequest"
      }
    },
    "$defs": {
      "ProductsCustomBatchRequest": {
        "properties": {
          "entries": {
            "description": "The request entries to be processed in the batch.",
            "items": {
              "$ref": "#/$defs/ProductsCustomBatchRequestEntry"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ProductsCustomBatchRequestEntry": {
        "description": "A batch entry encoding a single non-batch products request.",
        "properties": {
          "batchId": {
            "description": "An entry ID, unique within the batch request.",
            "format": "uint32",
            "type": "integer"
          },
          "merchantId": {
            "description": "The ID of the managing account.",
            "format": "uint64",
            "type": "string"
          },
          "method": {
            "description": "The method of the batch entry. Acceptable values are: - \"`delete`\" - \"`get`\" - \"`insert`\" ",
            "type": "string"
          },
          "product": {
            "$ref": "#/$defs/Product"
          },
          "productId": {
            "description": "The ID of the product to get or delete. Only defined if the method is `get` or `delete`.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Product": {
        "description": " Required product attributes are primarily defined by the products data specification. See the Products Data Specification Help Center article for information. Product data. After inserting, updating, or deleting a product, it may take several minutes before changes take effect.",
        "properties": {
          "additionalImageLinks": {
            "description": "Additional URLs of images of the item.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "additionalProductTypes": {
            "description": "Additional categories of the item (formatted as in products data specification).",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "adult": {
            "description": "Should be set to true if the item is targeted towards adults.",
            "type": "boolean"
          },
          "adwordsGrouping": {
            "description": "Used to group items in an arbitrary way. Only for CPA%, discouraged otherwise.",
            "type": "string"
          },
          "adwordsLabels": {
            "description": "Similar to adwords_grouping, but only works on CPC.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "adwordsRedirect": {
            "description": "Allows advertisers to override the item URL when the product is shown within the context of Product Ads.",
            "type": "string"
          },
          "ageGroup": {
            "description": "Target age group of the item. Acceptable values are: - \"`adult`\" - \"`infant`\" - \"`kids`\" - \"`newborn`\" - \"`toddler`\" - \"`youngAdult`\" ",
            "type": "string"
          },
          "aspects": {
            "description": "Deprecated. Do not use.",
            "items": {
              "$ref": "#/$defs/ProductAspect"
            },
            "type": "array"
          },
          "availability": {
            "description": "Availability status of the item. Acceptable values are: - \"`in stock`\" - \"`out of stock`\" - \"`preorder`\" ",
            "type": "string"
          },
          "availabilityDate": {
            "description": "The day a pre-ordered product becomes available for delivery, in ISO 8601 format.",
            "type": "string"
          },
          "brand": {
            "description": "Brand of the item.",
            "type": "string"
          },
          "canonicalLink": {
            "description": "URL for the canonical version of your item's landing page.",
            "type": "string"
          },
          "channel": {
            "description": "Required. The item's channel (online or local). Acceptable values are: - \"`local`\" - \"`online`\" ",
            "type": "string"
          },
          "color": {
            "description": "Color of the item.",
            "type": "string"
          },
          "condition": {
            "description": "Condition or state of the item. Acceptable values are: - \"`new`\" - \"`refurbished`\" - \"`used`\" ",
            "type": "string"
          },
          "contentLanguage": {
            "description": "Required. The two-letter ISO 639-1 language code for the item.",
            "type": "string"
          },
          "costOfGoodsSold": {
            "$ref": "#/$defs/Price"
          },
          "customAttributes": {
            "description": "A list of custom (merchant-provided) attributes. It can also be used for submitting any attribute of the feed specification in its generic form (e.g., `{ \"name\": \"size type\", \"value\": \"regular\" }`). This is useful for submitting attributes not explicitly exposed by the API, such as additional attributes used for Buy on Google (formerly known as Shopping Actions).",
            "items": {
              "$ref": "#/$defs/CustomAttribute"
            },
            "type": "array"
          },
          "customGroups": {
            "description": "A list of custom (merchant-provided) custom attribute groups.",
            "items": {
              "$ref": "#/$defs/CustomGroup"
            },
            "type": "array"
          },
          "customLabel0": {
            "description": "Custom label 0 for custom grouping of items in a Shopping campaign.",
            "type": "string"
          },
          "customLabel1": {
            "description": "Custom label 1 for custom grouping of items in a Shopping campaign.",
            "type": "string"
          },
          "customLabel2": {
            "description": "Custom label 2 for custom grouping of items in a Shopping campaign.",
            "type": "string"
          },
          "customLabel3": {
            "description": "Custom label 3 for custom grouping of items in a Shopping campaign.",
            "type": "string"
          },
          "customLabel4": {
            "description": "Custom label 4 for custom grouping of items in a Shopping campaign.",
            "type": "string"
          },
          "description": {
            "description": "Description of the item.",
            "type": "string"
          },
          "destinations": {
            "description": "Specifies the intended destinations for the product.",
            "items": {
              "$ref": "#/$defs/ProductDestination"
            },
            "type": "array"
          },
          "displayAdsId": {
            "description": "An identifier for an item for dynamic remarketing campaigns.",
            "type": "string"
          },
          "displayAdsLink": {
            "description": "URL directly to your item's landing page for dynamic remarketing campaigns.",
            "type": "string"
          },
          "displayAdsSimilarIds": {
            "description": "Advertiser-specified recommendations.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "displayAdsTitle": {
            "description": "Title of an item for dynamic remarketing campaigns.",
            "type": "string"
          },
          "displayAdsValue": {
            "description": "Offer margin for dynamic remarketing campaigns.",
            "format": "double",
            "type": "number"
          },
          "energyEfficiencyClass": {
            "description": "The energy efficiency class as defined in EU directive 2010/30/EU. Acceptable values are: - \"`A`\" - \"`A+`\" - \"`A++`\" - \"`A+++`\" - \"`B`\" - \"`C`\" - \"`D`\" - \"`E`\" - \"`F`\" - \"`G`\" ",
            "type": "string"
          },
          "expirationDate": {
            "description": "Date on which the item should expire, as specified upon insertion, in ISO 8601 format. The actual expiration date in Google Shopping is exposed in `productstatuses` as `googleExpirationDate` and might be earlier if `expirationDate` is too far in the future.",
            "type": "string"
          },
          "gender": {
            "description": "Target gender of the item. Acceptable values are: - \"`female`\" - \"`male`\" - \"`unisex`\" ",
            "type": "string"
          },
          "googleProductCategory": {
            "description": "Google's category of the item (see [Google product taxonomy](https://support.google.com/merchants/answer/1705911)). When querying products, this field will contain the user provided value. There is currently no way to get back the auto assigned google product categories through the API.",
            "type": "string"
          },
          "gtin": {
            "description": "Global Trade Item Number (GTIN) of the item.",
            "type": "string"
          },
          "id": {
            "description": "The REST ID of the product. Content API methods that operate on products take this as their `productId` parameter. The REST ID for a product is of the form channel:contentLanguage: targetCountry: offerId.",
            "type": "string"
          },
          "identifierExists": {
            "description": "False when the item does not have unique product identifiers appropriate to its category, such as GTIN, MPN, and brand. Required according to the Unique Product Identifier Rules for all target countries except for Canada.",
            "type": "boolean"
          },
          "imageLink": {
            "description": "URL of an image of the item.",
            "type": "string"
          },
          "installment": {
            "$ref": "#/$defs/Installment"
          },
          "isBundle": {
            "description": "Whether the item is a merchant-defined bundle. A bundle is a custom grouping of different products sold by a merchant for a single price.",
            "type": "boolean"
          },
          "itemGroupId": {
            "description": "Shared identifier for all variants of the same product.",
            "type": "string"
          },
          "kind": {
            "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#product`\"",
            "type": "string"
          },
          "link": {
            "description": "URL directly linking to your item's page on your website.",
            "type": "string"
          },
          "loyaltyPoints": {
            "$ref": "#/$defs/LoyaltyPoints"
          },
          "material": {
            "description": "The material of which the item is made.",
            "type": "string"
          },
          "maxEnergyEfficiencyClass": {
            "description": "The energy efficiency class as defined in EU directive 2010/30/EU. Acceptable values are: - \"`A`\" - \"`A+`\" - \"`A++`\" - \"`A+++`\" - \"`B`\" - \"`C`\" - \"`D`\" - \"`E`\" - \"`F`\" - \"`G`\" ",
            "type": "string"
          },
          "maxHandlingTime": {
            "description": "Maximal product handling time (in business days).",
            "format": "int64",
            "type": "string"
          },
          "minEnergyEfficiencyClass": {
            "description": "The energy efficiency class as defined in EU directive 2010/30/EU. Acceptable values are: - \"`A`\" - \"`A+`\" - \"`A++`\" - \"`A+++`\" - \"`B`\" - \"`C`\" - \"`D`\" - \"`E`\" - \"`F`\" - \"`G`\" ",
            "type": "string"
          },
          "minHandlingTime": {
            "description": "Minimal product handling time (in business days).",
            "format": "int64",
            "type": "string"
          },
          "mobileLink": {
            "description": "URL for the mobile-optimized version of your item's landing page.",
            "type": "string"
          },
          "mpn": {
            "description": "Manufacturer Part Number (MPN) of the item.",
            "type": "string"
          },
          "multipack": {
            "description": "The number of identical products in a merchant-defined multipack.",
            "format": "int64",
            "type": "string"
          },
          "offerId": {
            "description": "Required. A unique identifier for the item. Leading and trailing whitespaces are stripped and multiple whitespaces are replaced by a single whitespace upon submission. Only valid unicode characters are accepted. See the products feed specification for details. *Note:* Content API methods that operate on products take the REST ID of the product, *not* this identifier.",
            "type": "string"
          },
          "onlineOnly": {
            "description": "Deprecated.",
            "type": "boolean"
          },
          "pattern": {
            "description": "The item's pattern (e.g. polka dots).",
            "type": "string"
          },
          "price": {
            "$ref": "#/$defs/Price"
          },
          "productType": {
            "description": "Your category of the item (formatted as in products data specification).",
            "type": "string"
          },
          "promotionIds": {
            "description": "The unique ID of a promotion.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "salePrice": {
            "$ref": "#/$defs/Price"
          },
          "salePriceEffectiveDate": {
            "description": "Date range during which the item is on sale (see products data specification ).",
            "type": "string"
          },
          "sellOnGoogleQuantity": {
            "description": "The quantity of the product that is available for selling on Google. Supported only for online products.",
            "format": "int64",
            "type": "string"
          },
          "shipping": {
            "description": "Shipping rules.",
            "items": {
              "$ref": "#/$defs/ProductShipping"
            },
            "type": "array"
          },
          "shippingHeight": {
            "$ref": "#/$defs/ProductShippingDimension"
          },
          "shippingLabel": {
            "description": "The shipping label of the product, used to group product in account-level shipping rules.",
            "type": "string"
          },
          "shippingLength": {
            "$ref": "#/$defs/ProductShippingDimension"
          },
          "shippingWeight": {
            "$ref": "#/$defs/ProductShippingWeight"
          },
          "shippingWidth": {
            "$ref": "#/$defs/ProductShippingDimension"
          },
          "sizeSystem": {
            "description": "System in which the size is specified. Recommended for apparel items. Acceptable values are: - \"`AU`\" - \"`BR`\" - \"`CN`\" - \"`DE`\" - \"`EU`\" - \"`FR`\" - \"`IT`\" - \"`JP`\" - \"`MEX`\" - \"`UK`\" - \"`US`\" ",
            "type": "string"
          },
          "sizeType": {
            "description": "The cut of the item. Recommended for apparel items. Acceptable values are: - \"`big and tall`\" - \"`maternity`\" - \"`oversize`\" - \"`petite`\" - \"`plus`\" - \"`regular`\" ",
            "type": "string"
          },
          "sizes": {
            "description": "Size of the item. Only one value is allowed. For variants with different sizes, insert a separate product for each size with the same `itemGroupId` value (see size definition).",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "source": {
            "description": "The source of the offer, i.e., how the offer was created. Acceptable values are: - \"`api`\" - \"`crawl`\" - \"`feed`\" ",
            "type": "string"
          },
          "targetCountry": {
            "description": "Required. The CLDR territory code for the item.",
            "type": "string"
          },
          "taxes": {
            "description": "Tax information.",
            "items": {
              "$ref": "#/$defs/ProductTax"
            },
            "type": "array"
          },
          "title": {
            "description": "Title of the item.",
            "type": "string"
          },
          "unitPricingBaseMeasure": {
            "$ref": "#/$defs/ProductUnitPricingBaseMeasure"
          },
          "unitPricingMeasure": {
            "$ref": "#/$defs/ProductUnitPricingMeasure"
          },
          "validatedDestinations": {
            "description": "Deprecated. The read-only list of intended destinations which passed validation.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "warnings": {
            "description": "Read-only warnings.",
            "items": {
              "$ref": "#/$defs/Error"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ProductAspect": {
        "properties": {
          "aspectName": {
            "description": "Deprecated.",
            "type": "string"
          },
          "destinationName": {
            "description": "Deprecated.",
            "type": "string"
          },
          "intention": {
            "description": "Deprecated.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Price": {
        "properties": {
          "currency": {
            "description": "The currency of the price.",
            "type": "string"
          },
          "value": {
            "description": "The price represented as a number.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CustomAttribute": {
        "properties": {
          "name": {
            "description": "The name of the attribute. Underscores will be replaced by spaces upon insertion.",
            "type": "string"
          },
          "type": {
            "description": "The type of the attribute. Acceptable values are: - \"`boolean`\" - \"`datetimerange`\" - \"`float`\" - \"`group`\" - \"`int`\" - \"`price`\" - \"`text`\" - \"`time`\" - \"`url`\" ",
            "type": "string"
          },
          "unit": {
            "description": "Free-form unit of the attribute. Unit can only be used for values of type int, float, or price.",
            "type": "string"
          },
          "value": {
            "description": "The value of the attribute.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CustomGroup": {
        "properties": {
          "attributes": {
            "description": "The sub-attributes.",
            "items": {
              "$ref": "#/$defs/CustomAttribute"
            },
            "type": "array"
          },
          "name": {
            "description": "The name of the group. Underscores will be replaced by spaces upon insertion.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProductDestination": {
        "properties": {
          "destinationName": {
            "description": "The name of the destination.",
            "type": "string"
          },
          "intention": {
            "description": "Whether the destination is required, excluded or should be validated. Acceptable values are: - \"`default`\" - \"`excluded`\" - \"`optional`\" - \"`required`\" ",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Installment": {
        "properties": {
          "amount": {
            "$ref": "#/$defs/Price"
          },
          "months": {
            "description": "The number of installments the buyer has to pay.",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "LoyaltyPoints": {
        "properties": {
          "name": {
            "description": "Name of loyalty points program. It is recommended to limit the name to 12 full-width characters or 24 Roman characters.",
            "type": "string"
          },
          "pointsValue": {
            "description": "The retailer's loyalty points in absolute value.",
            "format": "int64",
            "type": "string"
          },
          "ratio": {
            "description": "The ratio of a point when converted to currency. Google assumes currency based on Merchant Center settings. If ratio is left out, it defaults to 1.0.",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "ProductShipping": {
        "properties": {
          "country": {
            "description": "The CLDR territory code of the country to which an item will ship.",
            "type": "string"
          },
          "locationGroupName": {
            "description": "The location where the shipping is applicable, represented by a location group name.",
            "type": "string"
          },
          "locationId": {
            "description": "The numeric ID of a location that the shipping rate applies to as defined in the AdWords API.",
            "format": "int64",
            "type": "string"
          },
          "postalCode": {
            "description": "The postal code range that the shipping rate applies to, represented by a postal code, a postal code prefix followed by a * wildcard, a range between two postal codes or two postal code prefixes of equal length.",
            "type": "string"
          },
          "price": {
            "$ref": "#/$defs/Price"
          },
          "region": {
            "description": "The geographic region to which a shipping rate applies.",
            "type": "string"
          },
          "service": {
            "description": "A free-form description of the service class or delivery speed.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProductShippingDimension": {
        "properties": {
          "unit": {
            "description": "The unit of value.",
            "type": "string"
          },
          "value": {
            "description": "The dimension of the product used to calculate the shipping cost of the item.",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "ProductShippingWeight": {
        "properties": {
          "unit": {
            "description": "The unit of value.",
            "type": "string"
          },
          "value": {
            "description": "The weight of the product used to calculate the shipping cost of the item.",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "ProductTax": {
        "properties": {
          "country": {
            "description": "The country within which the item is taxed, specified as a CLDR territory code.",
            "type": "string"
          },
          "locationId": {
            "description": "The numeric ID of a location that the tax rate applies to as defined in the AdWords API.",
            "format": "int64",
            "type": "string"
          },
          "postalCode": {
            "description": "The postal code range that the tax rate applies to, represented by a ZIP code, a ZIP code prefix using * wildcard, a range between two ZIP codes or two ZIP code prefixes of equal length. Examples: 94114, 94*, 94002-95460, 94*-95*.",
            "type": "string"
          },
          "rate": {
            "description": "The percentage of tax rate that applies to the item price.",
            "format": "double",
            "type": "number"
          },
          "region": {
            "description": "The geographic region to which the tax rate applies.",
            "type": "string"
          },
          "taxShip": {
            "description": "Should be set to true if tax is charged on shipping.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ProductUnitPricingBaseMeasure": {
        "properties": {
          "unit": {
            "description": "The unit of the denominator.",
            "type": "string"
          },
          "value": {
            "description": "The denominator of the unit price.",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProductUnitPricingMeasure": {
        "properties": {
          "unit": {
            "description": "The unit of the measure.",
            "type": "string"
          },
          "value": {
            "description": "The measure of an item.",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "Error": {
        "description": "An error returned by the API.",
        "properties": {
          "domain": {
            "description": "The domain of the error.",
            "type": "string"
          },
          "message": {
            "description": "A description of the error.",
            "type": "string"
          },
          "reason": {
            "description": "The error code.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://shoppingcontent.googleapis.com/content/v2/products/batch{?dryRun,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**entries**: The result of the execution of the batch requests.",
            "**kind**: Identifies what kind of resource this is. Value: the fixed string \"content#productsCustomBatchResponse\"."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
