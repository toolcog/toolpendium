{
  "name": "sql_databases_get",
  "description": "Retrieves a resource containing information about a database inside a Cloud SQL instance.",
  "parameters": {
    "type": "object",
    "properties": {
      "project": {
        "type": "string",
        "description": "Project ID of the project that contains the instance."
      },
      "instance": {
        "type": "string",
        "description": "Database instance ID. This does not include the project ID."
      },
      "database": {
        "type": "string",
        "description": "Name of the database in the instance."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      }
    },
    "required": [
      "project",
      "instance",
      "database"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://sqladmin.googleapis.com//v1/projects/{project}/instances/{instance}/databases/{database}{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Represents a SQL database on the Cloud SQL instance.",
        "**Key properties:**",
        {
          "$ul": [
            "**charset**: The Cloud SQL charset value.",
            "**collation**: The Cloud SQL collation value.",
            "**etag**: This field is deprecated and will be removed from a future version of the API.",
            "**instance**: The name of the Cloud SQL instance. This does not include the project ID.",
            "**kind**: This is always `sql#database`.",
            "**name**: The name of the database in the Cloud SQL instance. This does not include the project ID or instance name.",
            "**project**: The project ID of the project containing the Cloud SQL database. The Google apps domain is prefixed if applicable.",
            "**selfLink**: The URI of this resource.",
            [
              "**sqlserverDatabaseDetails**: Represents a Sql Server database on the Cloud SQL instance.",
              {
                "$ul": [
                  "**compatibilityLevel**: The version of SQL Server with which the database is to be made compatible",
                  "**recoveryModel**: The recovery model of a SQL Server database"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
