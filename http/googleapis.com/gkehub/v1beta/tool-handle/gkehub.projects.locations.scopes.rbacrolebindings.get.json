{
  "name": "gkehub_projects_locations_scopes_rbacrolebindings_get",
  "description": "Returns the details of a Scope RBACRoleBinding.",
  "parameters": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "Required. The RBACRoleBinding resource name in the format `projects/*/locations/*/scopes/*/rbacrolebindings/*`."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      }
    },
    "required": [
      "name"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://gkehub.googleapis.com//v1beta/{name}{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "RBACRoleBinding represents a rbacrolebinding across the Fleet",
        "**Key properties:**",
        {
          "$ul": [
            "**createTime**: Output only. When the rbacrolebinding was created.",
            "**deleteTime**: Output only. When the rbacrolebinding was deleted.",
            "**group**: group is the group, as seen by the kubernetes cluster.",
            "**labels**: Optional. Labels for this RBACRolebinding.",
            "**name**: The resource name for the rbacrolebinding `projects/{project}/locations/{location}/scopes/{scope}/rbacrolebindings/{rbacrolebinding}` or `projects/{project}/locations/{location}/memberships/{membership}/rbacrolebindings/{rbacrolebinding}`",
            [
              "**role**: Role is the type for Kubernetes roles",
              {
                "$ul": [
                  "**predefinedRole**: predefined_role is the Kubernetes default role to use"
                ]
              }
            ],
            [
              "**state**: RBACRoleBindingLifecycleState describes the state of a RbacRoleBinding resource.",
              {
                "$ul": [
                  "**code**: Output only. The current state of the rbacrolebinding resource."
                ]
              }
            ],
            "**uid**: Output only. Google-generated UUID for this resource. This is unique across all rbacrolebinding resources. If a rbacrolebinding resource is deleted and another resource with the same name is created, it gets a different uid.",
            "**updateTime**: Output only. When the rbacrolebinding was last updated.",
            "**user**: user is the name of the user as seen by the kubernetes cluster, example \"alice\" or \"alice@domain.tld\""
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
