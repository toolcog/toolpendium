{
  "name": "contactcenterinsights_projects_locations_conversations_create",
  "description": "Creates a conversation.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The parent resource of the conversation."
      },
      "conversationId": {
        "type": "string",
        "description": "A unique ID for the new conversation. This ID will become the final component of the conversation's resource name. If no ID is specified, a server-generated ID will be used. This value should be 4-64 characters and must match the regular expression `^[a-z0-9-]{4,64}$`. Valid characters are `a-z-`"
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleCloudContactcenterinsightsV1Conversation"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "GoogleCloudContactcenterinsightsV1Conversation": {
        "description": "The conversation resource.",
        "properties": {
          "agentId": {
            "description": "An opaque, user-specified string representing the human agent who handled the conversation.",
            "type": "string"
          },
          "callMetadata": {
            "$ref": "#/$defs/GoogleCloudContactcenterinsightsV1ConversationCallMetadata"
          },
          "createTime": {
            "description": "Output only. The time at which the conversation was created.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "dataSource": {
            "$ref": "#/$defs/GoogleCloudContactcenterinsightsV1ConversationDataSource"
          },
          "dialogflowIntents": {
            "additionalProperties": {
              "$ref": "#/$defs/GoogleCloudContactcenterinsightsV1DialogflowIntent"
            },
            "description": "Output only. All the matched Dialogflow intents in the call. The key corresponds to a Dialogflow intent, format: projects/{project}/agent/{agent}/intents/{intent}",
            "readOnly": true,
            "type": "object"
          },
          "duration": {
            "description": "Output only. The duration of the conversation.",
            "format": "google-duration",
            "readOnly": true,
            "type": "string"
          },
          "expireTime": {
            "description": "The time at which this conversation should expire. After this time, the conversation data and any associated analyses will be deleted.",
            "format": "google-datetime",
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "A map for the user to specify any custom fields. A maximum of 20 labels per conversation is allowed, with a maximum of 256 characters per entry.",
            "type": "object"
          },
          "languageCode": {
            "description": "A user-specified language code for the conversation.",
            "type": "string"
          },
          "latestAnalysis": {
            "$ref": "#/$defs/GoogleCloudContactcenterinsightsV1Analysis"
          },
          "latestSummary": {
            "$ref": "#/$defs/GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData"
          },
          "medium": {
            "description": "Immutable. The conversation medium, if unspecified will default to PHONE_CALL.",
            "enum": [
              "MEDIUM_UNSPECIFIED",
              "PHONE_CALL",
              "CHAT"
            ],
            "type": "string"
          },
          "name": {
            "description": "Immutable. The resource name of the conversation. Format: projects/{project}/locations/{location}/conversations/{conversation}",
            "type": "string"
          },
          "obfuscatedUserId": {
            "description": "Obfuscated user ID which the customer sent to us.",
            "type": "string"
          },
          "qualityMetadata": {
            "$ref": "#/$defs/GoogleCloudContactcenterinsightsV1ConversationQualityMetadata"
          },
          "runtimeAnnotations": {
            "description": "Output only. The annotations that were generated during the customer and agent interaction.",
            "items": {
              "$ref": "#/$defs/GoogleCloudContactcenterinsightsV1RuntimeAnnotation"
            },
            "readOnly": true,
            "type": "array"
          },
          "startTime": {
            "description": "The time at which the conversation started.",
            "format": "google-datetime",
            "type": "string"
          },
          "transcript": {
            "$ref": "#/$defs/GoogleCloudContactcenterinsightsV1ConversationTranscript"
          },
          "ttl": {
            "description": "Input only. The TTL for this resource. If specified, then this TTL will be used to calculate the expire time.",
            "format": "google-duration",
            "type": "string"
          },
          "turnCount": {
            "description": "Output only. The number of turns in the conversation.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "updateTime": {
            "description": "Output only. The most recent time at which the conversation was updated.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudContactcenterinsightsV1ConversationCallMetadata": {
        "description": "Call-specific metadata.",
        "properties": {
          "agentChannel": {
            "description": "The audio channel that contains the agent.",
            "format": "int32",
            "type": "integer"
          },
          "customerChannel": {
            "description": "The audio channel that contains the customer.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GoogleCloudContactcenterinsightsV1ConversationDataSource": {
        "description": "The conversation source, which is a combination of transcript and audio.",
        "properties": {
          "dialogflowSource": {
            "$ref": "#/$defs/GoogleCloudContactcenterinsightsV1DialogflowSource"
          },
          "gcsSource": {
            "$ref": "#/$defs/GoogleCloudContactcenterinsightsV1GcsSource"
          }
        },
        "type": "object"
      },
      "GoogleCloudContactcenterinsightsV1DialogflowSource": {
        "description": "A Dialogflow source of conversation data.",
        "properties": {
          "audioUri": {
            "description": "Cloud Storage URI that points to a file that contains the conversation audio.",
            "type": "string"
          },
          "dialogflowConversation": {
            "description": "Output only. The name of the Dialogflow conversation that this conversation resource is derived from. Format: projects/{project}/locations/{location}/conversations/{conversation}",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudContactcenterinsightsV1GcsSource": {
        "description": "A Cloud Storage source of conversation data.",
        "properties": {
          "audioUri": {
            "description": "Cloud Storage URI that points to a file that contains the conversation audio.",
            "type": "string"
          },
          "transcriptUri": {
            "description": "Immutable. Cloud Storage URI that points to a file that contains the conversation transcript.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudContactcenterinsightsV1DialogflowIntent": {
        "description": "The data for a Dialogflow intent. Represents a detected intent in the conversation, e.g. MAKES_PROMISE.",
        "properties": {
          "displayName": {
            "description": "The human-readable name of the intent.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudContactcenterinsightsV1Analysis": {
        "description": "The analysis resource.",
        "properties": {
          "analysisResult": {
            "$ref": "#/$defs/GoogleCloudContactcenterinsightsV1AnalysisResult"
          },
          "annotatorSelector": {
            "$ref": "#/$defs/GoogleCloudContactcenterinsightsV1AnnotatorSelector"
          },
          "createTime": {
            "description": "Output only. The time at which the analysis was created, which occurs when the long-running operation completes.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "Immutable. The resource name of the analysis. Format: projects/{project}/locations/{location}/conversations/{conversation}/analyses/{analysis}",
            "type": "string"
          },
          "requestTime": {
            "description": "Output only. The time at which the analysis was requested.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudContactcenterinsightsV1AnalysisResult": {
        "description": "The result of an analysis.",
        "properties": {
          "callAnalysisMetadata": {
            "$ref": "#/$defs/GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata"
          },
          "endTime": {
            "description": "The time at which the analysis ended.",
            "format": "google-datetime",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadata": {
        "description": "Call-specific metadata created during analysis.",
        "properties": {
          "annotations": {
            "description": "A list of call annotations that apply to this call.",
            "items": {
              "$ref": "#/$defs/GoogleCloudContactcenterinsightsV1CallAnnotation"
            },
            "type": "array"
          },
          "entities": {
            "additionalProperties": {
              "$ref": "#/$defs/GoogleCloudContactcenterinsightsV1Entity"
            },
            "description": "All the entities in the call.",
            "type": "object"
          },
          "intents": {
            "additionalProperties": {
              "$ref": "#/$defs/GoogleCloudContactcenterinsightsV1Intent"
            },
            "description": "All the matched intents in the call.",
            "type": "object"
          },
          "issueModelResult": {
            "$ref": "#/$defs/GoogleCloudContactcenterinsightsV1IssueModelResult"
          },
          "phraseMatchers": {
            "additionalProperties": {
              "$ref": "#/$defs/GoogleCloudContactcenterinsightsV1PhraseMatchData"
            },
            "description": "All the matched phrase matchers in the call.",
            "type": "object"
          },
          "sentiments": {
            "description": "Overall conversation-level sentiment for each channel of the call.",
            "items": {
              "$ref": "#/$defs/GoogleCloudContactcenterinsightsV1ConversationLevelSentiment"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudContactcenterinsightsV1CallAnnotation": {
        "description": "A piece of metadata that applies to a window of a call.",
        "properties": {
          "annotationEndBoundary": {
            "$ref": "#/$defs/GoogleCloudContactcenterinsightsV1AnnotationBoundary"
          },
          "annotationStartBoundary": {
            "$ref": "#/$defs/GoogleCloudContactcenterinsightsV1AnnotationBoundary"
          },
          "channelTag": {
            "description": "The channel of the audio where the annotation occurs. For single-channel audio, this field is not populated.",
            "format": "int32",
            "type": "integer"
          },
          "entityMentionData": {
            "$ref": "#/$defs/GoogleCloudContactcenterinsightsV1EntityMentionData"
          },
          "holdData": {
            "$ref": "#/$defs/GoogleCloudContactcenterinsightsV1HoldData"
          },
          "intentMatchData": {
            "$ref": "#/$defs/GoogleCloudContactcenterinsightsV1IntentMatchData"
          },
          "interruptionData": {
            "$ref": "#/$defs/GoogleCloudContactcenterinsightsV1InterruptionData"
          },
          "issueMatchData": {
            "$ref": "#/$defs/GoogleCloudContactcenterinsightsV1IssueMatchData"
          },
          "phraseMatchData": {
            "$ref": "#/$defs/GoogleCloudContactcenterinsightsV1PhraseMatchData"
          },
          "sentimentData": {
            "$ref": "#/$defs/GoogleCloudContactcenterinsightsV1SentimentData"
          },
          "silenceData": {
            "$ref": "#/$defs/GoogleCloudContactcenterinsightsV1SilenceData"
          }
        },
        "type": "object"
      },
      "GoogleCloudContactcenterinsightsV1AnnotationBoundary": {
        "description": "A point in a conversation that marks the start or the end of an annotation.",
        "properties": {
          "transcriptIndex": {
            "description": "The index in the sequence of transcribed pieces of the conversation where the boundary is located. This index starts at zero.",
            "format": "int32",
            "type": "integer"
          },
          "wordIndex": {
            "description": "The word index of this boundary with respect to the first word in the transcript piece. This index starts at zero.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GoogleCloudContactcenterinsightsV1EntityMentionData": {
        "description": "The data for an entity mention annotation. This represents a mention of an `Entity` in the conversation.",
        "properties": {
          "entityUniqueId": {
            "description": "The key of this entity in conversation entities. Can be used to retrieve the exact `Entity` this mention is attached to.",
            "type": "string"
          },
          "sentiment": {
            "$ref": "#/$defs/GoogleCloudContactcenterinsightsV1SentimentData"
          },
          "type": {
            "description": "The type of the entity mention.",
            "enum": [
              "MENTION_TYPE_UNSPECIFIED",
              "PROPER",
              "COMMON"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudContactcenterinsightsV1SentimentData": {
        "description": "The data for a sentiment annotation.",
        "properties": {
          "magnitude": {
            "description": "A non-negative number from 0 to infinity which represents the abolute magnitude of sentiment regardless of score.",
            "format": "float",
            "type": "number"
          },
          "score": {
            "description": "The sentiment score between -1.0 (negative) and 1.0 (positive).",
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "GoogleCloudContactcenterinsightsV1HoldData": {
        "description": "The data for a hold annotation.",
        "properties": {},
        "type": "object"
      },
      "GoogleCloudContactcenterinsightsV1IntentMatchData": {
        "description": "The data for an intent match. Represents an intent match for a text segment in the conversation. A text segment can be part of a sentence, a complete sentence, or an utterance with multiple sentences.",
        "properties": {
          "intentUniqueId": {
            "description": "The id of the matched intent. Can be used to retrieve the corresponding intent information.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudContactcenterinsightsV1InterruptionData": {
        "description": "The data for an interruption annotation.",
        "properties": {},
        "type": "object"
      },
      "GoogleCloudContactcenterinsightsV1IssueMatchData": {
        "description": "The data for an issue match annotation.",
        "properties": {
          "issueAssignment": {
            "$ref": "#/$defs/GoogleCloudContactcenterinsightsV1IssueAssignment"
          }
        },
        "type": "object"
      },
      "GoogleCloudContactcenterinsightsV1IssueAssignment": {
        "description": "Information about the issue.",
        "properties": {
          "displayName": {
            "description": "Immutable. Display name of the assigned issue. This field is set at time of analyis and immutable since then.",
            "type": "string"
          },
          "issue": {
            "description": "Resource name of the assigned issue.",
            "type": "string"
          },
          "score": {
            "description": "Score indicating the likelihood of the issue assignment. currently bounded on [0,1].",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "GoogleCloudContactcenterinsightsV1PhraseMatchData": {
        "description": "The data for a matched phrase matcher. Represents information identifying a phrase matcher for a given match.",
        "properties": {
          "displayName": {
            "description": "The human-readable name of the phrase matcher.",
            "type": "string"
          },
          "phraseMatcher": {
            "description": "The unique identifier (the resource name) of the phrase matcher.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudContactcenterinsightsV1SilenceData": {
        "description": "The data for a silence annotation.",
        "properties": {},
        "type": "object"
      },
      "GoogleCloudContactcenterinsightsV1Entity": {
        "description": "The data for an entity annotation. Represents a phrase in the conversation that is a known entity, such as a person, an organization, or location.",
        "properties": {
          "displayName": {
            "description": "The representative name for the entity.",
            "type": "string"
          },
          "metadata": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Metadata associated with the entity. For most entity types, the metadata is a Wikipedia URL (`wikipedia_url`) and Knowledge Graph MID (`mid`), if they are available. For the metadata associated with other entity types, see the Type table below.",
            "type": "object"
          },
          "salience": {
            "description": "The salience score associated with the entity in the [0, 1.0] range. The salience score for an entity provides information about the importance or centrality of that entity to the entire document text. Scores closer to 0 are less salient, while scores closer to 1.0 are highly salient.",
            "format": "float",
            "type": "number"
          },
          "sentiment": {
            "$ref": "#/$defs/GoogleCloudContactcenterinsightsV1SentimentData"
          },
          "type": {
            "description": "The entity type.",
            "enum": [
              "TYPE_UNSPECIFIED",
              "PERSON",
              "LOCATION",
              "ORGANIZATION",
              "EVENT",
              "WORK_OF_ART",
              "CONSUMER_GOOD",
              "OTHER",
              "PHONE_NUMBER",
              "ADDRESS",
              "DATE",
              "NUMBER",
              "PRICE"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudContactcenterinsightsV1Intent": {
        "description": "The data for an intent. Represents a detected intent in the conversation, for example MAKES_PROMISE.",
        "properties": {
          "displayName": {
            "description": "The human-readable name of the intent.",
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the intent.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudContactcenterinsightsV1IssueModelResult": {
        "description": "Issue Modeling result on a conversation.",
        "properties": {
          "issueModel": {
            "description": "Issue model that generates the result. Format: projects/{project}/locations/{location}/issueModels/{issue_model}",
            "type": "string"
          },
          "issues": {
            "description": "All the matched issues.",
            "items": {
              "$ref": "#/$defs/GoogleCloudContactcenterinsightsV1IssueAssignment"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudContactcenterinsightsV1ConversationLevelSentiment": {
        "description": "One channel of conversation-level sentiment data.",
        "properties": {
          "channelTag": {
            "description": "The channel of the audio that the data applies to.",
            "format": "int32",
            "type": "integer"
          },
          "sentimentData": {
            "$ref": "#/$defs/GoogleCloudContactcenterinsightsV1SentimentData"
          }
        },
        "type": "object"
      },
      "GoogleCloudContactcenterinsightsV1AnnotatorSelector": {
        "description": "Selector of all available annotators and phrase matchers to run.",
        "properties": {
          "issueModels": {
            "description": "The issue model to run. If not provided, the most recently deployed topic model will be used. The provided issue model will only be used for inference if the issue model is deployed and if run_issue_model_annotator is set to true. If more than one issue model is provided, only the first provided issue model will be used for inference.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "phraseMatchers": {
            "description": "The list of phrase matchers to run. If not provided, all active phrase matchers will be used. If inactive phrase matchers are provided, they will not be used. Phrase matchers will be run only if run_phrase_matcher_annotator is set to true. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "runEntityAnnotator": {
            "description": "Whether to run the entity annotator.",
            "type": "boolean"
          },
          "runIntentAnnotator": {
            "description": "Whether to run the intent annotator.",
            "type": "boolean"
          },
          "runInterruptionAnnotator": {
            "description": "Whether to run the interruption annotator.",
            "type": "boolean"
          },
          "runIssueModelAnnotator": {
            "description": "Whether to run the issue model annotator. A model should have already been deployed for this to take effect.",
            "type": "boolean"
          },
          "runPhraseMatcherAnnotator": {
            "description": "Whether to run the active phrase matcher annotator(s).",
            "type": "boolean"
          },
          "runSentimentAnnotator": {
            "description": "Whether to run the sentiment annotator.",
            "type": "boolean"
          },
          "runSilenceAnnotator": {
            "description": "Whether to run the silence annotator.",
            "type": "boolean"
          },
          "runSummarizationAnnotator": {
            "description": "Whether to run the summarization annotator.",
            "type": "boolean"
          },
          "summarizationConfig": {
            "$ref": "#/$defs/GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig"
          }
        },
        "type": "object"
      },
      "GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig": {
        "description": "Configuration for summarization.",
        "properties": {
          "conversationProfile": {
            "description": "Resource name of the Dialogflow conversation profile. Format: projects/{project}/locations/{location}/conversationProfiles/{conversation_profile}",
            "type": "string"
          },
          "summarizationModel": {
            "description": "Default summarization model to be used.",
            "enum": [
              "SUMMARIZATION_MODEL_UNSPECIFIED",
              "BASELINE_MODEL"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData": {
        "description": "Conversation summarization suggestion data.",
        "properties": {
          "answerRecord": {
            "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}",
            "type": "string"
          },
          "confidence": {
            "description": "The confidence score of the summarization.",
            "format": "float",
            "type": "number"
          },
          "conversationModel": {
            "description": "The name of the model that generates this summary. Format: projects/{project}/locations/{location}/conversationModels/{conversation_model}",
            "type": "string"
          },
          "metadata": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "A map that contains metadata about the summarization and the document from which it originates.",
            "type": "object"
          },
          "text": {
            "description": "The summarization content that is concatenated into one string.",
            "type": "string"
          },
          "textSections": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The summarization content that is divided into sections. The key is the section's name and the value is the section's content. There is no specific format for the key or value.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "GoogleCloudContactcenterinsightsV1ConversationQualityMetadata": {
        "description": "Conversation metadata related to quality management.",
        "properties": {
          "agentInfo": {
            "description": "Information about agents involved in the call.",
            "items": {
              "$ref": "#/$defs/GoogleCloudContactcenterinsightsV1ConversationQualityMetadataAgentInfo"
            },
            "type": "array"
          },
          "customerSatisfactionRating": {
            "description": "An arbitrary integer value indicating the customer's satisfaction rating.",
            "format": "int32",
            "type": "integer"
          },
          "menuPath": {
            "description": "An arbitrary string value specifying the menu path the customer took.",
            "type": "string"
          },
          "waitDuration": {
            "description": "The amount of time the customer waited to connect with an agent.",
            "format": "google-duration",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudContactcenterinsightsV1ConversationQualityMetadataAgentInfo": {
        "description": "Information about an agent involved in the conversation.",
        "properties": {
          "agentId": {
            "description": "A user-specified string representing the agent.",
            "type": "string"
          },
          "displayName": {
            "description": "The agent's name.",
            "type": "string"
          },
          "dispositionCode": {
            "description": "A user-provided string indicating the outcome of the agent's segment of the call.",
            "type": "string"
          },
          "team": {
            "description": "A user-specified string representing the agent's team.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudContactcenterinsightsV1RuntimeAnnotation": {
        "description": "An annotation that was generated during the customer and agent interaction.",
        "properties": {
          "annotationId": {
            "description": "The unique identifier of the annotation. Format: projects/{project}/locations/{location}/conversationDatasets/{dataset}/conversationDataItems/{data_item}/conversationAnnotations/{annotation}",
            "type": "string"
          },
          "answerFeedback": {
            "$ref": "#/$defs/GoogleCloudContactcenterinsightsV1AnswerFeedback"
          },
          "articleSuggestion": {
            "$ref": "#/$defs/GoogleCloudContactcenterinsightsV1ArticleSuggestionData"
          },
          "conversationSummarizationSuggestion": {
            "$ref": "#/$defs/GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionData"
          },
          "createTime": {
            "description": "The time at which this annotation was created.",
            "format": "google-datetime",
            "type": "string"
          },
          "dialogflowInteraction": {
            "$ref": "#/$defs/GoogleCloudContactcenterinsightsV1DialogflowInteractionData"
          },
          "endBoundary": {
            "$ref": "#/$defs/GoogleCloudContactcenterinsightsV1AnnotationBoundary"
          },
          "faqAnswer": {
            "$ref": "#/$defs/GoogleCloudContactcenterinsightsV1FaqAnswerData"
          },
          "smartComposeSuggestion": {
            "$ref": "#/$defs/GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData"
          },
          "smartReply": {
            "$ref": "#/$defs/GoogleCloudContactcenterinsightsV1SmartReplyData"
          },
          "startBoundary": {
            "$ref": "#/$defs/GoogleCloudContactcenterinsightsV1AnnotationBoundary"
          }
        },
        "type": "object"
      },
      "GoogleCloudContactcenterinsightsV1AnswerFeedback": {
        "description": "The feedback that the customer has about a certain answer in the conversation.",
        "properties": {
          "clicked": {
            "description": "Indicates whether an answer or item was clicked by the human agent.",
            "type": "boolean"
          },
          "correctnessLevel": {
            "description": "The correctness level of an answer.",
            "enum": [
              "CORRECTNESS_LEVEL_UNSPECIFIED",
              "NOT_CORRECT",
              "PARTIALLY_CORRECT",
              "FULLY_CORRECT"
            ],
            "type": "string"
          },
          "displayed": {
            "description": "Indicates whether an answer or item was displayed to the human agent in the agent desktop UI.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GoogleCloudContactcenterinsightsV1ArticleSuggestionData": {
        "description": "Agent Assist Article Suggestion data.",
        "properties": {
          "confidenceScore": {
            "description": "The system's confidence score that this article is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
            "format": "float",
            "type": "number"
          },
          "metadata": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Map that contains metadata about the Article Suggestion and the document that it originates from.",
            "type": "object"
          },
          "queryRecord": {
            "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}",
            "type": "string"
          },
          "source": {
            "description": "The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}",
            "type": "string"
          },
          "title": {
            "description": "Article title.",
            "type": "string"
          },
          "uri": {
            "description": "Article URI.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudContactcenterinsightsV1DialogflowInteractionData": {
        "description": "Dialogflow interaction data.",
        "properties": {
          "confidence": {
            "description": "The confidence of the match ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
            "format": "float",
            "type": "number"
          },
          "dialogflowIntentId": {
            "description": "The Dialogflow intent resource path. Format: projects/{project}/agent/{agent}/intents/{intent}",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudContactcenterinsightsV1FaqAnswerData": {
        "description": "Agent Assist frequently-asked-question answer data.",
        "properties": {
          "answer": {
            "description": "The piece of text from the `source` knowledge base document.",
            "type": "string"
          },
          "confidenceScore": {
            "description": "The system's confidence score that this answer is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
            "format": "float",
            "type": "number"
          },
          "metadata": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Map that contains metadata about the FAQ answer and the document that it originates from.",
            "type": "object"
          },
          "queryRecord": {
            "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}",
            "type": "string"
          },
          "question": {
            "description": "The corresponding FAQ question.",
            "type": "string"
          },
          "source": {
            "description": "The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData": {
        "description": "Agent Assist Smart Compose suggestion data.",
        "properties": {
          "confidenceScore": {
            "description": "The system's confidence score that this suggestion is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
            "format": "double",
            "type": "number"
          },
          "metadata": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Map that contains metadata about the Smart Compose suggestion and the document from which it originates.",
            "type": "object"
          },
          "queryRecord": {
            "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}",
            "type": "string"
          },
          "suggestion": {
            "description": "The content of the suggestion.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudContactcenterinsightsV1SmartReplyData": {
        "description": "Agent Assist Smart Reply data.",
        "properties": {
          "confidenceScore": {
            "description": "The system's confidence score that this reply is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).",
            "format": "double",
            "type": "number"
          },
          "metadata": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Map that contains metadata about the Smart Reply and the document from which it originates.",
            "type": "object"
          },
          "queryRecord": {
            "description": "The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}",
            "type": "string"
          },
          "reply": {
            "description": "The content of the reply.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudContactcenterinsightsV1ConversationTranscript": {
        "description": "A message representing the transcript of a conversation.",
        "properties": {
          "transcriptSegments": {
            "description": "A list of sequential transcript segments that comprise the conversation.",
            "items": {
              "$ref": "#/$defs/GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegment": {
        "description": "A segment of a full transcript.",
        "properties": {
          "channelTag": {
            "description": "For conversations derived from multi-channel audio, this is the channel number corresponding to the audio from that channel. For audioChannelCount = N, its output values can range from '1' to 'N'. A channel tag of 0 indicates that the audio is mono.",
            "format": "int32",
            "type": "integer"
          },
          "confidence": {
            "description": "A confidence estimate between 0.0 and 1.0 of the fidelity of this segment. A default value of 0.0 indicates that the value is unset.",
            "format": "float",
            "type": "number"
          },
          "dialogflowSegmentMetadata": {
            "$ref": "#/$defs/GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata"
          },
          "languageCode": {
            "description": "The language code of this segment as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: \"en-US\".",
            "type": "string"
          },
          "messageTime": {
            "description": "The time that the message occurred, if provided.",
            "format": "google-datetime",
            "type": "string"
          },
          "segmentParticipant": {
            "$ref": "#/$defs/GoogleCloudContactcenterinsightsV1ConversationParticipant"
          },
          "sentiment": {
            "$ref": "#/$defs/GoogleCloudContactcenterinsightsV1SentimentData"
          },
          "text": {
            "description": "The text of this segment.",
            "type": "string"
          },
          "words": {
            "description": "A list of the word-specific information for each word in the segment.",
            "items": {
              "$ref": "#/$defs/GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadata": {
        "description": "Metadata from Dialogflow relating to the current transcript segment.",
        "properties": {
          "smartReplyAllowlistCovered": {
            "description": "Whether the transcript segment was covered under the configured smart reply allowlist in Agent Assist.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GoogleCloudContactcenterinsightsV1ConversationParticipant": {
        "description": "The call participant speaking for a given utterance.",
        "properties": {
          "dialogflowParticipant": {
            "deprecated": true,
            "description": "Deprecated. Use `dialogflow_participant_name` instead. The name of the Dialogflow participant. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}",
            "type": "string"
          },
          "dialogflowParticipantName": {
            "description": "The name of the participant provided by Dialogflow. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}",
            "type": "string"
          },
          "obfuscatedExternalUserId": {
            "description": "Obfuscated user ID from Dialogflow.",
            "type": "string"
          },
          "role": {
            "description": "The role of the participant.",
            "enum": [
              "ROLE_UNSPECIFIED",
              "HUMAN_AGENT",
              "AUTOMATED_AGENT",
              "END_USER",
              "ANY_AGENT"
            ],
            "type": "string"
          },
          "userId": {
            "description": "A user-specified ID representing the participant.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfo": {
        "description": "Word-level info for words in a transcript.",
        "properties": {
          "confidence": {
            "description": "A confidence estimate between 0.0 and 1.0 of the fidelity of this word. A default value of 0.0 indicates that the value is unset.",
            "format": "float",
            "type": "number"
          },
          "endOffset": {
            "description": "Time offset of the end of this word relative to the beginning of the total conversation.",
            "format": "google-duration",
            "type": "string"
          },
          "startOffset": {
            "description": "Time offset of the start of this word relative to the beginning of the total conversation.",
            "format": "google-duration",
            "type": "string"
          },
          "word": {
            "description": "The word itself. Includes punctuation marks that surround the word.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://contactcenterinsights.googleapis.com//v1/{parent}/conversations{?conversationId,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The conversation resource.",
        "**Key properties:**",
        {
          "$ul": [
            "**agentId**: An opaque, user-specified string representing the human agent who handled the conversation.",
            [
              "**callMetadata**: Call-specific metadata.",
              {
                "$ul": [
                  "**agentChannel**: The audio channel that contains the agent.",
                  "**customerChannel**: The audio channel that contains the customer."
                ]
              }
            ],
            "**createTime**: Output only. The time at which the conversation was created.",
            [
              "**dataSource**: The conversation source, which is a combination of transcript and audio.",
              {
                "$ul": [
                  [
                    "**dialogflowSource**: A Dialogflow source of conversation data.",
                    {
                      "$ul": [
                        "**audioUri**: Cloud Storage URI that points to a file that contains the conversation audio.",
                        "**dialogflowConversation**: Output only. The name of the Dialogflow conversation that this conversation resource is derived from. Format: projects/{project}/locations/{location}/conversations/{conversation}"
                      ]
                    }
                  ],
                  [
                    "**gcsSource**: A Cloud Storage source of conversation data.",
                    {
                      "$ul": [
                        "**audioUri**: Cloud Storage URI that points to a file that contains the conversation audio.",
                        "**transcriptUri**: Immutable. Cloud Storage URI that points to a file that contains the conversation transcript."
                      ]
                    }
                  ]
                ]
              }
            ],
            "**dialogflowIntents**: Output only. All the matched Dialogflow intents in the call. The key corresponds to a Dialogflow intent, format: projects/{project}/agent/{agent}/intents/{intent}",
            "**duration**: Output only. The duration of the conversation.",
            "**expireTime**: The time at which this conversation should expire. After this time, the conversation data and any associated analyses will be deleted.",
            "**labels**: A map for the user to specify any custom fields. A maximum of 20 labels per conversation is allowed, with a maximum of 256 characters per entry.",
            "**languageCode**: A user-specified language code for the conversation.",
            [
              "**latestAnalysis**: The analysis resource.",
              {
                "$ul": [
                  [
                    "**analysisResult**: The result of an analysis.",
                    {
                      "$ul": [
                        [
                          "**callAnalysisMetadata**: Call-specific metadata created during analysis.",
                          {
                            "$ul": [
                              "**annotations**: A list of call annotations that apply to this call.",
                              "**entities**: All the entities in the call.",
                              "**intents**: All the matched intents in the call.",
                              [
                                "**issueModelResult**: Issue Modeling result on a conversation.",
                                {
                                  "$ul": [
                                    "**issueModel**: Issue model that generates the result. Format: projects/{project}/locations/{location}/issueModels/{issue_model}",
                                    "**issues**: All the matched issues."
                                  ]
                                }
                              ],
                              "**phraseMatchers**: All the matched phrase matchers in the call.",
                              "**sentiments**: Overall conversation-level sentiment for each channel of the call."
                            ]
                          }
                        ],
                        "**endTime**: The time at which the analysis ended."
                      ]
                    }
                  ],
                  [
                    "**annotatorSelector**: Selector of all available annotators and phrase matchers to run.",
                    {
                      "$ul": [
                        "**issueModels**: The issue model to run. If not provided, the most recently deployed topic model will be used. The provided issue model will only be used for inference if the issue model is deployed and if run_issue_model_annotator is set to true. If more than one issue model is provided, only the first provided issue model will be used for inference.",
                        "**phraseMatchers**: The list of phrase matchers to run. If not provided, all active phrase matchers will be used. If inactive phrase matchers are provided, they will not be used. Phrase matchers will be run only if run_phrase_matcher_annotator is set to true. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}",
                        "**runEntityAnnotator**: Whether to run the entity annotator.",
                        "**runIntentAnnotator**: Whether to run the intent annotator.",
                        "**runInterruptionAnnotator**: Whether to run the interruption annotator.",
                        "**runIssueModelAnnotator**: Whether to run the issue model annotator. A model should have already been deployed for this to take effect.",
                        "**runPhraseMatcherAnnotator**: Whether to run the active phrase matcher annotator(s).",
                        "**runSentimentAnnotator**: Whether to run the sentiment annotator.",
                        "**runSilenceAnnotator**: Whether to run the silence annotator.",
                        "**runSummarizationAnnotator**: Whether to run the summarization annotator.",
                        [
                          "**summarizationConfig**: Configuration for summarization.",
                          {
                            "$ul": [
                              "**conversationProfile**: Resource name of the Dialogflow conversation profile. Format: projects/{project}/locations/{location}/conversationProfiles/{conversation_profile}",
                              "**summarizationModel**: Default summarization model to be used."
                            ]
                          }
                        ]
                      ]
                    }
                  ],
                  "**createTime**: Output only. The time at which the analysis was created, which occurs when the long-running operation completes.",
                  "**name**: Immutable. The resource name of the analysis. Format: projects/{project}/locations/{location}/conversations/{conversation}/analyses/{analysis}",
                  "**requestTime**: Output only. The time at which the analysis was requested."
                ]
              }
            ],
            [
              "**latestSummary**: Conversation summarization suggestion data.",
              {
                "$ul": [
                  "**answerRecord**: The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}",
                  "**confidence**: The confidence score of the summarization.",
                  "**conversationModel**: The name of the model that generates this summary. Format: projects/{project}/locations/{location}/conversationModels/{conversation_model}",
                  "**metadata**: A map that contains metadata about the summarization and the document from which it originates.",
                  "**text**: The summarization content that is concatenated into one string.",
                  "**textSections**: The summarization content that is divided into sections. The key is the section's name and the value is the section's content. There is no specific format for the key or value."
                ]
              }
            ],
            "**medium**: Immutable. The conversation medium, if unspecified will default to PHONE_CALL.",
            "**name**: Immutable. The resource name of the conversation. Format: projects/{project}/locations/{location}/conversations/{conversation}",
            "**obfuscatedUserId**: Obfuscated user ID which the customer sent to us.",
            [
              "**qualityMetadata**: Conversation metadata related to quality management.",
              {
                "$ul": [
                  "**agentInfo**: Information about agents involved in the call.",
                  "**customerSatisfactionRating**: An arbitrary integer value indicating the customer's satisfaction rating.",
                  "**menuPath**: An arbitrary string value specifying the menu path the customer took.",
                  "**waitDuration**: The amount of time the customer waited to connect with an agent."
                ]
              }
            ],
            "**runtimeAnnotations**: Output only. The annotations that were generated during the customer and agent interaction.",
            "**startTime**: The time at which the conversation started.",
            [
              "**transcript**: A message representing the transcript of a conversation.",
              {
                "$ul": [
                  "**transcriptSegments**: A list of sequential transcript segments that comprise the conversation."
                ]
              }
            ],
            "**ttl**: Input only. The TTL for this resource. If specified, then this TTL will be used to calculate the expire time.",
            "**turnCount**: Output only. The number of turns in the conversation.",
            "**updateTime**: Output only. The most recent time at which the conversation was updated."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
