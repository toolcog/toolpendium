{
  "name": "contactcenterinsights_projects_locations_conversations_bulkAnalyze",
  "description": "Analyzes multiple conversations in a single request.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The parent resource to create analyses in."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest": {
        "description": "The request to analyze conversations in bulk.",
        "properties": {
          "analysisPercentage": {
            "description": "Required. Percentage of selected conversation to analyze, between [0, 100].",
            "format": "float",
            "type": "number"
          },
          "annotatorSelector": {
            "$ref": "#/$defs/GoogleCloudContactcenterinsightsV1AnnotatorSelector"
          },
          "filter": {
            "description": "Required. Filter used to select the subset of conversations to analyze.",
            "type": "string"
          },
          "parent": {
            "description": "Required. The parent resource to create analyses in.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudContactcenterinsightsV1AnnotatorSelector": {
        "description": "Selector of all available annotators and phrase matchers to run.",
        "properties": {
          "issueModels": {
            "description": "The issue model to run. If not provided, the most recently deployed topic model will be used. The provided issue model will only be used for inference if the issue model is deployed and if run_issue_model_annotator is set to true. If more than one issue model is provided, only the first provided issue model will be used for inference.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "phraseMatchers": {
            "description": "The list of phrase matchers to run. If not provided, all active phrase matchers will be used. If inactive phrase matchers are provided, they will not be used. Phrase matchers will be run only if run_phrase_matcher_annotator is set to true. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "runEntityAnnotator": {
            "description": "Whether to run the entity annotator.",
            "type": "boolean"
          },
          "runIntentAnnotator": {
            "description": "Whether to run the intent annotator.",
            "type": "boolean"
          },
          "runInterruptionAnnotator": {
            "description": "Whether to run the interruption annotator.",
            "type": "boolean"
          },
          "runIssueModelAnnotator": {
            "description": "Whether to run the issue model annotator. A model should have already been deployed for this to take effect.",
            "type": "boolean"
          },
          "runPhraseMatcherAnnotator": {
            "description": "Whether to run the active phrase matcher annotator(s).",
            "type": "boolean"
          },
          "runSentimentAnnotator": {
            "description": "Whether to run the sentiment annotator.",
            "type": "boolean"
          },
          "runSilenceAnnotator": {
            "description": "Whether to run the silence annotator.",
            "type": "boolean"
          },
          "runSummarizationAnnotator": {
            "description": "Whether to run the summarization annotator.",
            "type": "boolean"
          },
          "summarizationConfig": {
            "$ref": "#/$defs/GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig"
          }
        },
        "type": "object"
      },
      "GoogleCloudContactcenterinsightsV1AnnotatorSelectorSummarizationConfig": {
        "description": "Configuration for summarization.",
        "properties": {
          "conversationProfile": {
            "description": "Resource name of the Dialogflow conversation profile. Format: projects/{project}/locations/{location}/conversationProfiles/{conversation_profile}",
            "type": "string"
          },
          "summarizationModel": {
            "description": "Default summarization model to be used.",
            "enum": [
              "SUMMARIZATION_MODEL_UNSPECIFIED",
              "BASELINE_MODEL"
            ],
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://contactcenterinsights.googleapis.com//v1/{parent}/conversations:bulkAnalyze{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "This resource represents a long-running operation that is the result of a network API call.",
        "**Key properties:**",
        {
          "$ul": [
            "**done**: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
            [
              "**error**: The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
              {
                "$ul": [
                  "**code**: The status code, which should be an enum value of google.rpc.Code.",
                  "**details**: A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                  "**message**: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                ]
              }
            ],
            "**metadata**: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
            "**name**: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
            "**response**: The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
