{
  "name": "monitoring_projects_uptimeCheckConfigs_create",
  "description": "Creates a new Uptime check configuration.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The project (https://cloud.google.com/monitoring/api/v3#project_name) in which to create the Uptime check. The format is: projects/[PROJECT_ID_OR_NUMBER] "
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/UptimeCheckConfig"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "UptimeCheckConfig": {
        "description": "This message configures which resources and services to monitor for availability.",
        "properties": {
          "checkerType": {
            "description": "The type of checkers to use to execute the Uptime check.",
            "enum": [
              "CHECKER_TYPE_UNSPECIFIED",
              "STATIC_IP_CHECKERS",
              "VPC_CHECKERS"
            ],
            "type": "string"
          },
          "contentMatchers": {
            "description": "The content that is expected to appear in the data returned by the target server against which the check is run. Currently, only the first entry in the content_matchers list is supported, and additional entries will be ignored. This field is optional and should only be specified if a content match is required as part of the/ Uptime check.",
            "items": {
              "$ref": "#/$defs/ContentMatcher"
            },
            "type": "array"
          },
          "displayName": {
            "description": "A human-friendly name for the Uptime check configuration. The display name should be unique within a Cloud Monitoring Workspace in order to make it easier to identify; however, uniqueness is not enforced. Required.",
            "type": "string"
          },
          "httpCheck": {
            "$ref": "#/$defs/HttpCheck"
          },
          "internalCheckers": {
            "deprecated": true,
            "description": "The internal checkers that this check will egress from. If is_internal is true and this list is empty, the check will egress from all the InternalCheckers configured for the project that owns this UptimeCheckConfig.",
            "items": {
              "$ref": "#/$defs/InternalChecker"
            },
            "type": "array"
          },
          "isInternal": {
            "deprecated": true,
            "description": "If this is true, then checks are made only from the 'internal_checkers'. If it is false, then checks are made only from the 'selected_regions'. It is an error to provide 'selected_regions' when is_internal is true, or to provide 'internal_checkers' when is_internal is false.",
            "type": "boolean"
          },
          "monitoredResource": {
            "$ref": "#/$defs/MonitoredResource"
          },
          "name": {
            "description": "Identifier. A unique resource name for this Uptime check configuration. The format is: projects/[PROJECT_ID_OR_NUMBER]/uptimeCheckConfigs/[UPTIME_CHECK_ID] [PROJECT_ID_OR_NUMBER] is the Workspace host project associated with the Uptime check.This field should be omitted when creating the Uptime check configuration; on create, the resource name is assigned by the server and included in the response.",
            "type": "string"
          },
          "period": {
            "description": "How often, in seconds, the Uptime check is performed. Currently, the only supported values are 60s (1 minute), 300s (5 minutes), 600s (10 minutes), and 900s (15 minutes). Optional, defaults to 60s.",
            "format": "google-duration",
            "type": "string"
          },
          "resourceGroup": {
            "$ref": "#/$defs/ResourceGroup"
          },
          "selectedRegions": {
            "description": "The list of regions from which the check will be run. Some regions contain one location, and others contain more than one. If this field is specified, enough regions must be provided to include a minimum of 3 locations. Not specifying this field will result in Uptime checks running from all available regions.",
            "items": {
              "enum": [
                "REGION_UNSPECIFIED",
                "USA",
                "EUROPE",
                "SOUTH_AMERICA",
                "ASIA_PACIFIC",
                "USA_OREGON",
                "USA_IOWA",
                "USA_VIRGINIA"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "syntheticMonitor": {
            "$ref": "#/$defs/SyntheticMonitorTarget"
          },
          "tcpCheck": {
            "$ref": "#/$defs/TcpCheck"
          },
          "timeout": {
            "description": "The maximum amount of time to wait for the request to complete (must be between 1 and 60 seconds). Required.",
            "format": "google-duration",
            "type": "string"
          },
          "userLabels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "User-supplied key/value data to be used for organizing and identifying the UptimeCheckConfig objects.The field can contain up to 64 entries. Each key and value is limited to 63 Unicode characters or 128 bytes, whichever is smaller. Labels and values can contain only lowercase letters, numerals, underscores, and dashes. Keys must begin with a letter.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "ContentMatcher": {
        "description": "Optional. Used to perform content matching. This allows matching based on substrings and regular expressions, together with their negations. Only the first 4 MB of an HTTP or HTTPS check's response (and the first 1 MB of a TCP check's response) are examined for purposes of content matching.",
        "properties": {
          "content": {
            "description": "String, regex or JSON content to match. Maximum 1024 bytes. An empty content string indicates no content matching is to be performed.",
            "type": "string"
          },
          "jsonPathMatcher": {
            "$ref": "#/$defs/JsonPathMatcher"
          },
          "matcher": {
            "description": "The type of content matcher that will be applied to the server output, compared to the content string when the check is run.",
            "enum": [
              "CONTENT_MATCHER_OPTION_UNSPECIFIED",
              "CONTAINS_STRING",
              "NOT_CONTAINS_STRING",
              "MATCHES_REGEX",
              "NOT_MATCHES_REGEX",
              "MATCHES_JSON_PATH",
              "NOT_MATCHES_JSON_PATH"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "JsonPathMatcher": {
        "description": "Information needed to perform a JSONPath content match. Used for ContentMatcherOption::MATCHES_JSON_PATH and ContentMatcherOption::NOT_MATCHES_JSON_PATH.",
        "properties": {
          "jsonMatcher": {
            "description": "The type of JSONPath match that will be applied to the JSON output (ContentMatcher.content)",
            "enum": [
              "JSON_PATH_MATCHER_OPTION_UNSPECIFIED",
              "EXACT_MATCH",
              "REGEX_MATCH"
            ],
            "type": "string"
          },
          "jsonPath": {
            "description": "JSONPath within the response output pointing to the expected ContentMatcher::content to match against.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "HttpCheck": {
        "description": "Information involved in an HTTP/HTTPS Uptime check request.",
        "properties": {
          "acceptedResponseStatusCodes": {
            "description": "If present, the check will only pass if the HTTP response status code is in this set of status codes. If empty, the HTTP status code will only pass if the HTTP status code is 200-299.",
            "items": {
              "$ref": "#/$defs/ResponseStatusCode"
            },
            "type": "array"
          },
          "authInfo": {
            "$ref": "#/$defs/BasicAuthentication"
          },
          "body": {
            "description": "The request body associated with the HTTP POST request. If content_type is URL_ENCODED, the body passed in must be URL-encoded. Users can provide a Content-Length header via the headers field or the API will do so. If the request_method is GET and body is not empty, the API will return an error. The maximum byte size is 1 megabyte.Note: If client libraries aren't used (which performs the conversion automatically) base64 encode your body data since the field is of bytes type.",
            "format": "byte",
            "type": "string"
          },
          "contentType": {
            "description": "The content type header to use for the check. The following configurations result in errors: 1. Content type is specified in both the headers field and the content_type field. 2. Request method is GET and content_type is not TYPE_UNSPECIFIED 3. Request method is POST and content_type is TYPE_UNSPECIFIED. 4. Request method is POST and a \"Content-Type\" header is provided via headers field. The content_type field should be used instead.",
            "enum": [
              "TYPE_UNSPECIFIED",
              "URL_ENCODED",
              "USER_PROVIDED"
            ],
            "type": "string"
          },
          "customContentType": {
            "description": "A user provided content type header to use for the check. The invalid configurations outlined in the content_type field apply to custom_content_type, as well as the following: 1. content_type is URL_ENCODED and custom_content_type is set. 2. content_type is USER_PROVIDED and custom_content_type is not set.",
            "type": "string"
          },
          "headers": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The list of headers to send as part of the Uptime check request. If two headers have the same key and different values, they should be entered as a single header, with the value being a comma-separated list of all the desired values as described at https://www.w3.org/Protocols/rfc2616/rfc2616.txt (page 31). Entering two separate headers with the same key in a Create call will cause the first to be overwritten by the second. The maximum number of headers allowed is 100.",
            "type": "object"
          },
          "maskHeaders": {
            "description": "Boolean specifying whether to encrypt the header information. Encryption should be specified for any headers related to authentication that you do not wish to be seen when retrieving the configuration. The server will be responsible for encrypting the headers. On Get/List calls, if mask_headers is set to true then the headers will be obscured with ******.",
            "type": "boolean"
          },
          "path": {
            "description": "Optional (defaults to \"/\"). The path to the page against which to run the check. Will be combined with the host (specified within the monitored_resource) and port to construct the full URL. If the provided path does not begin with \"/\", a \"/\" will be prepended automatically.",
            "type": "string"
          },
          "pingConfig": {
            "$ref": "#/$defs/PingConfig"
          },
          "port": {
            "description": "Optional (defaults to 80 when use_ssl is false, and 443 when use_ssl is true). The TCP port on the HTTP server against which to run the check. Will be combined with host (specified within the monitored_resource) and path to construct the full URL.",
            "format": "int32",
            "type": "integer"
          },
          "requestMethod": {
            "description": "The HTTP request method to use for the check. If set to METHOD_UNSPECIFIED then request_method defaults to GET.",
            "enum": [
              "METHOD_UNSPECIFIED",
              "GET",
              "POST"
            ],
            "type": "string"
          },
          "useSsl": {
            "description": "If true, use HTTPS instead of HTTP to run the check.",
            "type": "boolean"
          },
          "validateSsl": {
            "description": "Boolean specifying whether to include SSL certificate validation as a part of the Uptime check. Only applies to checks where monitored_resource is set to uptime_url. If use_ssl is false, setting validate_ssl to true has no effect.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ResponseStatusCode": {
        "description": "A status to accept. Either a status code class like \"2xx\", or an integer status code like \"200\".",
        "properties": {
          "statusClass": {
            "description": "A class of status codes to accept.",
            "enum": [
              "STATUS_CLASS_UNSPECIFIED",
              "STATUS_CLASS_1XX",
              "STATUS_CLASS_2XX",
              "STATUS_CLASS_3XX",
              "STATUS_CLASS_4XX",
              "STATUS_CLASS_5XX",
              "STATUS_CLASS_ANY"
            ],
            "type": "string"
          },
          "statusValue": {
            "description": "A status code to accept.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "BasicAuthentication": {
        "description": "The authentication parameters to provide to the specified resource or URL that requires a username and password. Currently, only Basic HTTP authentication (https://tools.ietf.org/html/rfc7617) is supported in Uptime checks.",
        "properties": {
          "password": {
            "description": "The password to use when authenticating with the HTTP server.",
            "type": "string"
          },
          "username": {
            "description": "The username to use when authenticating with the HTTP server.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PingConfig": {
        "description": "Information involved in sending ICMP pings alongside public HTTP/TCP checks. For HTTP, the pings are performed for each part of the redirect chain.",
        "properties": {
          "pingsCount": {
            "description": "Number of ICMP pings. A maximum of 3 ICMP pings is currently supported.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "InternalChecker": {
        "deprecated": true,
        "description": "An internal checker allows Uptime checks to run on private/internal GCP resources.",
        "properties": {
          "displayName": {
            "description": "The checker's human-readable name. The display name should be unique within a Cloud Monitoring Metrics Scope in order to make it easier to identify; however, uniqueness is not enforced.",
            "type": "string"
          },
          "gcpZone": {
            "description": "The GCP zone the Uptime check should egress from. Only respected for internal Uptime checks, where internal_network is specified.",
            "type": "string"
          },
          "name": {
            "description": "A unique resource name for this InternalChecker. The format is: projects/[PROJECT_ID_OR_NUMBER]/internalCheckers/[INTERNAL_CHECKER_ID] [PROJECT_ID_OR_NUMBER] is the Cloud Monitoring Metrics Scope project for the Uptime check config associated with the internal checker.",
            "type": "string"
          },
          "network": {
            "description": "The GCP VPC network (https://cloud.google.com/vpc/docs/vpc) where the internal resource lives (ex: \"default\").",
            "type": "string"
          },
          "peerProjectId": {
            "description": "The GCP project ID where the internal checker lives. Not necessary the same as the Metrics Scope project.",
            "type": "string"
          },
          "state": {
            "description": "The current operational state of the internal checker.",
            "enum": [
              "UNSPECIFIED",
              "CREATING",
              "RUNNING"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "MonitoredResource": {
        "description": "An object representing a resource that can be used for monitoring, logging, billing, or other purposes. Examples include virtual machine instances, databases, and storage devices such as disks. The type field identifies a MonitoredResourceDescriptor object that describes the resource's schema. Information in the labels field identifies the actual resource and its attributes according to the schema. For example, a particular Compute Engine VM instance could be represented by the following object, because the MonitoredResourceDescriptor for \"gce_instance\" has labels \"project_id\", \"instance_id\" and \"zone\": { \"type\": \"gce_instance\", \"labels\": { \"project_id\": \"my-project\", \"instance_id\": \"12345678901234\", \"zone\": \"us-central1-a\" }} ",
        "properties": {
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Required. Values for all of the labels listed in the associated monitored resource descriptor. For example, Compute Engine VM instances use the labels \"project_id\", \"instance_id\", and \"zone\".",
            "type": "object"
          },
          "type": {
            "description": "Required. The monitored resource type. This field must match the type field of a MonitoredResourceDescriptor object. For example, the type of a Compute Engine VM instance is gce_instance. For a list of types, see Monitoring resource types (https://cloud.google.com/monitoring/api/resources) and Logging resource types (https://cloud.google.com/logging/docs/api/v2/resource-list).",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResourceGroup": {
        "description": "The resource submessage for group checks. It can be used instead of a monitored resource, when multiple resources are being monitored.",
        "properties": {
          "groupId": {
            "description": "The group of resources being monitored. Should be only the [GROUP_ID], and not the full-path projects/[PROJECT_ID_OR_NUMBER]/groups/[GROUP_ID].",
            "type": "string"
          },
          "resourceType": {
            "description": "The resource type of the group members.",
            "enum": [
              "RESOURCE_TYPE_UNSPECIFIED",
              "INSTANCE",
              "AWS_ELB_LOAD_BALANCER"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "SyntheticMonitorTarget": {
        "description": "Describes a Synthetic Monitor to be invoked by Uptime.",
        "properties": {
          "cloudFunctionV2": {
            "$ref": "#/$defs/CloudFunctionV2Target"
          }
        },
        "type": "object"
      },
      "CloudFunctionV2Target": {
        "description": "A Synthetic Monitor deployed to a Cloud Functions V2 instance.",
        "properties": {
          "cloudRunRevision": {
            "$ref": "#/$defs/MonitoredResource"
          },
          "name": {
            "description": "Required. Fully qualified GCFv2 resource name i.e. projects/{project}/locations/{location}/functions/{function} Required.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "TcpCheck": {
        "description": "Information required for a TCP Uptime check request.",
        "properties": {
          "pingConfig": {
            "$ref": "#/$defs/PingConfig"
          },
          "port": {
            "description": "The TCP port on the server against which to run the check. Will be combined with host (specified within the monitored_resource) to construct the full URL. Required.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://monitoring.googleapis.com//v3/{parent}/uptimeCheckConfigs{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "This message configures which resources and services to monitor for availability.",
        "**Key properties:**",
        {
          "$ul": [
            "**checkerType**: The type of checkers to use to execute the Uptime check.",
            "**contentMatchers**: The content that is expected to appear in the data returned by the target server against which the check is run. Currently, only the first entry in the content_matchers list is supported, and additional entries will be ignored. This field is optional and should only be specified if a content match is required as part of the/ Uptime check.",
            "**displayName**: A human-friendly name for the Uptime check configuration. The display name should be unique within a Cloud Monitoring Workspace in order to make it easier to identify; however, uniqueness is not enforced. Required.",
            [
              "**httpCheck**: Information involved in an HTTP/HTTPS Uptime check request.",
              {
                "$ul": [
                  "**acceptedResponseStatusCodes**: If present, the check will only pass if the HTTP response status code is in this set of status codes. If empty, the HTTP status code will only pass if the HTTP status code is 200-299.",
                  [
                    "**authInfo**: The authentication parameters to provide to the specified resource or URL that requires a username and password. Currently, only Basic HTTP authentication (https://tools.ietf.org/html/rfc7617) is supported in Uptime checks.",
                    {
                      "$ul": [
                        "**password**: The password to use when authenticating with the HTTP server.",
                        "**username**: The username to use when authenticating with the HTTP server."
                      ]
                    }
                  ],
                  "**body**: The request body associated with the HTTP POST request. If content_type is URL_ENCODED, the body passed in must be URL-encoded. Users can provide a Content-Length header via the headers field or the API will do so. If the request_method is GET and body is not empty, the API will return an error. The maximum byte size is 1 megabyte.Note: If client libraries aren't used (which performs the conversion automatically) base64 encode your body data since the field is of bytes type.",
                  "**contentType**: The content type header to use for the check. The following configurations result in errors: 1. Content type is specified in both the headers field and the content_type field. 2. Request method is GET and content_type is not TYPE_UNSPECIFIED 3. Request method is POST and content_type is TYPE_UNSPECIFIED. 4. Request method is POST and a \"Content-Type\" header is provided via headers field. The content_type field should be used instead.",
                  "**customContentType**: A user provided content type header to use for the check. The invalid configurations outlined in the content_type field apply to custom_content_type, as well as the following: 1. content_type is URL_ENCODED and custom_content_type is set. 2. content_type is USER_PROVIDED and custom_content_type is not set.",
                  "**headers**: The list of headers to send as part of the Uptime check request. If two headers have the same key and different values, they should be entered as a single header, with the value being a comma-separated list of all the desired values as described at https://www.w3.org/Protocols/rfc2616/rfc2616.txt (page 31). Entering two separate headers with the same key in a Create call will cause the first to be overwritten by the second. The maximum number of headers allowed is 100.",
                  "**maskHeaders**: Boolean specifying whether to encrypt the header information. Encryption should be specified for any headers related to authentication that you do not wish to be seen when retrieving the configuration. The server will be responsible for encrypting the headers. On Get/List calls, if mask_headers is set to true then the headers will be obscured with ******.",
                  "**path**: Optional (defaults to \"/\"). The path to the page against which to run the check. Will be combined with the host (specified within the monitored_resource) and port to construct the full URL. If the provided path does not begin with \"/\", a \"/\" will be prepended automatically.",
                  [
                    "**pingConfig**: Information involved in sending ICMP pings alongside public HTTP/TCP checks. For HTTP, the pings are performed for each part of the redirect chain.",
                    {
                      "$ul": [
                        "**pingsCount**: Number of ICMP pings. A maximum of 3 ICMP pings is currently supported."
                      ]
                    }
                  ],
                  "**port**: Optional (defaults to 80 when use_ssl is false, and 443 when use_ssl is true). The TCP port on the HTTP server against which to run the check. Will be combined with host (specified within the monitored_resource) and path to construct the full URL.",
                  "**requestMethod**: The HTTP request method to use for the check. If set to METHOD_UNSPECIFIED then request_method defaults to GET.",
                  "**useSsl**: If true, use HTTPS instead of HTTP to run the check.",
                  "**validateSsl**: Boolean specifying whether to include SSL certificate validation as a part of the Uptime check. Only applies to checks where monitored_resource is set to uptime_url. If use_ssl is false, setting validate_ssl to true has no effect."
                ]
              }
            ],
            "**internalCheckers**: The internal checkers that this check will egress from. If is_internal is true and this list is empty, the check will egress from all the InternalCheckers configured for the project that owns this UptimeCheckConfig.",
            "**isInternal**: If this is true, then checks are made only from the 'internal_checkers'. If it is false, then checks are made only from the 'selected_regions'. It is an error to provide 'selected_regions' when is_internal is true, or to provide 'internal_checkers' when is_internal is false.",
            [
              "**monitoredResource**: An object representing a resource that can be used for monitoring, logging, billing, or other purposes. Examples include virtual machine instances, databases, and storage devices such as disks. The type field identifies a MonitoredResourceDescriptor object that describes the resource's schema. Information in the labels field identifies the actual resource and its attributes according to the schema. For example, a particular Compute Engine VM instance could be represented by the following object, because the MonitoredResourceDescriptor for \"gce_instance\" has labels \"project_id\", \"instance_id\" and \"zone\": { \"type\": \"gce_instance\", \"labels\": { \"project_id\": \"my-project\", \"instance_id\": \"12345678901234\", \"zone\": \"us-central1-a\" }} ",
              {
                "$ul": [
                  "**labels**: Required. Values for all of the labels listed in the associated monitored resource descriptor. For example, Compute Engine VM instances use the labels \"project_id\", \"instance_id\", and \"zone\".",
                  "**type**: Required. The monitored resource type. This field must match the type field of a MonitoredResourceDescriptor object. For example, the type of a Compute Engine VM instance is gce_instance. For a list of types, see Monitoring resource types (https://cloud.google.com/monitoring/api/resources) and Logging resource types (https://cloud.google.com/logging/docs/api/v2/resource-list)."
                ]
              }
            ],
            "**name**: Identifier. A unique resource name for this Uptime check configuration. The format is: projects/[PROJECT_ID_OR_NUMBER]/uptimeCheckConfigs/[UPTIME_CHECK_ID] [PROJECT_ID_OR_NUMBER] is the Workspace host project associated with the Uptime check.This field should be omitted when creating the Uptime check configuration; on create, the resource name is assigned by the server and included in the response.",
            "**period**: How often, in seconds, the Uptime check is performed. Currently, the only supported values are 60s (1 minute), 300s (5 minutes), 600s (10 minutes), and 900s (15 minutes). Optional, defaults to 60s.",
            [
              "**resourceGroup**: The resource submessage for group checks. It can be used instead of a monitored resource, when multiple resources are being monitored.",
              {
                "$ul": [
                  "**groupId**: The group of resources being monitored. Should be only the [GROUP_ID], and not the full-path projects/[PROJECT_ID_OR_NUMBER]/groups/[GROUP_ID].",
                  "**resourceType**: The resource type of the group members."
                ]
              }
            ],
            "**selectedRegions**: The list of regions from which the check will be run. Some regions contain one location, and others contain more than one. If this field is specified, enough regions must be provided to include a minimum of 3 locations. Not specifying this field will result in Uptime checks running from all available regions.",
            [
              "**syntheticMonitor**: Describes a Synthetic Monitor to be invoked by Uptime.",
              {
                "$ul": [
                  [
                    "**cloudFunctionV2**: A Synthetic Monitor deployed to a Cloud Functions V2 instance.",
                    {
                      "$ul": [
                        [
                          "**cloudRunRevision**: An object representing a resource that can be used for monitoring, logging, billing, or other purposes. Examples include virtual machine instances, databases, and storage devices such as disks. The type field identifies a MonitoredResourceDescriptor object that describes the resource's schema. Information in the labels field identifies the actual resource and its attributes according to the schema. For example, a particular Compute Engine VM instance could be represented by the following object, because the MonitoredResourceDescriptor for \"gce_instance\" has labels \"project_id\", \"instance_id\" and \"zone\": { \"type\": \"gce_instance\", \"labels\": { \"project_id\": \"my-project\", \"instance_id\": \"12345678901234\", \"zone\": \"us-central1-a\" }} ",
                          {
                            "$ul": [
                              "**labels**: Required. Values for all of the labels listed in the associated monitored resource descriptor. For example, Compute Engine VM instances use the labels \"project_id\", \"instance_id\", and \"zone\".",
                              "**type**: Required. The monitored resource type. This field must match the type field of a MonitoredResourceDescriptor object. For example, the type of a Compute Engine VM instance is gce_instance. For a list of types, see Monitoring resource types (https://cloud.google.com/monitoring/api/resources) and Logging resource types (https://cloud.google.com/logging/docs/api/v2/resource-list)."
                            ]
                          }
                        ],
                        "**name**: Required. Fully qualified GCFv2 resource name i.e. projects/{project}/locations/{location}/functions/{function} Required."
                      ]
                    }
                  ]
                ]
              }
            ],
            [
              "**tcpCheck**: Information required for a TCP Uptime check request.",
              {
                "$ul": [
                  [
                    "**pingConfig**: Information involved in sending ICMP pings alongside public HTTP/TCP checks. For HTTP, the pings are performed for each part of the redirect chain.",
                    {
                      "$ul": [
                        "**pingsCount**: Number of ICMP pings. A maximum of 3 ICMP pings is currently supported."
                      ]
                    }
                  ],
                  "**port**: The TCP port on the server against which to run the check. Will be combined with host (specified within the monitored_resource) to construct the full URL. Required."
                ]
              }
            ],
            "**timeout**: The maximum amount of time to wait for the request to complete (must be between 1 and 60 seconds). Required.",
            "**userLabels**: User-supplied key/value data to be used for organizing and identifying the UptimeCheckConfig objects.The field can contain up to 64 entries. Each key and value is limited to 63 Unicode characters or 128 bytes, whichever is smaller. Labels and values can contain only lowercase letters, numerals, underscores, and dashes. Keys must begin with a letter."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
