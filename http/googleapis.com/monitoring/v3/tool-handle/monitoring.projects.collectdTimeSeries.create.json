{
  "name": "monitoring_projects_collectdTimeSeries_create",
  "description": "Cloud Monitoring Agent only: Creates a new time series.This method is only for use by the Cloud Monitoring Agent. Use projects.timeSeries.create instead.",
  "parameters": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "The project (https://cloud.google.com/monitoring/api/v3#project_name) in which to create the time series. The format is: projects/[PROJECT_ID_OR_NUMBER] "
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/CreateCollectdTimeSeriesRequest"
      }
    },
    "required": [
      "name"
    ],
    "$defs": {
      "CreateCollectdTimeSeriesRequest": {
        "description": "The CreateCollectdTimeSeries request.",
        "properties": {
          "collectdPayloads": {
            "description": "The collectd payloads representing the time series data. You must not include more than a single point for each time series, so no two payloads can have the same values for all of the fields plugin, plugin_instance, type, and type_instance.",
            "items": {
              "$ref": "#/$defs/CollectdPayload"
            },
            "type": "array"
          },
          "collectdVersion": {
            "description": "The version of collectd that collected the data. Example: \"5.3.0-192.el6\".",
            "type": "string"
          },
          "resource": {
            "$ref": "#/$defs/MonitoredResource"
          }
        },
        "type": "object"
      },
      "CollectdPayload": {
        "description": "A collection of data points sent from a collectd-based plugin. See the collectd documentation for more information.",
        "properties": {
          "endTime": {
            "description": "The end time of the interval.",
            "format": "google-datetime",
            "type": "string"
          },
          "metadata": {
            "additionalProperties": {
              "$ref": "#/$defs/TypedValue"
            },
            "description": "The measurement metadata. Example: \"process_id\" -> 12345",
            "type": "object"
          },
          "plugin": {
            "description": "The name of the plugin. Example: \"disk\".",
            "type": "string"
          },
          "pluginInstance": {
            "description": "The instance name of the plugin Example: \"hdcl\".",
            "type": "string"
          },
          "startTime": {
            "description": "The start time of the interval.",
            "format": "google-datetime",
            "type": "string"
          },
          "type": {
            "description": "The measurement type. Example: \"memory\".",
            "type": "string"
          },
          "typeInstance": {
            "description": "The measurement type instance. Example: \"used\".",
            "type": "string"
          },
          "values": {
            "description": "The measured values during this time interval. Each value must have a different data_source_name.",
            "items": {
              "$ref": "#/$defs/CollectdValue"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "TypedValue": {
        "description": "A single strongly-typed value.",
        "properties": {
          "boolValue": {
            "description": "A Boolean value: true or false.",
            "type": "boolean"
          },
          "distributionValue": {
            "$ref": "#/$defs/Distribution"
          },
          "doubleValue": {
            "description": "A 64-bit double-precision floating-point number. Its magnitude is approximately ±10±300 and it has 16 significant digits of precision.",
            "format": "double",
            "type": "number"
          },
          "int64Value": {
            "description": "A 64-bit integer. Its range is approximately ±9.2x1018.",
            "format": "int64",
            "type": "string"
          },
          "stringValue": {
            "description": "A variable-length string value.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Distribution": {
        "description": "Distribution contains summary statistics for a population of values. It optionally contains a histogram representing the distribution of those values across a set of buckets.The summary statistics are the count, mean, sum of the squared deviation from the mean, the minimum, and the maximum of the set of population of values. The histogram is based on a sequence of buckets and gives a count of values that fall into each bucket. The boundaries of the buckets are given either explicitly or by formulas for buckets of fixed or exponentially increasing widths.Although it is not forbidden, it is generally a bad idea to include non-finite values (infinities or NaNs) in the population of values, as this will render the mean and sum_of_squared_deviation fields meaningless.",
        "properties": {
          "bucketCounts": {
            "description": "Required in the Cloud Monitoring API v3. The values for each bucket specified in bucket_options. The sum of the values in bucketCounts must equal the value in the count field of the Distribution object. The order of the bucket counts follows the numbering schemes described for the three bucket types. The underflow bucket has number 0; the finite buckets, if any, have numbers 1 through N-2; and the overflow bucket has number N-1. The size of bucket_counts must not be greater than N. If the size is less than N, then the remaining buckets are assigned values of zero.",
            "items": {
              "format": "int64",
              "type": "string"
            },
            "type": "array"
          },
          "bucketOptions": {
            "$ref": "#/$defs/BucketOptions"
          },
          "count": {
            "description": "The number of values in the population. Must be non-negative. This value must equal the sum of the values in bucket_counts if a histogram is provided.",
            "format": "int64",
            "type": "string"
          },
          "exemplars": {
            "description": "Must be in increasing order of value field.",
            "items": {
              "$ref": "#/$defs/Exemplar"
            },
            "type": "array"
          },
          "mean": {
            "description": "The arithmetic mean of the values in the population. If count is zero then this field must be zero.",
            "format": "double",
            "type": "number"
          },
          "range": {
            "$ref": "#/$defs/Range"
          },
          "sumOfSquaredDeviation": {
            "description": "The sum of squared deviations from the mean of the values in the population. For values x_i this is: Sum[i=1..n]((x_i - mean)^2) Knuth, \"The Art of Computer Programming\", Vol. 2, page 232, 3rd edition describes Welford's method for accumulating this sum in one pass.If count is zero then this field must be zero.",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "BucketOptions": {
        "description": "BucketOptions describes the bucket boundaries used to create a histogram for the distribution. The buckets can be in a linear sequence, an exponential sequence, or each bucket can be specified explicitly. BucketOptions does not include the number of values in each bucket.A bucket has an inclusive lower bound and exclusive upper bound for the values that are counted for that bucket. The upper bound of a bucket must be strictly greater than the lower bound. The sequence of N buckets for a distribution consists of an underflow bucket (number 0), zero or more finite buckets (number 1 through N - 2) and an overflow bucket (number N - 1). The buckets are contiguous: the lower bound of bucket i (i > 0) is the same as the upper bound of bucket i - 1. The buckets span the whole range of finite values: lower bound of the underflow bucket is -infinity and the upper bound of the overflow bucket is +infinity. The finite buckets are so-called because both bounds are finite.",
        "properties": {
          "explicitBuckets": {
            "$ref": "#/$defs/Explicit"
          },
          "exponentialBuckets": {
            "$ref": "#/$defs/Exponential"
          },
          "linearBuckets": {
            "$ref": "#/$defs/Linear"
          }
        },
        "type": "object"
      },
      "Explicit": {
        "description": "Specifies a set of buckets with arbitrary widths.There are size(bounds) + 1 (= N) buckets. Bucket i has the following boundaries:Upper bound (0 <= i < N-1): boundsi Lower bound (1 <= i < N); boundsi - 1The bounds field must contain at least one element. If bounds has only one element, then there are no finite buckets, and that single element is the common boundary of the overflow and underflow buckets.",
        "properties": {
          "bounds": {
            "description": "The values must be monotonically increasing.",
            "items": {
              "format": "double",
              "type": "number"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Exponential": {
        "description": "Specifies an exponential sequence of buckets that have a width that is proportional to the value of the lower bound. Each bucket represents a constant relative uncertainty on a specific value in the bucket.There are num_finite_buckets + 2 (= N) buckets. Bucket i has the following boundaries:Upper bound (0 <= i < N-1): scale * (growth_factor ^ i).Lower bound (1 <= i < N): scale * (growth_factor ^ (i - 1)).",
        "properties": {
          "growthFactor": {
            "description": "Must be greater than 1.",
            "format": "double",
            "type": "number"
          },
          "numFiniteBuckets": {
            "description": "Must be greater than 0.",
            "format": "int32",
            "type": "integer"
          },
          "scale": {
            "description": "Must be greater than 0.",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "Linear": {
        "description": "Specifies a linear sequence of buckets that all have the same width (except overflow and underflow). Each bucket represents a constant absolute uncertainty on the specific value in the bucket.There are num_finite_buckets + 2 (= N) buckets. Bucket i has the following boundaries:Upper bound (0 <= i < N-1): offset + (width * i).Lower bound (1 <= i < N): offset + (width * (i - 1)).",
        "properties": {
          "numFiniteBuckets": {
            "description": "Must be greater than 0.",
            "format": "int32",
            "type": "integer"
          },
          "offset": {
            "description": "Lower bound of the first bucket.",
            "format": "double",
            "type": "number"
          },
          "width": {
            "description": "Must be greater than 0.",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "Exemplar": {
        "description": "Exemplars are example points that may be used to annotate aggregated distribution values. They are metadata that gives information about a particular value added to a Distribution bucket, such as a trace ID that was active when a value was added. They may contain further information, such as a example values and timestamps, origin, etc.",
        "properties": {
          "attachments": {
            "description": "Contextual information about the example value. Examples are:Trace: type.googleapis.com/google.monitoring.v3.SpanContextLiteral string: type.googleapis.com/google.protobuf.StringValueLabels dropped during aggregation: type.googleapis.com/google.monitoring.v3.DroppedLabelsThere may be only a single attachment of any given message type in a single exemplar, and this is enforced by the system.",
            "items": {
              "additionalProperties": {
                "description": "Properties of the object. Contains field @type with type URL."
              },
              "type": "object"
            },
            "type": "array"
          },
          "timestamp": {
            "description": "The observation (sampling) time of the above value.",
            "format": "google-datetime",
            "type": "string"
          },
          "value": {
            "description": "Value of the exemplar point. This value determines to which bucket the exemplar belongs.",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "Range": {
        "description": "The range of the population values.",
        "properties": {
          "max": {
            "description": "The maximum of the population values.",
            "format": "double",
            "type": "number"
          },
          "min": {
            "description": "The minimum of the population values.",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "CollectdValue": {
        "description": "A single data point from a collectd-based plugin.",
        "properties": {
          "dataSourceName": {
            "description": "The data source for the collectd value. For example, there are two data sources for network measurements: \"rx\" and \"tx\".",
            "type": "string"
          },
          "dataSourceType": {
            "description": "The type of measurement.",
            "enum": [
              "UNSPECIFIED_DATA_SOURCE_TYPE",
              "GAUGE",
              "COUNTER",
              "DERIVE",
              "ABSOLUTE"
            ],
            "type": "string"
          },
          "value": {
            "$ref": "#/$defs/TypedValue"
          }
        },
        "type": "object"
      },
      "MonitoredResource": {
        "description": "An object representing a resource that can be used for monitoring, logging, billing, or other purposes. Examples include virtual machine instances, databases, and storage devices such as disks. The type field identifies a MonitoredResourceDescriptor object that describes the resource's schema. Information in the labels field identifies the actual resource and its attributes according to the schema. For example, a particular Compute Engine VM instance could be represented by the following object, because the MonitoredResourceDescriptor for \"gce_instance\" has labels \"project_id\", \"instance_id\" and \"zone\": { \"type\": \"gce_instance\", \"labels\": { \"project_id\": \"my-project\", \"instance_id\": \"12345678901234\", \"zone\": \"us-central1-a\" }} ",
        "properties": {
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Required. Values for all of the labels listed in the associated monitored resource descriptor. For example, Compute Engine VM instances use the labels \"project_id\", \"instance_id\", and \"zone\".",
            "type": "object"
          },
          "type": {
            "description": "Required. The monitored resource type. This field must match the type field of a MonitoredResourceDescriptor object. For example, the type of a Compute Engine VM instance is gce_instance. For a list of types, see Monitoring resource types (https://cloud.google.com/monitoring/api/resources) and Logging resource types (https://cloud.google.com/logging/docs/api/v2/resource-list).",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://monitoring.googleapis.com//v3/{name}/collectdTimeSeries{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The CreateCollectdTimeSeries response.",
        "**Key properties:**",
        {
          "$ul": [
            "**payloadErrors**: Records the error status for points that were not written due to an error in the request.Failed requests for which nothing is written will return an error response instead. Requests where data points were rejected by the backend will set summary instead.",
            [
              "**summary**: Summary of the result of a failed request to write data to a time series.",
              {
                "$ul": [
                  "**errors**: The number of points that failed to be written. Order is not guaranteed.",
                  "**successPointCount**: The number of points that were successfully written.",
                  "**totalPointCount**: The number of points in the request."
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
