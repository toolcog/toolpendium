{
  "name": "cloudasset_queryAssets",
  "description": "Issue a job that queries assets using a SQL statement compatible with [BigQuery SQL](https://cloud.google.com/bigquery/docs/introduction-sql). If the query execution finishes within timeout and there's no pagination, the full query results will be returned in the `QueryAssetsResponse`. Otherwise, full query results can be obtained by issuing extra requests with the `job_reference` from the a previous `QueryAssets` call. Note, the query result has approximately 10 GB limitation enforced by [BigQuery](https://cloud.google.com/bigquery/docs/best-practices-performance-output). Queries return larger results will result in errors.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The relative name of the root asset. This can only be an organization number (such as \"organizations/123\"), a project ID (such as \"projects/my-project-id\"), or a project number (such as \"projects/12345\"), or a folder number (such as \"folders/123\"). Only assets belonging to the `parent` will be returned."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/QueryAssetsRequest"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "QueryAssetsRequest": {
        "description": "QueryAssets request.",
        "properties": {
          "jobReference": {
            "description": "Optional. Reference to the query job, which is from the `QueryAssetsResponse` of previous `QueryAssets` call.",
            "type": "string"
          },
          "outputConfig": {
            "$ref": "#/$defs/QueryAssetsOutputConfig"
          },
          "pageSize": {
            "description": "Optional. The maximum number of rows to return in the results. Responses are limited to 10 MB and 1000 rows. By default, the maximum row count is 1000. When the byte or row count limit is reached, the rest of the query results will be paginated. The field will be ignored when [output_config] is specified.",
            "format": "int32",
            "type": "integer"
          },
          "pageToken": {
            "description": "Optional. A page token received from previous `QueryAssets`. The field will be ignored when [output_config] is specified.",
            "type": "string"
          },
          "readTime": {
            "description": "Optional. Queries cloud assets as they appeared at the specified point in time.",
            "format": "google-datetime",
            "type": "string"
          },
          "readTimeWindow": {
            "$ref": "#/$defs/TimeWindow"
          },
          "statement": {
            "description": "Optional. A SQL statement that's compatible with [BigQuery SQL](https://cloud.google.com/bigquery/docs/introduction-sql).",
            "type": "string"
          },
          "timeout": {
            "description": "Optional. Specifies the maximum amount of time that the client is willing to wait for the query to complete. By default, this limit is 5 min for the first query, and 1 minute for the following queries. If the query is complete, the `done` field in the `QueryAssetsResponse` is true, otherwise false. Like BigQuery [jobs.query API](https://cloud.google.com/bigquery/docs/reference/rest/v2/jobs/query#queryrequest) The call is not guaranteed to wait for the specified timeout; it typically returns after around 200 seconds (200,000 milliseconds), even if the query is not complete. The field will be ignored when [output_config] is specified.",
            "format": "google-duration",
            "type": "string"
          }
        },
        "type": "object"
      },
      "QueryAssetsOutputConfig": {
        "description": "Output configuration query assets.",
        "properties": {
          "bigqueryDestination": {
            "$ref": "#/$defs/GoogleCloudAssetV1QueryAssetsOutputConfigBigQueryDestination"
          }
        },
        "type": "object"
      },
      "GoogleCloudAssetV1QueryAssetsOutputConfigBigQueryDestination": {
        "description": "BigQuery destination.",
        "properties": {
          "dataset": {
            "description": "Required. The BigQuery dataset where the query results will be saved. It has the format of \"projects/{projectId}/datasets/{datasetId}\".",
            "type": "string"
          },
          "table": {
            "description": "Required. The BigQuery table where the query results will be saved. If this table does not exist, a new table with the given name will be created.",
            "type": "string"
          },
          "writeDisposition": {
            "description": "Specifies the action that occurs if the destination table or partition already exists. The following values are supported: * WRITE_TRUNCATE: If the table or partition already exists, BigQuery overwrites the entire table or all the partitions data. * WRITE_APPEND: If the table or partition already exists, BigQuery appends the data to the table or the latest partition. * WRITE_EMPTY: If the table already exists and contains data, a 'duplicate' error is returned in the job result. The default value is WRITE_EMPTY.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "TimeWindow": {
        "description": "A time window specified by its `start_time` and `end_time`.",
        "properties": {
          "endTime": {
            "description": "End time of the time window (inclusive). If not specified, the current timestamp is used instead.",
            "format": "google-datetime",
            "type": "string"
          },
          "startTime": {
            "description": "Start time of the time window (exclusive).",
            "format": "google-datetime",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://cloudasset.googleapis.com//v1/{parent}:queryAssets{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "QueryAssets response.",
        "**Key properties:**",
        {
          "$ul": [
            "**done**: The query response, which can be either an `error` or a valid `response`. If `done` == `false` and the query result is being saved in a output, the output_config field will be set. If `done` == `true`, exactly one of `error`, `query_result` or `output_config` will be set.",
            [
              "**error**: The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
              {
                "$ul": [
                  "**code**: The status code, which should be an enum value of google.rpc.Code.",
                  "**details**: A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                  "**message**: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                ]
              }
            ],
            "**jobReference**: Reference to a query job.",
            [
              "**outputConfig**: Output configuration query assets.",
              {
                "$ul": [
                  [
                    "**bigqueryDestination**: BigQuery destination.",
                    {
                      "$ul": [
                        "**dataset**: Required. The BigQuery dataset where the query results will be saved. It has the format of \"projects/{projectId}/datasets/{datasetId}\".",
                        "**table**: Required. The BigQuery table where the query results will be saved. If this table does not exist, a new table with the given name will be created.",
                        "**writeDisposition**: Specifies the action that occurs if the destination table or partition already exists. The following values are supported: * WRITE_TRUNCATE: If the table or partition already exists, BigQuery overwrites the entire table or all the partitions data. * WRITE_APPEND: If the table or partition already exists, BigQuery appends the data to the table or the latest partition. * WRITE_EMPTY: If the table already exists and contains data, a 'duplicate' error is returned in the job result. The default value is WRITE_EMPTY."
                      ]
                    }
                  ]
                ]
              }
            ],
            [
              "**queryResult**: Execution results of the query. The result is formatted as rows represented by BigQuery compatible [schema]. When pagination is necessary, it will contains the page token to retrieve the results of following pages.",
              {
                "$ul": [
                  "**nextPageToken**: Token to retrieve the next page of the results.",
                  "**rows**: Each row hold a query result in the format of `Struct`.",
                  [
                    "**schema**: BigQuery Compatible table schema.",
                    {
                      "$ul": [
                        "**fields**: Describes the fields in a table."
                      ]
                    }
                  ],
                  "**totalRows**: Total rows of the whole query results."
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
