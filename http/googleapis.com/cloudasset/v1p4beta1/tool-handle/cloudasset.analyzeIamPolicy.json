{
  "name": "cloudasset_analyzeIamPolicy",
  "description": "Analyzes IAM policies to answer which identities have what accesses on which resources.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The relative name of the root asset. Only resources and IAM policies within the parent will be analyzed. This can only be an organization number (such as \"organizations/123\"), a folder number (such as \"folders/123\"), a project ID (such as \"projects/my-project-id\"), or a project number (such as \"projects/12345\"). To know how to get organization id, visit [here ](https://cloud.google.com/resource-manager/docs/creating-managing-organization#retrieving_your_organization_id). To know how to get folder or project id, visit [here ](https://cloud.google.com/resource-manager/docs/creating-managing-folders#viewing_or_listing_folders_and_projects)."
      },
      "analysisQuery.accessSelector.permissions": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "Optional. The permissions to appear in result."
      },
      "analysisQuery.accessSelector.roles": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "Optional. The roles to appear in result."
      },
      "analysisQuery.identitySelector.identity": {
        "type": "string",
        "description": "Required. The identity appear in the form of members in [IAM policy binding](https://cloud.google.com/iam/reference/rest/v1/Binding). The examples of supported forms are: \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\". Notice that wildcard characters (such as * and ?) are not supported. You must give a specific identity."
      },
      "analysisQuery.resourceSelector.fullResourceName": {
        "type": "string",
        "description": "Required. The [full resource name](https://cloud.google.com/asset-inventory/docs/resource-name-format) of a resource of [supported resource types](https://cloud.google.com/asset-inventory/docs/supported-asset-types#analyzable_asset_types)."
      },
      "options.analyzeServiceAccountImpersonation": {
        "type": "boolean",
        "description": "Optional. If true, the response will include access analysis from identities to resources via service account impersonation. This is a very expensive operation, because many derived queries will be executed. We highly recommend you use AssetService.ExportIamPolicyAnalysis rpc instead. For example, if the request analyzes for which resources user A has permission P, and there's an IAM policy states user A has iam.serviceAccounts.getAccessToken permission to a service account SA, and there's another IAM policy states service account SA has permission P to a GCP folder F, then user A potentially has access to the GCP folder F. And those advanced analysis results will be included in AnalyzeIamPolicyResponse.service_account_impersonation_analysis. Another example, if the request analyzes for who has permission P to a GCP folder F, and there's an IAM policy states user A has iam.serviceAccounts.actAs permission to a service account SA, and there's another IAM policy states service account SA has permission P to the GCP folder F, then user A potentially has access to the GCP folder F. And those advanced analysis results will be included in AnalyzeIamPolicyResponse.service_account_impersonation_analysis. Default is false."
      },
      "options.executionTimeout": {
        "type": "string",
        "description": "Optional. Amount of time executable has to complete. See JSON representation of [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json). If this field is set with a value less than the RPC deadline, and the execution of your query hasn't finished in the specified execution timeout, you will get a response with partial result. Otherwise, your query's execution will continue until the RPC deadline. If it's not finished until then, you will get a DEADLINE_EXCEEDED error. Default is empty."
      },
      "options.expandGroups": {
        "type": "boolean",
        "description": "Optional. If true, the identities section of the result will expand any Google groups appearing in an IAM policy binding. If identity_selector is specified, the identity in the result will be determined by the selector, and this flag will have no effect. Default is false."
      },
      "options.expandResources": {
        "type": "boolean",
        "description": "Optional. If true, the resource section of the result will expand any resource attached to an IAM policy to include resources lower in the resource hierarchy. For example, if the request analyzes for which resources user A has permission P, and the results include an IAM policy with P on a GCP folder, the results will also include resources in that folder with permission P. If resource_selector is specified, the resource section of the result will be determined by the selector, and this flag will have no effect. Default is false."
      },
      "options.expandRoles": {
        "type": "boolean",
        "description": "Optional. If true, the access section of result will expand any roles appearing in IAM policy bindings to include their permissions. If access_selector is specified, the access section of the result will be determined by the selector, and this flag will have no effect. Default is false."
      },
      "options.outputGroupEdges": {
        "type": "boolean",
        "description": "Optional. If true, the result will output group identity edges, starting from the binding's group members, to any expanded identities. Default is false."
      },
      "options.outputResourceEdges": {
        "type": "boolean",
        "description": "Optional. If true, the result will output resource edges, starting from the policy attached resource, to any expanded resources. Default is false."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      }
    },
    "required": [
      "parent"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://cloudasset.googleapis.com//v1p4beta1/{parent}:analyzeIamPolicy{?analysisQuery.accessSelector.permissions,analysisQuery.accessSelector.roles,analysisQuery.identitySelector.identity,analysisQuery.resourceSelector.fullResourceName,options.analyzeServiceAccountImpersonation,options.executionTimeout,options.expandGroups,options.expandResources,options.expandRoles,options.outputGroupEdges,options.outputResourceEdges,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A response message for AssetService.AnalyzeIamPolicy.",
        "**Key properties:**",
        {
          "$ul": [
            "**fullyExplored**: Represents whether all entries in the main_analysis and service_account_impersonation_analysis have been fully explored to answer the query in the request.",
            [
              "**mainAnalysis**: An analysis message to group the query and results.",
              {
                "$ul": [
                  [
                    "**analysisQuery**: IAM policy analysis query message.",
                    {
                      "$ul": [
                        [
                          "**accessSelector**: Specifies roles and/or permissions to analyze, to determine both the identities possessing them and the resources they control. If multiple values are specified, results will include identities and resources matching any of them. The total number of roles and permissions should be equal or less than 10.",
                          {
                            "$ul": [
                              "**permissions**: Optional. The permissions to appear in result.",
                              "**roles**: Optional. The roles to appear in result."
                            ]
                          }
                        ],
                        [
                          "**identitySelector**: Specifies an identity for which to determine resource access, based on roles assigned either directly to them or to the groups they belong to, directly or indirectly.",
                          {
                            "$ul": [
                              "**identity**: Required. The identity appear in the form of members in [IAM policy binding](https://cloud.google.com/iam/reference/rest/v1/Binding). The examples of supported forms are: \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\". Notice that wildcard characters (such as * and ?) are not supported. You must give a specific identity."
                            ]
                          }
                        ],
                        "**parent**: Required. The relative name of the root asset. Only resources and IAM policies within the parent will be analyzed. This can only be an organization number (such as \"organizations/123\"), a folder number (such as \"folders/123\"), a project ID (such as \"projects/my-project-id\"), or a project number (such as \"projects/12345\"). To know how to get organization id, visit [here ](https://cloud.google.com/resource-manager/docs/creating-managing-organization#retrieving_your_organization_id). To know how to get folder or project id, visit [here ](https://cloud.google.com/resource-manager/docs/creating-managing-folders#viewing_or_listing_folders_and_projects).",
                        [
                          "**resourceSelector**: Specifies the resource to analyze for access policies, which may be set directly on the resource, or on ancestors such as organizations, folders or projects.",
                          {
                            "$ul": [
                              "**fullResourceName**: Required. The [full resource name](https://cloud.google.com/asset-inventory/docs/resource-name-format) of a resource of [supported resource types](https://cloud.google.com/asset-inventory/docs/supported-asset-types#analyzable_asset_types)."
                            ]
                          }
                        ]
                      ]
                    }
                  ],
                  "**analysisResults**: A list of IamPolicyAnalysisResult that matches the analysis query, or empty if no result is found.",
                  "**fullyExplored**: Represents whether all entries in the analysis_results have been fully explored to answer the query."
                ]
              }
            ],
            "**nonCriticalErrors**: A list of non-critical errors happened during the request handling to explain why `fully_explored` is false, or empty if no error happened.",
            "**serviceAccountImpersonationAnalysis**: The service account impersonation analysis if AnalyzeIamPolicyRequest.analyze_service_account_impersonation is enabled."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
