{
  "name": "datapipelines_projects_locations_pipelines_get",
  "description": "Looks up a single pipeline. Returns a \"NOT_FOUND\" error if no such pipeline exists. Returns a \"FORBIDDEN\" error if the caller doesn't have permission to access it.",
  "parameters": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "Required. The pipeline name. For example: `projects/PROJECT_ID/locations/LOCATION_ID/pipelines/PIPELINE_ID`."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      }
    },
    "required": [
      "name"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://datapipelines.googleapis.com//v1/{name}{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The main pipeline entity and all the necessary metadata for launching and managing linked jobs.",
        "**Key properties:**",
        {
          "$ul": [
            "**createTime**: Output only. Immutable. The timestamp when the pipeline was initially created. Set by the Data Pipelines service.",
            "**displayName**: Required. The display name of the pipeline. It can contain only letters ([A-Za-z]), numbers ([0-9]), hyphens (-), and underscores (_).",
            "**jobCount**: Output only. Number of jobs.",
            "**lastUpdateTime**: Output only. Immutable. The timestamp when the pipeline was last modified. Set by the Data Pipelines service.",
            "**name**: The pipeline name. For example: `projects/PROJECT_ID/locations/LOCATION_ID/pipelines/PIPELINE_ID`. * `PROJECT_ID` can contain letters ([A-Za-z]), numbers ([0-9]), hyphens (-), colons (:), and periods (.). For more information, see [Identifying projects](https://cloud.google.com/resource-manager/docs/creating-managing-projects#identifying_projects). * `LOCATION_ID` is the canonical ID for the pipeline's location. The list of available locations can be obtained by calling `google.cloud.location.Locations.ListLocations`. Note that the Data Pipelines service is not available in all regions. It depends on Cloud Scheduler, an App Engine application, so it's only available in [App Engine regions](https://cloud.google.com/about/locations#region). * `PIPELINE_ID` is the ID of the pipeline. Must be unique for the selected project and location.",
            "**pipelineSources**: Immutable. The sources of the pipeline (for example, Dataplex). The keys and values are set by the corresponding sources during pipeline creation.",
            [
              "**scheduleInfo**: Details of the schedule the pipeline runs on.",
              {
                "$ul": [
                  "**nextJobTime**: Output only. When the next Scheduler job is going to run.",
                  "**schedule**: Unix-cron format of the schedule. This information is retrieved from the linked Cloud Scheduler.",
                  "**timeZone**: Timezone ID. This matches the timezone IDs used by the Cloud Scheduler API. If empty, UTC time is assumed."
                ]
              }
            ],
            "**schedulerServiceAccountEmail**: Optional. A service account email to be used with the Cloud Scheduler job. If not specified, the default compute engine service account will be used.",
            "**state**: Required. The state of the pipeline. When the pipeline is created, the state is set to 'PIPELINE_STATE_ACTIVE' by default. State changes can be requested by setting the state to stopping, paused, or resuming. State cannot be changed through UpdatePipeline requests.",
            "**type**: Required. The type of the pipeline. This field affects the scheduling of the pipeline and the type of metrics to show for the pipeline.",
            [
              "**workload**: Workload details for creating the pipeline jobs.",
              {
                "$ul": [
                  [
                    "**dataflowFlexTemplateRequest**: A request to launch a Dataflow job from a Flex Template.",
                    {
                      "$ul": [
                        [
                          "**launchParameter**: Launch Flex Template parameter.",
                          {
                            "$ul": [
                              "**containerSpecGcsPath**: Cloud Storage path to a file with a JSON-serialized ContainerSpec as content.",
                              [
                                "**environment**: The environment values to be set at runtime for a Flex Template.",
                                {
                                  "$ul": [
                                    "**additionalExperiments**: Additional experiment flags for the job.",
                                    "**additionalUserLabels**: Additional user labels to be specified for the job. Keys and values must follow the restrictions specified in the [labeling restrictions](https://cloud.google.com/compute/docs/labeling-resources#restrictions). An object containing a list of key/value pairs. Example: `{ \"name\": \"wrench\", \"mass\": \"1kg\", \"count\": \"3\" }`.",
                                    "**enableStreamingEngine**: Whether to enable Streaming Engine for the job.",
                                    "**flexrsGoal**: Set FlexRS goal for the job. https://cloud.google.com/dataflow/docs/guides/flexrs",
                                    "**ipConfiguration**: Configuration for VM IPs.",
                                    "**kmsKeyName**: Name for the Cloud KMS key for the job. Key format is: projects//locations//keyRings//cryptoKeys/",
                                    "**machineType**: The machine type to use for the job. Defaults to the value from the template if not specified.",
                                    "**maxWorkers**: The maximum number of Compute Engine instances to be made available to your pipeline during execution, from 1 to 1000.",
                                    "**network**: Network to which VMs will be assigned. If empty or unspecified, the service will use the network \"default\".",
                                    "**numWorkers**: The initial number of Compute Engine instances for the job.",
                                    "**serviceAccountEmail**: The email address of the service account to run the job as.",
                                    "**subnetwork**: Subnetwork to which VMs will be assigned, if desired. You can specify a subnetwork using either a complete URL or an abbreviated path. Expected to be of the form \"https://www.googleapis.com/compute/v1/projects/HOST_PROJECT_ID/regions/REGION/subnetworks/SUBNETWORK\" or \"regions/REGION/subnetworks/SUBNETWORK\". If the subnetwork is located in a Shared VPC network, you must use the complete URL.",
                                    "**tempLocation**: The Cloud Storage path to use for temporary files. Must be a valid Cloud Storage URL, beginning with `gs://`.",
                                    "**workerRegion**: The Compute Engine region (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. \"us-west1\". Mutually exclusive with worker_zone. If neither worker_region nor worker_zone is specified, defaults to the control plane region.",
                                    "**workerZone**: The Compute Engine zone (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. \"us-west1-a\". Mutually exclusive with worker_region. If neither worker_region nor worker_zone is specified, a zone in the control plane region is chosen based on available capacity. If both `worker_zone` and `zone` are set, `worker_zone` takes precedence.",
                                    "**zone**: The Compute Engine [availability zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones) for launching worker instances to run your pipeline. In the future, worker_zone will take precedence."
                                  ]
                                }
                              ],
                              "**jobName**: Required. The job name to use for the created job. For an update job request, the job name should be the same as the existing running job.",
                              "**launchOptions**: Launch options for this Flex Template job. This is a common set of options across languages and templates. This should not be used to pass job parameters.",
                              "**parameters**: The parameters for the Flex Template. Example: `{\"num_workers\":\"5\"}`",
                              "**transformNameMappings**: Use this to pass transform name mappings for streaming update jobs. Example: `{\"oldTransformName\":\"newTransformName\",...}`",
                              "**update**: Set this to true if you are sending a request to update a running streaming job. When set, the job name should be the same as the running job."
                            ]
                          }
                        ],
                        "**location**: Required. The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to which to direct the request. For example, `us-central1`, `us-west1`.",
                        "**projectId**: Required. The ID of the Cloud Platform project that the job belongs to.",
                        "**validateOnly**: If true, the request is validated but not actually executed. Defaults to false."
                      ]
                    }
                  ],
                  [
                    "**dataflowLaunchTemplateRequest**: A request to launch a template.",
                    {
                      "$ul": [
                        "**gcsPath**: A Cloud Storage path to the template from which to create the job. Must be a valid Cloud Storage URL, beginning with 'gs://'.",
                        [
                          "**launchParameters**: Parameters to provide to the template being launched.",
                          {
                            "$ul": [
                              [
                                "**environment**: The environment values to set at runtime.",
                                {
                                  "$ul": [
                                    "**additionalExperiments**: Additional experiment flags for the job.",
                                    "**additionalUserLabels**: Additional user labels to be specified for the job. Keys and values should follow the restrictions specified in the [labeling restrictions](https://cloud.google.com/compute/docs/labeling-resources#restrictions) page. An object containing a list of key/value pairs. Example: { \"name\": \"wrench\", \"mass\": \"1kg\", \"count\": \"3\" }.",
                                    "**bypassTempDirValidation**: Whether to bypass the safety checks for the job's temporary directory. Use with caution.",
                                    "**enableStreamingEngine**: Whether to enable Streaming Engine for the job.",
                                    "**ipConfiguration**: Configuration for VM IPs.",
                                    "**kmsKeyName**: Name for the Cloud KMS key for the job. The key format is: projects//locations//keyRings//cryptoKeys/",
                                    "**machineType**: The machine type to use for the job. Defaults to the value from the template if not specified.",
                                    "**maxWorkers**: The maximum number of Compute Engine instances to be made available to your pipeline during execution, from 1 to 1000.",
                                    "**network**: Network to which VMs will be assigned. If empty or unspecified, the service will use the network \"default\".",
                                    "**numWorkers**: The initial number of Compute Engine instances for the job.",
                                    "**serviceAccountEmail**: The email address of the service account to run the job as.",
                                    "**subnetwork**: Subnetwork to which VMs will be assigned, if desired. You can specify a subnetwork using either a complete URL or an abbreviated path. Expected to be of the form \"https://www.googleapis.com/compute/v1/projects/HOST_PROJECT_ID/regions/REGION/subnetworks/SUBNETWORK\" or \"regions/REGION/subnetworks/SUBNETWORK\". If the subnetwork is located in a Shared VPC network, you must use the complete URL.",
                                    "**tempLocation**: The Cloud Storage path to use for temporary files. Must be a valid Cloud Storage URL, beginning with `gs://`.",
                                    "**workerRegion**: The Compute Engine region (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. \"us-west1\". Mutually exclusive with worker_zone. If neither worker_region nor worker_zone is specified, default to the control plane's region.",
                                    "**workerZone**: The Compute Engine zone (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. \"us-west1-a\". Mutually exclusive with worker_region. If neither worker_region nor worker_zone is specified, a zone in the control plane's region is chosen based on available capacity. If both `worker_zone` and `zone` are set, `worker_zone` takes precedence.",
                                    "**zone**: The Compute Engine [availability zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones) for launching worker instances to run your pipeline. In the future, worker_zone will take precedence."
                                  ]
                                }
                              ],
                              "**jobName**: Required. The job name to use for the created job.",
                              "**parameters**: The runtime parameters to pass to the job.",
                              "**transformNameMapping**: Map of transform name prefixes of the job to be replaced to the corresponding name prefixes of the new job. Only applicable when updating a pipeline.",
                              "**update**: If set, replace the existing pipeline with the name specified by jobName with this pipeline, preserving state."
                            ]
                          }
                        ],
                        "**location**: The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to which to direct the request.",
                        "**projectId**: Required. The ID of the Cloud Platform project that the job belongs to.",
                        "**validateOnly**: If true, the request is validated but not actually executed. Defaults to false."
                      ]
                    }
                  ]
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
