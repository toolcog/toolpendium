{
  "name": "datapipelines_projects_locations_pipelines_create",
  "description": "Creates a pipeline. For a batch pipeline, you can pass scheduler information. Data Pipelines uses the scheduler information to create an internal scheduler that runs jobs periodically. If the internal scheduler is not configured, you can use RunPipeline to run jobs.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The location name. For example: `projects/PROJECT_ID/locations/LOCATION_ID`."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleCloudDatapipelinesV1Pipeline"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "GoogleCloudDatapipelinesV1Pipeline": {
        "description": "The main pipeline entity and all the necessary metadata for launching and managing linked jobs.",
        "properties": {
          "createTime": {
            "description": "Output only. Immutable. The timestamp when the pipeline was initially created. Set by the Data Pipelines service.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "Required. The display name of the pipeline. It can contain only letters ([A-Za-z]), numbers ([0-9]), hyphens (-), and underscores (_).",
            "type": "string"
          },
          "jobCount": {
            "description": "Output only. Number of jobs.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "lastUpdateTime": {
            "description": "Output only. Immutable. The timestamp when the pipeline was last modified. Set by the Data Pipelines service.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "The pipeline name. For example: `projects/PROJECT_ID/locations/LOCATION_ID/pipelines/PIPELINE_ID`. * `PROJECT_ID` can contain letters ([A-Za-z]), numbers ([0-9]), hyphens (-), colons (:), and periods (.). For more information, see [Identifying projects](https://cloud.google.com/resource-manager/docs/creating-managing-projects#identifying_projects). * `LOCATION_ID` is the canonical ID for the pipeline's location. The list of available locations can be obtained by calling `google.cloud.location.Locations.ListLocations`. Note that the Data Pipelines service is not available in all regions. It depends on Cloud Scheduler, an App Engine application, so it's only available in [App Engine regions](https://cloud.google.com/about/locations#region). * `PIPELINE_ID` is the ID of the pipeline. Must be unique for the selected project and location.",
            "type": "string"
          },
          "pipelineSources": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Immutable. The sources of the pipeline (for example, Dataplex). The keys and values are set by the corresponding sources during pipeline creation.",
            "type": "object"
          },
          "scheduleInfo": {
            "$ref": "#/$defs/GoogleCloudDatapipelinesV1ScheduleSpec"
          },
          "schedulerServiceAccountEmail": {
            "description": "Optional. A service account email to be used with the Cloud Scheduler job. If not specified, the default compute engine service account will be used.",
            "type": "string"
          },
          "state": {
            "description": "Required. The state of the pipeline. When the pipeline is created, the state is set to 'PIPELINE_STATE_ACTIVE' by default. State changes can be requested by setting the state to stopping, paused, or resuming. State cannot be changed through UpdatePipeline requests.",
            "enum": [
              "STATE_UNSPECIFIED",
              "STATE_RESUMING",
              "STATE_ACTIVE",
              "STATE_STOPPING",
              "STATE_ARCHIVED",
              "STATE_PAUSED"
            ],
            "type": "string"
          },
          "type": {
            "description": "Required. The type of the pipeline. This field affects the scheduling of the pipeline and the type of metrics to show for the pipeline.",
            "enum": [
              "PIPELINE_TYPE_UNSPECIFIED",
              "PIPELINE_TYPE_BATCH",
              "PIPELINE_TYPE_STREAMING"
            ],
            "type": "string"
          },
          "workload": {
            "$ref": "#/$defs/GoogleCloudDatapipelinesV1Workload"
          }
        },
        "type": "object"
      },
      "GoogleCloudDatapipelinesV1ScheduleSpec": {
        "description": "Details of the schedule the pipeline runs on.",
        "properties": {
          "nextJobTime": {
            "description": "Output only. When the next Scheduler job is going to run.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "schedule": {
            "description": "Unix-cron format of the schedule. This information is retrieved from the linked Cloud Scheduler.",
            "type": "string"
          },
          "timeZone": {
            "description": "Timezone ID. This matches the timezone IDs used by the Cloud Scheduler API. If empty, UTC time is assumed.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDatapipelinesV1Workload": {
        "description": "Workload details for creating the pipeline jobs.",
        "properties": {
          "dataflowFlexTemplateRequest": {
            "$ref": "#/$defs/GoogleCloudDatapipelinesV1LaunchFlexTemplateRequest"
          },
          "dataflowLaunchTemplateRequest": {
            "$ref": "#/$defs/GoogleCloudDatapipelinesV1LaunchTemplateRequest"
          }
        },
        "type": "object"
      },
      "GoogleCloudDatapipelinesV1LaunchFlexTemplateRequest": {
        "description": "A request to launch a Dataflow job from a Flex Template.",
        "properties": {
          "launchParameter": {
            "$ref": "#/$defs/GoogleCloudDatapipelinesV1LaunchFlexTemplateParameter"
          },
          "location": {
            "description": "Required. The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to which to direct the request. For example, `us-central1`, `us-west1`.",
            "type": "string"
          },
          "projectId": {
            "description": "Required. The ID of the Cloud Platform project that the job belongs to.",
            "type": "string"
          },
          "validateOnly": {
            "description": "If true, the request is validated but not actually executed. Defaults to false.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GoogleCloudDatapipelinesV1LaunchFlexTemplateParameter": {
        "description": "Launch Flex Template parameter.",
        "properties": {
          "containerSpecGcsPath": {
            "description": "Cloud Storage path to a file with a JSON-serialized ContainerSpec as content.",
            "type": "string"
          },
          "environment": {
            "$ref": "#/$defs/GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment"
          },
          "jobName": {
            "description": "Required. The job name to use for the created job. For an update job request, the job name should be the same as the existing running job.",
            "type": "string"
          },
          "launchOptions": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Launch options for this Flex Template job. This is a common set of options across languages and templates. This should not be used to pass job parameters.",
            "type": "object"
          },
          "parameters": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The parameters for the Flex Template. Example: `{\"num_workers\":\"5\"}`",
            "type": "object"
          },
          "transformNameMappings": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Use this to pass transform name mappings for streaming update jobs. Example: `{\"oldTransformName\":\"newTransformName\",...}`",
            "type": "object"
          },
          "update": {
            "description": "Set this to true if you are sending a request to update a running streaming job. When set, the job name should be the same as the running job.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironment": {
        "description": "The environment values to be set at runtime for a Flex Template.",
        "properties": {
          "additionalExperiments": {
            "description": "Additional experiment flags for the job.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "additionalUserLabels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional user labels to be specified for the job. Keys and values must follow the restrictions specified in the [labeling restrictions](https://cloud.google.com/compute/docs/labeling-resources#restrictions). An object containing a list of key/value pairs. Example: `{ \"name\": \"wrench\", \"mass\": \"1kg\", \"count\": \"3\" }`.",
            "type": "object"
          },
          "enableStreamingEngine": {
            "description": "Whether to enable Streaming Engine for the job.",
            "type": "boolean"
          },
          "flexrsGoal": {
            "description": "Set FlexRS goal for the job. https://cloud.google.com/dataflow/docs/guides/flexrs",
            "enum": [
              "FLEXRS_UNSPECIFIED",
              "FLEXRS_SPEED_OPTIMIZED",
              "FLEXRS_COST_OPTIMIZED"
            ],
            "type": "string"
          },
          "ipConfiguration": {
            "description": "Configuration for VM IPs.",
            "enum": [
              "WORKER_IP_UNSPECIFIED",
              "WORKER_IP_PUBLIC",
              "WORKER_IP_PRIVATE"
            ],
            "type": "string"
          },
          "kmsKeyName": {
            "description": "Name for the Cloud KMS key for the job. Key format is: projects//locations//keyRings//cryptoKeys/",
            "type": "string"
          },
          "machineType": {
            "description": "The machine type to use for the job. Defaults to the value from the template if not specified.",
            "type": "string"
          },
          "maxWorkers": {
            "description": "The maximum number of Compute Engine instances to be made available to your pipeline during execution, from 1 to 1000.",
            "format": "int32",
            "type": "integer"
          },
          "network": {
            "description": "Network to which VMs will be assigned. If empty or unspecified, the service will use the network \"default\".",
            "type": "string"
          },
          "numWorkers": {
            "description": "The initial number of Compute Engine instances for the job.",
            "format": "int32",
            "type": "integer"
          },
          "serviceAccountEmail": {
            "description": "The email address of the service account to run the job as.",
            "type": "string"
          },
          "subnetwork": {
            "description": "Subnetwork to which VMs will be assigned, if desired. You can specify a subnetwork using either a complete URL or an abbreviated path. Expected to be of the form \"https://www.googleapis.com/compute/v1/projects/HOST_PROJECT_ID/regions/REGION/subnetworks/SUBNETWORK\" or \"regions/REGION/subnetworks/SUBNETWORK\". If the subnetwork is located in a Shared VPC network, you must use the complete URL.",
            "type": "string"
          },
          "tempLocation": {
            "description": "The Cloud Storage path to use for temporary files. Must be a valid Cloud Storage URL, beginning with `gs://`.",
            "type": "string"
          },
          "workerRegion": {
            "description": "The Compute Engine region (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. \"us-west1\". Mutually exclusive with worker_zone. If neither worker_region nor worker_zone is specified, defaults to the control plane region.",
            "type": "string"
          },
          "workerZone": {
            "description": "The Compute Engine zone (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. \"us-west1-a\". Mutually exclusive with worker_region. If neither worker_region nor worker_zone is specified, a zone in the control plane region is chosen based on available capacity. If both `worker_zone` and `zone` are set, `worker_zone` takes precedence.",
            "type": "string"
          },
          "zone": {
            "description": "The Compute Engine [availability zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones) for launching worker instances to run your pipeline. In the future, worker_zone will take precedence.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDatapipelinesV1LaunchTemplateRequest": {
        "description": "A request to launch a template.",
        "properties": {
          "gcsPath": {
            "description": "A Cloud Storage path to the template from which to create the job. Must be a valid Cloud Storage URL, beginning with 'gs://'.",
            "type": "string"
          },
          "launchParameters": {
            "$ref": "#/$defs/GoogleCloudDatapipelinesV1LaunchTemplateParameters"
          },
          "location": {
            "description": "The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to which to direct the request.",
            "type": "string"
          },
          "projectId": {
            "description": "Required. The ID of the Cloud Platform project that the job belongs to.",
            "type": "string"
          },
          "validateOnly": {
            "description": "If true, the request is validated but not actually executed. Defaults to false.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GoogleCloudDatapipelinesV1LaunchTemplateParameters": {
        "description": "Parameters to provide to the template being launched.",
        "properties": {
          "environment": {
            "$ref": "#/$defs/GoogleCloudDatapipelinesV1RuntimeEnvironment"
          },
          "jobName": {
            "description": "Required. The job name to use for the created job.",
            "type": "string"
          },
          "parameters": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The runtime parameters to pass to the job.",
            "type": "object"
          },
          "transformNameMapping": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Map of transform name prefixes of the job to be replaced to the corresponding name prefixes of the new job. Only applicable when updating a pipeline.",
            "type": "object"
          },
          "update": {
            "description": "If set, replace the existing pipeline with the name specified by jobName with this pipeline, preserving state.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GoogleCloudDatapipelinesV1RuntimeEnvironment": {
        "description": "The environment values to set at runtime.",
        "properties": {
          "additionalExperiments": {
            "description": "Additional experiment flags for the job.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "additionalUserLabels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional user labels to be specified for the job. Keys and values should follow the restrictions specified in the [labeling restrictions](https://cloud.google.com/compute/docs/labeling-resources#restrictions) page. An object containing a list of key/value pairs. Example: { \"name\": \"wrench\", \"mass\": \"1kg\", \"count\": \"3\" }.",
            "type": "object"
          },
          "bypassTempDirValidation": {
            "description": "Whether to bypass the safety checks for the job's temporary directory. Use with caution.",
            "type": "boolean"
          },
          "enableStreamingEngine": {
            "description": "Whether to enable Streaming Engine for the job.",
            "type": "boolean"
          },
          "ipConfiguration": {
            "description": "Configuration for VM IPs.",
            "enum": [
              "WORKER_IP_UNSPECIFIED",
              "WORKER_IP_PUBLIC",
              "WORKER_IP_PRIVATE"
            ],
            "type": "string"
          },
          "kmsKeyName": {
            "description": "Name for the Cloud KMS key for the job. The key format is: projects//locations//keyRings//cryptoKeys/",
            "type": "string"
          },
          "machineType": {
            "description": "The machine type to use for the job. Defaults to the value from the template if not specified.",
            "type": "string"
          },
          "maxWorkers": {
            "description": "The maximum number of Compute Engine instances to be made available to your pipeline during execution, from 1 to 1000.",
            "format": "int32",
            "type": "integer"
          },
          "network": {
            "description": "Network to which VMs will be assigned. If empty or unspecified, the service will use the network \"default\".",
            "type": "string"
          },
          "numWorkers": {
            "description": "The initial number of Compute Engine instances for the job.",
            "format": "int32",
            "type": "integer"
          },
          "serviceAccountEmail": {
            "description": "The email address of the service account to run the job as.",
            "type": "string"
          },
          "subnetwork": {
            "description": "Subnetwork to which VMs will be assigned, if desired. You can specify a subnetwork using either a complete URL or an abbreviated path. Expected to be of the form \"https://www.googleapis.com/compute/v1/projects/HOST_PROJECT_ID/regions/REGION/subnetworks/SUBNETWORK\" or \"regions/REGION/subnetworks/SUBNETWORK\". If the subnetwork is located in a Shared VPC network, you must use the complete URL.",
            "type": "string"
          },
          "tempLocation": {
            "description": "The Cloud Storage path to use for temporary files. Must be a valid Cloud Storage URL, beginning with `gs://`.",
            "type": "string"
          },
          "workerRegion": {
            "description": "The Compute Engine region (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. \"us-west1\". Mutually exclusive with worker_zone. If neither worker_region nor worker_zone is specified, default to the control plane's region.",
            "type": "string"
          },
          "workerZone": {
            "description": "The Compute Engine zone (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. \"us-west1-a\". Mutually exclusive with worker_region. If neither worker_region nor worker_zone is specified, a zone in the control plane's region is chosen based on available capacity. If both `worker_zone` and `zone` are set, `worker_zone` takes precedence.",
            "type": "string"
          },
          "zone": {
            "description": "The Compute Engine [availability zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones) for launching worker instances to run your pipeline. In the future, worker_zone will take precedence.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://datapipelines.googleapis.com//v1/{parent}/pipelines{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The main pipeline entity and all the necessary metadata for launching and managing linked jobs.",
        "**Key properties:**",
        {
          "$ul": [
            "**createTime**: Output only. Immutable. The timestamp when the pipeline was initially created. Set by the Data Pipelines service.",
            "**displayName**: Required. The display name of the pipeline. It can contain only letters ([A-Za-z]), numbers ([0-9]), hyphens (-), and underscores (_).",
            "**jobCount**: Output only. Number of jobs.",
            "**lastUpdateTime**: Output only. Immutable. The timestamp when the pipeline was last modified. Set by the Data Pipelines service.",
            "**name**: The pipeline name. For example: `projects/PROJECT_ID/locations/LOCATION_ID/pipelines/PIPELINE_ID`. * `PROJECT_ID` can contain letters ([A-Za-z]), numbers ([0-9]), hyphens (-), colons (:), and periods (.). For more information, see [Identifying projects](https://cloud.google.com/resource-manager/docs/creating-managing-projects#identifying_projects). * `LOCATION_ID` is the canonical ID for the pipeline's location. The list of available locations can be obtained by calling `google.cloud.location.Locations.ListLocations`. Note that the Data Pipelines service is not available in all regions. It depends on Cloud Scheduler, an App Engine application, so it's only available in [App Engine regions](https://cloud.google.com/about/locations#region). * `PIPELINE_ID` is the ID of the pipeline. Must be unique for the selected project and location.",
            "**pipelineSources**: Immutable. The sources of the pipeline (for example, Dataplex). The keys and values are set by the corresponding sources during pipeline creation.",
            [
              "**scheduleInfo**: Details of the schedule the pipeline runs on.",
              {
                "$ul": [
                  "**nextJobTime**: Output only. When the next Scheduler job is going to run.",
                  "**schedule**: Unix-cron format of the schedule. This information is retrieved from the linked Cloud Scheduler.",
                  "**timeZone**: Timezone ID. This matches the timezone IDs used by the Cloud Scheduler API. If empty, UTC time is assumed."
                ]
              }
            ],
            "**schedulerServiceAccountEmail**: Optional. A service account email to be used with the Cloud Scheduler job. If not specified, the default compute engine service account will be used.",
            "**state**: Required. The state of the pipeline. When the pipeline is created, the state is set to 'PIPELINE_STATE_ACTIVE' by default. State changes can be requested by setting the state to stopping, paused, or resuming. State cannot be changed through UpdatePipeline requests.",
            "**type**: Required. The type of the pipeline. This field affects the scheduling of the pipeline and the type of metrics to show for the pipeline.",
            [
              "**workload**: Workload details for creating the pipeline jobs.",
              {
                "$ul": [
                  [
                    "**dataflowFlexTemplateRequest**: A request to launch a Dataflow job from a Flex Template.",
                    {
                      "$ul": [
                        [
                          "**launchParameter**: Launch Flex Template parameter.",
                          {
                            "$ul": [
                              "**containerSpecGcsPath**: Cloud Storage path to a file with a JSON-serialized ContainerSpec as content.",
                              [
                                "**environment**: The environment values to be set at runtime for a Flex Template.",
                                {
                                  "$ul": [
                                    "**additionalExperiments**: Additional experiment flags for the job.",
                                    "**additionalUserLabels**: Additional user labels to be specified for the job. Keys and values must follow the restrictions specified in the [labeling restrictions](https://cloud.google.com/compute/docs/labeling-resources#restrictions). An object containing a list of key/value pairs. Example: `{ \"name\": \"wrench\", \"mass\": \"1kg\", \"count\": \"3\" }`.",
                                    "**enableStreamingEngine**: Whether to enable Streaming Engine for the job.",
                                    "**flexrsGoal**: Set FlexRS goal for the job. https://cloud.google.com/dataflow/docs/guides/flexrs",
                                    "**ipConfiguration**: Configuration for VM IPs.",
                                    "**kmsKeyName**: Name for the Cloud KMS key for the job. Key format is: projects//locations//keyRings//cryptoKeys/",
                                    "**machineType**: The machine type to use for the job. Defaults to the value from the template if not specified.",
                                    "**maxWorkers**: The maximum number of Compute Engine instances to be made available to your pipeline during execution, from 1 to 1000.",
                                    "**network**: Network to which VMs will be assigned. If empty or unspecified, the service will use the network \"default\".",
                                    "**numWorkers**: The initial number of Compute Engine instances for the job.",
                                    "**serviceAccountEmail**: The email address of the service account to run the job as.",
                                    "**subnetwork**: Subnetwork to which VMs will be assigned, if desired. You can specify a subnetwork using either a complete URL or an abbreviated path. Expected to be of the form \"https://www.googleapis.com/compute/v1/projects/HOST_PROJECT_ID/regions/REGION/subnetworks/SUBNETWORK\" or \"regions/REGION/subnetworks/SUBNETWORK\". If the subnetwork is located in a Shared VPC network, you must use the complete URL.",
                                    "**tempLocation**: The Cloud Storage path to use for temporary files. Must be a valid Cloud Storage URL, beginning with `gs://`.",
                                    "**workerRegion**: The Compute Engine region (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. \"us-west1\". Mutually exclusive with worker_zone. If neither worker_region nor worker_zone is specified, defaults to the control plane region.",
                                    "**workerZone**: The Compute Engine zone (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. \"us-west1-a\". Mutually exclusive with worker_region. If neither worker_region nor worker_zone is specified, a zone in the control plane region is chosen based on available capacity. If both `worker_zone` and `zone` are set, `worker_zone` takes precedence.",
                                    "**zone**: The Compute Engine [availability zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones) for launching worker instances to run your pipeline. In the future, worker_zone will take precedence."
                                  ]
                                }
                              ],
                              "**jobName**: Required. The job name to use for the created job. For an update job request, the job name should be the same as the existing running job.",
                              "**launchOptions**: Launch options for this Flex Template job. This is a common set of options across languages and templates. This should not be used to pass job parameters.",
                              "**parameters**: The parameters for the Flex Template. Example: `{\"num_workers\":\"5\"}`",
                              "**transformNameMappings**: Use this to pass transform name mappings for streaming update jobs. Example: `{\"oldTransformName\":\"newTransformName\",...}`",
                              "**update**: Set this to true if you are sending a request to update a running streaming job. When set, the job name should be the same as the running job."
                            ]
                          }
                        ],
                        "**location**: Required. The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to which to direct the request. For example, `us-central1`, `us-west1`.",
                        "**projectId**: Required. The ID of the Cloud Platform project that the job belongs to.",
                        "**validateOnly**: If true, the request is validated but not actually executed. Defaults to false."
                      ]
                    }
                  ],
                  [
                    "**dataflowLaunchTemplateRequest**: A request to launch a template.",
                    {
                      "$ul": [
                        "**gcsPath**: A Cloud Storage path to the template from which to create the job. Must be a valid Cloud Storage URL, beginning with 'gs://'.",
                        [
                          "**launchParameters**: Parameters to provide to the template being launched.",
                          {
                            "$ul": [
                              [
                                "**environment**: The environment values to set at runtime.",
                                {
                                  "$ul": [
                                    "**additionalExperiments**: Additional experiment flags for the job.",
                                    "**additionalUserLabels**: Additional user labels to be specified for the job. Keys and values should follow the restrictions specified in the [labeling restrictions](https://cloud.google.com/compute/docs/labeling-resources#restrictions) page. An object containing a list of key/value pairs. Example: { \"name\": \"wrench\", \"mass\": \"1kg\", \"count\": \"3\" }.",
                                    "**bypassTempDirValidation**: Whether to bypass the safety checks for the job's temporary directory. Use with caution.",
                                    "**enableStreamingEngine**: Whether to enable Streaming Engine for the job.",
                                    "**ipConfiguration**: Configuration for VM IPs.",
                                    "**kmsKeyName**: Name for the Cloud KMS key for the job. The key format is: projects//locations//keyRings//cryptoKeys/",
                                    "**machineType**: The machine type to use for the job. Defaults to the value from the template if not specified.",
                                    "**maxWorkers**: The maximum number of Compute Engine instances to be made available to your pipeline during execution, from 1 to 1000.",
                                    "**network**: Network to which VMs will be assigned. If empty or unspecified, the service will use the network \"default\".",
                                    "**numWorkers**: The initial number of Compute Engine instances for the job.",
                                    "**serviceAccountEmail**: The email address of the service account to run the job as.",
                                    "**subnetwork**: Subnetwork to which VMs will be assigned, if desired. You can specify a subnetwork using either a complete URL or an abbreviated path. Expected to be of the form \"https://www.googleapis.com/compute/v1/projects/HOST_PROJECT_ID/regions/REGION/subnetworks/SUBNETWORK\" or \"regions/REGION/subnetworks/SUBNETWORK\". If the subnetwork is located in a Shared VPC network, you must use the complete URL.",
                                    "**tempLocation**: The Cloud Storage path to use for temporary files. Must be a valid Cloud Storage URL, beginning with `gs://`.",
                                    "**workerRegion**: The Compute Engine region (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. \"us-west1\". Mutually exclusive with worker_zone. If neither worker_region nor worker_zone is specified, default to the control plane's region.",
                                    "**workerZone**: The Compute Engine zone (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. \"us-west1-a\". Mutually exclusive with worker_region. If neither worker_region nor worker_zone is specified, a zone in the control plane's region is chosen based on available capacity. If both `worker_zone` and `zone` are set, `worker_zone` takes precedence.",
                                    "**zone**: The Compute Engine [availability zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones) for launching worker instances to run your pipeline. In the future, worker_zone will take precedence."
                                  ]
                                }
                              ],
                              "**jobName**: Required. The job name to use for the created job.",
                              "**parameters**: The runtime parameters to pass to the job.",
                              "**transformNameMapping**: Map of transform name prefixes of the job to be replaced to the corresponding name prefixes of the new job. Only applicable when updating a pipeline.",
                              "**update**: If set, replace the existing pipeline with the name specified by jobName with this pipeline, preserving state."
                            ]
                          }
                        ],
                        "**location**: The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to which to direct the request.",
                        "**projectId**: Required. The ID of the Cloud Platform project that the job belongs to.",
                        "**validateOnly**: If true, the request is validated but not actually executed. Defaults to false."
                      ]
                    }
                  ]
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
