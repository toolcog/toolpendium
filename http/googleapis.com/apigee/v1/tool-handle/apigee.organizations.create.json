{
  "name": "apigee_organizations_create",
  "description": "Creates an Apigee organization. See [Create an Apigee organization](https://cloud.google.com/apigee/docs/api-platform/get-started/create-org).",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. Name of the Google Cloud project in which to associate the Apigee organization. Pass the information as a query parameter using the following structure in your request: `projects/`"
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleCloudApigeeV1Organization"
      }
    },
    "$defs": {
      "GoogleCloudApigeeV1Organization": {
        "properties": {
          "addonsConfig": {
            "$ref": "#/$defs/GoogleCloudApigeeV1AddonsConfig"
          },
          "analyticsRegion": {
            "deprecated": true,
            "description": "Required. DEPRECATED: This field will eventually be deprecated and replaced with a differently-named field. Primary Google Cloud region for analytics data storage. For valid values, see [Create an Apigee organization](https://cloud.google.com/apigee/docs/api-platform/get-started/create-org).",
            "type": "string"
          },
          "apiConsumerDataEncryptionKeyName": {
            "description": "Cloud KMS key name used for encrypting API consumer data. Required for US/EU regions when [BillingType](#BillingType) is `SUBSCRIPTION`. When [BillingType](#BillingType) is `EVALUATION` or the region is not US/EU, a Google-Managed encryption key will be used. Format: `projects/*/locations/*/keyRings/*/cryptoKeys/*`",
            "type": "string"
          },
          "apiConsumerDataLocation": {
            "description": "This field is needed only for customers with control plane in US or EU. Apigee stores some control plane data only in single region. This field determines which single region Apigee should use. For example: \"us-west1\" when control plane is in US or \"europe-west2\" when control plane is in EU.",
            "type": "string"
          },
          "apigeeProjectId": {
            "description": "Output only. Apigee Project ID associated with the organization. Use this project to allowlist Apigee in the Service Attachment when using private service connect with Apigee.",
            "readOnly": true,
            "type": "string"
          },
          "attributes": {
            "description": "Not used by Apigee.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "authorizedNetwork": {
            "description": "Compute Engine network used for Service Networking to be peered with Apigee runtime instances. See [Getting started with the Service Networking API](https://cloud.google.com/service-infrastructure/docs/service-networking/getting-started). Valid only when [RuntimeType](#RuntimeType) is set to `CLOUD`. The value must be set before the creation of a runtime instance and can be updated only when there are no runtime instances. For example: `default`. Apigee also supports shared VPC (that is, the host network project is not the same as the one that is peering with Apigee). See [Shared VPC overview](https://cloud.google.com/vpc/docs/shared-vpc). To use a shared VPC network, use the following format: `projects/{host-project-id}/{region}/networks/{network-name}`. For example: `projects/my-sharedvpc-host/global/networks/mynetwork` **Note:** Not supported for Apigee hybrid.",
            "type": "string"
          },
          "billingType": {
            "description": "Billing type of the Apigee organization. See [Apigee pricing](https://cloud.google.com/apigee/pricing).",
            "enum": [
              "BILLING_TYPE_UNSPECIFIED",
              "SUBSCRIPTION",
              "EVALUATION",
              "PAYG"
            ],
            "type": "string"
          },
          "caCertificate": {
            "description": "Output only. Base64-encoded public certificate for the root CA of the Apigee organization. Valid only when [RuntimeType](#RuntimeType) is `CLOUD`.",
            "format": "byte",
            "readOnly": true,
            "type": "string"
          },
          "controlPlaneEncryptionKeyName": {
            "description": "Cloud KMS key name used for encrypting control plane data that is stored in a multi region. Required when [BillingType](#BillingType) is `SUBSCRIPTION`. When [BillingType](#BillingType) is `EVALUATION`, a Google-Managed encryption key will be used. Format: `projects/*/locations/*/keyRings/*/cryptoKeys/*`",
            "type": "string"
          },
          "createdAt": {
            "description": "Output only. Time that the Apigee organization was created in milliseconds since epoch.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "customerName": {
            "description": "Not used by Apigee.",
            "type": "string"
          },
          "description": {
            "description": "Description of the Apigee organization.",
            "type": "string"
          },
          "disableVpcPeering": {
            "description": "Optional. Flag that specifies whether the VPC Peering through Private Google Access should be disabled between the consumer network and Apigee. Valid only when RuntimeType is set to CLOUD. Required if an authorizedNetwork on the consumer project is not provided, in which case the flag should be set to true. The value must be set before the creation of any Apigee runtime instance and can be updated only when there are no runtime instances. **Note:** Apigee will be deprecating the vpc peering model that requires you to provide 'authorizedNetwork', by making the non-peering model as the default way of provisioning Apigee organization in future. So, this will be a temporary flag to enable the transition. Not supported for Apigee hybrid.",
            "type": "boolean"
          },
          "displayName": {
            "description": "Display name for the Apigee organization. Unused, but reserved for future use.",
            "type": "string"
          },
          "environments": {
            "description": "Output only. List of environments in the Apigee organization.",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "expiresAt": {
            "description": "Output only. Time that the Apigee organization is scheduled for deletion.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "lastModifiedAt": {
            "description": "Output only. Time that the Apigee organization was last modified in milliseconds since epoch.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "Output only. Name of the Apigee organization.",
            "readOnly": true,
            "type": "string"
          },
          "portalDisabled": {
            "description": "Configuration for the Portals settings.",
            "type": "boolean"
          },
          "projectId": {
            "description": "Output only. Project ID associated with the Apigee organization.",
            "readOnly": true,
            "type": "string"
          },
          "properties": {
            "$ref": "#/$defs/GoogleCloudApigeeV1Properties"
          },
          "runtimeDatabaseEncryptionKeyName": {
            "description": "Cloud KMS key name used for encrypting the data that is stored and replicated across runtime instances. Update is not allowed after the organization is created. Required when [RuntimeType](#RuntimeType) is `CLOUD`. If not specified when [RuntimeType](#RuntimeType) is `TRIAL`, a Google-Managed encryption key will be used. For example: \"projects/foo/locations/us/keyRings/bar/cryptoKeys/baz\". **Note:** Not supported for Apigee hybrid.",
            "type": "string"
          },
          "runtimeType": {
            "description": "Required. Runtime type of the Apigee organization based on the Apigee subscription purchased.",
            "enum": [
              "RUNTIME_TYPE_UNSPECIFIED",
              "CLOUD",
              "HYBRID"
            ],
            "type": "string"
          },
          "state": {
            "description": "Output only. State of the organization. Values other than ACTIVE means the resource is not ready to use.",
            "enum": [
              "STATE_UNSPECIFIED",
              "CREATING",
              "ACTIVE",
              "DELETING",
              "UPDATING"
            ],
            "readOnly": true,
            "type": "string"
          },
          "subscriptionPlan": {
            "description": "Output only. Subscription plan that the customer has purchased. Output only.",
            "enum": [
              "SUBSCRIPTION_PLAN_UNSPECIFIED",
              "SUBSCRIPTION_2021",
              "SUBSCRIPTION_2024"
            ],
            "readOnly": true,
            "type": "string"
          },
          "subscriptionType": {
            "deprecated": true,
            "description": "Output only. DEPRECATED: This will eventually be replaced by BillingType. Subscription type of the Apigee organization. Valid values include trial (free, limited, and for evaluation purposes only) or paid (full subscription has been purchased). See [Apigee pricing](https://cloud.google.com/apigee/pricing/).",
            "enum": [
              "SUBSCRIPTION_TYPE_UNSPECIFIED",
              "PAID",
              "TRIAL"
            ],
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "Not used by Apigee.",
            "enum": [
              "TYPE_UNSPECIFIED",
              "TYPE_TRIAL",
              "TYPE_PAID",
              "TYPE_INTERNAL"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudApigeeV1AddonsConfig": {
        "description": "Add-on configurations for the Apigee organization.",
        "properties": {
          "advancedApiOpsConfig": {
            "$ref": "#/$defs/GoogleCloudApigeeV1AdvancedApiOpsConfig"
          },
          "analyticsConfig": {
            "$ref": "#/$defs/GoogleCloudApigeeV1AnalyticsConfig"
          },
          "apiSecurityConfig": {
            "$ref": "#/$defs/GoogleCloudApigeeV1ApiSecurityConfig"
          },
          "connectorsPlatformConfig": {
            "$ref": "#/$defs/GoogleCloudApigeeV1ConnectorsPlatformConfig"
          },
          "integrationConfig": {
            "$ref": "#/$defs/GoogleCloudApigeeV1IntegrationConfig"
          },
          "monetizationConfig": {
            "$ref": "#/$defs/GoogleCloudApigeeV1MonetizationConfig"
          }
        },
        "type": "object"
      },
      "GoogleCloudApigeeV1AdvancedApiOpsConfig": {
        "description": "Configuration for the Advanced API Ops add-on.",
        "properties": {
          "enabled": {
            "description": "Flag that specifies whether the Advanced API Ops add-on is enabled.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GoogleCloudApigeeV1AnalyticsConfig": {
        "description": "Configuration for the Analytics add-on.",
        "properties": {
          "enabled": {
            "description": "Whether the Analytics add-on is enabled.",
            "type": "boolean"
          },
          "expireTimeMillis": {
            "description": "Output only. Time at which the Analytics add-on expires in milliseconds since epoch. If unspecified, the add-on will never expire.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "state": {
            "description": "Output only. The state of the Analytics add-on.",
            "enum": [
              "ADDON_STATE_UNSPECIFIED",
              "ENABLING",
              "ENABLED",
              "DISABLING",
              "DISABLED"
            ],
            "readOnly": true,
            "type": "string"
          },
          "updateTime": {
            "description": "Output only. The latest update time.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudApigeeV1ApiSecurityConfig": {
        "description": "Configurations of the API Security add-on.",
        "properties": {
          "enabled": {
            "description": "Flag that specifies whether the API security add-on is enabled.",
            "type": "boolean"
          },
          "expiresAt": {
            "description": "Output only. Time at which the API Security add-on expires in in milliseconds since epoch. If unspecified, the add-on will never expire.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudApigeeV1ConnectorsPlatformConfig": {
        "description": "Configuration for the Connectors Platform add-on.",
        "properties": {
          "enabled": {
            "description": "Flag that specifies whether the Connectors Platform add-on is enabled.",
            "type": "boolean"
          },
          "expiresAt": {
            "description": "Output only. Time at which the Connectors Platform add-on expires in milliseconds since epoch. If unspecified, the add-on will never expire.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudApigeeV1IntegrationConfig": {
        "description": "Configuration for the Integration add-on.",
        "properties": {
          "enabled": {
            "description": "Flag that specifies whether the Integration add-on is enabled.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GoogleCloudApigeeV1MonetizationConfig": {
        "description": "Configuration for the Monetization add-on.",
        "properties": {
          "enabled": {
            "description": "Flag that specifies whether the Monetization add-on is enabled.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GoogleCloudApigeeV1Properties": {
        "description": "Message for compatibility with legacy Edge specification for Java Properties object in JSON.",
        "properties": {
          "property": {
            "description": "List of all properties in the object",
            "items": {
              "$ref": "#/$defs/GoogleCloudApigeeV1Property"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudApigeeV1Property": {
        "description": "A single property entry in the Properties message.",
        "properties": {
          "name": {
            "description": "The property key",
            "type": "string"
          },
          "value": {
            "description": "The property value",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://apigee.googleapis.com//v1/organizations{?parent,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "This resource represents a long-running operation that is the result of a network API call.",
        "**Key properties:**",
        {
          "$ul": [
            "**done**: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
            [
              "**error**: The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
              {
                "$ul": [
                  "**code**: The status code, which should be an enum value of google.rpc.Code.",
                  "**details**: A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                  "**message**: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                ]
              }
            ],
            "**metadata**: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
            "**name**: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
            "**response**: The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
