{
  "name": "apigee_organizations_environments_targetservers_create",
  "description": "Creates a TargetServer in the specified environment.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The parent environment name under which the TargetServer will be created. Must be of the form `organizations/{org}/environments/{env}`."
      },
      "name": {
        "type": "string",
        "description": "Optional. The ID to give the TargetServer. This will overwrite the value in TargetServer."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleCloudApigeeV1TargetServer"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "GoogleCloudApigeeV1TargetServer": {
        "description": "TargetServer configuration. TargetServers are used to decouple a proxy TargetEndpoint HTTPTargetConnections from concrete URLs for backend services.",
        "properties": {
          "description": {
            "description": "Optional. A human-readable description of this TargetServer.",
            "type": "string"
          },
          "host": {
            "description": "Required. The host name this target connects to. Value must be a valid hostname as described by RFC-1123.",
            "type": "string"
          },
          "isEnabled": {
            "description": "Optional. Enabling/disabling a TargetServer is useful when TargetServers are used in load balancing configurations, and one or more TargetServers need to taken out of rotation periodically. Defaults to true.",
            "type": "boolean"
          },
          "name": {
            "description": "Required. The resource id of this target server. Values must match the regular expression ",
            "type": "string"
          },
          "port": {
            "description": "Required. The port number this target connects to on the given host. Value must be between 1 and 65535, inclusive.",
            "format": "int32",
            "type": "integer"
          },
          "protocol": {
            "description": "Immutable. The protocol used by this TargetServer.",
            "enum": [
              "PROTOCOL_UNSPECIFIED",
              "HTTP",
              "HTTP2",
              "GRPC_TARGET",
              "GRPC",
              "EXTERNAL_CALLOUT"
            ],
            "type": "string"
          },
          "sSLInfo": {
            "$ref": "#/$defs/GoogleCloudApigeeV1TlsInfo"
          }
        },
        "type": "object"
      },
      "GoogleCloudApigeeV1TlsInfo": {
        "description": "TLS configuration information for virtual hosts and TargetServers.",
        "properties": {
          "ciphers": {
            "description": "The SSL/TLS cipher suites to be used. For programmable proxies, it must be one of the cipher suite names listed in: http://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html#ciphersuites. For configurable proxies, it must follow the configuration specified in: https://commondatastorage.googleapis.com/chromium-boringssl-docs/ssl.h.html#Cipher-suite-configuration. This setting has no effect for configurable proxies when negotiating TLS 1.3.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "clientAuthEnabled": {
            "description": "Optional. Enables two-way TLS.",
            "type": "boolean"
          },
          "commonName": {
            "$ref": "#/$defs/GoogleCloudApigeeV1TlsInfoCommonName"
          },
          "enabled": {
            "description": "Required. Enables TLS. If false, neither one-way nor two-way TLS will be enabled.",
            "type": "boolean"
          },
          "ignoreValidationErrors": {
            "description": "If true, Edge ignores TLS certificate errors. Valid when configuring TLS for target servers and target endpoints, and when configuring virtual hosts that use 2-way TLS. When used with a target endpoint/target server, if the backend system uses SNI and returns a cert with a subject Distinguished Name (DN) that does not match the hostname, there is no way to ignore the error and the connection fails.",
            "type": "boolean"
          },
          "keyAlias": {
            "description": "Required if `client_auth_enabled` is true. The resource ID for the alias containing the private key and cert.",
            "type": "string"
          },
          "keyStore": {
            "description": "Required if `client_auth_enabled` is true. The resource ID of the keystore.",
            "type": "string"
          },
          "protocols": {
            "description": "The TLS versioins to be used.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "trustStore": {
            "description": "The resource ID of the truststore.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudApigeeV1TlsInfoCommonName": {
        "properties": {
          "value": {
            "description": "The TLS Common Name string of the certificate.",
            "type": "string"
          },
          "wildcardMatch": {
            "description": "Indicates whether the cert should be matched against as a wildcard cert.",
            "type": "boolean"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://apigee.googleapis.com//v1/{parent}/targetservers{?name,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "TargetServer configuration. TargetServers are used to decouple a proxy TargetEndpoint HTTPTargetConnections from concrete URLs for backend services.",
        "**Key properties:**",
        {
          "$ul": [
            "**description**: Optional. A human-readable description of this TargetServer.",
            "**host**: Required. The host name this target connects to. Value must be a valid hostname as described by RFC-1123.",
            "**isEnabled**: Optional. Enabling/disabling a TargetServer is useful when TargetServers are used in load balancing configurations, and one or more TargetServers need to taken out of rotation periodically. Defaults to true.",
            "**name**: Required. The resource id of this target server. Values must match the regular expression ",
            "**port**: Required. The port number this target connects to on the given host. Value must be between 1 and 65535, inclusive.",
            "**protocol**: Immutable. The protocol used by this TargetServer.",
            [
              "**sSLInfo**: TLS configuration information for virtual hosts and TargetServers.",
              {
                "$ul": [
                  "**ciphers**: The SSL/TLS cipher suites to be used. For programmable proxies, it must be one of the cipher suite names listed in: http://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html#ciphersuites. For configurable proxies, it must follow the configuration specified in: https://commondatastorage.googleapis.com/chromium-boringssl-docs/ssl.h.html#Cipher-suite-configuration. This setting has no effect for configurable proxies when negotiating TLS 1.3.",
                  "**clientAuthEnabled**: Optional. Enables two-way TLS.",
                  [
                    "**commonName**",
                    {
                      "$ul": [
                        "**value**: The TLS Common Name string of the certificate.",
                        "**wildcardMatch**: Indicates whether the cert should be matched against as a wildcard cert."
                      ]
                    }
                  ],
                  "**enabled**: Required. Enables TLS. If false, neither one-way nor two-way TLS will be enabled.",
                  "**ignoreValidationErrors**: If true, Edge ignores TLS certificate errors. Valid when configuring TLS for target servers and target endpoints, and when configuring virtual hosts that use 2-way TLS. When used with a target endpoint/target server, if the backend system uses SNI and returns a cert with a subject Distinguished Name (DN) that does not match the hostname, there is no way to ignore the error and the connection fails.",
                  "**keyAlias**: Required if `client_auth_enabled` is true. The resource ID for the alias containing the private key and cert.",
                  "**keyStore**: Required if `client_auth_enabled` is true. The resource ID of the keystore.",
                  "**protocols**: The TLS versioins to be used.",
                  "**trustStore**: The resource ID of the truststore."
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
