{
  "name": "apigee_organizations_sharedflows_create",
  "description": "Uploads a ZIP-formatted shared flow configuration bundle to an organization. If the shared flow already exists, this creates a new revision of it. If the shared flow does not exist, this creates it. Once imported, the shared flow revision must be deployed before it can be accessed at runtime. The size limit of a shared flow bundle is 15 MB.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The name of the parent organization under which to create the shared flow. Must be of the form: `organizations/{organization_id}`"
      },
      "action": {
        "type": "string",
        "description": "Required. Must be set to either `import` or `validate`."
      },
      "name": {
        "type": "string",
        "description": "Required. The name to give the shared flow"
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleApiHttpBody"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "GoogleApiHttpBody": {
        "description": "Message that represents an arbitrary HTTP body. It should only be used for payload formats that can't be represented as JSON, such as raw binary or an HTML page. This message can be used both in streaming and non-streaming API methods in the request as well as the response. It can be used as a top-level request field, which is convenient if one wants to extract parameters from either the URL or HTTP template into the request fields and also want access to the raw HTTP body. Example: message GetResourceRequest { // A unique request id. string request_id = 1; // The raw HTTP body is bound to this field. google.api.HttpBody http_body = 2; } service ResourceService { rpc GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); } Example with streaming methods: service CaldavService { rpc GetCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); rpc UpdateCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); } Use of this type only changes how the request and response bodies are handled, all other features will continue to work unchanged.",
        "properties": {
          "contentType": {
            "description": "The HTTP Content-Type header value specifying the content type of the body.",
            "type": "string"
          },
          "data": {
            "description": "The HTTP request/response body as raw binary.",
            "format": "byte",
            "type": "string"
          },
          "extensions": {
            "description": "Application specific response metadata. Must be set in the first response for streaming APIs.",
            "items": {
              "additionalProperties": {
                "description": "Properties of the object. Contains field @type with type URL."
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://apigee.googleapis.com//v1/{parent}/sharedflows{?action,name,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The metadata describing a shared flow revision.",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**configurationVersion**: Version of the API proxy configuration schema. Currently, only 4.0 is supported.",
              {
                "$ul": [
                  "**majorVersion**: Major version of the API proxy configuration schema.",
                  "**minorVersion**: Minor version of the API proxy configuration schema."
                ]
              }
            ],
            "**contextInfo**: A textual description of the shared flow revision.",
            "**createdAt**: Time at which this shared flow revision was created, in milliseconds since epoch.",
            "**description**: Description of the shared flow revision.",
            "**displayName**: The human readable name of this shared flow.",
            "**entityMetaDataAsProperties**: A Key-Value map of metadata about this shared flow revision.",
            "**lastModifiedAt**: Time at which this shared flow revision was most recently modified, in milliseconds since epoch.",
            "**name**: The resource ID of the parent shared flow.",
            "**policies**: A list of policy names included in this shared flow revision.",
            [
              "**resourceFiles**: List of resource files.",
              {
                "$ul": [
                  "**resourceFile**: List of resource files."
                ]
              }
            ],
            "**resources**: A list of the resources included in this shared flow revision formatted as \"{type}://{name}\".",
            "**revision**: The resource ID of this revision.",
            "**sharedFlows**: A list of the shared flow names included in this shared flow revision.",
            "**type**: The string \"Application\""
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
