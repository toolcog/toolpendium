{
  "name": "apigee_organizations_environments_securityStats_queryTabularStats",
  "description": "Retrieve security statistics as tabular rows.",
  "parameters": {
    "type": "object",
    "properties": {
      "orgenv": {
        "type": "string",
        "description": "Required. Should be of the form organizations//environments/."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleCloudApigeeV1QueryTabularStatsRequest"
      }
    },
    "required": [
      "orgenv"
    ],
    "$defs": {
      "GoogleCloudApigeeV1QueryTabularStatsRequest": {
        "description": "Request payload representing the query to be run for fetching security statistics as rows.",
        "properties": {
          "dimensions": {
            "description": "Required. List of dimension names to group the aggregations by.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "filter": {
            "description": "Filter further on specific dimension values. Follows the same grammar as custom report's filter expressions. Example, apiproxy eq 'foobar'. https://cloud.google.com/apigee/docs/api-platform/analytics/analytics-reference#filters",
            "type": "string"
          },
          "metrics": {
            "description": "Required. List of metrics and their aggregations.",
            "items": {
              "$ref": "#/$defs/GoogleCloudApigeeV1MetricAggregation"
            },
            "type": "array"
          },
          "pageSize": {
            "description": "Page size represents the number of rows.",
            "format": "int32",
            "type": "integer"
          },
          "pageToken": {
            "description": "Identifies a sequence of rows.",
            "type": "string"
          },
          "timeRange": {
            "$ref": "#/$defs/GoogleTypeInterval"
          }
        },
        "type": "object"
      },
      "GoogleCloudApigeeV1MetricAggregation": {
        "description": "The optionally aggregated metric to query with its ordering.",
        "properties": {
          "aggregation": {
            "description": "Aggregation function associated with the metric.",
            "enum": [
              "AGGREGATION_FUNCTION_UNSPECIFIED",
              "AVG",
              "SUM",
              "MIN",
              "MAX",
              "COUNT_DISTINCT"
            ],
            "type": "string"
          },
          "name": {
            "description": "Name of the metric",
            "type": "string"
          },
          "order": {
            "description": "Ordering for this aggregation in the result. For time series this is ignored since the ordering of points depends only on the timestamp, not the values.",
            "enum": [
              "ORDER_UNSPECIFIED",
              "ASCENDING",
              "DESCENDING"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleTypeInterval": {
        "description": "Represents a time interval, encoded as a Timestamp start (inclusive) and a Timestamp end (exclusive). The start must be less than or equal to the end. When the start equals the end, the interval is empty (matches no time). When both start and end are unspecified, the interval matches any time.",
        "properties": {
          "endTime": {
            "description": "Optional. Exclusive end of the interval. If specified, a Timestamp matching this interval will have to be before the end.",
            "format": "google-datetime",
            "type": "string"
          },
          "startTime": {
            "description": "Optional. Inclusive start of the interval. If specified, a Timestamp matching this interval will have to be the same or after the start.",
            "format": "google-datetime",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://apigee.googleapis.com//v1/{orgenv}/securityStats:queryTabularStats{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Encapsulates two kinds of stats that are results of the dimensions and aggregations requested. - Tabular rows. - Time series data. Example of tabular rows, Represents security stats results as a row of flat values.",
        "**Key properties:**",
        {
          "$ul": [
            "**columns**: Column names corresponding to the same order as the inner values in the stats field.",
            "**nextPageToken**: Next page token.",
            "**values**: Resultant rows from the executed query."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
