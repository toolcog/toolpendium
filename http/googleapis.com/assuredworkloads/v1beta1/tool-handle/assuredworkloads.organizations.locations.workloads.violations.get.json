{
  "name": "assuredworkloads_organizations_locations_workloads_violations_get",
  "description": "Retrieves Assured Workload Violation based on ID.",
  "parameters": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "Required. The resource name of the Violation to fetch (ie. Violation.name). Format: organizations/{organization}/locations/{location}/workloads/{workload}/violations/{violation}"
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      }
    },
    "required": [
      "name"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://assuredworkloads.googleapis.com//v1beta1/{name}{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Workload monitoring Violation.",
        "**Key properties:**",
        {
          "$ul": [
            "**acknowledged**: A boolean that indicates if the violation is acknowledged",
            "**acknowledgementTime**: Optional. Timestamp when this violation was acknowledged first. Check exception_contexts to find the last time the violation was acknowledged when there are more than one violations. This field will be absent when acknowledged field is marked as false.",
            "**associatedOrgPolicyViolationId**: Optional. Output only. Violation Id of the org-policy violation due to which the resource violation is caused. Empty for org-policy violations.",
            "**auditLogLink**: Output only. Immutable. Audit Log Link for violated resource Format: https://console.cloud.google.com/logs/query;query={logName}{protoPayload.resourceName}{timeRange}{folder}",
            "**beginTime**: Output only. Time of the event which triggered the Violation.",
            "**category**: Output only. Category under which this violation is mapped. e.g. Location, Service Usage, Access, Encryption, etc.",
            "**description**: Output only. Description for the Violation. e.g. OrgPolicy gcp.resourceLocations has non compliant value.",
            "**exceptionAuditLogLink**: Output only. Immutable. Audit Log link to find business justification provided for violation exception. Format: https://console.cloud.google.com/logs/query;query={logName}{protoPayload.resourceName}{protoPayload.methodName}{timeRange}{organization}",
            "**exceptionContexts**: Output only. List of all the exception detail added for the violation.",
            "**name**: Output only. Immutable. Name of the Violation. Format: organizations/{organization}/locations/{location}/workloads/{workload_id}/violations/{violations_id}",
            "**nonCompliantOrgPolicy**: Output only. Immutable. Name of the OrgPolicy which was modified with non-compliant change and resulted this violation. Format: projects/{project_number}/policies/{constraint_name} folders/{folder_id}/policies/{constraint_name} organizations/{organization_id}/policies/{constraint_name}",
            "**orgPolicyConstraint**: Output only. Immutable. The org-policy-constraint that was incorrectly changed, which resulted in this violation.",
            "**parentProjectNumber**: Optional. Output only. Parent project number where resource is present. Empty for org-policy violations.",
            [
              "**remediation**: Represents remediation guidance to resolve compliance violation for AssuredWorkload",
              {
                "$ul": [
                  "**compliantValues**: Values that can resolve the violation For example: for list org policy violations, this will either be the list of allowed or denied values",
                  [
                    "**instructions**: Instructions to remediate violation",
                    {
                      "$ul": [
                        [
                          "**consoleInstructions**: Remediation instructions to resolve violation via cloud console",
                          {
                            "$ul": [
                              "**additionalLinks**: Additional urls for more information about steps",
                              "**consoleUris**: Link to console page where violations can be resolved",
                              "**steps**: Steps to resolve violation via cloud console"
                            ]
                          }
                        ],
                        [
                          "**gcloudInstructions**: Remediation instructions to resolve violation via gcloud cli",
                          {
                            "$ul": [
                              "**additionalLinks**: Additional urls for more information about steps",
                              "**gcloudCommands**: Gcloud command to resolve violation",
                              "**steps**: Steps to resolve violation via gcloud cli"
                            ]
                          }
                        ]
                      ]
                    }
                  ],
                  "**remediationType**: Output only. Reemediation type based on the type of org policy values violated"
                ]
              }
            ],
            "**resolveTime**: Output only. Time of the event which fixed the Violation. If the violation is ACTIVE this will be empty.",
            "**resourceName**: Optional. Output only. Name of the resource like //storage.googleapis.com/myprojectxyz-testbucket. Empty for org-policy violations.",
            "**resourceType**: Optional. Output only. Type of the resource like compute.googleapis.com/Disk, etc. Empty for org-policy violations.",
            "**state**: Output only. State of the violation",
            "**updateTime**: Output only. The last time when the Violation record was updated.",
            "**violationType**: Output only. Type of the violation"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
