{
  "name": "chromepolicy_customers_policies_resolve",
  "description": "Gets the resolved policy values for a list of policies that match a search query.",
  "parameters": {
    "type": "object",
    "properties": {
      "customer": {
        "type": "string",
        "description": "ID of the G Suite account or literal \"my_customer\" for the customer associated to the request."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleChromePolicyVersionsV1ResolveRequest"
      }
    },
    "required": [
      "customer"
    ],
    "$defs": {
      "GoogleChromePolicyVersionsV1ResolveRequest": {
        "description": "Request message for getting the resolved policy value for a specific target.",
        "properties": {
          "pageSize": {
            "description": "The maximum number of policies to return, defaults to 100 and has a maximum of 1000.",
            "format": "int32",
            "type": "integer"
          },
          "pageToken": {
            "description": "The page token used to retrieve a specific page of the request.",
            "type": "string"
          },
          "policySchemaFilter": {
            "description": "Required. The schema filter to apply to the resolve request. Specify a schema name to view a particular schema, for example: chrome.users.ShowLogoutButton Wildcards are supported, but only in the leaf portion of the schema name. Wildcards cannot be used in namespace directly. Please read https://developers.google.com/chrome/policy/guides/policy-schemas for details on schema namespaces. For example: Valid: \"chrome.users.*\", \"chrome.users.apps.*\", \"chrome.printers.*\" Invalid: \"*\", \"*.users\", \"chrome.*\", \"chrome.*.apps.*\"",
            "type": "string"
          },
          "policyTargetKey": {
            "$ref": "#/$defs/GoogleChromePolicyVersionsV1PolicyTargetKey"
          }
        },
        "type": "object"
      },
      "GoogleChromePolicyVersionsV1PolicyTargetKey": {
        "description": "The key used to identify the target on which the policy will be applied.",
        "properties": {
          "additionalTargetKeys": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Map containing the additional target key name and value pairs used to further identify the target of the policy.",
            "type": "object"
          },
          "targetResource": {
            "description": "The target resource on which this policy is applied. The following resources are supported: * Organizational Unit (\"orgunits/{orgunit_id}\") * Group (\"groups/{group_id}\")",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://chromepolicy.googleapis.com//v1/{customer}/policies:resolve{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Response message for getting the resolved policy value for a specific target.",
        "**Key properties:**",
        {
          "$ul": [
            "**nextPageToken**: The page token used to get the next set of resolved policies found by the request.",
            "**resolvedPolicies**: The list of resolved policies found by the resolve request."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
