{
  "name": "adexchangebuyer2_accounts_creatives_dealAssociations_add",
  "description": "Associate an existing deal with a creative.",
  "parameters": {
    "type": "object",
    "properties": {
      "accountId": {
        "type": "string",
        "description": "The account the creative belongs to."
      },
      "creativeId": {
        "type": "string",
        "description": "The ID of the creative associated with the deal."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/AddDealAssociationRequest"
      }
    },
    "required": [
      "accountId",
      "creativeId"
    ],
    "$defs": {
      "AddDealAssociationRequest": {
        "description": "A request for associating a deal and a creative.",
        "properties": {
          "association": {
            "$ref": "#/$defs/CreativeDealAssociation"
          }
        },
        "type": "object"
      },
      "CreativeDealAssociation": {
        "description": "The association between a creative and a deal.",
        "properties": {
          "accountId": {
            "description": "The account the creative belongs to.",
            "type": "string"
          },
          "creativeId": {
            "description": "The ID of the creative associated with the deal.",
            "type": "string"
          },
          "dealsId": {
            "description": "The externalDealId for the deal associated with the creative.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://adexchangebuyer.googleapis.com//v2beta1/accounts/{accountId}/creatives/{creativeId}/dealAssociations:add{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
