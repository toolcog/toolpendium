{
  "name": "adexchangebuyer2_accounts_proposals_create",
  "description": "Create the given proposal. Each created proposal and any deals it contains are assigned a unique ID by the server.",
  "parameters": {
    "type": "object",
    "properties": {
      "accountId": {
        "type": "string",
        "description": "Account ID of the buyer."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/Proposal"
      }
    },
    "required": [
      "accountId"
    ],
    "$defs": {
      "Proposal": {
        "description": "Represents a proposal in the Marketplace. A proposal is the unit of negotiation between a seller and a buyer and contains deals which are served. Note: You can't update, create, or otherwise modify Private Auction deals through the API. Fields are updatable unless noted otherwise.",
        "properties": {
          "billedBuyer": {
            "$ref": "#/$defs/Buyer"
          },
          "buyer": {
            "$ref": "#/$defs/Buyer"
          },
          "buyerContacts": {
            "description": "Contact information for the buyer.",
            "items": {
              "$ref": "#/$defs/ContactInformation"
            },
            "type": "array"
          },
          "buyerPrivateData": {
            "$ref": "#/$defs/PrivateData"
          },
          "deals": {
            "description": "The deals associated with this proposal. For Private Auction proposals (whose deals have NonGuaranteedAuctionTerms), there will only be one deal.",
            "items": {
              "$ref": "#/$defs/Deal"
            },
            "type": "array"
          },
          "displayName": {
            "description": "The name for the proposal.",
            "type": "string"
          },
          "isRenegotiating": {
            "description": "Output only. True if the proposal is being renegotiated.",
            "readOnly": true,
            "type": "boolean"
          },
          "isSetupComplete": {
            "deprecated": true,
            "description": "Output only. True, if the buyside inventory setup is complete for this proposal.",
            "readOnly": true,
            "type": "boolean"
          },
          "lastUpdaterOrCommentorRole": {
            "description": "Output only. The role of the last user that either updated the proposal or left a comment.",
            "enum": [
              "BUYER_SELLER_ROLE_UNSPECIFIED",
              "BUYER",
              "SELLER"
            ],
            "readOnly": true,
            "type": "string"
          },
          "notes": {
            "description": "Output only. The notes associated with this proposal.",
            "items": {
              "$ref": "#/$defs/Note"
            },
            "readOnly": true,
            "type": "array"
          },
          "originatorRole": {
            "description": "Output only. Indicates whether the buyer/seller created the proposal.",
            "enum": [
              "BUYER_SELLER_ROLE_UNSPECIFIED",
              "BUYER",
              "SELLER"
            ],
            "readOnly": true,
            "type": "string"
          },
          "privateAuctionId": {
            "description": "Output only. Private auction ID if this proposal is a private auction proposal.",
            "readOnly": true,
            "type": "string"
          },
          "proposalId": {
            "description": "Output only. The unique ID of the proposal.",
            "readOnly": true,
            "type": "string"
          },
          "proposalRevision": {
            "description": "Output only. The revision number for the proposal. Each update to the proposal or the deal causes the proposal revision number to auto-increment. The buyer keeps track of the last revision number they know of and pass it in when making an update. If the head revision number on the server has since incremented, then an ABORTED error is returned during the update operation to let the buyer know that a subsequent update was made.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "proposalState": {
            "description": "Output only. The current state of the proposal.",
            "enum": [
              "PROPOSAL_STATE_UNSPECIFIED",
              "PROPOSED",
              "BUYER_ACCEPTED",
              "SELLER_ACCEPTED",
              "CANCELED",
              "FINALIZED"
            ],
            "readOnly": true,
            "type": "string"
          },
          "seller": {
            "$ref": "#/$defs/Seller"
          },
          "sellerContacts": {
            "description": "Output only. Contact information for the seller.",
            "items": {
              "$ref": "#/$defs/ContactInformation"
            },
            "readOnly": true,
            "type": "array"
          },
          "termsAndConditions": {
            "description": "Output only. The terms and conditions set by the publisher for this proposal.",
            "readOnly": true,
            "type": "string"
          },
          "updateTime": {
            "description": "Output only. The time when the proposal was last revised.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "Buyer": {
        "description": "Represents a buyer of inventory. Each buyer is identified by a unique Authorized Buyers account ID.",
        "properties": {
          "accountId": {
            "description": "Authorized Buyers account ID of the buyer.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ContactInformation": {
        "description": "Contains information on how a buyer or seller can be reached.",
        "properties": {
          "email": {
            "description": "Email address for the contact.",
            "type": "string"
          },
          "name": {
            "description": "The name of the contact.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PrivateData": {
        "description": "Buyers are allowed to store certain types of private data in a proposal/deal.",
        "properties": {
          "referenceId": {
            "description": "A buyer or seller specified reference ID. This can be queried in the list operations (max-length: 1024 unicode code units).",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Deal": {
        "description": "A deal represents a segment of inventory for displaying ads on. A proposal can contain multiple deals. A deal contains the terms and targeting information that is used for serving.",
        "properties": {
          "availableEndTime": {
            "description": "Proposed flight end time of the deal. This will generally be stored in a granularity of a second. A value is not required for Private Auction deals or Preferred Deals.",
            "format": "google-datetime",
            "type": "string"
          },
          "availableStartTime": {
            "description": "Optional. Proposed flight start time of the deal. This will generally be stored in the granularity of one second since deal serving starts at seconds boundary. Any time specified with more granularity (for example, in milliseconds) will be truncated towards the start of time in seconds.",
            "format": "google-datetime",
            "type": "string"
          },
          "buyerPrivateData": {
            "$ref": "#/$defs/PrivateData"
          },
          "createProductId": {
            "description": "The product ID from which this deal was created. Note: This field may be set only when creating the resource. Modifying this field while updating the resource will result in an error.",
            "type": "string"
          },
          "createProductRevision": {
            "description": "Optional. Revision number of the product that the deal was created from. If present on create, and the server `product_revision` has advanced since the passed-in `create_product_revision`, an `ABORTED` error will be returned. Note: This field may be set only when creating the resource. Modifying this field while updating the resource will result in an error.",
            "format": "int64",
            "type": "string"
          },
          "createTime": {
            "description": "Output only. The time of the deal creation.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "creativePreApprovalPolicy": {
            "description": "Output only. Specifies the creative pre-approval policy.",
            "enum": [
              "CREATIVE_PRE_APPROVAL_POLICY_UNSPECIFIED",
              "SELLER_PRE_APPROVAL_REQUIRED",
              "SELLER_PRE_APPROVAL_NOT_REQUIRED"
            ],
            "readOnly": true,
            "type": "string"
          },
          "creativeRestrictions": {
            "$ref": "#/$defs/CreativeRestrictions"
          },
          "creativeSafeFrameCompatibility": {
            "description": "Output only. Specifies whether the creative is safeFrame compatible.",
            "enum": [
              "CREATIVE_SAFE_FRAME_COMPATIBILITY_UNSPECIFIED",
              "COMPATIBLE",
              "INCOMPATIBLE"
            ],
            "readOnly": true,
            "type": "string"
          },
          "dealId": {
            "description": "Output only. A unique deal ID for the deal (server-assigned).",
            "readOnly": true,
            "type": "string"
          },
          "dealServingMetadata": {
            "$ref": "#/$defs/DealServingMetadata"
          },
          "dealTerms": {
            "$ref": "#/$defs/DealTerms"
          },
          "deliveryControl": {
            "$ref": "#/$defs/DeliveryControl"
          },
          "description": {
            "description": "Description for the deal terms.",
            "type": "string"
          },
          "displayName": {
            "description": "The name of the deal.",
            "type": "string"
          },
          "externalDealId": {
            "description": "Output only. The external deal ID assigned to this deal once the deal is finalized. This is the deal ID that shows up in serving/reporting etc.",
            "readOnly": true,
            "type": "string"
          },
          "isSetupComplete": {
            "description": "Output only. True, if the buyside inventory setup is complete for this deal.",
            "readOnly": true,
            "type": "boolean"
          },
          "programmaticCreativeSource": {
            "description": "Output only. Specifies the creative source for programmatic deals. PUBLISHER means creative is provided by seller and ADVERTISER means creative is provided by buyer.",
            "enum": [
              "PROGRAMMATIC_CREATIVE_SOURCE_UNSPECIFIED",
              "ADVERTISER",
              "PUBLISHER"
            ],
            "readOnly": true,
            "type": "string"
          },
          "proposalId": {
            "description": "Output only. ID of the proposal that this deal is part of.",
            "readOnly": true,
            "type": "string"
          },
          "sellerContacts": {
            "description": "Output only. Seller contact information for the deal.",
            "items": {
              "$ref": "#/$defs/ContactInformation"
            },
            "readOnly": true,
            "type": "array"
          },
          "syndicationProduct": {
            "description": "The syndication product associated with the deal. Note: This field may be set only when creating the resource. Modifying this field while updating the resource will result in an error.",
            "enum": [
              "SYNDICATION_PRODUCT_UNSPECIFIED",
              "CONTENT",
              "MOBILE",
              "VIDEO",
              "GAMES"
            ],
            "type": "string"
          },
          "targeting": {
            "$ref": "#/$defs/MarketplaceTargeting"
          },
          "targetingCriterion": {
            "description": "The shared targeting visible to buyers and sellers. Each shared targeting entity is AND'd together.",
            "items": {
              "$ref": "#/$defs/TargetingCriteria"
            },
            "type": "array"
          },
          "updateTime": {
            "description": "Output only. The time when the deal was last updated.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "webPropertyCode": {
            "description": "The web property code for the seller copied over from the product.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreativeRestrictions": {
        "description": "Represents creative restrictions associated to Programmatic Guaranteed/ Preferred Deal in Ad Manager. This doesn't apply to Private Auction and AdX Preferred Deals.",
        "properties": {
          "creativeFormat": {
            "description": "The format of the environment that the creatives will be displayed in.",
            "enum": [
              "CREATIVE_FORMAT_UNSPECIFIED",
              "DISPLAY",
              "VIDEO"
            ],
            "type": "string"
          },
          "creativeSpecifications": {
            "items": {
              "$ref": "#/$defs/CreativeSpecification"
            },
            "type": "array"
          },
          "skippableAdType": {
            "description": "Skippable video ads allow viewers to skip ads after 5 seconds.",
            "enum": [
              "SKIPPABLE_AD_TYPE_UNSPECIFIED",
              "SKIPPABLE",
              "INSTREAM_SELECT",
              "NOT_SKIPPABLE"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreativeSpecification": {
        "description": "Represents information for a creative that is associated with a Programmatic Guaranteed/Preferred Deal in Ad Manager.",
        "properties": {
          "creativeCompanionSizes": {
            "description": "Companion sizes may be filled in only when this is a video creative.",
            "items": {
              "$ref": "#/$defs/AdSize"
            },
            "type": "array"
          },
          "creativeSize": {
            "$ref": "#/$defs/AdSize"
          }
        },
        "type": "object"
      },
      "AdSize": {
        "description": "Represents size of a single ad slot, or a creative.",
        "properties": {
          "height": {
            "description": "The height of the ad slot in pixels. This field will be present only when size type is `PIXEL`.",
            "format": "int64",
            "type": "string"
          },
          "sizeType": {
            "description": "The size type of the ad slot.",
            "enum": [
              "SIZE_TYPE_UNSPECIFIED",
              "PIXEL",
              "INTERSTITIAL",
              "NATIVE",
              "FLUID"
            ],
            "type": "string"
          },
          "width": {
            "description": "The width of the ad slot in pixels. This field will be present only when size type is `PIXEL`.",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DealServingMetadata": {
        "description": "Message captures metadata about the serving status of a deal.",
        "properties": {
          "dealPauseStatus": {
            "$ref": "#/$defs/DealPauseStatus"
          }
        },
        "type": "object"
      },
      "DealPauseStatus": {
        "description": "Tracks which parties (if any) have paused a deal. The deal is considered paused if either hasBuyerPaused or hasSellPaused is true.",
        "properties": {
          "buyerPauseReason": {
            "description": "The buyer's reason for pausing, if the buyer paused the deal.",
            "type": "string"
          },
          "firstPausedBy": {
            "description": "The role of the person who first paused this deal.",
            "enum": [
              "BUYER_SELLER_ROLE_UNSPECIFIED",
              "BUYER",
              "SELLER"
            ],
            "type": "string"
          },
          "hasBuyerPaused": {
            "description": "True, if the buyer has paused the deal unilaterally.",
            "type": "boolean"
          },
          "hasSellerPaused": {
            "description": "True, if the seller has paused the deal unilaterally.",
            "type": "boolean"
          },
          "sellerPauseReason": {
            "description": "The seller's reason for pausing, if the seller paused the deal.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DealTerms": {
        "description": "The deal terms specify the details of a Product/deal. They specify things like price per buyer, the type of pricing model (for example, fixed price, auction) and expected impressions from the publisher.",
        "properties": {
          "brandingType": {
            "description": "Visibility of the URL in bid requests. (default: BRANDED)",
            "enum": [
              "BRANDING_TYPE_UNSPECIFIED",
              "BRANDED",
              "SEMI_TRANSPARENT"
            ],
            "type": "string"
          },
          "description": {
            "description": "Publisher provided description for the terms.",
            "type": "string"
          },
          "estimatedGrossSpend": {
            "$ref": "#/$defs/Price"
          },
          "estimatedImpressionsPerDay": {
            "description": "Non-binding estimate of the impressions served per day. Can be set by buyer or seller.",
            "format": "int64",
            "type": "string"
          },
          "guaranteedFixedPriceTerms": {
            "$ref": "#/$defs/GuaranteedFixedPriceTerms"
          },
          "nonGuaranteedAuctionTerms": {
            "$ref": "#/$defs/NonGuaranteedAuctionTerms"
          },
          "nonGuaranteedFixedPriceTerms": {
            "$ref": "#/$defs/NonGuaranteedFixedPriceTerms"
          },
          "sellerTimeZone": {
            "description": "The time zone name. For deals with Cost Per Day billing, defines the time zone used to mark the boundaries of a day. It should be an IANA TZ name, such as \"America/Los_Angeles\". For more information, see https://en.wikipedia.org/wiki/List_of_tz_database_time_zones.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Price": {
        "description": "Represents a price and a pricing type for a product / deal.",
        "properties": {
          "amount": {
            "$ref": "#/$defs/Money"
          },
          "pricingType": {
            "description": "The pricing type for the deal/product. (default: CPM)",
            "enum": [
              "PRICING_TYPE_UNSPECIFIED",
              "COST_PER_MILLE",
              "COST_PER_DAY"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "Money": {
        "description": "Represents an amount of money with its currency type.",
        "properties": {
          "currencyCode": {
            "description": "The three-letter currency code defined in ISO 4217.",
            "type": "string"
          },
          "nanos": {
            "description": "Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.",
            "format": "int32",
            "type": "integer"
          },
          "units": {
            "description": "The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar.",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GuaranteedFixedPriceTerms": {
        "description": "Terms for Programmatic Guaranteed Deals.",
        "properties": {
          "fixedPrices": {
            "description": "Fixed price for the specified buyer.",
            "items": {
              "$ref": "#/$defs/PricePerBuyer"
            },
            "type": "array"
          },
          "guaranteedImpressions": {
            "description": "Guaranteed impressions as a percentage. This is the percentage of guaranteed looks that the buyer is guaranteeing to buy.",
            "format": "int64",
            "type": "string"
          },
          "guaranteedLooks": {
            "description": "Count of guaranteed looks. Required for deal, optional for product. For CPD deals, buyer changes to guaranteed_looks will be ignored.",
            "format": "int64",
            "type": "string"
          },
          "impressionCap": {
            "description": "The lifetime impression cap for CPM sponsorship deals. The deal will stop serving when the cap is reached.",
            "format": "int64",
            "type": "string"
          },
          "minimumDailyLooks": {
            "description": "Daily minimum looks for CPD deal types. For CPD deals, buyer should negotiate on this field instead of guaranteed_looks.",
            "format": "int64",
            "type": "string"
          },
          "percentShareOfVoice": {
            "description": "For sponsorship deals, this is the percentage of the seller's eligible impressions that the deal will serve until the cap is reached.",
            "format": "int64",
            "type": "string"
          },
          "reservationType": {
            "description": "The reservation type for a Programmatic Guaranteed deal. This indicates whether the number of impressions is fixed, or a percent of available impressions. If not specified, the default reservation type is STANDARD.",
            "enum": [
              "RESERVATION_TYPE_UNSPECIFIED",
              "STANDARD",
              "SPONSORSHIP"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "PricePerBuyer": {
        "description": "Used to specify pricing rules for buyers/advertisers. Each PricePerBuyer in a product can become 0 or 1 deals. To check if there is a PricePerBuyer for a particular buyer or buyer/advertiser pair, we look for the most specific matching rule - we first look for a rule matching the buyer and advertiser, next a rule with the buyer but an empty advertiser list, and otherwise look for a matching rule where no buyer is set.",
        "properties": {
          "advertiserIds": {
            "description": "The list of advertisers for this price when associated with this buyer. If empty, all advertisers with this buyer pay this price.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "buyer": {
            "$ref": "#/$defs/Buyer"
          },
          "price": {
            "$ref": "#/$defs/Price"
          }
        },
        "type": "object"
      },
      "NonGuaranteedAuctionTerms": {
        "description": "Terms for Private Auctions. Note that Private Auctions can be created only by the seller, but they can be returned in a get or list request.",
        "properties": {
          "autoOptimizePrivateAuction": {
            "description": "True if open auction buyers are allowed to compete with invited buyers in this private auction.",
            "type": "boolean"
          },
          "reservePricesPerBuyer": {
            "description": "Reserve price for the specified buyer.",
            "items": {
              "$ref": "#/$defs/PricePerBuyer"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "NonGuaranteedFixedPriceTerms": {
        "description": "Terms for Preferred Deals.",
        "properties": {
          "fixedPrices": {
            "description": "Fixed price for the specified buyer.",
            "items": {
              "$ref": "#/$defs/PricePerBuyer"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DeliveryControl": {
        "description": "Message contains details about how the deals will be paced.",
        "properties": {
          "creativeBlockingLevel": {
            "description": "Output only. Specified the creative blocking levels to be applied.",
            "enum": [
              "CREATIVE_BLOCKING_LEVEL_UNSPECIFIED",
              "PUBLISHER_BLOCKING_RULES",
              "ADX_POLICY_BLOCKING_ONLY"
            ],
            "readOnly": true,
            "type": "string"
          },
          "deliveryRateType": {
            "description": "Output only. Specifies how the impression delivery will be paced.",
            "enum": [
              "DELIVERY_RATE_TYPE_UNSPECIFIED",
              "EVENLY",
              "FRONT_LOADED",
              "AS_FAST_AS_POSSIBLE"
            ],
            "readOnly": true,
            "type": "string"
          },
          "frequencyCaps": {
            "description": "Output only. Specifies any frequency caps.",
            "items": {
              "$ref": "#/$defs/FrequencyCap"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "FrequencyCap": {
        "description": "Frequency cap.",
        "properties": {
          "maxImpressions": {
            "description": "The maximum number of impressions that can be served to a user within the specified time period.",
            "format": "int32",
            "type": "integer"
          },
          "numTimeUnits": {
            "description": "The amount of time, in the units specified by time_unit_type. Defines the amount of time over which impressions per user are counted and capped.",
            "format": "int32",
            "type": "integer"
          },
          "timeUnitType": {
            "description": "The time unit. Along with num_time_units defines the amount of time over which impressions per user are counted and capped.",
            "enum": [
              "TIME_UNIT_TYPE_UNSPECIFIED",
              "MINUTE",
              "HOUR",
              "DAY",
              "WEEK",
              "MONTH",
              "LIFETIME",
              "POD",
              "STREAM"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "MarketplaceTargeting": {
        "description": "Targeting represents different criteria that can be used by advertisers to target ad inventory. For example, they can choose to target ad requests only if the user is in the US. Multiple types of targeting are always applied as a logical AND, unless noted otherwise.",
        "properties": {
          "geoTargeting": {
            "$ref": "#/$defs/CriteriaTargeting"
          },
          "inventorySizeTargeting": {
            "$ref": "#/$defs/InventorySizeTargeting"
          },
          "placementTargeting": {
            "$ref": "#/$defs/PlacementTargeting"
          },
          "technologyTargeting": {
            "$ref": "#/$defs/TechnologyTargeting"
          },
          "videoTargeting": {
            "$ref": "#/$defs/VideoTargeting"
          }
        },
        "type": "object"
      },
      "CriteriaTargeting": {
        "description": "Generic targeting used for targeting dimensions that contains a list of included and excluded numeric IDs.",
        "properties": {
          "excludedCriteriaIds": {
            "description": "A list of numeric IDs to be excluded.",
            "items": {
              "format": "int64",
              "type": "string"
            },
            "type": "array"
          },
          "targetedCriteriaIds": {
            "description": "A list of numeric IDs to be included.",
            "items": {
              "format": "int64",
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "InventorySizeTargeting": {
        "description": "Represents the size of an ad unit that can be targeted on an ad request. It only applies to Private Auction, AdX Preferred Deals and Auction Packages. This targeting does not apply to Programmatic Guaranteed and Preferred Deals in Ad Manager.",
        "properties": {
          "excludedInventorySizes": {
            "description": "A list of inventory sizes to be excluded.",
            "items": {
              "$ref": "#/$defs/AdSize"
            },
            "type": "array"
          },
          "targetedInventorySizes": {
            "description": "A list of inventory sizes to be included.",
            "items": {
              "$ref": "#/$defs/AdSize"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PlacementTargeting": {
        "description": "Represents targeting about where the ads can appear, for example, certain sites or mobile applications. Different placement targeting types will be logically OR'ed.",
        "properties": {
          "mobileApplicationTargeting": {
            "$ref": "#/$defs/MobileApplicationTargeting"
          },
          "urlTargeting": {
            "$ref": "#/$defs/UrlTargeting"
          }
        },
        "type": "object"
      },
      "MobileApplicationTargeting": {
        "description": "Mobile application targeting settings.",
        "properties": {
          "firstPartyTargeting": {
            "$ref": "#/$defs/FirstPartyMobileApplicationTargeting"
          }
        },
        "type": "object"
      },
      "FirstPartyMobileApplicationTargeting": {
        "description": "Represents a list of targeted and excluded mobile application IDs that publishers own. Mobile application IDs are from App Store and Google Play Store. Android App ID, for example, com.google.android.apps.maps, can be found in Google Play Store URL. iOS App ID (which is a number) can be found at the end of iTunes store URL. First party mobile applications is either included or excluded.",
        "properties": {
          "excludedAppIds": {
            "description": "A list of application IDs to be excluded.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "targetedAppIds": {
            "description": "A list of application IDs to be included.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "UrlTargeting": {
        "description": "Represents a list of targeted and excluded URLs (for example, google.com). For Private Auction and AdX Preferred Deals, URLs are either included or excluded. For Programmatic Guaranteed and Preferred Deals, this doesn't apply.",
        "properties": {
          "excludedUrls": {
            "description": "A list of URLs to be excluded.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "targetedUrls": {
            "description": "A list of URLs to be included.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "TechnologyTargeting": {
        "description": "Represents targeting about various types of technology.",
        "properties": {
          "deviceCapabilityTargeting": {
            "$ref": "#/$defs/CriteriaTargeting"
          },
          "deviceCategoryTargeting": {
            "$ref": "#/$defs/CriteriaTargeting"
          },
          "operatingSystemTargeting": {
            "$ref": "#/$defs/OperatingSystemTargeting"
          }
        },
        "type": "object"
      },
      "OperatingSystemTargeting": {
        "description": "Represents targeting information for operating systems.",
        "properties": {
          "operatingSystemCriteria": {
            "$ref": "#/$defs/CriteriaTargeting"
          },
          "operatingSystemVersionCriteria": {
            "$ref": "#/$defs/CriteriaTargeting"
          }
        },
        "type": "object"
      },
      "VideoTargeting": {
        "description": "Represents targeting information about video.",
        "properties": {
          "excludedPositionTypes": {
            "description": "A list of video positions to be excluded. Position types can either be included or excluded (XOR).",
            "items": {
              "enum": [
                "POSITION_TYPE_UNSPECIFIED",
                "PREROLL",
                "MIDROLL",
                "POSTROLL"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "targetedPositionTypes": {
            "description": "A list of video positions to be included. When the included list is present, the excluded list must be empty. When the excluded list is present, the included list must be empty.",
            "items": {
              "enum": [
                "POSITION_TYPE_UNSPECIFIED",
                "PREROLL",
                "MIDROLL",
                "POSTROLL"
              ],
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "TargetingCriteria": {
        "description": "Advertisers can target different attributes of an ad slot. For example, they can choose to show ads only if the user is in the U.S. Such targeting criteria can be specified as part of Shared Targeting.",
        "properties": {
          "exclusions": {
            "description": "The list of values to exclude from targeting. Each value is AND'd together.",
            "items": {
              "$ref": "#/$defs/TargetingValue"
            },
            "type": "array"
          },
          "inclusions": {
            "description": "The list of value to include as part of the targeting. Each value is OR'd together.",
            "items": {
              "$ref": "#/$defs/TargetingValue"
            },
            "type": "array"
          },
          "key": {
            "description": "The key representing the shared targeting criterion. Targeting criteria defined by Google ad servers will begin with GOOG_. Third parties may define their own keys. A list of permissible keys along with the acceptable values will be provided as part of the external documentation.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "TargetingValue": {
        "description": "A polymorphic targeting value used as part of Shared Targeting.",
        "properties": {
          "creativeSizeValue": {
            "$ref": "#/$defs/CreativeSize"
          },
          "dayPartTargetingValue": {
            "$ref": "#/$defs/DayPartTargeting"
          },
          "longValue": {
            "description": "The long value to include/exclude.",
            "format": "int64",
            "type": "string"
          },
          "stringValue": {
            "description": "The string value to include/exclude.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreativeSize": {
        "description": "Specifies the size of the creative.",
        "properties": {
          "allowedFormats": {
            "description": "What formats are allowed by the publisher. If this repeated field is empty then all formats are allowed. For example, if this field contains AllowedFormatType.AUDIO then the publisher only allows an audio ad (without any video).",
            "items": {
              "enum": [
                "UNKNOWN",
                "AUDIO"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "companionSizes": {
            "description": "For video creatives specifies the sizes of companion ads (if present). Companion sizes may be filled in only when creative_size_type = VIDEO",
            "items": {
              "$ref": "#/$defs/Size"
            },
            "type": "array"
          },
          "creativeSizeType": {
            "description": "The creative size type.",
            "enum": [
              "CREATIVE_SIZE_TYPE_UNSPECIFIED",
              "REGULAR",
              "INTERSTITIAL",
              "VIDEO",
              "NATIVE"
            ],
            "type": "string"
          },
          "nativeTemplate": {
            "description": "Output only. The native template for this creative. It will have a value only if creative_size_type = CreativeSizeType.NATIVE.",
            "enum": [
              "UNKNOWN_NATIVE_TEMPLATE",
              "NATIVE_CONTENT_AD",
              "NATIVE_APP_INSTALL_AD",
              "NATIVE_VIDEO_CONTENT_AD",
              "NATIVE_VIDEO_APP_INSTALL_AD"
            ],
            "type": "string"
          },
          "size": {
            "$ref": "#/$defs/Size"
          },
          "skippableAdType": {
            "description": "The type of skippable ad for this creative. It will have a value only if creative_size_type = CreativeSizeType.VIDEO.",
            "enum": [
              "SKIPPABLE_AD_TYPE_UNSPECIFIED",
              "GENERIC",
              "INSTREAM_SELECT",
              "NOT_SKIPPABLE"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "Size": {
        "description": "Message depicting the size of the creative. The units of width and height depend on the type of the targeting.",
        "properties": {
          "height": {
            "description": "The height of the creative.",
            "format": "int32",
            "type": "integer"
          },
          "width": {
            "description": "The width of the creative",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "DayPartTargeting": {
        "description": "Specifies the day part targeting criteria.",
        "properties": {
          "dayParts": {
            "description": "A list of day part targeting criterion.",
            "items": {
              "$ref": "#/$defs/DayPart"
            },
            "type": "array"
          },
          "timeZoneType": {
            "description": "The timezone to use for interpreting the day part targeting.",
            "enum": [
              "TIME_ZONE_SOURCE_UNSPECIFIED",
              "PUBLISHER",
              "USER"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "DayPart": {
        "description": "Daypart targeting message that specifies if the ad can be shown only during certain parts of a day/week.",
        "properties": {
          "dayOfWeek": {
            "description": "The day of the week to target. If unspecified, applicable to all days.",
            "enum": [
              "DAY_OF_WEEK_UNSPECIFIED",
              "MONDAY",
              "TUESDAY",
              "WEDNESDAY",
              "THURSDAY",
              "FRIDAY",
              "SATURDAY",
              "SUNDAY"
            ],
            "type": "string"
          },
          "endTime": {
            "$ref": "#/$defs/TimeOfDay"
          },
          "startTime": {
            "$ref": "#/$defs/TimeOfDay"
          }
        },
        "type": "object"
      },
      "TimeOfDay": {
        "description": "Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.",
        "properties": {
          "hours": {
            "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \"24:00:00\" for scenarios like business closing time.",
            "format": "int32",
            "type": "integer"
          },
          "minutes": {
            "description": "Minutes of hour of day. Must be from 0 to 59.",
            "format": "int32",
            "type": "integer"
          },
          "nanos": {
            "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.",
            "format": "int32",
            "type": "integer"
          },
          "seconds": {
            "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Note": {
        "description": "A proposal may be associated to several notes.",
        "properties": {
          "createTime": {
            "description": "Output only. The timestamp for when this note was created.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "creatorRole": {
            "description": "Output only. The role of the person (buyer/seller) creating the note.",
            "enum": [
              "BUYER_SELLER_ROLE_UNSPECIFIED",
              "BUYER",
              "SELLER"
            ],
            "readOnly": true,
            "type": "string"
          },
          "note": {
            "description": "The actual note to attach. (max-length: 1024 unicode code units) Note: This field may be set only when creating the resource. Modifying this field while updating the resource will result in an error.",
            "type": "string"
          },
          "noteId": {
            "description": "Output only. The unique ID for the note.",
            "readOnly": true,
            "type": "string"
          },
          "proposalRevision": {
            "description": "Output only. The revision number of the proposal when the note is created.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "Seller": {
        "description": "Represents a seller of inventory. Each seller is identified by a unique Ad Manager account ID.",
        "properties": {
          "accountId": {
            "description": "The unique ID for the seller. The seller fills in this field. The seller account ID is then available to buyer in the product.",
            "type": "string"
          },
          "subAccountId": {
            "description": "Output only. Ad manager network code for the seller.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://adexchangebuyer.googleapis.com//v2beta1/accounts/{accountId}/proposals{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Represents a proposal in the Marketplace. A proposal is the unit of negotiation between a seller and a buyer and contains deals which are served. Note: You can't update, create, or otherwise modify Private Auction deals through the API. Fields are updatable unless noted otherwise.",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**billedBuyer**: Represents a buyer of inventory. Each buyer is identified by a unique Authorized Buyers account ID.",
              {
                "$ul": [
                  "**accountId**: Authorized Buyers account ID of the buyer."
                ]
              }
            ],
            [
              "**buyer**: Represents a buyer of inventory. Each buyer is identified by a unique Authorized Buyers account ID.",
              {
                "$ul": [
                  "**accountId**: Authorized Buyers account ID of the buyer."
                ]
              }
            ],
            "**buyerContacts**: Contact information for the buyer.",
            [
              "**buyerPrivateData**: Buyers are allowed to store certain types of private data in a proposal/deal.",
              {
                "$ul": [
                  "**referenceId**: A buyer or seller specified reference ID. This can be queried in the list operations (max-length: 1024 unicode code units)."
                ]
              }
            ],
            "**deals**: The deals associated with this proposal. For Private Auction proposals (whose deals have NonGuaranteedAuctionTerms), there will only be one deal.",
            "**displayName**: The name for the proposal.",
            "**isRenegotiating**: Output only. True if the proposal is being renegotiated.",
            "**isSetupComplete**: Output only. True, if the buyside inventory setup is complete for this proposal.",
            "**lastUpdaterOrCommentorRole**: Output only. The role of the last user that either updated the proposal or left a comment.",
            "**notes**: Output only. The notes associated with this proposal.",
            "**originatorRole**: Output only. Indicates whether the buyer/seller created the proposal.",
            "**privateAuctionId**: Output only. Private auction ID if this proposal is a private auction proposal.",
            "**proposalId**: Output only. The unique ID of the proposal.",
            "**proposalRevision**: Output only. The revision number for the proposal. Each update to the proposal or the deal causes the proposal revision number to auto-increment. The buyer keeps track of the last revision number they know of and pass it in when making an update. If the head revision number on the server has since incremented, then an ABORTED error is returned during the update operation to let the buyer know that a subsequent update was made.",
            "**proposalState**: Output only. The current state of the proposal.",
            [
              "**seller**: Represents a seller of inventory. Each seller is identified by a unique Ad Manager account ID.",
              {
                "$ul": [
                  "**accountId**: The unique ID for the seller. The seller fills in this field. The seller account ID is then available to buyer in the product.",
                  "**subAccountId**: Output only. Ad manager network code for the seller."
                ]
              }
            ],
            "**sellerContacts**: Output only. Contact information for the seller.",
            "**termsAndConditions**: Output only. The terms and conditions set by the publisher for this proposal.",
            "**updateTime**: Output only. The time when the proposal was last revised."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
