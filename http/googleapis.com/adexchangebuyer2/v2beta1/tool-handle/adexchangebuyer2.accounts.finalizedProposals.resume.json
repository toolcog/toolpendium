{
  "name": "adexchangebuyer2_accounts_finalizedProposals_resume",
  "description": "Update given deals to resume serving. This method will set the `DealServingMetadata.DealPauseStatus.has_buyer_paused` bit to false for all listed deals in the request. Currently, this method only applies to PG and PD deals. For PA deals, call accounts.proposals.resume endpoint. It is a no-op to resume running deals or deals paused by the other party. It is an error to call ResumeProposalDeals for deals which are not part of the proposal of proposal_id or which are not finalized or renegotiating.",
  "parameters": {
    "type": "object",
    "properties": {
      "accountId": {
        "type": "string",
        "description": "Account ID of the buyer."
      },
      "proposalId": {
        "type": "string",
        "description": "The proposal_id of the proposal containing the deals."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/ResumeProposalDealsRequest"
      }
    },
    "required": [
      "accountId",
      "proposalId"
    ],
    "$defs": {
      "ResumeProposalDealsRequest": {
        "description": "Request message to resume (unpause) serving for already-finalized deals.",
        "properties": {
          "externalDealIds": {
            "description": "The external_deal_id's of the deals to resume. If empty, all the deals in the proposal will be resumed.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://adexchangebuyer.googleapis.com//v2beta1/accounts/{accountId}/finalizedProposals/{proposalId}:resume{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Represents a proposal in the Marketplace. A proposal is the unit of negotiation between a seller and a buyer and contains deals which are served. Note: You can't update, create, or otherwise modify Private Auction deals through the API. Fields are updatable unless noted otherwise.",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**billedBuyer**: Represents a buyer of inventory. Each buyer is identified by a unique Authorized Buyers account ID.",
              {
                "$ul": [
                  "**accountId**: Authorized Buyers account ID of the buyer."
                ]
              }
            ],
            [
              "**buyer**: Represents a buyer of inventory. Each buyer is identified by a unique Authorized Buyers account ID.",
              {
                "$ul": [
                  "**accountId**: Authorized Buyers account ID of the buyer."
                ]
              }
            ],
            "**buyerContacts**: Contact information for the buyer.",
            [
              "**buyerPrivateData**: Buyers are allowed to store certain types of private data in a proposal/deal.",
              {
                "$ul": [
                  "**referenceId**: A buyer or seller specified reference ID. This can be queried in the list operations (max-length: 1024 unicode code units)."
                ]
              }
            ],
            "**deals**: The deals associated with this proposal. For Private Auction proposals (whose deals have NonGuaranteedAuctionTerms), there will only be one deal.",
            "**displayName**: The name for the proposal.",
            "**isRenegotiating**: Output only. True if the proposal is being renegotiated.",
            "**isSetupComplete**: Output only. True, if the buyside inventory setup is complete for this proposal.",
            "**lastUpdaterOrCommentorRole**: Output only. The role of the last user that either updated the proposal or left a comment.",
            "**notes**: Output only. The notes associated with this proposal.",
            "**originatorRole**: Output only. Indicates whether the buyer/seller created the proposal.",
            "**privateAuctionId**: Output only. Private auction ID if this proposal is a private auction proposal.",
            "**proposalId**: Output only. The unique ID of the proposal.",
            "**proposalRevision**: Output only. The revision number for the proposal. Each update to the proposal or the deal causes the proposal revision number to auto-increment. The buyer keeps track of the last revision number they know of and pass it in when making an update. If the head revision number on the server has since incremented, then an ABORTED error is returned during the update operation to let the buyer know that a subsequent update was made.",
            "**proposalState**: Output only. The current state of the proposal.",
            [
              "**seller**: Represents a seller of inventory. Each seller is identified by a unique Ad Manager account ID.",
              {
                "$ul": [
                  "**accountId**: The unique ID for the seller. The seller fills in this field. The seller account ID is then available to buyer in the product.",
                  "**subAccountId**: Output only. Ad manager network code for the seller."
                ]
              }
            ],
            "**sellerContacts**: Output only. Contact information for the seller.",
            "**termsAndConditions**: Output only. The terms and conditions set by the publisher for this proposal.",
            "**updateTime**: Output only. The time when the proposal was last revised."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
