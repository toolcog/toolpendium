{
  "name": "adexchangebuyer2_accounts_products_get",
  "description": "Gets the requested product by ID.",
  "parameters": {
    "type": "object",
    "properties": {
      "accountId": {
        "type": "string",
        "description": "Account ID of the buyer."
      },
      "productId": {
        "type": "string",
        "description": "The ID for the product to get the head revision for."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      }
    },
    "required": [
      "accountId",
      "productId"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://adexchangebuyer.googleapis.com//v2beta1/accounts/{accountId}/products/{productId}{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A product is a segment of inventory that a seller wants to sell. It is associated with certain terms and targeting information which helps the buyer know more about the inventory.",
        "**Key properties:**",
        {
          "$ul": [
            "**availableEndTime**: The proposed end time for the deal. The field will be truncated to the order of seconds during serving.",
            "**availableStartTime**: Inventory availability dates. The start time will be truncated to seconds during serving. Thus, a field specified as 3:23:34.456 (HH:mm:ss.SSS) will be truncated to 3:23:34 when serving.",
            "**createTime**: Creation time.",
            "**creatorContacts**: Optional contact information for the creator of this product.",
            "**displayName**: The display name for this product as set by the seller.",
            "**hasCreatorSignedOff**: If the creator has already signed off on the product, then the buyer can finalize the deal by accepting the product as is. When copying to a proposal, if any of the terms are changed, then auto_finalize is automatically set to false.",
            "**productId**: The unique ID for the product.",
            "**productRevision**: The revision number of the product (auto-assigned by Marketplace).",
            "**publisherProfileId**: An ID which can be used by the Publisher Profile API to get more information about the seller that created this product.",
            [
              "**seller**: Represents a seller of inventory. Each seller is identified by a unique Ad Manager account ID.",
              {
                "$ul": [
                  "**accountId**: The unique ID for the seller. The seller fills in this field. The seller account ID is then available to buyer in the product.",
                  "**subAccountId**: Output only. Ad manager network code for the seller."
                ]
              }
            ],
            "**syndicationProduct**: The syndication product associated with the deal.",
            "**targetingCriterion**: Targeting that is shared between the buyer and the seller. Each targeting criterion has a specified key and for each key there is a list of inclusion value or exclusion values.",
            [
              "**terms**: The deal terms specify the details of a Product/deal. They specify things like price per buyer, the type of pricing model (for example, fixed price, auction) and expected impressions from the publisher.",
              {
                "$ul": [
                  "**brandingType**: Visibility of the URL in bid requests. (default: BRANDED)",
                  "**description**: Publisher provided description for the terms.",
                  [
                    "**estimatedGrossSpend**: Represents a price and a pricing type for a product / deal.",
                    {
                      "$ul": [
                        [
                          "**amount**: Represents an amount of money with its currency type.",
                          {
                            "$ul": [
                              "**currencyCode**: The three-letter currency code defined in ISO 4217.",
                              "**nanos**: Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.",
                              "**units**: The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar."
                            ]
                          }
                        ],
                        "**pricingType**: The pricing type for the deal/product. (default: CPM)"
                      ]
                    }
                  ],
                  "**estimatedImpressionsPerDay**: Non-binding estimate of the impressions served per day. Can be set by buyer or seller.",
                  [
                    "**guaranteedFixedPriceTerms**: Terms for Programmatic Guaranteed Deals.",
                    {
                      "$ul": [
                        "**fixedPrices**: Fixed price for the specified buyer.",
                        "**guaranteedImpressions**: Guaranteed impressions as a percentage. This is the percentage of guaranteed looks that the buyer is guaranteeing to buy.",
                        "**guaranteedLooks**: Count of guaranteed looks. Required for deal, optional for product. For CPD deals, buyer changes to guaranteed_looks will be ignored.",
                        "**impressionCap**: The lifetime impression cap for CPM sponsorship deals. The deal will stop serving when the cap is reached.",
                        "**minimumDailyLooks**: Daily minimum looks for CPD deal types. For CPD deals, buyer should negotiate on this field instead of guaranteed_looks.",
                        "**percentShareOfVoice**: For sponsorship deals, this is the percentage of the seller's eligible impressions that the deal will serve until the cap is reached.",
                        "**reservationType**: The reservation type for a Programmatic Guaranteed deal. This indicates whether the number of impressions is fixed, or a percent of available impressions. If not specified, the default reservation type is STANDARD."
                      ]
                    }
                  ],
                  [
                    "**nonGuaranteedAuctionTerms**: Terms for Private Auctions. Note that Private Auctions can be created only by the seller, but they can be returned in a get or list request.",
                    {
                      "$ul": [
                        "**autoOptimizePrivateAuction**: True if open auction buyers are allowed to compete with invited buyers in this private auction.",
                        "**reservePricesPerBuyer**: Reserve price for the specified buyer."
                      ]
                    }
                  ],
                  [
                    "**nonGuaranteedFixedPriceTerms**: Terms for Preferred Deals.",
                    {
                      "$ul": [
                        "**fixedPrices**: Fixed price for the specified buyer."
                      ]
                    }
                  ],
                  "**sellerTimeZone**: The time zone name. For deals with Cost Per Day billing, defines the time zone used to mark the boundaries of a day. It should be an IANA TZ name, such as \"America/Los_Angeles\". For more information, see https://en.wikipedia.org/wiki/List_of_tz_database_time_zones."
                ]
              }
            ],
            "**updateTime**: Time of last update.",
            "**webPropertyCode**: The web-property code for the seller. This needs to be copied as is when adding a new deal to a proposal."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
