{
  "name": "firebaseappdistribution_projects_apps_updateTestConfig",
  "description": "Updates a release.",
  "parameters": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "Identifier. The name of the test configuration resource. Format: `projects/{project_number}/apps/{app_id}/testConfig`"
      },
      "updateMask": {
        "type": "string",
        "description": "Optional. The list of fields to update."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleFirebaseAppdistroV1alphaTestConfig"
      }
    },
    "required": [
      "name"
    ],
    "$defs": {
      "GoogleFirebaseAppdistroV1alphaTestConfig": {
        "description": "Configuration for automated tests",
        "properties": {
          "name": {
            "description": "Identifier. The name of the test configuration resource. Format: `projects/{project_number}/apps/{app_id}/testConfig`",
            "type": "string"
          },
          "roboCrawler": {
            "$ref": "#/$defs/GoogleFirebaseAppdistroV1alphaRoboCrawler"
          },
          "testDevices": {
            "description": "Optional. Tests will be run on this list of devices",
            "items": {
              "$ref": "#/$defs/GoogleFirebaseAppdistroV1alphaTestDevice"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleFirebaseAppdistroV1alphaRoboCrawler": {
        "description": "Configuration for Robo crawler",
        "properties": {
          "loginCredential": {
            "$ref": "#/$defs/GoogleFirebaseAppdistroV1alphaLoginCredential"
          }
        },
        "type": "object"
      },
      "GoogleFirebaseAppdistroV1alphaLoginCredential": {
        "description": "Login credential for automated tests",
        "properties": {
          "fieldHints": {
            "$ref": "#/$defs/GoogleFirebaseAppdistroV1alphaLoginCredentialFieldHints"
          },
          "google": {
            "description": "Optional. Are these credentials for Google?",
            "type": "boolean"
          },
          "password": {
            "description": "Optional. Password for automated tests",
            "type": "string"
          },
          "username": {
            "description": "Optional. Username for automated tests",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleFirebaseAppdistroV1alphaLoginCredentialFieldHints": {
        "description": "Hints to the crawler for identifying input fields",
        "properties": {
          "passwordResourceName": {
            "description": "Required. The Android resource name of the password UI element. For example, in Java: R.string.foo in xml: @string/foo Only the \"foo\" part is needed. Reference doc: https://developer.android.com/guide/topics/resources/accessing-resources.html",
            "type": "string"
          },
          "usernameResourceName": {
            "description": "Required. The Android resource name of the username UI element. For example, in Java: R.string.foo in xml: @string/foo Only the \"foo\" part is needed. Reference doc: https://developer.android.com/guide/topics/resources/accessing-resources.html",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleFirebaseAppdistroV1alphaTestDevice": {
        "description": "A device on which automated tests can be run.",
        "properties": {
          "locale": {
            "description": "Optional. The locale of the device (e.g. \"en_US\" for US English) during the test.",
            "type": "string"
          },
          "model": {
            "description": "Required. The device model.",
            "type": "string"
          },
          "orientation": {
            "description": "Optional. The orientation of the device during the test.",
            "type": "string"
          },
          "version": {
            "description": "Required. The version of the device (API level on Android).",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PATCH",
    "url": {
      "$uri": "https://firebaseappdistribution.googleapis.com//v1alpha/{name}{?updateMask,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Configuration for automated tests",
        "**Key properties:**",
        {
          "$ul": [
            "**name**: Identifier. The name of the test configuration resource. Format: `projects/{project_number}/apps/{app_id}/testConfig`",
            [
              "**roboCrawler**: Configuration for Robo crawler",
              {
                "$ul": [
                  [
                    "**loginCredential**: Login credential for automated tests",
                    {
                      "$ul": [
                        [
                          "**fieldHints**: Hints to the crawler for identifying input fields",
                          {
                            "$ul": [
                              "**passwordResourceName**: Required. The Android resource name of the password UI element. For example, in Java: R.string.foo in xml: @string/foo Only the \"foo\" part is needed. Reference doc: https://developer.android.com/guide/topics/resources/accessing-resources.html",
                              "**usernameResourceName**: Required. The Android resource name of the username UI element. For example, in Java: R.string.foo in xml: @string/foo Only the \"foo\" part is needed. Reference doc: https://developer.android.com/guide/topics/resources/accessing-resources.html"
                            ]
                          }
                        ],
                        "**google**: Optional. Are these credentials for Google?",
                        "**password**: Optional. Password for automated tests",
                        "**username**: Optional. Username for automated tests"
                      ]
                    }
                  ]
                ]
              }
            ],
            "**testDevices**: Optional. Tests will be run on this list of devices"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
