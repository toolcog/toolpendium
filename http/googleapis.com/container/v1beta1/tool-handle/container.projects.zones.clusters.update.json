{
  "name": "container_projects_zones_clusters_update",
  "description": "Updates the settings for a specific cluster.",
  "parameters": {
    "type": "object",
    "properties": {
      "projectId": {
        "type": "string",
        "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field."
      },
      "zone": {
        "type": "string",
        "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field."
      },
      "clusterId": {
        "type": "string",
        "description": "Required. Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/UpdateClusterRequest"
      }
    },
    "required": [
      "projectId",
      "zone",
      "clusterId"
    ],
    "$defs": {
      "UpdateClusterRequest": {
        "description": "UpdateClusterRequest updates the settings of a cluster.",
        "properties": {
          "clusterId": {
            "deprecated": true,
            "description": "Required. Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field.",
            "type": "string"
          },
          "name": {
            "description": "The name (project, location, cluster) of the cluster to update. Specified in the format `projects/*/locations/*/clusters/*`.",
            "type": "string"
          },
          "projectId": {
            "deprecated": true,
            "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.",
            "type": "string"
          },
          "update": {
            "$ref": "#/$defs/ClusterUpdate"
          },
          "zone": {
            "deprecated": true,
            "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ClusterUpdate": {
        "description": "ClusterUpdate describes an update to the cluster. Exactly one update can be applied to a cluster with each request, so at most one field can be provided.",
        "properties": {
          "additionalPodRangesConfig": {
            "$ref": "#/$defs/AdditionalPodRangesConfig"
          },
          "desiredAddonsConfig": {
            "$ref": "#/$defs/AddonsConfig"
          },
          "desiredAuthenticatorGroupsConfig": {
            "$ref": "#/$defs/AuthenticatorGroupsConfig"
          },
          "desiredAutopilotWorkloadPolicyConfig": {
            "$ref": "#/$defs/WorkloadPolicyConfig"
          },
          "desiredBinaryAuthorization": {
            "$ref": "#/$defs/BinaryAuthorization"
          },
          "desiredClusterAutoscaling": {
            "$ref": "#/$defs/ClusterAutoscaling"
          },
          "desiredClusterTelemetry": {
            "$ref": "#/$defs/ClusterTelemetry"
          },
          "desiredCostManagementConfig": {
            "$ref": "#/$defs/CostManagementConfig"
          },
          "desiredDatabaseEncryption": {
            "$ref": "#/$defs/DatabaseEncryption"
          },
          "desiredDatapathProvider": {
            "description": "The desired datapath provider for the cluster.",
            "enum": [
              "DATAPATH_PROVIDER_UNSPECIFIED",
              "LEGACY_DATAPATH",
              "ADVANCED_DATAPATH"
            ],
            "type": "string"
          },
          "desiredDefaultSnatStatus": {
            "$ref": "#/$defs/DefaultSnatStatus"
          },
          "desiredDnsConfig": {
            "$ref": "#/$defs/DNSConfig"
          },
          "desiredEnableFqdnNetworkPolicy": {
            "description": "Enable/Disable FQDN Network Policy for the cluster.",
            "type": "boolean"
          },
          "desiredEnablePrivateEndpoint": {
            "description": "Enable/Disable private endpoint for the cluster's master.",
            "type": "boolean"
          },
          "desiredFleet": {
            "$ref": "#/$defs/Fleet"
          },
          "desiredGatewayApiConfig": {
            "$ref": "#/$defs/GatewayAPIConfig"
          },
          "desiredGcfsConfig": {
            "$ref": "#/$defs/GcfsConfig"
          },
          "desiredHostMaintenancePolicy": {
            "$ref": "#/$defs/HostMaintenancePolicy"
          },
          "desiredIdentityServiceConfig": {
            "$ref": "#/$defs/IdentityServiceConfig"
          },
          "desiredImageType": {
            "description": "The desired image type for the node pool. NOTE: Set the \"desired_node_pool\" field as well.",
            "type": "string"
          },
          "desiredInTransitEncryptionConfig": {
            "description": "Specify the details of in-transit encryption.",
            "enum": [
              "IN_TRANSIT_ENCRYPTION_CONFIG_UNSPECIFIED",
              "IN_TRANSIT_ENCRYPTION_DISABLED",
              "IN_TRANSIT_ENCRYPTION_INTER_NODE_TRANSPARENT"
            ],
            "type": "string"
          },
          "desiredIntraNodeVisibilityConfig": {
            "$ref": "#/$defs/IntraNodeVisibilityConfig"
          },
          "desiredK8sBetaApis": {
            "$ref": "#/$defs/K8sBetaAPIConfig"
          },
          "desiredL4ilbSubsettingConfig": {
            "$ref": "#/$defs/ILBSubsettingConfig"
          },
          "desiredLocations": {
            "description": "The desired list of Google Compute Engine [zones](https://cloud.google.com/compute/docs/zones#available) in which the cluster's nodes should be located. This list must always include the cluster's primary zone. Warning: changing cluster locations will update the locations of all node pools and will result in nodes being added and/or removed.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "desiredLoggingConfig": {
            "$ref": "#/$defs/LoggingConfig"
          },
          "desiredLoggingService": {
            "description": "The logging service the cluster should use to write logs. Currently available options: * `logging.googleapis.com/kubernetes` - The Cloud Logging service with a Kubernetes-native resource model * `logging.googleapis.com` - The legacy Cloud Logging service (no longer available as of GKE 1.15). * `none` - no logs will be exported from the cluster. If left as an empty string,`logging.googleapis.com/kubernetes` will be used for GKE 1.14+ or `logging.googleapis.com` for earlier versions.",
            "type": "string"
          },
          "desiredMaster": {
            "$ref": "#/$defs/Master"
          },
          "desiredMasterAuthorizedNetworksConfig": {
            "$ref": "#/$defs/MasterAuthorizedNetworksConfig"
          },
          "desiredMasterVersion": {
            "description": "The Kubernetes version to change the master to. The only valid value is the latest supported version. Users may specify either explicit versions offered by Kubernetes Engine or version aliases, which have the following behavior: - \"latest\": picks the highest valid Kubernetes version - \"1.X\": picks the highest valid patch+gke.N patch in the 1.X version - \"1.X.Y\": picks the highest valid gke.N patch in the 1.X.Y version - \"1.X.Y-gke.N\": picks an explicit Kubernetes version - \"-\": picks the default Kubernetes version",
            "type": "string"
          },
          "desiredMeshCertificates": {
            "$ref": "#/$defs/MeshCertificates"
          },
          "desiredMonitoringConfig": {
            "$ref": "#/$defs/MonitoringConfig"
          },
          "desiredMonitoringService": {
            "description": "The monitoring service the cluster should use to write metrics. Currently available options: * \"monitoring.googleapis.com/kubernetes\" - The Cloud Monitoring service with a Kubernetes-native resource model * `monitoring.googleapis.com` - The legacy Cloud Monitoring service (no longer available as of GKE 1.15). * `none` - No metrics will be exported from the cluster. If left as an empty string,`monitoring.googleapis.com/kubernetes` will be used for GKE 1.14+ or `monitoring.googleapis.com` for earlier versions.",
            "type": "string"
          },
          "desiredNetworkPerformanceConfig": {
            "$ref": "#/$defs/ClusterNetworkPerformanceConfig"
          },
          "desiredNodePoolAutoConfigNetworkTags": {
            "$ref": "#/$defs/NetworkTags"
          },
          "desiredNodePoolAutoConfigResourceManagerTags": {
            "$ref": "#/$defs/ResourceManagerTags"
          },
          "desiredNodePoolAutoscaling": {
            "$ref": "#/$defs/NodePoolAutoscaling"
          },
          "desiredNodePoolId": {
            "description": "The node pool to be upgraded. This field is mandatory if \"desired_node_version\", \"desired_image_family\", \"desired_node_pool_autoscaling\", or \"desired_workload_metadata_config\" is specified and there is more than one node pool on the cluster.",
            "type": "string"
          },
          "desiredNodePoolLoggingConfig": {
            "$ref": "#/$defs/NodePoolLoggingConfig"
          },
          "desiredNodeVersion": {
            "description": "The Kubernetes version to change the nodes to (typically an upgrade). Users may specify either explicit versions offered by Kubernetes Engine or version aliases, which have the following behavior: - \"latest\": picks the highest valid Kubernetes version - \"1.X\": picks the highest valid patch+gke.N patch in the 1.X version - \"1.X.Y\": picks the highest valid gke.N patch in the 1.X.Y version - \"1.X.Y-gke.N\": picks an explicit Kubernetes version - \"-\": picks the Kubernetes master version",
            "type": "string"
          },
          "desiredNotificationConfig": {
            "$ref": "#/$defs/NotificationConfig"
          },
          "desiredParentProductConfig": {
            "$ref": "#/$defs/ParentProductConfig"
          },
          "desiredPodSecurityPolicyConfig": {
            "$ref": "#/$defs/PodSecurityPolicyConfig"
          },
          "desiredPrivateClusterConfig": {
            "$ref": "#/$defs/PrivateClusterConfig"
          },
          "desiredPrivateIpv6GoogleAccess": {
            "description": "The desired state of IPv6 connectivity to Google Services.",
            "enum": [
              "PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED",
              "PRIVATE_IPV6_GOOGLE_ACCESS_DISABLED",
              "PRIVATE_IPV6_GOOGLE_ACCESS_TO_GOOGLE",
              "PRIVATE_IPV6_GOOGLE_ACCESS_BIDIRECTIONAL"
            ],
            "type": "string"
          },
          "desiredProtectConfig": {
            "$ref": "#/$defs/ProtectConfig"
          },
          "desiredReleaseChannel": {
            "$ref": "#/$defs/ReleaseChannel"
          },
          "desiredResourceUsageExportConfig": {
            "$ref": "#/$defs/ResourceUsageExportConfig"
          },
          "desiredSecurityPostureConfig": {
            "$ref": "#/$defs/SecurityPostureConfig"
          },
          "desiredServiceExternalIpsConfig": {
            "$ref": "#/$defs/ServiceExternalIPsConfig"
          },
          "desiredShieldedNodes": {
            "$ref": "#/$defs/ShieldedNodes"
          },
          "desiredStackType": {
            "description": "The desired stack type of the cluster. If a stack type is provided and does not match the current stack type of the cluster, update will attempt to change the stack type to the new type.",
            "enum": [
              "STACK_TYPE_UNSPECIFIED",
              "IPV4",
              "IPV4_IPV6"
            ],
            "type": "string"
          },
          "desiredTpuConfig": {
            "$ref": "#/$defs/TpuConfig"
          },
          "desiredVerticalPodAutoscaling": {
            "$ref": "#/$defs/VerticalPodAutoscaling"
          },
          "desiredWorkloadAltsConfig": {
            "$ref": "#/$defs/WorkloadALTSConfig"
          },
          "desiredWorkloadCertificates": {
            "$ref": "#/$defs/WorkloadCertificates"
          },
          "desiredWorkloadIdentityConfig": {
            "$ref": "#/$defs/WorkloadIdentityConfig"
          },
          "enableK8sBetaApis": {
            "$ref": "#/$defs/K8sBetaAPIConfig"
          },
          "etag": {
            "description": "The current etag of the cluster. If an etag is provided and does not match the current etag of the cluster, update will be blocked and an ABORTED error will be returned.",
            "type": "string"
          },
          "removedAdditionalPodRangesConfig": {
            "$ref": "#/$defs/AdditionalPodRangesConfig"
          }
        },
        "type": "object"
      },
      "AdditionalPodRangesConfig": {
        "description": "AdditionalPodRangesConfig is the configuration for additional pod secondary ranges supporting the ClusterUpdate message.",
        "properties": {
          "podRangeInfo": {
            "description": "Output only. [Output only] Information for additional pod range.",
            "items": {
              "$ref": "#/$defs/RangeInfo"
            },
            "readOnly": true,
            "type": "array"
          },
          "podRangeNames": {
            "description": "Name for pod secondary ipv4 range which has the actual range defined ahead.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "RangeInfo": {
        "description": "RangeInfo contains the range name and the range utilization by this cluster.",
        "properties": {
          "rangeName": {
            "description": "Output only. [Output only] Name of a range.",
            "readOnly": true,
            "type": "string"
          },
          "utilization": {
            "description": "Output only. [Output only] The utilization of the range.",
            "format": "double",
            "readOnly": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "AddonsConfig": {
        "description": "Configuration for the addons that can be automatically spun up in the cluster, enabling additional functionality.",
        "properties": {
          "cloudRunConfig": {
            "$ref": "#/$defs/CloudRunConfig"
          },
          "configConnectorConfig": {
            "$ref": "#/$defs/ConfigConnectorConfig"
          },
          "dnsCacheConfig": {
            "$ref": "#/$defs/DnsCacheConfig"
          },
          "gcePersistentDiskCsiDriverConfig": {
            "$ref": "#/$defs/GcePersistentDiskCsiDriverConfig"
          },
          "gcpFilestoreCsiDriverConfig": {
            "$ref": "#/$defs/GcpFilestoreCsiDriverConfig"
          },
          "gcsFuseCsiDriverConfig": {
            "$ref": "#/$defs/GcsFuseCsiDriverConfig"
          },
          "gkeBackupAgentConfig": {
            "$ref": "#/$defs/GkeBackupAgentConfig"
          },
          "horizontalPodAutoscaling": {
            "$ref": "#/$defs/HorizontalPodAutoscaling"
          },
          "httpLoadBalancing": {
            "$ref": "#/$defs/HttpLoadBalancing"
          },
          "istioConfig": {
            "$ref": "#/$defs/IstioConfig"
          },
          "kalmConfig": {
            "$ref": "#/$defs/KalmConfig"
          },
          "kubernetesDashboard": {
            "$ref": "#/$defs/KubernetesDashboard"
          },
          "networkPolicyConfig": {
            "$ref": "#/$defs/NetworkPolicyConfig"
          },
          "statefulHaConfig": {
            "$ref": "#/$defs/StatefulHAConfig"
          }
        },
        "type": "object"
      },
      "CloudRunConfig": {
        "description": "Configuration options for the Cloud Run feature.",
        "properties": {
          "disabled": {
            "description": "Whether Cloud Run addon is enabled for this cluster.",
            "type": "boolean"
          },
          "loadBalancerType": {
            "description": "Which load balancer type is installed for Cloud Run.",
            "enum": [
              "LOAD_BALANCER_TYPE_UNSPECIFIED",
              "LOAD_BALANCER_TYPE_EXTERNAL",
              "LOAD_BALANCER_TYPE_INTERNAL"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "ConfigConnectorConfig": {
        "description": "Configuration options for the Config Connector add-on.",
        "properties": {
          "enabled": {
            "description": "Whether Cloud Connector is enabled for this cluster.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "DnsCacheConfig": {
        "description": "Configuration for NodeLocal DNSCache",
        "properties": {
          "enabled": {
            "description": "Whether NodeLocal DNSCache is enabled for this cluster.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GcePersistentDiskCsiDriverConfig": {
        "description": "Configuration for the Compute Engine PD CSI driver.",
        "properties": {
          "enabled": {
            "description": "Whether the Compute Engine PD CSI driver is enabled for this cluster.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GcpFilestoreCsiDriverConfig": {
        "description": "Configuration for the GCP Filestore CSI driver.",
        "properties": {
          "enabled": {
            "description": "Whether the GCP Filestore CSI driver is enabled for this cluster.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GcsFuseCsiDriverConfig": {
        "description": "Configuration for the Cloud Storage Fuse CSI driver.",
        "properties": {
          "enabled": {
            "description": "Whether the Cloud Storage Fuse CSI driver is enabled for this cluster.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GkeBackupAgentConfig": {
        "description": "Configuration for the Backup for GKE Agent.",
        "properties": {
          "enabled": {
            "description": "Whether the Backup for GKE agent is enabled for this cluster.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "HorizontalPodAutoscaling": {
        "description": "Configuration options for the horizontal pod autoscaling feature, which increases or decreases the number of replica pods a replication controller has based on the resource usage of the existing pods.",
        "properties": {
          "disabled": {
            "description": "Whether the Horizontal Pod Autoscaling feature is enabled in the cluster. When enabled, it ensures that metrics are collected into Stackdriver Monitoring.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "HttpLoadBalancing": {
        "description": "Configuration options for the HTTP (L7) load balancing controller addon, which makes it easy to set up HTTP load balancers for services in a cluster.",
        "properties": {
          "disabled": {
            "description": "Whether the HTTP Load Balancing controller is enabled in the cluster. When enabled, it runs a small pod in the cluster that manages the load balancers.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "IstioConfig": {
        "description": "Configuration options for Istio addon.",
        "properties": {
          "auth": {
            "deprecated": true,
            "description": "The specified Istio auth mode, either none, or mutual TLS.",
            "enum": [
              "AUTH_NONE",
              "AUTH_MUTUAL_TLS"
            ],
            "type": "string"
          },
          "disabled": {
            "deprecated": true,
            "description": "Whether Istio is enabled for this cluster.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "KalmConfig": {
        "description": "Configuration options for the KALM addon.",
        "properties": {
          "enabled": {
            "deprecated": true,
            "description": "Whether KALM is enabled for this cluster.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "KubernetesDashboard": {
        "description": "Configuration for the Kubernetes Dashboard.",
        "properties": {
          "disabled": {
            "description": "Whether the Kubernetes Dashboard is enabled for this cluster.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "NetworkPolicyConfig": {
        "description": "Configuration for NetworkPolicy. This only tracks whether the addon is enabled or not on the Master, it does not track whether network policy is enabled for the nodes.",
        "properties": {
          "disabled": {
            "description": "Whether NetworkPolicy is enabled for this cluster.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "StatefulHAConfig": {
        "description": "Configuration for the Stateful HA add-on.",
        "properties": {
          "enabled": {
            "description": "Whether the Stateful HA add-on is enabled for this cluster.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "AuthenticatorGroupsConfig": {
        "description": "Configuration for returning group information from authenticators.",
        "properties": {
          "enabled": {
            "description": "Whether this cluster should return group membership lookups during authentication using a group of security groups.",
            "type": "boolean"
          },
          "securityGroup": {
            "description": "The name of the security group-of-groups to be used. Only relevant if enabled = true.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "WorkloadPolicyConfig": {
        "description": "WorkloadPolicyConfig is the configuration of workload policy for autopilot clusters.",
        "properties": {
          "allowNetAdmin": {
            "description": "If true, workloads can use NET_ADMIN capability.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "BinaryAuthorization": {
        "description": "Configuration for Binary Authorization.",
        "properties": {
          "enabled": {
            "deprecated": true,
            "description": "This field is deprecated. Leave this unset and instead configure BinaryAuthorization using evaluation_mode. If evaluation_mode is set to anything other than EVALUATION_MODE_UNSPECIFIED, this field is ignored.",
            "type": "boolean"
          },
          "evaluationMode": {
            "description": "Mode of operation for binauthz policy evaluation. If unspecified, defaults to DISABLED.",
            "enum": [
              "EVALUATION_MODE_UNSPECIFIED",
              "DISABLED",
              "PROJECT_SINGLETON_POLICY_ENFORCE",
              "POLICY_BINDINGS",
              "POLICY_BINDINGS_AND_PROJECT_SINGLETON_POLICY_ENFORCE"
            ],
            "type": "string"
          },
          "policyBindings": {
            "description": "Optional. Binauthz policies that apply to this cluster.",
            "items": {
              "$ref": "#/$defs/PolicyBinding"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PolicyBinding": {
        "description": "Binauthz policy that applies to this cluster.",
        "properties": {
          "name": {
            "description": "The relative resource name of the binauthz platform policy to audit. GKE platform policies have the following format: `projects/{project_number}/platforms/gke/policies/{policy_id}`.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ClusterAutoscaling": {
        "description": "ClusterAutoscaling contains global, per-cluster information required by Cluster Autoscaler to automatically adjust the size of the cluster and create/delete node pools based on the current needs.",
        "properties": {
          "autoprovisioningLocations": {
            "description": "The list of Google Compute Engine [zones](https://cloud.google.com/compute/docs/zones#available) in which the NodePool's nodes can be created by NAP.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "autoprovisioningNodePoolDefaults": {
            "$ref": "#/$defs/AutoprovisioningNodePoolDefaults"
          },
          "autoscalingProfile": {
            "description": "Defines autoscaling behaviour.",
            "enum": [
              "PROFILE_UNSPECIFIED",
              "OPTIMIZE_UTILIZATION",
              "BALANCED"
            ],
            "type": "string"
          },
          "enableNodeAutoprovisioning": {
            "description": "Enables automatic node pool creation and deletion.",
            "type": "boolean"
          },
          "resourceLimits": {
            "description": "Contains global constraints regarding minimum and maximum amount of resources in the cluster.",
            "items": {
              "$ref": "#/$defs/ResourceLimit"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AutoprovisioningNodePoolDefaults": {
        "description": "AutoprovisioningNodePoolDefaults contains defaults for a node pool created by NAP.",
        "properties": {
          "bootDiskKmsKey": {
            "description": " The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: https://cloud.google.com/compute/docs/disks/customer-managed-encryption",
            "type": "string"
          },
          "diskSizeGb": {
            "description": "Size of the disk attached to each node, specified in GB. The smallest allowed disk size is 10GB. If unspecified, the default disk size is 100GB.",
            "format": "int32",
            "type": "integer"
          },
          "diskType": {
            "description": "Type of the disk attached to each node (e.g. 'pd-standard', 'pd-ssd' or 'pd-balanced') If unspecified, the default disk type is 'pd-standard'",
            "type": "string"
          },
          "imageType": {
            "description": "The image type to use for NAP created node. Please see https://cloud.google.com/kubernetes-engine/docs/concepts/node-images for available image types.",
            "type": "string"
          },
          "insecureKubeletReadonlyPortEnabled": {
            "description": "Enable or disable Kubelet read only port.",
            "type": "boolean"
          },
          "management": {
            "$ref": "#/$defs/NodeManagement"
          },
          "minCpuPlatform": {
            "deprecated": true,
            "description": "Deprecated. Minimum CPU platform to be used for NAP created node pools. The instance may be scheduled on the specified or newer CPU platform. Applicable values are the friendly names of CPU platforms, such as minCpuPlatform: Intel Haswell or minCpuPlatform: Intel Sandy Bridge. For more information, read [how to specify min CPU platform](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform). This field is deprecated, min_cpu_platform should be specified using `cloud.google.com/requested-min-cpu-platform` label selector on the pod. To unset the min cpu platform field pass \"automatic\" as field value.",
            "type": "string"
          },
          "oauthScopes": {
            "description": "The set of Google API scopes to be made available on all of the node VMs under the \"default\" service account. The following scopes are recommended, but not required, and by default are not included: * `https://www.googleapis.com/auth/compute` is required for mounting persistent storage on your nodes. * `https://www.googleapis.com/auth/devstorage.read_only` is required for communicating with **gcr.io** (the [Google Container Registry](https://cloud.google.com/container-registry/)). If unspecified, no scopes are added, unless Cloud Logging or Cloud Monitoring are enabled, in which case their required scopes will be added.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "serviceAccount": {
            "description": "The Google Cloud Platform Service Account to be used by the node VMs. Specify the email address of the Service Account; otherwise, if no Service Account is specified, the \"default\" service account is used.",
            "type": "string"
          },
          "shieldedInstanceConfig": {
            "$ref": "#/$defs/ShieldedInstanceConfig"
          },
          "upgradeSettings": {
            "$ref": "#/$defs/UpgradeSettings"
          }
        },
        "type": "object"
      },
      "NodeManagement": {
        "description": "NodeManagement defines the set of node management services turned on for the node pool.",
        "properties": {
          "autoRepair": {
            "description": "Whether the nodes will be automatically repaired.",
            "type": "boolean"
          },
          "autoUpgrade": {
            "description": "Whether the nodes will be automatically upgraded.",
            "type": "boolean"
          },
          "upgradeOptions": {
            "$ref": "#/$defs/AutoUpgradeOptions"
          }
        },
        "type": "object"
      },
      "AutoUpgradeOptions": {
        "description": "AutoUpgradeOptions defines the set of options for the user to control how the Auto Upgrades will proceed.",
        "properties": {
          "autoUpgradeStartTime": {
            "description": "[Output only] This field is set when upgrades are about to commence with the approximate start time for the upgrades, in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.",
            "type": "string"
          },
          "description": {
            "description": "[Output only] This field is set when upgrades are about to commence with the description of the upgrade.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ShieldedInstanceConfig": {
        "description": "A set of Shielded Instance options.",
        "properties": {
          "enableIntegrityMonitoring": {
            "description": "Defines whether the instance has integrity monitoring enabled. Enables monitoring and attestation of the boot integrity of the instance. The attestation is performed against the integrity policy baseline. This baseline is initially derived from the implicitly trusted boot image when the instance is created.",
            "type": "boolean"
          },
          "enableSecureBoot": {
            "description": "Defines whether the instance has Secure Boot enabled. Secure Boot helps ensure that the system only runs authentic software by verifying the digital signature of all boot components, and halting the boot process if signature verification fails.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "UpgradeSettings": {
        "description": "These upgrade settings control the level of parallelism and the level of disruption caused by an upgrade. maxUnavailable controls the number of nodes that can be simultaneously unavailable. maxSurge controls the number of additional nodes that can be added to the node pool temporarily for the time of the upgrade to increase the number of available nodes. (maxUnavailable + maxSurge) determines the level of parallelism (how many nodes are being upgraded at the same time). Note: upgrades inevitably introduce some disruption since workloads need to be moved from old nodes to new, upgraded ones. Even if maxUnavailable=0, this holds true. (Disruption stays within the limits of PodDisruptionBudget, if it is configured.) Consider a hypothetical node pool with 5 nodes having maxSurge=2, maxUnavailable=1. This means the upgrade process upgrades 3 nodes simultaneously. It creates 2 additional (upgraded) nodes, then it brings down 3 old (not yet upgraded) nodes at the same time. This ensures that there are always at least 4 nodes available. These upgrade settings configure the upgrade strategy for the node pool. Use strategy to switch between the strategies applied to the node pool. If the strategy is SURGE, use max_surge and max_unavailable to control the level of parallelism and the level of disruption caused by upgrade. 1. maxSurge controls the number of additional nodes that can be added to the node pool temporarily for the time of the upgrade to increase the number of available nodes. 2. maxUnavailable controls the number of nodes that can be simultaneously unavailable. 3. (maxUnavailable + maxSurge) determines the level of parallelism (how many nodes are being upgraded at the same time). If the strategy is BLUE_GREEN, use blue_green_settings to configure the blue-green upgrade related settings. 1. standard_rollout_policy is the default policy. The policy is used to control the way blue pool gets drained. The draining is executed in the batch mode. The batch size could be specified as either percentage of the node pool size or the number of nodes. batch_soak_duration is the soak time after each batch gets drained. 2. node_pool_soak_duration is the soak time after all blue nodes are drained. After this period, the blue pool nodes will be deleted.",
        "properties": {
          "blueGreenSettings": {
            "$ref": "#/$defs/BlueGreenSettings"
          },
          "maxSurge": {
            "description": "The maximum number of nodes that can be created beyond the current size of the node pool during the upgrade process.",
            "format": "int32",
            "type": "integer"
          },
          "maxUnavailable": {
            "description": "The maximum number of nodes that can be simultaneously unavailable during the upgrade process. A node is considered available if its status is Ready.",
            "format": "int32",
            "type": "integer"
          },
          "strategy": {
            "description": "Update strategy of the node pool.",
            "enum": [
              "NODE_POOL_UPDATE_STRATEGY_UNSPECIFIED",
              "BLUE_GREEN",
              "SURGE"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "BlueGreenSettings": {
        "description": "Settings for blue-green upgrade.",
        "properties": {
          "autoscaledRolloutPolicy": {
            "$ref": "#/$defs/AutoscaledRolloutPolicy"
          },
          "nodePoolSoakDuration": {
            "description": "Time needed after draining entire blue pool. After this period, blue pool will be cleaned up.",
            "format": "google-duration",
            "type": "string"
          },
          "standardRolloutPolicy": {
            "$ref": "#/$defs/StandardRolloutPolicy"
          }
        },
        "type": "object"
      },
      "AutoscaledRolloutPolicy": {
        "description": "Autoscaled rollout policy uses cluster autoscaler during blue-green upgrades to scale both the green and blue pools.",
        "properties": {},
        "type": "object"
      },
      "StandardRolloutPolicy": {
        "description": "Standard rollout policy is the default policy for blue-green.",
        "properties": {
          "batchNodeCount": {
            "description": "Number of blue nodes to drain in a batch.",
            "format": "int32",
            "type": "integer"
          },
          "batchPercentage": {
            "description": "Percentage of the blue pool nodes to drain in a batch. The range of this field should be (0.0, 1.0].",
            "format": "float",
            "type": "number"
          },
          "batchSoakDuration": {
            "description": "Soak time after each batch gets drained. Default to zero.",
            "format": "google-duration",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResourceLimit": {
        "description": "Contains information about amount of some resource in the cluster. For memory, value should be in GB.",
        "properties": {
          "maximum": {
            "description": "Maximum amount of the resource in the cluster.",
            "format": "int64",
            "type": "string"
          },
          "minimum": {
            "description": "Minimum amount of the resource in the cluster.",
            "format": "int64",
            "type": "string"
          },
          "resourceType": {
            "description": "Resource name \"cpu\", \"memory\" or gpu-specific string.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ClusterTelemetry": {
        "description": "Telemetry integration for the cluster.",
        "properties": {
          "type": {
            "description": "Type of the integration.",
            "enum": [
              "UNSPECIFIED",
              "DISABLED",
              "ENABLED",
              "SYSTEM_ONLY"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "CostManagementConfig": {
        "description": "Configuration for fine-grained cost management feature.",
        "properties": {
          "enabled": {
            "description": "Whether the feature is enabled or not.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "DatabaseEncryption": {
        "description": "Configuration of etcd encryption.",
        "properties": {
          "keyName": {
            "description": "Name of CloudKMS key to use for the encryption of secrets in etcd. Ex. projects/my-project/locations/global/keyRings/my-ring/cryptoKeys/my-key",
            "type": "string"
          },
          "state": {
            "description": "The desired state of etcd encryption.",
            "enum": [
              "UNKNOWN",
              "ENCRYPTED",
              "DECRYPTED"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "DefaultSnatStatus": {
        "description": "DefaultSnatStatus contains the desired state of whether default sNAT should be disabled on the cluster.",
        "properties": {
          "disabled": {
            "description": "Disables cluster default sNAT rules.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "DNSConfig": {
        "description": "DNSConfig contains the desired set of options for configuring clusterDNS.",
        "properties": {
          "clusterDns": {
            "description": "cluster_dns indicates which in-cluster DNS provider should be used.",
            "enum": [
              "PROVIDER_UNSPECIFIED",
              "PLATFORM_DEFAULT",
              "CLOUD_DNS",
              "KUBE_DNS"
            ],
            "type": "string"
          },
          "clusterDnsDomain": {
            "description": "cluster_dns_domain is the suffix used for all cluster service records.",
            "type": "string"
          },
          "clusterDnsScope": {
            "description": "cluster_dns_scope indicates the scope of access to cluster DNS records.",
            "enum": [
              "DNS_SCOPE_UNSPECIFIED",
              "CLUSTER_SCOPE",
              "VPC_SCOPE"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "Fleet": {
        "description": "Fleet is the fleet configuration for the cluster.",
        "properties": {
          "membership": {
            "description": "[Output only] The full resource name of the registered fleet membership of the cluster, in the format `//gkehub.googleapis.com/projects/*/locations/*/memberships/*`.",
            "type": "string"
          },
          "preRegistered": {
            "description": "[Output only] Whether the cluster has been registered through the fleet API.",
            "type": "boolean"
          },
          "project": {
            "description": "The Fleet host project(project ID or project number) where this cluster will be registered to. This field cannot be changed after the cluster has been registered.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GatewayAPIConfig": {
        "description": "GatewayAPIConfig contains the desired config of Gateway API on this cluster.",
        "properties": {
          "channel": {
            "description": "The Gateway API release channel to use for Gateway API.",
            "enum": [
              "CHANNEL_UNSPECIFIED",
              "CHANNEL_DISABLED",
              "CHANNEL_EXPERIMENTAL",
              "CHANNEL_STANDARD"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "GcfsConfig": {
        "description": "GcfsConfig contains configurations of Google Container File System.",
        "properties": {
          "enabled": {
            "description": "Whether to use GCFS.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "HostMaintenancePolicy": {
        "description": "HostMaintenancePolicy contains the maintenance policy for the hosts on which the GKE VMs run on.",
        "properties": {
          "maintenanceInterval": {
            "description": "Specifies the frequency of planned maintenance events.",
            "enum": [
              "MAINTENANCE_INTERVAL_UNSPECIFIED",
              "AS_NEEDED",
              "PERIODIC"
            ],
            "type": "string"
          },
          "opportunisticMaintenanceStrategy": {
            "$ref": "#/$defs/OpportunisticMaintenanceStrategy"
          }
        },
        "type": "object"
      },
      "OpportunisticMaintenanceStrategy": {
        "description": "Strategy that will trigger maintenance on behalf of the customer.",
        "properties": {
          "maintenanceAvailabilityWindow": {
            "description": "The window of time that opportunistic maintenance can run. Example: A setting of 14 days implies that opportunistic maintenance can only be ran in the 2 weeks leading up to the scheduled maintenance date. Setting 28 days allows opportunistic maintenance to run at any time in the scheduled maintenance window (all `PERIODIC` maintenance is set 28 days in advance).",
            "format": "google-duration",
            "type": "string"
          },
          "minNodesPerPool": {
            "description": "The minimum nodes required to be available in a pool. Blocks maintenance if it would cause the number of running nodes to dip below this value.",
            "format": "int64",
            "type": "string"
          },
          "nodeIdleTimeWindow": {
            "description": "The amount of time that a node can remain idle (no customer owned workloads running), before triggering maintenance.",
            "format": "google-duration",
            "type": "string"
          }
        },
        "type": "object"
      },
      "IdentityServiceConfig": {
        "description": "IdentityServiceConfig is configuration for Identity Service which allows customers to use external identity providers with the K8S API",
        "properties": {
          "enabled": {
            "description": "Whether to enable the Identity Service component",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "IntraNodeVisibilityConfig": {
        "description": "IntraNodeVisibilityConfig contains the desired config of the intra-node visibility on this cluster.",
        "properties": {
          "enabled": {
            "description": "Enables intra node visibility for this cluster.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "K8sBetaAPIConfig": {
        "description": "Kubernetes open source beta apis enabled on the cluster.",
        "properties": {
          "enabledApis": {
            "description": "api name, e.g. storage.k8s.io/v1beta1/csistoragecapacities.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ILBSubsettingConfig": {
        "description": "ILBSubsettingConfig contains the desired config of L4 Internal LoadBalancer subsetting on this cluster.",
        "properties": {
          "enabled": {
            "description": "Enables l4 ILB subsetting for this cluster",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "LoggingConfig": {
        "description": "LoggingConfig is cluster logging configuration.",
        "properties": {
          "componentConfig": {
            "$ref": "#/$defs/LoggingComponentConfig"
          }
        },
        "type": "object"
      },
      "LoggingComponentConfig": {
        "description": "LoggingComponentConfig is cluster logging component configuration.",
        "properties": {
          "enableComponents": {
            "description": "Select components to collect logs. An empty set would disable all logging.",
            "items": {
              "enum": [
                "COMPONENT_UNSPECIFIED",
                "SYSTEM_COMPONENTS",
                "WORKLOADS",
                "APISERVER",
                "SCHEDULER",
                "CONTROLLER_MANAGER"
              ],
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Master": {
        "description": "Master is the configuration for components on master.",
        "properties": {},
        "type": "object"
      },
      "MasterAuthorizedNetworksConfig": {
        "description": "Configuration options for the master authorized networks feature. Enabled master authorized networks will disallow all external traffic to access Kubernetes master through HTTPS except traffic from the given CIDR blocks, Google Compute Engine Public IPs and Google Prod IPs.",
        "properties": {
          "cidrBlocks": {
            "description": "cidr_blocks define up to 10 external networks that could access Kubernetes master through HTTPS.",
            "items": {
              "$ref": "#/$defs/CidrBlock"
            },
            "type": "array"
          },
          "enabled": {
            "description": "Whether or not master authorized networks is enabled.",
            "type": "boolean"
          },
          "gcpPublicCidrsAccessEnabled": {
            "description": "Whether master is accessbile via Google Compute Engine Public IP addresses.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "CidrBlock": {
        "description": "CidrBlock contains an optional name and one CIDR block.",
        "properties": {
          "cidrBlock": {
            "description": "cidr_block must be specified in CIDR notation.",
            "type": "string"
          },
          "displayName": {
            "description": "display_name is an optional field for users to identify CIDR blocks.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MeshCertificates": {
        "description": "Configuration for issuance of mTLS keys and certificates to Kubernetes pods.",
        "properties": {
          "enableCertificates": {
            "description": "enable_certificates controls issuance of workload mTLS certificates. If set, the GKE Workload Identity Certificates controller and node agent will be deployed in the cluster, which can then be configured by creating a WorkloadCertificateConfig Custom Resource. Requires Workload Identity (workload_pool must be non-empty).",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "MonitoringConfig": {
        "description": "MonitoringConfig is cluster monitoring configuration.",
        "properties": {
          "advancedDatapathObservabilityConfig": {
            "$ref": "#/$defs/AdvancedDatapathObservabilityConfig"
          },
          "componentConfig": {
            "$ref": "#/$defs/MonitoringComponentConfig"
          },
          "managedPrometheusConfig": {
            "$ref": "#/$defs/ManagedPrometheusConfig"
          }
        },
        "type": "object"
      },
      "AdvancedDatapathObservabilityConfig": {
        "description": "AdvancedDatapathObservabilityConfig specifies configuration of observability features of advanced datapath.",
        "properties": {
          "enableMetrics": {
            "description": "Expose flow metrics on nodes",
            "type": "boolean"
          },
          "enableRelay": {
            "description": "Enable Relay component",
            "type": "boolean"
          },
          "relayMode": {
            "description": "Method used to make Relay available",
            "enum": [
              "RELAY_MODE_UNSPECIFIED",
              "DISABLED",
              "INTERNAL_VPC_LB",
              "EXTERNAL_LB"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "MonitoringComponentConfig": {
        "description": "MonitoringComponentConfig is cluster monitoring component configuration.",
        "properties": {
          "enableComponents": {
            "description": "Select components to collect metrics. An empty set would disable all monitoring.",
            "items": {
              "enum": [
                "COMPONENT_UNSPECIFIED",
                "SYSTEM_COMPONENTS",
                "WORKLOADS",
                "APISERVER",
                "SCHEDULER",
                "CONTROLLER_MANAGER",
                "STORAGE",
                "HPA",
                "POD",
                "DAEMONSET",
                "DEPLOYMENT",
                "STATEFULSET"
              ],
              "type": "string",
              "x-enumDeprecated": [
                false,
                false,
                true,
                false,
                false,
                false,
                false,
                false,
                false,
                false,
                false,
                false
              ]
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ManagedPrometheusConfig": {
        "description": "ManagedPrometheusConfig defines the configuration for Google Cloud Managed Service for Prometheus.",
        "properties": {
          "enabled": {
            "description": "Enable Managed Collection.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ClusterNetworkPerformanceConfig": {
        "description": "Configuration of all network bandwidth tiers",
        "properties": {
          "totalEgressBandwidthTier": {
            "description": "Specifies the total network bandwidth tier for the NodePool.",
            "enum": [
              "TIER_UNSPECIFIED",
              "TIER_1"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "NetworkTags": {
        "description": "Collection of Compute Engine network tags that can be applied to a node's underlying VM instance. (See `tags` field in [`NodeConfig`](/kubernetes-engine/docs/reference/rest/v1/NodeConfig)).",
        "properties": {
          "tags": {
            "description": "List of network tags.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ResourceManagerTags": {
        "description": "A map of resource manager tag keys and values to be attached to the nodes for managing Compute Engine firewalls using Network Firewall Policies. Tags must be according to specifications in https://cloud.google.com/vpc/docs/tags-firewalls-overview#specifications. A maximum of 5 tag key-value pairs can be specified. Existing tags will be replaced with new values.",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Tags must be in one of the following formats ([KEY]=[VALUE]) 1. `tagKeys/{tag_key_id}=tagValues/{tag_value_id}` 2. `{org_id}/{tag_key_name}={tag_value_name}` 3. `{project_id}/{tag_key_name}={tag_value_name}`",
            "type": "object"
          }
        },
        "type": "object"
      },
      "NodePoolAutoscaling": {
        "description": "NodePoolAutoscaling contains information required by cluster autoscaler to adjust the size of the node pool to the current cluster usage.",
        "properties": {
          "autoprovisioned": {
            "description": "Can this node pool be deleted automatically.",
            "type": "boolean"
          },
          "enabled": {
            "description": "Is autoscaling enabled for this node pool.",
            "type": "boolean"
          },
          "locationPolicy": {
            "description": "Location policy used when scaling up a nodepool.",
            "enum": [
              "LOCATION_POLICY_UNSPECIFIED",
              "BALANCED",
              "ANY"
            ],
            "type": "string"
          },
          "maxNodeCount": {
            "description": "Maximum number of nodes for one location in the NodePool. Must be >= min_node_count. There has to be enough quota to scale up the cluster.",
            "format": "int32",
            "type": "integer"
          },
          "minNodeCount": {
            "description": "Minimum number of nodes for one location in the NodePool. Must be >= 1 and <= max_node_count.",
            "format": "int32",
            "type": "integer"
          },
          "totalMaxNodeCount": {
            "description": "Maximum number of nodes in the node pool. Must be greater than total_min_node_count. There has to be enough quota to scale up the cluster. The total_*_node_count fields are mutually exclusive with the *_node_count fields.",
            "format": "int32",
            "type": "integer"
          },
          "totalMinNodeCount": {
            "description": "Minimum number of nodes in the node pool. Must be greater than 1 less than total_max_node_count. The total_*_node_count fields are mutually exclusive with the *_node_count fields.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NodePoolLoggingConfig": {
        "description": "NodePoolLoggingConfig specifies logging configuration for nodepools.",
        "properties": {
          "variantConfig": {
            "$ref": "#/$defs/LoggingVariantConfig"
          }
        },
        "type": "object"
      },
      "LoggingVariantConfig": {
        "description": "LoggingVariantConfig specifies the behaviour of the logging component.",
        "properties": {
          "variant": {
            "description": "Logging variant deployed on nodes.",
            "enum": [
              "VARIANT_UNSPECIFIED",
              "DEFAULT",
              "MAX_THROUGHPUT"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "NotificationConfig": {
        "description": "NotificationConfig is the configuration of notifications.",
        "properties": {
          "pubsub": {
            "$ref": "#/$defs/PubSub"
          }
        },
        "type": "object"
      },
      "PubSub": {
        "description": "Pub/Sub specific notification config.",
        "properties": {
          "enabled": {
            "description": "Enable notifications for Pub/Sub.",
            "type": "boolean"
          },
          "filter": {
            "$ref": "#/$defs/Filter"
          },
          "topic": {
            "description": "The desired Pub/Sub topic to which notifications will be sent by GKE. Format is `projects/{project}/topics/{topic}`.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Filter": {
        "description": "Allows filtering to one or more specific event types. If event types are present, those and only those event types will be transmitted to the cluster. Other types will be skipped. If no filter is specified, or no event types are present, all event types will be sent",
        "properties": {
          "eventType": {
            "description": "Event types to allowlist.",
            "items": {
              "enum": [
                "EVENT_TYPE_UNSPECIFIED",
                "UPGRADE_AVAILABLE_EVENT",
                "UPGRADE_EVENT",
                "SECURITY_BULLETIN_EVENT"
              ],
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ParentProductConfig": {
        "description": "ParentProductConfig is the configuration of the parent product of the cluster. This field is used by Google internal products that are built on top of a GKE cluster and take the ownership of the cluster.",
        "properties": {
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Labels contain the configuration of the parent product.",
            "type": "object"
          },
          "productName": {
            "description": "Name of the parent product associated with the cluster.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PodSecurityPolicyConfig": {
        "description": "Configuration for the PodSecurityPolicy feature.",
        "properties": {
          "enabled": {
            "description": "Enable the PodSecurityPolicy controller for this cluster. If enabled, pods must be valid under a PodSecurityPolicy to be created.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "PrivateClusterConfig": {
        "description": "Configuration options for private clusters.",
        "properties": {
          "enablePrivateEndpoint": {
            "description": "Whether the master's internal IP address is used as the cluster endpoint.",
            "type": "boolean"
          },
          "enablePrivateNodes": {
            "description": "Whether nodes have internal IP addresses only. If enabled, all nodes are given only RFC 1918 private addresses and communicate with the master via private networking.",
            "type": "boolean"
          },
          "masterGlobalAccessConfig": {
            "$ref": "#/$defs/PrivateClusterMasterGlobalAccessConfig"
          },
          "masterIpv4CidrBlock": {
            "description": "The IP range in CIDR notation to use for the hosted master network. This range will be used for assigning internal IP addresses to the master or set of masters, as well as the ILB VIP. This range must not overlap with any other ranges in use within the cluster's network.",
            "type": "string"
          },
          "peeringName": {
            "description": "Output only. The peering name in the customer VPC used by this cluster.",
            "type": "string"
          },
          "privateEndpoint": {
            "description": "Output only. The internal IP address of this cluster's master endpoint.",
            "type": "string"
          },
          "privateEndpointSubnetwork": {
            "description": "Subnet to provision the master's private endpoint during cluster creation. Specified in projects/*/regions/*/subnetworks/* format.",
            "type": "string"
          },
          "publicEndpoint": {
            "description": "Output only. The external IP address of this cluster's master endpoint.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PrivateClusterMasterGlobalAccessConfig": {
        "description": "Configuration for controlling master global access settings.",
        "properties": {
          "enabled": {
            "description": "Whenever master is accessible globally or not.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ProtectConfig": {
        "description": "ProtectConfig defines the flags needed to enable/disable features for the Protect API.",
        "properties": {
          "workloadConfig": {
            "$ref": "#/$defs/WorkloadConfig"
          },
          "workloadVulnerabilityMode": {
            "description": "Sets which mode to use for Protect workload vulnerability scanning feature.",
            "enum": [
              "WORKLOAD_VULNERABILITY_MODE_UNSPECIFIED",
              "DISABLED",
              "BASIC"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "WorkloadConfig": {
        "description": "WorkloadConfig defines the flags to enable or disable the workload configurations for the cluster.",
        "properties": {
          "auditMode": {
            "description": "Sets which mode of auditing should be used for the cluster's workloads.",
            "enum": [
              "MODE_UNSPECIFIED",
              "DISABLED",
              "BASIC",
              "BASELINE",
              "RESTRICTED"
            ],
            "type": "string",
            "x-enumDeprecated": [
              false,
              false,
              false,
              true,
              true
            ]
          }
        },
        "type": "object"
      },
      "ReleaseChannel": {
        "description": "ReleaseChannel indicates which release channel a cluster is subscribed to. Release channels are arranged in order of risk. When a cluster is subscribed to a release channel, Google maintains both the master version and the node version. Node auto-upgrade defaults to true and cannot be disabled.",
        "properties": {
          "channel": {
            "description": "channel specifies which release channel the cluster is subscribed to.",
            "enum": [
              "UNSPECIFIED",
              "RAPID",
              "REGULAR",
              "STABLE"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResourceUsageExportConfig": {
        "description": "Configuration for exporting cluster resource usages.",
        "properties": {
          "bigqueryDestination": {
            "$ref": "#/$defs/BigQueryDestination"
          },
          "consumptionMeteringConfig": {
            "$ref": "#/$defs/ConsumptionMeteringConfig"
          },
          "enableNetworkEgressMetering": {
            "description": "Whether to enable network egress metering for this cluster. If enabled, a daemonset will be created in the cluster to meter network egress traffic.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "BigQueryDestination": {
        "description": "Parameters for using BigQuery as the destination of resource usage export.",
        "properties": {
          "datasetId": {
            "description": "The ID of a BigQuery Dataset.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ConsumptionMeteringConfig": {
        "description": "Parameters for controlling consumption metering.",
        "properties": {
          "enabled": {
            "description": "Whether to enable consumption metering for this cluster. If enabled, a second BigQuery table will be created to hold resource consumption records.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "SecurityPostureConfig": {
        "description": "SecurityPostureConfig defines the flags needed to enable/disable features for the Security Posture API.",
        "properties": {
          "mode": {
            "description": "Sets which mode to use for Security Posture features.",
            "enum": [
              "MODE_UNSPECIFIED",
              "DISABLED",
              "BASIC"
            ],
            "type": "string"
          },
          "vulnerabilityMode": {
            "description": "Sets which mode to use for vulnerability scanning.",
            "enum": [
              "VULNERABILITY_MODE_UNSPECIFIED",
              "VULNERABILITY_DISABLED",
              "VULNERABILITY_BASIC",
              "VULNERABILITY_ENTERPRISE"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServiceExternalIPsConfig": {
        "description": "Config to block services with externalIPs field.",
        "properties": {
          "enabled": {
            "description": "Whether Services with ExternalIPs field are allowed or not.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ShieldedNodes": {
        "description": "Configuration of Shielded Nodes feature.",
        "properties": {
          "enabled": {
            "description": "Whether Shielded Nodes features are enabled on all nodes in this cluster.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "TpuConfig": {
        "description": "Configuration for Cloud TPU.",
        "properties": {
          "enabled": {
            "description": "Whether Cloud TPU integration is enabled or not.",
            "type": "boolean"
          },
          "ipv4CidrBlock": {
            "description": "IPv4 CIDR block reserved for Cloud TPU in the VPC.",
            "type": "string"
          },
          "useServiceNetworking": {
            "description": "Whether to use service networking for Cloud TPU or not.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "VerticalPodAutoscaling": {
        "description": "VerticalPodAutoscaling contains global, per-cluster information required by Vertical Pod Autoscaler to automatically adjust the resources of pods controlled by it.",
        "properties": {
          "enabled": {
            "description": "Enables vertical pod autoscaling.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "WorkloadALTSConfig": {
        "description": "Configuration for direct-path (via ALTS) with workload identity.",
        "properties": {
          "enableAlts": {
            "description": "enable_alts controls whether the alts handshaker should be enabled or not for direct-path. Requires Workload Identity (workload_pool must be non-empty).",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "WorkloadCertificates": {
        "description": "Configuration for issuance of mTLS keys and certificates to Kubernetes pods.",
        "properties": {
          "enableCertificates": {
            "description": "enable_certificates controls issuance of workload mTLS certificates. If set, the GKE Workload Identity Certificates controller and node agent will be deployed in the cluster, which can then be configured by creating a WorkloadCertificateConfig Custom Resource. Requires Workload Identity (workload_pool must be non-empty).",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "WorkloadIdentityConfig": {
        "description": "Configuration for the use of Kubernetes Service Accounts in GCP IAM policies.",
        "properties": {
          "identityNamespace": {
            "deprecated": true,
            "description": "IAM Identity Namespace to attach all Kubernetes Service Accounts to.",
            "type": "string"
          },
          "identityProvider": {
            "description": "identity provider is the third party identity provider.",
            "type": "string"
          },
          "workloadPool": {
            "description": "The workload pool to attach all Kubernetes service accounts to.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "https://container.googleapis.com//v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "This operation resource represents operations that may have happened or are happening on the cluster. All fields are output only.",
        "**Key properties:**",
        {
          "$ul": [
            "**clusterConditions**: Which conditions caused the current cluster state. Deprecated. Use field error instead.",
            "**detail**: Detailed operation progress, if available.",
            "**endTime**: [Output only] The time the operation completed, in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.",
            [
              "**error**: The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
              {
                "$ul": [
                  "**code**: The status code, which should be an enum value of google.rpc.Code.",
                  "**details**: A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                  "**message**: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                ]
              }
            ],
            "**location**: [Output only] The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones#available) or [region](https://cloud.google.com/compute/docs/regions-zones/regions-zones#available) in which the cluster resides.",
            "**name**: The server-assigned ID for the operation.",
            "**nodepoolConditions**: Which conditions caused the current node pool state. Deprecated. Use field error instead.",
            "**operationType**: The operation type.",
            [
              "**progress**: Information about operation (or operation stage) progress.",
              {
                "$ul": [
                  "**metrics**: Progress metric bundle, for example: metrics: [{name: \"nodes done\", int_value: 15}, {name: \"nodes total\", int_value: 32}] or metrics: [{name: \"progress\", double_value: 0.56}, {name: \"progress scale\", double_value: 1.0}]",
                  "**name**: A non-parameterized string describing an operation stage. Unset for single-stage operations.",
                  "**stages**: Substages of an operation or a stage.",
                  "**status**: Status of an operation stage. Unset for single-stage operations."
                ]
              }
            ],
            "**selfLink**: Server-defined URI for the operation. Example: `https://container.googleapis.com/v1alpha1/projects/123/locations/us-central1/operations/operation-123`.",
            "**startTime**: [Output only] The time the operation started, in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.",
            "**status**: The current status of the operation.",
            "**statusMessage**: Output only. If an error has occurred, a textual description of the error. Deprecated. Use field error instead.",
            "**targetLink**: Server-defined URI for the target of the operation. The format of this is a URI to the resource being modified (such as a cluster, node pool, or node). For node pool repairs, there may be multiple nodes being repaired, but only one will be the target. Examples: - ## `https://container.googleapis.com/v1/projects/123/locations/us-central1/clusters/my-cluster` ## `https://container.googleapis.com/v1/projects/123/zones/us-central1-c/clusters/my-cluster/nodePools/my-np` `https://container.googleapis.com/v1/projects/123/zones/us-central1-c/clusters/my-cluster/nodePools/my-np/node/my-node`",
            "**zone**: The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the operation is taking place. This field is deprecated, use location instead."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
