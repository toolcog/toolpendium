{
  "name": "discoveryengine_projects_locations_dataStores_conversations_converse",
  "description": "Converses a conversation.",
  "parameters": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "Required. The resource name of the Conversation to get. Format: `projects/{project_number}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversation_id}`. Use `projects/{project_number}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}/conversations/-` to activate auto session mode, which automatically creates a new conversation inside a ConverseConversation session."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleCloudDiscoveryengineV1betaConverseConversationRequest"
      }
    },
    "required": [
      "name"
    ],
    "$defs": {
      "GoogleCloudDiscoveryengineV1betaConverseConversationRequest": {
        "description": "Request message for ConversationalSearchService.ConverseConversation method.",
        "properties": {
          "boostSpec": {
            "$ref": "#/$defs/GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpec"
          },
          "conversation": {
            "$ref": "#/$defs/GoogleCloudDiscoveryengineV1betaConversation"
          },
          "filter": {
            "description": "The filter syntax consists of an expression language for constructing a predicate from one or more fields of the documents being filtered. Filter expression is case-sensitive. This will be used to filter search results which may affect the summary response. If this field is unrecognizable, an `INVALID_ARGUMENT` is returned. Filtering in Vertex AI Search is done by mapping the LHS filter key to a key property defined in the Vertex AI Search backend -- this mapping is defined by the customer in their schema. For example a media customer might have a field 'name' in their schema. In this case the filter would look like this: filter --> name:'ANY(\"king kong\")' For more information about filtering including syntax and filter operators, see [Filter](https://cloud.google.com/generative-ai-app-builder/docs/filter-search-metadata)",
            "type": "string"
          },
          "query": {
            "$ref": "#/$defs/GoogleCloudDiscoveryengineV1betaTextInput"
          },
          "safeSearch": {
            "description": "Whether to turn on safe search.",
            "type": "boolean"
          },
          "servingConfig": {
            "description": "The resource name of the Serving Config to use. Format: `projects/{project_number}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}/servingConfigs/{serving_config_id}` If this is not set, the default serving config will be used.",
            "type": "string"
          },
          "summarySpec": {
            "$ref": "#/$defs/GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec"
          },
          "userLabels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The user labels applied to a resource must meet the following requirements: * Each resource can have multiple labels, up to a maximum of 64. * Each label must be a key-value pair. * Keys have a minimum length of 1 character and a maximum length of 63 characters and cannot be empty. Values can be empty and have a maximum length of 63 characters. * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. All characters must use UTF-8 encoding, and international characters are allowed. * The key portion of a label must be unique. However, you can use the same key with multiple resources. * Keys must start with a lowercase letter or international character. See [Google Cloud Document](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements) for more details.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpec": {
        "description": "Boost specification to boost certain documents.",
        "properties": {
          "conditionBoostSpecs": {
            "description": "Condition boost specifications. If a document matches multiple conditions in the specifictions, boost scores from these specifications are all applied and combined in a non-linear way. Maximum number of specifications is 20.",
            "items": {
              "$ref": "#/$defs/GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpecConditionBoostSpec"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpecConditionBoostSpec": {
        "description": "Boost applies to documents which match a condition.",
        "properties": {
          "boost": {
            "description": "Strength of the condition boost, which should be in [-1, 1]. Negative boost means demotion. Default is 0.0. Setting to 1.0 gives the document a big promotion. However, it does not necessarily mean that the boosted document will be the top result at all times, nor that other documents will be excluded. Results could still be shown even when none of them matches the condition. And results that are significantly more relevant to the search query can still trump your heavily favored but irrelevant documents. Setting to -1.0 gives the document a big demotion. However, results that are deeply relevant might still be shown. The document will have an upstream battle to get a fairly high ranking, but it is not blocked out completely. Setting to 0.0 means no boost applied. The boosting condition is ignored.",
            "format": "float",
            "type": "number"
          },
          "condition": {
            "description": "An expression which specifies a boost condition. The syntax and supported fields are the same as a filter expression. See SearchRequest.filter for detail syntax and limitations. Examples: * To boost documents with document ID \"doc_1\" or \"doc_2\", and color \"Red\" or \"Blue\": * (document_id: ANY(\"doc_1\", \"doc_2\")) AND (color: ANY(\"Red\", \"Blue\"))",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDiscoveryengineV1betaConversation": {
        "description": "External conversation proto definition.",
        "properties": {
          "endTime": {
            "description": "Output only. The time the conversation finished.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "messages": {
            "description": "Conversation messages.",
            "items": {
              "$ref": "#/$defs/GoogleCloudDiscoveryengineV1betaConversationMessage"
            },
            "type": "array"
          },
          "name": {
            "description": "Immutable. Fully qualified name `project/*/locations/global/collections/{collection}/dataStore/*/conversations/*` or `project/*/locations/global/collections/{collection}/engines/*/conversations/*`.",
            "type": "string"
          },
          "startTime": {
            "description": "Output only. The time the conversation started.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "state": {
            "description": "The state of the Conversation.",
            "enum": [
              "STATE_UNSPECIFIED",
              "IN_PROGRESS",
              "COMPLETED"
            ],
            "type": "string"
          },
          "userPseudoId": {
            "description": "A unique identifier for tracking users.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDiscoveryengineV1betaConversationMessage": {
        "description": "Defines a conversation message.",
        "properties": {
          "createTime": {
            "description": "Output only. Message creation timestamp.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "reply": {
            "$ref": "#/$defs/GoogleCloudDiscoveryengineV1betaReply"
          },
          "userInput": {
            "$ref": "#/$defs/GoogleCloudDiscoveryengineV1betaTextInput"
          }
        },
        "type": "object"
      },
      "GoogleCloudDiscoveryengineV1betaReply": {
        "description": "Defines a reply message to user.",
        "properties": {
          "references": {
            "deprecated": true,
            "description": "References in the reply.",
            "items": {
              "$ref": "#/$defs/GoogleCloudDiscoveryengineV1betaReplyReference"
            },
            "type": "array"
          },
          "reply": {
            "deprecated": true,
            "description": "DEPRECATED: use `summary` instead. Text reply.",
            "type": "string"
          },
          "summary": {
            "$ref": "#/$defs/GoogleCloudDiscoveryengineV1betaSearchResponseSummary"
          }
        },
        "type": "object"
      },
      "GoogleCloudDiscoveryengineV1betaReplyReference": {
        "deprecated": true,
        "description": "Defines reference in reply.",
        "properties": {
          "anchorText": {
            "description": "Anchor text.",
            "type": "string"
          },
          "end": {
            "description": "Anchor text end index.",
            "format": "int32",
            "type": "integer"
          },
          "start": {
            "description": "Anchor text start index.",
            "format": "int32",
            "type": "integer"
          },
          "uri": {
            "description": "URI link reference.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDiscoveryengineV1betaSearchResponseSummary": {
        "description": "Summary of the top N search result specified by the summary spec.",
        "properties": {
          "safetyAttributes": {
            "$ref": "#/$defs/GoogleCloudDiscoveryengineV1betaSearchResponseSummarySafetyAttributes"
          },
          "summarySkippedReasons": {
            "description": "Additional summary-skipped reasons. This provides the reason for ignored cases. If nothing is skipped, this field is not set.",
            "items": {
              "enum": [
                "SUMMARY_SKIPPED_REASON_UNSPECIFIED",
                "ADVERSARIAL_QUERY_IGNORED",
                "NON_SUMMARY_SEEKING_QUERY_IGNORED",
                "OUT_OF_DOMAIN_QUERY_IGNORED",
                "POTENTIAL_POLICY_VIOLATION",
                "LLM_ADDON_NOT_ENABLED"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "summaryText": {
            "description": "The summary content.",
            "type": "string"
          },
          "summaryWithMetadata": {
            "$ref": "#/$defs/GoogleCloudDiscoveryengineV1betaSearchResponseSummarySummaryWithMetadata"
          }
        },
        "type": "object"
      },
      "GoogleCloudDiscoveryengineV1betaSearchResponseSummarySafetyAttributes": {
        "description": "Safety Attribute categories and their associated confidence scores.",
        "properties": {
          "categories": {
            "description": "The display names of Safety Attribute categories associated with the generated content. Order matches the Scores.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "scores": {
            "description": "The confidence scores of the each category, higher value means higher confidence. Order matches the Categories.",
            "items": {
              "format": "float",
              "type": "number"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudDiscoveryengineV1betaSearchResponseSummarySummaryWithMetadata": {
        "description": "Summary with metadata information.",
        "properties": {
          "citationMetadata": {
            "$ref": "#/$defs/GoogleCloudDiscoveryengineV1betaSearchResponseSummaryCitationMetadata"
          },
          "references": {
            "description": "Document References.",
            "items": {
              "$ref": "#/$defs/GoogleCloudDiscoveryengineV1betaSearchResponseSummaryReference"
            },
            "type": "array"
          },
          "summary": {
            "description": "Summary text with no citation information.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDiscoveryengineV1betaSearchResponseSummaryCitationMetadata": {
        "description": "Citation metadata.",
        "properties": {
          "citations": {
            "description": "Citations for segments.",
            "items": {
              "$ref": "#/$defs/GoogleCloudDiscoveryengineV1betaSearchResponseSummaryCitation"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudDiscoveryengineV1betaSearchResponseSummaryCitation": {
        "description": "Citation info for a segment.",
        "properties": {
          "endIndex": {
            "description": "End of the attributed segment, exclusive.",
            "format": "int64",
            "type": "string"
          },
          "sources": {
            "description": "Citation sources for the attributed segment.",
            "items": {
              "$ref": "#/$defs/GoogleCloudDiscoveryengineV1betaSearchResponseSummaryCitationSource"
            },
            "type": "array"
          },
          "startIndex": {
            "description": "Index indicates the start of the segment, measured in bytes/unicode.",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDiscoveryengineV1betaSearchResponseSummaryCitationSource": {
        "description": "Citation source.",
        "properties": {
          "referenceIndex": {
            "description": "Document reference index from SummaryWithMetadata.references. It is 0-indexed and the value will be zero if the reference_index is not set explicitly.",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDiscoveryengineV1betaSearchResponseSummaryReference": {
        "description": "Document reference.",
        "properties": {
          "document": {
            "description": "Required. Document.name of the document. Full resource name of the referenced document, in the format `projects/*/locations/*/collections/*/dataStores/*/branches/*/documents/*`.",
            "type": "string"
          },
          "title": {
            "description": "Title of the document.",
            "type": "string"
          },
          "uri": {
            "description": "Cloud Storage or HTTP uri for the document.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDiscoveryengineV1betaTextInput": {
        "description": "Defines text input.",
        "properties": {
          "context": {
            "$ref": "#/$defs/GoogleCloudDiscoveryengineV1betaConversationContext"
          },
          "input": {
            "description": "Text input.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDiscoveryengineV1betaConversationContext": {
        "description": "Defines context of the conversation",
        "properties": {
          "activeDocument": {
            "description": "The current active document the user opened. It contains the document resource reference.",
            "type": "string"
          },
          "contextDocuments": {
            "description": "The current list of documents the user is seeing. It contains the document resource references.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec": {
        "description": "A specification for configuring a summary returned in a search response.",
        "properties": {
          "ignoreAdversarialQuery": {
            "description": "Specifies whether to filter out adversarial queries. The default value is `false`. Google employs search-query classification to detect adversarial queries. No summary is returned if the search query is classified as an adversarial query. For example, a user might ask a question regarding negative comments about the company or submit a query designed to generate unsafe, policy-violating output. If this field is set to `true`, we skip generating summaries for adversarial queries and return fallback messages instead.",
            "type": "boolean"
          },
          "ignoreNonSummarySeekingQuery": {
            "description": "Specifies whether to filter out queries that are not summary-seeking. The default value is `false`. Google employs search-query classification to detect summary-seeking queries. No summary is returned if the search query is classified as a non-summary seeking query. For example, `why is the sky blue` and `Who is the best soccer player in the world?` are summary-seeking queries, but `SFO airport` and `world cup 2026` are not. They are most likely navigational queries. If this field is set to `true`, we skip generating summaries for non-summary seeking queries and return fallback messages instead.",
            "type": "boolean"
          },
          "includeCitations": {
            "description": "Specifies whether to include citations in the summary. The default value is `false`. When this field is set to `true`, summaries include in-line citation numbers. Example summary including citations: BigQuery is Google Cloud's fully managed and completely serverless enterprise data warehouse [1]. BigQuery supports all data types, works across clouds, and has built-in machine learning and business intelligence, all within a unified platform [2, 3]. The citation numbers refer to the returned search results and are 1-indexed. For example, [1] means that the sentence is attributed to the first search result. [2, 3] means that the sentence is attributed to both the second and third search results.",
            "type": "boolean"
          },
          "languageCode": {
            "description": "Language code for Summary. Use language tags defined by [BCP47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt). Note: This is an experimental feature.",
            "type": "string"
          },
          "modelPromptSpec": {
            "$ref": "#/$defs/GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpecModelPromptSpec"
          },
          "modelSpec": {
            "$ref": "#/$defs/GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpecModelSpec"
          },
          "summaryResultCount": {
            "description": "The number of top results to generate the summary from. If the number of results returned is less than `summaryResultCount`, the summary is generated from all of the results. At most five results can be used to generate a summary.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpecModelPromptSpec": {
        "description": "Specification of the prompt to use with the model.",
        "properties": {
          "preamble": {
            "description": "Text at the beginning of the prompt that instructs the assistant. Examples are available in the user guide.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpecModelSpec": {
        "description": "Specification of the model.",
        "properties": {
          "version": {
            "description": "The model version used to generate the summary. Supported values are: * `stable`: string. Default value when no value is specified. Uses a generally available, fine-tuned version of the text-bison@001 model. * `preview`: string. (Public preview) Uses a fine-tuned version of the text-bison@002 model. This model works only for summaries in English.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://discoveryengine.googleapis.com//v1beta/{name}:converse{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Response message for ConversationalSearchService.ConverseConversation method.",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**conversation**: External conversation proto definition.",
              {
                "$ul": [
                  "**endTime**: Output only. The time the conversation finished.",
                  "**messages**: Conversation messages.",
                  "**name**: Immutable. Fully qualified name `project/*/locations/global/collections/{collection}/dataStore/*/conversations/*` or `project/*/locations/global/collections/{collection}/engines/*/conversations/*`.",
                  "**startTime**: Output only. The time the conversation started.",
                  "**state**: The state of the Conversation.",
                  "**userPseudoId**: A unique identifier for tracking users."
                ]
              }
            ],
            "**relatedQuestions**: Suggested related questions.",
            [
              "**reply**: Defines a reply message to user.",
              {
                "$ul": [
                  "**references**: References in the reply.",
                  "**reply**: DEPRECATED: use `summary` instead. Text reply.",
                  [
                    "**summary**: Summary of the top N search result specified by the summary spec.",
                    {
                      "$ul": [
                        [
                          "**safetyAttributes**: Safety Attribute categories and their associated confidence scores.",
                          {
                            "$ul": [
                              "**categories**: The display names of Safety Attribute categories associated with the generated content. Order matches the Scores.",
                              "**scores**: The confidence scores of the each category, higher value means higher confidence. Order matches the Categories."
                            ]
                          }
                        ],
                        "**summarySkippedReasons**: Additional summary-skipped reasons. This provides the reason for ignored cases. If nothing is skipped, this field is not set.",
                        "**summaryText**: The summary content.",
                        [
                          "**summaryWithMetadata**: Summary with metadata information.",
                          {
                            "$ul": [
                              [
                                "**citationMetadata**: Citation metadata.",
                                {
                                  "$ul": [
                                    "**citations**: Citations for segments."
                                  ]
                                }
                              ],
                              "**references**: Document References.",
                              "**summary**: Summary text with no citation information."
                            ]
                          }
                        ]
                      ]
                    }
                  ]
                ]
              }
            ],
            "**searchResults**: Search Results."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
