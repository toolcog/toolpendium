{
  "name": "discoveryengine_locations_widgetCompleteQuery",
  "description": "Performs a user input completion with keyword suggestion. Similar to the CompletionService.CompleteQuery method, but a widget version that allows CompleteQuery without API Key. It supports CompleteQuery with or without JWT token.",
  "parameters": {
    "type": "object",
    "properties": {
      "location": {
        "type": "string",
        "description": "Required. The location resource where widget complete query will be performed. Format: `locations/{location}`"
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleCloudDiscoveryengineV1alphaWidgetCompleteQueryRequest"
      }
    },
    "required": [
      "location"
    ],
    "$defs": {
      "GoogleCloudDiscoveryengineV1alphaWidgetCompleteQueryRequest": {
        "description": "Request message for WidgetService.WidgetCompleteQuery method.",
        "properties": {
          "additionalParams": {
            "$ref": "#/$defs/GoogleCloudDiscoveryengineV1alphaAdditionalParams"
          },
          "completeQueryRequest": {
            "$ref": "#/$defs/GoogleCloudDiscoveryengineV1alphaCompleteQueryRequest"
          },
          "configId": {
            "description": "Required. The UUID of the WidgetConfig. This field is used to identify the widget configuration, set of models used to make the auto complete query.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDiscoveryengineV1alphaAdditionalParams": {
        "description": "AdditionalParams message for WidgetService methods for security and privacy enhancement.",
        "properties": {
          "token": {
            "description": "Token that used for non-human user check.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDiscoveryengineV1alphaCompleteQueryRequest": {
        "description": "Request message for CompletionService.CompleteQuery method.",
        "properties": {
          "dataStore": {
            "description": "Required. The parent data store resource name for which the completion is performed, such as `projects/*/locations/global/collections/default_collection/dataStores/default_data_store`.",
            "type": "string"
          },
          "includeTailSuggestions": {
            "description": "Indicates if tail suggestions should be returned if there are no suggestions that match the full query. Even if set to true, if there are suggestions that match the full query, those are returned and no tail suggestions are returned.",
            "type": "boolean"
          },
          "query": {
            "description": "Required. The typeahead input used to fetch suggestions. Maximum length is 128 characters.",
            "type": "string"
          },
          "queryModel": {
            "description": "Specifies the autocomplete data model. This overrides any model specified in the Configuration > Autocomplete section of the Cloud console. Currently supported values: * `document` - Using suggestions generated from user-imported documents. * `search-history` - Using suggestions generated from the past history of SearchService.Search API calls. Do not use it when there is no traffic for Search API. * `user-event` - Using suggestions generated from user-imported search events. * `document-completable` - Using suggestions taken directly from user-imported document fields marked as completable. Default values: * `document` is the default model for regular dataStores. * `search-history` is the default model for site search dataStores.",
            "type": "string"
          },
          "userPseudoId": {
            "description": "A unique identifier for tracking visitors. For example, this could be implemented with an HTTP cookie, which should be able to uniquely identify a visitor on a single device. This unique identifier should not change if the visitor logs in or out of the website. This field should NOT have a fixed value such as `unknown_visitor`. This should be the same identifier as UserEvent.user_pseudo_id and SearchRequest.user_pseudo_id. The field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an `INVALID_ARGUMENT` error is returned.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://discoveryengine.googleapis.com//v1alpha/{location}/widgetCompleteQuery{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Response message for WidgetService.WidgetCompleteQuery method.",
        "**Key properties:**",
        {
          "$ul": [
            "**uToken**: The token in response.",
            "**widgetQuerySuggestions**: Results of the matched query suggestions in widget. The result list is ordered and the first result is a top suggestion."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
