{
  "name": "discoveryengine_projects_locations_dataStores_conversations_create",
  "description": "Creates a Conversation. If the Conversation to create already exists, an ALREADY_EXISTS error is returned.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. Full resource name of parent data store. Format: `projects/{project_number}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}`"
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleCloudDiscoveryengineV1alphaConversation"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "GoogleCloudDiscoveryengineV1alphaConversation": {
        "description": "External conversation proto definition.",
        "properties": {
          "endTime": {
            "description": "Output only. The time the conversation finished.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "messages": {
            "description": "Conversation messages.",
            "items": {
              "$ref": "#/$defs/GoogleCloudDiscoveryengineV1alphaConversationMessage"
            },
            "type": "array"
          },
          "name": {
            "description": "Immutable. Fully qualified name `project/*/locations/global/collections/{collection}/dataStore/*/conversations/*` or `project/*/locations/global/collections/{collection}/engines/*/conversations/*`.",
            "type": "string"
          },
          "startTime": {
            "description": "Output only. The time the conversation started.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "state": {
            "description": "The state of the Conversation.",
            "enum": [
              "STATE_UNSPECIFIED",
              "IN_PROGRESS",
              "COMPLETED"
            ],
            "type": "string"
          },
          "userPseudoId": {
            "description": "A unique identifier for tracking users.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDiscoveryengineV1alphaConversationMessage": {
        "description": "Defines a conversation message.",
        "properties": {
          "createTime": {
            "description": "Output only. Message creation timestamp.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "reply": {
            "$ref": "#/$defs/GoogleCloudDiscoveryengineV1alphaReply"
          },
          "userInput": {
            "$ref": "#/$defs/GoogleCloudDiscoveryengineV1alphaTextInput"
          }
        },
        "type": "object"
      },
      "GoogleCloudDiscoveryengineV1alphaReply": {
        "description": "Defines a reply message to user.",
        "properties": {
          "references": {
            "deprecated": true,
            "description": "References in the reply.",
            "items": {
              "$ref": "#/$defs/GoogleCloudDiscoveryengineV1alphaReplyReference"
            },
            "type": "array"
          },
          "reply": {
            "deprecated": true,
            "description": "DEPRECATED: use `summary` instead. Text reply.",
            "type": "string"
          },
          "summary": {
            "$ref": "#/$defs/GoogleCloudDiscoveryengineV1alphaSearchResponseSummary"
          }
        },
        "type": "object"
      },
      "GoogleCloudDiscoveryengineV1alphaReplyReference": {
        "deprecated": true,
        "description": "Defines reference in reply.",
        "properties": {
          "anchorText": {
            "description": "Anchor text.",
            "type": "string"
          },
          "end": {
            "description": "Anchor text end index.",
            "format": "int32",
            "type": "integer"
          },
          "start": {
            "description": "Anchor text start index.",
            "format": "int32",
            "type": "integer"
          },
          "uri": {
            "description": "URI link reference.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDiscoveryengineV1alphaSearchResponseSummary": {
        "description": "Summary of the top N search result specified by the summary spec.",
        "properties": {
          "safetyAttributes": {
            "$ref": "#/$defs/GoogleCloudDiscoveryengineV1alphaSearchResponseSummarySafetyAttributes"
          },
          "summarySkippedReasons": {
            "description": "Additional summary-skipped reasons. This provides the reason for ignored cases. If nothing is skipped, this field is not set.",
            "items": {
              "enum": [
                "SUMMARY_SKIPPED_REASON_UNSPECIFIED",
                "ADVERSARIAL_QUERY_IGNORED",
                "NON_SUMMARY_SEEKING_QUERY_IGNORED",
                "OUT_OF_DOMAIN_QUERY_IGNORED",
                "POTENTIAL_POLICY_VIOLATION",
                "LLM_ADDON_NOT_ENABLED"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "summaryText": {
            "description": "The summary content.",
            "type": "string"
          },
          "summaryWithMetadata": {
            "$ref": "#/$defs/GoogleCloudDiscoveryengineV1alphaSearchResponseSummarySummaryWithMetadata"
          }
        },
        "type": "object"
      },
      "GoogleCloudDiscoveryengineV1alphaSearchResponseSummarySafetyAttributes": {
        "description": "Safety Attribute categories and their associated confidence scores.",
        "properties": {
          "categories": {
            "description": "The display names of Safety Attribute categories associated with the generated content. Order matches the Scores.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "scores": {
            "description": "The confidence scores of the each category, higher value means higher confidence. Order matches the Categories.",
            "items": {
              "format": "float",
              "type": "number"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudDiscoveryengineV1alphaSearchResponseSummarySummaryWithMetadata": {
        "description": "Summary with metadata information.",
        "properties": {
          "citationMetadata": {
            "$ref": "#/$defs/GoogleCloudDiscoveryengineV1alphaSearchResponseSummaryCitationMetadata"
          },
          "references": {
            "description": "Document References.",
            "items": {
              "$ref": "#/$defs/GoogleCloudDiscoveryengineV1alphaSearchResponseSummaryReference"
            },
            "type": "array"
          },
          "summary": {
            "description": "Summary text with no citation information.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDiscoveryengineV1alphaSearchResponseSummaryCitationMetadata": {
        "description": "Citation metadata.",
        "properties": {
          "citations": {
            "description": "Citations for segments.",
            "items": {
              "$ref": "#/$defs/GoogleCloudDiscoveryengineV1alphaSearchResponseSummaryCitation"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudDiscoveryengineV1alphaSearchResponseSummaryCitation": {
        "description": "Citation info for a segment.",
        "properties": {
          "endIndex": {
            "description": "End of the attributed segment, exclusive.",
            "format": "int64",
            "type": "string"
          },
          "sources": {
            "description": "Citation sources for the attributed segment.",
            "items": {
              "$ref": "#/$defs/GoogleCloudDiscoveryengineV1alphaSearchResponseSummaryCitationSource"
            },
            "type": "array"
          },
          "startIndex": {
            "description": "Index indicates the start of the segment, measured in bytes/unicode.",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDiscoveryengineV1alphaSearchResponseSummaryCitationSource": {
        "description": "Citation source.",
        "properties": {
          "referenceIndex": {
            "description": "Document reference index from SummaryWithMetadata.references. It is 0-indexed and the value will be zero if the reference_index is not set explicitly.",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDiscoveryengineV1alphaSearchResponseSummaryReference": {
        "description": "Document reference.",
        "properties": {
          "document": {
            "description": "Required. Document.name of the document. Full resource name of the referenced document, in the format `projects/*/locations/*/collections/*/dataStores/*/branches/*/documents/*`.",
            "type": "string"
          },
          "title": {
            "description": "Title of the document.",
            "type": "string"
          },
          "uri": {
            "description": "Cloud Storage or HTTP uri for the document.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDiscoveryengineV1alphaTextInput": {
        "description": "Defines text input.",
        "properties": {
          "context": {
            "$ref": "#/$defs/GoogleCloudDiscoveryengineV1alphaConversationContext"
          },
          "input": {
            "description": "Text input.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudDiscoveryengineV1alphaConversationContext": {
        "description": "Defines context of the conversation",
        "properties": {
          "activeDocument": {
            "description": "The current active document the user opened. It contains the document resource reference.",
            "type": "string"
          },
          "contextDocuments": {
            "description": "The current list of documents the user is seeing. It contains the document resource references.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://discoveryengine.googleapis.com//v1alpha/{parent}/conversations{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "External conversation proto definition.",
        "**Key properties:**",
        {
          "$ul": [
            "**endTime**: Output only. The time the conversation finished.",
            "**messages**: Conversation messages.",
            "**name**: Immutable. Fully qualified name `project/*/locations/global/collections/{collection}/dataStore/*/conversations/*` or `project/*/locations/global/collections/{collection}/engines/*/conversations/*`.",
            "**startTime**: Output only. The time the conversation started.",
            "**state**: The state of the Conversation.",
            "**userPseudoId**: A unique identifier for tracking users."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
