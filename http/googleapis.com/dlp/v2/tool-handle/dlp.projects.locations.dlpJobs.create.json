{
  "name": "dlp_projects_locations_dlpJobs_create",
  "description": "Creates a new job to inspect storage or calculate risk metrics. See https://cloud.google.com/sensitive-data-protection/docs/inspecting-storage and https://cloud.google.com/sensitive-data-protection/docs/compute-risk-analysis to learn more. When no InfoTypes or CustomInfoTypes are specified in inspect jobs, the system will automatically choose what detectors to run. By default this may be all types, but may change over time as detectors are updated.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. Parent resource name. The format of this value varies depending on whether you have [specified a processing location](https://cloud.google.com/sensitive-data-protection/docs/specifying-location): + Projects scope, location specified: `projects/`PROJECT_ID`/locations/`LOCATION_ID + Projects scope, no location specified (defaults to global): `projects/`PROJECT_ID The following example `parent` string specifies a parent project with the identifier `example-project`, and specifies the `europe-west3` location for processing data: parent=projects/example-project/locations/europe-west3"
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GooglePrivacyDlpV2CreateDlpJobRequest"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "GooglePrivacyDlpV2CreateDlpJobRequest": {
        "description": "Request message for CreateDlpJobRequest. Used to initiate long running jobs such as calculating risk metrics or inspecting Google Cloud Storage.",
        "properties": {
          "inspectJob": {
            "$ref": "#/$defs/GooglePrivacyDlpV2InspectJobConfig"
          },
          "jobId": {
            "description": "The job id can contain uppercase and lowercase letters, numbers, and hyphens; that is, it must match the regular expression: `[a-zA-Z\\d-_]+`. The maximum length is 100 characters. Can be empty to allow the system to generate one.",
            "type": "string"
          },
          "locationId": {
            "description": "Deprecated. This field has no effect.",
            "type": "string"
          },
          "riskJob": {
            "$ref": "#/$defs/GooglePrivacyDlpV2RiskAnalysisJobConfig"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2InspectJobConfig": {
        "description": "Controls what and how to inspect for findings.",
        "properties": {
          "actions": {
            "description": "Actions to execute at the completion of the job.",
            "items": {
              "$ref": "#/$defs/GooglePrivacyDlpV2Action"
            },
            "type": "array"
          },
          "inspectConfig": {
            "$ref": "#/$defs/GooglePrivacyDlpV2InspectConfig"
          },
          "inspectTemplateName": {
            "description": "If provided, will be used as the default for all values in InspectConfig. `inspect_config` will be merged into the values persisted as part of the template.",
            "type": "string"
          },
          "storageConfig": {
            "$ref": "#/$defs/GooglePrivacyDlpV2StorageConfig"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2Action": {
        "description": "A task to execute on the completion of a job. See https://cloud.google.com/sensitive-data-protection/docs/concepts-actions to learn more.",
        "properties": {
          "deidentify": {
            "$ref": "#/$defs/GooglePrivacyDlpV2Deidentify"
          },
          "jobNotificationEmails": {
            "$ref": "#/$defs/GooglePrivacyDlpV2JobNotificationEmails"
          },
          "pubSub": {
            "$ref": "#/$defs/GooglePrivacyDlpV2PublishToPubSub"
          },
          "publishFindingsToCloudDataCatalog": {
            "$ref": "#/$defs/GooglePrivacyDlpV2PublishFindingsToCloudDataCatalog"
          },
          "publishSummaryToCscc": {
            "$ref": "#/$defs/GooglePrivacyDlpV2PublishSummaryToCscc"
          },
          "publishToStackdriver": {
            "$ref": "#/$defs/GooglePrivacyDlpV2PublishToStackdriver"
          },
          "saveFindings": {
            "$ref": "#/$defs/GooglePrivacyDlpV2SaveFindings"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2Deidentify": {
        "description": "Create a de-identified copy of the requested table or files. A TransformationDetail will be created for each transformation. If any rows in BigQuery are skipped during de-identification (transformation errors or row size exceeds BigQuery insert API limits) they are placed in the failure output table. If the original row exceeds the BigQuery insert API limit it will be truncated when written to the failure output table. The failure output table can be set in the action.deidentify.output.big_query_output.deidentified_failure_output_table field, if no table is set, a table will be automatically created in the same project and dataset as the original table. Compatible with: Inspect",
        "properties": {
          "cloudStorageOutput": {
            "description": "Required. User settable Cloud Storage bucket and folders to store de-identified files. This field must be set for cloud storage deidentification. The output Cloud Storage bucket must be different from the input bucket. De-identified files will overwrite files in the output path. Form of: gs://bucket/folder/ or gs://bucket",
            "type": "string"
          },
          "fileTypesToTransform": {
            "description": "List of user-specified file type groups to transform. If specified, only the files with these filetypes will be transformed. If empty, all supported files will be transformed. Supported types may be automatically added over time. If a file type is set in this field that isn't supported by the Deidentify action then the job will fail and will not be successfully created/started. Currently the only filetypes supported are: IMAGES, TEXT_FILES, CSV, TSV.",
            "items": {
              "enum": [
                "FILE_TYPE_UNSPECIFIED",
                "BINARY_FILE",
                "TEXT_FILE",
                "IMAGE",
                "WORD",
                "PDF",
                "AVRO",
                "CSV",
                "TSV",
                "POWERPOINT",
                "EXCEL"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "transformationConfig": {
            "$ref": "#/$defs/GooglePrivacyDlpV2TransformationConfig"
          },
          "transformationDetailsStorageConfig": {
            "$ref": "#/$defs/GooglePrivacyDlpV2TransformationDetailsStorageConfig"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2TransformationConfig": {
        "description": "User specified templates and configs for how to deidentify structured, unstructures, and image files. User must provide either a unstructured deidentify template or at least one redact image config.",
        "properties": {
          "deidentifyTemplate": {
            "description": "De-identify template. If this template is specified, it will serve as the default de-identify template. This template cannot contain `record_transformations` since it can be used for unstructured content such as free-form text files. If this template is not set, a default `ReplaceWithInfoTypeConfig` will be used to de-identify unstructured content.",
            "type": "string"
          },
          "imageRedactTemplate": {
            "description": "Image redact template. If this template is specified, it will serve as the de-identify template for images. If this template is not set, all findings in the image will be redacted with a black box.",
            "type": "string"
          },
          "structuredDeidentifyTemplate": {
            "description": "Structured de-identify template. If this template is specified, it will serve as the de-identify template for structured content such as delimited files and tables. If this template is not set but the `deidentify_template` is set, then `deidentify_template` will also apply to the structured content. If neither template is set, a default `ReplaceWithInfoTypeConfig` will be used to de-identify structured content.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2TransformationDetailsStorageConfig": {
        "description": "Config for storing transformation details.",
        "properties": {
          "table": {
            "$ref": "#/$defs/GooglePrivacyDlpV2BigQueryTable"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2BigQueryTable": {
        "description": "Message defining the location of a BigQuery table. A table is uniquely identified by its project_id, dataset_id, and table_name. Within a query a table is often referenced with a string in the format of: `:.` or `..`.",
        "properties": {
          "datasetId": {
            "description": "Dataset ID of the table.",
            "type": "string"
          },
          "projectId": {
            "description": "The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call.",
            "type": "string"
          },
          "tableId": {
            "description": "Name of the table.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2JobNotificationEmails": {
        "description": "Sends an email when the job completes. The email goes to IAM project owners and technical [Essential Contacts](https://cloud.google.com/resource-manager/docs/managing-notification-contacts).",
        "properties": {},
        "type": "object"
      },
      "GooglePrivacyDlpV2PublishToPubSub": {
        "description": "Publish a message into a given Pub/Sub topic when DlpJob has completed. The message contains a single field, `DlpJobName`, which is equal to the finished job's [`DlpJob.name`](https://cloud.google.com/sensitive-data-protection/docs/reference/rest/v2/projects.dlpJobs#DlpJob). Compatible with: Inspect, Risk",
        "properties": {
          "topic": {
            "description": "Cloud Pub/Sub topic to send notifications to. The topic must have given publishing access rights to the DLP API service account executing the long running DlpJob sending the notifications. Format is projects/{project}/topics/{topic}.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2PublishFindingsToCloudDataCatalog": {
        "description": "Publish findings of a DlpJob to Data Catalog. In Data Catalog, tag templates are applied to the resource that Cloud DLP scanned. Data Catalog tag templates are stored in the same project and region where the BigQuery table exists. For Cloud DLP to create and apply the tag template, the Cloud DLP service agent must have the `roles/datacatalog.tagTemplateOwner` permission on the project. The tag template contains fields summarizing the results of the DlpJob. Any field values previously written by another DlpJob are deleted. InfoType naming patterns are strictly enforced when using this feature. Findings are persisted in Data Catalog storage and are governed by service-specific policies for Data Catalog. For more information, see [Service Specific Terms](https://cloud.google.com/terms/service-terms). Only a single instance of this action can be specified. This action is allowed only if all resources being scanned are BigQuery tables. Compatible with: Inspect",
        "properties": {},
        "type": "object"
      },
      "GooglePrivacyDlpV2PublishSummaryToCscc": {
        "description": "Publish the result summary of a DlpJob to [Security Command Center](https://cloud.google.com/security-command-center). This action is available for only projects that belong to an organization. This action publishes the count of finding instances and their infoTypes. The summary of findings are persisted in Security Command Center and are governed by [service-specific policies for Security Command Center](https://cloud.google.com/terms/service-terms). Only a single instance of this action can be specified. Compatible with: Inspect",
        "properties": {},
        "type": "object"
      },
      "GooglePrivacyDlpV2PublishToStackdriver": {
        "description": "Enable Stackdriver metric dlp.googleapis.com/finding_count. This will publish a metric to stack driver on each infotype requested and how many findings were found for it. CustomDetectors will be bucketed as 'Custom' under the Stackdriver label 'info_type'.",
        "properties": {},
        "type": "object"
      },
      "GooglePrivacyDlpV2SaveFindings": {
        "description": "If set, the detailed findings will be persisted to the specified OutputStorageConfig. Only a single instance of this action can be specified. Compatible with: Inspect, Risk",
        "properties": {
          "outputConfig": {
            "$ref": "#/$defs/GooglePrivacyDlpV2OutputStorageConfig"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2OutputStorageConfig": {
        "description": "Cloud repository for storing output.",
        "properties": {
          "outputSchema": {
            "description": "Schema used for writing the findings for Inspect jobs. This field is only used for Inspect and must be unspecified for Risk jobs. Columns are derived from the `Finding` object. If appending to an existing table, any columns from the predefined schema that are missing will be added. No columns in the existing table will be deleted. If unspecified, then all available columns will be used for a new table or an (existing) table with no schema, and no changes will be made to an existing table that has a schema. Only for use with external storage.",
            "enum": [
              "OUTPUT_SCHEMA_UNSPECIFIED",
              "BASIC_COLUMNS",
              "GCS_COLUMNS",
              "DATASTORE_COLUMNS",
              "BIG_QUERY_COLUMNS",
              "ALL_COLUMNS"
            ],
            "type": "string"
          },
          "table": {
            "$ref": "#/$defs/GooglePrivacyDlpV2BigQueryTable"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2InspectConfig": {
        "description": "Configuration description of the scanning process. When used with redactContent only info_types and min_likelihood are currently used.",
        "properties": {
          "contentOptions": {
            "description": "Deprecated and unused.",
            "items": {
              "enum": [
                "CONTENT_UNSPECIFIED",
                "CONTENT_TEXT",
                "CONTENT_IMAGE"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "customInfoTypes": {
            "description": "CustomInfoTypes provided by the user. See https://cloud.google.com/sensitive-data-protection/docs/creating-custom-infotypes to learn more.",
            "items": {
              "$ref": "#/$defs/GooglePrivacyDlpV2CustomInfoType"
            },
            "type": "array"
          },
          "excludeInfoTypes": {
            "description": "When true, excludes type information of the findings. This is not used for data profiling.",
            "type": "boolean"
          },
          "includeQuote": {
            "description": "When true, a contextual quote from the data that triggered a finding is included in the response; see Finding.quote. This is not used for data profiling.",
            "type": "boolean"
          },
          "infoTypes": {
            "description": "Restricts what info_types to look for. The values must correspond to InfoType values returned by ListInfoTypes or listed at https://cloud.google.com/sensitive-data-protection/docs/infotypes-reference. When no InfoTypes or CustomInfoTypes are specified in a request, the system may automatically choose a default list of detectors to run, which may change over time. If you need precise control and predictability as to what detectors are run you should specify specific InfoTypes listed in the reference, otherwise a default list will be used, which may change over time.",
            "items": {
              "$ref": "#/$defs/GooglePrivacyDlpV2InfoType"
            },
            "type": "array"
          },
          "limits": {
            "$ref": "#/$defs/GooglePrivacyDlpV2FindingLimits"
          },
          "minLikelihood": {
            "description": "Only returns findings equal to or above this threshold. The default is POSSIBLE. In general, the highest likelihood setting yields the fewest findings in results and the lowest chance of a false positive. For more information, see [Match likelihood](https://cloud.google.com/sensitive-data-protection/docs/likelihood).",
            "enum": [
              "LIKELIHOOD_UNSPECIFIED",
              "VERY_UNLIKELY",
              "UNLIKELY",
              "POSSIBLE",
              "LIKELY",
              "VERY_LIKELY"
            ],
            "type": "string"
          },
          "minLikelihoodPerInfoType": {
            "description": "Minimum likelihood per infotype. For each infotype, a user can specify a minimum likelihood. The system only returns a finding if its likelihood is above this threshold. If this field is not set, the system uses the InspectConfig min_likelihood.",
            "items": {
              "$ref": "#/$defs/GooglePrivacyDlpV2InfoTypeLikelihood"
            },
            "type": "array"
          },
          "ruleSet": {
            "description": "Set of rules to apply to the findings for this InspectConfig. Exclusion rules, contained in the set are executed in the end, other rules are executed in the order they are specified for each info type.",
            "items": {
              "$ref": "#/$defs/GooglePrivacyDlpV2InspectionRuleSet"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2CustomInfoType": {
        "description": "Custom information type provided by the user. Used to find domain-specific sensitive information configurable to the data in question.",
        "properties": {
          "detectionRules": {
            "description": "Set of detection rules to apply to all findings of this CustomInfoType. Rules are applied in order that they are specified. Not supported for the `surrogate_type` CustomInfoType.",
            "items": {
              "$ref": "#/$defs/GooglePrivacyDlpV2DetectionRule"
            },
            "type": "array"
          },
          "dictionary": {
            "$ref": "#/$defs/GooglePrivacyDlpV2Dictionary"
          },
          "exclusionType": {
            "description": "If set to EXCLUSION_TYPE_EXCLUDE this infoType will not cause a finding to be returned. It still can be used for rules matching.",
            "enum": [
              "EXCLUSION_TYPE_UNSPECIFIED",
              "EXCLUSION_TYPE_EXCLUDE"
            ],
            "type": "string"
          },
          "infoType": {
            "$ref": "#/$defs/GooglePrivacyDlpV2InfoType"
          },
          "likelihood": {
            "description": "Likelihood to return for this CustomInfoType. This base value can be altered by a detection rule if the finding meets the criteria specified by the rule. Defaults to `VERY_LIKELY` if not specified.",
            "enum": [
              "LIKELIHOOD_UNSPECIFIED",
              "VERY_UNLIKELY",
              "UNLIKELY",
              "POSSIBLE",
              "LIKELY",
              "VERY_LIKELY"
            ],
            "type": "string"
          },
          "regex": {
            "$ref": "#/$defs/GooglePrivacyDlpV2Regex"
          },
          "sensitivityScore": {
            "$ref": "#/$defs/GooglePrivacyDlpV2SensitivityScore"
          },
          "storedType": {
            "$ref": "#/$defs/GooglePrivacyDlpV2StoredType"
          },
          "surrogateType": {
            "$ref": "#/$defs/GooglePrivacyDlpV2SurrogateType"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2DetectionRule": {
        "description": "Deprecated; use `InspectionRuleSet` instead. Rule for modifying a `CustomInfoType` to alter behavior under certain circumstances, depending on the specific details of the rule. Not supported for the `surrogate_type` custom infoType.",
        "properties": {
          "hotwordRule": {
            "$ref": "#/$defs/GooglePrivacyDlpV2HotwordRule"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2HotwordRule": {
        "description": "The rule that adjusts the likelihood of findings within a certain proximity of hotwords.",
        "properties": {
          "hotwordRegex": {
            "$ref": "#/$defs/GooglePrivacyDlpV2Regex"
          },
          "likelihoodAdjustment": {
            "$ref": "#/$defs/GooglePrivacyDlpV2LikelihoodAdjustment"
          },
          "proximity": {
            "$ref": "#/$defs/GooglePrivacyDlpV2Proximity"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2Regex": {
        "description": "Message defining a custom regular expression.",
        "properties": {
          "groupIndexes": {
            "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included.",
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array"
          },
          "pattern": {
            "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2LikelihoodAdjustment": {
        "description": "Message for specifying an adjustment to the likelihood of a finding as part of a detection rule.",
        "properties": {
          "fixedLikelihood": {
            "description": "Set the likelihood of a finding to a fixed value.",
            "enum": [
              "LIKELIHOOD_UNSPECIFIED",
              "VERY_UNLIKELY",
              "UNLIKELY",
              "POSSIBLE",
              "LIKELY",
              "VERY_LIKELY"
            ],
            "type": "string"
          },
          "relativeLikelihood": {
            "description": "Increase or decrease the likelihood by the specified number of levels. For example, if a finding would be `POSSIBLE` without the detection rule and `relative_likelihood` is 1, then it is upgraded to `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`. Likelihood may never drop below `VERY_UNLIKELY` or exceed `VERY_LIKELY`, so applying an adjustment of 1 followed by an adjustment of -1 when base likelihood is `VERY_LIKELY` will result in a final likelihood of `LIKELY`.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2Proximity": {
        "description": "Message for specifying a window around a finding to apply a detection rule.",
        "properties": {
          "windowAfter": {
            "description": "Number of characters after the finding to consider.",
            "format": "int32",
            "type": "integer"
          },
          "windowBefore": {
            "description": "Number of characters before the finding to consider. For tabular data, if you want to modify the likelihood of an entire column of findngs, set this to 1. For more information, see [Hotword example: Set the match likelihood of a table column] (https://cloud.google.com/sensitive-data-protection/docs/creating-custom-infotypes-likelihood#match-column-values).",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2Dictionary": {
        "description": "Custom information type based on a dictionary of words or phrases. This can be used to match sensitive information specific to the data, such as a list of employee IDs or job titles. Dictionary words are case-insensitive and all characters other than letters and digits in the unicode [Basic Multilingual Plane](https://en.wikipedia.org/wiki/Plane_%28Unicode%29#Basic_Multilingual_Plane) will be replaced with whitespace when scanning for matches, so the dictionary phrase \"Sam Johnson\" will match all three phrases \"sam johnson\", \"Sam, Johnson\", and \"Sam (Johnson)\". Additionally, the characters surrounding any match must be of a different type than the adjacent characters within the word, so letters must be next to non-letters and digits next to non-digits. For example, the dictionary word \"jen\" will match the first three letters of the text \"jen123\" but will return no matches for \"jennifer\". Dictionary words containing a large number of characters that are not letters or digits may result in unexpected findings because such characters are treated as whitespace. The [limits](https://cloud.google.com/sensitive-data-protection/limits) page contains details about the size limits of dictionaries. For dictionaries that do not fit within these constraints, consider using `LargeCustomDictionaryConfig` in the `StoredInfoType` API.",
        "properties": {
          "cloudStoragePath": {
            "$ref": "#/$defs/GooglePrivacyDlpV2CloudStoragePath"
          },
          "wordList": {
            "$ref": "#/$defs/GooglePrivacyDlpV2WordList"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2CloudStoragePath": {
        "description": "Message representing a single file or path in Cloud Storage.",
        "properties": {
          "path": {
            "description": "A URL representing a file or path (no wildcards) in Cloud Storage. Example: `gs://[BUCKET_NAME]/dictionary.txt`",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2WordList": {
        "description": "Message defining a list of words or phrases to search for in the data.",
        "properties": {
          "words": {
            "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2InfoType": {
        "description": "Type of information detected by the API.",
        "properties": {
          "name": {
            "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/sensitive-data-protection/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$_-]{1,64}`.",
            "type": "string"
          },
          "sensitivityScore": {
            "$ref": "#/$defs/GooglePrivacyDlpV2SensitivityScore"
          },
          "version": {
            "description": "Optional version name for this InfoType.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2SensitivityScore": {
        "description": "Score is calculated from of all elements in the data profile. A higher level means the data is more sensitive.",
        "properties": {
          "score": {
            "description": "The sensitivity score applied to the resource.",
            "enum": [
              "SENSITIVITY_SCORE_UNSPECIFIED",
              "SENSITIVITY_LOW",
              "SENSITIVITY_MODERATE",
              "SENSITIVITY_HIGH"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2StoredType": {
        "description": "A reference to a StoredInfoType to use with scanning.",
        "properties": {
          "createTime": {
            "description": "Timestamp indicating when the version of the `StoredInfoType` used for inspection was created. Output-only field, populated by the system.",
            "format": "google-datetime",
            "type": "string"
          },
          "name": {
            "description": "Resource name of the requested `StoredInfoType`, for example `organizations/433245324/storedInfoTypes/432452342` or `projects/project-id/storedInfoTypes/432452342`.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2SurrogateType": {
        "description": "Message for detecting output from deidentification transformations such as [`CryptoReplaceFfxFpeConfig`](https://cloud.google.com/sensitive-data-protection/docs/reference/rest/v2/organizations.deidentifyTemplates#cryptoreplaceffxfpeconfig). These types of transformations are those that perform pseudonymization, thereby producing a \"surrogate\" as output. This should be used in conjunction with a field on the transformation such as `surrogate_info_type`. This CustomInfoType does not support the use of `detection_rules`.",
        "properties": {},
        "type": "object"
      },
      "GooglePrivacyDlpV2FindingLimits": {
        "description": "Configuration to control the number of findings returned for inspection. This is not used for de-identification or data profiling. When redacting sensitive data from images, finding limits don't apply. They can cause unexpected or inconsistent results, where only some data is redacted. Don't include finding limits in RedactImage requests. Otherwise, Cloud DLP returns an error.",
        "properties": {
          "maxFindingsPerInfoType": {
            "description": "Configuration of findings limit given for specified infoTypes.",
            "items": {
              "$ref": "#/$defs/GooglePrivacyDlpV2InfoTypeLimit"
            },
            "type": "array"
          },
          "maxFindingsPerItem": {
            "description": "Max number of findings that are returned for each item scanned. When set within an InspectContentRequest, this field is ignored. This value isn't a hard limit. If the number of findings for an item reaches this limit, the inspection of that item ends gradually, not abruptly. Therefore, the actual number of findings that Cloud DLP returns for the item can be multiple times higher than this value.",
            "format": "int32",
            "type": "integer"
          },
          "maxFindingsPerRequest": {
            "description": "Max number of findings that are returned per request or job. If you set this field in an InspectContentRequest, the resulting maximum value is the value that you set or 3,000, whichever is lower. This value isn't a hard limit. If an inspection reaches this limit, the inspection ends gradually, not abruptly. Therefore, the actual number of findings that Cloud DLP returns can be multiple times higher than this value.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2InfoTypeLimit": {
        "description": "Max findings configuration per infoType, per content item or long running DlpJob.",
        "properties": {
          "infoType": {
            "$ref": "#/$defs/GooglePrivacyDlpV2InfoType"
          },
          "maxFindings": {
            "description": "Max findings limit for the given infoType.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2InfoTypeLikelihood": {
        "description": "Configuration for setting a minimum likelihood per infotype. Used to customize the minimum likelihood level for specific infotypes in the request. For example, use this if you want to lower the precision for PERSON_NAME without lowering the precision for the other infotypes in the request.",
        "properties": {
          "infoType": {
            "$ref": "#/$defs/GooglePrivacyDlpV2InfoType"
          },
          "minLikelihood": {
            "description": "Only returns findings equal to or above this threshold. This field is required or else the configuration fails.",
            "enum": [
              "LIKELIHOOD_UNSPECIFIED",
              "VERY_UNLIKELY",
              "UNLIKELY",
              "POSSIBLE",
              "LIKELY",
              "VERY_LIKELY"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2InspectionRuleSet": {
        "description": "Rule set for modifying a set of infoTypes to alter behavior under certain circumstances, depending on the specific details of the rules within the set.",
        "properties": {
          "infoTypes": {
            "description": "List of infoTypes this rule set is applied to.",
            "items": {
              "$ref": "#/$defs/GooglePrivacyDlpV2InfoType"
            },
            "type": "array"
          },
          "rules": {
            "description": "Set of rules to be applied to infoTypes. The rules are applied in order.",
            "items": {
              "$ref": "#/$defs/GooglePrivacyDlpV2InspectionRule"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2InspectionRule": {
        "description": "A single inspection rule to be applied to infoTypes, specified in `InspectionRuleSet`.",
        "properties": {
          "exclusionRule": {
            "$ref": "#/$defs/GooglePrivacyDlpV2ExclusionRule"
          },
          "hotwordRule": {
            "$ref": "#/$defs/GooglePrivacyDlpV2HotwordRule"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2ExclusionRule": {
        "description": "The rule that specifies conditions when findings of infoTypes specified in `InspectionRuleSet` are removed from results.",
        "properties": {
          "dictionary": {
            "$ref": "#/$defs/GooglePrivacyDlpV2Dictionary"
          },
          "excludeByHotword": {
            "$ref": "#/$defs/GooglePrivacyDlpV2ExcludeByHotword"
          },
          "excludeInfoTypes": {
            "$ref": "#/$defs/GooglePrivacyDlpV2ExcludeInfoTypes"
          },
          "matchingType": {
            "description": "How the rule is applied, see MatchingType documentation for details.",
            "enum": [
              "MATCHING_TYPE_UNSPECIFIED",
              "MATCHING_TYPE_FULL_MATCH",
              "MATCHING_TYPE_PARTIAL_MATCH",
              "MATCHING_TYPE_INVERSE_MATCH"
            ],
            "type": "string"
          },
          "regex": {
            "$ref": "#/$defs/GooglePrivacyDlpV2Regex"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2ExcludeByHotword": {
        "description": "The rule to exclude findings based on a hotword. For record inspection of tables, column names are considered hotwords. An example of this is to exclude a finding if it belongs to a BigQuery column that matches a specific pattern.",
        "properties": {
          "hotwordRegex": {
            "$ref": "#/$defs/GooglePrivacyDlpV2Regex"
          },
          "proximity": {
            "$ref": "#/$defs/GooglePrivacyDlpV2Proximity"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2ExcludeInfoTypes": {
        "description": "List of excluded infoTypes.",
        "properties": {
          "infoTypes": {
            "description": "InfoType list in ExclusionRule rule drops a finding when it overlaps or contained within with a finding of an infoType from this list. For example, for `InspectionRuleSet.info_types` containing \"PHONE_NUMBER\"` and `exclusion_rule` containing `exclude_info_types.info_types` with \"EMAIL_ADDRESS\" the phone number findings are dropped if they overlap with EMAIL_ADDRESS finding. That leads to \"555-222-2222@example.org\" to generate only a single finding, namely email address.",
            "items": {
              "$ref": "#/$defs/GooglePrivacyDlpV2InfoType"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2StorageConfig": {
        "description": "Shared message indicating Cloud storage type.",
        "properties": {
          "bigQueryOptions": {
            "$ref": "#/$defs/GooglePrivacyDlpV2BigQueryOptions"
          },
          "cloudStorageOptions": {
            "$ref": "#/$defs/GooglePrivacyDlpV2CloudStorageOptions"
          },
          "datastoreOptions": {
            "$ref": "#/$defs/GooglePrivacyDlpV2DatastoreOptions"
          },
          "hybridOptions": {
            "$ref": "#/$defs/GooglePrivacyDlpV2HybridOptions"
          },
          "timespanConfig": {
            "$ref": "#/$defs/GooglePrivacyDlpV2TimespanConfig"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2BigQueryOptions": {
        "description": "Options defining BigQuery table and row identifiers.",
        "properties": {
          "excludedFields": {
            "description": "References to fields excluded from scanning. This allows you to skip inspection of entire columns which you know have no findings. When inspecting a table, we recommend that you inspect all columns. Otherwise, findings might be affected because hints from excluded columns will not be used.",
            "items": {
              "$ref": "#/$defs/GooglePrivacyDlpV2FieldId"
            },
            "type": "array"
          },
          "identifyingFields": {
            "description": "Table fields that may uniquely identify a row within the table. When `actions.saveFindings.outputConfig.table` is specified, the values of columns specified here are available in the output table under `location.content_locations.record_location.record_key.id_values`. Nested fields such as `person.birthdate.year` are allowed.",
            "items": {
              "$ref": "#/$defs/GooglePrivacyDlpV2FieldId"
            },
            "type": "array"
          },
          "includedFields": {
            "description": "Limit scanning only to these fields. When inspecting a table, we recommend that you inspect all columns. Otherwise, findings might be affected because hints from excluded columns will not be used.",
            "items": {
              "$ref": "#/$defs/GooglePrivacyDlpV2FieldId"
            },
            "type": "array"
          },
          "rowsLimit": {
            "description": "Max number of rows to scan. If the table has more rows than this value, the rest of the rows are omitted. If not set, or if set to 0, all rows will be scanned. Only one of rows_limit and rows_limit_percent can be specified. Cannot be used in conjunction with TimespanConfig.",
            "format": "int64",
            "type": "string"
          },
          "rowsLimitPercent": {
            "description": "Max percentage of rows to scan. The rest are omitted. The number of rows scanned is rounded down. Must be between 0 and 100, inclusively. Both 0 and 100 means no limit. Defaults to 0. Only one of rows_limit and rows_limit_percent can be specified. Cannot be used in conjunction with TimespanConfig. Caution: A [known issue](https://cloud.google.com/sensitive-data-protection/docs/known-issues#bq-sampling) is causing the `rowsLimitPercent` field to behave unexpectedly. We recommend using `rowsLimit` instead.",
            "format": "int32",
            "type": "integer"
          },
          "sampleMethod": {
            "description": "How to sample the data.",
            "enum": [
              "SAMPLE_METHOD_UNSPECIFIED",
              "TOP",
              "RANDOM_START"
            ],
            "type": "string"
          },
          "tableReference": {
            "$ref": "#/$defs/GooglePrivacyDlpV2BigQueryTable"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2FieldId": {
        "description": "General identifier of a data field in a storage service.",
        "properties": {
          "name": {
            "description": "Name describing the field.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2CloudStorageOptions": {
        "description": "Options defining a file or a set of files within a Cloud Storage bucket.",
        "properties": {
          "bytesLimitPerFile": {
            "description": "Max number of bytes to scan from a file. If a scanned file's size is bigger than this value then the rest of the bytes are omitted. Only one of `bytes_limit_per_file` and `bytes_limit_per_file_percent` can be specified. This field can't be set if de-identification is requested. For certain file types, setting this field has no effect. For more information, see [Limits on bytes scanned per file](https://cloud.google.com/sensitive-data-protection/docs/supported-file-types#max-byte-size-per-file).",
            "format": "int64",
            "type": "string"
          },
          "bytesLimitPerFilePercent": {
            "description": "Max percentage of bytes to scan from a file. The rest are omitted. The number of bytes scanned is rounded down. Must be between 0 and 100, inclusively. Both 0 and 100 means no limit. Defaults to 0. Only one of bytes_limit_per_file and bytes_limit_per_file_percent can be specified. This field can't be set if de-identification is requested. For certain file types, setting this field has no effect. For more information, see [Limits on bytes scanned per file](https://cloud.google.com/sensitive-data-protection/docs/supported-file-types#max-byte-size-per-file).",
            "format": "int32",
            "type": "integer"
          },
          "fileSet": {
            "$ref": "#/$defs/GooglePrivacyDlpV2FileSet"
          },
          "fileTypes": {
            "description": "List of file type groups to include in the scan. If empty, all files are scanned and available data format processors are applied. In addition, the binary content of the selected files is always scanned as well. Images are scanned only as binary if the specified region does not support image inspection and no file_types were specified. Image inspection is restricted to 'global', 'us', 'asia', and 'europe'.",
            "items": {
              "enum": [
                "FILE_TYPE_UNSPECIFIED",
                "BINARY_FILE",
                "TEXT_FILE",
                "IMAGE",
                "WORD",
                "PDF",
                "AVRO",
                "CSV",
                "TSV",
                "POWERPOINT",
                "EXCEL"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "filesLimitPercent": {
            "description": "Limits the number of files to scan to this percentage of the input FileSet. Number of files scanned is rounded down. Must be between 0 and 100, inclusively. Both 0 and 100 means no limit. Defaults to 0.",
            "format": "int32",
            "type": "integer"
          },
          "sampleMethod": {
            "description": "How to sample the data.",
            "enum": [
              "SAMPLE_METHOD_UNSPECIFIED",
              "TOP",
              "RANDOM_START"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2FileSet": {
        "description": "Set of files to scan.",
        "properties": {
          "regexFileSet": {
            "$ref": "#/$defs/GooglePrivacyDlpV2CloudStorageRegexFileSet"
          },
          "url": {
            "description": "The Cloud Storage url of the file(s) to scan, in the format `gs:///`. Trailing wildcard in the path is allowed. If the url ends in a trailing slash, the bucket or directory represented by the url will be scanned non-recursively (content in sub-directories will not be scanned). This means that `gs://mybucket/` is equivalent to `gs://mybucket/*`, and `gs://mybucket/directory/` is equivalent to `gs://mybucket/directory/*`. Exactly one of `url` or `regex_file_set` must be set.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2CloudStorageRegexFileSet": {
        "description": "Message representing a set of files in a Cloud Storage bucket. Regular expressions are used to allow fine-grained control over which files in the bucket to include. Included files are those that match at least one item in `include_regex` and do not match any items in `exclude_regex`. Note that a file that matches items from both lists will _not_ be included. For a match to occur, the entire file path (i.e., everything in the url after the bucket name) must match the regular expression. For example, given the input `{bucket_name: \"mybucket\", include_regex: [\"directory1/.*\"], exclude_regex: [\"directory1/excluded.*\"]}`: * `gs://mybucket/directory1/myfile` will be included * `gs://mybucket/directory1/directory2/myfile` will be included (`.*` matches across `/`) * `gs://mybucket/directory0/directory1/myfile` will _not_ be included (the full path doesn't match any items in `include_regex`) * `gs://mybucket/directory1/excludedfile` will _not_ be included (the path matches an item in `exclude_regex`) If `include_regex` is left empty, it will match all files by default (this is equivalent to setting `include_regex: [\".*\"]`). Some other common use cases: * `{bucket_name: \"mybucket\", exclude_regex: [\".*\\.pdf\"]}` will include all files in `mybucket` except for .pdf files * `{bucket_name: \"mybucket\", include_regex: [\"directory/[^/]+\"]}` will include all files directly under `gs://mybucket/directory/`, without matching across `/`",
        "properties": {
          "bucketName": {
            "description": "The name of a Cloud Storage bucket. Required.",
            "type": "string"
          },
          "excludeRegex": {
            "description": "A list of regular expressions matching file paths to exclude. All files in the bucket that match at least one of these regular expressions will be excluded from the scan. Regular expressions use RE2 [syntax](https://github.com/google/re2/wiki/Syntax); a guide can be found under the google/re2 repository on GitHub.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "includeRegex": {
            "description": "A list of regular expressions matching file paths to include. All files in the bucket that match at least one of these regular expressions will be included in the set of files, except for those that also match an item in `exclude_regex`. Leaving this field empty will match all files by default (this is equivalent to including `.*` in the list). Regular expressions use RE2 [syntax](https://github.com/google/re2/wiki/Syntax); a guide can be found under the google/re2 repository on GitHub.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2DatastoreOptions": {
        "description": "Options defining a data set within Google Cloud Datastore.",
        "properties": {
          "kind": {
            "$ref": "#/$defs/GooglePrivacyDlpV2KindExpression"
          },
          "partitionId": {
            "$ref": "#/$defs/GooglePrivacyDlpV2PartitionId"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2KindExpression": {
        "description": "A representation of a Datastore kind.",
        "properties": {
          "name": {
            "description": "The name of the kind.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2PartitionId": {
        "description": "Datastore partition ID. A partition ID identifies a grouping of entities. The grouping is always by project and namespace, however the namespace ID may be empty. A partition ID contains several dimensions: project ID and namespace ID.",
        "properties": {
          "namespaceId": {
            "description": "If not empty, the ID of the namespace to which the entities belong.",
            "type": "string"
          },
          "projectId": {
            "description": "The ID of the project to which the entities belong.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2HybridOptions": {
        "description": "Configuration to control jobs where the content being inspected is outside of Google Cloud Platform.",
        "properties": {
          "description": {
            "description": "A short description of where the data is coming from. Will be stored once in the job. 256 max length.",
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "To organize findings, these labels will be added to each finding. Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`. No more than 10 labels can be associated with a given finding. Examples: * `\"environment\" : \"production\"` * `\"pipeline\" : \"etl\"`",
            "type": "object"
          },
          "requiredFindingLabelKeys": {
            "description": "These are labels that each inspection request must include within their 'finding_labels' map. Request may contain others, but any missing one of these will be rejected. Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. No more than 10 keys can be required.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tableOptions": {
            "$ref": "#/$defs/GooglePrivacyDlpV2TableOptions"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2TableOptions": {
        "description": "Instructions regarding the table content being inspected.",
        "properties": {
          "identifyingFields": {
            "description": "The columns that are the primary keys for table objects included in ContentItem. A copy of this cell's value will stored alongside alongside each finding so that the finding can be traced to the specific row it came from. No more than 3 may be provided.",
            "items": {
              "$ref": "#/$defs/GooglePrivacyDlpV2FieldId"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2TimespanConfig": {
        "description": "Configuration of the timespan of the items to include in scanning. Currently only supported when inspecting Cloud Storage and BigQuery.",
        "properties": {
          "enableAutoPopulationOfTimespanConfig": {
            "description": "When the job is started by a JobTrigger we will automatically figure out a valid start_time to avoid scanning files that have not been modified since the last time the JobTrigger executed. This will be based on the time of the execution of the last run of the JobTrigger or the timespan end_time used in the last run of the JobTrigger.",
            "type": "boolean"
          },
          "endTime": {
            "description": "Exclude files, tables, or rows newer than this value. If not set, no upper time limit is applied.",
            "format": "google-datetime",
            "type": "string"
          },
          "startTime": {
            "description": "Exclude files, tables, or rows older than this value. If not set, no lower time limit is applied.",
            "format": "google-datetime",
            "type": "string"
          },
          "timestampField": {
            "$ref": "#/$defs/GooglePrivacyDlpV2FieldId"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2RiskAnalysisJobConfig": {
        "description": "Configuration for a risk analysis job. See https://cloud.google.com/sensitive-data-protection/docs/concepts-risk-analysis to learn more.",
        "properties": {
          "actions": {
            "description": "Actions to execute at the completion of the job. Are executed in the order provided.",
            "items": {
              "$ref": "#/$defs/GooglePrivacyDlpV2Action"
            },
            "type": "array"
          },
          "privacyMetric": {
            "$ref": "#/$defs/GooglePrivacyDlpV2PrivacyMetric"
          },
          "sourceTable": {
            "$ref": "#/$defs/GooglePrivacyDlpV2BigQueryTable"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2PrivacyMetric": {
        "description": "Privacy metric to compute for reidentification risk analysis.",
        "properties": {
          "categoricalStatsConfig": {
            "$ref": "#/$defs/GooglePrivacyDlpV2CategoricalStatsConfig"
          },
          "deltaPresenceEstimationConfig": {
            "$ref": "#/$defs/GooglePrivacyDlpV2DeltaPresenceEstimationConfig"
          },
          "kAnonymityConfig": {
            "$ref": "#/$defs/GooglePrivacyDlpV2KAnonymityConfig"
          },
          "kMapEstimationConfig": {
            "$ref": "#/$defs/GooglePrivacyDlpV2KMapEstimationConfig"
          },
          "lDiversityConfig": {
            "$ref": "#/$defs/GooglePrivacyDlpV2LDiversityConfig"
          },
          "numericalStatsConfig": {
            "$ref": "#/$defs/GooglePrivacyDlpV2NumericalStatsConfig"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2CategoricalStatsConfig": {
        "description": "Compute numerical stats over an individual column, including number of distinct values and value count distribution.",
        "properties": {
          "field": {
            "$ref": "#/$defs/GooglePrivacyDlpV2FieldId"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2DeltaPresenceEstimationConfig": {
        "description": "δ-presence metric, used to estimate how likely it is for an attacker to figure out that one given individual appears in a de-identified dataset. Similarly to the k-map metric, we cannot compute δ-presence exactly without knowing the attack dataset, so we use a statistical model instead.",
        "properties": {
          "auxiliaryTables": {
            "description": "Several auxiliary tables can be used in the analysis. Each custom_tag used to tag a quasi-identifiers field must appear in exactly one field of one auxiliary table.",
            "items": {
              "$ref": "#/$defs/GooglePrivacyDlpV2StatisticalTable"
            },
            "type": "array"
          },
          "quasiIds": {
            "description": "Required. Fields considered to be quasi-identifiers. No two fields can have the same tag.",
            "items": {
              "$ref": "#/$defs/GooglePrivacyDlpV2QuasiId"
            },
            "type": "array"
          },
          "regionCode": {
            "description": "ISO 3166-1 alpha-2 region code to use in the statistical modeling. Set if no column is tagged with a region-specific InfoType (like US_ZIP_5) or a region code.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2StatisticalTable": {
        "description": "An auxiliary table containing statistical information on the relative frequency of different quasi-identifiers values. It has one or several quasi-identifiers columns, and one column that indicates the relative frequency of each quasi-identifier tuple. If a tuple is present in the data but not in the auxiliary table, the corresponding relative frequency is assumed to be zero (and thus, the tuple is highly reidentifiable).",
        "properties": {
          "quasiIds": {
            "description": "Required. Quasi-identifier columns.",
            "items": {
              "$ref": "#/$defs/GooglePrivacyDlpV2QuasiIdentifierField"
            },
            "type": "array"
          },
          "relativeFrequency": {
            "$ref": "#/$defs/GooglePrivacyDlpV2FieldId"
          },
          "table": {
            "$ref": "#/$defs/GooglePrivacyDlpV2BigQueryTable"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2QuasiIdentifierField": {
        "description": "A quasi-identifier column has a custom_tag, used to know which column in the data corresponds to which column in the statistical model.",
        "properties": {
          "customTag": {
            "description": "A column can be tagged with a custom tag. In this case, the user must indicate an auxiliary table that contains statistical information on the possible values of this column (below).",
            "type": "string"
          },
          "field": {
            "$ref": "#/$defs/GooglePrivacyDlpV2FieldId"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2QuasiId": {
        "description": "A column with a semantic tag attached.",
        "properties": {
          "customTag": {
            "description": "A column can be tagged with a custom tag. In this case, the user must indicate an auxiliary table that contains statistical information on the possible values of this column (below).",
            "type": "string"
          },
          "field": {
            "$ref": "#/$defs/GooglePrivacyDlpV2FieldId"
          },
          "inferred": {
            "$ref": "#/$defs/GoogleProtobufEmpty"
          },
          "infoType": {
            "$ref": "#/$defs/GooglePrivacyDlpV2InfoType"
          }
        },
        "type": "object"
      },
      "GoogleProtobufEmpty": {
        "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
        "properties": {},
        "type": "object"
      },
      "GooglePrivacyDlpV2KAnonymityConfig": {
        "description": "k-anonymity metric, used for analysis of reidentification risk.",
        "properties": {
          "entityId": {
            "$ref": "#/$defs/GooglePrivacyDlpV2EntityId"
          },
          "quasiIds": {
            "description": "Set of fields to compute k-anonymity over. When multiple fields are specified, they are considered a single composite key. Structs and repeated data types are not supported; however, nested fields are supported so long as they are not structs themselves or nested within a repeated field.",
            "items": {
              "$ref": "#/$defs/GooglePrivacyDlpV2FieldId"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2EntityId": {
        "description": "An entity in a dataset is a field or set of fields that correspond to a single person. For example, in medical records the `EntityId` might be a patient identifier, or for financial records it might be an account identifier. This message is used when generalizations or analysis must take into account that multiple rows correspond to the same entity.",
        "properties": {
          "field": {
            "$ref": "#/$defs/GooglePrivacyDlpV2FieldId"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2KMapEstimationConfig": {
        "description": "Reidentifiability metric. This corresponds to a risk model similar to what is called \"journalist risk\" in the literature, except the attack dataset is statistically modeled instead of being perfectly known. This can be done using publicly available data (like the US Census), or using a custom statistical model (indicated as one or several BigQuery tables), or by extrapolating from the distribution of values in the input dataset.",
        "properties": {
          "auxiliaryTables": {
            "description": "Several auxiliary tables can be used in the analysis. Each custom_tag used to tag a quasi-identifiers column must appear in exactly one column of one auxiliary table.",
            "items": {
              "$ref": "#/$defs/GooglePrivacyDlpV2AuxiliaryTable"
            },
            "type": "array"
          },
          "quasiIds": {
            "description": "Required. Fields considered to be quasi-identifiers. No two columns can have the same tag.",
            "items": {
              "$ref": "#/$defs/GooglePrivacyDlpV2TaggedField"
            },
            "type": "array"
          },
          "regionCode": {
            "description": "ISO 3166-1 alpha-2 region code to use in the statistical modeling. Set if no column is tagged with a region-specific InfoType (like US_ZIP_5) or a region code.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2AuxiliaryTable": {
        "description": "An auxiliary table contains statistical information on the relative frequency of different quasi-identifiers values. It has one or several quasi-identifiers columns, and one column that indicates the relative frequency of each quasi-identifier tuple. If a tuple is present in the data but not in the auxiliary table, the corresponding relative frequency is assumed to be zero (and thus, the tuple is highly reidentifiable).",
        "properties": {
          "quasiIds": {
            "description": "Required. Quasi-identifier columns.",
            "items": {
              "$ref": "#/$defs/GooglePrivacyDlpV2QuasiIdField"
            },
            "type": "array"
          },
          "relativeFrequency": {
            "$ref": "#/$defs/GooglePrivacyDlpV2FieldId"
          },
          "table": {
            "$ref": "#/$defs/GooglePrivacyDlpV2BigQueryTable"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2QuasiIdField": {
        "description": "A quasi-identifier column has a custom_tag, used to know which column in the data corresponds to which column in the statistical model.",
        "properties": {
          "customTag": {
            "description": "A auxiliary field.",
            "type": "string"
          },
          "field": {
            "$ref": "#/$defs/GooglePrivacyDlpV2FieldId"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2TaggedField": {
        "description": "A column with a semantic tag attached.",
        "properties": {
          "customTag": {
            "description": "A column can be tagged with a custom tag. In this case, the user must indicate an auxiliary table that contains statistical information on the possible values of this column (below).",
            "type": "string"
          },
          "field": {
            "$ref": "#/$defs/GooglePrivacyDlpV2FieldId"
          },
          "inferred": {
            "$ref": "#/$defs/GoogleProtobufEmpty"
          },
          "infoType": {
            "$ref": "#/$defs/GooglePrivacyDlpV2InfoType"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2LDiversityConfig": {
        "description": "l-diversity metric, used for analysis of reidentification risk.",
        "properties": {
          "quasiIds": {
            "description": "Set of quasi-identifiers indicating how equivalence classes are defined for the l-diversity computation. When multiple fields are specified, they are considered a single composite key.",
            "items": {
              "$ref": "#/$defs/GooglePrivacyDlpV2FieldId"
            },
            "type": "array"
          },
          "sensitiveAttribute": {
            "$ref": "#/$defs/GooglePrivacyDlpV2FieldId"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2NumericalStatsConfig": {
        "description": "Compute numerical stats over an individual column, including min, max, and quantiles.",
        "properties": {
          "field": {
            "$ref": "#/$defs/GooglePrivacyDlpV2FieldId"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://dlp.googleapis.com//v2/{parent}/dlpJobs{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Combines all of the information about a DLP job.",
        "**Key properties:**",
        {
          "$ul": [
            "**actionDetails**: Events that should occur after the job has completed.",
            "**createTime**: Time when the job was created.",
            "**endTime**: Time when the job finished.",
            "**errors**: A stream of errors encountered running the job.",
            [
              "**inspectDetails**: The results of an inspect DataSource job.",
              {
                "$ul": [
                  [
                    "**requestedOptions**: Snapshot of the inspection configuration.",
                    {
                      "$ul": [
                        [
                          "**jobConfig**: Controls what and how to inspect for findings.",
                          {
                            "$ul": [
                              "**actions**: Actions to execute at the completion of the job.",
                              [
                                "**inspectConfig**: Configuration description of the scanning process. When used with redactContent only info_types and min_likelihood are currently used.",
                                {
                                  "$ul": [
                                    "**contentOptions**: Deprecated and unused.",
                                    "**customInfoTypes**: CustomInfoTypes provided by the user. See https://cloud.google.com/sensitive-data-protection/docs/creating-custom-infotypes to learn more.",
                                    "**excludeInfoTypes**: When true, excludes type information of the findings. This is not used for data profiling.",
                                    "**includeQuote**: When true, a contextual quote from the data that triggered a finding is included in the response; see Finding.quote. This is not used for data profiling.",
                                    "**infoTypes**: Restricts what info_types to look for. The values must correspond to InfoType values returned by ListInfoTypes or listed at https://cloud.google.com/sensitive-data-protection/docs/infotypes-reference. When no InfoTypes or CustomInfoTypes are specified in a request, the system may automatically choose a default list of detectors to run, which may change over time. If you need precise control and predictability as to what detectors are run you should specify specific InfoTypes listed in the reference, otherwise a default list will be used, which may change over time.",
                                    [
                                      "**limits**: Configuration to control the number of findings returned for inspection. This is not used for de-identification or data profiling. When redacting sensitive data from images, finding limits don't apply. They can cause unexpected or inconsistent results, where only some data is redacted. Don't include finding limits in RedactImage requests. Otherwise, Cloud DLP returns an error.",
                                      {
                                        "$ul": [
                                          "**maxFindingsPerInfoType**: Configuration of findings limit given for specified infoTypes.",
                                          "**maxFindingsPerItem**: Max number of findings that are returned for each item scanned. When set within an InspectContentRequest, this field is ignored. This value isn't a hard limit. If the number of findings for an item reaches this limit, the inspection of that item ends gradually, not abruptly. Therefore, the actual number of findings that Cloud DLP returns for the item can be multiple times higher than this value.",
                                          "**maxFindingsPerRequest**: Max number of findings that are returned per request or job. If you set this field in an InspectContentRequest, the resulting maximum value is the value that you set or 3,000, whichever is lower. This value isn't a hard limit. If an inspection reaches this limit, the inspection ends gradually, not abruptly. Therefore, the actual number of findings that Cloud DLP returns can be multiple times higher than this value."
                                        ]
                                      }
                                    ],
                                    "**minLikelihood**: Only returns findings equal to or above this threshold. The default is POSSIBLE. In general, the highest likelihood setting yields the fewest findings in results and the lowest chance of a false positive. For more information, see [Match likelihood](https://cloud.google.com/sensitive-data-protection/docs/likelihood).",
                                    "**minLikelihoodPerInfoType**: Minimum likelihood per infotype. For each infotype, a user can specify a minimum likelihood. The system only returns a finding if its likelihood is above this threshold. If this field is not set, the system uses the InspectConfig min_likelihood.",
                                    "**ruleSet**: Set of rules to apply to the findings for this InspectConfig. Exclusion rules, contained in the set are executed in the end, other rules are executed in the order they are specified for each info type."
                                  ]
                                }
                              ],
                              "**inspectTemplateName**: If provided, will be used as the default for all values in InspectConfig. `inspect_config` will be merged into the values persisted as part of the template.",
                              [
                                "**storageConfig**: Shared message indicating Cloud storage type.",
                                {
                                  "$ul": [
                                    [
                                      "**bigQueryOptions**: Options defining BigQuery table and row identifiers.",
                                      {
                                        "$ul": [
                                          "**excludedFields**: References to fields excluded from scanning. This allows you to skip inspection of entire columns which you know have no findings. When inspecting a table, we recommend that you inspect all columns. Otherwise, findings might be affected because hints from excluded columns will not be used.",
                                          "**identifyingFields**: Table fields that may uniquely identify a row within the table. When `actions.saveFindings.outputConfig.table` is specified, the values of columns specified here are available in the output table under `location.content_locations.record_location.record_key.id_values`. Nested fields such as `person.birthdate.year` are allowed.",
                                          "**includedFields**: Limit scanning only to these fields. When inspecting a table, we recommend that you inspect all columns. Otherwise, findings might be affected because hints from excluded columns will not be used.",
                                          "**rowsLimit**: Max number of rows to scan. If the table has more rows than this value, the rest of the rows are omitted. If not set, or if set to 0, all rows will be scanned. Only one of rows_limit and rows_limit_percent can be specified. Cannot be used in conjunction with TimespanConfig.",
                                          "**rowsLimitPercent**: Max percentage of rows to scan. The rest are omitted. The number of rows scanned is rounded down. Must be between 0 and 100, inclusively. Both 0 and 100 means no limit. Defaults to 0. Only one of rows_limit and rows_limit_percent can be specified. Cannot be used in conjunction with TimespanConfig. Caution: A [known issue](https://cloud.google.com/sensitive-data-protection/docs/known-issues#bq-sampling) is causing the `rowsLimitPercent` field to behave unexpectedly. We recommend using `rowsLimit` instead.",
                                          "**sampleMethod**: How to sample the data.",
                                          [
                                            "**tableReference**: Message defining the location of a BigQuery table. A table is uniquely identified by its project_id, dataset_id, and table_name. Within a query a table is often referenced with a string in the format of: `:.` or `..`.",
                                            {
                                              "$ul": [
                                                "**datasetId**: Dataset ID of the table.",
                                                "**projectId**: The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call.",
                                                "**tableId**: Name of the table."
                                              ]
                                            }
                                          ]
                                        ]
                                      }
                                    ],
                                    [
                                      "**cloudStorageOptions**: Options defining a file or a set of files within a Cloud Storage bucket.",
                                      {
                                        "$ul": [
                                          "**bytesLimitPerFile**: Max number of bytes to scan from a file. If a scanned file's size is bigger than this value then the rest of the bytes are omitted. Only one of `bytes_limit_per_file` and `bytes_limit_per_file_percent` can be specified. This field can't be set if de-identification is requested. For certain file types, setting this field has no effect. For more information, see [Limits on bytes scanned per file](https://cloud.google.com/sensitive-data-protection/docs/supported-file-types#max-byte-size-per-file).",
                                          "**bytesLimitPerFilePercent**: Max percentage of bytes to scan from a file. The rest are omitted. The number of bytes scanned is rounded down. Must be between 0 and 100, inclusively. Both 0 and 100 means no limit. Defaults to 0. Only one of bytes_limit_per_file and bytes_limit_per_file_percent can be specified. This field can't be set if de-identification is requested. For certain file types, setting this field has no effect. For more information, see [Limits on bytes scanned per file](https://cloud.google.com/sensitive-data-protection/docs/supported-file-types#max-byte-size-per-file).",
                                          [
                                            "**fileSet**: Set of files to scan.",
                                            {
                                              "$ul": [
                                                [
                                                  "**regexFileSet**: Message representing a set of files in a Cloud Storage bucket. Regular expressions are used to allow fine-grained control over which files in the bucket to include. Included files are those that match at least one item in `include_regex` and do not match any items in `exclude_regex`. Note that a file that matches items from both lists will _not_ be included. For a match to occur, the entire file path (i.e., everything in the url after the bucket name) must match the regular expression. For example, given the input `{bucket_name: \"mybucket\", include_regex: [\"directory1/.*\"], exclude_regex: [\"directory1/excluded.*\"]}`: * `gs://mybucket/directory1/myfile` will be included * `gs://mybucket/directory1/directory2/myfile` will be included (`.*` matches across `/`) * `gs://mybucket/directory0/directory1/myfile` will _not_ be included (the full path doesn't match any items in `include_regex`) * `gs://mybucket/directory1/excludedfile` will _not_ be included (the path matches an item in `exclude_regex`) If `include_regex` is left empty, it will match all files by default (this is equivalent to setting `include_regex: [\".*\"]`). Some other common use cases: * `{bucket_name: \"mybucket\", exclude_regex: [\".*\\.pdf\"]}` will include all files in `mybucket` except for .pdf files * `{bucket_name: \"mybucket\", include_regex: [\"directory/[^/]+\"]}` will include all files directly under `gs://mybucket/directory/`, without matching across `/`",
                                                  {
                                                    "$ul": [
                                                      "**bucketName**: The name of a Cloud Storage bucket. Required.",
                                                      "**excludeRegex**: A list of regular expressions matching file paths to exclude. All files in the bucket that match at least one of these regular expressions will be excluded from the scan. Regular expressions use RE2 [syntax](https://github.com/google/re2/wiki/Syntax); a guide can be found under the google/re2 repository on GitHub.",
                                                      "**includeRegex**: A list of regular expressions matching file paths to include. All files in the bucket that match at least one of these regular expressions will be included in the set of files, except for those that also match an item in `exclude_regex`. Leaving this field empty will match all files by default (this is equivalent to including `.*` in the list). Regular expressions use RE2 [syntax](https://github.com/google/re2/wiki/Syntax); a guide can be found under the google/re2 repository on GitHub."
                                                    ]
                                                  }
                                                ],
                                                "**url**: The Cloud Storage url of the file(s) to scan, in the format `gs:///`. Trailing wildcard in the path is allowed. If the url ends in a trailing slash, the bucket or directory represented by the url will be scanned non-recursively (content in sub-directories will not be scanned). This means that `gs://mybucket/` is equivalent to `gs://mybucket/*`, and `gs://mybucket/directory/` is equivalent to `gs://mybucket/directory/*`. Exactly one of `url` or `regex_file_set` must be set."
                                              ]
                                            }
                                          ],
                                          "**fileTypes**: List of file type groups to include in the scan. If empty, all files are scanned and available data format processors are applied. In addition, the binary content of the selected files is always scanned as well. Images are scanned only as binary if the specified region does not support image inspection and no file_types were specified. Image inspection is restricted to 'global', 'us', 'asia', and 'europe'.",
                                          "**filesLimitPercent**: Limits the number of files to scan to this percentage of the input FileSet. Number of files scanned is rounded down. Must be between 0 and 100, inclusively. Both 0 and 100 means no limit. Defaults to 0.",
                                          "**sampleMethod**: How to sample the data."
                                        ]
                                      }
                                    ],
                                    [
                                      "**datastoreOptions**: Options defining a data set within Google Cloud Datastore.",
                                      {
                                        "$ul": [
                                          [
                                            "**kind**: A representation of a Datastore kind.",
                                            {
                                              "$ul": [
                                                "**name**: The name of the kind."
                                              ]
                                            }
                                          ],
                                          [
                                            "**partitionId**: Datastore partition ID. A partition ID identifies a grouping of entities. The grouping is always by project and namespace, however the namespace ID may be empty. A partition ID contains several dimensions: project ID and namespace ID.",
                                            {
                                              "$ul": [
                                                "**namespaceId**: If not empty, the ID of the namespace to which the entities belong.",
                                                "**projectId**: The ID of the project to which the entities belong."
                                              ]
                                            }
                                          ]
                                        ]
                                      }
                                    ],
                                    [
                                      "**hybridOptions**: Configuration to control jobs where the content being inspected is outside of Google Cloud Platform.",
                                      {
                                        "$ul": [
                                          "**description**: A short description of where the data is coming from. Will be stored once in the job. 256 max length.",
                                          "**labels**: To organize findings, these labels will be added to each finding. Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`. No more than 10 labels can be associated with a given finding. Examples: * `\"environment\" : \"production\"` * `\"pipeline\" : \"etl\"`",
                                          "**requiredFindingLabelKeys**: These are labels that each inspection request must include within their 'finding_labels' map. Request may contain others, but any missing one of these will be rejected. Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. No more than 10 keys can be required.",
                                          [
                                            "**tableOptions**: Instructions regarding the table content being inspected.",
                                            {
                                              "$ul": [
                                                "**identifyingFields**: The columns that are the primary keys for table objects included in ContentItem. A copy of this cell's value will stored alongside alongside each finding so that the finding can be traced to the specific row it came from. No more than 3 may be provided."
                                              ]
                                            }
                                          ]
                                        ]
                                      }
                                    ],
                                    [
                                      "**timespanConfig**: Configuration of the timespan of the items to include in scanning. Currently only supported when inspecting Cloud Storage and BigQuery.",
                                      {
                                        "$ul": [
                                          "**enableAutoPopulationOfTimespanConfig**: When the job is started by a JobTrigger we will automatically figure out a valid start_time to avoid scanning files that have not been modified since the last time the JobTrigger executed. This will be based on the time of the execution of the last run of the JobTrigger or the timespan end_time used in the last run of the JobTrigger.",
                                          "**endTime**: Exclude files, tables, or rows newer than this value. If not set, no upper time limit is applied.",
                                          "**startTime**: Exclude files, tables, or rows older than this value. If not set, no lower time limit is applied.",
                                          [
                                            "**timestampField**: General identifier of a data field in a storage service.",
                                            {
                                              "$ul": [
                                                "**name**: Name describing the field."
                                              ]
                                            }
                                          ]
                                        ]
                                      }
                                    ]
                                  ]
                                }
                              ]
                            ]
                          }
                        ],
                        [
                          "**snapshotInspectTemplate**: The inspectTemplate contains a configuration (set of types of sensitive data to be detected) to be used anywhere you otherwise would normally specify InspectConfig. See https://cloud.google.com/sensitive-data-protection/docs/concepts-templates to learn more.",
                          {
                            "$ul": [
                              "**createTime**: Output only. The creation timestamp of an inspectTemplate.",
                              "**description**: Short description (max 256 chars).",
                              "**displayName**: Display name (max 256 chars).",
                              [
                                "**inspectConfig**: Configuration description of the scanning process. When used with redactContent only info_types and min_likelihood are currently used.",
                                {
                                  "$ul": [
                                    "**contentOptions**: Deprecated and unused.",
                                    "**customInfoTypes**: CustomInfoTypes provided by the user. See https://cloud.google.com/sensitive-data-protection/docs/creating-custom-infotypes to learn more.",
                                    "**excludeInfoTypes**: When true, excludes type information of the findings. This is not used for data profiling.",
                                    "**includeQuote**: When true, a contextual quote from the data that triggered a finding is included in the response; see Finding.quote. This is not used for data profiling.",
                                    "**infoTypes**: Restricts what info_types to look for. The values must correspond to InfoType values returned by ListInfoTypes or listed at https://cloud.google.com/sensitive-data-protection/docs/infotypes-reference. When no InfoTypes or CustomInfoTypes are specified in a request, the system may automatically choose a default list of detectors to run, which may change over time. If you need precise control and predictability as to what detectors are run you should specify specific InfoTypes listed in the reference, otherwise a default list will be used, which may change over time.",
                                    [
                                      "**limits**: Configuration to control the number of findings returned for inspection. This is not used for de-identification or data profiling. When redacting sensitive data from images, finding limits don't apply. They can cause unexpected or inconsistent results, where only some data is redacted. Don't include finding limits in RedactImage requests. Otherwise, Cloud DLP returns an error.",
                                      {
                                        "$ul": [
                                          "**maxFindingsPerInfoType**: Configuration of findings limit given for specified infoTypes.",
                                          "**maxFindingsPerItem**: Max number of findings that are returned for each item scanned. When set within an InspectContentRequest, this field is ignored. This value isn't a hard limit. If the number of findings for an item reaches this limit, the inspection of that item ends gradually, not abruptly. Therefore, the actual number of findings that Cloud DLP returns for the item can be multiple times higher than this value.",
                                          "**maxFindingsPerRequest**: Max number of findings that are returned per request or job. If you set this field in an InspectContentRequest, the resulting maximum value is the value that you set or 3,000, whichever is lower. This value isn't a hard limit. If an inspection reaches this limit, the inspection ends gradually, not abruptly. Therefore, the actual number of findings that Cloud DLP returns can be multiple times higher than this value."
                                        ]
                                      }
                                    ],
                                    "**minLikelihood**: Only returns findings equal to or above this threshold. The default is POSSIBLE. In general, the highest likelihood setting yields the fewest findings in results and the lowest chance of a false positive. For more information, see [Match likelihood](https://cloud.google.com/sensitive-data-protection/docs/likelihood).",
                                    "**minLikelihoodPerInfoType**: Minimum likelihood per infotype. For each infotype, a user can specify a minimum likelihood. The system only returns a finding if its likelihood is above this threshold. If this field is not set, the system uses the InspectConfig min_likelihood.",
                                    "**ruleSet**: Set of rules to apply to the findings for this InspectConfig. Exclusion rules, contained in the set are executed in the end, other rules are executed in the order they are specified for each info type."
                                  ]
                                }
                              ],
                              "**name**: Output only. The template name. The template will have one of the following formats: `projects/PROJECT_ID/inspectTemplates/TEMPLATE_ID` OR `organizations/ORGANIZATION_ID/inspectTemplates/TEMPLATE_ID`;",
                              "**updateTime**: Output only. The last update timestamp of an inspectTemplate."
                            ]
                          }
                        ]
                      ]
                    }
                  ],
                  [
                    "**result**: All result fields mentioned below are updated while the job is processing.",
                    {
                      "$ul": [
                        [
                          "**hybridStats**: Statistics related to processing hybrid inspect requests.",
                          {
                            "$ul": [
                              "**abortedCount**: The number of hybrid inspection requests aborted because the job ran out of quota or was ended before they could be processed.",
                              "**pendingCount**: The number of hybrid requests currently being processed. Only populated when called via method `getDlpJob`. A burst of traffic may cause hybrid inspect requests to be enqueued. Processing will take place as quickly as possible, but resource limitations may impact how long a request is enqueued for.",
                              "**processedCount**: The number of hybrid inspection requests processed within this job."
                            ]
                          }
                        ],
                        "**infoTypeStats**: Statistics of how many instances of each info type were found during inspect job.",
                        "**processedBytes**: Total size in bytes that were processed.",
                        "**totalEstimatedBytes**: Estimate of the number of bytes to process."
                      ]
                    }
                  ]
                ]
              }
            ],
            "**jobTriggerName**: If created by a job trigger, the resource name of the trigger that instantiated the job.",
            "**lastModified**: Time when the job was last modified by the system.",
            "**name**: The server-assigned name.",
            [
              "**riskDetails**: Result of a risk analysis operation request.",
              {
                "$ul": [
                  [
                    "**categoricalStatsResult**: Result of the categorical stats computation.",
                    {
                      "$ul": [
                        "**valueFrequencyHistogramBuckets**: Histogram of value frequencies in the column."
                      ]
                    }
                  ],
                  [
                    "**deltaPresenceEstimationResult**: Result of the δ-presence computation. Note that these results are an estimation, not exact values.",
                    {
                      "$ul": [
                        "**deltaPresenceEstimationHistogram**: The intervals [min_probability, max_probability) do not overlap. If a value doesn't correspond to any such interval, the associated frequency is zero. For example, the following records: {min_probability: 0, max_probability: 0.1, frequency: 17} {min_probability: 0.2, max_probability: 0.3, frequency: 42} {min_probability: 0.3, max_probability: 0.4, frequency: 99} mean that there are no record with an estimated probability in [0.1, 0.2) nor larger or equal to 0.4."
                      ]
                    }
                  ],
                  [
                    "**kAnonymityResult**: Result of the k-anonymity computation.",
                    {
                      "$ul": [
                        "**equivalenceClassHistogramBuckets**: Histogram of k-anonymity equivalence classes."
                      ]
                    }
                  ],
                  [
                    "**kMapEstimationResult**: Result of the reidentifiability analysis. Note that these results are an estimation, not exact values.",
                    {
                      "$ul": [
                        "**kMapEstimationHistogram**: The intervals [min_anonymity, max_anonymity] do not overlap. If a value doesn't correspond to any such interval, the associated frequency is zero. For example, the following records: {min_anonymity: 1, max_anonymity: 1, frequency: 17} {min_anonymity: 2, max_anonymity: 3, frequency: 42} {min_anonymity: 5, max_anonymity: 10, frequency: 99} mean that there are no record with an estimated anonymity of 4, 5, or larger than 10."
                      ]
                    }
                  ],
                  [
                    "**lDiversityResult**: Result of the l-diversity computation.",
                    {
                      "$ul": [
                        "**sensitiveValueFrequencyHistogramBuckets**: Histogram of l-diversity equivalence class sensitive value frequencies."
                      ]
                    }
                  ],
                  [
                    "**numericalStatsResult**: Result of the numerical stats computation.",
                    {
                      "$ul": [
                        [
                          "**maxValue**: Set of primitive values supported by the system. Note that for the purposes of inspection or transformation, the number of bytes considered to comprise a 'Value' is based on its representation as a UTF-8 encoded string. For example, if 'integer_value' is set to 123456789, the number of bytes would be counted as 9, even though an int64 only holds up to 8 bytes of data.",
                          {
                            "$ul": [
                              "**booleanValue**: boolean",
                              [
                                "**dateValue**: Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp",
                                {
                                  "$ul": [
                                    "**day**: Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
                                    "**month**: Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
                                    "**year**: Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year."
                                  ]
                                }
                              ],
                              "**dayOfWeekValue**: day of week",
                              "**floatValue**: float",
                              "**integerValue**: integer",
                              "**stringValue**: string",
                              [
                                "**timeValue**: Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.",
                                {
                                  "$ul": [
                                    "**hours**: Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \"24:00:00\" for scenarios like business closing time.",
                                    "**minutes**: Minutes of hour of day. Must be from 0 to 59.",
                                    "**nanos**: Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.",
                                    "**seconds**: Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds."
                                  ]
                                }
                              ],
                              "**timestampValue**: timestamp"
                            ]
                          }
                        ],
                        [
                          "**minValue**: Set of primitive values supported by the system. Note that for the purposes of inspection or transformation, the number of bytes considered to comprise a 'Value' is based on its representation as a UTF-8 encoded string. For example, if 'integer_value' is set to 123456789, the number of bytes would be counted as 9, even though an int64 only holds up to 8 bytes of data.",
                          {
                            "$ul": [
                              "**booleanValue**: boolean",
                              [
                                "**dateValue**: Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp",
                                {
                                  "$ul": [
                                    "**day**: Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
                                    "**month**: Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
                                    "**year**: Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year."
                                  ]
                                }
                              ],
                              "**dayOfWeekValue**: day of week",
                              "**floatValue**: float",
                              "**integerValue**: integer",
                              "**stringValue**: string",
                              [
                                "**timeValue**: Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.",
                                {
                                  "$ul": [
                                    "**hours**: Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \"24:00:00\" for scenarios like business closing time.",
                                    "**minutes**: Minutes of hour of day. Must be from 0 to 59.",
                                    "**nanos**: Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.",
                                    "**seconds**: Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds."
                                  ]
                                }
                              ],
                              "**timestampValue**: timestamp"
                            ]
                          }
                        ],
                        "**quantileValues**: List of 99 values that partition the set of field values into 100 equal sized buckets."
                      ]
                    }
                  ],
                  [
                    "**requestedOptions**: Risk analysis options.",
                    {
                      "$ul": [
                        [
                          "**jobConfig**: Configuration for a risk analysis job. See https://cloud.google.com/sensitive-data-protection/docs/concepts-risk-analysis to learn more.",
                          {
                            "$ul": [
                              "**actions**: Actions to execute at the completion of the job. Are executed in the order provided.",
                              [
                                "**privacyMetric**: Privacy metric to compute for reidentification risk analysis.",
                                {
                                  "$ul": [
                                    [
                                      "**categoricalStatsConfig**: Compute numerical stats over an individual column, including number of distinct values and value count distribution.",
                                      {
                                        "$ul": [
                                          [
                                            "**field**: General identifier of a data field in a storage service.",
                                            {
                                              "$ul": [
                                                "**name**: Name describing the field."
                                              ]
                                            }
                                          ]
                                        ]
                                      }
                                    ],
                                    [
                                      "**deltaPresenceEstimationConfig**: δ-presence metric, used to estimate how likely it is for an attacker to figure out that one given individual appears in a de-identified dataset. Similarly to the k-map metric, we cannot compute δ-presence exactly without knowing the attack dataset, so we use a statistical model instead.",
                                      {
                                        "$ul": [
                                          "**auxiliaryTables**: Several auxiliary tables can be used in the analysis. Each custom_tag used to tag a quasi-identifiers field must appear in exactly one field of one auxiliary table.",
                                          "**quasiIds**: Required. Fields considered to be quasi-identifiers. No two fields can have the same tag.",
                                          "**regionCode**: ISO 3166-1 alpha-2 region code to use in the statistical modeling. Set if no column is tagged with a region-specific InfoType (like US_ZIP_5) or a region code."
                                        ]
                                      }
                                    ],
                                    [
                                      "**kAnonymityConfig**: k-anonymity metric, used for analysis of reidentification risk.",
                                      {
                                        "$ul": [
                                          [
                                            "**entityId**: An entity in a dataset is a field or set of fields that correspond to a single person. For example, in medical records the `EntityId` might be a patient identifier, or for financial records it might be an account identifier. This message is used when generalizations or analysis must take into account that multiple rows correspond to the same entity.",
                                            {
                                              "$ul": [
                                                [
                                                  "**field**: General identifier of a data field in a storage service.",
                                                  {
                                                    "$ul": [
                                                      "**name**: Name describing the field."
                                                    ]
                                                  }
                                                ]
                                              ]
                                            }
                                          ],
                                          "**quasiIds**: Set of fields to compute k-anonymity over. When multiple fields are specified, they are considered a single composite key. Structs and repeated data types are not supported; however, nested fields are supported so long as they are not structs themselves or nested within a repeated field."
                                        ]
                                      }
                                    ],
                                    [
                                      "**kMapEstimationConfig**: Reidentifiability metric. This corresponds to a risk model similar to what is called \"journalist risk\" in the literature, except the attack dataset is statistically modeled instead of being perfectly known. This can be done using publicly available data (like the US Census), or using a custom statistical model (indicated as one or several BigQuery tables), or by extrapolating from the distribution of values in the input dataset.",
                                      {
                                        "$ul": [
                                          "**auxiliaryTables**: Several auxiliary tables can be used in the analysis. Each custom_tag used to tag a quasi-identifiers column must appear in exactly one column of one auxiliary table.",
                                          "**quasiIds**: Required. Fields considered to be quasi-identifiers. No two columns can have the same tag.",
                                          "**regionCode**: ISO 3166-1 alpha-2 region code to use in the statistical modeling. Set if no column is tagged with a region-specific InfoType (like US_ZIP_5) or a region code."
                                        ]
                                      }
                                    ],
                                    [
                                      "**lDiversityConfig**: l-diversity metric, used for analysis of reidentification risk.",
                                      {
                                        "$ul": [
                                          "**quasiIds**: Set of quasi-identifiers indicating how equivalence classes are defined for the l-diversity computation. When multiple fields are specified, they are considered a single composite key.",
                                          [
                                            "**sensitiveAttribute**: General identifier of a data field in a storage service.",
                                            {
                                              "$ul": [
                                                "**name**: Name describing the field."
                                              ]
                                            }
                                          ]
                                        ]
                                      }
                                    ],
                                    [
                                      "**numericalStatsConfig**: Compute numerical stats over an individual column, including min, max, and quantiles.",
                                      {
                                        "$ul": [
                                          [
                                            "**field**: General identifier of a data field in a storage service.",
                                            {
                                              "$ul": [
                                                "**name**: Name describing the field."
                                              ]
                                            }
                                          ]
                                        ]
                                      }
                                    ]
                                  ]
                                }
                              ],
                              [
                                "**sourceTable**: Message defining the location of a BigQuery table. A table is uniquely identified by its project_id, dataset_id, and table_name. Within a query a table is often referenced with a string in the format of: `:.` or `..`.",
                                {
                                  "$ul": [
                                    "**datasetId**: Dataset ID of the table.",
                                    "**projectId**: The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call.",
                                    "**tableId**: Name of the table."
                                  ]
                                }
                              ]
                            ]
                          }
                        ]
                      ]
                    }
                  ],
                  [
                    "**requestedPrivacyMetric**: Privacy metric to compute for reidentification risk analysis.",
                    {
                      "$ul": [
                        [
                          "**categoricalStatsConfig**: Compute numerical stats over an individual column, including number of distinct values and value count distribution.",
                          {
                            "$ul": [
                              [
                                "**field**: General identifier of a data field in a storage service.",
                                {
                                  "$ul": [
                                    "**name**: Name describing the field."
                                  ]
                                }
                              ]
                            ]
                          }
                        ],
                        [
                          "**deltaPresenceEstimationConfig**: δ-presence metric, used to estimate how likely it is for an attacker to figure out that one given individual appears in a de-identified dataset. Similarly to the k-map metric, we cannot compute δ-presence exactly without knowing the attack dataset, so we use a statistical model instead.",
                          {
                            "$ul": [
                              "**auxiliaryTables**: Several auxiliary tables can be used in the analysis. Each custom_tag used to tag a quasi-identifiers field must appear in exactly one field of one auxiliary table.",
                              "**quasiIds**: Required. Fields considered to be quasi-identifiers. No two fields can have the same tag.",
                              "**regionCode**: ISO 3166-1 alpha-2 region code to use in the statistical modeling. Set if no column is tagged with a region-specific InfoType (like US_ZIP_5) or a region code."
                            ]
                          }
                        ],
                        [
                          "**kAnonymityConfig**: k-anonymity metric, used for analysis of reidentification risk.",
                          {
                            "$ul": [
                              [
                                "**entityId**: An entity in a dataset is a field or set of fields that correspond to a single person. For example, in medical records the `EntityId` might be a patient identifier, or for financial records it might be an account identifier. This message is used when generalizations or analysis must take into account that multiple rows correspond to the same entity.",
                                {
                                  "$ul": [
                                    [
                                      "**field**: General identifier of a data field in a storage service.",
                                      {
                                        "$ul": [
                                          "**name**: Name describing the field."
                                        ]
                                      }
                                    ]
                                  ]
                                }
                              ],
                              "**quasiIds**: Set of fields to compute k-anonymity over. When multiple fields are specified, they are considered a single composite key. Structs and repeated data types are not supported; however, nested fields are supported so long as they are not structs themselves or nested within a repeated field."
                            ]
                          }
                        ],
                        [
                          "**kMapEstimationConfig**: Reidentifiability metric. This corresponds to a risk model similar to what is called \"journalist risk\" in the literature, except the attack dataset is statistically modeled instead of being perfectly known. This can be done using publicly available data (like the US Census), or using a custom statistical model (indicated as one or several BigQuery tables), or by extrapolating from the distribution of values in the input dataset.",
                          {
                            "$ul": [
                              "**auxiliaryTables**: Several auxiliary tables can be used in the analysis. Each custom_tag used to tag a quasi-identifiers column must appear in exactly one column of one auxiliary table.",
                              "**quasiIds**: Required. Fields considered to be quasi-identifiers. No two columns can have the same tag.",
                              "**regionCode**: ISO 3166-1 alpha-2 region code to use in the statistical modeling. Set if no column is tagged with a region-specific InfoType (like US_ZIP_5) or a region code."
                            ]
                          }
                        ],
                        [
                          "**lDiversityConfig**: l-diversity metric, used for analysis of reidentification risk.",
                          {
                            "$ul": [
                              "**quasiIds**: Set of quasi-identifiers indicating how equivalence classes are defined for the l-diversity computation. When multiple fields are specified, they are considered a single composite key.",
                              [
                                "**sensitiveAttribute**: General identifier of a data field in a storage service.",
                                {
                                  "$ul": [
                                    "**name**: Name describing the field."
                                  ]
                                }
                              ]
                            ]
                          }
                        ],
                        [
                          "**numericalStatsConfig**: Compute numerical stats over an individual column, including min, max, and quantiles.",
                          {
                            "$ul": [
                              [
                                "**field**: General identifier of a data field in a storage service.",
                                {
                                  "$ul": [
                                    "**name**: Name describing the field."
                                  ]
                                }
                              ]
                            ]
                          }
                        ]
                      ]
                    }
                  ],
                  [
                    "**requestedSourceTable**: Message defining the location of a BigQuery table. A table is uniquely identified by its project_id, dataset_id, and table_name. Within a query a table is often referenced with a string in the format of: `:.` or `..`.",
                    {
                      "$ul": [
                        "**datasetId**: Dataset ID of the table.",
                        "**projectId**: The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call.",
                        "**tableId**: Name of the table."
                      ]
                    }
                  ]
                ]
              }
            ],
            "**startTime**: Time when the job started.",
            "**state**: State of a job.",
            "**type**: The type of job."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
