{
  "name": "dlp_projects_locations_jobTriggers_hybridInspect",
  "description": "Inspect hybrid content and store findings to a trigger. The inspection will be processed asynchronously. To review the findings monitor the jobs within the trigger.",
  "parameters": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "Required. Resource name of the trigger to execute a hybrid inspect on, for example `projects/dlp-test-project/jobTriggers/53234423`."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GooglePrivacyDlpV2HybridInspectJobTriggerRequest"
      }
    },
    "required": [
      "name"
    ],
    "$defs": {
      "GooglePrivacyDlpV2HybridInspectJobTriggerRequest": {
        "description": "Request to search for potentially sensitive info in a custom location.",
        "properties": {
          "hybridItem": {
            "$ref": "#/$defs/GooglePrivacyDlpV2HybridContentItem"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2HybridContentItem": {
        "description": "An individual hybrid item to inspect. Will be stored temporarily during processing.",
        "properties": {
          "findingDetails": {
            "$ref": "#/$defs/GooglePrivacyDlpV2HybridFindingDetails"
          },
          "item": {
            "$ref": "#/$defs/GooglePrivacyDlpV2ContentItem"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2HybridFindingDetails": {
        "description": "Populate to associate additional data with each finding.",
        "properties": {
          "containerDetails": {
            "$ref": "#/$defs/GooglePrivacyDlpV2Container"
          },
          "fileOffset": {
            "description": "Offset in bytes of the line, from the beginning of the file, where the finding is located. Populate if the item being scanned is only part of a bigger item, such as a shard of a file and you want to track the absolute position of the finding.",
            "format": "int64",
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Labels to represent user provided metadata about the data being inspected. If configured by the job, some key values may be required. The labels associated with `Finding`'s produced by hybrid inspection. Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`. No more than 10 labels can be associated with a given finding. Examples: * `\"environment\" : \"production\"` * `\"pipeline\" : \"etl\"`",
            "type": "object"
          },
          "rowOffset": {
            "description": "Offset of the row for tables. Populate if the row(s) being scanned are part of a bigger dataset and you want to keep track of their absolute position.",
            "format": "int64",
            "type": "string"
          },
          "tableOptions": {
            "$ref": "#/$defs/GooglePrivacyDlpV2TableOptions"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2Container": {
        "description": "Represents a container that may contain DLP findings. Examples of a container include a file, table, or database record.",
        "properties": {
          "fullPath": {
            "description": "A string representation of the full container name. Examples: - BigQuery: 'Project:DataSetId.TableId' - Cloud Storage: 'gs://Bucket/folders/filename.txt'",
            "type": "string"
          },
          "projectId": {
            "description": "Project where the finding was found. Can be different from the project that owns the finding.",
            "type": "string"
          },
          "relativePath": {
            "description": "The rest of the path after the root. Examples: - For BigQuery table `project_id:dataset_id.table_id`, the relative path is `table_id` - For Cloud Storage file `gs://bucket/folder/filename.txt`, the relative path is `folder/filename.txt`",
            "type": "string"
          },
          "rootPath": {
            "description": "The root of the container. Examples: - For BigQuery table `project_id:dataset_id.table_id`, the root is `dataset_id` - For Cloud Storage file `gs://bucket/folder/filename.txt`, the root is `gs://bucket`",
            "type": "string"
          },
          "type": {
            "description": "Container type, for example BigQuery or Cloud Storage.",
            "type": "string"
          },
          "updateTime": {
            "description": "Findings container modification timestamp, if applicable. For Cloud Storage, this field contains the last file modification timestamp. For a BigQuery table, this field contains the last_modified_time property. For Datastore, this field isn't populated.",
            "format": "google-datetime",
            "type": "string"
          },
          "version": {
            "description": "Findings container version, if available (\"generation\" for Cloud Storage).",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2TableOptions": {
        "description": "Instructions regarding the table content being inspected.",
        "properties": {
          "identifyingFields": {
            "description": "The columns that are the primary keys for table objects included in ContentItem. A copy of this cell's value will stored alongside alongside each finding so that the finding can be traced to the specific row it came from. No more than 3 may be provided.",
            "items": {
              "$ref": "#/$defs/GooglePrivacyDlpV2FieldId"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2FieldId": {
        "description": "General identifier of a data field in a storage service.",
        "properties": {
          "name": {
            "description": "Name describing the field.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2ContentItem": {
        "description": "Type of content to inspect.",
        "properties": {
          "byteItem": {
            "$ref": "#/$defs/GooglePrivacyDlpV2ByteContentItem"
          },
          "table": {
            "$ref": "#/$defs/GooglePrivacyDlpV2Table"
          },
          "value": {
            "description": "String data to inspect or redact.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2ByteContentItem": {
        "description": "Container for bytes to inspect or redact.",
        "properties": {
          "data": {
            "description": "Content data to inspect or redact.",
            "format": "byte",
            "type": "string"
          },
          "type": {
            "description": "The type of data stored in the bytes string. Default will be TEXT_UTF8.",
            "enum": [
              "BYTES_TYPE_UNSPECIFIED",
              "IMAGE",
              "IMAGE_JPEG",
              "IMAGE_BMP",
              "IMAGE_PNG",
              "IMAGE_SVG",
              "TEXT_UTF8",
              "WORD_DOCUMENT",
              "PDF",
              "POWERPOINT_DOCUMENT",
              "EXCEL_DOCUMENT",
              "AVRO",
              "CSV",
              "TSV"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2Table": {
        "description": "Structured content to inspect. Up to 50,000 `Value`s per request allowed. See https://cloud.google.com/sensitive-data-protection/docs/inspecting-structured-text#inspecting_a_table to learn more.",
        "properties": {
          "headers": {
            "description": "Headers of the table.",
            "items": {
              "$ref": "#/$defs/GooglePrivacyDlpV2FieldId"
            },
            "type": "array"
          },
          "rows": {
            "description": "Rows of the table.",
            "items": {
              "$ref": "#/$defs/GooglePrivacyDlpV2Row"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2Row": {
        "description": "Values of the row.",
        "properties": {
          "values": {
            "description": "Individual cells.",
            "items": {
              "$ref": "#/$defs/GooglePrivacyDlpV2Value"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GooglePrivacyDlpV2Value": {
        "description": "Set of primitive values supported by the system. Note that for the purposes of inspection or transformation, the number of bytes considered to comprise a 'Value' is based on its representation as a UTF-8 encoded string. For example, if 'integer_value' is set to 123456789, the number of bytes would be counted as 9, even though an int64 only holds up to 8 bytes of data.",
        "properties": {
          "booleanValue": {
            "description": "boolean",
            "type": "boolean"
          },
          "dateValue": {
            "$ref": "#/$defs/GoogleTypeDate"
          },
          "dayOfWeekValue": {
            "description": "day of week",
            "enum": [
              "DAY_OF_WEEK_UNSPECIFIED",
              "MONDAY",
              "TUESDAY",
              "WEDNESDAY",
              "THURSDAY",
              "FRIDAY",
              "SATURDAY",
              "SUNDAY"
            ],
            "type": "string"
          },
          "floatValue": {
            "description": "float",
            "format": "double",
            "type": "number"
          },
          "integerValue": {
            "description": "integer",
            "format": "int64",
            "type": "string"
          },
          "stringValue": {
            "description": "string",
            "type": "string"
          },
          "timeValue": {
            "$ref": "#/$defs/GoogleTypeTimeOfDay"
          },
          "timestampValue": {
            "description": "timestamp",
            "format": "google-datetime",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleTypeDate": {
        "description": "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp",
        "properties": {
          "day": {
            "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
            "format": "int32",
            "type": "integer"
          },
          "month": {
            "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
            "format": "int32",
            "type": "integer"
          },
          "year": {
            "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GoogleTypeTimeOfDay": {
        "description": "Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.",
        "properties": {
          "hours": {
            "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \"24:00:00\" for scenarios like business closing time.",
            "format": "int32",
            "type": "integer"
          },
          "minutes": {
            "description": "Minutes of hour of day. Must be from 0 to 59.",
            "format": "int32",
            "type": "integer"
          },
          "nanos": {
            "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.",
            "format": "int32",
            "type": "integer"
          },
          "seconds": {
            "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://dlp.googleapis.com//v2/{name}:hybridInspect{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Quota exceeded errors will be thrown once quota has been met.",
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
