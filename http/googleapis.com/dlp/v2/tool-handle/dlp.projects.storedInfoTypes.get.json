{
  "name": "dlp_projects_storedInfoTypes_get",
  "description": "Gets a stored infoType. See https://cloud.google.com/sensitive-data-protection/docs/creating-stored-infotypes to learn more.",
  "parameters": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "Required. Resource name of the organization and storedInfoType to be read, for example `organizations/433245324/storedInfoTypes/432452342` or projects/project-id/storedInfoTypes/432452342."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      }
    },
    "required": [
      "name"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://dlp.googleapis.com//v2/{name}{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "StoredInfoType resource message that contains information about the current version and any pending updates.",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**currentVersion**: Version of a StoredInfoType, including the configuration used to build it, create timestamp, and current state.",
              {
                "$ul": [
                  [
                    "**config**: Configuration for stored infoTypes. All fields and subfield are provided by the user. For more information, see https://cloud.google.com/sensitive-data-protection/docs/creating-custom-infotypes.",
                    {
                      "$ul": [
                        "**description**: Description of the StoredInfoType (max 256 characters).",
                        [
                          "**dictionary**: Custom information type based on a dictionary of words or phrases. This can be used to match sensitive information specific to the data, such as a list of employee IDs or job titles. Dictionary words are case-insensitive and all characters other than letters and digits in the unicode [Basic Multilingual Plane](https://en.wikipedia.org/wiki/Plane_%28Unicode%29#Basic_Multilingual_Plane) will be replaced with whitespace when scanning for matches, so the dictionary phrase \"Sam Johnson\" will match all three phrases \"sam johnson\", \"Sam, Johnson\", and \"Sam (Johnson)\". Additionally, the characters surrounding any match must be of a different type than the adjacent characters within the word, so letters must be next to non-letters and digits next to non-digits. For example, the dictionary word \"jen\" will match the first three letters of the text \"jen123\" but will return no matches for \"jennifer\". Dictionary words containing a large number of characters that are not letters or digits may result in unexpected findings because such characters are treated as whitespace. The [limits](https://cloud.google.com/sensitive-data-protection/limits) page contains details about the size limits of dictionaries. For dictionaries that do not fit within these constraints, consider using `LargeCustomDictionaryConfig` in the `StoredInfoType` API.",
                          {
                            "$ul": [
                              [
                                "**cloudStoragePath**: Message representing a single file or path in Cloud Storage.",
                                {
                                  "$ul": [
                                    "**path**: A URL representing a file or path (no wildcards) in Cloud Storage. Example: `gs://[BUCKET_NAME]/dictionary.txt`"
                                  ]
                                }
                              ],
                              [
                                "**wordList**: Message defining a list of words or phrases to search for in the data.",
                                {
                                  "$ul": [
                                    "**words**: Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                                  ]
                                }
                              ]
                            ]
                          }
                        ],
                        "**displayName**: Display name of the StoredInfoType (max 256 characters).",
                        [
                          "**largeCustomDictionary**: Configuration for a custom dictionary created from a data source of any size up to the maximum size defined in the [limits](https://cloud.google.com/sensitive-data-protection/limits) page. The artifacts of dictionary creation are stored in the specified Cloud Storage location. Consider using `CustomInfoType.Dictionary` for smaller dictionaries that satisfy the size requirements.",
                          {
                            "$ul": [
                              [
                                "**bigQueryField**: Message defining a field of a BigQuery table.",
                                {
                                  "$ul": [
                                    [
                                      "**field**: General identifier of a data field in a storage service.",
                                      {
                                        "$ul": [
                                          "**name**: Name describing the field."
                                        ]
                                      }
                                    ],
                                    [
                                      "**table**: Message defining the location of a BigQuery table. A table is uniquely identified by its project_id, dataset_id, and table_name. Within a query a table is often referenced with a string in the format of: `:.` or `..`.",
                                      {
                                        "$ul": [
                                          "**datasetId**: Dataset ID of the table.",
                                          "**projectId**: The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call.",
                                          "**tableId**: Name of the table."
                                        ]
                                      }
                                    ]
                                  ]
                                }
                              ],
                              [
                                "**cloudStorageFileSet**: Message representing a set of files in Cloud Storage.",
                                {
                                  "$ul": [
                                    "**url**: The url, in the format `gs:///`. Trailing wildcard in the path is allowed."
                                  ]
                                }
                              ],
                              [
                                "**outputPath**: Message representing a single file or path in Cloud Storage.",
                                {
                                  "$ul": [
                                    "**path**: A URL representing a file or path (no wildcards) in Cloud Storage. Example: `gs://[BUCKET_NAME]/dictionary.txt`"
                                  ]
                                }
                              ]
                            ]
                          }
                        ],
                        [
                          "**regex**: Message defining a custom regular expression.",
                          {
                            "$ul": [
                              "**groupIndexes**: The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included.",
                              "**pattern**: Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                            ]
                          }
                        ]
                      ]
                    }
                  ],
                  "**createTime**: Create timestamp of the version. Read-only, determined by the system when the version is created.",
                  "**errors**: Errors that occurred when creating this storedInfoType version, or anomalies detected in the storedInfoType data that render it unusable. Only the five most recent errors will be displayed, with the most recent error appearing first. For example, some of the data for stored custom dictionaries is put in the user's Cloud Storage bucket, and if this data is modified or deleted by the user or another system, the dictionary becomes invalid. If any errors occur, fix the problem indicated by the error message and use the UpdateStoredInfoType API method to create another version of the storedInfoType to continue using it, reusing the same `config` if it was not the source of the error.",
                  "**state**: Stored info type version state. Read-only, updated by the system during dictionary creation.",
                  [
                    "**stats**: Statistics for a StoredInfoType.",
                    {
                      "$ul": [
                        [
                          "**largeCustomDictionary**: Summary statistics of a custom dictionary.",
                          {
                            "$ul": [
                              "**approxNumPhrases**: Approximate number of distinct phrases in the dictionary."
                            ]
                          }
                        ]
                      ]
                    }
                  ]
                ]
              }
            ],
            "**name**: Resource name.",
            "**pendingVersions**: Pending versions of the stored info type. Empty if no versions are pending."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
