{
  "name": "firebaseappcheck_projects_services_batchUpdate",
  "description": "Atomically updates the specified Service configurations.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The parent project name shared by all Service configurations being updated, in the format ``` projects/{project_number} ``` The parent collection in the `name` field of any resource being updated must match this field, or the entire batch fails."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleFirebaseAppcheckV1betaBatchUpdateServicesRequest"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "GoogleFirebaseAppcheckV1betaBatchUpdateServicesRequest": {
        "description": "Request message for the BatchUpdateServices method.",
        "properties": {
          "requests": {
            "description": "Required. The request messages specifying the Services to update. A maximum of 100 objects can be updated in a batch.",
            "items": {
              "$ref": "#/$defs/GoogleFirebaseAppcheckV1betaUpdateServiceRequest"
            },
            "type": "array"
          },
          "updateMask": {
            "description": "Optional. A comma-separated list of names of fields in the Services to update. Example: `display_name`. If this field is present, the `update_mask` field in the UpdateServiceRequest messages must all match this field, or the entire batch fails and no updates will be committed.",
            "format": "google-fieldmask",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleFirebaseAppcheckV1betaUpdateServiceRequest": {
        "description": "Request message for the UpdateService method as well as an individual update message for the BatchUpdateServices method.",
        "properties": {
          "service": {
            "$ref": "#/$defs/GoogleFirebaseAppcheckV1betaService"
          },
          "updateMask": {
            "description": "Required. A comma-separated list of names of fields in the Service to update. Example: `enforcement_mode`.",
            "format": "google-fieldmask",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleFirebaseAppcheckV1betaService": {
        "description": "The enforcement configuration for a Firebase service supported by App Check.",
        "properties": {
          "enforcementMode": {
            "description": "Required. The App Check enforcement mode for this service.",
            "enum": [
              "OFF",
              "UNENFORCED",
              "ENFORCED"
            ],
            "type": "string"
          },
          "etag": {
            "description": "This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding. This etag is strongly validated as defined by RFC 7232.",
            "type": "string"
          },
          "name": {
            "description": "Required. The relative resource name of the service configuration object, in the format: ``` projects/{project_number}/services/{service_id} ``` Note that the `service_id` element must be a supported service ID. Currently, the following service IDs are supported: * `firebasestorage.googleapis.com` (Cloud Storage for Firebase) * `firebasedatabase.googleapis.com` (Firebase Realtime Database) * `firestore.googleapis.com` (Cloud Firestore) * `identitytoolkit.googleapis.com` (Firebase Authentication with Identity Platform)",
            "type": "string"
          },
          "updateTime": {
            "description": "Output only. Timestamp when this service configuration object was most recently updated.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://firebaseappcheck.googleapis.com//v1beta/{parent}/services:batchUpdate{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Response message for the BatchUpdateServices method.",
        "**Key properties:**",
        {
          "$ul": [
            "**services**: Service objects after the updates have been applied."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
