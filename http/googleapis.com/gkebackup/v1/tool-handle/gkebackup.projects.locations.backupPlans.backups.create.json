{
  "name": "gkebackup_projects_locations_backupPlans_backups_create",
  "description": "Creates a Backup for the given BackupPlan.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The BackupPlan within which to create the Backup. Format: `projects/*/locations/*/backupPlans/*`"
      },
      "backupId": {
        "type": "string",
        "description": "Optional. The client-provided short name for the Backup resource. This name must: - be between 1 and 63 characters long (inclusive) - consist of only lower-case ASCII letters, numbers, and dashes - start with a lower-case letter - end with a lower-case letter or number - be unique within the set of Backups in this BackupPlan"
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/Backup"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "Backup": {
        "description": "Represents a request to perform a single point-in-time capture of some portion of the state of a GKE cluster, the record of the backup operation itself, and an anchor for the underlying artifacts that comprise the Backup (the config backup and VolumeBackups). Next id: 29",
        "properties": {
          "allNamespaces": {
            "description": "Output only. If True, all namespaces were included in the Backup.",
            "readOnly": true,
            "type": "boolean"
          },
          "clusterMetadata": {
            "$ref": "#/$defs/ClusterMetadata"
          },
          "completeTime": {
            "description": "Output only. Completion time of the Backup",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "configBackupSizeBytes": {
            "description": "Output only. The size of the config backup in bytes.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "containsSecrets": {
            "description": "Output only. Whether or not the Backup contains Kubernetes Secrets. Controlled by the parent BackupPlan's include_secrets value.",
            "readOnly": true,
            "type": "boolean"
          },
          "containsVolumeData": {
            "description": "Output only. Whether or not the Backup contains volume data. Controlled by the parent BackupPlan's include_volume_data value.",
            "readOnly": true,
            "type": "boolean"
          },
          "createTime": {
            "description": "Output only. The timestamp when this Backup resource was created.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "deleteLockDays": {
            "description": "Optional. Minimum age for this Backup (in days). If this field is set to a non-zero value, the Backup will be \"locked\" against deletion (either manual or automatic deletion) for the number of days provided (measured from the creation time of the Backup). MUST be an integer value between 0-90 (inclusive). Defaults to parent BackupPlan's backup_delete_lock_days setting and may only be increased (either at creation time or in a subsequent update).",
            "format": "int32",
            "type": "integer"
          },
          "deleteLockExpireTime": {
            "description": "Output only. The time at which an existing delete lock will expire for this backup (calculated from create_time + delete_lock_days).",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "description": {
            "description": "Optional. User specified descriptive string for this Backup.",
            "type": "string"
          },
          "encryptionKey": {
            "$ref": "#/$defs/EncryptionKey"
          },
          "etag": {
            "description": "Output only. `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a backup from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform backup updates in order to avoid race conditions: An `etag` is returned in the response to `GetBackup`, and systems are expected to put that etag in the request to `UpdateBackup` or `DeleteBackup` to ensure that their change will be applied to the same version of the resource.",
            "readOnly": true,
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Optional. A set of custom labels supplied by user.",
            "type": "object"
          },
          "manual": {
            "description": "Output only. This flag indicates whether this Backup resource was created manually by a user or via a schedule in the BackupPlan. A value of True means that the Backup was created manually.",
            "readOnly": true,
            "type": "boolean"
          },
          "name": {
            "description": "Output only. The fully qualified name of the Backup. `projects/*/locations/*/backupPlans/*/backups/*`",
            "readOnly": true,
            "type": "string"
          },
          "podCount": {
            "description": "Output only. The total number of Kubernetes Pods contained in the Backup.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "resourceCount": {
            "description": "Output only. The total number of Kubernetes resources included in the Backup.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "retainDays": {
            "description": "Optional. The age (in days) after which this Backup will be automatically deleted. Must be an integer value >= 0: - If 0, no automatic deletion will occur for this Backup. - If not 0, this must be >= delete_lock_days and <= 365. Once a Backup is created, this value may only be increased. Defaults to the parent BackupPlan's backup_retain_days value.",
            "format": "int32",
            "type": "integer"
          },
          "retainExpireTime": {
            "description": "Output only. The time at which this Backup will be automatically deleted (calculated from create_time + retain_days).",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "selectedApplications": {
            "$ref": "#/$defs/NamespacedNames"
          },
          "selectedNamespaces": {
            "$ref": "#/$defs/Namespaces"
          },
          "sizeBytes": {
            "description": "Output only. The total size of the Backup in bytes = config backup size + sum(volume backup sizes)",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          },
          "state": {
            "description": "Output only. Current state of the Backup",
            "enum": [
              "STATE_UNSPECIFIED",
              "CREATING",
              "IN_PROGRESS",
              "SUCCEEDED",
              "FAILED",
              "DELETING"
            ],
            "readOnly": true,
            "type": "string"
          },
          "stateReason": {
            "description": "Output only. Human-readable description of why the backup is in the current `state`.",
            "readOnly": true,
            "type": "string"
          },
          "uid": {
            "description": "Output only. Server generated global unique identifier of [UUID4](https://en.wikipedia.org/wiki/Universally_unique_identifier)",
            "readOnly": true,
            "type": "string"
          },
          "updateTime": {
            "description": "Output only. The timestamp when this Backup resource was last updated.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "volumeCount": {
            "description": "Output only. The total number of volume backups contained in the Backup.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ClusterMetadata": {
        "description": "Information about the GKE cluster from which this Backup was created.",
        "properties": {
          "anthosVersion": {
            "description": "Output only. Anthos version",
            "readOnly": true,
            "type": "string"
          },
          "backupCrdVersions": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Output only. A list of the Backup for GKE CRD versions found in the cluster.",
            "readOnly": true,
            "type": "object"
          },
          "cluster": {
            "description": "Output only. The source cluster from which this Backup was created. Valid formats: - `projects/*/locations/*/clusters/*` - `projects/*/zones/*/clusters/*` This is inherited from the parent BackupPlan's cluster field.",
            "readOnly": true,
            "type": "string"
          },
          "gkeVersion": {
            "description": "Output only. GKE version",
            "readOnly": true,
            "type": "string"
          },
          "k8sVersion": {
            "description": "Output only. The Kubernetes server version of the source cluster.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "EncryptionKey": {
        "description": "Defined a customer managed encryption key that will be used to encrypt Backup artifacts.",
        "properties": {
          "gcpKmsEncryptionKey": {
            "description": "Optional. Google Cloud KMS encryption key. Format: `projects/*/locations/*/keyRings/*/cryptoKeys/*`",
            "type": "string"
          }
        },
        "type": "object"
      },
      "NamespacedNames": {
        "description": "A list of namespaced Kubernetes resources.",
        "properties": {
          "namespacedNames": {
            "description": "Optional. A list of namespaced Kubernetes resources.",
            "items": {
              "$ref": "#/$defs/NamespacedName"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "NamespacedName": {
        "description": "A reference to a namespaced resource in Kubernetes.",
        "properties": {
          "name": {
            "description": "Optional. The name of the Kubernetes resource.",
            "type": "string"
          },
          "namespace": {
            "description": "Optional. The Namespace of the Kubernetes resource.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Namespaces": {
        "description": "A list of Kubernetes Namespaces",
        "properties": {
          "namespaces": {
            "description": "Optional. A list of Kubernetes Namespaces",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://gkebackup.googleapis.com//v1/{parent}/backups{?backupId,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "This resource represents a long-running operation that is the result of a network API call.",
        "**Key properties:**",
        {
          "$ul": [
            "**done**: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
            [
              "**error**: The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
              {
                "$ul": [
                  "**code**: The status code, which should be an enum value of google.rpc.Code.",
                  "**details**: A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                  "**message**: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                ]
              }
            ],
            "**metadata**: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
            "**name**: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
            "**response**: The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
