{
  "name": "gkebackup_projects_locations_restorePlans_create",
  "description": "Creates a new RestorePlan in a given location.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The location within which to create the RestorePlan. Format: `projects/*/locations/*`"
      },
      "restorePlanId": {
        "type": "string",
        "description": "Required. The client-provided short name for the RestorePlan resource. This name must: - be between 1 and 63 characters long (inclusive) - consist of only lower-case ASCII letters, numbers, and dashes - start with a lower-case letter - end with a lower-case letter or number - be unique within the set of RestorePlans in this location"
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/RestorePlan"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "RestorePlan": {
        "description": "The configuration of a potential series of Restore operations to be performed against Backups belong to a particular BackupPlan. Next id: 13",
        "properties": {
          "backupPlan": {
            "description": "Required. Immutable. A reference to the BackupPlan from which Backups may be used as the source for Restores created via this RestorePlan. Format: `projects/*/locations/*/backupPlans/*`.",
            "type": "string"
          },
          "cluster": {
            "description": "Required. Immutable. The target cluster into which Restores created via this RestorePlan will restore data. NOTE: the cluster's region must be the same as the RestorePlan. Valid formats: - `projects/*/locations/*/clusters/*` - `projects/*/zones/*/clusters/*`",
            "type": "string"
          },
          "createTime": {
            "description": "Output only. The timestamp when this RestorePlan resource was created.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "description": {
            "description": "Optional. User specified descriptive string for this RestorePlan.",
            "type": "string"
          },
          "etag": {
            "description": "Output only. `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a restore from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform restore updates in order to avoid race conditions: An `etag` is returned in the response to `GetRestorePlan`, and systems are expected to put that etag in the request to `UpdateRestorePlan` or `DeleteRestorePlan` to ensure that their change will be applied to the same version of the resource.",
            "readOnly": true,
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Optional. A set of custom labels supplied by user.",
            "type": "object"
          },
          "name": {
            "description": "Output only. The full name of the RestorePlan resource. Format: `projects/*/locations/*/restorePlans/*`.",
            "readOnly": true,
            "type": "string"
          },
          "restoreConfig": {
            "$ref": "#/$defs/RestoreConfig"
          },
          "state": {
            "description": "Output only. State of the RestorePlan. This State field reflects the various stages a RestorePlan can be in during the Create operation.",
            "enum": [
              "STATE_UNSPECIFIED",
              "CLUSTER_PENDING",
              "READY",
              "FAILED",
              "DELETING"
            ],
            "readOnly": true,
            "type": "string"
          },
          "stateReason": {
            "description": "Output only. Human-readable description of why RestorePlan is in the current `state`",
            "readOnly": true,
            "type": "string"
          },
          "uid": {
            "description": "Output only. Server generated global unique identifier of [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier) format.",
            "readOnly": true,
            "type": "string"
          },
          "updateTime": {
            "description": "Output only. The timestamp when this RestorePlan resource was last updated.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "RestoreConfig": {
        "description": "Configuration of a restore. Next id: 14",
        "properties": {
          "allNamespaces": {
            "description": "Restore all namespaced resources in the Backup if set to \"True\". Specifying this field to \"False\" is an error.",
            "type": "boolean"
          },
          "clusterResourceConflictPolicy": {
            "description": "Optional. Defines the behavior for handling the situation where cluster-scoped resources being restored already exist in the target cluster. This MUST be set to a value other than CLUSTER_RESOURCE_CONFLICT_POLICY_UNSPECIFIED if cluster_resource_restore_scope is not empty.",
            "enum": [
              "CLUSTER_RESOURCE_CONFLICT_POLICY_UNSPECIFIED",
              "USE_EXISTING_VERSION",
              "USE_BACKUP_VERSION"
            ],
            "type": "string"
          },
          "clusterResourceRestoreScope": {
            "$ref": "#/$defs/ClusterResourceRestoreScope"
          },
          "excludedNamespaces": {
            "$ref": "#/$defs/Namespaces"
          },
          "namespacedResourceRestoreMode": {
            "description": "Optional. Defines the behavior for handling the situation where sets of namespaced resources being restored already exist in the target cluster. This MUST be set to a value other than NAMESPACED_RESOURCE_RESTORE_MODE_UNSPECIFIED.",
            "enum": [
              "NAMESPACED_RESOURCE_RESTORE_MODE_UNSPECIFIED",
              "DELETE_AND_RESTORE",
              "FAIL_ON_CONFLICT"
            ],
            "type": "string"
          },
          "noNamespaces": {
            "description": "Do not restore any namespaced resources if set to \"True\". Specifying this field to \"False\" is not allowed.",
            "type": "boolean"
          },
          "selectedApplications": {
            "$ref": "#/$defs/NamespacedNames"
          },
          "selectedNamespaces": {
            "$ref": "#/$defs/Namespaces"
          },
          "substitutionRules": {
            "description": "Optional. A list of transformation rules to be applied against Kubernetes resources as they are selected for restoration from a Backup. Rules are executed in order defined - this order matters, as changes made by a rule may impact the filtering logic of subsequent rules. An empty list means no substitution will occur.",
            "items": {
              "$ref": "#/$defs/SubstitutionRule"
            },
            "type": "array"
          },
          "transformationRules": {
            "description": "Optional. A list of transformation rules to be applied against Kubernetes resources as they are selected for restoration from a Backup. Rules are executed in order defined - this order matters, as changes made by a rule may impact the filtering logic of subsequent rules. An empty list means no transformation will occur.",
            "items": {
              "$ref": "#/$defs/TransformationRule"
            },
            "type": "array"
          },
          "volumeDataRestorePolicy": {
            "description": "Optional. Specifies the mechanism to be used to restore volume data. Default: VOLUME_DATA_RESTORE_POLICY_UNSPECIFIED (will be treated as NO_VOLUME_DATA_RESTORATION).",
            "enum": [
              "VOLUME_DATA_RESTORE_POLICY_UNSPECIFIED",
              "RESTORE_VOLUME_DATA_FROM_BACKUP",
              "REUSE_VOLUME_HANDLE_FROM_BACKUP",
              "NO_VOLUME_DATA_RESTORATION"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "ClusterResourceRestoreScope": {
        "description": "Defines the scope of cluster-scoped resources to restore. Some group kinds are not reasonable choices for a restore, and will cause an error if selected here. Any scope selection that would restore \"all valid\" resources automatically excludes these group kinds. - gkebackup.gke.io/BackupJob - gkebackup.gke.io/RestoreJob - metrics.k8s.io/NodeMetrics - migration.k8s.io/StorageState - migration.k8s.io/StorageVersionMigration - Node - snapshot.storage.k8s.io/VolumeSnapshotContent - storage.k8s.io/CSINode Some group kinds are driven by restore configuration elsewhere, and will cause an error if selected here. - Namespace - PersistentVolume",
        "properties": {
          "allGroupKinds": {
            "description": "Optional. If True, all valid cluster-scoped resources will be restored. Mutually exclusive to any other field in the message.",
            "type": "boolean"
          },
          "excludedGroupKinds": {
            "description": "Optional. A list of cluster-scoped resource group kinds to NOT restore from the backup. If specified, all valid cluster-scoped resources will be restored except for those specified in the list. Mutually exclusive to any other field in the message.",
            "items": {
              "$ref": "#/$defs/GroupKind"
            },
            "type": "array"
          },
          "noGroupKinds": {
            "description": "Optional. If True, no cluster-scoped resources will be restored. This has the same restore scope as if the message is not defined. Mutually exclusive to any other field in the message.",
            "type": "boolean"
          },
          "selectedGroupKinds": {
            "description": "Optional. A list of cluster-scoped resource group kinds to restore from the backup. If specified, only the selected resources will be restored. Mutually exclusive to any other field in the message.",
            "items": {
              "$ref": "#/$defs/GroupKind"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GroupKind": {
        "description": "This is a direct map to the Kubernetes GroupKind type [GroupKind](https://godoc.org/k8s.io/apimachinery/pkg/runtime/schema#GroupKind) and is used for identifying specific \"types\" of resources to restore.",
        "properties": {
          "resourceGroup": {
            "description": "Optional. API group string of a Kubernetes resource, e.g. \"apiextensions.k8s.io\", \"storage.k8s.io\", etc. Note: use empty string for core API group",
            "type": "string"
          },
          "resourceKind": {
            "description": "Optional. Kind of a Kubernetes resource, must be in UpperCamelCase (PascalCase) and singular form. E.g. \"CustomResourceDefinition\", \"StorageClass\", etc.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Namespaces": {
        "description": "A list of Kubernetes Namespaces",
        "properties": {
          "namespaces": {
            "description": "Optional. A list of Kubernetes Namespaces",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "NamespacedNames": {
        "description": "A list of namespaced Kubernetes resources.",
        "properties": {
          "namespacedNames": {
            "description": "Optional. A list of namespaced Kubernetes resources.",
            "items": {
              "$ref": "#/$defs/NamespacedName"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "NamespacedName": {
        "description": "A reference to a namespaced resource in Kubernetes.",
        "properties": {
          "name": {
            "description": "Optional. The name of the Kubernetes resource.",
            "type": "string"
          },
          "namespace": {
            "description": "Optional. The Namespace of the Kubernetes resource.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SubstitutionRule": {
        "description": "A transformation rule to be applied against Kubernetes resources as they are selected for restoration from a Backup. A rule contains both filtering logic (which resources are subject to substitution) and substitution logic.",
        "properties": {
          "newValue": {
            "description": "Optional. This is the new value to set for any fields that pass the filtering and selection criteria. To remove a value from a Kubernetes resource, either leave this field unspecified, or set it to the empty string (\"\").",
            "type": "string"
          },
          "originalValuePattern": {
            "description": "Optional. (Filtering parameter) This is a [regular expression] (https://en.wikipedia.org/wiki/Regular_expression) that is compared against the fields matched by the target_json_path expression (and must also have passed the previous filters). Substitution will not be performed against fields whose value does not match this expression. If this field is NOT specified, then ALL fields matched by the target_json_path expression will undergo substitution. Note that an empty (e.g., \"\", rather than unspecified) value for this field will only match empty fields.",
            "type": "string"
          },
          "targetGroupKinds": {
            "description": "Optional. (Filtering parameter) Any resource subject to substitution must belong to one of the listed \"types\". If this field is not provided, no type filtering will be performed (all resources of all types matching previous filtering parameters will be candidates for substitution).",
            "items": {
              "$ref": "#/$defs/GroupKind"
            },
            "type": "array"
          },
          "targetJsonPath": {
            "description": "Required. This is a [JSONPath] (https://kubernetes.io/docs/reference/kubectl/jsonpath/) expression that matches specific fields of candidate resources and it operates as both a filtering parameter (resources that are not matched with this expression will not be candidates for substitution) as well as a field identifier (identifies exactly which fields out of the candidate resources will be modified).",
            "type": "string"
          },
          "targetNamespaces": {
            "description": "Optional. (Filtering parameter) Any resource subject to substitution must be contained within one of the listed Kubernetes Namespace in the Backup. If this field is not provided, no namespace filtering will be performed (all resources in all Namespaces, including all cluster-scoped resources, will be candidates for substitution). To mix cluster-scoped and namespaced resources in the same rule, use an empty string (\"\") as one of the target namespaces.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "TransformationRule": {
        "description": "A transformation rule to be applied against Kubernetes resources as they are selected for restoration from a Backup. A rule contains both filtering logic (which resources are subject to transform) and transformation logic.",
        "properties": {
          "description": {
            "description": "Optional. The description is a user specified string description of the transformation rule.",
            "type": "string"
          },
          "fieldActions": {
            "description": "Required. A list of transformation rule actions to take against candidate resources. Actions are executed in order defined - this order matters, as they could potentially interfere with each other and the first operation could affect the outcome of the second operation.",
            "items": {
              "$ref": "#/$defs/TransformationRuleAction"
            },
            "type": "array"
          },
          "resourceFilter": {
            "$ref": "#/$defs/ResourceFilter"
          }
        },
        "type": "object"
      },
      "TransformationRuleAction": {
        "description": "TransformationRuleAction defines a TransformationRule action based on the JSON Patch RFC (https://www.rfc-editor.org/rfc/rfc6902)",
        "properties": {
          "fromPath": {
            "description": "Optional. A string containing a JSON Pointer value that references the location in the target document to move the value from.",
            "type": "string"
          },
          "op": {
            "description": "Required. op specifies the operation to perform.",
            "enum": [
              "OP_UNSPECIFIED",
              "REMOVE",
              "MOVE",
              "COPY",
              "ADD",
              "TEST",
              "REPLACE"
            ],
            "type": "string"
          },
          "path": {
            "description": "Optional. A string containing a JSON-Pointer value that references a location within the target document where the operation is performed.",
            "type": "string"
          },
          "value": {
            "description": "Optional. A string that specifies the desired value in string format to use for transformation.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResourceFilter": {
        "description": "ResourceFilter specifies matching criteria to limit the scope of a change to a specific set of kubernetes resources that are selected for restoration from a backup.",
        "properties": {
          "groupKinds": {
            "description": "Optional. (Filtering parameter) Any resource subject to transformation must belong to one of the listed \"types\". If this field is not provided, no type filtering will be performed (all resources of all types matching previous filtering parameters will be candidates for transformation).",
            "items": {
              "$ref": "#/$defs/GroupKind"
            },
            "type": "array"
          },
          "jsonPath": {
            "description": "Optional. This is a [JSONPath] (https://github.com/json-path/JsonPath/blob/master/README.md) expression that matches specific fields of candidate resources and it operates as a filtering parameter (resources that are not matched with this expression will not be candidates for transformation).",
            "type": "string"
          },
          "namespaces": {
            "description": "Optional. (Filtering parameter) Any resource subject to transformation must be contained within one of the listed Kubernetes Namespace in the Backup. If this field is not provided, no namespace filtering will be performed (all resources in all Namespaces, including all cluster-scoped resources, will be candidates for transformation).",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://gkebackup.googleapis.com//v1/{parent}/restorePlans{?restorePlanId,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "This resource represents a long-running operation that is the result of a network API call.",
        "**Key properties:**",
        {
          "$ul": [
            "**done**: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
            [
              "**error**: The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
              {
                "$ul": [
                  "**code**: The status code, which should be an enum value of google.rpc.Code.",
                  "**details**: A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                  "**message**: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                ]
              }
            ],
            "**metadata**: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
            "**name**: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
            "**response**: The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
