{
  "name": "connectors_projects_locations_connections_executeSqlQuery",
  "description": "Executes a SQL statement specified in the body of the request. An example of this SQL statement in the case of Salesforce connector would be 'select * from Account a, Order o where a.Id = o.AccountId'.",
  "parameters": {
    "type": "object",
    "properties": {
      "connection": {
        "type": "string",
        "description": "Required. Resource name of the Connection. Format: projects/{project}/locations/{location}/connections/{connection}"
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/ExecuteSqlQueryRequest"
      }
    },
    "required": [
      "connection"
    ],
    "$defs": {
      "ExecuteSqlQueryRequest": {
        "description": "An execute sql query request containing the query and the connection to execute it on.",
        "properties": {
          "query": {
            "$ref": "#/$defs/Query"
          }
        },
        "type": "object"
      },
      "Query": {
        "description": "A wrapper around the SQL query statement. This is needed so that the JSON representation of ExecuteSqlQueryRequest has the following format: `{\"query\":\"select *\"}`.",
        "properties": {
          "maxRows": {
            "description": "Sets the limit for the maximum number of rows returned after the query execution.",
            "format": "int64",
            "type": "string"
          },
          "query": {
            "description": "Required. Sql query to execute.",
            "type": "string"
          },
          "queryParameters": {
            "description": "In the struct, the value corresponds to the value of query parameter and date type corresponds to the date type of the query parameter.",
            "items": {
              "$ref": "#/$defs/QueryParameter"
            },
            "type": "array"
          },
          "timeout": {
            "description": "Sets the number of seconds the driver will wait for a query to execute.",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "QueryParameter": {
        "description": "Query parameter definition",
        "properties": {
          "dataType": {
            "enum": [
              "DATA_TYPE_UNSPECIFIED",
              "INT",
              "SMALLINT",
              "DOUBLE",
              "DATE",
              "DATETIME",
              "TIME",
              "STRING",
              "LONG",
              "BOOLEAN",
              "DECIMAL",
              "UUID",
              "BLOB",
              "BIT",
              "TINYINT",
              "INTEGER",
              "BIGINT",
              "FLOAT",
              "REAL",
              "NUMERIC",
              "CHAR",
              "VARCHAR",
              "LONGVARCHAR",
              "TIMESTAMP",
              "NCHAR",
              "NVARCHAR",
              "LONGNVARCHAR",
              "NULL",
              "OTHER",
              "JAVA_OBJECT",
              "DISTINCT",
              "STRUCT",
              "ARRAY",
              "CLOB",
              "REF",
              "DATALINK",
              "ROWID",
              "BINARY",
              "VARBINARY",
              "LONGVARBINARY",
              "NCLOB",
              "SQLXML",
              "REF_CURSOR",
              "TIME_WITH_TIMEZONE",
              "TIMESTAMP_WITH_TIMEZONE"
            ],
            "type": "string",
            "x-enumDeprecated": [
              false,
              true,
              false,
              false,
              false,
              true,
              false,
              true,
              true,
              false,
              false,
              true,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false
            ]
          },
          "value": {}
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://connectors.googleapis.com//v2/{connection}:executeSqlQuery{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A response returned by the connection after executing the sql query.",
        "**Key properties:**",
        {
          "$ul": [
            "**results**: In the case of successful execution of the query the response contains results returned by the external system. For example, the result rows of the query are contained in the 'results' Struct list - \"results\": [ { \"field1\": \"val1\", \"field2\": \"val2\",.. },.. ] Each Struct row can contain fields any type of like nested Structs or lists."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
