{
  "name": "identitytoolkit_relyingparty_createAuthUri",
  "description": "Creates the URI used by the IdP to authenticate the user.",
  "parameters": {
    "type": "object",
    "properties": {
      "alt": {
        "enum": [
          "json"
        ],
        "type": "string",
        "description": "Data format for the response."
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "An opaque string that represents a user for quota purposes. Must not exceed 40 characters."
      },
      "userIp": {
        "type": "string",
        "description": "Deprecated. Please use quotaUser instead."
      },
      "body": {
        "$ref": "#/$defs/IdentitytoolkitRelyingpartyCreateAuthUriRequest"
      }
    },
    "$defs": {
      "IdentitytoolkitRelyingpartyCreateAuthUriRequest": {
        "description": "Request to get the IDP authentication URL.",
        "properties": {
          "appId": {
            "description": "The app ID of the mobile app, base64(CERT_SHA1):PACKAGE_NAME for Android, BUNDLE_ID for iOS.",
            "type": "string"
          },
          "authFlowType": {
            "description": "Explicitly specify the auth flow type. Currently only support \"CODE_FLOW\" type. The field is only used for Google provider.",
            "type": "string"
          },
          "clientId": {
            "description": "The relying party OAuth client ID.",
            "type": "string"
          },
          "context": {
            "description": "The opaque value used by the client to maintain context info between the authentication request and the IDP callback.",
            "type": "string"
          },
          "continueUri": {
            "description": "The URI to which the IDP redirects the user after the federated login flow.",
            "type": "string"
          },
          "customParameter": {
            "additionalProperties": {
              "description": "The customized query parameter.",
              "type": "string"
            },
            "description": "The query parameter that client can customize by themselves in auth url. The following parameters are reserved for server so that they cannot be customized by clients: client_id, response_type, scope, redirect_uri, state, oauth_token.",
            "type": "object"
          },
          "hostedDomain": {
            "description": "The hosted domain to restrict sign-in to accounts at that domain for Google Apps hosted accounts.",
            "type": "string"
          },
          "identifier": {
            "description": "The email or federated ID of the user.",
            "type": "string"
          },
          "oauthConsumerKey": {
            "description": "The developer's consumer key for OpenId OAuth Extension",
            "type": "string"
          },
          "oauthScope": {
            "description": "Additional oauth scopes, beyond the basid user profile, that the user would be prompted to grant",
            "type": "string"
          },
          "openidRealm": {
            "description": "Optional realm for OpenID protocol. The sub string \"scheme://domain:port\" of the param \"continueUri\" is used if this is not set.",
            "type": "string"
          },
          "otaApp": {
            "description": "The native app package for OTA installation.",
            "type": "string"
          },
          "providerId": {
            "description": "The IdP ID. For white listed IdPs it's a short domain name e.g. google.com, aol.com, live.net and yahoo.com. For other OpenID IdPs it's the OP identifier.",
            "type": "string"
          },
          "sessionId": {
            "description": "The session_id passed by client.",
            "type": "string"
          },
          "tenantId": {
            "description": "For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from.",
            "type": "string"
          },
          "tenantProjectNumber": {
            "description": "Tenant project number to be used for idp discovery.",
            "format": "uint64",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://www.googleapis.com/identitytoolkit/v3/relyingparty/createAuthUri{?alt,fields,key,oauth_token,prettyPrint,quotaUser,userIp}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Response of creating the IDP authentication URL.",
        "**Key properties:**",
        {
          "$ul": [
            "**allProviders**: all providers the user has once used to do federated login",
            "**authUri**: The URI used by the IDP to authenticate the user.",
            "**captchaRequired**: True if captcha is required.",
            "**forExistingProvider**: True if the authUri is for user's existing provider.",
            "**kind**: The fixed string identitytoolkit#CreateAuthUriResponse\". (default: identitytoolkit#CreateAuthUriResponse)",
            "**providerId**: The provider ID of the auth URI.",
            "**registered**: Whether the user is registered if the identifier is an email.",
            "**sessionId**: Session ID which should be passed in the following verifyAssertion request.",
            "**signinMethods**: All sign-in methods this user has used."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
