{
  "name": "identitytoolkit_accounts_mfaSignIn_start",
  "description": "Sends the MFA challenge",
  "parameters": {
    "type": "object",
    "properties": {
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleCloudIdentitytoolkitV2StartMfaSignInRequest"
      }
    },
    "$defs": {
      "GoogleCloudIdentitytoolkitV2StartMfaSignInRequest": {
        "description": "Starts multi-factor sign-in by sending the multi-factor auth challenge.",
        "properties": {
          "mfaEnrollmentId": {
            "description": "Required. MFA enrollment id from the user's list of current MFA enrollments.",
            "type": "string"
          },
          "mfaPendingCredential": {
            "description": "Required. Pending credential from first factor sign-in.",
            "type": "string"
          },
          "phoneSignInInfo": {
            "$ref": "#/$defs/GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo"
          },
          "tenantId": {
            "description": "The ID of the Identity Platform tenant the user is signing in to. If not set, the user will sign in to the default Identity Platform project.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo": {
        "description": "App Verification info for a StartMfa request.",
        "properties": {
          "autoRetrievalInfo": {
            "$ref": "#/$defs/GoogleCloudIdentitytoolkitV2AutoRetrievalInfo"
          },
          "iosReceipt": {
            "description": "iOS only. Receipt of successful app token validation with APNS.",
            "type": "string"
          },
          "iosSecret": {
            "description": "iOS only. Secret delivered to iOS app via APNS.",
            "type": "string"
          },
          "phoneNumber": {
            "description": "Required for enrollment. Phone number to be enrolled as MFA.",
            "type": "string"
          },
          "playIntegrityToken": {
            "description": "Android only. Used to assert application identity in place of a recaptcha token (or safety net token). A Play Integrity Token can be generated via the [PlayIntegrity API] (https://developer.android.com/google/play/integrity) with applying SHA256 to the `phone_number` field as the nonce.",
            "type": "string"
          },
          "recaptchaToken": {
            "description": "Web only. Recaptcha solution.",
            "type": "string"
          },
          "safetyNetToken": {
            "description": "Android only. Used to assert application identity in place of a recaptcha token. A SafetyNet Token can be generated via the [SafetyNet Android Attestation API](https://developer.android.com/training/safetynet/attestation.html), with the Base64 encoding of the `phone_number` field as the nonce.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudIdentitytoolkitV2AutoRetrievalInfo": {
        "description": "The information required to auto-retrieve an SMS.",
        "properties": {
          "appSignatureHash": {
            "description": "The Android app's signature hash for Google Play Service's SMS Retriever API.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://identitytoolkit.googleapis.com//v2/accounts/mfaSignIn:start{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "StartMfaSignIn response.",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**phoneResponseInfo**: Phone Verification info for a StartMfa response.",
              {
                "$ul": [
                  "**sessionInfo**: An opaque string that represents the enrollment session."
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
