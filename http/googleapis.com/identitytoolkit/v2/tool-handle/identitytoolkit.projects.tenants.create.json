{
  "name": "identitytoolkit_projects_tenants_create",
  "description": "Create a tenant. Requires write permission on the Agent project.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "The parent resource name where the tenant will be created. For example, \"projects/project1\"."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleCloudIdentitytoolkitAdminV2Tenant"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "GoogleCloudIdentitytoolkitAdminV2Tenant": {
        "description": "A Tenant contains configuration for the tenant in a multi-tenant project.",
        "properties": {
          "allowPasswordSignup": {
            "description": "Whether to allow email/password user authentication.",
            "type": "boolean"
          },
          "autodeleteAnonymousUsers": {
            "description": "Whether anonymous users will be auto-deleted after a period of 30 days.",
            "type": "boolean"
          },
          "client": {
            "$ref": "#/$defs/GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfig"
          },
          "disableAuth": {
            "description": "Whether authentication is disabled for the tenant. If true, the users under the disabled tenant are not allowed to sign-in. Admins of the disabled tenant are not able to manage its users.",
            "type": "boolean"
          },
          "displayName": {
            "description": "Display name of the tenant.",
            "type": "string"
          },
          "emailPrivacyConfig": {
            "$ref": "#/$defs/GoogleCloudIdentitytoolkitAdminV2EmailPrivacyConfig"
          },
          "enableAnonymousUser": {
            "description": "Whether to enable anonymous user authentication.",
            "type": "boolean"
          },
          "enableEmailLinkSignin": {
            "description": "Whether to enable email link user authentication.",
            "type": "boolean"
          },
          "hashConfig": {
            "$ref": "#/$defs/GoogleCloudIdentitytoolkitAdminV2HashConfig"
          },
          "inheritance": {
            "$ref": "#/$defs/GoogleCloudIdentitytoolkitAdminV2Inheritance"
          },
          "mfaConfig": {
            "$ref": "#/$defs/GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig"
          },
          "monitoring": {
            "$ref": "#/$defs/GoogleCloudIdentitytoolkitAdminV2MonitoringConfig"
          },
          "name": {
            "description": "Output only. Resource name of a tenant. For example: \"projects/{project-id}/tenants/{tenant-id}\"",
            "readOnly": true,
            "type": "string"
          },
          "passwordPolicyConfig": {
            "$ref": "#/$defs/GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig"
          },
          "recaptchaConfig": {
            "$ref": "#/$defs/GoogleCloudIdentitytoolkitAdminV2RecaptchaConfig"
          },
          "smsRegionConfig": {
            "$ref": "#/$defs/GoogleCloudIdentitytoolkitAdminV2SmsRegionConfig"
          },
          "testPhoneNumbers": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "A map of pairs that can be used for MFA. The phone number should be in E.164 format (https://www.itu.int/rec/T-REC-E.164/) and a maximum of 10 pairs can be added (error will be thrown once exceeded).",
            "type": "object"
          }
        },
        "type": "object"
      },
      "GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfig": {
        "description": "Options related to how clients making requests on behalf of a tenant should be configured.",
        "properties": {
          "permissions": {
            "$ref": "#/$defs/GoogleCloudIdentitytoolkitAdminV2ClientPermissions"
          }
        },
        "type": "object"
      },
      "GoogleCloudIdentitytoolkitAdminV2ClientPermissions": {
        "description": "Configuration related to restricting a user's ability to affect their account.",
        "properties": {
          "disabledUserDeletion": {
            "description": "When true, end users cannot delete their account on the associated project through any of our API methods",
            "type": "boolean"
          },
          "disabledUserSignup": {
            "description": "When true, end users cannot sign up for a new account on the associated project through any of our API methods",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GoogleCloudIdentitytoolkitAdminV2EmailPrivacyConfig": {
        "description": "Configuration for settings related to email privacy and public visibility. Settings in this config protect against email enumeration, but may make some trade-offs in user-friendliness.",
        "properties": {
          "enableImprovedEmailPrivacy": {
            "description": "Migrates the project to a state of improved email privacy. For example certain error codes are more generic to avoid giving away information on whether the account exists. In addition, this disables certain features that as a side-effect allow user enumeration. Enabling this toggle disables the fetchSignInMethodsForEmail functionality and changing the user's email to an unverified email. It is recommended to remove dependence on this functionality and enable this toggle to improve user privacy.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GoogleCloudIdentitytoolkitAdminV2HashConfig": {
        "description": "History information of the hash algorithm and key. Different accounts' passwords may be generated by different version.",
        "properties": {
          "algorithm": {
            "description": "Output only. Different password hash algorithms used in Identity Toolkit.",
            "enum": [
              "HASH_ALGORITHM_UNSPECIFIED",
              "HMAC_SHA256",
              "HMAC_SHA1",
              "HMAC_MD5",
              "SCRYPT",
              "PBKDF_SHA1",
              "MD5",
              "HMAC_SHA512",
              "SHA1",
              "BCRYPT",
              "PBKDF2_SHA256",
              "SHA256",
              "SHA512",
              "STANDARD_SCRYPT"
            ],
            "readOnly": true,
            "type": "string"
          },
          "memoryCost": {
            "description": "Output only. Memory cost for hash calculation. Used by scrypt and other similar password derivation algorithms. See https://tools.ietf.org/html/rfc7914 for explanation of field.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "rounds": {
            "description": "Output only. How many rounds for hash calculation. Used by scrypt and other similar password derivation algorithms.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "saltSeparator": {
            "description": "Output only. Non-printable character to be inserted between the salt and plain text password in base64.",
            "readOnly": true,
            "type": "string"
          },
          "signerKey": {
            "description": "Output only. Signer key in base64.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudIdentitytoolkitAdminV2Inheritance": {
        "description": "Settings that the tenants will inherit from project level.",
        "properties": {
          "emailSendingConfig": {
            "description": "Whether to allow the tenant to inherit custom domains, email templates, and custom SMTP settings. If true, email sent from tenant will follow the project level email sending configurations. If false (by default), emails will go with the default settings with no customizations.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig": {
        "description": "Options related to MultiFactor Authentication for the project.",
        "properties": {
          "enabledProviders": {
            "description": "A list of usable second factors for this project.",
            "items": {
              "enum": [
                "PROVIDER_UNSPECIFIED",
                "PHONE_SMS"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "providerConfigs": {
            "description": "A list of usable second factors for this project along with their configurations. This field does not support phone based MFA, for that use the 'enabled_providers' field.",
            "items": {
              "$ref": "#/$defs/GoogleCloudIdentitytoolkitAdminV2ProviderConfig"
            },
            "type": "array"
          },
          "state": {
            "description": "Whether MultiFactor Authentication has been enabled for this project.",
            "enum": [
              "STATE_UNSPECIFIED",
              "DISABLED",
              "ENABLED",
              "MANDATORY"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudIdentitytoolkitAdminV2ProviderConfig": {
        "description": "ProviderConfig describes the supported MFA providers along with their configurations.",
        "properties": {
          "state": {
            "description": "Describes the state of the MultiFactor Authentication type.",
            "enum": [
              "MFA_STATE_UNSPECIFIED",
              "DISABLED",
              "ENABLED",
              "MANDATORY"
            ],
            "type": "string"
          },
          "totpProviderConfig": {
            "$ref": "#/$defs/GoogleCloudIdentitytoolkitAdminV2TotpMfaProviderConfig"
          }
        },
        "type": "object"
      },
      "GoogleCloudIdentitytoolkitAdminV2TotpMfaProviderConfig": {
        "description": "TotpMFAProviderConfig represents the TOTP based MFA provider.",
        "properties": {
          "adjacentIntervals": {
            "description": "The allowed number of adjacent intervals that will be used for verification to avoid clock skew.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GoogleCloudIdentitytoolkitAdminV2MonitoringConfig": {
        "description": "Configuration related to monitoring project activity.",
        "properties": {
          "requestLogging": {
            "$ref": "#/$defs/GoogleCloudIdentitytoolkitAdminV2RequestLogging"
          }
        },
        "type": "object"
      },
      "GoogleCloudIdentitytoolkitAdminV2RequestLogging": {
        "description": "Configuration for logging requests made to this project to Stackdriver Logging",
        "properties": {
          "enabled": {
            "description": "Whether logging is enabled for this project or not.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfig": {
        "description": "The configuration for the password policy on the project.",
        "properties": {
          "forceUpgradeOnSignin": {
            "description": "Users must have a password compliant with the password policy to sign-in.",
            "type": "boolean"
          },
          "lastUpdateTime": {
            "description": "Output only. The last time the password policy on the project was updated.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "passwordPolicyEnforcementState": {
            "description": "Which enforcement mode to use for the password policy.",
            "enum": [
              "PASSWORD_POLICY_ENFORCEMENT_STATE_UNSPECIFIED",
              "OFF",
              "ENFORCE"
            ],
            "type": "string"
          },
          "passwordPolicyVersions": {
            "description": "Must be of length 1. Contains the strength attributes for the password policy.",
            "items": {
              "$ref": "#/$defs/GoogleCloudIdentitytoolkitAdminV2PasswordPolicyVersion"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudIdentitytoolkitAdminV2PasswordPolicyVersion": {
        "description": "The strength attributes for the password policy on the project.",
        "properties": {
          "customStrengthOptions": {
            "$ref": "#/$defs/GoogleCloudIdentitytoolkitAdminV2CustomStrengthOptions"
          },
          "schemaVersion": {
            "description": "Output only. schema version number for the password policy",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GoogleCloudIdentitytoolkitAdminV2CustomStrengthOptions": {
        "description": "Custom strength options to enforce on user passwords.",
        "properties": {
          "containsLowercaseCharacter": {
            "description": "The password must contain a lower case character.",
            "type": "boolean"
          },
          "containsNonAlphanumericCharacter": {
            "description": "The password must contain a non alpha numeric character.",
            "type": "boolean"
          },
          "containsNumericCharacter": {
            "description": "The password must contain a number.",
            "type": "boolean"
          },
          "containsUppercaseCharacter": {
            "description": "The password must contain an upper case character.",
            "type": "boolean"
          },
          "maxPasswordLength": {
            "description": "Maximum password length. No default max length",
            "format": "int32",
            "type": "integer"
          },
          "minPasswordLength": {
            "description": "Minimum password length. Range from 6 to 30",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GoogleCloudIdentitytoolkitAdminV2RecaptchaConfig": {
        "description": "The reCAPTCHA Enterprise integration config.",
        "properties": {
          "emailPasswordEnforcementState": {
            "description": "The reCAPTCHA config for email/password provider, containing the enforcement status. The email/password provider contains all related user flows protected by reCAPTCHA.",
            "enum": [
              "RECAPTCHA_PROVIDER_ENFORCEMENT_STATE_UNSPECIFIED",
              "OFF",
              "AUDIT",
              "ENFORCE"
            ],
            "type": "string"
          },
          "managedRules": {
            "description": "The managed rules for authentication action based on reCAPTCHA scores. The rules are shared across providers for a given tenant project.",
            "items": {
              "$ref": "#/$defs/GoogleCloudIdentitytoolkitAdminV2RecaptchaManagedRule"
            },
            "type": "array"
          },
          "recaptchaKeys": {
            "description": "Output only. The reCAPTCHA keys.",
            "items": {
              "$ref": "#/$defs/GoogleCloudIdentitytoolkitAdminV2RecaptchaKey"
            },
            "readOnly": true,
            "type": "array"
          },
          "useAccountDefender": {
            "description": "Whether to use the account defender for reCAPTCHA assessment. Defaults to `false`.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GoogleCloudIdentitytoolkitAdminV2RecaptchaManagedRule": {
        "description": "The config for a reCAPTCHA managed rule. Models a single interval [start_score, end_score]. The start_score is implicit. It is either the closest smaller end_score (if one is available) or 0. Intervals in aggregate span [0, 1] without overlapping.",
        "properties": {
          "action": {
            "description": "The action taken if the reCAPTCHA score of a request is within the interval [start_score, end_score].",
            "enum": [
              "RECAPTCHA_ACTION_UNSPECIFIED",
              "BLOCK"
            ],
            "type": "string"
          },
          "endScore": {
            "description": "The end score (inclusive) of the score range for an action. Must be a value between 0.0 and 1.0, at 11 discrete values; e.g. 0, 0.1, 0.2, 0.3, ... 0.9, 1.0. A score of 0.0 indicates the riskiest request (likely a bot), whereas 1.0 indicates the safest request (likely a human). See https://cloud.google.com/recaptcha-enterprise/docs/interpret-assessment.",
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "GoogleCloudIdentitytoolkitAdminV2RecaptchaKey": {
        "description": "The reCAPTCHA key config. reCAPTCHA Enterprise offers different keys for different client platforms.",
        "properties": {
          "key": {
            "description": "The reCAPTCHA Enterprise key resource name, e.g. \"projects/{project}/keys/{key}\"",
            "type": "string"
          },
          "type": {
            "description": "The client's platform type.",
            "enum": [
              "CLIENT_TYPE_UNSPECIFIED",
              "WEB",
              "IOS",
              "ANDROID"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleCloudIdentitytoolkitAdminV2SmsRegionConfig": {
        "description": "Configures the regions where users are allowed to send verification SMS for the project or tenant. This is based on the calling code of the destination phone number.",
        "properties": {
          "allowByDefault": {
            "$ref": "#/$defs/GoogleCloudIdentitytoolkitAdminV2AllowByDefault"
          },
          "allowlistOnly": {
            "$ref": "#/$defs/GoogleCloudIdentitytoolkitAdminV2AllowlistOnly"
          }
        },
        "type": "object"
      },
      "GoogleCloudIdentitytoolkitAdminV2AllowByDefault": {
        "description": "Defines a policy of allowing every region by default and adding disallowed regions to a disallow list.",
        "properties": {
          "disallowedRegions": {
            "description": "Two letter unicode region codes to disallow as defined by https://cldr.unicode.org/ The full list of these region codes is here: https://github.com/unicode-cldr/cldr-localenames-full/blob/master/main/en/territories.json",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GoogleCloudIdentitytoolkitAdminV2AllowlistOnly": {
        "description": "Defines a policy of only allowing regions by explicitly adding them to an allowlist.",
        "properties": {
          "allowedRegions": {
            "description": "Two letter unicode region codes to allow as defined by https://cldr.unicode.org/ The full list of these region codes is here: https://github.com/unicode-cldr/cldr-localenames-full/blob/master/main/en/territories.json",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://identitytoolkit.googleapis.com//v2/{parent}/tenants{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A Tenant contains configuration for the tenant in a multi-tenant project.",
        "**Key properties:**",
        {
          "$ul": [
            "**allowPasswordSignup**: Whether to allow email/password user authentication.",
            "**autodeleteAnonymousUsers**: Whether anonymous users will be auto-deleted after a period of 30 days.",
            [
              "**client**: Options related to how clients making requests on behalf of a tenant should be configured.",
              {
                "$ul": [
                  [
                    "**permissions**: Configuration related to restricting a user's ability to affect their account.",
                    {
                      "$ul": [
                        "**disabledUserDeletion**: When true, end users cannot delete their account on the associated project through any of our API methods",
                        "**disabledUserSignup**: When true, end users cannot sign up for a new account on the associated project through any of our API methods"
                      ]
                    }
                  ]
                ]
              }
            ],
            "**disableAuth**: Whether authentication is disabled for the tenant. If true, the users under the disabled tenant are not allowed to sign-in. Admins of the disabled tenant are not able to manage its users.",
            "**displayName**: Display name of the tenant.",
            [
              "**emailPrivacyConfig**: Configuration for settings related to email privacy and public visibility. Settings in this config protect against email enumeration, but may make some trade-offs in user-friendliness.",
              {
                "$ul": [
                  "**enableImprovedEmailPrivacy**: Migrates the project to a state of improved email privacy. For example certain error codes are more generic to avoid giving away information on whether the account exists. In addition, this disables certain features that as a side-effect allow user enumeration. Enabling this toggle disables the fetchSignInMethodsForEmail functionality and changing the user's email to an unverified email. It is recommended to remove dependence on this functionality and enable this toggle to improve user privacy."
                ]
              }
            ],
            "**enableAnonymousUser**: Whether to enable anonymous user authentication.",
            "**enableEmailLinkSignin**: Whether to enable email link user authentication.",
            [
              "**hashConfig**: History information of the hash algorithm and key. Different accounts' passwords may be generated by different version.",
              {
                "$ul": [
                  "**algorithm**: Output only. Different password hash algorithms used in Identity Toolkit.",
                  "**memoryCost**: Output only. Memory cost for hash calculation. Used by scrypt and other similar password derivation algorithms. See https://tools.ietf.org/html/rfc7914 for explanation of field.",
                  "**rounds**: Output only. How many rounds for hash calculation. Used by scrypt and other similar password derivation algorithms.",
                  "**saltSeparator**: Output only. Non-printable character to be inserted between the salt and plain text password in base64.",
                  "**signerKey**: Output only. Signer key in base64."
                ]
              }
            ],
            [
              "**inheritance**: Settings that the tenants will inherit from project level.",
              {
                "$ul": [
                  "**emailSendingConfig**: Whether to allow the tenant to inherit custom domains, email templates, and custom SMTP settings. If true, email sent from tenant will follow the project level email sending configurations. If false (by default), emails will go with the default settings with no customizations."
                ]
              }
            ],
            [
              "**mfaConfig**: Options related to MultiFactor Authentication for the project.",
              {
                "$ul": [
                  "**enabledProviders**: A list of usable second factors for this project.",
                  "**providerConfigs**: A list of usable second factors for this project along with their configurations. This field does not support phone based MFA, for that use the 'enabled_providers' field.",
                  "**state**: Whether MultiFactor Authentication has been enabled for this project."
                ]
              }
            ],
            [
              "**monitoring**: Configuration related to monitoring project activity.",
              {
                "$ul": [
                  [
                    "**requestLogging**: Configuration for logging requests made to this project to Stackdriver Logging",
                    {
                      "$ul": [
                        "**enabled**: Whether logging is enabled for this project or not."
                      ]
                    }
                  ]
                ]
              }
            ],
            "**name**: Output only. Resource name of a tenant. For example: \"projects/{project-id}/tenants/{tenant-id}\"",
            [
              "**passwordPolicyConfig**: The configuration for the password policy on the project.",
              {
                "$ul": [
                  "**forceUpgradeOnSignin**: Users must have a password compliant with the password policy to sign-in.",
                  "**lastUpdateTime**: Output only. The last time the password policy on the project was updated.",
                  "**passwordPolicyEnforcementState**: Which enforcement mode to use for the password policy.",
                  "**passwordPolicyVersions**: Must be of length 1. Contains the strength attributes for the password policy."
                ]
              }
            ],
            [
              "**recaptchaConfig**: The reCAPTCHA Enterprise integration config.",
              {
                "$ul": [
                  "**emailPasswordEnforcementState**: The reCAPTCHA config for email/password provider, containing the enforcement status. The email/password provider contains all related user flows protected by reCAPTCHA.",
                  "**managedRules**: The managed rules for authentication action based on reCAPTCHA scores. The rules are shared across providers for a given tenant project.",
                  "**recaptchaKeys**: Output only. The reCAPTCHA keys.",
                  "**useAccountDefender**: Whether to use the account defender for reCAPTCHA assessment. Defaults to `false`."
                ]
              }
            ],
            [
              "**smsRegionConfig**: Configures the regions where users are allowed to send verification SMS for the project or tenant. This is based on the calling code of the destination phone number.",
              {
                "$ul": [
                  [
                    "**allowByDefault**: Defines a policy of allowing every region by default and adding disallowed regions to a disallow list.",
                    {
                      "$ul": [
                        "**disallowedRegions**: Two letter unicode region codes to disallow as defined by https://cldr.unicode.org/ The full list of these region codes is here: https://github.com/unicode-cldr/cldr-localenames-full/blob/master/main/en/territories.json"
                      ]
                    }
                  ],
                  [
                    "**allowlistOnly**: Defines a policy of only allowing regions by explicitly adding them to an allowlist.",
                    {
                      "$ul": [
                        "**allowedRegions**: Two letter unicode region codes to allow as defined by https://cldr.unicode.org/ The full list of these region codes is here: https://github.com/unicode-cldr/cldr-localenames-full/blob/master/main/en/territories.json"
                      ]
                    }
                  ]
                ]
              }
            ],
            "**testPhoneNumbers**: A map of pairs that can be used for MFA. The phone number should be in E.164 format (https://www.itu.int/rec/T-REC-E.164/) and a maximum of 10 pairs can be added (error will be thrown once exceeded)."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
