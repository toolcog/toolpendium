{
  "name": "migrationcenter_projects_locations_assets_batchUpdate",
  "description": "Updates the parameters of a list of assets.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. Parent value for batch asset update."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/BatchUpdateAssetsRequest"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "BatchUpdateAssetsRequest": {
        "description": "A request to update a list of assets.",
        "properties": {
          "requests": {
            "description": "Required. The request message specifying the resources to update. A maximum of 1000 assets can be modified in a batch.",
            "items": {
              "$ref": "#/$defs/UpdateAssetRequest"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "UpdateAssetRequest": {
        "description": "A request to update an asset.",
        "properties": {
          "asset": {
            "$ref": "#/$defs/Asset"
          },
          "requestId": {
            "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
            "type": "string"
          },
          "updateMask": {
            "description": "Required. Field mask is used to specify the fields to be overwritten in the `Asset` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
            "format": "google-fieldmask",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Asset": {
        "description": "An asset represents a resource in your environment. Asset types include virtual machines and databases.",
        "properties": {
          "assignedGroups": {
            "description": "Output only. The list of groups that the asset is assigned to.",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "attributes": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Generic asset attributes.",
            "type": "object"
          },
          "createTime": {
            "description": "Output only. The timestamp when the asset was created.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "hidden": {
            "description": "Optional. Indicates if the asset is hidden.",
            "type": "boolean"
          },
          "hideReason": {
            "description": "Optional. An optional reason for marking this asset as hidden.",
            "type": "string"
          },
          "hideTime": {
            "description": "Output only. The timestamp when the asset was marked as hidden.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "insightList": {
            "$ref": "#/$defs/InsightList"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Labels as key value pairs.",
            "type": "object"
          },
          "name": {
            "description": "Output only. The full name of the asset.",
            "readOnly": true,
            "type": "string"
          },
          "performanceData": {
            "$ref": "#/$defs/AssetPerformanceData"
          },
          "sources": {
            "description": "Output only. The list of sources contributing to the asset.",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "updateTime": {
            "description": "Output only. The timestamp when the asset was last updated.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "virtualMachineDetails": {
            "$ref": "#/$defs/VirtualMachineDetails"
          }
        },
        "type": "object"
      },
      "InsightList": {
        "description": "Message containing insights list.",
        "properties": {
          "insights": {
            "description": "Output only. Insights of the list.",
            "items": {
              "$ref": "#/$defs/Insight"
            },
            "readOnly": true,
            "type": "array"
          },
          "updateTime": {
            "description": "Output only. Update timestamp.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "Insight": {
        "description": "An insight about an asset.",
        "properties": {
          "genericInsight": {
            "$ref": "#/$defs/GenericInsight"
          },
          "migrationInsight": {
            "$ref": "#/$defs/MigrationInsight"
          },
          "softwareInsight": {
            "$ref": "#/$defs/SoftwareInsight"
          }
        },
        "type": "object"
      },
      "GenericInsight": {
        "description": "A generic insight about an asset.",
        "properties": {
          "additionalInformation": {
            "description": "Output only. Additional information about the insight, each entry can be a logical entry and must make sense if it is displayed with line breaks between each entry. Text can contain md style links.",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "defaultMessage": {
            "description": "Output only. In case message_code is not yet known by the client default_message will be the message to be used instead. Text can contain md file style links.",
            "readOnly": true,
            "type": "string"
          },
          "messageId": {
            "description": "Output only. Represents a globally unique message id for this insight, can be used for localization purposes, in case message_code is not yet known by the client use default_message instead.",
            "format": "int64",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "MigrationInsight": {
        "description": "An insight about potential migrations for an asset.",
        "properties": {
          "computeEngineSoleTenantTarget": {
            "$ref": "#/$defs/ComputeEngineSoleTenantMigrationTarget"
          },
          "computeEngineTarget": {
            "$ref": "#/$defs/ComputeEngineMigrationTarget"
          },
          "fit": {
            "$ref": "#/$defs/FitDescriptor"
          },
          "gkeTarget": {
            "$ref": "#/$defs/GoogleKubernetesEngineMigrationTarget"
          },
          "vmwareEngineTarget": {
            "$ref": "#/$defs/VmwareEngineMigrationTarget"
          }
        },
        "type": "object"
      },
      "ComputeEngineSoleTenantMigrationTarget": {
        "description": "Compute engine sole tenant migration target.",
        "properties": {},
        "type": "object"
      },
      "ComputeEngineMigrationTarget": {
        "description": "Compute engine migration target.",
        "properties": {
          "shape": {
            "$ref": "#/$defs/ComputeEngineShapeDescriptor"
          }
        },
        "type": "object"
      },
      "ComputeEngineShapeDescriptor": {
        "description": "Compute Engine target shape descriptor.",
        "properties": {
          "logicalCoreCount": {
            "description": "Number of logical cores.",
            "format": "int32",
            "type": "integer"
          },
          "machineType": {
            "description": "Compute Engine machine type.",
            "type": "string"
          },
          "memoryMb": {
            "description": "Memory in mebibytes.",
            "format": "int32",
            "type": "integer"
          },
          "physicalCoreCount": {
            "description": "Number of physical cores.",
            "format": "int32",
            "type": "integer"
          },
          "series": {
            "description": "Compute Engine machine series.",
            "type": "string"
          },
          "storage": {
            "description": "Compute Engine storage. Never empty.",
            "items": {
              "$ref": "#/$defs/ComputeStorageDescriptor"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ComputeStorageDescriptor": {
        "description": "Compute Engine storage option descriptor.",
        "properties": {
          "sizeGb": {
            "description": "Disk size in GiB.",
            "format": "int32",
            "type": "integer"
          },
          "type": {
            "description": "Disk type backing the storage.",
            "enum": [
              "PERSISTENT_DISK_TYPE_UNSPECIFIED",
              "PERSISTENT_DISK_TYPE_STANDARD",
              "PERSISTENT_DISK_TYPE_BALANCED",
              "PERSISTENT_DISK_TYPE_SSD"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "FitDescriptor": {
        "description": "Describes the fit level of an asset for migration to a specific target.",
        "properties": {
          "fitLevel": {
            "description": "Fit level.",
            "enum": [
              "FIT_LEVEL_UNSPECIFIED",
              "FIT",
              "NO_FIT",
              "REQUIRES_EFFORT"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleKubernetesEngineMigrationTarget": {
        "description": "GKE migration target.",
        "properties": {},
        "type": "object"
      },
      "VmwareEngineMigrationTarget": {
        "description": "VMWare engine migration target.",
        "properties": {},
        "type": "object"
      },
      "SoftwareInsight": {
        "description": "An insight regarding software detected on an asset.",
        "properties": {
          "detectedSoftware": {
            "$ref": "#/$defs/DetectedSoftware"
          }
        },
        "type": "object"
      },
      "DetectedSoftware": {
        "description": "Information about software detected on an asset.",
        "properties": {
          "softwareFamily": {
            "description": "Output only. Software family of the detected software, e.g. Database, SAP family.",
            "readOnly": true,
            "type": "string"
          },
          "softwareName": {
            "description": "Output only. Software's name.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "AssetPerformanceData": {
        "description": "Performance data for an asset.",
        "properties": {
          "dailyResourceUsageAggregations": {
            "description": "Daily resource usage aggregations. Contains all of the data available for an asset, up to the last 420 days. Aggregations are sorted from oldest to most recent.",
            "items": {
              "$ref": "#/$defs/DailyResourceUsageAggregation"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DailyResourceUsageAggregation": {
        "description": "Usage data aggregation for a single day.",
        "properties": {
          "cpu": {
            "$ref": "#/$defs/DailyResourceUsageAggregationCPU"
          },
          "date": {
            "$ref": "#/$defs/Date"
          },
          "disk": {
            "$ref": "#/$defs/DailyResourceUsageAggregationDisk"
          },
          "memory": {
            "$ref": "#/$defs/DailyResourceUsageAggregationMemory"
          },
          "network": {
            "$ref": "#/$defs/DailyResourceUsageAggregationNetwork"
          }
        },
        "type": "object"
      },
      "DailyResourceUsageAggregationCPU": {
        "description": "Statistical aggregation of CPU usage.",
        "properties": {
          "utilizationPercentage": {
            "$ref": "#/$defs/DailyResourceUsageAggregationStats"
          }
        },
        "type": "object"
      },
      "DailyResourceUsageAggregationStats": {
        "description": "Statistical aggregation of samples for a single resource usage.",
        "properties": {
          "average": {
            "description": "Average usage value.",
            "format": "float",
            "type": "number"
          },
          "median": {
            "description": "Median usage value.",
            "format": "float",
            "type": "number"
          },
          "ninteyFifthPercentile": {
            "description": "95th percentile usage value.",
            "format": "float",
            "type": "number"
          },
          "peak": {
            "description": "Peak usage value.",
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "Date": {
        "description": "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp",
        "properties": {
          "day": {
            "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
            "format": "int32",
            "type": "integer"
          },
          "month": {
            "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
            "format": "int32",
            "type": "integer"
          },
          "year": {
            "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "DailyResourceUsageAggregationDisk": {
        "description": "Statistical aggregation of disk usage.",
        "properties": {
          "iops": {
            "$ref": "#/$defs/DailyResourceUsageAggregationStats"
          }
        },
        "type": "object"
      },
      "DailyResourceUsageAggregationMemory": {
        "description": "Statistical aggregation of memory usage.",
        "properties": {
          "utilizationPercentage": {
            "$ref": "#/$defs/DailyResourceUsageAggregationStats"
          }
        },
        "type": "object"
      },
      "DailyResourceUsageAggregationNetwork": {
        "description": "Statistical aggregation of network usage.",
        "properties": {
          "egressBps": {
            "$ref": "#/$defs/DailyResourceUsageAggregationStats"
          },
          "ingressBps": {
            "$ref": "#/$defs/DailyResourceUsageAggregationStats"
          }
        },
        "type": "object"
      },
      "VirtualMachineDetails": {
        "description": "Details of a VirtualMachine.",
        "properties": {
          "coreCount": {
            "description": "Number of CPU cores in the VirtualMachine. Must be non-negative.",
            "format": "int32",
            "type": "integer"
          },
          "createTime": {
            "description": "VM creation timestamp.",
            "format": "google-datetime",
            "type": "string"
          },
          "guestOs": {
            "$ref": "#/$defs/GuestOsDetails"
          },
          "memoryMb": {
            "description": "The amount of memory in the VirtualMachine. Must be non-negative.",
            "format": "int32",
            "type": "integer"
          },
          "osFamily": {
            "description": "What family the OS belong to, if known.",
            "enum": [
              "OS_FAMILY_UNKNOWN",
              "OS_FAMILY_WINDOWS",
              "OS_FAMILY_LINUX",
              "OS_FAMILY_UNIX"
            ],
            "type": "string"
          },
          "osName": {
            "description": "The name of the operating system running on the VirtualMachine.",
            "type": "string"
          },
          "osVersion": {
            "description": "The version of the operating system running on the virtual machine.",
            "type": "string"
          },
          "platform": {
            "$ref": "#/$defs/PlatformDetails"
          },
          "powerState": {
            "description": "Power state of VM (poweredOn or poweredOff).",
            "type": "string"
          },
          "vcenterFolder": {
            "description": "Folder name in vCenter where asset resides.",
            "type": "string"
          },
          "vcenterUrl": {
            "description": "vCenter URL used in collection.",
            "type": "string"
          },
          "vcenterVmId": {
            "description": "vCenter VM ID.",
            "type": "string"
          },
          "vmArchitecture": {
            "$ref": "#/$defs/VirtualMachineArchitectureDetails"
          },
          "vmDisks": {
            "$ref": "#/$defs/VirtualMachineDiskDetails"
          },
          "vmName": {
            "description": "Virtual Machine display name.",
            "type": "string"
          },
          "vmNetwork": {
            "$ref": "#/$defs/VirtualMachineNetworkDetails"
          },
          "vmUuid": {
            "description": "Virtual Machine unique identifier.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GuestOsDetails": {
        "description": "Information from Guest-level collections.",
        "properties": {
          "config": {
            "$ref": "#/$defs/GuestConfigDetails"
          },
          "runtime": {
            "$ref": "#/$defs/GuestRuntimeDetails"
          }
        },
        "type": "object"
      },
      "GuestConfigDetails": {
        "description": "Guest OS config information.",
        "properties": {
          "fstab": {
            "$ref": "#/$defs/FstabEntryList"
          },
          "hosts": {
            "$ref": "#/$defs/HostsEntryList"
          },
          "issue": {
            "description": "OS issue (typically /etc/issue in Linux).",
            "type": "string"
          },
          "nfsExports": {
            "$ref": "#/$defs/NfsExportList"
          },
          "selinux": {
            "$ref": "#/$defs/Selinux"
          }
        },
        "type": "object"
      },
      "FstabEntryList": {
        "description": "Fstab content.",
        "properties": {
          "entries": {
            "description": "Fstab entries.",
            "items": {
              "$ref": "#/$defs/FstabEntry"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "FstabEntry": {
        "description": "Single fstab entry.",
        "properties": {
          "file": {
            "description": "The mount point for the filesystem.",
            "type": "string"
          },
          "freq": {
            "description": "Used by dump to determine which filesystems need to be dumped.",
            "format": "int32",
            "type": "integer"
          },
          "mntops": {
            "description": "Mount options associated with the filesystem.",
            "type": "string"
          },
          "passno": {
            "description": "Used by the fsck(8) program to determine the order in which filesystem checks are done at reboot time.",
            "format": "int32",
            "type": "integer"
          },
          "spec": {
            "description": "The block special device or remote filesystem to be mounted.",
            "type": "string"
          },
          "vfstype": {
            "description": "The type of the filesystem.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "HostsEntryList": {
        "description": "Hosts content.",
        "properties": {
          "entries": {
            "description": "Hosts entries.",
            "items": {
              "$ref": "#/$defs/HostsEntry"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "HostsEntry": {
        "description": "Single /etc/hosts entry.",
        "properties": {
          "hostNames": {
            "description": "List of host names / aliases.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "ip": {
            "description": "IP (raw, IPv4/6 agnostic).",
            "type": "string"
          }
        },
        "type": "object"
      },
      "NfsExportList": {
        "description": "NFS exports.",
        "properties": {
          "entries": {
            "description": "NFS export entries.",
            "items": {
              "$ref": "#/$defs/NfsExport"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "NfsExport": {
        "description": "NFS export.",
        "properties": {
          "exportDirectory": {
            "description": "The directory being exported.",
            "type": "string"
          },
          "hosts": {
            "description": "The hosts or networks to which the export is being shared.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Selinux": {
        "description": "SELinux details.",
        "properties": {
          "enabled": {
            "description": "Is SELinux enabled.",
            "type": "boolean"
          },
          "mode": {
            "description": "SELinux mode enforcing / permissive.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GuestRuntimeDetails": {
        "description": "Guest OS runtime information.",
        "properties": {
          "domain": {
            "description": "Domain, e.g. c.stratozone-development.internal.",
            "type": "string"
          },
          "installedApps": {
            "$ref": "#/$defs/GuestInstalledApplicationList"
          },
          "lastUptime": {
            "$ref": "#/$defs/Date"
          },
          "machineName": {
            "description": "Machine name.",
            "type": "string"
          },
          "networkInfo": {
            "$ref": "#/$defs/RuntimeNetworkInfo"
          },
          "openFileList": {
            "$ref": "#/$defs/OpenFileList"
          },
          "processes": {
            "$ref": "#/$defs/RunningProcessList"
          },
          "services": {
            "$ref": "#/$defs/RunningServiceList"
          }
        },
        "type": "object"
      },
      "GuestInstalledApplicationList": {
        "description": "Guest installed application list.",
        "properties": {
          "entries": {
            "description": "Application entries.",
            "items": {
              "$ref": "#/$defs/GuestInstalledApplication"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GuestInstalledApplication": {
        "description": "Guest installed application information.",
        "properties": {
          "licenses": {
            "description": "License strings associated with the installed application.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "name": {
            "description": "Installed application name.",
            "type": "string"
          },
          "path": {
            "description": "Source path.",
            "type": "string"
          },
          "time": {
            "description": "Date application was installed.",
            "type": "string"
          },
          "vendor": {
            "description": "Installed application vendor.",
            "type": "string"
          },
          "version": {
            "description": "Installed application version.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RuntimeNetworkInfo": {
        "description": "Runtime networking information.",
        "properties": {
          "connections": {
            "$ref": "#/$defs/NetworkConnectionList"
          },
          "netstat": {
            "description": "Netstat (raw, OS-agnostic).",
            "type": "string"
          },
          "netstatTime": {
            "$ref": "#/$defs/DateTime"
          }
        },
        "type": "object"
      },
      "NetworkConnectionList": {
        "description": "Network connection list.",
        "properties": {
          "entries": {
            "description": "Network connection entries.",
            "items": {
              "$ref": "#/$defs/NetworkConnection"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "NetworkConnection": {
        "properties": {
          "localIpAddress": {
            "description": "Local IP address.",
            "type": "string"
          },
          "localPort": {
            "description": "Local port.",
            "format": "int32",
            "type": "integer"
          },
          "pid": {
            "description": "Process ID.",
            "format": "int64",
            "type": "string"
          },
          "processName": {
            "description": "Process or service name.",
            "type": "string"
          },
          "protocol": {
            "description": "Connection protocol (e.g. TCP/UDP).",
            "type": "string"
          },
          "remoteIpAddress": {
            "description": "Remote IP address.",
            "type": "string"
          },
          "remotePort": {
            "description": "Remote port.",
            "format": "int32",
            "type": "integer"
          },
          "state": {
            "description": "Connection state (e.g. CONNECTED).",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DateTime": {
        "description": "Represents civil time (or occasionally physical time). This type can represent a civil time in one of a few possible ways: * When utc_offset is set and time_zone is unset: a civil time on a calendar day with a particular offset from UTC. * When time_zone is set and utc_offset is unset: a civil time on a calendar day in a particular time zone. * When neither time_zone nor utc_offset is set: a civil time on a calendar day in local time. The date is relative to the Proleptic Gregorian Calendar. If year, month, or day are 0, the DateTime is considered not to have a specific year, month, or day respectively. This type may also be used to represent a physical time if all the date and time fields are set and either case of the `time_offset` oneof is set. Consider using `Timestamp` message for physical time instead. If your use case also would like to store the user's timezone, that can be done in another field. This type is more flexible than some applications may want. Make sure to document and validate your application's limitations.",
        "properties": {
          "day": {
            "description": "Optional. Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a datetime without a day.",
            "format": "int32",
            "type": "integer"
          },
          "hours": {
            "description": "Optional. Hours of day in 24 hour format. Should be from 0 to 23, defaults to 0 (midnight). An API may choose to allow the value \"24:00:00\" for scenarios like business closing time.",
            "format": "int32",
            "type": "integer"
          },
          "minutes": {
            "description": "Optional. Minutes of hour of day. Must be from 0 to 59, defaults to 0.",
            "format": "int32",
            "type": "integer"
          },
          "month": {
            "description": "Optional. Month of year. Must be from 1 to 12, or 0 if specifying a datetime without a month.",
            "format": "int32",
            "type": "integer"
          },
          "nanos": {
            "description": "Optional. Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999, defaults to 0.",
            "format": "int32",
            "type": "integer"
          },
          "seconds": {
            "description": "Optional. Seconds of minutes of the time. Must normally be from 0 to 59, defaults to 0. An API may allow the value 60 if it allows leap-seconds.",
            "format": "int32",
            "type": "integer"
          },
          "timeZone": {
            "$ref": "#/$defs/TimeZone"
          },
          "utcOffset": {
            "description": "UTC offset. Must be whole seconds, between -18 hours and +18 hours. For example, a UTC offset of -4:00 would be represented as { seconds: -14400 }.",
            "format": "google-duration",
            "type": "string"
          },
          "year": {
            "description": "Optional. Year of date. Must be from 1 to 9999, or 0 if specifying a datetime without a year.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TimeZone": {
        "description": "Represents a time zone from the [IANA Time Zone Database](https://www.iana.org/time-zones).",
        "properties": {
          "id": {
            "description": "IANA Time Zone Database time zone, e.g. \"America/New_York\".",
            "type": "string"
          },
          "version": {
            "description": "Optional. IANA Time Zone Database version number, e.g. \"2019a\".",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OpenFileList": {
        "description": "Open file list.",
        "properties": {
          "entries": {
            "description": "Open file details entries.",
            "items": {
              "$ref": "#/$defs/OpenFileDetails"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "OpenFileDetails": {
        "description": "Open file Information.",
        "properties": {
          "command": {
            "description": "Opened file command.",
            "type": "string"
          },
          "filePath": {
            "description": "Opened file file path.",
            "type": "string"
          },
          "fileType": {
            "description": "Opened file file type.",
            "type": "string"
          },
          "user": {
            "description": "Opened file user.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RunningProcessList": {
        "description": "List of running guest OS processes.",
        "properties": {
          "processes": {
            "description": "Running process entries.",
            "items": {
              "$ref": "#/$defs/RunningProcess"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "RunningProcess": {
        "description": "Guest OS running process details.",
        "properties": {
          "attributes": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Process extended attributes.",
            "type": "object"
          },
          "cmdline": {
            "description": "Process full command line.",
            "type": "string"
          },
          "exePath": {
            "description": "Process binary path.",
            "type": "string"
          },
          "pid": {
            "description": "Process ID.",
            "format": "int64",
            "type": "string"
          },
          "user": {
            "description": "User running the process.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RunningServiceList": {
        "description": "List of running guest OS services.",
        "properties": {
          "services": {
            "description": "Running service entries.",
            "items": {
              "$ref": "#/$defs/RunningService"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "RunningService": {
        "description": "Guest OS running service details.",
        "properties": {
          "cmdline": {
            "description": "Service command line.",
            "type": "string"
          },
          "exePath": {
            "description": "Service binary path.",
            "type": "string"
          },
          "name": {
            "description": "Service name.",
            "type": "string"
          },
          "pid": {
            "description": "Service pid.",
            "format": "int64",
            "type": "string"
          },
          "startMode": {
            "description": "Service start mode (raw, OS-agnostic).",
            "type": "string"
          },
          "state": {
            "description": "Service state (raw, OS-agnostic).",
            "type": "string"
          },
          "status": {
            "description": "Service status.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PlatformDetails": {
        "description": "Information about the platform.",
        "properties": {
          "awsEc2Details": {
            "$ref": "#/$defs/AwsEc2PlatformDetails"
          },
          "azureVmDetails": {
            "$ref": "#/$defs/AzureVmPlatformDetails"
          },
          "genericDetails": {
            "$ref": "#/$defs/GenericPlatformDetails"
          },
          "physicalDetails": {
            "$ref": "#/$defs/PhysicalPlatformDetails"
          },
          "vmwareDetails": {
            "$ref": "#/$defs/VmwarePlatformDetails"
          }
        },
        "type": "object"
      },
      "AwsEc2PlatformDetails": {
        "description": "AWS EC2 specific details.",
        "properties": {
          "location": {
            "description": "The location of the machine in the AWS format.",
            "type": "string"
          },
          "machineTypeLabel": {
            "description": "AWS platform's machine type label.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AzureVmPlatformDetails": {
        "description": "Azure VM specific details.",
        "properties": {
          "location": {
            "description": "The location of the machine in the Azure format.",
            "type": "string"
          },
          "machineTypeLabel": {
            "description": "Azure platform's machine type label.",
            "type": "string"
          },
          "provisioningState": {
            "description": "Azure platform's provisioning state.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GenericPlatformDetails": {
        "description": "Generic platform details.",
        "properties": {
          "location": {
            "description": "Free text representation of the machine location. The format of this field should not be relied on. Different VMs in the same location may have different string values for this field.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PhysicalPlatformDetails": {
        "description": "Platform specific details for Physical Machines.",
        "properties": {
          "location": {
            "description": "Free text representation of the machine location. The format of this field should not be relied on. Different machines in the same location may have different string values for this field.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "VmwarePlatformDetails": {
        "description": "VMware specific details.",
        "properties": {
          "esxVersion": {
            "description": "ESX version.",
            "type": "string"
          },
          "osid": {
            "description": "VMware os enum - https://vdc-repo.vmware.com/vmwb-repository/dcr-public/da47f910-60ac-438b-8b9b-6122f4d14524/16b7274a-bf8b-4b4c-a05e-746f2aa93c8c/doc/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html.",
            "type": "string"
          },
          "vcenterVersion": {
            "description": "vCenter version.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "VirtualMachineArchitectureDetails": {
        "description": "Details of the VM architecture.",
        "properties": {
          "bios": {
            "$ref": "#/$defs/BiosDetails"
          },
          "cpuArchitecture": {
            "description": "CPU architecture, e.g., \"x64-based PC\", \"x86_64\", \"i686\" etc.",
            "type": "string"
          },
          "cpuManufacturer": {
            "description": "CPU manufacturer, e.g., \"Intel\", \"AMD\".",
            "type": "string"
          },
          "cpuName": {
            "description": "CPU name, e.g., \"Intel Xeon E5-2690\", \"AMD EPYC 7571\" etc.",
            "type": "string"
          },
          "cpuSocketCount": {
            "description": "Number of processor sockets allocated to the machine.",
            "format": "int32",
            "type": "integer"
          },
          "cpuThreadCount": {
            "description": "Number of CPU threads allocated to the machine.",
            "format": "int32",
            "type": "integer"
          },
          "firmware": {
            "description": "Firmware (BIOS/efi).",
            "type": "string"
          },
          "hyperthreading": {
            "description": "CPU hyperthreading support.",
            "enum": [
              "HYPER_THREADING_UNSPECIFIED",
              "HYPER_THREADING_DISABLED",
              "HYPER_THREADING_ENABLED"
            ],
            "type": "string"
          },
          "vendor": {
            "description": "Hardware vendor.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "BiosDetails": {
        "description": "Details about the BIOS.",
        "properties": {
          "biosManufacturer": {
            "description": "BIOS manufacturer.",
            "type": "string"
          },
          "biosName": {
            "description": "BIOS name.",
            "type": "string"
          },
          "biosReleaseDate": {
            "description": "BIOS release date.",
            "type": "string"
          },
          "biosVersion": {
            "description": "BIOS version.",
            "type": "string"
          },
          "smbiosUuid": {
            "description": "SMBIOS UUID.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "VirtualMachineDiskDetails": {
        "description": "Details of VM disks.",
        "properties": {
          "disks": {
            "$ref": "#/$defs/DiskEntryList"
          },
          "hddTotalCapacityBytes": {
            "description": "Disk total Capacity.",
            "format": "int64",
            "type": "string"
          },
          "hddTotalFreeBytes": {
            "description": "Total Disk Free Space.",
            "format": "int64",
            "type": "string"
          },
          "lsblkJson": {
            "description": "Raw lsblk output in json.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DiskEntryList": {
        "description": "VM disks.",
        "properties": {
          "entries": {
            "description": "Disk entries.",
            "items": {
              "$ref": "#/$defs/DiskEntry"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DiskEntry": {
        "description": "Single disk entry.",
        "properties": {
          "diskLabel": {
            "description": "Disk label.",
            "type": "string"
          },
          "diskLabelType": {
            "description": "Disk label type (e.g. BIOS/GPT)",
            "type": "string"
          },
          "hwAddress": {
            "description": "Disk hardware address (e.g. 0:1 for SCSI).",
            "type": "string"
          },
          "interfaceType": {
            "description": "Disks interface type (e.g. SATA/SCSI)",
            "type": "string"
          },
          "partitions": {
            "$ref": "#/$defs/DiskPartitionList"
          },
          "status": {
            "description": "Disk status (e.g. online).",
            "type": "string"
          },
          "totalCapacityBytes": {
            "description": "Disk capacity.",
            "format": "int64",
            "type": "string"
          },
          "totalFreeBytes": {
            "description": "Disk free space.",
            "format": "int64",
            "type": "string"
          },
          "vmwareConfig": {
            "$ref": "#/$defs/VmwareDiskConfig"
          }
        },
        "type": "object"
      },
      "DiskPartitionList": {
        "description": "Disk partition list.",
        "properties": {
          "entries": {
            "description": "Partition entries.",
            "items": {
              "$ref": "#/$defs/DiskPartition"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DiskPartition": {
        "description": "Disk Partition details.",
        "properties": {
          "capacityBytes": {
            "description": "Partition capacity.",
            "format": "int64",
            "type": "string"
          },
          "fileSystem": {
            "description": "Partition file system.",
            "type": "string"
          },
          "freeBytes": {
            "description": "Partition free space.",
            "format": "int64",
            "type": "string"
          },
          "mountPoint": {
            "description": "Mount pount (Linux/Windows) or drive letter (Windows).",
            "type": "string"
          },
          "subPartitions": {
            "$ref": "#/$defs/DiskPartitionList"
          },
          "type": {
            "description": "Partition type (e.g. BIOS boot).",
            "type": "string"
          },
          "uuid": {
            "description": "Partition UUID.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "VmwareDiskConfig": {
        "description": "VMware disk config details.",
        "properties": {
          "backingType": {
            "description": "VMDK backing type.",
            "enum": [
              "BACKING_TYPE_UNSPECIFIED",
              "BACKING_TYPE_FLAT_V1",
              "BACKING_TYPE_FLAT_V2",
              "BACKING_TYPE_PMEM",
              "BACKING_TYPE_RDM_V1",
              "BACKING_TYPE_RDM_V2",
              "BACKING_TYPE_SESPARSE",
              "BACKING_TYPE_SESPARSE_V1",
              "BACKING_TYPE_SESPARSE_V2"
            ],
            "type": "string"
          },
          "rdmCompatibilityMode": {
            "description": "RDM compatibility mode.",
            "type": "string"
          },
          "shared": {
            "description": "Is VMDK shared with other VMs.",
            "type": "boolean"
          },
          "vmdkDiskMode": {
            "description": "VMDK disk mode.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "VirtualMachineNetworkDetails": {
        "description": "Details of network adapters and settings.",
        "properties": {
          "defaultGw": {
            "description": "Default gateway address.",
            "type": "string"
          },
          "networkAdapters": {
            "$ref": "#/$defs/NetworkAdapterList"
          },
          "primaryIpAddress": {
            "description": "IP address of the machine.",
            "type": "string"
          },
          "primaryMacAddress": {
            "description": "MAC address of the machine. This property is used to uniqly identify the machine.",
            "type": "string"
          },
          "publicIpAddress": {
            "description": "Public IP address of the machine.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "NetworkAdapterList": {
        "description": "List of network adapters.",
        "properties": {
          "networkAdapters": {
            "description": "Network adapter descriptions.",
            "items": {
              "$ref": "#/$defs/NetworkAdapterDetails"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "NetworkAdapterDetails": {
        "description": "Details of network adapter.",
        "properties": {
          "adapterType": {
            "description": "Network adapter type (e.g. VMXNET3).",
            "type": "string"
          },
          "addresses": {
            "$ref": "#/$defs/NetworkAddressList"
          },
          "macAddress": {
            "description": "MAC address.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "NetworkAddressList": {
        "description": "List of allocated/assigned network addresses.",
        "properties": {
          "addresses": {
            "description": "Network address entries.",
            "items": {
              "$ref": "#/$defs/NetworkAddress"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "NetworkAddress": {
        "description": "Details of network address.",
        "properties": {
          "assignment": {
            "description": "Whether DHCP is used to assign addresses.",
            "enum": [
              "ADDRESS_ASSIGNMENT_UNSPECIFIED",
              "ADDRESS_ASSIGNMENT_STATIC",
              "ADDRESS_ASSIGNMENT_DHCP"
            ],
            "type": "string"
          },
          "bcast": {
            "description": "Broadcast address.",
            "type": "string"
          },
          "fqdn": {
            "description": "Fully qualified domain name.",
            "type": "string"
          },
          "ipAddress": {
            "description": "Assigned or configured IP Address.",
            "type": "string"
          },
          "subnetMask": {
            "description": "Subnet mask.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://migrationcenter.googleapis.com//v1alpha1/{parent}/assets:batchUpdate{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Response for updating a list of assets.",
        "**Key properties:**",
        {
          "$ul": [
            "**assets**: Update asset content. The content only includes values after field mask being applied."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
