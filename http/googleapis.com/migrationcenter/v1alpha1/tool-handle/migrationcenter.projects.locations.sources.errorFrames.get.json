{
  "name": "migrationcenter_projects_locations_sources_errorFrames_get",
  "description": "Gets the details of an error frame.",
  "parameters": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "Required. The name of the frame to retrieve. Format: projects/{project}/locations/{location}/sources/{source}/errorFrames/{error_frame}"
      },
      "view": {
        "enum": [
          "ERROR_FRAME_VIEW_UNSPECIFIED",
          "ERROR_FRAME_VIEW_BASIC",
          "ERROR_FRAME_VIEW_FULL",
          "REPORT_VIEW_STANDARD"
        ],
        "type": "string",
        "description": "Optional. An optional view mode to control the level of details for the frame. The default is a basic frame view."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      }
    },
    "required": [
      "name"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://migrationcenter.googleapis.com//v1alpha1/{name}{?view,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Message representing a frame which failed to be processed due to an error.",
        "**Key properties:**",
        {
          "$ul": [
            "**ingestionTime**: Output only. Frame ingestion time.",
            "**name**: Output only. The identifier of the ErrorFrame.",
            [
              "**originalFrame**: Contains data reported from an inventory source on an asset.",
              {
                "$ul": [
                  "**attributes**: Generic asset attributes.",
                  "**labels**: Labels as key value pairs.",
                  "**performanceSamples**: Asset performance data samples. Samples that are from more than 40 days ago or after tomorrow are ignored.",
                  "**reportTime**: The time the data was reported.",
                  "**traceToken**: Optional. Trace token is optionally provided to assist with debugging and traceability.",
                  [
                    "**virtualMachineDetails**: Details of a VirtualMachine.",
                    {
                      "$ul": [
                        "**coreCount**: Number of CPU cores in the VirtualMachine. Must be non-negative.",
                        "**createTime**: VM creation timestamp.",
                        [
                          "**guestOs**: Information from Guest-level collections.",
                          {
                            "$ul": [
                              [
                                "**config**: Guest OS config information.",
                                {
                                  "$ul": [
                                    [
                                      "**fstab**: Fstab content.",
                                      {
                                        "$ul": [
                                          "**entries**: Fstab entries."
                                        ]
                                      }
                                    ],
                                    [
                                      "**hosts**: Hosts content.",
                                      {
                                        "$ul": [
                                          "**entries**: Hosts entries."
                                        ]
                                      }
                                    ],
                                    "**issue**: OS issue (typically /etc/issue in Linux).",
                                    [
                                      "**nfsExports**: NFS exports.",
                                      {
                                        "$ul": [
                                          "**entries**: NFS export entries."
                                        ]
                                      }
                                    ],
                                    [
                                      "**selinux**: SELinux details.",
                                      {
                                        "$ul": [
                                          "**enabled**: Is SELinux enabled.",
                                          "**mode**: SELinux mode enforcing / permissive."
                                        ]
                                      }
                                    ]
                                  ]
                                }
                              ],
                              [
                                "**runtime**: Guest OS runtime information.",
                                {
                                  "$ul": [
                                    "**domain**: Domain, e.g. c.stratozone-development.internal.",
                                    [
                                      "**installedApps**: Guest installed application list.",
                                      {
                                        "$ul": [
                                          "**entries**: Application entries."
                                        ]
                                      }
                                    ],
                                    [
                                      "**lastUptime**: Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp",
                                      {
                                        "$ul": [
                                          "**day**: Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
                                          "**month**: Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
                                          "**year**: Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year."
                                        ]
                                      }
                                    ],
                                    "**machineName**: Machine name.",
                                    [
                                      "**networkInfo**: Runtime networking information.",
                                      {
                                        "$ul": [
                                          [
                                            "**connections**: Network connection list.",
                                            {
                                              "$ul": [
                                                "**entries**: Network connection entries."
                                              ]
                                            }
                                          ],
                                          "**netstat**: Netstat (raw, OS-agnostic).",
                                          [
                                            "**netstatTime**: Represents civil time (or occasionally physical time). This type can represent a civil time in one of a few possible ways: * When utc_offset is set and time_zone is unset: a civil time on a calendar day with a particular offset from UTC. * When time_zone is set and utc_offset is unset: a civil time on a calendar day in a particular time zone. * When neither time_zone nor utc_offset is set: a civil time on a calendar day in local time. The date is relative to the Proleptic Gregorian Calendar. If year, month, or day are 0, the DateTime is considered not to have a specific year, month, or day respectively. This type may also be used to represent a physical time if all the date and time fields are set and either case of the `time_offset` oneof is set. Consider using `Timestamp` message for physical time instead. If your use case also would like to store the user's timezone, that can be done in another field. This type is more flexible than some applications may want. Make sure to document and validate your application's limitations.",
                                            {
                                              "$ul": [
                                                "**day**: Optional. Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a datetime without a day.",
                                                "**hours**: Optional. Hours of day in 24 hour format. Should be from 0 to 23, defaults to 0 (midnight). An API may choose to allow the value \"24:00:00\" for scenarios like business closing time.",
                                                "**minutes**: Optional. Minutes of hour of day. Must be from 0 to 59, defaults to 0.",
                                                "**month**: Optional. Month of year. Must be from 1 to 12, or 0 if specifying a datetime without a month.",
                                                "**nanos**: Optional. Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999, defaults to 0.",
                                                "**seconds**: Optional. Seconds of minutes of the time. Must normally be from 0 to 59, defaults to 0. An API may allow the value 60 if it allows leap-seconds.",
                                                [
                                                  "**timeZone**: Represents a time zone from the [IANA Time Zone Database](https://www.iana.org/time-zones).",
                                                  {
                                                    "$ul": [
                                                      "**id**: IANA Time Zone Database time zone, e.g. \"America/New_York\".",
                                                      "**version**: Optional. IANA Time Zone Database version number, e.g. \"2019a\"."
                                                    ]
                                                  }
                                                ],
                                                "**utcOffset**: UTC offset. Must be whole seconds, between -18 hours and +18 hours. For example, a UTC offset of -4:00 would be represented as { seconds: -14400 }.",
                                                "**year**: Optional. Year of date. Must be from 1 to 9999, or 0 if specifying a datetime without a year."
                                              ]
                                            }
                                          ]
                                        ]
                                      }
                                    ],
                                    [
                                      "**openFileList**: Open file list.",
                                      {
                                        "$ul": [
                                          "**entries**: Open file details entries."
                                        ]
                                      }
                                    ],
                                    [
                                      "**processes**: List of running guest OS processes.",
                                      {
                                        "$ul": [
                                          "**processes**: Running process entries."
                                        ]
                                      }
                                    ],
                                    [
                                      "**services**: List of running guest OS services.",
                                      {
                                        "$ul": [
                                          "**services**: Running service entries."
                                        ]
                                      }
                                    ]
                                  ]
                                }
                              ]
                            ]
                          }
                        ],
                        "**memoryMb**: The amount of memory in the VirtualMachine. Must be non-negative.",
                        "**osFamily**: What family the OS belong to, if known.",
                        "**osName**: The name of the operating system running on the VirtualMachine.",
                        "**osVersion**: The version of the operating system running on the virtual machine.",
                        [
                          "**platform**: Information about the platform.",
                          {
                            "$ul": [
                              [
                                "**awsEc2Details**: AWS EC2 specific details.",
                                {
                                  "$ul": [
                                    "**location**: The location of the machine in the AWS format.",
                                    "**machineTypeLabel**: AWS platform's machine type label."
                                  ]
                                }
                              ],
                              [
                                "**azureVmDetails**: Azure VM specific details.",
                                {
                                  "$ul": [
                                    "**location**: The location of the machine in the Azure format.",
                                    "**machineTypeLabel**: Azure platform's machine type label.",
                                    "**provisioningState**: Azure platform's provisioning state."
                                  ]
                                }
                              ],
                              [
                                "**genericDetails**: Generic platform details.",
                                {
                                  "$ul": [
                                    "**location**: Free text representation of the machine location. The format of this field should not be relied on. Different VMs in the same location may have different string values for this field."
                                  ]
                                }
                              ],
                              [
                                "**physicalDetails**: Platform specific details for Physical Machines.",
                                {
                                  "$ul": [
                                    "**location**: Free text representation of the machine location. The format of this field should not be relied on. Different machines in the same location may have different string values for this field."
                                  ]
                                }
                              ],
                              [
                                "**vmwareDetails**: VMware specific details.",
                                {
                                  "$ul": [
                                    "**esxVersion**: ESX version.",
                                    "**osid**: VMware os enum - https://vdc-repo.vmware.com/vmwb-repository/dcr-public/da47f910-60ac-438b-8b9b-6122f4d14524/16b7274a-bf8b-4b4c-a05e-746f2aa93c8c/doc/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html.",
                                    "**vcenterVersion**: vCenter version."
                                  ]
                                }
                              ]
                            ]
                          }
                        ],
                        "**powerState**: Power state of VM (poweredOn or poweredOff).",
                        "**vcenterFolder**: Folder name in vCenter where asset resides.",
                        "**vcenterUrl**: vCenter URL used in collection.",
                        "**vcenterVmId**: vCenter VM ID.",
                        [
                          "**vmArchitecture**: Details of the VM architecture.",
                          {
                            "$ul": [
                              [
                                "**bios**: Details about the BIOS.",
                                {
                                  "$ul": [
                                    "**biosManufacturer**: BIOS manufacturer.",
                                    "**biosName**: BIOS name.",
                                    "**biosReleaseDate**: BIOS release date.",
                                    "**biosVersion**: BIOS version.",
                                    "**smbiosUuid**: SMBIOS UUID."
                                  ]
                                }
                              ],
                              "**cpuArchitecture**: CPU architecture, e.g., \"x64-based PC\", \"x86_64\", \"i686\" etc.",
                              "**cpuManufacturer**: CPU manufacturer, e.g., \"Intel\", \"AMD\".",
                              "**cpuName**: CPU name, e.g., \"Intel Xeon E5-2690\", \"AMD EPYC 7571\" etc.",
                              "**cpuSocketCount**: Number of processor sockets allocated to the machine.",
                              "**cpuThreadCount**: Number of CPU threads allocated to the machine.",
                              "**firmware**: Firmware (BIOS/efi).",
                              "**hyperthreading**: CPU hyperthreading support.",
                              "**vendor**: Hardware vendor."
                            ]
                          }
                        ],
                        [
                          "**vmDisks**: Details of VM disks.",
                          {
                            "$ul": [
                              [
                                "**disks**: VM disks.",
                                {
                                  "$ul": [
                                    "**entries**: Disk entries."
                                  ]
                                }
                              ],
                              "**hddTotalCapacityBytes**: Disk total Capacity.",
                              "**hddTotalFreeBytes**: Total Disk Free Space.",
                              "**lsblkJson**: Raw lsblk output in json."
                            ]
                          }
                        ],
                        "**vmName**: Virtual Machine display name.",
                        [
                          "**vmNetwork**: Details of network adapters and settings.",
                          {
                            "$ul": [
                              "**defaultGw**: Default gateway address.",
                              [
                                "**networkAdapters**: List of network adapters.",
                                {
                                  "$ul": [
                                    "**networkAdapters**: Network adapter descriptions."
                                  ]
                                }
                              ],
                              "**primaryIpAddress**: IP address of the machine.",
                              "**primaryMacAddress**: MAC address of the machine. This property is used to uniqly identify the machine.",
                              "**publicIpAddress**: Public IP address of the machine."
                            ]
                          }
                        ],
                        "**vmUuid**: Virtual Machine unique identifier."
                      ]
                    }
                  ]
                ]
              }
            ],
            "**violations**: Output only. All the violations that were detected for the frame."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
