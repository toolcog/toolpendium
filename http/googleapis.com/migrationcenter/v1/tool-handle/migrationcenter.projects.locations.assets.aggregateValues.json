{
  "name": "migrationcenter_projects_locations_assets_aggregateValues",
  "description": "Aggregates the requested fields based on provided function.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. Parent value for `AggregateAssetsValuesRequest`."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/AggregateAssetsValuesRequest"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "AggregateAssetsValuesRequest": {
        "description": "A request to aggregate one or more values.",
        "properties": {
          "aggregations": {
            "description": "Array of aggregations to perform. Up to 25 aggregations can be defined.",
            "items": {
              "$ref": "#/$defs/Aggregation"
            },
            "type": "array"
          },
          "filter": {
            "description": "The aggregation will be performed on assets that match the provided filter.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Aggregation": {
        "description": "Message describing an aggregation. The message includes the aggregation type, parameters, and the field on which to perform the aggregation.",
        "properties": {
          "count": {
            "$ref": "#/$defs/AggregationCount"
          },
          "field": {
            "description": "The name of the field on which to aggregate.",
            "type": "string"
          },
          "frequency": {
            "$ref": "#/$defs/AggregationFrequency"
          },
          "histogram": {
            "$ref": "#/$defs/AggregationHistogram"
          },
          "sum": {
            "$ref": "#/$defs/AggregationSum"
          }
        },
        "type": "object"
      },
      "AggregationCount": {
        "description": "Object count.",
        "properties": {},
        "type": "object"
      },
      "AggregationFrequency": {
        "description": "Frequency distribution of all field values.",
        "properties": {},
        "type": "object"
      },
      "AggregationHistogram": {
        "description": "Histogram of bucketed assets counts by field value.",
        "properties": {
          "lowerBounds": {
            "description": "Lower bounds of buckets. The response will contain `n+1` buckets for `n` bounds. The first bucket will count all assets for which the field value is smaller than the first bound. Subsequent buckets will count assets for which the field value is greater or equal to a lower bound and smaller than the next one. The last bucket will count assets for which the field value is greater or equal to the final lower bound. You can define up to 20 lower bounds.",
            "items": {
              "format": "double",
              "type": "number"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AggregationSum": {
        "description": "Sum of field values.",
        "properties": {},
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://migrationcenter.googleapis.com//v1/{parent}/assets:aggregateValues{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A response to a request to aggregated assets values.",
        "**Key properties:**",
        {
          "$ul": [
            "**results**: The aggregation results."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
