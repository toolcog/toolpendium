{
  "name": "migrationcenter_projects_locations_importJobs_create",
  "description": "Creates an import job.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. Value for parent."
      },
      "importJobId": {
        "type": "string",
        "description": "Required. ID of the import job."
      },
      "requestId": {
        "type": "string",
        "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/ImportJob"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "ImportJob": {
        "description": "A resource that represents the background job that imports asset frames.",
        "properties": {
          "assetSource": {
            "description": "Required. Reference to a source.",
            "type": "string"
          },
          "completeTime": {
            "description": "Output only. The timestamp when the import job was completed.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "createTime": {
            "description": "Output only. The timestamp when the import job was created.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "Optional. User-friendly display name. Maximum length is 256 characters.",
            "type": "string"
          },
          "executionReport": {
            "$ref": "#/$defs/ExecutionReport"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Labels as key value pairs.",
            "type": "object"
          },
          "name": {
            "description": "Output only. The full name of the import job.",
            "readOnly": true,
            "type": "string"
          },
          "state": {
            "description": "Output only. The state of the import job.",
            "enum": [
              "IMPORT_JOB_STATE_UNSPECIFIED",
              "IMPORT_JOB_STATE_PENDING",
              "IMPORT_JOB_STATE_RUNNING",
              "IMPORT_JOB_STATE_COMPLETED",
              "IMPORT_JOB_STATE_FAILED",
              "IMPORT_JOB_STATE_VALIDATING",
              "IMPORT_JOB_STATE_FAILED_VALIDATION",
              "IMPORT_JOB_STATE_READY"
            ],
            "readOnly": true,
            "type": "string"
          },
          "updateTime": {
            "description": "Output only. The timestamp when the import job was last updated.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "validationReport": {
            "$ref": "#/$defs/ValidationReport"
          }
        },
        "type": "object"
      },
      "ExecutionReport": {
        "description": "A resource that reports result of the import job execution.",
        "properties": {
          "executionErrors": {
            "$ref": "#/$defs/ValidationReport"
          },
          "framesReported": {
            "description": "Total number of asset frames reported for the import job.",
            "format": "int32",
            "type": "integer"
          },
          "totalRowsCount": {
            "description": "Output only. Total number of rows in the import job.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ValidationReport": {
        "description": "A resource that aggregates errors across import job files.",
        "properties": {
          "fileValidations": {
            "description": "List of errors found in files.",
            "items": {
              "$ref": "#/$defs/FileValidationReport"
            },
            "type": "array"
          },
          "jobErrors": {
            "description": "List of job level errors.",
            "items": {
              "$ref": "#/$defs/ImportError"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "FileValidationReport": {
        "description": "A resource that aggregates the validation errors found in an import job file.",
        "properties": {
          "fileErrors": {
            "description": "List of file level errors.",
            "items": {
              "$ref": "#/$defs/ImportError"
            },
            "type": "array"
          },
          "fileName": {
            "description": "The name of the file.",
            "type": "string"
          },
          "partialReport": {
            "description": "Flag indicating that processing was aborted due to maximum number of errors.",
            "type": "boolean"
          },
          "rowErrors": {
            "description": "Partial list of rows that encountered validation error.",
            "items": {
              "$ref": "#/$defs/ImportRowError"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ImportError": {
        "description": "A resource that reports the errors encountered while processing an import job.",
        "properties": {
          "errorDetails": {
            "description": "The error information.",
            "type": "string"
          },
          "severity": {
            "description": "The severity of the error.",
            "enum": [
              "SEVERITY_UNSPECIFIED",
              "ERROR",
              "WARNING",
              "INFO"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "ImportRowError": {
        "description": "A resource that reports the import job errors at row level.",
        "properties": {
          "errors": {
            "description": "The list of errors detected in the row.",
            "items": {
              "$ref": "#/$defs/ImportError"
            },
            "type": "array"
          },
          "rowNumber": {
            "deprecated": true,
            "description": "The row number where the error was detected.",
            "format": "int32",
            "type": "integer"
          },
          "vmName": {
            "description": "The name of the VM in the row.",
            "type": "string"
          },
          "vmUuid": {
            "description": "The VM UUID.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://migrationcenter.googleapis.com//v1/{parent}/importJobs{?importJobId,requestId,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "This resource represents a long-running operation that is the result of a network API call.",
        "**Key properties:**",
        {
          "$ul": [
            "**done**: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
            [
              "**error**: The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
              {
                "$ul": [
                  "**code**: The status code, which should be an enum value of google.rpc.Code.",
                  "**details**: A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                  "**message**: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                ]
              }
            ],
            "**metadata**: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
            "**name**: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
            "**response**: The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
