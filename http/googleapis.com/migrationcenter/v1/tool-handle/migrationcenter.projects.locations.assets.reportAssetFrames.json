{
  "name": "migrationcenter_projects_locations_assets_reportAssetFrames",
  "description": "Reports a set of frames.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. Parent of the resource."
      },
      "source": {
        "type": "string",
        "description": "Required. Reference to a source."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/Frames"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "Frames": {
        "description": "Collection of frame data.",
        "properties": {
          "framesData": {
            "description": "A repeated field of asset data.",
            "items": {
              "$ref": "#/$defs/AssetFrame"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AssetFrame": {
        "description": "Contains data reported from an inventory source on an asset.",
        "properties": {
          "attributes": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Generic asset attributes.",
            "type": "object"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Labels as key value pairs.",
            "type": "object"
          },
          "machineDetails": {
            "$ref": "#/$defs/MachineDetails"
          },
          "performanceSamples": {
            "description": "Asset performance data samples. Samples that are from more than 40 days ago or after tomorrow are ignored.",
            "items": {
              "$ref": "#/$defs/PerformanceSample"
            },
            "type": "array"
          },
          "reportTime": {
            "description": "The time the data was reported.",
            "format": "google-datetime",
            "type": "string"
          },
          "traceToken": {
            "description": "Optional. Trace token is optionally provided to assist with debugging and traceability.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MachineDetails": {
        "description": "Details of a machine.",
        "properties": {
          "architecture": {
            "$ref": "#/$defs/MachineArchitectureDetails"
          },
          "coreCount": {
            "description": "Number of CPU cores in the machine. Must be non-negative.",
            "format": "int32",
            "type": "integer"
          },
          "createTime": {
            "description": "Machine creation time.",
            "format": "google-datetime",
            "type": "string"
          },
          "disks": {
            "$ref": "#/$defs/MachineDiskDetails"
          },
          "guestOs": {
            "$ref": "#/$defs/GuestOsDetails"
          },
          "machineName": {
            "description": "Machine name.",
            "type": "string"
          },
          "memoryMb": {
            "description": "The amount of memory in the machine. Must be non-negative.",
            "format": "int32",
            "type": "integer"
          },
          "network": {
            "$ref": "#/$defs/MachineNetworkDetails"
          },
          "platform": {
            "$ref": "#/$defs/PlatformDetails"
          },
          "powerState": {
            "description": "Power state of the machine.",
            "enum": [
              "POWER_STATE_UNSPECIFIED",
              "PENDING",
              "ACTIVE",
              "SUSPENDING",
              "SUSPENDED",
              "DELETING",
              "DELETED"
            ],
            "type": "string"
          },
          "uuid": {
            "description": "Machine unique identifier.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MachineArchitectureDetails": {
        "description": "Details of the machine architecture.",
        "properties": {
          "bios": {
            "$ref": "#/$defs/BiosDetails"
          },
          "cpuArchitecture": {
            "description": "CPU architecture, e.g., \"x64-based PC\", \"x86_64\", \"i686\" etc.",
            "type": "string"
          },
          "cpuName": {
            "description": "CPU name, e.g., \"Intel Xeon E5-2690\", \"AMD EPYC 7571\" etc.",
            "type": "string"
          },
          "cpuSocketCount": {
            "description": "Number of processor sockets allocated to the machine.",
            "format": "int32",
            "type": "integer"
          },
          "cpuThreadCount": {
            "description": "Number of CPU threads allocated to the machine.",
            "format": "int32",
            "type": "integer"
          },
          "firmwareType": {
            "description": "Firmware type.",
            "enum": [
              "FIRMWARE_TYPE_UNSPECIFIED",
              "BIOS",
              "EFI"
            ],
            "type": "string"
          },
          "hyperthreading": {
            "description": "CPU hyper-threading support.",
            "enum": [
              "CPU_HYPER_THREADING_UNSPECIFIED",
              "DISABLED",
              "ENABLED"
            ],
            "type": "string"
          },
          "vendor": {
            "description": "Hardware vendor.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "BiosDetails": {
        "description": "Details about the BIOS.",
        "properties": {
          "biosName": {
            "deprecated": true,
            "description": "BIOS name. This fields is deprecated. Please use the `id` field instead.",
            "type": "string"
          },
          "id": {
            "description": "BIOS ID.",
            "type": "string"
          },
          "manufacturer": {
            "description": "BIOS manufacturer.",
            "type": "string"
          },
          "releaseDate": {
            "$ref": "#/$defs/Date"
          },
          "smbiosUuid": {
            "description": "SMBIOS UUID.",
            "type": "string"
          },
          "version": {
            "description": "BIOS version.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Date": {
        "description": "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp",
        "properties": {
          "day": {
            "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
            "format": "int32",
            "type": "integer"
          },
          "month": {
            "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
            "format": "int32",
            "type": "integer"
          },
          "year": {
            "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "MachineDiskDetails": {
        "description": "Details of machine disks.",
        "properties": {
          "disks": {
            "$ref": "#/$defs/DiskEntryList"
          },
          "totalCapacityBytes": {
            "description": "Disk total Capacity.",
            "format": "int64",
            "type": "string"
          },
          "totalFreeBytes": {
            "description": "Total disk free space.",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DiskEntryList": {
        "description": "VM disks.",
        "properties": {
          "entries": {
            "description": "Disk entries.",
            "items": {
              "$ref": "#/$defs/DiskEntry"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DiskEntry": {
        "description": "Single disk entry.",
        "properties": {
          "capacityBytes": {
            "description": "Disk capacity.",
            "format": "int64",
            "type": "string"
          },
          "diskLabel": {
            "description": "Disk label.",
            "type": "string"
          },
          "diskLabelType": {
            "description": "Disk label type (e.g. BIOS/GPT)",
            "type": "string"
          },
          "freeBytes": {
            "description": "Disk free space.",
            "format": "int64",
            "type": "string"
          },
          "hwAddress": {
            "description": "Disk hardware address (e.g. 0:1 for SCSI).",
            "type": "string"
          },
          "interfaceType": {
            "description": "Disks interface type.",
            "enum": [
              "INTERFACE_TYPE_UNSPECIFIED",
              "IDE",
              "SATA",
              "SAS",
              "SCSI",
              "NVME",
              "FC",
              "ISCSI"
            ],
            "type": "string"
          },
          "partitions": {
            "$ref": "#/$defs/DiskPartitionList"
          },
          "vmware": {
            "$ref": "#/$defs/VmwareDiskConfig"
          }
        },
        "type": "object"
      },
      "DiskPartitionList": {
        "description": "Disk partition list.",
        "properties": {
          "entries": {
            "description": "Partition entries.",
            "items": {
              "$ref": "#/$defs/DiskPartition"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DiskPartition": {
        "description": "Disk Partition details.",
        "properties": {
          "capacityBytes": {
            "description": "Partition capacity.",
            "format": "int64",
            "type": "string"
          },
          "fileSystem": {
            "description": "Partition file system.",
            "type": "string"
          },
          "freeBytes": {
            "description": "Partition free space.",
            "format": "int64",
            "type": "string"
          },
          "mountPoint": {
            "description": "Mount pount (Linux/Windows) or drive letter (Windows).",
            "type": "string"
          },
          "subPartitions": {
            "$ref": "#/$defs/DiskPartitionList"
          },
          "type": {
            "description": "Partition type.",
            "type": "string"
          },
          "uuid": {
            "description": "Partition UUID.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "VmwareDiskConfig": {
        "description": "VMware disk config details.",
        "properties": {
          "backingType": {
            "description": "VMDK backing type.",
            "enum": [
              "BACKING_TYPE_UNSPECIFIED",
              "BACKING_TYPE_FLAT_V1",
              "BACKING_TYPE_FLAT_V2",
              "BACKING_TYPE_PMEM",
              "BACKING_TYPE_RDM_V1",
              "BACKING_TYPE_RDM_V2",
              "BACKING_TYPE_SESPARSE",
              "BACKING_TYPE_SESPARSE_V1",
              "BACKING_TYPE_SESPARSE_V2"
            ],
            "type": "string"
          },
          "rdmCompatibility": {
            "description": "RDM compatibility mode.",
            "enum": [
              "RDM_COMPATIBILITY_UNSPECIFIED",
              "PHYSICAL_COMPATIBILITY",
              "VIRTUAL_COMPATIBILITY"
            ],
            "type": "string"
          },
          "shared": {
            "description": "Is VMDK shared with other VMs.",
            "type": "boolean"
          },
          "vmdkMode": {
            "description": "VMDK disk mode.",
            "enum": [
              "VMDK_MODE_UNSPECIFIED",
              "DEPENDENT",
              "INDEPENDENT_PERSISTENT",
              "INDEPENDENT_NONPERSISTENT"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "GuestOsDetails": {
        "description": "Information from Guest-level collections.",
        "properties": {
          "config": {
            "$ref": "#/$defs/GuestConfigDetails"
          },
          "family": {
            "description": "What family the OS belong to, if known.",
            "enum": [
              "OS_FAMILY_UNKNOWN",
              "OS_FAMILY_WINDOWS",
              "OS_FAMILY_LINUX",
              "OS_FAMILY_UNIX"
            ],
            "type": "string"
          },
          "osName": {
            "description": "The name of the operating system.",
            "type": "string"
          },
          "runtime": {
            "$ref": "#/$defs/GuestRuntimeDetails"
          },
          "version": {
            "description": "The version of the operating system.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GuestConfigDetails": {
        "description": "Guest OS config information.",
        "properties": {
          "fstab": {
            "$ref": "#/$defs/FstabEntryList"
          },
          "hosts": {
            "$ref": "#/$defs/HostsEntryList"
          },
          "issue": {
            "description": "OS issue (typically /etc/issue in Linux).",
            "type": "string"
          },
          "nfsExports": {
            "$ref": "#/$defs/NfsExportList"
          },
          "selinuxMode": {
            "description": "Security-Enhanced Linux (SELinux) mode.",
            "enum": [
              "SE_LINUX_MODE_UNSPECIFIED",
              "SE_LINUX_MODE_DISABLED",
              "SE_LINUX_MODE_PERMISSIVE",
              "SE_LINUX_MODE_ENFORCING"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "FstabEntryList": {
        "description": "Fstab content.",
        "properties": {
          "entries": {
            "description": "Fstab entries.",
            "items": {
              "$ref": "#/$defs/FstabEntry"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "FstabEntry": {
        "description": "Single fstab entry.",
        "properties": {
          "file": {
            "description": "The mount point for the filesystem.",
            "type": "string"
          },
          "freq": {
            "description": "Used by dump to determine which filesystems need to be dumped.",
            "format": "int32",
            "type": "integer"
          },
          "mntops": {
            "description": "Mount options associated with the filesystem.",
            "type": "string"
          },
          "passno": {
            "description": "Used by the fsck(8) program to determine the order in which filesystem checks are done at reboot time.",
            "format": "int32",
            "type": "integer"
          },
          "spec": {
            "description": "The block special device or remote filesystem to be mounted.",
            "type": "string"
          },
          "vfstype": {
            "description": "The type of the filesystem.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "HostsEntryList": {
        "description": "Hosts content.",
        "properties": {
          "entries": {
            "description": "Hosts entries.",
            "items": {
              "$ref": "#/$defs/HostsEntry"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "HostsEntry": {
        "description": "Single /etc/hosts entry.",
        "properties": {
          "hostNames": {
            "description": "List of host names / aliases.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "ip": {
            "description": "IP (raw, IPv4/6 agnostic).",
            "type": "string"
          }
        },
        "type": "object"
      },
      "NfsExportList": {
        "description": "NFS exports.",
        "properties": {
          "entries": {
            "description": "NFS export entries.",
            "items": {
              "$ref": "#/$defs/NfsExport"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "NfsExport": {
        "description": "NFS export.",
        "properties": {
          "exportDirectory": {
            "description": "The directory being exported.",
            "type": "string"
          },
          "hosts": {
            "description": "The hosts or networks to which the export is being shared.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GuestRuntimeDetails": {
        "description": "Guest OS runtime information.",
        "properties": {
          "domain": {
            "description": "Domain, e.g. c.stratozone-development.internal.",
            "type": "string"
          },
          "installedApps": {
            "$ref": "#/$defs/GuestInstalledApplicationList"
          },
          "lastBootTime": {
            "description": "Last time the OS was booted.",
            "format": "google-datetime",
            "type": "string"
          },
          "machineName": {
            "description": "Machine name.",
            "type": "string"
          },
          "network": {
            "$ref": "#/$defs/RuntimeNetworkInfo"
          },
          "openFileList": {
            "$ref": "#/$defs/OpenFileList"
          },
          "processes": {
            "$ref": "#/$defs/RunningProcessList"
          },
          "services": {
            "$ref": "#/$defs/RunningServiceList"
          }
        },
        "type": "object"
      },
      "GuestInstalledApplicationList": {
        "description": "Guest installed application list.",
        "properties": {
          "entries": {
            "description": "Application entries.",
            "items": {
              "$ref": "#/$defs/GuestInstalledApplication"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GuestInstalledApplication": {
        "description": "Guest installed application information.",
        "properties": {
          "applicationName": {
            "description": "Installed application name.",
            "type": "string"
          },
          "installTime": {
            "description": "The time when the application was installed.",
            "format": "google-datetime",
            "type": "string"
          },
          "licenses": {
            "description": "License strings associated with the installed application.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "path": {
            "description": "Source path.",
            "type": "string"
          },
          "vendor": {
            "description": "Installed application vendor.",
            "type": "string"
          },
          "version": {
            "description": "Installed application version.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RuntimeNetworkInfo": {
        "description": "Runtime networking information.",
        "properties": {
          "connections": {
            "$ref": "#/$defs/NetworkConnectionList"
          },
          "scanTime": {
            "description": "Time of the last network scan.",
            "format": "google-datetime",
            "type": "string"
          }
        },
        "type": "object"
      },
      "NetworkConnectionList": {
        "description": "Network connection list.",
        "properties": {
          "entries": {
            "description": "Network connection entries.",
            "items": {
              "$ref": "#/$defs/NetworkConnection"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "NetworkConnection": {
        "properties": {
          "localIpAddress": {
            "description": "Local IP address.",
            "type": "string"
          },
          "localPort": {
            "description": "Local port.",
            "format": "int32",
            "type": "integer"
          },
          "pid": {
            "description": "Process ID.",
            "format": "int64",
            "type": "string"
          },
          "processName": {
            "description": "Process or service name.",
            "type": "string"
          },
          "protocol": {
            "description": "Connection protocol (e.g. TCP/UDP).",
            "type": "string"
          },
          "remoteIpAddress": {
            "description": "Remote IP address.",
            "type": "string"
          },
          "remotePort": {
            "description": "Remote port.",
            "format": "int32",
            "type": "integer"
          },
          "state": {
            "description": "Network connection state.",
            "enum": [
              "STATE_UNSPECIFIED",
              "OPENING",
              "OPEN",
              "LISTEN",
              "CLOSING",
              "CLOSED"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "OpenFileList": {
        "description": "Open file list.",
        "properties": {
          "entries": {
            "description": "Open file details entries.",
            "items": {
              "$ref": "#/$defs/OpenFileDetails"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "OpenFileDetails": {
        "description": "Open file Information.",
        "properties": {
          "command": {
            "description": "Opened file command.",
            "type": "string"
          },
          "filePath": {
            "description": "Opened file file path.",
            "type": "string"
          },
          "fileType": {
            "description": "Opened file file type.",
            "type": "string"
          },
          "user": {
            "description": "Opened file user.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RunningProcessList": {
        "description": "List of running guest OS processes.",
        "properties": {
          "entries": {
            "description": "Running process entries.",
            "items": {
              "$ref": "#/$defs/RunningProcess"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "RunningProcess": {
        "description": "Guest OS running process details.",
        "properties": {
          "attributes": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Process extended attributes.",
            "type": "object"
          },
          "cmdline": {
            "description": "Process full command line.",
            "type": "string"
          },
          "exePath": {
            "description": "Process binary path.",
            "type": "string"
          },
          "pid": {
            "description": "Process ID.",
            "format": "int64",
            "type": "string"
          },
          "user": {
            "description": "User running the process.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RunningServiceList": {
        "description": "List of running guest OS services.",
        "properties": {
          "entries": {
            "description": "Running service entries.",
            "items": {
              "$ref": "#/$defs/RunningService"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "RunningService": {
        "description": "Guest OS running service details.",
        "properties": {
          "cmdline": {
            "description": "Service command line.",
            "type": "string"
          },
          "exePath": {
            "description": "Service binary path.",
            "type": "string"
          },
          "pid": {
            "description": "Service pid.",
            "format": "int64",
            "type": "string"
          },
          "serviceName": {
            "description": "Service name.",
            "type": "string"
          },
          "startMode": {
            "description": "Service start mode (OS-agnostic).",
            "enum": [
              "START_MODE_UNSPECIFIED",
              "BOOT",
              "SYSTEM",
              "AUTO",
              "MANUAL",
              "DISABLED"
            ],
            "type": "string"
          },
          "state": {
            "description": "Service state (OS-agnostic).",
            "enum": [
              "STATE_UNSPECIFIED",
              "ACTIVE",
              "PAUSED",
              "STOPPED"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "MachineNetworkDetails": {
        "description": "Details of network adapters and settings.",
        "properties": {
          "adapters": {
            "$ref": "#/$defs/NetworkAdapterList"
          },
          "primaryIpAddress": {
            "description": "The primary IP address of the machine.",
            "type": "string"
          },
          "primaryMacAddress": {
            "description": "MAC address of the machine. This property is used to uniqly identify the machine.",
            "type": "string"
          },
          "publicIpAddress": {
            "description": "The public IP address of the machine.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "NetworkAdapterList": {
        "description": "List of network adapters.",
        "properties": {
          "entries": {
            "description": "Network adapter entries.",
            "items": {
              "$ref": "#/$defs/NetworkAdapterDetails"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "NetworkAdapterDetails": {
        "description": "Details of network adapter.",
        "properties": {
          "adapterType": {
            "description": "Network adapter type (e.g. VMXNET3).",
            "type": "string"
          },
          "addresses": {
            "$ref": "#/$defs/NetworkAddressList"
          },
          "macAddress": {
            "description": "MAC address.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "NetworkAddressList": {
        "description": "List of allocated/assigned network addresses.",
        "properties": {
          "entries": {
            "description": "Network address entries.",
            "items": {
              "$ref": "#/$defs/NetworkAddress"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "NetworkAddress": {
        "description": "Details of network address.",
        "properties": {
          "assignment": {
            "description": "Whether DHCP is used to assign addresses.",
            "enum": [
              "ADDRESS_ASSIGNMENT_UNSPECIFIED",
              "ADDRESS_ASSIGNMENT_STATIC",
              "ADDRESS_ASSIGNMENT_DHCP"
            ],
            "type": "string"
          },
          "bcast": {
            "description": "Broadcast address.",
            "type": "string"
          },
          "fqdn": {
            "description": "Fully qualified domain name.",
            "type": "string"
          },
          "ipAddress": {
            "description": "Assigned or configured IP Address.",
            "type": "string"
          },
          "subnetMask": {
            "description": "Subnet mask.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PlatformDetails": {
        "description": "Information about the platform.",
        "properties": {
          "awsEc2Details": {
            "$ref": "#/$defs/AwsEc2PlatformDetails"
          },
          "azureVmDetails": {
            "$ref": "#/$defs/AzureVmPlatformDetails"
          },
          "genericDetails": {
            "$ref": "#/$defs/GenericPlatformDetails"
          },
          "physicalDetails": {
            "$ref": "#/$defs/PhysicalPlatformDetails"
          },
          "vmwareDetails": {
            "$ref": "#/$defs/VmwarePlatformDetails"
          }
        },
        "type": "object"
      },
      "AwsEc2PlatformDetails": {
        "description": "AWS EC2 specific details.",
        "properties": {
          "location": {
            "description": "The location of the machine in the AWS format.",
            "type": "string"
          },
          "machineTypeLabel": {
            "description": "AWS platform's machine type label.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AzureVmPlatformDetails": {
        "description": "Azure VM specific details.",
        "properties": {
          "location": {
            "description": "The location of the machine in the Azure format.",
            "type": "string"
          },
          "machineTypeLabel": {
            "description": "Azure platform's machine type label.",
            "type": "string"
          },
          "provisioningState": {
            "description": "Azure platform's provisioning state.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GenericPlatformDetails": {
        "description": "Generic platform details.",
        "properties": {
          "location": {
            "description": "Free text representation of the machine location. The format of this field should not be relied on. Different VMs in the same location may have different string values for this field.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PhysicalPlatformDetails": {
        "description": "Platform specific details for Physical Machines.",
        "properties": {
          "location": {
            "description": "Free text representation of the machine location. The format of this field should not be relied on. Different machines in the same location may have different string values for this field.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "VmwarePlatformDetails": {
        "description": "VMware specific details.",
        "properties": {
          "esxVersion": {
            "description": "ESX version.",
            "type": "string"
          },
          "osid": {
            "description": "VMware os enum - https://vdc-repo.vmware.com/vmwb-repository/dcr-public/da47f910-60ac-438b-8b9b-6122f4d14524/16b7274a-bf8b-4b4c-a05e-746f2aa93c8c/doc/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html.",
            "type": "string"
          },
          "vcenterFolder": {
            "description": "Folder name in vCenter where asset resides.",
            "type": "string"
          },
          "vcenterUri": {
            "description": "vCenter URI used in collection.",
            "type": "string"
          },
          "vcenterVersion": {
            "description": "vCenter version.",
            "type": "string"
          },
          "vcenterVmId": {
            "description": "vCenter VM ID.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PerformanceSample": {
        "description": "Performance data sample.",
        "properties": {
          "cpu": {
            "$ref": "#/$defs/CpuUsageSample"
          },
          "disk": {
            "$ref": "#/$defs/DiskUsageSample"
          },
          "memory": {
            "$ref": "#/$defs/MemoryUsageSample"
          },
          "network": {
            "$ref": "#/$defs/NetworkUsageSample"
          },
          "sampleTime": {
            "description": "Time the sample was collected. If omitted, the frame report time will be used.",
            "format": "google-datetime",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CpuUsageSample": {
        "description": "CPU usage sample.",
        "properties": {
          "utilizedPercentage": {
            "description": "Percentage of total CPU capacity utilized. Must be in the interval [0, 100]. On most systems can be calculated using 100 - idle percentage.",
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "DiskUsageSample": {
        "description": "Disk usage sample. Values are across all disks.",
        "properties": {
          "averageIops": {
            "description": "Average IOPS sampled over a short window. Must be non-negative.",
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "MemoryUsageSample": {
        "description": "Memory usage sample.",
        "properties": {
          "utilizedPercentage": {
            "description": "Percentage of system memory utilized. Must be in the interval [0, 100].",
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "NetworkUsageSample": {
        "description": "Network usage sample. Values are across all network interfaces.",
        "properties": {
          "averageEgressBps": {
            "description": "Average network egress in B/s sampled over a short window. Must be non-negative.",
            "format": "float",
            "type": "number"
          },
          "averageIngressBps": {
            "description": "Average network ingress in B/s sampled over a short window. Must be non-negative.",
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://migrationcenter.googleapis.com//v1/{parent}/assets:reportAssetFrames{?source,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A response to a call to `ReportAssetFrame`.",
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
