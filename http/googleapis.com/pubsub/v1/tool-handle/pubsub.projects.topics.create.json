{
  "name": "pubsub_projects_topics_create",
  "description": "Creates the given topic with the given name. See the [resource name rules] (https://cloud.google.com/pubsub/docs/pubsub-basics#resource_names).",
  "parameters": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "Required. The name of the topic. It must have the format `\"projects/{project}/topics/{topic}\"`. `{topic}` must start with a letter, and contain only letters (`[A-Za-z]`), numbers (`[0-9]`), dashes (`-`), underscores (`_`), periods (`.`), tildes (`~`), plus (`+`) or percent signs (`%`). It must be between 3 and 255 characters in length, and it must not start with `\"goog\"`."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/Topic"
      }
    },
    "required": [
      "name"
    ],
    "$defs": {
      "Topic": {
        "description": "A topic resource.",
        "properties": {
          "ingestionDataSourceSettings": {
            "$ref": "#/$defs/IngestionDataSourceSettings"
          },
          "kmsKeyName": {
            "description": "Optional. The resource name of the Cloud KMS CryptoKey to be used to protect access to messages published on this topic. The expected format is `projects/*/locations/*/keyRings/*/cryptoKeys/*`.",
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Optional. See [Creating and managing labels] (https://cloud.google.com/pubsub/docs/labels).",
            "type": "object"
          },
          "messageRetentionDuration": {
            "description": "Optional. Indicates the minimum duration to retain a message after it is published to the topic. If this field is set, messages published to the topic in the last `message_retention_duration` are always available to subscribers. For instance, it allows any attached subscription to [seek to a timestamp](https://cloud.google.com/pubsub/docs/replay-overview#seek_to_a_time) that is up to `message_retention_duration` in the past. If this field is not set, message retention is controlled by settings on individual subscriptions. Cannot be more than 31 days or less than 10 minutes.",
            "format": "google-duration",
            "type": "string"
          },
          "messageStoragePolicy": {
            "$ref": "#/$defs/MessageStoragePolicy"
          },
          "name": {
            "description": "Required. The name of the topic. It must have the format `\"projects/{project}/topics/{topic}\"`. `{topic}` must start with a letter, and contain only letters (`[A-Za-z]`), numbers (`[0-9]`), dashes (`-`), underscores (`_`), periods (`.`), tildes (`~`), plus (`+`) or percent signs (`%`). It must be between 3 and 255 characters in length, and it must not start with `\"goog\"`.",
            "type": "string"
          },
          "satisfiesPzs": {
            "description": "Optional. Reserved for future use. This field is set only in responses from the server; it is ignored if it is set in any requests.",
            "type": "boolean"
          },
          "schemaSettings": {
            "$ref": "#/$defs/SchemaSettings"
          },
          "state": {
            "description": "Output only. An output-only field indicating the state of the topic.",
            "enum": [
              "STATE_UNSPECIFIED",
              "ACTIVE",
              "INGESTION_RESOURCE_ERROR"
            ],
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "IngestionDataSourceSettings": {
        "description": "Settings for an ingestion data source on a topic.",
        "properties": {
          "awsKinesis": {
            "$ref": "#/$defs/AwsKinesis"
          }
        },
        "type": "object"
      },
      "AwsKinesis": {
        "description": "Ingestion settings for Amazon Kinesis Data Streams.",
        "properties": {
          "awsRoleArn": {
            "description": "Required. AWS role ARN to be used for Federated Identity authentication with Kinesis. Check the Pub/Sub docs for how to set up this role and the required permissions that need to be attached to it.",
            "type": "string"
          },
          "consumerArn": {
            "description": "Required. The Kinesis consumer ARN to used for ingestion in Enhanced Fan-Out mode. The consumer must be already created and ready to be used.",
            "type": "string"
          },
          "gcpServiceAccount": {
            "description": "Required. The GCP service account to be used for Federated Identity authentication with Kinesis (via a `AssumeRoleWithWebIdentity` call for the provided role). The `aws_role_arn` must be set up with `accounts.google.com:sub` equals to this service account number.",
            "type": "string"
          },
          "state": {
            "description": "Output only. An output-only field that indicates the state of the Kinesis ingestion source.",
            "enum": [
              "STATE_UNSPECIFIED",
              "ACTIVE",
              "KINESIS_PERMISSION_DENIED",
              "PUBLISH_PERMISSION_DENIED",
              "STREAM_NOT_FOUND",
              "CONSUMER_NOT_FOUND"
            ],
            "readOnly": true,
            "type": "string"
          },
          "streamArn": {
            "description": "Required. The Kinesis stream ARN to ingest data from.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MessageStoragePolicy": {
        "description": "A policy constraining the storage of messages published to the topic.",
        "properties": {
          "allowedPersistenceRegions": {
            "description": "Optional. A list of IDs of Google Cloud regions where messages that are published to the topic may be persisted in storage. Messages published by publishers running in non-allowed Google Cloud regions (or running outside of Google Cloud altogether) are routed for storage in one of the allowed regions. An empty list means that no regions are allowed, and is not a valid configuration.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "enforceInTransit": {
            "description": "Optional. If true, `allowed_persistence_regions` is also used to enforce in-transit guarantees for messages. That is, Pub/Sub will fail Publish operations on this topic and subscribe operations on any subscription attached to this topic in any region that is not in `allowed_persistence_regions`.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "SchemaSettings": {
        "description": "Settings for validating messages published against a schema.",
        "properties": {
          "encoding": {
            "description": "Optional. The encoding of messages validated against `schema`.",
            "enum": [
              "ENCODING_UNSPECIFIED",
              "JSON",
              "BINARY"
            ],
            "type": "string"
          },
          "firstRevisionId": {
            "description": "Optional. The minimum (inclusive) revision allowed for validating messages. If empty or not present, allow any revision to be validated against last_revision or any revision created before.",
            "type": "string"
          },
          "lastRevisionId": {
            "description": "Optional. The maximum (inclusive) revision allowed for validating messages. If empty or not present, allow any revision to be validated against first_revision or any revision created after.",
            "type": "string"
          },
          "schema": {
            "description": "Required. The name of the schema that messages published should be validated against. Format is `projects/{project}/schemas/{schema}`. The value of this field will be `_deleted-schema_` if the schema has been deleted.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "https://pubsub.googleapis.com//v1/{name}{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A topic resource.",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**ingestionDataSourceSettings**: Settings for an ingestion data source on a topic.",
              {
                "$ul": [
                  [
                    "**awsKinesis**: Ingestion settings for Amazon Kinesis Data Streams.",
                    {
                      "$ul": [
                        "**awsRoleArn**: Required. AWS role ARN to be used for Federated Identity authentication with Kinesis. Check the Pub/Sub docs for how to set up this role and the required permissions that need to be attached to it.",
                        "**consumerArn**: Required. The Kinesis consumer ARN to used for ingestion in Enhanced Fan-Out mode. The consumer must be already created and ready to be used.",
                        "**gcpServiceAccount**: Required. The GCP service account to be used for Federated Identity authentication with Kinesis (via a `AssumeRoleWithWebIdentity` call for the provided role). The `aws_role_arn` must be set up with `accounts.google.com:sub` equals to this service account number.",
                        "**state**: Output only. An output-only field that indicates the state of the Kinesis ingestion source.",
                        "**streamArn**: Required. The Kinesis stream ARN to ingest data from."
                      ]
                    }
                  ]
                ]
              }
            ],
            "**kmsKeyName**: Optional. The resource name of the Cloud KMS CryptoKey to be used to protect access to messages published on this topic. The expected format is `projects/*/locations/*/keyRings/*/cryptoKeys/*`.",
            "**labels**: Optional. See [Creating and managing labels] (https://cloud.google.com/pubsub/docs/labels).",
            "**messageRetentionDuration**: Optional. Indicates the minimum duration to retain a message after it is published to the topic. If this field is set, messages published to the topic in the last `message_retention_duration` are always available to subscribers. For instance, it allows any attached subscription to [seek to a timestamp](https://cloud.google.com/pubsub/docs/replay-overview#seek_to_a_time) that is up to `message_retention_duration` in the past. If this field is not set, message retention is controlled by settings on individual subscriptions. Cannot be more than 31 days or less than 10 minutes.",
            [
              "**messageStoragePolicy**: A policy constraining the storage of messages published to the topic.",
              {
                "$ul": [
                  "**allowedPersistenceRegions**: Optional. A list of IDs of Google Cloud regions where messages that are published to the topic may be persisted in storage. Messages published by publishers running in non-allowed Google Cloud regions (or running outside of Google Cloud altogether) are routed for storage in one of the allowed regions. An empty list means that no regions are allowed, and is not a valid configuration.",
                  "**enforceInTransit**: Optional. If true, `allowed_persistence_regions` is also used to enforce in-transit guarantees for messages. That is, Pub/Sub will fail Publish operations on this topic and subscribe operations on any subscription attached to this topic in any region that is not in `allowed_persistence_regions`."
                ]
              }
            ],
            "**name**: Required. The name of the topic. It must have the format `\"projects/{project}/topics/{topic}\"`. `{topic}` must start with a letter, and contain only letters (`[A-Za-z]`), numbers (`[0-9]`), dashes (`-`), underscores (`_`), periods (`.`), tildes (`~`), plus (`+`) or percent signs (`%`). It must be between 3 and 255 characters in length, and it must not start with `\"goog\"`.",
            "**satisfiesPzs**: Optional. Reserved for future use. This field is set only in responses from the server; it is ignored if it is set in any requests.",
            [
              "**schemaSettings**: Settings for validating messages published against a schema.",
              {
                "$ul": [
                  "**encoding**: Optional. The encoding of messages validated against `schema`.",
                  "**firstRevisionId**: Optional. The minimum (inclusive) revision allowed for validating messages. If empty or not present, allow any revision to be validated against last_revision or any revision created before.",
                  "**lastRevisionId**: Optional. The maximum (inclusive) revision allowed for validating messages. If empty or not present, allow any revision to be validated against first_revision or any revision created after.",
                  "**schema**: Required. The name of the schema that messages published should be validated against. Format is `projects/{project}/schemas/{schema}`. The value of this field will be `_deleted-schema_` if the schema has been deleted."
                ]
              }
            ],
            "**state**: Output only. An output-only field indicating the state of the topic."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
