{
  "name": "networkmanagement_projects_locations_global_connectivityTests_create",
  "description": "Creates a new Connectivity Test. After you create a test, the reachability analysis is performed as part of the long running operation, which completes when the analysis completes. If the endpoint specifications in `ConnectivityTest` are invalid (for example, containing non-existent resources in the network, or you don't have read permissions to the network configurations of listed projects), then the reachability result returns a value of `UNKNOWN`. If the endpoint specifications in `ConnectivityTest` are incomplete, the reachability result returns a value of AMBIGUOUS. For more information, see the Connectivity Test documentation.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The parent resource of the Connectivity Test to create: `projects/{project_id}/locations/global`"
      },
      "testId": {
        "type": "string",
        "description": "Required. The logical name of the Connectivity Test in your project with the following restrictions: * Must contain only lowercase letters, numbers, and hyphens. * Must start with a letter. * Must be between 1-40 characters. * Must end with a number or a letter. * Must be unique within the customer project"
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/ConnectivityTest"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "ConnectivityTest": {
        "description": "A Connectivity Test for a network reachability analysis.",
        "properties": {
          "createTime": {
            "description": "Output only. The time the test was created.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "description": {
            "description": "The user-supplied description of the Connectivity Test. Maximum of 512 characters.",
            "type": "string"
          },
          "destination": {
            "$ref": "#/$defs/Endpoint"
          },
          "displayName": {
            "description": "Output only. The display name of a Connectivity Test.",
            "readOnly": true,
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Resource labels to represent user-provided metadata.",
            "type": "object"
          },
          "name": {
            "description": "Required. Unique name of the resource using the form: `projects/{project_id}/locations/global/connectivityTests/{test_id}`",
            "type": "string"
          },
          "probingDetails": {
            "$ref": "#/$defs/ProbingDetails"
          },
          "protocol": {
            "description": "IP Protocol of the test. When not provided, \"TCP\" is assumed.",
            "type": "string"
          },
          "reachabilityDetails": {
            "$ref": "#/$defs/ReachabilityDetails"
          },
          "relatedProjects": {
            "description": "Other projects that may be relevant for reachability analysis. This is applicable to scenarios where a test can cross project boundaries.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "source": {
            "$ref": "#/$defs/Endpoint"
          },
          "updateTime": {
            "description": "Output only. The time the test's configuration was updated.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "Endpoint": {
        "description": "Source or destination of the Connectivity Test.",
        "properties": {
          "appEngineVersion": {
            "$ref": "#/$defs/AppEngineVersionEndpoint"
          },
          "cloudFunction": {
            "$ref": "#/$defs/CloudFunctionEndpoint"
          },
          "cloudRunRevision": {
            "$ref": "#/$defs/CloudRunRevisionEndpoint"
          },
          "cloudSqlInstance": {
            "description": "A [Cloud SQL](https://cloud.google.com/sql) instance URI.",
            "type": "string"
          },
          "forwardingRule": {
            "description": "A forwarding rule and its corresponding IP address represent the frontend configuration of a Google Cloud load balancer. Forwarding rules are also used for protocol forwarding, Private Service Connect and other network services to provide forwarding information in the control plane. Format: projects/{project}/global/forwardingRules/{id} or projects/{project}/regions/{region}/forwardingRules/{id}",
            "type": "string"
          },
          "forwardingRuleTarget": {
            "description": "Output only. Specifies the type of the target of the forwarding rule.",
            "enum": [
              "FORWARDING_RULE_TARGET_UNSPECIFIED",
              "INSTANCE",
              "LOAD_BALANCER",
              "VPN_GATEWAY",
              "PSC"
            ],
            "readOnly": true,
            "type": "string"
          },
          "gkeMasterCluster": {
            "description": "A cluster URI for [Google Kubernetes Engine master](https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-architecture).",
            "type": "string"
          },
          "instance": {
            "description": "A Compute Engine instance URI.",
            "type": "string"
          },
          "ipAddress": {
            "description": "The IP address of the endpoint, which can be an external or internal IP.",
            "type": "string"
          },
          "loadBalancerId": {
            "description": "Output only. ID of the load balancer the forwarding rule points to. Empty for forwarding rules not related to load balancers.",
            "readOnly": true,
            "type": "string"
          },
          "loadBalancerType": {
            "description": "Output only. Type of the load balancer the forwarding rule points to.",
            "enum": [
              "LOAD_BALANCER_TYPE_UNSPECIFIED",
              "HTTPS_ADVANCED_LOAD_BALANCER",
              "HTTPS_LOAD_BALANCER",
              "REGIONAL_HTTPS_LOAD_BALANCER",
              "INTERNAL_HTTPS_LOAD_BALANCER",
              "SSL_PROXY_LOAD_BALANCER",
              "TCP_PROXY_LOAD_BALANCER",
              "INTERNAL_TCP_PROXY_LOAD_BALANCER",
              "NETWORK_LOAD_BALANCER",
              "LEGACY_NETWORK_LOAD_BALANCER",
              "TCP_UDP_INTERNAL_LOAD_BALANCER"
            ],
            "readOnly": true,
            "type": "string"
          },
          "network": {
            "description": "A Compute Engine network URI.",
            "type": "string"
          },
          "networkType": {
            "description": "Type of the network where the endpoint is located. Applicable only to source endpoint, as destination network type can be inferred from the source.",
            "enum": [
              "NETWORK_TYPE_UNSPECIFIED",
              "GCP_NETWORK",
              "NON_GCP_NETWORK"
            ],
            "type": "string"
          },
          "port": {
            "description": "The IP protocol port of the endpoint. Only applicable when protocol is TCP or UDP.",
            "format": "int32",
            "type": "integer"
          },
          "projectId": {
            "description": "Project ID where the endpoint is located. The Project ID can be derived from the URI if you provide a VM instance or network URI. The following are two cases where you must provide the project ID: 1. Only the IP address is specified, and the IP address is within a Google Cloud project. 2. When you are using Shared VPC and the IP address that you provide is from the service project. In this case, the network that the IP address resides in is defined in the host project.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AppEngineVersionEndpoint": {
        "description": "Wrapper for the App Engine service version attributes.",
        "properties": {
          "uri": {
            "description": "An [App Engine](https://cloud.google.com/appengine) [service version](https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions) name.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CloudFunctionEndpoint": {
        "description": "Wrapper for Cloud Function attributes.",
        "properties": {
          "uri": {
            "description": "A [Cloud Function](https://cloud.google.com/functions) name.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CloudRunRevisionEndpoint": {
        "description": "Wrapper for Cloud Run revision attributes.",
        "properties": {
          "uri": {
            "description": "A [Cloud Run](https://cloud.google.com/run) [revision](https://cloud.google.com/run/docs/reference/rest/v1/namespaces.revisions/get) URI. The format is: projects/{project}/locations/{location}/revisions/{revision}",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProbingDetails": {
        "description": "Results of active probing from the last run of the test.",
        "properties": {
          "abortCause": {
            "description": "The reason probing was aborted.",
            "enum": [
              "PROBING_ABORT_CAUSE_UNSPECIFIED",
              "PERMISSION_DENIED",
              "NO_SOURCE_LOCATION"
            ],
            "type": "string"
          },
          "destinationEgressLocation": {
            "$ref": "#/$defs/EdgeLocation"
          },
          "endpointInfo": {
            "$ref": "#/$defs/EndpointInfo"
          },
          "error": {
            "$ref": "#/$defs/Status"
          },
          "probingLatency": {
            "$ref": "#/$defs/LatencyDistribution"
          },
          "result": {
            "description": "The overall result of active probing.",
            "enum": [
              "PROBING_RESULT_UNSPECIFIED",
              "REACHABLE",
              "UNREACHABLE",
              "REACHABILITY_INCONSISTENT",
              "UNDETERMINED"
            ],
            "type": "string"
          },
          "sentProbeCount": {
            "description": "Number of probes sent.",
            "format": "int32",
            "type": "integer"
          },
          "successfulProbeCount": {
            "description": "Number of probes that reached the destination.",
            "format": "int32",
            "type": "integer"
          },
          "verifyTime": {
            "description": "The time that reachability was assessed through active probing.",
            "format": "google-datetime",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EdgeLocation": {
        "description": "Representation of a network edge location as per https://cloud.google.com/vpc/docs/edge-locations.",
        "properties": {
          "metropolitanArea": {
            "description": "Name of the metropolitan area.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EndpointInfo": {
        "description": "For display only. The specification of the endpoints for the test. EndpointInfo is derived from source and destination Endpoint and validated by the backend data plane model.",
        "properties": {
          "destinationIp": {
            "description": "Destination IP address.",
            "type": "string"
          },
          "destinationNetworkUri": {
            "description": "URI of the network where this packet is sent to.",
            "type": "string"
          },
          "destinationPort": {
            "description": "Destination port. Only valid when protocol is TCP or UDP.",
            "format": "int32",
            "type": "integer"
          },
          "protocol": {
            "description": "IP protocol in string format, for example: \"TCP\", \"UDP\", \"ICMP\".",
            "type": "string"
          },
          "sourceAgentUri": {
            "description": "URI of the source telemetry agent this packet originates from.",
            "type": "string"
          },
          "sourceIp": {
            "description": "Source IP address.",
            "type": "string"
          },
          "sourceNetworkUri": {
            "description": "URI of the network where this packet originates from.",
            "type": "string"
          },
          "sourcePort": {
            "description": "Source port. Only valid when protocol is TCP or UDP.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Status": {
        "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
        "properties": {
          "code": {
            "description": "The status code, which should be an enum value of google.rpc.Code.",
            "format": "int32",
            "type": "integer"
          },
          "details": {
            "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
            "items": {
              "additionalProperties": {
                "description": "Properties of the object. Contains field @type with type URL."
              },
              "type": "object"
            },
            "type": "array"
          },
          "message": {
            "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "LatencyDistribution": {
        "description": "Describes measured latency distribution.",
        "properties": {
          "latencyPercentiles": {
            "description": "Representative latency percentiles.",
            "items": {
              "$ref": "#/$defs/LatencyPercentile"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "LatencyPercentile": {
        "description": "Latency percentile rank and value.",
        "properties": {
          "latencyMicros": {
            "description": "percent-th percentile of latency observed, in microseconds. Fraction of percent/100 of samples have latency lower or equal to the value of this field.",
            "format": "int64",
            "type": "string"
          },
          "percent": {
            "description": "Percentage of samples this data point applies to.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ReachabilityDetails": {
        "description": "Results of the configuration analysis from the last run of the test.",
        "properties": {
          "error": {
            "$ref": "#/$defs/Status"
          },
          "result": {
            "description": "The overall result of the test's configuration analysis.",
            "enum": [
              "RESULT_UNSPECIFIED",
              "REACHABLE",
              "UNREACHABLE",
              "AMBIGUOUS",
              "UNDETERMINED"
            ],
            "type": "string"
          },
          "traces": {
            "description": "Result may contain a list of traces if a test has multiple possible paths in the network, such as when destination endpoint is a load balancer with multiple backends.",
            "items": {
              "$ref": "#/$defs/Trace"
            },
            "type": "array"
          },
          "verifyTime": {
            "description": "The time of the configuration analysis.",
            "format": "google-datetime",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Trace": {
        "description": "Trace represents one simulated packet forwarding path. * Each trace contains multiple ordered steps. * Each step is in a particular state with associated configuration. * State is categorized as final or non-final states. * Each final state has a reason associated. * Each trace must end with a final state (the last step). ``` |---------------------Trace----------------------| Step1(State) Step2(State) --- StepN(State(final)) ```",
        "properties": {
          "endpointInfo": {
            "$ref": "#/$defs/EndpointInfo"
          },
          "forwardTraceId": {
            "description": "ID of trace. For forward traces, this ID is unique for each trace. For return traces, it matches ID of associated forward trace. A single forward trace can be associated with none, one or more than one return trace.",
            "format": "int32",
            "type": "integer"
          },
          "steps": {
            "description": "A trace of a test contains multiple steps from the initial state to the final state (delivered, dropped, forwarded, or aborted). The steps are ordered by the processing sequence within the simulated network state machine. It is critical to preserve the order of the steps and avoid reordering or sorting them.",
            "items": {
              "$ref": "#/$defs/Step"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Step": {
        "description": "A simulated forwarding path is composed of multiple steps. Each step has a well-defined state and an associated configuration.",
        "properties": {
          "abort": {
            "$ref": "#/$defs/AbortInfo"
          },
          "appEngineVersion": {
            "$ref": "#/$defs/AppEngineVersionInfo"
          },
          "causesDrop": {
            "description": "This is a step that leads to the final state Drop.",
            "type": "boolean"
          },
          "cloudFunction": {
            "$ref": "#/$defs/CloudFunctionInfo"
          },
          "cloudRunRevision": {
            "$ref": "#/$defs/CloudRunRevisionInfo"
          },
          "cloudSqlInstance": {
            "$ref": "#/$defs/CloudSQLInstanceInfo"
          },
          "deliver": {
            "$ref": "#/$defs/DeliverInfo"
          },
          "description": {
            "description": "A description of the step. Usually this is a summary of the state.",
            "type": "string"
          },
          "drop": {
            "$ref": "#/$defs/DropInfo"
          },
          "endpoint": {
            "$ref": "#/$defs/EndpointInfo"
          },
          "firewall": {
            "$ref": "#/$defs/FirewallInfo"
          },
          "forward": {
            "$ref": "#/$defs/ForwardInfo"
          },
          "forwardingRule": {
            "$ref": "#/$defs/ForwardingRuleInfo"
          },
          "gkeMaster": {
            "$ref": "#/$defs/GKEMasterInfo"
          },
          "googleService": {
            "$ref": "#/$defs/GoogleServiceInfo"
          },
          "instance": {
            "$ref": "#/$defs/InstanceInfo"
          },
          "loadBalancer": {
            "$ref": "#/$defs/LoadBalancerInfo"
          },
          "loadBalancerBackendInfo": {
            "$ref": "#/$defs/LoadBalancerBackendInfo"
          },
          "nat": {
            "$ref": "#/$defs/NatInfo"
          },
          "network": {
            "$ref": "#/$defs/NetworkInfo"
          },
          "projectId": {
            "description": "Project ID that contains the configuration this step is validating.",
            "type": "string"
          },
          "proxyConnection": {
            "$ref": "#/$defs/ProxyConnectionInfo"
          },
          "route": {
            "$ref": "#/$defs/RouteInfo"
          },
          "state": {
            "description": "Each step is in one of the pre-defined states.",
            "enum": [
              "STATE_UNSPECIFIED",
              "START_FROM_INSTANCE",
              "START_FROM_INTERNET",
              "START_FROM_GOOGLE_SERVICE",
              "START_FROM_PRIVATE_NETWORK",
              "START_FROM_GKE_MASTER",
              "START_FROM_CLOUD_SQL_INSTANCE",
              "START_FROM_CLOUD_FUNCTION",
              "START_FROM_APP_ENGINE_VERSION",
              "START_FROM_CLOUD_RUN_REVISION",
              "START_FROM_STORAGE_BUCKET",
              "START_FROM_PSC_PUBLISHED_SERVICE",
              "APPLY_INGRESS_FIREWALL_RULE",
              "APPLY_EGRESS_FIREWALL_RULE",
              "APPLY_ROUTE",
              "APPLY_FORWARDING_RULE",
              "ANALYZE_LOAD_BALANCER_BACKEND",
              "SPOOFING_APPROVED",
              "ARRIVE_AT_INSTANCE",
              "ARRIVE_AT_INTERNAL_LOAD_BALANCER",
              "ARRIVE_AT_EXTERNAL_LOAD_BALANCER",
              "ARRIVE_AT_VPN_GATEWAY",
              "ARRIVE_AT_VPN_TUNNEL",
              "ARRIVE_AT_VPC_CONNECTOR",
              "NAT",
              "PROXY_CONNECTION",
              "DELIVER",
              "DROP",
              "FORWARD",
              "ABORT",
              "VIEWER_PERMISSION_MISSING"
            ],
            "type": "string",
            "x-enumDeprecated": [
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              true,
              true,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false
            ]
          },
          "storageBucket": {
            "$ref": "#/$defs/StorageBucketInfo"
          },
          "vpcConnector": {
            "$ref": "#/$defs/VpcConnectorInfo"
          },
          "vpnGateway": {
            "$ref": "#/$defs/VpnGatewayInfo"
          },
          "vpnTunnel": {
            "$ref": "#/$defs/VpnTunnelInfo"
          }
        },
        "type": "object"
      },
      "AbortInfo": {
        "description": "Details of the final state \"abort\" and associated resource.",
        "properties": {
          "cause": {
            "description": "Causes that the analysis is aborted.",
            "enum": [
              "CAUSE_UNSPECIFIED",
              "UNKNOWN_NETWORK",
              "UNKNOWN_PROJECT",
              "NO_EXTERNAL_IP",
              "UNINTENDED_DESTINATION",
              "SOURCE_ENDPOINT_NOT_FOUND",
              "MISMATCHED_SOURCE_NETWORK",
              "DESTINATION_ENDPOINT_NOT_FOUND",
              "MISMATCHED_DESTINATION_NETWORK",
              "UNKNOWN_IP",
              "SOURCE_IP_ADDRESS_NOT_IN_SOURCE_NETWORK",
              "PERMISSION_DENIED",
              "PERMISSION_DENIED_NO_CLOUD_NAT_CONFIGS",
              "PERMISSION_DENIED_NO_NEG_ENDPOINT_CONFIGS",
              "NO_SOURCE_LOCATION",
              "INVALID_ARGUMENT",
              "TRACE_TOO_LONG",
              "INTERNAL_ERROR",
              "UNSUPPORTED",
              "MISMATCHED_IP_VERSION",
              "GKE_KONNECTIVITY_PROXY_UNSUPPORTED",
              "RESOURCE_CONFIG_NOT_FOUND",
              "VM_INSTANCE_CONFIG_NOT_FOUND",
              "NETWORK_CONFIG_NOT_FOUND",
              "FIREWALL_CONFIG_NOT_FOUND",
              "ROUTE_CONFIG_NOT_FOUND",
              "GOOGLE_MANAGED_SERVICE_AMBIGUOUS_PSC_ENDPOINT",
              "SOURCE_PSC_CLOUD_SQL_UNSUPPORTED",
              "SOURCE_FORWARDING_RULE_UNSUPPORTED",
              "NON_ROUTABLE_IP_ADDRESS"
            ],
            "type": "string",
            "x-enumDeprecated": [
              false,
              true,
              true,
              true,
              true,
              true,
              true,
              true,
              true,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false
            ]
          },
          "ipAddress": {
            "description": "IP address that caused the abort.",
            "type": "string"
          },
          "projectsMissingPermission": {
            "description": "List of project IDs the user specified in the request but lacks access to. In this case, analysis is aborted with the PERMISSION_DENIED cause.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "resourceUri": {
            "description": "URI of the resource that caused the abort.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AppEngineVersionInfo": {
        "description": "For display only. Metadata associated with an App Engine version.",
        "properties": {
          "displayName": {
            "description": "Name of an App Engine version.",
            "type": "string"
          },
          "environment": {
            "description": "App Engine execution environment for a version.",
            "type": "string"
          },
          "runtime": {
            "description": "Runtime of the App Engine version.",
            "type": "string"
          },
          "uri": {
            "description": "URI of an App Engine version.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CloudFunctionInfo": {
        "description": "For display only. Metadata associated with a Cloud Function.",
        "properties": {
          "displayName": {
            "description": "Name of a Cloud Function.",
            "type": "string"
          },
          "location": {
            "description": "Location in which the Cloud Function is deployed.",
            "type": "string"
          },
          "uri": {
            "description": "URI of a Cloud Function.",
            "type": "string"
          },
          "versionId": {
            "description": "Latest successfully deployed version id of the Cloud Function.",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CloudRunRevisionInfo": {
        "description": "For display only. Metadata associated with a Cloud Run revision.",
        "properties": {
          "displayName": {
            "description": "Name of a Cloud Run revision.",
            "type": "string"
          },
          "location": {
            "description": "Location in which this revision is deployed.",
            "type": "string"
          },
          "serviceUri": {
            "description": "URI of Cloud Run service this revision belongs to.",
            "type": "string"
          },
          "uri": {
            "description": "URI of a Cloud Run revision.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CloudSQLInstanceInfo": {
        "description": "For display only. Metadata associated with a Cloud SQL instance.",
        "properties": {
          "displayName": {
            "description": "Name of a Cloud SQL instance.",
            "type": "string"
          },
          "externalIp": {
            "description": "External IP address of a Cloud SQL instance.",
            "type": "string"
          },
          "internalIp": {
            "description": "Internal IP address of a Cloud SQL instance.",
            "type": "string"
          },
          "networkUri": {
            "description": "URI of a Cloud SQL instance network or empty string if the instance does not have one.",
            "type": "string"
          },
          "region": {
            "description": "Region in which the Cloud SQL instance is running.",
            "type": "string"
          },
          "uri": {
            "description": "URI of a Cloud SQL instance.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeliverInfo": {
        "description": "Details of the final state \"deliver\" and associated resource.",
        "properties": {
          "ipAddress": {
            "description": "IP address of the target (if applicable).",
            "type": "string"
          },
          "resourceUri": {
            "description": "URI of the resource that the packet is delivered to.",
            "type": "string"
          },
          "target": {
            "description": "Target type where the packet is delivered to.",
            "enum": [
              "TARGET_UNSPECIFIED",
              "INSTANCE",
              "INTERNET",
              "GOOGLE_API",
              "GKE_MASTER",
              "CLOUD_SQL_INSTANCE",
              "PSC_PUBLISHED_SERVICE",
              "PSC_GOOGLE_API",
              "PSC_VPC_SC",
              "SERVERLESS_NEG",
              "STORAGE_BUCKET",
              "PRIVATE_NETWORK",
              "CLOUD_FUNCTION",
              "APP_ENGINE_VERSION",
              "CLOUD_RUN_REVISION"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "DropInfo": {
        "description": "Details of the final state \"drop\" and associated resource.",
        "properties": {
          "cause": {
            "description": "Cause that the packet is dropped.",
            "enum": [
              "CAUSE_UNSPECIFIED",
              "UNKNOWN_EXTERNAL_ADDRESS",
              "FOREIGN_IP_DISALLOWED",
              "FIREWALL_RULE",
              "NO_ROUTE",
              "ROUTE_BLACKHOLE",
              "ROUTE_WRONG_NETWORK",
              "ROUTE_NEXT_HOP_IP_ADDRESS_NOT_RESOLVED",
              "ROUTE_NEXT_HOP_RESOURCE_NOT_FOUND",
              "ROUTE_NEXT_HOP_INSTANCE_WRONG_NETWORK",
              "ROUTE_NEXT_HOP_INSTANCE_NON_PRIMARY_IP",
              "ROUTE_NEXT_HOP_FORWARDING_RULE_IP_MISMATCH",
              "ROUTE_NEXT_HOP_VPN_TUNNEL_NOT_ESTABLISHED",
              "ROUTE_NEXT_HOP_FORWARDING_RULE_TYPE_INVALID",
              "NO_ROUTE_FROM_INTERNET_TO_PRIVATE_IPV6_ADDRESS",
              "VPN_TUNNEL_LOCAL_SELECTOR_MISMATCH",
              "VPN_TUNNEL_REMOTE_SELECTOR_MISMATCH",
              "PRIVATE_TRAFFIC_TO_INTERNET",
              "PRIVATE_GOOGLE_ACCESS_DISALLOWED",
              "PRIVATE_GOOGLE_ACCESS_VIA_VPN_TUNNEL_UNSUPPORTED",
              "NO_EXTERNAL_ADDRESS",
              "UNKNOWN_INTERNAL_ADDRESS",
              "FORWARDING_RULE_MISMATCH",
              "FORWARDING_RULE_NO_INSTANCES",
              "FIREWALL_BLOCKING_LOAD_BALANCER_BACKEND_HEALTH_CHECK",
              "INSTANCE_NOT_RUNNING",
              "GKE_CLUSTER_NOT_RUNNING",
              "CLOUD_SQL_INSTANCE_NOT_RUNNING",
              "TRAFFIC_TYPE_BLOCKED",
              "GKE_MASTER_UNAUTHORIZED_ACCESS",
              "CLOUD_SQL_INSTANCE_UNAUTHORIZED_ACCESS",
              "DROPPED_INSIDE_GKE_SERVICE",
              "DROPPED_INSIDE_CLOUD_SQL_SERVICE",
              "GOOGLE_MANAGED_SERVICE_NO_PEERING",
              "GOOGLE_MANAGED_SERVICE_NO_PSC_ENDPOINT",
              "GKE_PSC_ENDPOINT_MISSING",
              "CLOUD_SQL_INSTANCE_NO_IP_ADDRESS",
              "GKE_CONTROL_PLANE_REGION_MISMATCH",
              "PUBLIC_GKE_CONTROL_PLANE_TO_PRIVATE_DESTINATION",
              "GKE_CONTROL_PLANE_NO_ROUTE",
              "CLOUD_SQL_INSTANCE_NOT_CONFIGURED_FOR_EXTERNAL_TRAFFIC",
              "PUBLIC_CLOUD_SQL_INSTANCE_TO_PRIVATE_DESTINATION",
              "CLOUD_SQL_INSTANCE_NO_ROUTE",
              "CLOUD_FUNCTION_NOT_ACTIVE",
              "VPC_CONNECTOR_NOT_SET",
              "VPC_CONNECTOR_NOT_RUNNING",
              "FORWARDING_RULE_REGION_MISMATCH",
              "PSC_CONNECTION_NOT_ACCEPTED",
              "PSC_ENDPOINT_ACCESSED_FROM_PEERED_NETWORK",
              "PSC_NEG_PRODUCER_ENDPOINT_NO_GLOBAL_ACCESS",
              "PSC_NEG_PRODUCER_FORWARDING_RULE_MULTIPLE_PORTS",
              "NO_NAT_SUBNETS_FOR_PSC_SERVICE_ATTACHMENT",
              "HYBRID_NEG_NON_DYNAMIC_ROUTE_MATCHED",
              "HYBRID_NEG_NON_LOCAL_DYNAMIC_ROUTE_MATCHED",
              "CLOUD_RUN_REVISION_NOT_READY",
              "DROPPED_INSIDE_PSC_SERVICE_PRODUCER",
              "LOAD_BALANCER_HAS_NO_PROXY_SUBNET",
              "CLOUD_NAT_NO_ADDRESSES"
            ],
            "type": "string"
          },
          "destinationIp": {
            "description": "Destination IP address of the dropped packet (if relevant).",
            "type": "string"
          },
          "region": {
            "description": "Region of the dropped packet (if relevant).",
            "type": "string"
          },
          "resourceUri": {
            "description": "URI of the resource that caused the drop.",
            "type": "string"
          },
          "sourceIp": {
            "description": "Source IP address of the dropped packet (if relevant).",
            "type": "string"
          }
        },
        "type": "object"
      },
      "FirewallInfo": {
        "description": "For display only. Metadata associated with a VPC firewall rule, an implied VPC firewall rule, or a hierarchical firewall policy rule.",
        "properties": {
          "action": {
            "description": "Possible values: ALLOW, DENY, APPLY_SECURITY_PROFILE_GROUP",
            "type": "string"
          },
          "direction": {
            "description": "Possible values: INGRESS, EGRESS",
            "type": "string"
          },
          "displayName": {
            "description": "The display name of the VPC firewall rule. This field is not applicable to hierarchical firewall policy rules.",
            "type": "string"
          },
          "firewallRuleType": {
            "description": "The firewall rule's type.",
            "enum": [
              "FIREWALL_RULE_TYPE_UNSPECIFIED",
              "HIERARCHICAL_FIREWALL_POLICY_RULE",
              "VPC_FIREWALL_RULE",
              "IMPLIED_VPC_FIREWALL_RULE",
              "SERVERLESS_VPC_ACCESS_MANAGED_FIREWALL_RULE",
              "NETWORK_FIREWALL_POLICY_RULE",
              "NETWORK_REGIONAL_FIREWALL_POLICY_RULE",
              "UNSUPPORTED_FIREWALL_POLICY_RULE",
              "TRACKING_STATE"
            ],
            "type": "string"
          },
          "networkUri": {
            "description": "The URI of the VPC network that the firewall rule is associated with. This field is not applicable to hierarchical firewall policy rules.",
            "type": "string"
          },
          "policy": {
            "description": "The hierarchical firewall policy that this rule is associated with. This field is not applicable to VPC firewall rules.",
            "type": "string"
          },
          "priority": {
            "description": "The priority of the firewall rule.",
            "format": "int32",
            "type": "integer"
          },
          "targetServiceAccounts": {
            "description": "The target service accounts specified by the firewall rule.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "targetTags": {
            "description": "The target tags defined by the VPC firewall rule. This field is not applicable to hierarchical firewall policy rules.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "uri": {
            "description": "The URI of the VPC firewall rule. This field is not applicable to implied firewall rules or hierarchical firewall policy rules.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ForwardInfo": {
        "description": "Details of the final state \"forward\" and associated resource.",
        "properties": {
          "ipAddress": {
            "description": "IP address of the target (if applicable).",
            "type": "string"
          },
          "resourceUri": {
            "description": "URI of the resource that the packet is forwarded to.",
            "type": "string"
          },
          "target": {
            "description": "Target type where this packet is forwarded to.",
            "enum": [
              "TARGET_UNSPECIFIED",
              "PEERING_VPC",
              "VPN_GATEWAY",
              "INTERCONNECT",
              "GKE_MASTER",
              "IMPORTED_CUSTOM_ROUTE_NEXT_HOP",
              "CLOUD_SQL_INSTANCE",
              "ANOTHER_PROJECT",
              "NCC_HUB",
              "ROUTER_APPLIANCE"
            ],
            "type": "string",
            "x-enumDeprecated": [
              false,
              false,
              false,
              false,
              true,
              false,
              true,
              false,
              false,
              false
            ]
          }
        },
        "type": "object"
      },
      "ForwardingRuleInfo": {
        "description": "For display only. Metadata associated with a Compute Engine forwarding rule.",
        "properties": {
          "displayName": {
            "description": "Name of a Compute Engine forwarding rule.",
            "type": "string"
          },
          "matchedPortRange": {
            "description": "Port range defined in the forwarding rule that matches the test.",
            "type": "string"
          },
          "matchedProtocol": {
            "description": "Protocol defined in the forwarding rule that matches the test.",
            "type": "string"
          },
          "networkUri": {
            "description": "Network URI. Only valid for Internal Load Balancer.",
            "type": "string"
          },
          "target": {
            "description": "Target type of the forwarding rule.",
            "type": "string"
          },
          "uri": {
            "description": "URI of a Compute Engine forwarding rule.",
            "type": "string"
          },
          "vip": {
            "description": "VIP of the forwarding rule.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GKEMasterInfo": {
        "description": "For display only. Metadata associated with a Google Kubernetes Engine (GKE) cluster master.",
        "properties": {
          "clusterNetworkUri": {
            "description": "URI of a GKE cluster network.",
            "type": "string"
          },
          "clusterUri": {
            "description": "URI of a GKE cluster.",
            "type": "string"
          },
          "externalIp": {
            "description": "External IP address of a GKE cluster master.",
            "type": "string"
          },
          "internalIp": {
            "description": "Internal IP address of a GKE cluster master.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoogleServiceInfo": {
        "description": "For display only. Details of a Google Service sending packets to a VPC network. Although the source IP might be a publicly routable address, some Google Services use special routes within Google production infrastructure to reach Compute Engine Instances. https://cloud.google.com/vpc/docs/routes#special_return_paths",
        "properties": {
          "googleServiceType": {
            "description": "Recognized type of a Google Service.",
            "enum": [
              "GOOGLE_SERVICE_TYPE_UNSPECIFIED",
              "IAP",
              "GFE_PROXY_OR_HEALTH_CHECK_PROBER",
              "CLOUD_DNS",
              "GOOGLE_API",
              "GOOGLE_API_PSC",
              "GOOGLE_API_VPC_SC"
            ],
            "type": "string"
          },
          "sourceIp": {
            "description": "Source IP address.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "InstanceInfo": {
        "description": "For display only. Metadata associated with a Compute Engine instance.",
        "properties": {
          "displayName": {
            "description": "Name of a Compute Engine instance.",
            "type": "string"
          },
          "externalIp": {
            "description": "External IP address of the network interface.",
            "type": "string"
          },
          "interface": {
            "description": "Name of the network interface of a Compute Engine instance.",
            "type": "string"
          },
          "internalIp": {
            "description": "Internal IP address of the network interface.",
            "type": "string"
          },
          "networkTags": {
            "description": "Network tags configured on the instance.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "networkUri": {
            "description": "URI of a Compute Engine network.",
            "type": "string"
          },
          "serviceAccount": {
            "deprecated": true,
            "description": "Service account authorized for the instance.",
            "type": "string"
          },
          "uri": {
            "description": "URI of a Compute Engine instance.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "LoadBalancerInfo": {
        "description": "For display only. Metadata associated with a load balancer.",
        "properties": {
          "backendType": {
            "description": "Type of load balancer's backend configuration.",
            "enum": [
              "BACKEND_TYPE_UNSPECIFIED",
              "BACKEND_SERVICE",
              "TARGET_POOL",
              "TARGET_INSTANCE"
            ],
            "type": "string"
          },
          "backendUri": {
            "description": "Backend configuration URI.",
            "type": "string"
          },
          "backends": {
            "description": "Information for the loadbalancer backends.",
            "items": {
              "$ref": "#/$defs/LoadBalancerBackend"
            },
            "type": "array"
          },
          "healthCheckUri": {
            "deprecated": true,
            "description": "URI of the health check for the load balancer. Deprecated and no longer populated as different load balancer backends might have different health checks.",
            "type": "string"
          },
          "loadBalancerType": {
            "description": "Type of the load balancer.",
            "enum": [
              "LOAD_BALANCER_TYPE_UNSPECIFIED",
              "INTERNAL_TCP_UDP",
              "NETWORK_TCP_UDP",
              "HTTP_PROXY",
              "TCP_PROXY",
              "SSL_PROXY"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "LoadBalancerBackend": {
        "description": "For display only. Metadata associated with a specific load balancer backend.",
        "properties": {
          "displayName": {
            "description": "Name of a Compute Engine instance or network endpoint.",
            "type": "string"
          },
          "healthCheckAllowingFirewallRules": {
            "description": "A list of firewall rule URIs allowing probes from health check IP ranges.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "healthCheckBlockingFirewallRules": {
            "description": "A list of firewall rule URIs blocking probes from health check IP ranges.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "healthCheckFirewallState": {
            "description": "State of the health check firewall configuration.",
            "enum": [
              "HEALTH_CHECK_FIREWALL_STATE_UNSPECIFIED",
              "CONFIGURED",
              "MISCONFIGURED"
            ],
            "type": "string"
          },
          "uri": {
            "description": "URI of a Compute Engine instance or network endpoint.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "LoadBalancerBackendInfo": {
        "description": "For display only. Metadata associated with the load balancer backend.",
        "properties": {
          "backendBucketUri": {
            "description": "URI of the backend bucket this backend targets (if applicable).",
            "type": "string"
          },
          "backendServiceUri": {
            "description": "URI of the backend service this backend belongs to (if applicable).",
            "type": "string"
          },
          "healthCheckFirewallsConfigState": {
            "description": "Output only. Health check firewalls configuration state for the backend. This is a result of the static firewall analysis (verifying that health check traffic from required IP ranges to the backend is allowed or not). The backend might still be unhealthy even if these firewalls are configured. Please refer to the documentation for more information: https://cloud.google.com/load-balancing/docs/firewall-rules",
            "enum": [
              "HEALTH_CHECK_FIREWALLS_CONFIG_STATE_UNSPECIFIED",
              "FIREWALLS_CONFIGURED",
              "FIREWALLS_PARTIALLY_CONFIGURED",
              "FIREWALLS_NOT_CONFIGURED",
              "FIREWALLS_UNSUPPORTED"
            ],
            "readOnly": true,
            "type": "string"
          },
          "healthCheckUri": {
            "description": "URI of the health check attached to this backend (if applicable).",
            "type": "string"
          },
          "instanceGroupUri": {
            "description": "URI of the instance group this backend belongs to (if applicable).",
            "type": "string"
          },
          "instanceUri": {
            "description": "URI of the backend instance (if applicable). Populated for instance group backends, and zonal NEG backends.",
            "type": "string"
          },
          "name": {
            "description": "Display name of the backend. For example, it might be an instance name for the instance group backends, or an IP address and port for zonal network endpoint group backends.",
            "type": "string"
          },
          "networkEndpointGroupUri": {
            "description": "URI of the network endpoint group this backend belongs to (if applicable).",
            "type": "string"
          },
          "pscGoogleApiTarget": {
            "description": "PSC Google API target this PSC NEG backend targets (if applicable).",
            "type": "string"
          },
          "pscServiceAttachmentUri": {
            "description": "URI of the PSC service attachment this PSC NEG backend targets (if applicable).",
            "type": "string"
          }
        },
        "type": "object"
      },
      "NatInfo": {
        "description": "For display only. Metadata associated with NAT.",
        "properties": {
          "natGatewayName": {
            "description": "The name of Cloud NAT Gateway. Only valid when type is CLOUD_NAT.",
            "type": "string"
          },
          "networkUri": {
            "description": "URI of the network where NAT translation takes place.",
            "type": "string"
          },
          "newDestinationIp": {
            "description": "Destination IP address after NAT translation.",
            "type": "string"
          },
          "newDestinationPort": {
            "description": "Destination port after NAT translation. Only valid when protocol is TCP or UDP.",
            "format": "int32",
            "type": "integer"
          },
          "newSourceIp": {
            "description": "Source IP address after NAT translation.",
            "type": "string"
          },
          "newSourcePort": {
            "description": "Source port after NAT translation. Only valid when protocol is TCP or UDP.",
            "format": "int32",
            "type": "integer"
          },
          "oldDestinationIp": {
            "description": "Destination IP address before NAT translation.",
            "type": "string"
          },
          "oldDestinationPort": {
            "description": "Destination port before NAT translation. Only valid when protocol is TCP or UDP.",
            "format": "int32",
            "type": "integer"
          },
          "oldSourceIp": {
            "description": "Source IP address before NAT translation.",
            "type": "string"
          },
          "oldSourcePort": {
            "description": "Source port before NAT translation. Only valid when protocol is TCP or UDP.",
            "format": "int32",
            "type": "integer"
          },
          "protocol": {
            "description": "IP protocol in string format, for example: \"TCP\", \"UDP\", \"ICMP\".",
            "type": "string"
          },
          "routerUri": {
            "description": "Uri of the Cloud Router. Only valid when type is CLOUD_NAT.",
            "type": "string"
          },
          "type": {
            "description": "Type of NAT.",
            "enum": [
              "TYPE_UNSPECIFIED",
              "INTERNAL_TO_EXTERNAL",
              "EXTERNAL_TO_INTERNAL",
              "CLOUD_NAT",
              "PRIVATE_SERVICE_CONNECT"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "NetworkInfo": {
        "description": "For display only. Metadata associated with a Compute Engine network.",
        "properties": {
          "displayName": {
            "description": "Name of a Compute Engine network.",
            "type": "string"
          },
          "matchedIpRange": {
            "description": "The IP range that matches the test.",
            "type": "string"
          },
          "uri": {
            "description": "URI of a Compute Engine network.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProxyConnectionInfo": {
        "description": "For display only. Metadata associated with ProxyConnection.",
        "properties": {
          "networkUri": {
            "description": "URI of the network where connection is proxied.",
            "type": "string"
          },
          "newDestinationIp": {
            "description": "Destination IP address of a new connection.",
            "type": "string"
          },
          "newDestinationPort": {
            "description": "Destination port of a new connection. Only valid when protocol is TCP or UDP.",
            "format": "int32",
            "type": "integer"
          },
          "newSourceIp": {
            "description": "Source IP address of a new connection.",
            "type": "string"
          },
          "newSourcePort": {
            "description": "Source port of a new connection. Only valid when protocol is TCP or UDP.",
            "format": "int32",
            "type": "integer"
          },
          "oldDestinationIp": {
            "description": "Destination IP address of an original connection",
            "type": "string"
          },
          "oldDestinationPort": {
            "description": "Destination port of an original connection. Only valid when protocol is TCP or UDP.",
            "format": "int32",
            "type": "integer"
          },
          "oldSourceIp": {
            "description": "Source IP address of an original connection.",
            "type": "string"
          },
          "oldSourcePort": {
            "description": "Source port of an original connection. Only valid when protocol is TCP or UDP.",
            "format": "int32",
            "type": "integer"
          },
          "protocol": {
            "description": "IP protocol in string format, for example: \"TCP\", \"UDP\", \"ICMP\".",
            "type": "string"
          },
          "subnetUri": {
            "description": "Uri of proxy subnet.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RouteInfo": {
        "description": "For display only. Metadata associated with a Compute Engine route.",
        "properties": {
          "destIpRange": {
            "description": "Destination IP range of the route.",
            "type": "string"
          },
          "destPortRanges": {
            "description": "Destination port ranges of the route. Policy based routes only.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "displayName": {
            "description": "Name of a route.",
            "type": "string"
          },
          "instanceTags": {
            "description": "Instance tags of the route.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "nccHubUri": {
            "description": "URI of a NCC Hub. NCC_HUB routes only.",
            "type": "string"
          },
          "nccSpokeUri": {
            "description": "URI of a NCC Spoke. NCC_HUB routes only.",
            "type": "string"
          },
          "networkUri": {
            "description": "URI of a Compute Engine network. NETWORK routes only.",
            "type": "string"
          },
          "nextHop": {
            "description": "Next hop of the route.",
            "type": "string"
          },
          "nextHopType": {
            "description": "Type of next hop.",
            "enum": [
              "NEXT_HOP_TYPE_UNSPECIFIED",
              "NEXT_HOP_IP",
              "NEXT_HOP_INSTANCE",
              "NEXT_HOP_NETWORK",
              "NEXT_HOP_PEERING",
              "NEXT_HOP_INTERCONNECT",
              "NEXT_HOP_VPN_TUNNEL",
              "NEXT_HOP_VPN_GATEWAY",
              "NEXT_HOP_INTERNET_GATEWAY",
              "NEXT_HOP_BLACKHOLE",
              "NEXT_HOP_ILB",
              "NEXT_HOP_ROUTER_APPLIANCE",
              "NEXT_HOP_NCC_HUB"
            ],
            "type": "string"
          },
          "priority": {
            "description": "Priority of the route.",
            "format": "int32",
            "type": "integer"
          },
          "protocols": {
            "description": "Protocols of the route. Policy based routes only.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "routeScope": {
            "description": "Indicates where route is applicable.",
            "enum": [
              "ROUTE_SCOPE_UNSPECIFIED",
              "NETWORK",
              "NCC_HUB"
            ],
            "type": "string"
          },
          "routeType": {
            "description": "Type of route.",
            "enum": [
              "ROUTE_TYPE_UNSPECIFIED",
              "SUBNET",
              "STATIC",
              "DYNAMIC",
              "PEERING_SUBNET",
              "PEERING_STATIC",
              "PEERING_DYNAMIC",
              "POLICY_BASED"
            ],
            "type": "string"
          },
          "srcIpRange": {
            "description": "Source IP address range of the route. Policy based routes only.",
            "type": "string"
          },
          "srcPortRanges": {
            "description": "Source port ranges of the route. Policy based routes only.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "uri": {
            "description": "URI of a route. Dynamic, peering static and peering dynamic routes do not have an URI. Advertised route from Google Cloud VPC to on-premises network also does not have an URI.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "StorageBucketInfo": {
        "description": "For display only. Metadata associated with Storage Bucket.",
        "properties": {
          "bucket": {
            "description": "Cloud Storage Bucket name.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "VpcConnectorInfo": {
        "description": "For display only. Metadata associated with a VPC connector.",
        "properties": {
          "displayName": {
            "description": "Name of a VPC connector.",
            "type": "string"
          },
          "location": {
            "description": "Location in which the VPC connector is deployed.",
            "type": "string"
          },
          "uri": {
            "description": "URI of a VPC connector.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "VpnGatewayInfo": {
        "description": "For display only. Metadata associated with a Compute Engine VPN gateway.",
        "properties": {
          "displayName": {
            "description": "Name of a VPN gateway.",
            "type": "string"
          },
          "ipAddress": {
            "description": "IP address of the VPN gateway.",
            "type": "string"
          },
          "networkUri": {
            "description": "URI of a Compute Engine network where the VPN gateway is configured.",
            "type": "string"
          },
          "region": {
            "description": "Name of a Google Cloud region where this VPN gateway is configured.",
            "type": "string"
          },
          "uri": {
            "description": "URI of a VPN gateway.",
            "type": "string"
          },
          "vpnTunnelUri": {
            "description": "A VPN tunnel that is associated with this VPN gateway. There may be multiple VPN tunnels configured on a VPN gateway, and only the one relevant to the test is displayed.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "VpnTunnelInfo": {
        "description": "For display only. Metadata associated with a Compute Engine VPN tunnel.",
        "properties": {
          "displayName": {
            "description": "Name of a VPN tunnel.",
            "type": "string"
          },
          "networkUri": {
            "description": "URI of a Compute Engine network where the VPN tunnel is configured.",
            "type": "string"
          },
          "region": {
            "description": "Name of a Google Cloud region where this VPN tunnel is configured.",
            "type": "string"
          },
          "remoteGateway": {
            "description": "URI of a VPN gateway at remote end of the tunnel.",
            "type": "string"
          },
          "remoteGatewayIp": {
            "description": "Remote VPN gateway's IP address.",
            "type": "string"
          },
          "routingType": {
            "description": "Type of the routing policy.",
            "enum": [
              "ROUTING_TYPE_UNSPECIFIED",
              "ROUTE_BASED",
              "POLICY_BASED",
              "DYNAMIC"
            ],
            "type": "string"
          },
          "sourceGateway": {
            "description": "URI of the VPN gateway at local end of the tunnel.",
            "type": "string"
          },
          "sourceGatewayIp": {
            "description": "Local VPN gateway's IP address.",
            "type": "string"
          },
          "uri": {
            "description": "URI of a VPN tunnel.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://networkmanagement.googleapis.com//v1/{parent}/connectivityTests{?testId,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "This resource represents a long-running operation that is the result of a network API call.",
        "**Key properties:**",
        {
          "$ul": [
            "**done**: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
            [
              "**error**: The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
              {
                "$ul": [
                  "**code**: The status code, which should be an enum value of google.rpc.Code.",
                  "**details**: A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                  "**message**: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                ]
              }
            ],
            "**metadata**: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
            "**name**: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
            "**response**: The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
