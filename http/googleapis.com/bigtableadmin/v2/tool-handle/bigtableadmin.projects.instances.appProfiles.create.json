{
  "name": "bigtableadmin_projects_instances_appProfiles_create",
  "description": "Creates an app profile within an instance.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The unique name of the instance in which to create the new app profile. Values are of the form `projects/{project}/instances/{instance}`."
      },
      "appProfileId": {
        "type": "string",
        "description": "Required. The ID to be used when referring to the new app profile within its instance, e.g., just `myprofile` rather than `projects/myproject/instances/myinstance/appProfiles/myprofile`."
      },
      "ignoreWarnings": {
        "type": "boolean",
        "description": "If true, ignore safety checks when creating the app profile."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/AppProfile"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "AppProfile": {
        "description": "A configuration object describing how Cloud Bigtable should treat traffic from a particular end user application.",
        "properties": {
          "description": {
            "description": "Long form description of the use case for this AppProfile.",
            "type": "string"
          },
          "etag": {
            "description": "Strongly validated etag for optimistic concurrency control. Preserve the value returned from `GetAppProfile` when calling `UpdateAppProfile` to fail the request if there has been a modification in the mean time. The `update_mask` of the request need not include `etag` for this protection to apply. See [Wikipedia](https://en.wikipedia.org/wiki/HTTP_ETag) and [RFC 7232](https://tools.ietf.org/html/rfc7232#section-2.3) for more details.",
            "type": "string"
          },
          "multiClusterRoutingUseAny": {
            "$ref": "#/$defs/MultiClusterRoutingUseAny"
          },
          "name": {
            "description": "The unique name of the app profile. Values are of the form `projects/{project}/instances/{instance}/appProfiles/_a-zA-Z0-9*`.",
            "type": "string"
          },
          "priority": {
            "deprecated": true,
            "description": "This field has been deprecated in favor of `standard_isolation.priority`. If you set this field, `standard_isolation.priority` will be set instead. The priority of requests sent using this app profile.",
            "enum": [
              "PRIORITY_UNSPECIFIED",
              "PRIORITY_LOW",
              "PRIORITY_MEDIUM",
              "PRIORITY_HIGH"
            ],
            "type": "string"
          },
          "singleClusterRouting": {
            "$ref": "#/$defs/SingleClusterRouting"
          },
          "standardIsolation": {
            "$ref": "#/$defs/StandardIsolation"
          }
        },
        "type": "object"
      },
      "MultiClusterRoutingUseAny": {
        "description": "Read/write requests are routed to the nearest cluster in the instance, and will fail over to the nearest cluster that is available in the event of transient errors or delays. Clusters in a region are considered equidistant. Choosing this option sacrifices read-your-writes consistency to improve availability.",
        "properties": {
          "clusterIds": {
            "description": "The set of clusters to route to. The order is ignored; clusters will be tried in order of distance. If left empty, all clusters are eligible.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "SingleClusterRouting": {
        "description": "Unconditionally routes all read/write requests to a specific cluster. This option preserves read-your-writes consistency but does not improve availability.",
        "properties": {
          "allowTransactionalWrites": {
            "description": "Whether or not `CheckAndMutateRow` and `ReadModifyWriteRow` requests are allowed by this app profile. It is unsafe to send these requests to the same table/row/column in multiple clusters.",
            "type": "boolean"
          },
          "clusterId": {
            "description": "The cluster to which read/write requests should be routed.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "StandardIsolation": {
        "description": "Standard options for isolating this app profile's traffic from other use cases.",
        "properties": {
          "priority": {
            "description": "The priority of requests sent using this app profile.",
            "enum": [
              "PRIORITY_UNSPECIFIED",
              "PRIORITY_LOW",
              "PRIORITY_MEDIUM",
              "PRIORITY_HIGH"
            ],
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://bigtableadmin.googleapis.com//v2/{parent}/appProfiles{?appProfileId,ignoreWarnings,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A configuration object describing how Cloud Bigtable should treat traffic from a particular end user application.",
        "**Key properties:**",
        {
          "$ul": [
            "**description**: Long form description of the use case for this AppProfile.",
            "**etag**: Strongly validated etag for optimistic concurrency control. Preserve the value returned from `GetAppProfile` when calling `UpdateAppProfile` to fail the request if there has been a modification in the mean time. The `update_mask` of the request need not include `etag` for this protection to apply. See [Wikipedia](https://en.wikipedia.org/wiki/HTTP_ETag) and [RFC 7232](https://tools.ietf.org/html/rfc7232#section-2.3) for more details.",
            [
              "**multiClusterRoutingUseAny**: Read/write requests are routed to the nearest cluster in the instance, and will fail over to the nearest cluster that is available in the event of transient errors or delays. Clusters in a region are considered equidistant. Choosing this option sacrifices read-your-writes consistency to improve availability.",
              {
                "$ul": [
                  "**clusterIds**: The set of clusters to route to. The order is ignored; clusters will be tried in order of distance. If left empty, all clusters are eligible."
                ]
              }
            ],
            "**name**: The unique name of the app profile. Values are of the form `projects/{project}/instances/{instance}/appProfiles/_a-zA-Z0-9*`.",
            "**priority**: This field has been deprecated in favor of `standard_isolation.priority`. If you set this field, `standard_isolation.priority` will be set instead. The priority of requests sent using this app profile.",
            [
              "**singleClusterRouting**: Unconditionally routes all read/write requests to a specific cluster. This option preserves read-your-writes consistency but does not improve availability.",
              {
                "$ul": [
                  "**allowTransactionalWrites**: Whether or not `CheckAndMutateRow` and `ReadModifyWriteRow` requests are allowed by this app profile. It is unsafe to send these requests to the same table/row/column in multiple clusters.",
                  "**clusterId**: The cluster to which read/write requests should be routed."
                ]
              }
            ],
            [
              "**standardIsolation**: Standard options for isolating this app profile's traffic from other use cases.",
              {
                "$ul": [
                  "**priority**: The priority of requests sent using this app profile."
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
