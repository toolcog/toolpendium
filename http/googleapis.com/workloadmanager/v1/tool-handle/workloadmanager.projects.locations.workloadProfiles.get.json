{
  "name": "workloadmanager_projects_locations_workloadProfiles_get",
  "description": "Gets details of a single workload.",
  "parameters": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "Required. Name of the resource"
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      }
    },
    "required": [
      "name"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://workloadmanager.googleapis.com//v1/{name}{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "workload resource",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**application**: The database layer",
              {
                "$ul": [
                  "**applicationType**: the application layer",
                  "**databaseType**: Optional. the database layer",
                  "**instances**: Optional. instances in a layer",
                  "**sid**: Output only. system identification of a layer"
                ]
              }
            ],
            [
              "**ascs**: The database layer",
              {
                "$ul": [
                  "**applicationType**: the application layer",
                  "**databaseType**: Optional. the database layer",
                  "**instances**: Optional. instances in a layer",
                  "**sid**: Output only. system identification of a layer"
                ]
              }
            ],
            [
              "**database**: The database layer",
              {
                "$ul": [
                  "**applicationType**: the application layer",
                  "**databaseType**: Optional. the database layer",
                  "**instances**: Optional. instances in a layer",
                  "**sid**: Output only. system identification of a layer"
                ]
              }
            ],
            "**labels**: Optional. such as name, description, version. More example can be found in deployment",
            "**name**: Identifier. name of resource names have the form 'projects/{project_id}/workloads/{workload_id}'",
            "**refreshedTime**: Required. time when the workload data was refreshed",
            [
              "**sapWorkload**: The body of sap workload",
              {
                "$ul": [
                  [
                    "**application**: The component of sap workload",
                    {
                      "$ul": [
                        "**resources**: Output only. resources in the component",
                        "**sid**: Output only. sid is the sap component identificator"
                      ]
                    }
                  ],
                  [
                    "**database**: The component of sap workload",
                    {
                      "$ul": [
                        "**resources**: Output only. resources in the component",
                        "**sid**: Output only. sid is the sap component identificator"
                      ]
                    }
                  ],
                  "**metadata**: Output only. The metadata for SAP workload."
                ]
              }
            ],
            [
              "**sqlserverWorkload**: The body of sqlserver workload",
              {
                "$ul": [
                  "**ags**: Output only. The availability groups for sqlserver",
                  [
                    "**cluster**: The cluster for sqlserver",
                    {
                      "$ul": [
                        "**nodes**: Output only. The nodes",
                        "**witnessServer**: Output only. The witness server"
                      ]
                    }
                  ],
                  "**databases**: Output only. The databases for sqlserver",
                  [
                    "**loadBalancerServer**: The load balancer for sqlserver",
                    {
                      "$ul": [
                        "**ip**: Output only. The IP address",
                        "**vm**: Output only. The VM name"
                      ]
                    }
                  ]
                ]
              }
            ],
            "**state**: Output only. [output only] the current state if a a workload",
            [
              "**threeTierWorkload**: The body of three tier workload",
              {
                "$ul": [
                  [
                    "**apiLayer**: The API layer server",
                    {
                      "$ul": [
                        "**name**: Output only. The api layer name",
                        "**osVersion**: Output only. OS information",
                        "**resources**: Output only. resources in the component"
                      ]
                    }
                  ],
                  [
                    "**backend**: The backend server",
                    {
                      "$ul": [
                        "**backupFile**: Output only. The backup file",
                        "**backupSchedule**: Output only. The backup schedule",
                        "**name**: Output only. The backend name",
                        "**osVersion**: Output only. OS information",
                        "**resources**: Output only. resources in the component"
                      ]
                    }
                  ],
                  "**endpoint**: Output only. the workload endpoint",
                  [
                    "**frontend**: The front end server",
                    {
                      "$ul": [
                        "**name**: Output only. The frontend name",
                        "**osVersion**: Output only. OS information",
                        "**resources**: Output only. resources in the component"
                      ]
                    }
                  ]
                ]
              }
            ],
            "**workloadType**: Required. The type of the workload"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
