{
  "name": "deploymentmanager_deployments_get",
  "description": "Gets information about a specific deployment.",
  "parameters": {
    "type": "object",
    "properties": {
      "project": {
        "type": "string",
        "description": "The project ID for this request."
      },
      "deployment": {
        "type": "string",
        "description": "The name of the deployment for this request."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      }
    },
    "required": [
      "project",
      "deployment"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://deploymentmanager.googleapis.com//deploymentmanager/alpha/projects/{project}/global/deployments/{deployment}{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**credential**: The credential used by Deployment Manager and TypeProvider. Only one of the options is permitted.",
              {
                "$ul": [
                  [
                    "**basicAuth**: Basic Auth used as a credential.",
                    {
                      "$ul": [
                        "**password**",
                        "**user**"
                      ]
                    }
                  ],
                  [
                    "**serviceAccount**: Service Account used as a credential.",
                    {
                      "$ul": [
                        "**email**: The IAM service account email address like test@myproject.iam.gserviceaccount.com"
                      ]
                    }
                  ],
                  "**useProjectDefault**: Specify to use the project default credential, only supported by Deployment."
                ]
              }
            ],
            "**description**: An optional user-provided description of the deployment.",
            "**fingerprint**: Provides a fingerprint to use in requests to modify a deployment, such as `update()`, `stop()`, and `cancelPreview()` requests. A fingerprint is a randomly generated value that must be provided with `update()`, `stop()`, and `cancelPreview()` requests to perform optimistic locking. This ensures optimistic concurrency so that only one request happens at a time. The fingerprint is initially generated by Deployment Manager and changes after every request to modify data. To get the latest fingerprint value, perform a `get()` request to a deployment.",
            "**id**",
            "**insertTime**: Output only. Creation timestamp in RFC3339 text format.",
            "**labels**: Map of One Platform labels; provided by the client when the resource is created or updated. Specifically: Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?` Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`.",
            "**manifest**: Output only. URL of the manifest representing the last manifest that was successfully deployed. If no manifest has been successfully deployed, this field will be absent.",
            "**name**: Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
            [
              "**operation**: Represents an Operation resource. Google Compute Engine has three Operation resources: * [Global](/compute/docs/reference/rest/{$api_version}/globalOperations) * [Regional](/compute/docs/reference/rest/{$api_version}/regionOperations) * [Zonal](/compute/docs/reference/rest/{$api_version}/zoneOperations) You can use an operation resource to manage asynchronous API requests. For more information, read Handling API responses. Operations can be global, regional or zonal. - For global operations, use the `globalOperations` resource. - For regional operations, use the `regionOperations` resource. - For zonal operations, use the `zoneOperations` resource. For more information, read Global, Regional, and Zonal Resources. Note that completed Operation resources have a limited retention period.",
              {
                "$ul": [
                  "**clientOperationId**: [Output Only] The value of `requestId` if you provided it in the request. Not present otherwise.",
                  "**creationTimestamp**: [Deprecated] This field is deprecated.",
                  "**description**: [Output Only] A textual description of the operation, which is set when the operation is created.",
                  "**endTime**: [Output Only] The time that this operation was completed. This value is in RFC3339 text format.",
                  [
                    "**error**: [Output Only] If errors are generated during processing of the operation, this field will be populated.",
                    {
                      "$ul": [
                        "**errors**: [Output Only] The array of errors encountered while processing this operation."
                      ]
                    }
                  ],
                  "**httpErrorMessage**: [Output Only] If the operation fails, this field contains the HTTP error message that was returned, such as `NOT FOUND`.",
                  "**httpErrorStatusCode**: [Output Only] If the operation fails, this field contains the HTTP error status code that was returned. For example, a `404` means the resource was not found.",
                  "**id**: [Output Only] The unique identifier for the operation. This identifier is defined by the server.",
                  "**insertTime**: [Output Only] The time that this operation was requested. This value is in RFC3339 text format.",
                  [
                    "**instancesBulkInsertOperationMetadata**",
                    {
                      "$ul": [
                        "**perLocationStatus**: Status information per location (location name is key). Example key: zones/us-central1-a"
                      ]
                    }
                  ],
                  "**kind**: [Output Only] Type of the resource. Always `compute#operation` for Operation resources. (default: compute#operation)",
                  "**name**: [Output Only] Name of the operation.",
                  "**operationGroupId**: [Output Only] An ID that represents a group of operations, such as when a group of operations results from a `bulkInsert` API request.",
                  "**operationType**: [Output Only] The type of operation, such as `insert`, `update`, or `delete`, and so on.",
                  "**progress**: [Output Only] An optional progress indicator that ranges from 0 to 100. There is no requirement that this be linear or support any granularity of operations. This should not be used to guess when the operation will be complete. This number should monotonically increase as the operation progresses.",
                  "**region**: [Output Only] The URL of the region where the operation resides. Only applicable when performing regional operations.",
                  "**selfLink**: [Output Only] Server-defined URL for the resource.",
                  [
                    "**setCommonInstanceMetadataOperationMetadata**",
                    {
                      "$ul": [
                        "**clientOperationId**: [Output Only] The client operation id.",
                        "**perLocationOperations**: [Output Only] Status information per location (location name is key). Example key: zones/us-central1-a"
                      ]
                    }
                  ],
                  "**startTime**: [Output Only] The time that this operation was started by the server. This value is in RFC3339 text format.",
                  "**status**: [Output Only] The status of the operation, which can be one of the following: `PENDING`, `RUNNING`, or `DONE`.",
                  "**statusMessage**: [Output Only] An optional textual description of the current status of the operation.",
                  "**targetId**: [Output Only] The unique target ID, which identifies a specific incarnation of the target resource.",
                  "**targetLink**: [Output Only] The URL of the resource that the operation modifies. For operations related to creating a snapshot, this points to the persistent disk that the snapshot was created from.",
                  "**user**: [Output Only] User who requested the operation, for example: `user@example.com` or `alice_smith_identifier (global/workforcePools/example-com-us-employees)`.",
                  "**warnings**: [Output Only] If warning messages are generated during processing of the operation, this field will be populated.",
                  "**zone**: [Output Only] The URL of the zone where the operation resides. Only applicable when performing per-zone operations."
                ]
              }
            ],
            "**outputs**: Output only. List of outputs from the last manifest that deployed successfully.",
            "**selfLink**: Output only. Server defined URL for the resource.",
            [
              "**target**",
              {
                "$ul": [
                  [
                    "**config**",
                    {
                      "$ul": [
                        "**content**: The contents of the file."
                      ]
                    }
                  ],
                  "**imports**: Specifies any files to import for this configuration. This can be used to import templates or other files. For example, you might import a text file in order to use the file in a template."
                ]
              }
            ],
            [
              "**update**",
              {
                "$ul": [
                  [
                    "**credential**: The credential used by Deployment Manager and TypeProvider. Only one of the options is permitted.",
                    {
                      "$ul": [
                        [
                          "**basicAuth**: Basic Auth used as a credential.",
                          {
                            "$ul": [
                              "**password**",
                              "**user**"
                            ]
                          }
                        ],
                        [
                          "**serviceAccount**: Service Account used as a credential.",
                          {
                            "$ul": [
                              "**email**: The IAM service account email address like test@myproject.iam.gserviceaccount.com"
                            ]
                          }
                        ],
                        "**useProjectDefault**: Specify to use the project default credential, only supported by Deployment."
                      ]
                    }
                  ],
                  "**description**: Output only. An optional user-provided description of the deployment after the current update has been applied.",
                  "**labels**: Map of One Platform labels; provided by the client when the resource is created or updated. Specifically: Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?` Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`.",
                  "**manifest**: Output only. URL of the manifest representing the update configuration of this deployment."
                ]
              }
            ],
            "**updateTime**: Output only. Update timestamp in RFC3339 text format."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
