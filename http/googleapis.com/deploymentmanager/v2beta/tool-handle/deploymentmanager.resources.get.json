{
  "name": "deploymentmanager_resources_get",
  "description": "Gets information about a single resource.",
  "parameters": {
    "type": "object",
    "properties": {
      "project": {
        "type": "string",
        "description": "The project ID for this request."
      },
      "deployment": {
        "type": "string",
        "description": "The name of the deployment for this request."
      },
      "resource": {
        "type": "string",
        "description": "The name of the resource for this request."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      }
    },
    "required": [
      "project",
      "deployment",
      "resource"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://deploymentmanager.googleapis.com//deploymentmanager/v2beta/projects/{project}/global/deployments/{deployment}/resources/{resource}{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**accessControl**: The access controls set on the resource.",
              {
                "$ul": [
                  "**gcpIamPolicy**: The GCP IAM Policy to set on the resource."
                ]
              }
            ],
            "**finalProperties**: Output only. The evaluated properties of the resource with references expanded. Returned as serialized YAML.",
            "**id**",
            "**insertTime**: Output only. Creation timestamp in RFC3339 text format.",
            "**manifest**: Output only. URL of the manifest representing the current configuration of this resource.",
            "**name**: Output only. The name of the resource as it appears in the YAML config.",
            "**properties**: Output only. The current properties of the resource before any references have been filled in. Returned as serialized YAML.",
            "**type**: Output only. The type of the resource, for example `compute.v1.instance`, or `cloudfunctions.v1beta1.function`.",
            [
              "**update**",
              {
                "$ul": [
                  [
                    "**accessControl**: The access controls set on the resource.",
                    {
                      "$ul": [
                        "**gcpIamPolicy**: The GCP IAM Policy to set on the resource."
                      ]
                    }
                  ],
                  [
                    "**error**: Output only. If errors are generated during update of the resource, this field will be populated.",
                    {
                      "$ul": [
                        "**errors**: [Output Only] The array of errors encountered while processing this operation."
                      ]
                    }
                  ],
                  "**finalProperties**: Output only. The expanded properties of the resource with reference values expanded. Returned as serialized YAML.",
                  "**intent**: Output only. The intent of the resource: `PREVIEW`, `UPDATE`, or `CANCEL`.",
                  "**manifest**: Output only. URL of the manifest representing the update configuration of this resource.",
                  "**properties**: Output only. The set of updated properties for this resource, before references are expanded. Returned as serialized YAML.",
                  "**state**: Output only. The state of the resource.",
                  "**warnings**: Output only. If warning messages are generated during processing of this resource, this field will be populated."
                ]
              }
            ],
            "**updateTime**: Output only. Update timestamp in RFC3339 text format.",
            "**url**: Output only. The URL of the actual resource.",
            "**warnings**: Output only. If warning messages are generated during processing of this resource, this field will be populated."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
