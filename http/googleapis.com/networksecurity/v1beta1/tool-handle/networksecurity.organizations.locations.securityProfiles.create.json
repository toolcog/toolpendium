{
  "name": "networksecurity_organizations_locations_securityProfiles_create",
  "description": "Creates a new SecurityProfile in a given organization and location.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. The parent resource of the SecurityProfile. Must be in the format `projects|organizations/*/locations/{location}`."
      },
      "securityProfileId": {
        "type": "string",
        "description": "Required. Short name of the SecurityProfile resource to be created. This value should be 1-63 characters long, containing only letters, numbers, hyphens, and underscores, and should not start with a number. E.g. \"security_profile1\"."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/SecurityProfile"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "SecurityProfile": {
        "description": "SecurityProfile is a resource that defines the behavior for one of many ProfileTypes. Next ID: 9",
        "properties": {
          "createTime": {
            "description": "Output only. Resource creation timestamp.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "description": {
            "description": "Optional. An optional description of the profile. Max length 512 characters.",
            "type": "string"
          },
          "etag": {
            "description": "Output only. This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.",
            "readOnly": true,
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Optional. Labels as key value pairs.",
            "type": "object"
          },
          "name": {
            "description": "Immutable. Identifier. Name of the SecurityProfile resource. It matches pattern `projects|organizations/*/locations/{location}/securityProfiles/{security_profile}`.",
            "type": "string"
          },
          "threatPreventionProfile": {
            "$ref": "#/$defs/ThreatPreventionProfile"
          },
          "type": {
            "description": "Immutable. The single ProfileType that the SecurityProfile resource configures.",
            "enum": [
              "PROFILE_TYPE_UNSPECIFIED",
              "THREAT_PREVENTION"
            ],
            "type": "string"
          },
          "updateTime": {
            "description": "Output only. Last resource update timestamp.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ThreatPreventionProfile": {
        "description": "ThreatPreventionProfile defines an action for specific threat signatures or severity levels.",
        "properties": {
          "severityOverrides": {
            "description": "Optional. Configuration for overriding threats actions by severity match.",
            "items": {
              "$ref": "#/$defs/SeverityOverride"
            },
            "type": "array"
          },
          "threatOverrides": {
            "description": "Optional. Configuration for overriding threats actions by threat_id match. If a threat is matched both by configuration provided in severity_overrides and threat_overrides, the threat_overrides action is applied.",
            "items": {
              "$ref": "#/$defs/ThreatOverride"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "SeverityOverride": {
        "description": "Defines what action to take for a specific severity match.",
        "properties": {
          "action": {
            "description": "Required. Threat action override.",
            "enum": [
              "THREAT_ACTION_UNSPECIFIED",
              "DEFAULT_ACTION",
              "ALLOW",
              "ALERT",
              "DENY"
            ],
            "type": "string"
          },
          "severity": {
            "description": "Required. Severity level to match.",
            "enum": [
              "SEVERITY_UNSPECIFIED",
              "INFORMATIONAL",
              "LOW",
              "MEDIUM",
              "HIGH",
              "CRITICAL"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "ThreatOverride": {
        "description": "Defines what action to take for a specific threat_id match.",
        "properties": {
          "action": {
            "description": "Required. Threat action override. For some threat types, only a subset of actions applies.",
            "enum": [
              "THREAT_ACTION_UNSPECIFIED",
              "DEFAULT_ACTION",
              "ALLOW",
              "ALERT",
              "DENY"
            ],
            "type": "string"
          },
          "threatId": {
            "description": "Required. Vendor-specific ID of a threat to override.",
            "type": "string"
          },
          "type": {
            "description": "Output only. Type of the threat (read only).",
            "enum": [
              "THREAT_TYPE_UNSPECIFIED",
              "UNKNOWN",
              "VULNERABILITY",
              "ANTIVIRUS",
              "SPYWARE",
              "DNS"
            ],
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://networksecurity.googleapis.com//v1beta1/{parent}/securityProfiles{?securityProfileId,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "This resource represents a long-running operation that is the result of a network API call.",
        "**Key properties:**",
        {
          "$ul": [
            "**done**: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
            [
              "**error**: The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
              {
                "$ul": [
                  "**code**: The status code, which should be an enum value of google.rpc.Code.",
                  "**details**: A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                  "**message**: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                ]
              }
            ],
            "**metadata**: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
            "**name**: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
            "**response**: The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
