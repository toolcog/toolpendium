{
  "name": "cloudprivatecatalogproducer_catalogs_create",
  "description": "Creates a new Catalog resource.",
  "parameters": {
    "type": "object",
    "properties": {
      "alt": {
        "default": "json",
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "prettyPrint": {
        "default": true,
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "body": {
        "$ref": "#/$defs/GoogleCloudPrivatecatalogproducerV1beta1Catalog"
      }
    },
    "$defs": {
      "GoogleCloudPrivatecatalogproducerV1beta1Catalog": {
        "description": "The producer representation of a catalog which is a curated collection of\nsolutions that can be managed, controlled, and shared by cloud admins.",
        "properties": {
          "createTime": {
            "description": "Output only. The time when the catalog was created.",
            "format": "google-datetime",
            "type": "string"
          },
          "description": {
            "description": "Required. The user-supplied description of the catalog. Maximum of 512\ncharacters.",
            "type": "string"
          },
          "displayName": {
            "description": "Required. The user-supplied descriptive name of the catalog as it appears\nin UIs. Maximum 256 characters in length.",
            "type": "string"
          },
          "name": {
            "description": "Output only. The resource name of the catalog, in the format\n`catalogs/{catalog_id}'.\n\nA unique identifier for the catalog, which is generated\nby catalog service.",
            "type": "string"
          },
          "parent": {
            "description": "Required. The parent resource name of the catalog, which can't be changed\nafter a catalog is created. It can only be an organization. Values are of\nthe form `//cloudresourcemanager.googleapis.com/organizations/<id>`.\nMaximum 256 characters in length.",
            "type": "string"
          },
          "updateTime": {
            "description": "Output only. The time when the catalog was last updated.",
            "format": "google-datetime",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://cloudprivatecatalogproducer.googleapis.com//v1beta1/catalogs{?alt,key,access_token,upload_protocol,prettyPrint,quotaUser,fields,uploadType,$.xgafv,oauth_token,callback}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "This resource represents a long-running operation that is the result of a\nnetwork API call.",
        "**Key properties:**",
        {
          "$ul": [
            "**done**: If the value is `false`, it means the operation is still in progress.",
            [
              "**error**: The `Status` type defines a logical error model that is suitable for",
              {
                "$ul": [
                  "**code**: The status code, which should be an enum value of google.rpc.Code.",
                  "**details**: A list of messages that carry the error details.  There is a common set of",
                  "**message**: A developer-facing error message, which should be in English. Any"
                ]
              }
            ],
            "**metadata**: Service-specific metadata associated with the operation.  It typically",
            "**name**: The server-assigned name, which is only unique within the same service that",
            "**response**: The normal response of the operation in case of success.  If the original"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
