{
  "name": "cloudprivatecatalogproducer_catalogs_products_versions_create",
  "description": "Creates a Version instance under a given Product.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "The product name of the new version's parent."
      },
      "alt": {
        "default": "json",
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "prettyPrint": {
        "default": true,
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "body": {
        "$ref": "#/$defs/GoogleCloudPrivatecatalogproducerV1beta1Version"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "GoogleCloudPrivatecatalogproducerV1beta1Version": {
        "description": "The producer representation of a version, which is a child resource under a\n`Product` with asset data.",
        "properties": {
          "asset": {
            "additionalProperties": {
              "description": "Properties of the object."
            },
            "description": "Output only. The asset which has been validated and is ready to be\nprovisioned. See Version.original_asset for the schema.",
            "type": "object"
          },
          "createTime": {
            "description": "Output only. The time when the version was created.",
            "format": "google-datetime",
            "type": "string"
          },
          "description": {
            "description": "The user-supplied description of the version. Maximum of 256 characters.",
            "type": "string"
          },
          "name": {
            "description": "Required. The resource name of the version, in the format\n`catalogs/{catalog_id}/products/{product_id}/versions/a-z*[a-z0-9]'.\n\nA unique identifier for the version under a product, which can't\nbe changed after the version is created. The final segment of the name must\nbetween 1 and 63 characters in length.",
            "type": "string"
          },
          "originalAsset": {
            "additionalProperties": {
              "description": "Properties of the object."
            },
            "description": "The user-supplied asset payload. The maximum size of the payload is 2MB.\nThe JSON schema of the payload is defined as:\n\n```\ntype: object\nproperties:\n  mainTemplate:\n    type: string\n    description: The file name of the main template and name prefix of\n    schema file. The content of the main template should be set in the\n    imports list. The schema file name is expected to be\n    <mainTemplate>.schema in the imports list. required: true\n  imports:\n    type: array\n    description: Import template and schema file contents. Required to have\n    both <mainTemplate> and <mainTemplate>.schema files. required: true\n    minItems: 2\n    items:\n      type: object\n      properties:\n        name:\n          type: string\n        content:\n          type: string\n```",
            "type": "object"
          },
          "updateTime": {
            "description": "Output only. The time when the version was last updated.",
            "format": "google-datetime",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://cloudprivatecatalogproducer.googleapis.com//v1beta1/{parent}/versions{?alt,key,access_token,upload_protocol,prettyPrint,quotaUser,fields,uploadType,$.xgafv,oauth_token,callback}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "This resource represents a long-running operation that is the result of a\nnetwork API call.",
        "**Key properties:**",
        {
          "$ul": [
            "**done**: If the value is `false`, it means the operation is still in progress.",
            [
              "**error**: The `Status` type defines a logical error model that is suitable for",
              {
                "$ul": [
                  "**code**: The status code, which should be an enum value of google.rpc.Code.",
                  "**details**: A list of messages that carry the error details.  There is a common set of",
                  "**message**: A developer-facing error message, which should be in English. Any"
                ]
              }
            ],
            "**metadata**: Service-specific metadata associated with the operation.  It typically",
            "**name**: The server-assigned name, which is only unique within the same service that",
            "**response**: The normal response of the operation in case of success.  If the original"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
