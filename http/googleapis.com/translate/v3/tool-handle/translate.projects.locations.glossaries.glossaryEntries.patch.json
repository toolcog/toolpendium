{
  "name": "translate_projects_locations_glossaries_glossaryEntries_patch",
  "description": "Updates a glossary entry.",
  "parameters": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "Required. The resource name of the entry. Format: \"projects/*/locations/*/glossaries/*/glossaryEntries/*\""
      },
      "updateMask": {
        "type": "string",
        "description": "The list of fields to be updated. Currently only `display_name` and 'input_config'"
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GlossaryEntry"
      }
    },
    "required": [
      "name"
    ],
    "$defs": {
      "GlossaryEntry": {
        "description": "Represents a single entry in a glossary.",
        "properties": {
          "description": {
            "description": "Describes the glossary entry.",
            "type": "string"
          },
          "name": {
            "description": "Required. The resource name of the entry. Format: \"projects/*/locations/*/glossaries/*/glossaryEntries/*\"",
            "type": "string"
          },
          "termsPair": {
            "$ref": "#/$defs/GlossaryTermsPair"
          },
          "termsSet": {
            "$ref": "#/$defs/GlossaryTermsSet"
          }
        },
        "type": "object"
      },
      "GlossaryTermsPair": {
        "description": "Represents a single entry for an unidirectional glossary.",
        "properties": {
          "sourceTerm": {
            "$ref": "#/$defs/GlossaryTerm"
          },
          "targetTerm": {
            "$ref": "#/$defs/GlossaryTerm"
          }
        },
        "type": "object"
      },
      "GlossaryTerm": {
        "description": "Represents a single glossary term",
        "properties": {
          "languageCode": {
            "description": "The language for this glossary term.",
            "type": "string"
          },
          "text": {
            "description": "The text for the glossary term.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GlossaryTermsSet": {
        "description": "Represents a single entry for an equivalent term set glossary. This is used for equivalent term sets where each term can be replaced by the other terms in the set.",
        "properties": {
          "terms": {
            "description": "Each term in the set represents a term that can be replaced by the other terms.",
            "items": {
              "$ref": "#/$defs/GlossaryTerm"
            },
            "type": "array"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PATCH",
    "url": {
      "$uri": "https://translation.googleapis.com//v3/{name}{?updateMask,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Represents a single entry in a glossary.",
        "**Key properties:**",
        {
          "$ul": [
            "**description**: Describes the glossary entry.",
            "**name**: Required. The resource name of the entry. Format: \"projects/*/locations/*/glossaries/*/glossaryEntries/*\"",
            [
              "**termsPair**: Represents a single entry for an unidirectional glossary.",
              {
                "$ul": [
                  [
                    "**sourceTerm**: Represents a single glossary term",
                    {
                      "$ul": [
                        "**languageCode**: The language for this glossary term.",
                        "**text**: The text for the glossary term."
                      ]
                    }
                  ],
                  [
                    "**targetTerm**: Represents a single glossary term",
                    {
                      "$ul": [
                        "**languageCode**: The language for this glossary term.",
                        "**text**: The text for the glossary term."
                      ]
                    }
                  ]
                ]
              }
            ],
            [
              "**termsSet**: Represents a single entry for an equivalent term set glossary. This is used for equivalent term sets where each term can be replaced by the other terms in the set.",
              {
                "$ul": [
                  "**terms**: Each term in the set represents a term that can be replaced by the other terms."
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
