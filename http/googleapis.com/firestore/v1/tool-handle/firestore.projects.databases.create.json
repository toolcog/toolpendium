{
  "name": "firestore_projects_databases_create",
  "description": "Create a database.",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "Required. A parent name of the form `projects/{project_id}`"
      },
      "databaseId": {
        "type": "string",
        "description": "Required. The ID to use for the database, which will become the final component of the database's resource name. This value should be 4-63 characters. Valid characters are /a-z-/ with first character a letter and the last a letter or a number. Must not be UUID-like /[0-9a-f]{8}(-[0-9a-f]{4}){3}-[0-9a-f]{12}/. \"(default)\" database id is also valid."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/GoogleFirestoreAdminV1Database"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "GoogleFirestoreAdminV1Database": {
        "description": "A Cloud Firestore Database.",
        "properties": {
          "appEngineIntegrationMode": {
            "description": "The App Engine integration mode to use for this database.",
            "enum": [
              "APP_ENGINE_INTEGRATION_MODE_UNSPECIFIED",
              "ENABLED",
              "DISABLED"
            ],
            "type": "string"
          },
          "concurrencyMode": {
            "description": "The concurrency control mode to use for this database.",
            "enum": [
              "CONCURRENCY_MODE_UNSPECIFIED",
              "OPTIMISTIC",
              "PESSIMISTIC",
              "OPTIMISTIC_WITH_ENTITY_GROUPS"
            ],
            "type": "string"
          },
          "createTime": {
            "description": "Output only. The timestamp at which this database was created. Databases created before 2016 do not populate create_time.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "deleteProtectionState": {
            "description": "State of delete protection for the database.",
            "enum": [
              "DELETE_PROTECTION_STATE_UNSPECIFIED",
              "DELETE_PROTECTION_DISABLED",
              "DELETE_PROTECTION_ENABLED"
            ],
            "type": "string"
          },
          "earliestVersionTime": {
            "description": "Output only. The earliest timestamp at which older versions of the data can be read from the database. See [version_retention_period] above; this field is populated with `now - version_retention_period`. This value is continuously updated, and becomes stale the moment it is queried. If you are using this value to recover data, make sure to account for the time from the moment when the value is queried to the moment when you initiate the recovery.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "etag": {
            "description": "This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.",
            "type": "string"
          },
          "keyPrefix": {
            "description": "Output only. The key_prefix for this database. This key_prefix is used, in combination with the project id (\"~\") to construct the application id that is returned from the Cloud Datastore APIs in Google App Engine first generation runtimes. This value may be empty in which case the appid to use for URL-encoded keys is the project_id (eg: foo instead of v~foo).",
            "readOnly": true,
            "type": "string"
          },
          "locationId": {
            "description": "The location of the database. Available locations are listed at https://cloud.google.com/firestore/docs/locations.",
            "type": "string"
          },
          "name": {
            "description": "The resource name of the Database. Format: `projects/{project}/databases/{database}`",
            "type": "string"
          },
          "pointInTimeRecoveryEnablement": {
            "description": "Whether to enable the PITR feature on this database.",
            "enum": [
              "POINT_IN_TIME_RECOVERY_ENABLEMENT_UNSPECIFIED",
              "POINT_IN_TIME_RECOVERY_ENABLED",
              "POINT_IN_TIME_RECOVERY_DISABLED"
            ],
            "type": "string"
          },
          "type": {
            "description": "The type of the database. See https://cloud.google.com/datastore/docs/firestore-or-datastore for information about how to choose.",
            "enum": [
              "DATABASE_TYPE_UNSPECIFIED",
              "FIRESTORE_NATIVE",
              "DATASTORE_MODE"
            ],
            "type": "string"
          },
          "uid": {
            "description": "Output only. The system-generated UUID4 for this Database.",
            "readOnly": true,
            "type": "string"
          },
          "updateTime": {
            "description": "Output only. The timestamp at which this database was most recently updated. Note this only includes updates to the database resource and not data contained by the database.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "versionRetentionPeriod": {
            "description": "Output only. The period during which past versions of data are retained in the database. Any read or query can specify a `read_time` within this window, and will read the state of the database at that time. If the PITR feature is enabled, the retention period is 7 days. Otherwise, the retention period is 1 hour.",
            "format": "google-duration",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://firestore.googleapis.com//v1/{parent}/databases{?databaseId,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "This resource represents a long-running operation that is the result of a network API call.",
        "**Key properties:**",
        {
          "$ul": [
            "**done**: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
            [
              "**error**: The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
              {
                "$ul": [
                  "**code**: The status code, which should be an enum value of google.rpc.Code.",
                  "**details**: A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                  "**message**: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                ]
              }
            ],
            "**metadata**: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
            "**name**: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
            "**response**: The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
