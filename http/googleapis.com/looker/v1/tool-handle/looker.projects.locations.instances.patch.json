{
  "name": "looker_projects_locations_instances_patch",
  "description": "Update Instance.",
  "parameters": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "Output only. Format: `projects/{project}/locations/{location}/instances/{instance}`."
      },
      "updateMask": {
        "type": "string",
        "description": "Required. Field mask used to specify the fields to be overwritten in the Instance resource by the update. The fields specified in the mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/Instance"
      }
    },
    "required": [
      "name"
    ],
    "$defs": {
      "Instance": {
        "description": "A Looker instance.",
        "properties": {
          "adminSettings": {
            "$ref": "#/$defs/AdminSettings"
          },
          "consumerNetwork": {
            "description": "Network name in the consumer project. Format: `projects/{project}/global/networks/{network}`. Note that the consumer network may be in a different GCP project than the consumer project that is hosting the Looker Instance.",
            "type": "string"
          },
          "createTime": {
            "description": "Output only. The time when the Looker instance provisioning was first requested.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "customDomain": {
            "$ref": "#/$defs/CustomDomain"
          },
          "denyMaintenancePeriod": {
            "$ref": "#/$defs/DenyMaintenancePeriod"
          },
          "egressPublicIp": {
            "description": "Output only. Public Egress IP (IPv4).",
            "readOnly": true,
            "type": "string"
          },
          "encryptionConfig": {
            "$ref": "#/$defs/EncryptionConfig"
          },
          "ingressPrivateIp": {
            "description": "Output only. Private Ingress IP (IPv4).",
            "readOnly": true,
            "type": "string"
          },
          "ingressPublicIp": {
            "description": "Output only. Public Ingress IP (IPv4).",
            "readOnly": true,
            "type": "string"
          },
          "lastDenyMaintenancePeriod": {
            "$ref": "#/$defs/DenyMaintenancePeriod"
          },
          "lookerUri": {
            "description": "Output only. Looker instance URI which can be used to access the Looker Instance UI.",
            "readOnly": true,
            "type": "string"
          },
          "lookerVersion": {
            "description": "Output only. The Looker version that the instance is using.",
            "readOnly": true,
            "type": "string"
          },
          "maintenanceSchedule": {
            "$ref": "#/$defs/MaintenanceSchedule"
          },
          "maintenanceWindow": {
            "$ref": "#/$defs/MaintenanceWindow"
          },
          "name": {
            "description": "Output only. Format: `projects/{project}/locations/{location}/instances/{instance}`.",
            "readOnly": true,
            "type": "string"
          },
          "oauthConfig": {
            "$ref": "#/$defs/OAuthConfig"
          },
          "platformEdition": {
            "description": "Platform edition.",
            "enum": [
              "PLATFORM_EDITION_UNSPECIFIED",
              "LOOKER_CORE_TRIAL",
              "LOOKER_CORE_STANDARD",
              "LOOKER_CORE_STANDARD_ANNUAL",
              "LOOKER_CORE_ENTERPRISE_ANNUAL",
              "LOOKER_CORE_EMBED_ANNUAL"
            ],
            "type": "string"
          },
          "privateIpEnabled": {
            "description": "Whether private IP is enabled on the Looker instance.",
            "type": "boolean"
          },
          "pscConfig": {
            "$ref": "#/$defs/PscConfig"
          },
          "pscEnabled": {
            "description": "Optional. Whether to use Private Service Connect (PSC) for private IP connectivity. If true, VPC peering (PSA) will not be used.",
            "type": "boolean"
          },
          "publicIpEnabled": {
            "description": "Whether public IP is enabled on the Looker instance.",
            "type": "boolean"
          },
          "reservedRange": {
            "description": "Name of a reserved IP address range within the Instance.consumer_network, to be used for private services access connection. May or may not be specified in a create request.",
            "type": "string"
          },
          "state": {
            "description": "Output only. The state of the instance.",
            "enum": [
              "STATE_UNSPECIFIED",
              "ACTIVE",
              "CREATING",
              "FAILED",
              "SUSPENDED",
              "UPDATING",
              "DELETING",
              "EXPORTING",
              "IMPORTING"
            ],
            "readOnly": true,
            "type": "string"
          },
          "updateTime": {
            "description": "Output only. The time when the Looker instance was last updated.",
            "format": "google-datetime",
            "readOnly": true,
            "type": "string"
          },
          "userMetadata": {
            "$ref": "#/$defs/UserMetadata"
          }
        },
        "type": "object"
      },
      "AdminSettings": {
        "description": "Looker instance Admin settings fields.",
        "properties": {
          "allowedEmailDomains": {
            "description": "Email domain allowlist for the instance.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "CustomDomain": {
        "description": "Custom domain information.",
        "properties": {
          "domain": {
            "description": "Domain name.",
            "type": "string"
          },
          "state": {
            "description": "Domain state.",
            "enum": [
              "CUSTOM_DOMAIN_STATE_UNSPECIFIED",
              "UNVERIFIED",
              "VERIFIED",
              "MODIFYING",
              "AVAILABLE",
              "UNAVAILABLE",
              "UNKNOWN"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "DenyMaintenancePeriod": {
        "description": "Specifies the maintenance denial period.",
        "properties": {
          "endDate": {
            "$ref": "#/$defs/Date"
          },
          "startDate": {
            "$ref": "#/$defs/Date"
          },
          "time": {
            "$ref": "#/$defs/TimeOfDay"
          }
        },
        "type": "object"
      },
      "Date": {
        "description": "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp",
        "properties": {
          "day": {
            "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
            "format": "int32",
            "type": "integer"
          },
          "month": {
            "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
            "format": "int32",
            "type": "integer"
          },
          "year": {
            "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TimeOfDay": {
        "description": "Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.",
        "properties": {
          "hours": {
            "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \"24:00:00\" for scenarios like business closing time.",
            "format": "int32",
            "type": "integer"
          },
          "minutes": {
            "description": "Minutes of hour of day. Must be from 0 to 59.",
            "format": "int32",
            "type": "integer"
          },
          "nanos": {
            "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.",
            "format": "int32",
            "type": "integer"
          },
          "seconds": {
            "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "EncryptionConfig": {
        "description": "Encryption configuration (i.e. CMEK).",
        "properties": {
          "kmsKeyName": {
            "description": "Name of the CMEK key in KMS (input parameter).",
            "type": "string"
          },
          "kmsKeyNameVersion": {
            "description": "Output only. Full name and version of the CMEK key currently in use to encrypt Looker data. Format: `projects/{project}/locations/{location}/keyRings/{ring}/cryptoKeys/{key}/cryptoKeyVersions/{version}`. Empty if CMEK is not configured in this instance.",
            "readOnly": true,
            "type": "string"
          },
          "kmsKeyState": {
            "description": "Output only. Status of the CMEK key.",
            "enum": [
              "KMS_KEY_STATE_UNSPECIFIED",
              "VALID",
              "REVOKED"
            ],
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "MaintenanceSchedule": {
        "description": "Published upcoming future maintenance schedule.",
        "properties": {
          "endTime": {
            "description": "The scheduled end time for the maintenance.",
            "format": "google-datetime",
            "type": "string"
          },
          "startTime": {
            "description": "The scheduled start time for the maintenance.",
            "format": "google-datetime",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MaintenanceWindow": {
        "description": "Specifies the recurring maintenance window.",
        "properties": {
          "dayOfWeek": {
            "description": "Required. Day of the week for this MaintenanceWindow (in UTC).",
            "enum": [
              "DAY_OF_WEEK_UNSPECIFIED",
              "MONDAY",
              "TUESDAY",
              "WEDNESDAY",
              "THURSDAY",
              "FRIDAY",
              "SATURDAY",
              "SUNDAY"
            ],
            "type": "string"
          },
          "startTime": {
            "$ref": "#/$defs/TimeOfDay"
          }
        },
        "type": "object"
      },
      "OAuthConfig": {
        "description": "Looker instance OAuth login settings.",
        "properties": {
          "clientId": {
            "description": "Input only. Client ID from an external OAuth application. This is an input-only field, and thus will not be set in any responses.",
            "type": "string"
          },
          "clientSecret": {
            "description": "Input only. Client secret from an external OAuth application. This is an input-only field, and thus will not be set in any responses.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PscConfig": {
        "description": "Information for Private Service Connect (PSC) setup for a Looker instance.",
        "properties": {
          "allowedVpcs": {
            "description": "Optional. List of VPCs that are allowed ingress into looker. Format: projects/{project}/global/networks/{network}",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "lookerServiceAttachmentUri": {
            "description": "Output only. URI of the Looker service attachment.",
            "readOnly": true,
            "type": "string"
          },
          "serviceAttachments": {
            "description": "Optional. List of egress service attachment configurations.",
            "items": {
              "$ref": "#/$defs/ServiceAttachment"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServiceAttachment": {
        "description": "Service attachment configuration.",
        "properties": {
          "connectionStatus": {
            "description": "Output only. Connection status.",
            "enum": [
              "UNKNOWN",
              "ACCEPTED",
              "PENDING",
              "REJECTED",
              "NEEDS_ATTENTION",
              "CLOSED"
            ],
            "readOnly": true,
            "type": "string"
          },
          "localFqdn": {
            "description": "Required. Fully qualified domain name that will be used in the private DNS record created for the service attachment.",
            "type": "string"
          },
          "targetServiceAttachmentUri": {
            "description": "Required. URI of the service attachment to connect to. Format: projects/{project}/regions/{region}/serviceAttachments/{service_attachment}",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UserMetadata": {
        "description": "Metadata about users for a Looker instance.",
        "properties": {
          "additionalDeveloperUserCount": {
            "description": "Optional. The number of additional developer users the instance owner has purchased.",
            "format": "int32",
            "type": "integer"
          },
          "additionalStandardUserCount": {
            "description": "Optional. The number of additional standard users the instance owner has purchased.",
            "format": "int32",
            "type": "integer"
          },
          "additionalViewerUserCount": {
            "description": "Optional. The number of additional viewer users the instance owner has purchased.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PATCH",
    "url": {
      "$uri": "https://looker.googleapis.com//v1/{name}{?updateMask,$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "This resource represents a long-running operation that is the result of a network API call.",
        "**Key properties:**",
        {
          "$ul": [
            "**done**: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
            [
              "**error**: The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
              {
                "$ul": [
                  "**code**: The status code, which should be an enum value of google.rpc.Code.",
                  "**details**: A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                  "**message**: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                ]
              }
            ],
            "**metadata**: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
            "**name**: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
            "**response**: The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
