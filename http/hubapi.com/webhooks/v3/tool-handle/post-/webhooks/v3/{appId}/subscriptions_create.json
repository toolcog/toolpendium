{
  "name": "post-_webhooks_v3__appId__subscriptions_create",
  "parameters": {
    "type": "object",
    "properties": {
      "appId": {
        "format": "int32",
        "type": "integer"
      },
      "body": {
        "$ref": "#/$defs/SubscriptionCreateRequest"
      }
    },
    "required": [
      "appId",
      "body"
    ],
    "$defs": {
      "SubscriptionCreateRequest": {
        "description": "New webhook settings for an app.",
        "example": {
          "active": true,
          "eventType": "contact.propertyChange",
          "propertyName": "email"
        },
        "properties": {
          "active": {
            "description": "Determines if the subscription is active or paused. Defaults to false.",
            "example": true,
            "type": "boolean"
          },
          "eventType": {
            "description": "Type of event to listen for. Can be one of `create`, `delete`, `deletedForPrivacy`, or `propertyChange`.",
            "enum": [
              "contact.propertyChange",
              "company.propertyChange",
              "deal.propertyChange",
              "ticket.propertyChange",
              "product.propertyChange",
              "line_item.propertyChange",
              "contact.creation",
              "contact.deletion",
              "contact.privacyDeletion",
              "company.creation",
              "company.deletion",
              "deal.creation",
              "deal.deletion",
              "ticket.creation",
              "ticket.deletion",
              "product.creation",
              "product.deletion",
              "line_item.creation",
              "line_item.deletion",
              "conversation.creation",
              "conversation.deletion",
              "conversation.newMessage",
              "conversation.privacyDeletion",
              "conversation.propertyChange",
              "contact.merge",
              "company.merge",
              "deal.merge",
              "ticket.merge",
              "product.merge",
              "line_item.merge",
              "contact.restore",
              "company.restore",
              "deal.restore",
              "ticket.restore",
              "product.restore",
              "line_item.restore",
              "contact.associationChange",
              "company.associationChange",
              "deal.associationChange",
              "ticket.associationChange",
              "line_item.associationChange"
            ],
            "example": "contact.propertyChange",
            "type": "string"
          },
          "propertyName": {
            "description": "The internal name of the property to monitor for changes. Only applies when `eventType` is `propertyChange`.",
            "example": "email",
            "type": "string"
          }
        },
        "required": [
          "eventType"
        ],
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://api.hubapi.com/webhooks/v3/{appId}/subscriptions"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Complete details for an event subscription.",
        "**Key properties:**",
        {
          "$ul": [
            "**active**: Determines if the subscription is active or paused.",
            "**createdAt**: When this subscription was created. Formatted as milliseconds from the [Unix epoch](#).",
            "**eventType**: Type of event to listen for. Can be one of `create`, `delete`, `deletedForPrivacy`, or `propertyChange`.",
            "**id**: The unique ID of the subscription.",
            "**propertyName**: The internal name of the property being monitored for changes. Only applies when `eventType` is `propertyChange`.",
            "**updatedAt**: When this subscription was last updated. Formatted as milliseconds from the [Unix epoch](#)."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "default": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**category**: The error category",
            "**context**: Context about the error condition",
            "**correlationId**: A unique identifier for the request. Include this value with any error reports or support tickets",
            "**errors**: further information about the error",
            "**links**: A map of link names to associated URIs containing documentation about the error or recommended remediation steps",
            "**message**: A human readable message describing the error along with remediation steps where appropriate",
            "**subCategory**: A specific category that contains more specific detail about the error"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
