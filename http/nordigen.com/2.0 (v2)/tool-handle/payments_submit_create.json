{
  "name": "payments_submit_create",
  "description": "Initiate the payment on bank's side.\n\nComplete the payment and return payment details as a response.",
  "parameters": {
    "type": "object",
    "properties": {
      "id": {
        "description": "Unique entry ID",
        "format": "uuid",
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/PaymentReadRequest"
      }
    },
    "required": [
      "id",
      "body"
    ],
    "$defs": {
      "PaymentReadRequest": {
        "description": "PaymentReadSerializer.",
        "properties": {
          "creditor_account": {
            "description": "Registered creditor account",
            "format": "uuid",
            "type": "string"
          },
          "creditor_object": {
            "allOf": [
              {
                "$ref": "#/$defs/CreditorAccountWriteRequest"
              }
            ],
            "description": "Creditor account"
          },
          "custom_payment_id": {
            "description": "Payment Custom Payment ID",
            "maxLength": 35,
            "minLength": 1,
            "title": "Payment end to end identification.",
            "type": "string"
          },
          "debtor_account": {
            "$ref": "#/$defs/DebtorAccountWriteRequest"
          },
          "description": {
            "default": "GOCARDLESS",
            "description": "Payment description",
            "minLength": 1,
            "type": "string"
          },
          "institution_id": {
            "default": "SWEDBANK_SANDBOX_SANDLV22",
            "description": "Institution ID for Payment",
            "minLength": 1,
            "type": "string",
            "writeOnly": true
          },
          "instructed_amount": {
            "allOf": [
              {
                "$ref": "#/$defs/InstructedAmountRequest"
              }
            ],
            "description": "Instructed amount"
          },
          "payment_product": {
            "allOf": [
              {
                "$ref": "#/$defs/PaymentProductEnum"
              }
            ],
            "default": "ISCT",
            "description": "Payment product\n\n* `T2P` - target-2-payments\n* `SCT` - sepa-credit-transfers\n* `ISCT` - instant-sepa-credit-transfer\n* `CBCT` - cross-border-credit-transfers\n* `BACS` - Back Payment Scheme\n* `CHAPS` - CHAPS Payment Scheme\n* `FPS` - Faster Payment Scheme\n* `SWIFT` - Swift Payment Service\n* `BT` - Balance Transfer\n* `MT` - Money Transfer"
          },
          "redirect": {
            "description": "Redirect URL to your application after payment is done",
            "format": "uri",
            "maxLength": 1024,
            "minLength": 1,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "debtor_account",
          "instructed_amount",
          "redirect"
        ],
        "type": "object"
      },
      "CreditorAccountWriteRequest": {
        "description": "Creditor account write serializer.",
        "properties": {
          "account": {
            "description": "Creditor account type identifier",
            "maxLength": 128,
            "minLength": 1,
            "type": "string"
          },
          "address_country": {
            "$ref": "#/$defs/AddressCountryEnum"
          },
          "address_street": {
            "description": "Creditor account address street",
            "maxLength": 140,
            "minLength": 1,
            "type": "string"
          },
          "agent": {
            "description": "Creditor account BICFI Identifier",
            "maxLength": 128,
            "minLength": 1,
            "type": "string"
          },
          "agent_name": {
            "description": "Creditor account agent name",
            "maxLength": 140,
            "minLength": 1,
            "type": "string"
          },
          "currency": {
            "description": "Creditor account currency",
            "maxLength": 3,
            "minLength": 1,
            "type": "string"
          },
          "institution_id": {
            "description": "an Institution ID for this CreditorAccount",
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "description": "Creditor account name",
            "maxLength": 70,
            "minLength": 1,
            "type": "string"
          },
          "post_code": {
            "description": "Creditor account address post code",
            "maxLength": 30,
            "minLength": 1,
            "type": "string"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/$defs/TypeEnum"
              }
            ],
            "default": "IBAN",
            "description": "Creditor account type\n\n* `IBAN` - IBAN\n* `SCAN` - SortCodeAccountNumber"
          }
        },
        "required": [
          "account",
          "currency",
          "name"
        ],
        "type": "object"
      },
      "AddressCountryEnum": {
        "description": "* `AT` - Austria\n* `BE` - Belgium\n* `BG` - Bulgaria\n* `HR` - Croatia\n* `CY` - Cyprus\n* `CZ` - Czechia\n* `DK` - Denmark\n* `EE` - Estonia\n* `FI` - Finland\n* `FR` - France\n* `DE` - Germany\n* `GR` - Greece\n* `HU` - Hungary\n* `IS` - Iceland\n* `IE` - Ireland\n* `IT` - Italy\n* `LV` - Latvia\n* `LI` - Liechtenstein\n* `LT` - Lithuania\n* `LU` - Luxembourg\n* `MT` - Malta\n* `NL` - Netherlands\n* `NO` - Norway\n* `PL` - Poland\n* `PT` - Portugal\n* `RO` - Romania\n* `SK` - Slovakia\n* `SI` - Slovenia\n* `ES` - Spain\n* `SE` - Sweden\n* `GB` - United Kingdom\n* `US` - United States of America",
        "enum": [
          "AT",
          "BE",
          "BG",
          "HR",
          "CY",
          "CZ",
          "DK",
          "EE",
          "FI",
          "FR",
          "DE",
          "GR",
          "HU",
          "IS",
          "IE",
          "IT",
          "LV",
          "LI",
          "LT",
          "LU",
          "MT",
          "NL",
          "NO",
          "PL",
          "PT",
          "RO",
          "SK",
          "SI",
          "ES",
          "SE",
          "GB",
          "US"
        ],
        "type": "string"
      },
      "TypeEnum": {
        "description": "* `IBAN` - IBAN\n* `SCAN` - SortCodeAccountNumber",
        "enum": [
          "IBAN",
          "SCAN"
        ],
        "type": "string"
      },
      "DebtorAccountWriteRequest": {
        "description": "Debtor account write serializer.",
        "properties": {
          "account": {
            "description": "Debtor account type identifier",
            "maxLength": 128,
            "minLength": 1,
            "type": "string"
          },
          "address_country": {
            "description": "Debtor account address country",
            "maxLength": 2,
            "minLength": 1,
            "type": "string"
          },
          "address_street": {
            "description": "Debtor account address street",
            "maxLength": 140,
            "minLength": 1,
            "type": "string"
          },
          "currency": {
            "description": "Debtor account currency",
            "maxLength": 3,
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "description": "Debtor account name",
            "maxLength": 70,
            "minLength": 1,
            "type": "string"
          },
          "post_code": {
            "description": "Debtor account post code",
            "maxLength": 30,
            "minLength": 1,
            "type": "string"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/$defs/TypeEnum"
              }
            ],
            "default": "IBAN",
            "description": "Debtor account type\n\n* `IBAN` - IBAN\n* `SCAN` - SortCodeAccountNumber"
          },
          "type_number": {
            "description": "Debtor account type identifier",
            "maxLength": 128,
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "InstructedAmountRequest": {
        "description": "InstructedAmountSerializer.",
        "properties": {
          "amount": {
            "description": "Instructed amount",
            "format": "decimal",
            "pattern": "^-?\\d{0,10}(?:\\.\\d{0,2})?$",
            "type": "string"
          },
          "currency": {
            "description": "Instructed amount currency",
            "maxLength": 3,
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "amount",
          "currency"
        ],
        "type": "object"
      },
      "PaymentProductEnum": {
        "description": "* `T2P` - target-2-payments\n* `SCT` - sepa-credit-transfers\n* `ISCT` - instant-sepa-credit-transfer\n* `CBCT` - cross-border-credit-transfers\n* `BACS` - Back Payment Scheme\n* `CHAPS` - CHAPS Payment Scheme\n* `FPS` - Faster Payment Scheme\n* `SWIFT` - Swift Payment Service\n* `BT` - Balance Transfer\n* `MT` - Money Transfer",
        "enum": [
          "T2P",
          "SCT",
          "ISCT",
          "CBCT",
          "BACS",
          "CHAPS",
          "FPS",
          "SWIFT",
          "BT",
          "MT"
        ],
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://ob.nordigen.com/api/v2/payments/{id}/submit/"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "PaymentReadSerializer.",
        "**Key properties:**",
        {
          "$ul": [
            "**creditor_account**: Registered creditor account",
            [
              "**creditor_object**: Creditor account write serializer.",
              {
                "$ul": [
                  "**account**: Creditor account type identifier",
                  "**address_country**: * `AT` - Austria",
                  "**address_street**: Creditor account address street",
                  "**agent**: Creditor account BICFI Identifier",
                  "**agent_name**: Creditor account agent name",
                  "**currency**: Creditor account currency",
                  "**id**: Unique entry ID",
                  "**institution_id**: an Institution ID for this CreditorAccount",
                  "**name**: Creditor account name",
                  "**post_code**: Creditor account address post code",
                  "**type**: Creditor account type (default: IBAN)"
                ]
              }
            ],
            "**custom_payment_id**: Payment Custom Payment ID",
            [
              "**debtor_account**: Debtor account write serializer.",
              {
                "$ul": [
                  "**account**: Debtor account type identifier",
                  "**address_country**: Debtor account address country",
                  "**address_street**: Debtor account address street",
                  "**currency**: Debtor account currency",
                  "**name**: Debtor account name",
                  "**post_code**: Debtor account post code",
                  "**type**: Debtor account type (default: IBAN)",
                  "**type_number**: Debtor account type identifier"
                ]
              }
            ],
            "**description**: Payment description (default: GOCARDLESS)",
            [
              "**instructed_amount**: InstructedAmountSerializer.",
              {
                "$ul": [
                  "**amount**: Instructed amount",
                  "**currency**: Instructed amount currency"
                ]
              }
            ],
            "**payment_id**: Payment ID",
            "**payment_product**: Payment product (default: ISCT)",
            "**payment_status**: Payment end to end identification",
            "**payment_type**: Payment Type",
            "**redirect**: Redirect URL to your application after payment is done"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
