{
  "name": "branchConfigurations_create",
  "description": "Configures the branch for build",
  "parameters": {
    "type": "object",
    "properties": {
      "branch": {
        "type": "string",
        "description": "The branch name"
      },
      "owner_name": {
        "type": "string",
        "description": "The name of the owner"
      },
      "app_name": {
        "type": "string",
        "description": "The name of the application"
      },
      "body": {
        "additionalProperties": {
          "description": "The branch build core properties",
          "properties": {
            "branch": {
              "properties": {
                "commit": {
                  "properties": {
                    "sha": {
                      "description": "The commit SHA",
                      "type": "string"
                    },
                    "url": {
                      "description": "The URL to the commit",
                      "type": "string"
                    }
                  }
                },
                "name": {
                  "description": "The branch name",
                  "type": "string"
                }
              },
              "required": [
                "name",
                "commit"
              ]
            },
            "enabled": {
              "type": "boolean"
            }
          }
        },
        "description": "Parameters of the configuration",
        "properties": {
          "artifactVersioning": {
            "description": "The versioning configuration for artifacts built for this branch",
            "properties": {
              "buildNumberFormat": {
                "enum": [
                  "buildId",
                  "timestamp"
                ],
                "type": "string"
              }
            },
            "type": "object"
          },
          "badgeIsEnabled": {
            "type": "boolean"
          },
          "cloneFromBranch": {
            "description": "A configured branch name to clone from. If provided, all other parameters will be ignored. Only supported in POST requests.",
            "type": "string"
          },
          "signed": {
            "type": "boolean"
          },
          "testsEnabled": {
            "type": "boolean"
          },
          "toolsets": {
            "description": "The branch build configuration for each toolset",
            "properties": {
              "android": {
                "description": "Build configuration for Android projects",
                "properties": {
                  "automaticSigning": {
                    "description": "Whether to apply automatic signing or not",
                    "type": "boolean"
                  },
                  "buildVariant": {
                    "description": "The Android build variant to build",
                    "example": "release",
                    "type": "string"
                  },
                  "gradleWrapperPath": {
                    "description": "Path to the Gradle wrapper script",
                    "example": "android/gradlew",
                    "type": "string"
                  },
                  "isRoot": {
                    "description": "Whether it is the root module or not",
                    "type": "boolean"
                  },
                  "keyAlias": {
                    "description": "The key alias",
                    "type": "string"
                  },
                  "keyPassword": {
                    "description": "The key password",
                    "type": "string"
                  },
                  "keystoreEncoded": {
                    "description": "The keystore encoded value",
                    "type": "string"
                  },
                  "keystoreFilename": {
                    "description": "The name of the keystore file",
                    "type": "string"
                  },
                  "keystorePassword": {
                    "description": "The password of the keystore",
                    "type": "string"
                  },
                  "module": {
                    "description": "The Gradle module to build",
                    "example": "app",
                    "type": "string"
                  },
                  "runLint": {
                    "description": "Whether to run lint checks during the build (default)",
                    "type": "boolean"
                  },
                  "runTests": {
                    "default": true,
                    "description": "Whether to run unit tests during the build (default)",
                    "type": "boolean"
                  }
                }
              },
              "javascript": {
                "description": "Build configuration when React Native, or other JavaScript tech, is part of the build steps",
                "properties": {
                  "packageJsonPath": {
                    "description": "Path to package.json file for the main project, e.g. \"package.json\" or \"myapp/package.json\"",
                    "type": "string"
                  },
                  "reactNativeVersion": {
                    "description": "Version of React Native from package.json files",
                    "type": "string"
                  },
                  "runTests": {
                    "description": "Whether to run Jest unit tests, via npm test, during the build",
                    "type": "boolean"
                  }
                }
              },
              "xamarin": {
                "description": "Build configuration for Xamarin projects",
                "properties": {
                  "args": {
                    "type": "string"
                  },
                  "configuration": {
                    "type": "string"
                  },
                  "isSimBuild": {
                    "type": "boolean"
                  },
                  "monoVersion": {
                    "type": "string"
                  },
                  "p12File": {
                    "type": "string"
                  },
                  "p12Pwd": {
                    "type": "string"
                  },
                  "provProfile": {
                    "type": "string"
                  },
                  "sdkBundle": {
                    "type": "string"
                  },
                  "slnPath": {
                    "type": "string"
                  },
                  "symlink": {
                    "description": "Symlink of the SDK Bundle and Mono installation.\nThe build will use the associated Mono bundled with related Xamarin SDK. If both symlink and monoVersion or sdkBundle are passed, the symlink is taking precedence. If non-existing symlink is passed, the current stable Mono version will be configured for building.\n",
                    "type": "string"
                  }
                }
              },
              "xcode": {
                "description": "Build configuration when Xcode is part of the build steps",
                "properties": {
                  "appExtensionProvisioningProfileFiles": {
                    "items": {
                      "description": "Provisioning profile fetch and store information",
                      "properties": {
                        "fileId": {
                          "description": "File id from secure file storage",
                          "type": "string"
                        },
                        "fileName": {
                          "description": "Name of uploaded provisioning profile",
                          "type": "string"
                        },
                        "targetBundleIdentifier": {
                          "description": "Target the provisioning profile is used to sign",
                          "type": "string"
                        },
                        "uploadId": {
                          "description": "Upload id to App Center File Upload Store",
                          "type": "string"
                        }
                      }
                    },
                    "type": "array"
                  },
                  "archiveConfiguration": {
                    "description": "The build configuration of the target to archive",
                    "type": "string"
                  },
                  "automaticSigning": {
                    "type": "boolean"
                  },
                  "cartfilePath": {
                    "description": "Path to Carthage file, if present",
                    "type": "string"
                  },
                  "certificateEncoded": {
                    "type": "string"
                  },
                  "certificateFileId": {
                    "type": "string"
                  },
                  "certificateFilename": {
                    "type": "string"
                  },
                  "certificatePassword": {
                    "type": "string"
                  },
                  "certificateUploadId": {
                    "type": "string"
                  },
                  "forceLegacyBuildSystem": {
                    "description": "Setting this to true forces the build to use Xcode legacy build system. Otherwise, the setting from workspace settings is used.\nBy default new build system is used if workspace setting is not committed to the repository. Only used for iOS React Native app, with Xcode 10.\n",
                    "type": "boolean"
                  },
                  "podfilePath": {
                    "description": "Path to CococaPods file, if present",
                    "type": "string"
                  },
                  "projectOrWorkspacePath": {
                    "description": "Xcode project/workspace path",
                    "type": "string"
                  },
                  "provisioningProfileEncoded": {
                    "type": "string"
                  },
                  "provisioningProfileFileId": {
                    "type": "string"
                  },
                  "provisioningProfileFilename": {
                    "type": "string"
                  },
                  "provisioningProfileUploadId": {
                    "type": "string"
                  },
                  "scheme": {
                    "type": "string"
                  },
                  "targetToArchive": {
                    "description": "The target id of the selected scheme to archive",
                    "type": "string"
                  },
                  "teamId": {
                    "type": "string"
                  },
                  "xcodeProjectSha": {
                    "description": "The selected pbxproject hash to the repositroy",
                    "type": "string"
                  },
                  "xcodeVersion": {
                    "description": "Xcode version used to build. Available versions can be found in \"/xcode_versions\" API. Default is latest stable version, at the time when the configuration is set.",
                    "type": "string"
                  }
                }
              }
            }
          },
          "trigger": {
            "enum": [
              "continous",
              "continuous",
              "manual"
            ],
            "type": "string"
          }
        }
      }
    },
    "required": [
      "branch",
      "owner_name",
      "app_name",
      "body"
    ]
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://api.appcenter.ms/v0.1/apps/{owner_name}/{app_name}/branches/{branch}/config"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The branch build configuration",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**artifactVersioning**: The versioning configuration for artifacts built for this branch",
              {
                "$ul": [
                  "**buildNumberFormat**"
                ]
              }
            ],
            "**badgeIsEnabled**",
            "**cloneFromBranch**: A configured branch name to clone from. If provided, all other parameters will be ignored. Only supported in POST requests.",
            "**signed**",
            "**testsEnabled**",
            [
              "**toolsets**: The branch build configuration for each toolset",
              {
                "$ul": [
                  [
                    "**android**: Build configuration for Android projects",
                    {
                      "$ul": [
                        "**automaticSigning**: Whether to apply automatic signing or not",
                        "**buildVariant**: The Android build variant to build",
                        "**gradleWrapperPath**: Path to the Gradle wrapper script",
                        "**isRoot**: Whether it is the root module or not",
                        "**keyAlias**: The key alias",
                        "**keyPassword**: The key password",
                        "**keystoreEncoded**: The keystore encoded value",
                        "**keystoreFilename**: The name of the keystore file",
                        "**keystorePassword**: The password of the keystore",
                        "**module**: The Gradle module to build",
                        "**runLint**: Whether to run lint checks during the build (default)",
                        "**runTests**: Whether to run unit tests during the build (default) (default: true)"
                      ]
                    }
                  ],
                  [
                    "**javascript**: Build configuration when React Native, or other JavaScript tech, is part of the build steps",
                    {
                      "$ul": [
                        "**packageJsonPath**: Path to package.json file for the main project, e.g. \"package.json\" or \"myapp/package.json\"",
                        "**reactNativeVersion**: Version of React Native from package.json files",
                        "**runTests**: Whether to run Jest unit tests, via npm test, during the build"
                      ]
                    }
                  ],
                  [
                    "**xamarin**: Build configuration for Xamarin projects",
                    {
                      "$ul": [
                        "**args**",
                        "**configuration**",
                        "**isSimBuild**",
                        "**monoVersion**",
                        "**p12File**",
                        "**p12Pwd**",
                        "**provProfile**",
                        "**sdkBundle**",
                        "**slnPath**",
                        "**symlink**: Symlink of the SDK Bundle and Mono installation."
                      ]
                    }
                  ],
                  [
                    "**xcode**: Build configuration when Xcode is part of the build steps",
                    {
                      "$ul": [
                        "**appExtensionProvisioningProfileFiles**",
                        "**archiveConfiguration**: The build configuration of the target to archive",
                        "**automaticSigning**",
                        "**cartfilePath**: Path to Carthage file, if present",
                        "**certificateEncoded**",
                        "**certificateFileId**",
                        "**certificateFilename**",
                        "**certificatePassword**",
                        "**certificateUploadId**",
                        "**forceLegacyBuildSystem**: Setting this to true forces the build to use Xcode legacy build system. Otherwise, the setting from workspace settings is used.",
                        "**podfilePath**: Path to CococaPods file, if present",
                        "**projectOrWorkspacePath**: Xcode project/workspace path",
                        "**provisioningProfileEncoded**",
                        "**provisioningProfileFileId**",
                        "**provisioningProfileFilename**",
                        "**provisioningProfileUploadId**",
                        "**scheme**",
                        "**targetToArchive**: The target id of the selected scheme to archive",
                        "**teamId**",
                        "**xcodeProjectSha**: The selected pbxproject hash to the repositroy",
                        "**xcodeVersion**: Xcode version used to build. Available versions can be found in \"/xcode_versions\" API. Default is latest stable version, at the time when the configuration is set."
                      ]
                    }
                  ]
                ]
              }
            ],
            "**trigger**",
            "**id**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
