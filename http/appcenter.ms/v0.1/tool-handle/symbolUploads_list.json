{
  "name": "symbolUploads_list",
  "description": "Gets a list of all uploads for the specified application",
  "parameters": {
    "type": "object",
    "properties": {
      "top": {
        "default": 30,
        "format": "int64",
        "maximum": 100,
        "minimum": 1,
        "type": "integer",
        "description": "The maximum number of results to return."
      },
      "status": {
        "enum": [
          "all",
          "uploaded",
          "processed"
        ],
        "type": "string",
        "description": "Filter results by the current status of a symbol upload: * all: all states in the symbol upload process. Includes created, aborted, committed, processing, indexed and failed states * uploaded: all states after package is uploaded. Includes committed, processing, indexed and failed states * processed: symbol upload processing is completed. Includes indexed and failed states.\n"
      },
      "symbol_type": {
        "enum": [
          "AndroidProguard",
          "Apple",
          "Breakpad",
          "JavaScript",
          "UWP"
        ],
        "type": "string",
        "description": "The type of symbols"
      },
      "owner_name": {
        "type": "string",
        "description": "The name of the owner"
      },
      "app_name": {
        "type": "string",
        "description": "The name of the application"
      }
    },
    "required": [
      "owner_name",
      "app_name"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://api.appcenter.ms/v0.1/apps/{owner_name}/{app_name}/symbol_uploads{?top,status,symbol_type}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "List"
        },
        "A set of symbol upload entities",
        "**Key properties:**",
        {
          "$ul": [
            "**app_id**: The application that this symbol upload belongs to",
            "**file_name**: The file name for the symbol upload",
            "**file_size**: The size of the file in Mebibytes. This may be 0 until the status is indexed",
            "**origin**: The origin of the symbol upload",
            "**status**: The current status for the symbol upload",
            "**symbol_type**: The type of the symbol for the current symbol upload",
            "**symbol_upload_id**: The id for the current symbol upload",
            "**symbols_uploaded**: The symbols found in the upload. This may be empty until the status is indexed",
            "**timestamp**: When the symbol upload was committed, or last transaction time if not committed",
            [
              "**user**: User information of the one who intitiated the symbol upload",
              {
                "$ul": [
                  "**display_name**: The full name of the user. Might for example be first and last name",
                  "**email**: The email of the user"
                ]
              }
            ]
          ]
        },
        {
          "$each": "$.body.*",
          "$as": "item",
          "$block": [
            {
              "$h2": "Item"
            },
            {
              "$lang": "json",
              "$code": {
                "$encode": "json",
                "$indent": true,
                "$content": {
                  "$": "$.item"
                }
              }
            }
          ]
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**message**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "500": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**message**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
