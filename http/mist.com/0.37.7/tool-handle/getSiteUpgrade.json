{
  "name": "getSiteUpgrade",
  "description": "Get Site Device Upgrade",
  "parameters": {
    "type": "object",
    "properties": {
      "site_id": {
        "example": "000000ab-00ab-00ab-00ab-0000000000ab",
        "format": "uuid",
        "type": "string"
      },
      "upgrade_id": {
        "example": "000000ab-00ab-00ab-00ab-0000000000ab",
        "format": "uuid",
        "type": "string"
      }
    },
    "required": [
      "site_id",
      "upgrade_id"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://api.mist.com/api/v1/sites/{site_id}/devices/upgrade/{upgrade_id}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "device_upgrade_response"
        },
        "",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**counts**",
              {
                "$ul": [
                  "**download_requested**: count of devices which cloud has requested to download firmware",
                  "**downloaded**: count of apâ€™s which have the firmware downloaded",
                  "**failed**: count of devices which have failed to upgrade",
                  "**reboot_in_progress**: count of devices which are rebooting",
                  "**rebooted**: count of devices which have rebooted successfully",
                  "**scheduled**: count of devices which cloud has scheduled an upgrade for",
                  "**skipped**: count of devices which skipped upgrade since requested version was same as running version. Use force to always upgrade",
                  "**total**: count of devices part of this upgrade",
                  "**upgraded**: count of devices which have upgraded successfully"
                ]
              }
            ],
            "**current_phase**: current canary or rrm phase in progress",
            "**enable_p2p**: whether to allow local AP-to-AP FW upgrade",
            "**force**: whether to force upgrade when requested version is same as running version",
            "**id**: unique id for the upgrade",
            "**max_failure_percentage**: percentage of failures allowed",
            "**max_failures**: number of failures allowed within a canary phase or serial rollout",
            "**reboot_at**: reboot start time in epoch",
            "**start_time**: firmware download start time in epoch",
            "**status**: status upgrade is in",
            "**strategy**: upgrade strategy (default: big_bang)",
            "**target_version**: version to upgrade to",
            "**upgrade_plan**: a dictionary of rrm phase number to devices part of that phase"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
