{
  "name": "updateSiteDevice",
  "description": "Update Device Configuration",
  "parameters": {
    "type": "object",
    "properties": {
      "site_id": {
        "example": "000000ab-00ab-00ab-00ab-0000000000ab",
        "format": "uuid",
        "type": "string"
      },
      "device_id": {
        "example": "000000ab-00ab-00ab-00ab-0000000000ab",
        "format": "uuid",
        "type": "string"
      },
      "body": {
        "example": {
          "name": "conference room"
        },
        "oneOf": [
          {
            "$ref": "#/$defs/device_ap"
          },
          {
            "$ref": "#/$defs/device_switch"
          },
          {
            "$ref": "#/$defs/device_gateway"
          }
        ],
        "description": "Request Body"
      }
    },
    "required": [
      "site_id",
      "device_id"
    ],
    "$defs": {
      "device_ap": {
        "description": "AP",
        "properties": {
          "aeroscout": {
            "$ref": "#/$defs/ap_aeroscout"
          },
          "ble_config": {
            "$ref": "#/$defs/ap_ble"
          },
          "centrak": {
            "properties": {
              "enabled": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "client_bridge": {
            "$ref": "#/$defs/ap_client_bridge"
          },
          "created_time": {
            "readOnly": true,
            "type": "number"
          },
          "deviceprofile_id": {
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "disable_eth1": {
            "default": false,
            "description": "whether to disable eth1 port",
            "type": "boolean"
          },
          "disable_eth2": {
            "default": false,
            "description": "whether to disable eth2 port",
            "type": "boolean"
          },
          "disable_eth3": {
            "default": false,
            "description": "whether to disable eth3 port",
            "type": "boolean"
          },
          "disable_module": {
            "default": false,
            "description": "whether to disable module port",
            "type": "boolean"
          },
          "for_site": {
            "readOnly": true,
            "type": "boolean"
          },
          "height": {
            "description": "height, in meters, optional",
            "type": "number"
          },
          "id": {
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "image1_url": {
            "nullable": true,
            "type": "string"
          },
          "image2_url": {
            "nullable": true,
            "type": "string"
          },
          "image3_url": {
            "nullable": true,
            "type": "string"
          },
          "iot_config": {
            "$ref": "#/$defs/ap_iot"
          },
          "ip_config": {
            "$ref": "#/$defs/ap_ip"
          },
          "led": {
            "$ref": "#/$defs/ap_led"
          },
          "locked": {
            "description": "whether this map is considered locked down",
            "type": "boolean"
          },
          "map_id": {
            "description": "map where the device belongs to",
            "format": "uuid",
            "type": "string"
          },
          "mesh": {
            "$ref": "#/$defs/ap_mesh"
          },
          "modified_time": {
            "readOnly": true,
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "notes": {
            "description": "any notes about this AP",
            "type": "string"
          },
          "ntp_servers": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "org_id": {
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "orientation": {
            "description": "orientation, 0-359, in degrees, up is 0, right is 90.",
            "maximum": 359,
            "minimum": 0,
            "type": "number"
          },
          "poe_passthrough": {
            "default": false,
            "description": "whether to enable power out through module port (for APH) or eth1 (for APL/BT11)",
            "type": "boolean"
          },
          "port_config": {
            "additionalProperties": {
              "$ref": "#/$defs/ap_port_config"
            },
            "description": "eth0 is allowed in mesh relay mode, otherwise eth0 is not allowed here. \nThe property key is the interface(s) name (e.g. \"eth1\" or\"eth1,eth2\")",
            "type": "object"
          },
          "pwr_config": {
            "description": "power related configs",
            "properties": {
              "base": {
                "default": 0,
                "description": "additional power to request during negotiating with PSE over PoE, in mW",
                "type": "number"
              },
              "prefer_usb_over_wifi": {
                "default": false,
                "description": "whether to enable power out to peripheral, meanwhile will reduce power to wifi (only for AP45 at power mode)",
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "radio_config": {
            "$ref": "#/$defs/ap_radio"
          },
          "site_id": {
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "uplink_port_config": {
            "properties": {
              "dot1x": {
                "default": false,
                "description": "Whether to do 802.1x against uplink switch. When enaled, AP cert will be used to do EAP-TLS and the Org's CA Cert has to be provisioned at the switch",
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "usb_config": {
            "$ref": "#/$defs/ap_usb"
          },
          "vars": {
            "description": "a dictionary of name->value, the vars can then be used in Wlans. This can overwrite those from Site Vars",
            "type": "object"
          },
          "x": {
            "description": "x in pixel",
            "type": "number"
          },
          "y": {
            "description": "y in pixel",
            "type": "number"
          }
        },
        "type": "object",
        "x-examples": {
          "device_ap": {
            "aeroscout": {
              "enabled": false,
              "host": "string",
              "locate_connected": true
            },
            "ble_config": {
              "beacon_enabled": true,
              "beacon_rate": 0,
              "beacon_rate_mode": "default",
              "beam_disabled": [
                0
              ],
              "eddystone_uid_adv_power": -100,
              "eddystone_uid_beams": "string",
              "eddystone_uid_enabled": true,
              "eddystone_uid_freq_msec": 0,
              "eddystone_uid_instance": "string",
              "eddystone_uid_namespace": "string",
              "eddystone_url_adv_power": 0,
              "eddystone_url_beams": "string",
              "eddystone_url_enabled": true,
              "eddystone_url_freq_msec": 0,
              "eddystone_url_url": "string",
              "ibeacon_adv_power": -100,
              "ibeacon_beams": "string",
              "ibeacon_enabled": false,
              "ibeacon_freq_msec": 0,
              "ibeacon_major": 0,
              "ibeacon_minor": 0,
              "ibeacon_uuid": "1f89bc00-d0af-481b-82fe-a6629259a39f",
              "power": 9,
              "power_mode": "string"
            },
            "created_time": 0,
            "deviceprofile_id": "366a0f23-8d77-404c-8908-b2e629ba0782",
            "disable_eth1": false,
            "disable_eth2": false,
            "disable_eth3": false,
            "disable_module": false,
            "for_site": true,
            "height": 0,
            "id": "450f6eca-6276-4996-bfeb-53cbbbba6f08",
            "image1_url": "string",
            "image2_url": "string",
            "image3_url": "string",
            "iot_config": {
              "A1": {
                "enabled": false,
                "name": "string",
                "output": true,
                "pullup": "internal",
                "value": 0
              },
              "A2": {
                "enabled": false,
                "name": "string",
                "output": true,
                "pullup": "internal",
                "value": 0
              },
              "A3": {
                "enabled": false,
                "name": "string",
                "output": true,
                "pullup": "internal",
                "value": 0
              },
              "A4": {
                "enabled": false,
                "name": "string",
                "output": true,
                "pullup": "internal",
                "value": 0
              },
              "DI1": {
                "enabled": false,
                "name": "string",
                "pullup": "internal"
              },
              "DI2": {
                "enabled": false,
                "name": "string",
                "pullup": "internal"
              },
              "DO": {
                "enabled": false,
                "name": "string",
                "output": true,
                "pullup": "internal",
                "value": 0
              }
            },
            "ip_config": {
              "dns": [
                "string"
              ],
              "dns_suffix": [
                "string"
              ],
              "gateway": "192.168.0.1",
              "gateway6": "2001:0db8:85a3:0000:0000:8a2e:0370:7334",
              "ip": "192.168.0.1",
              "ip6": "2001:0db8:85a3:0000:0000:8a2e:0370:7334",
              "mtu": 0,
              "netmask": "192.168.0.1",
              "netmask6": "2001:0db8:85a3:0000:0000:8a2e:0370:7334",
              "type": "static",
              "type6": "static",
              "vlan_id": 1
            },
            "led": {
              "brightness": 0,
              "enabled": true
            },
            "locked": false,
            "map_id": "09d2b626-2e4e-45ef-a3c4-e6aeb6c83db1",
            "mesh": {
              "enabled": false,
              "group": 0,
              "role": "base"
            },
            "modified_time": 0,
            "name": "string",
            "notes": "string",
            "ntp_servers": [
              "string"
            ],
            "org_id": "a40f5d1f-d889-42e9-94ea-b9b33585fc6b",
            "orientation": 0,
            "orientation_overwrite": true,
            "poe_passthrough": false,
            "port_config": {
              "property1": {
                "disabled": true,
                "dynamic_vlan": {
                  "default_vlan_id": 0,
                  "enabled": true,
                  "type": "string",
                  "vlans": {
                    "property1": "string",
                    "property2": "string"
                  }
                },
                "enable_mac_auth": true,
                "forwarding": "all",
                "mx_tunnel_id": "5f5cac07-0805-46ea-aafd-5c5729042729",
                "mxtunnel_name": "string",
                "port_auth": "none",
                "port_vlan_id": 0,
                "radius_config": {
                  "acct_interim_interval": 0,
                  "acct_servers": [
                    {
                      "host": "string",
                      "port": 1813,
                      "secret": "string"
                    }
                  ],
                  "auth_servers": [
                    {
                      "host": "string",
                      "port": 1812,
                      "secret": "string"
                    }
                  ],
                  "auth_servers_retries": 3,
                  "auth_servers_timeout": 5,
                  "coa_enabled": false,
                  "coa_port": 3799,
                  "network": "string",
                  "source_ip": "string"
                },
                "radsec": {
                  "enabled": true,
                  "idle_timeout": 0,
                  "server_name": "string",
                  "servers": [
                    {
                      "host": "string",
                      "port": 0
                    }
                  ],
                  "use_mxedge": true
                },
                "vlan_id": 0,
                "vland_ids": [
                  0
                ],
                "wxtunnel_id": "string",
                "wxtunnel_remote_id": "string"
              },
              "property2": {
                "disabled": true,
                "dynamic_vlan": {
                  "default_vlan_id": 0,
                  "enabled": true,
                  "type": "string",
                  "vlans": {
                    "property1": "string",
                    "property2": "string"
                  }
                },
                "enable_mac_auth": true,
                "forwarding": "all",
                "mx_tunnel_id": "5f5cac07-0805-46ea-aafd-5c5729042729",
                "mxtunnel_name": "string",
                "port_auth": "none",
                "port_vlan_id": 0,
                "radius_config": {
                  "acct_interim_interval": 0,
                  "acct_servers": [
                    {
                      "host": "string",
                      "port": 1813,
                      "secret": "string"
                    }
                  ],
                  "auth_servers": [
                    {
                      "host": "string",
                      "port": 1812,
                      "secret": "string"
                    }
                  ],
                  "auth_servers_retries": 3,
                  "auth_servers_timeout": 5,
                  "coa_enabled": false,
                  "coa_port": 3799,
                  "network": "string",
                  "source_ip": "string"
                },
                "radsec": {
                  "enabled": true,
                  "idle_timeout": 0,
                  "server_name": "string",
                  "servers": [
                    {
                      "host": "string",
                      "port": 0
                    }
                  ],
                  "use_mxedge": true
                },
                "vlan_id": 0,
                "vland_ids": [
                  0
                ],
                "wxtunnel_id": "string",
                "wxtunnel_remote_id": "string"
              }
            },
            "pwr_config": {
              "base": 0
            },
            "radio_config": {
              "ant_gain_24": 0,
              "ant_gain_5": 0,
              "ant_gain_6": 0,
              "band_24": {
                "allow_rrm_disable": true,
                "ant_gain": 0,
                "antenna_mode": "default",
                "bandwidth": 20,
                "channel": 0,
                "channels": [
                  0
                ],
                "disabled": true,
                "power": 0,
                "power_max": 0,
                "power_min": 0,
                "preamble": "short",
                "usage": "24"
              },
              "band_24_usage": "24",
              "band_5": {
                "allow_rrm_disable": true,
                "ant_gain": 0,
                "antenna_mode": "default",
                "bandwidth": 20,
                "channel": 0,
                "channels": [
                  0
                ],
                "disabled": true,
                "power": 0,
                "power_max": 0,
                "power_min": 0,
                "preamble": "short",
                "usage": "24"
              },
              "band_5_on_24_radio": {
                "allow_rrm_disable": true,
                "ant_gain": 0,
                "antenna_mode": "default",
                "bandwidth": 20,
                "channel": 0,
                "channels": [
                  0
                ],
                "disabled": true,
                "power": 0,
                "power_max": 0,
                "power_min": 0,
                "preamble": "short",
                "usage": "24"
              },
              "band_6": {
                "allow_rrm_disable": true,
                "ant_gain": 0,
                "antenna_mode": "default",
                "bandwidth": 20,
                "channel": 0,
                "channels": [
                  0
                ],
                "disabled": true,
                "power": 0,
                "power_max": 0,
                "power_min": 0,
                "preamble": "short",
                "usage": "24"
              },
              "scanning_enabled": true
            },
            "site_id": "72771e6a-6f5e-4de4-a5b9-1266c4197811",
            "switch_config": {
              "enabled": false,
              "eth0": {
                "enable_vlan": true,
                "port_vlan_id": 0,
                "vlan_ids": [
                  0
                ]
              },
              "eth1": {
                "enable_vlan": true,
                "port_vlan_id": 0,
                "vlan_ids": [
                  0
                ]
              },
              "eth2": {
                "enable_vlan": true,
                "port_vlan_id": 0,
                "vlan_ids": [
                  0
                ]
              },
              "eth3": {
                "enable_vlan": true,
                "port_vlan_id": 0,
                "vlan_ids": [
                  0
                ]
              },
              "module": {
                "enable_vlan": true,
                "port_vlan_id": 0,
                "vlan_ids": [
                  0
                ]
              },
              "wds": {
                "enable_vlan": true,
                "port_vlan_id": 0,
                "vlan_ids": [
                  0
                ]
              }
            },
            "usb_config": {
              "cacert": "string",
              "channel": 0,
              "enabled": true,
              "host": "string",
              "port": 0,
              "type": "imagotag",
              "verify_cert": true
            },
            "vars": {},
            "x": 0,
            "y": 0
          }
        }
      },
      "ap_aeroscout": {
        "description": "Aeroscout AP settings",
        "properties": {
          "enabled": {
            "default": false,
            "description": "whether to enable aeroscout config",
            "type": "boolean"
          },
          "host": {
            "description": "required if enabled, aeroscout server host",
            "nullable": true,
            "type": "string"
          },
          "locate_connected": {
            "description": "whether to enable the feature to allow wireless clients data received and sent to AES server for location calculation",
            "type": "boolean"
          }
        },
        "type": "object",
        "x-examples": {
          "example-1": {
            "enabled": true,
            "host": "aero.pvt.net"
          }
        }
      },
      "ap_ble": {
        "description": "BLE AP settings",
        "properties": {
          "beacon_enabled": {
            "default": true,
            "description": "whether Mist beacons is enabled",
            "type": "boolean"
          },
          "beacon_rate": {
            "description": "required if `beacon_rate_mode`==`custom`, 1-10, in number-beacons-per-second",
            "type": "integer"
          },
          "beacon_rate_mode": {
            "default": "default",
            "enum": [
              "default",
              "custom"
            ],
            "type": "string"
          },
          "beam_disabled": {
            "description": "list of AP BLE location beam numbers (1-8) which should be disabled at the AP and not transmit location information (where beam 1 is oriented at the top the AP, growing counter-clock-wise, with 9 being the omni BLE beam)",
            "items": {
              "type": "integer"
            },
            "type": "array"
          },
          "eddystone_uid_adv_power": {
            "description": "advertised TX Power, -100 to 20 (dBm), omit this attribute to use default",
            "maximum": 20,
            "minimum": -100,
            "type": "integer"
          },
          "eddystone_uid_beams": {
            "type": "string"
          },
          "eddystone_uid_enabled": {
            "description": "only if `beacon_enabled`==`false`, Whether Eddystone-UID beacon is enabled",
            "type": "boolean"
          },
          "eddystone_uid_freq_msec": {
            "description": "Frequency (msec) of data emmit by Eddystone-UID beacon",
            "type": "integer"
          },
          "eddystone_uid_instance": {
            "description": "Eddystone-UID instance for the device",
            "type": "string"
          },
          "eddystone_uid_namespace": {
            "description": "Eddystone-UID namespace",
            "type": "string"
          },
          "eddystone_url_adv_power": {
            "description": "advertised TX Power, -100 to 20 (dBm), omit this attribute to use default",
            "type": "integer"
          },
          "eddystone_url_beams": {
            "type": "string"
          },
          "eddystone_url_enabled": {
            "description": "only if `beacon_enabled`==`false`, Whether Eddystone-URL beacon is enabled",
            "type": "boolean"
          },
          "eddystone_url_freq_msec": {
            "description": "Frequency (msec) of data emmit by Eddystone-UID beacon",
            "type": "integer"
          },
          "eddystone_url_url": {
            "description": "URL pointed by Eddystone-URL beacon",
            "type": "string"
          },
          "ibeacon_adv_power": {
            "description": "advertised TX Power, -100 to 20 (dBm), omit this attribute to use default",
            "maximum": 20,
            "minimum": -100,
            "type": "integer"
          },
          "ibeacon_beams": {
            "type": "string"
          },
          "ibeacon_enabled": {
            "default": false,
            "description": "can be enabled if `beacon_enabled`==`true`, whether to send iBeacon",
            "type": "boolean"
          },
          "ibeacon_freq_msec": {
            "description": "Frequency (msec) of data emmit for iBeacon",
            "type": "integer"
          },
          "ibeacon_major": {
            "description": "Major number for iBeacon",
            "type": "integer"
          },
          "ibeacon_minor": {
            "description": "Minor number for iBeacon",
            "type": "integer"
          },
          "ibeacon_uuid": {
            "description": "optional, if not specified, the same UUID as the beacon will be used",
            "format": "uuid",
            "type": "string"
          },
          "power": {
            "default": 9,
            "description": "required if `power_mode`==`custom`",
            "maximum": 10,
            "minimum": 1,
            "type": "integer"
          },
          "power_mode": {
            "description": "default / custom",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ap_client_bridge": {
        "description": "",
        "properties": {
          "auth": {
            "properties": {
              "psk": {
                "minLength": 1,
                "type": "string"
              },
              "type": {
                "default": "psk",
                "description": "wpa2-AES/CCMPp is assumed when `type`==`psk`",
                "enum": [
                  "open",
                  "psk"
                ],
                "minLength": 1,
                "type": "string"
              }
            },
            "type": "object"
          },
          "enabled": {
            "description": "when acted as client bridge:\n* only 5G radio can be used\n* will not serve as AP on any radios",
            "type": "boolean"
          },
          "ssid": {
            "minLength": 1,
            "type": "string"
          }
        },
        "type": "object",
        "x-examples": {
          "example-1": {
            "auth": {
              "psk": "foryoureyesonly",
              "type": "psk"
            },
            "enabled": true,
            "ssid": "Uplink-SSID"
          }
        }
      },
      "ap_iot": {
        "description": "IoT AP settings",
        "properties": {
          "A1": {
            "$ref": "#/$defs/ap_iot_output"
          },
          "A2": {
            "$ref": "#/$defs/ap_iot_output"
          },
          "A3": {
            "$ref": "#/$defs/ap_iot_output"
          },
          "A4": {
            "$ref": "#/$defs/ap_iot_output"
          },
          "DI1": {
            "$ref": "#/$defs/ap_iot_input"
          },
          "DI2": {
            "$ref": "#/$defs/ap_iot_input"
          },
          "DO": {
            "$ref": "#/$defs/ap_iot_output"
          }
        },
        "type": "object"
      },
      "ap_iot_output": {
        "description": "IoT output AP settings",
        "properties": {
          "enabled": {
            "default": false,
            "description": "whether to enable a pin",
            "type": "boolean"
          },
          "name": {
            "description": "optional; descriptive pin name",
            "type": "string"
          },
          "output": {
            "description": "whether the pin is configured as an output. DO and A1-A4 can be repurposed by changing",
            "type": "boolean"
          },
          "pullup": {
            "description": "the type of pull-up the pin uses (internal, external, none), default none",
            "enum": [
              "internal",
              "external",
              "none"
            ],
            "type": "string"
          },
          "value": {
            "description": "output pin signal level, default 0",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ap_iot_input": {
        "description": "IoT Input AP settings",
        "properties": {
          "enabled": {
            "default": false,
            "description": "whether to enable a pin",
            "type": "boolean"
          },
          "name": {
            "description": "optional; descriptive pin name",
            "type": "string"
          },
          "pullup": {
            "description": "the type of pull-up the pin uses (internal, external, none), default none",
            "enum": [
              "internal",
              "external",
              "none"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "ap_ip": {
        "description": "IP AP settings",
        "properties": {
          "dns": {
            "description": "if `type`==`static`",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "dns_suffix": {
            "description": "required if `type`==`static`",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "gateway": {
            "description": "required if `type`==`static`",
            "format": "ipv4",
            "type": "string"
          },
          "gateway6": {
            "format": "ipv6",
            "type": "string"
          },
          "ip": {
            "description": "required if `type`==`static`",
            "format": "ipv4",
            "type": "string"
          },
          "ip6": {
            "format": "ipv6",
            "type": "string"
          },
          "mtu": {
            "type": "integer"
          },
          "netmask": {
            "description": "required if `type`==`static`",
            "format": "ipv4",
            "type": "string"
          },
          "netmask6": {
            "format": "ipv6",
            "type": "string"
          },
          "type": {
            "description": "static / dhcp (default)",
            "enum": [
              "static",
              "dhcp"
            ],
            "type": "string"
          },
          "type6": {
            "enum": [
              "static",
              "dhcp"
            ],
            "type": "string"
          },
          "vlan_id": {
            "default": 1,
            "description": "management vlan id, default is 1 (untagged)",
            "type": "integer"
          }
        },
        "type": "object",
        "x-examples": {
          "example-1": {
            "dns": [
              "string"
            ],
            "dns_suffix": [
              "string"
            ],
            "gateway": "192.168.0.1",
            "gateway6": "2001:0db8:85a3:0000:0000:8a2e:0370:7334",
            "ip": "192.168.0.1",
            "ip6": "2001:0db8:85a3:0000:0000:8a2e:0370:7334",
            "mtu": 0,
            "netmask": "192.168.0.1",
            "netmask6": "2001:0db8:85a3:0000:0000:8a2e:0370:7334",
            "type": "static",
            "type6": "static",
            "vlan_id": 1
          }
        }
      },
      "ap_led": {
        "description": "LED AP settings",
        "properties": {
          "brightness": {
            "type": "integer"
          },
          "enabled": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ap_mesh": {
        "description": "Mesh AP settings",
        "properties": {
          "enabled": {
            "default": false,
            "description": "whether mesh is enabled on this AP",
            "type": "boolean"
          },
          "group": {
            "description": "mesh group, base AP(s) will only allow remote AP(s) in the same mesh group to join, 1-9, optional",
            "nullable": true,
            "type": "integer"
          },
          "role": {
            "description": "base / remote",
            "enum": [
              "base",
              "remote"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "ap_port_config": {
        "description": "",
        "properties": {
          "additional_vlan_ids": {
            "description": "additional VLAN IDs, only valid in mesh base mode",
            "items": {
              "type": "integer"
            },
            "type": "array"
          },
          "disabled": {
            "type": "boolean"
          },
          "dynamic_vlan": {
            "description": "optional dynamic vlan",
            "properties": {
              "default_vlan_id": {
                "type": "integer"
              },
              "enabled": {
                "type": "boolean"
              },
              "type": {
                "type": "string"
              },
              "vlans": {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "enable_mac_auth": {
            "description": "",
            "type": "boolean"
          },
          "forwarding": {
            "default": "all",
            "enum": [
              "all",
              "limited",
              "wxtunnel",
              "mxtunnel",
              "site_mxedge"
            ],
            "type": "string"
          },
          "mx_tunnel_id": {
            "description": "if `forwarding`==`mxtunnel`, vlan_ids comes from mxtunnel",
            "format": "uuid",
            "type": "string"
          },
          "mxtunnel_name": {
            "description": "if `forwarding`==`site_mxedge`, vlan_ids comes from site_mxedge (`mxtunnels` under site setting)",
            "type": "string"
          },
          "port_auth": {
            "default": "none",
            "description": "When doing port auth",
            "enum": [
              "none",
              "dot1x"
            ],
            "type": "string"
          },
          "port_vlan_id": {
            "description": "if `forwrding`==`limited`",
            "type": "integer"
          },
          "radius_config": {
            "$ref": "#/$defs/junos_radius_config"
          },
          "radsec": {
            "$ref": "#/$defs/radsec"
          },
          "vlan_id": {
            "description": "optional to specify the vlan id for a tunnel if forwarding is for `wxtunnel`, `mxtunnel` or `site_mxedge`.\n* if vlan_id is not specified then it will use first one in vlan_ids[] of the mxtunnel.\n* if forwarding == site_mxedge, vlan_ids comes from site_mxedge (`mxtunnels` under site setting)",
            "type": "integer"
          },
          "vland_ids": {
            "description": "if `forwrding`==`limited`",
            "items": {
              "type": "integer"
            },
            "type": "array"
          },
          "wxtunnel_id": {
            "description": "if `forwarding`==`wxtunnel`, the port is bridged to the vlan of the session",
            "type": "string"
          },
          "wxtunnel_remote_id": {
            "description": "if `forwarding`==`wxtunnel`, the port is bridged to the vlan of the session",
            "type": "string"
          }
        },
        "title": "ap_port_config",
        "type": "object",
        "x-examples": {
          "example-1": {
            "disabled": true,
            "dynamic_vlan": {
              "default_vlan_id": 1,
              "enabled": true,
              "type": "string",
              "vlans": {
                "property1": "string",
                "property2": "string"
              }
            },
            "enable_mac_auth": true,
            "forwarding": "all",
            "mx_tunnel_id": "string",
            "mxtunnel_name": "string",
            "port_auth": "none",
            "port_vlan_id": 1,
            "radius_config": {
              "acct_interim_interval": 0,
              "acct_servers": [
                {
                  "host": "string",
                  "port": 0,
                  "secret": "string"
                }
              ],
              "auth_servers": [
                {
                  "host": "string",
                  "port": 0,
                  "secret": "string"
                }
              ],
              "auth_servers_retries": 0,
              "auth_servers_timeout": 0
            },
            "radsec": {
              "enabled": true,
              "server_name": "string",
              "servers": [
                {
                  "host": "string",
                  "port": 0
                }
              ],
              "use_mxedge": true
            },
            "vland_ids": [
              0
            ],
            "wxtunnel_id": "string",
            "wxtunnel_remote_id": "string"
          }
        }
      },
      "junos_radius_config": {
        "description": "Junos Radius config",
        "properties": {
          "acct_interim_interval": {
            "default": 0,
            "description": "how frequently should interim accounting be reported, 60-65535. default is 0 (use one specified in Access-Accept request from RADIUS Server). Very frequent messages can affect the performance of the radius server, 600 and up is recommended when enabled",
            "maximum": 65535,
            "minimum": 0,
            "type": "integer"
          },
          "acct_servers": {
            "items": {
              "$ref": "#/$defs/acct_server"
            },
            "minItems": 1,
            "type": "array",
            "uniqueItems": true
          },
          "auth_servers": {
            "items": {
              "$ref": "#/$defs/auth_server"
            },
            "minItems": 1,
            "type": "array",
            "uniqueItems": true
          },
          "auth_servers_retries": {
            "default": 3,
            "description": "radius auth session retries",
            "type": "integer"
          },
          "auth_servers_timeout": {
            "default": 5,
            "description": "radius auth session timeout",
            "type": "integer"
          },
          "coa_enabled": {
            "default": false,
            "type": "boolean"
          },
          "coa_port": {
            "default": 3799,
            "type": "integer"
          },
          "network": {
            "description": "use `network`or `source_ip`\nwhich network the RADIUS server resides, if there's static IP for this network, we'd use it as source-ip",
            "type": "string"
          },
          "source_ip": {
            "description": "use `network`or `source_ip`",
            "type": "string"
          }
        },
        "type": "object",
        "x-examples": {
          "example-1": {
            "acct_interim_interval": 0,
            "acct_servers": [
              {
                "host": "1.2.3.4",
                "port": 1812,
                "secret": "testing123"
              }
            ],
            "auth_servers": [
              {
                "host": "1.2.3.4",
                "port": 1812,
                "secret": "testing123"
              },
              {
                "host": "radius.internal",
                "port": 1812,
                "secret": "testing123"
              }
            ],
            "auth_servers_retries": 3,
            "auth_servers_timeout": 5
          }
        }
      },
      "acct_server": {
        "description": "",
        "properties": {
          "host": {
            "description": "ip / hostname of RADIUS server",
            "type": "string"
          },
          "keywrap_enabled": {
            "type": "boolean"
          },
          "keywrap_format": {
            "type": "string"
          },
          "keywrap_kek": {
            "type": "string"
          },
          "keywrap_mack": {
            "type": "string"
          },
          "port": {
            "default": 1813,
            "description": "Acct port of RADIUS server",
            "type": "integer"
          },
          "secret": {
            "description": "secret of RADIUS server",
            "type": "string"
          }
        },
        "required": [
          "host",
          "port",
          "secret"
        ],
        "type": "object"
      },
      "auth_server": {
        "description": "Authentication Server",
        "properties": {
          "host": {
            "description": "ip / hostname of RADIUS server",
            "type": "string"
          },
          "keywrap_enabled": {
            "type": "boolean"
          },
          "keywrap_format": {
            "type": "string"
          },
          "keywrap_kek": {
            "type": "string"
          },
          "keywrap_mack": {
            "type": "string"
          },
          "port": {
            "default": 1812,
            "description": "Auth port of RADIUS server",
            "type": "integer"
          },
          "secret": {
            "description": "secret of RADIUS server",
            "type": "string"
          }
        },
        "required": [
          "host",
          "port",
          "secret"
        ],
        "type": "object"
      },
      "radsec": {
        "description": "Radsec settings",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "idle_timeout": {
            "type": "integer"
          },
          "mxcluster_ids": {
            "description": "To use Org mxedges when this WLAN does not use mxtunnel, specify their mxcluster_ids.\nOrg mxedge(s) identified by mxcluster_ids",
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "server_name": {
            "description": "name of the server to verify (against the cacerts in Org Setting). Only if not Mist Edge.",
            "type": "string"
          },
          "servers": {
            "description": "List of Radsec Servers. Only if not Mist Edge.",
            "items": {
              "properties": {
                "host": {
                  "type": "string"
                },
                "port": {
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "type": "array",
            "uniqueItems": true
          },
          "use_mxedge": {
            "description": "use mxedge(s) as radsecproxy",
            "type": "boolean"
          },
          "use_site_mxedge": {
            "default": false,
            "description": "To use Site mxedges when this WLAN does not use mxtunnel",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ap_radio": {
        "description": "Radio AP settings",
        "properties": {
          "allow_rrm_disable": {
            "default": false,
            "type": "boolean"
          },
          "ant_gain_24": {
            "description": "antenna gain for 2.4G - for models with external antenna only",
            "type": "integer"
          },
          "ant_gain_5": {
            "description": "antenna gain for 5G - for models with external antenna only",
            "type": "integer"
          },
          "ant_gain_6": {
            "description": "antenna gain for 6G - for models with external antenna only",
            "type": "integer"
          },
          "antenna_mode": {
            "default": "default",
            "enum": [
              "default",
              "1x1",
              "2x2",
              "3x3",
              "4x4"
            ],
            "type": "string"
          },
          "band_24": {
            "$ref": "#/$defs/ap_radio_band"
          },
          "band_24_usage": {
            "default": "24",
            "description": "if `band_24_usage`==`5`, by default, band_5 properties is used, if specific channel/bandwidth/power/... is desired, use the \"band_5_on_24_radio\"",
            "enum": [
              "24",
              "5",
              "auto",
              "6"
            ],
            "type": "string"
          },
          "band_5": {
            "$ref": "#/$defs/ap_radio_band"
          },
          "band_5_on_24_radio": {
            "$ref": "#/$defs/ap_radio_band"
          },
          "band_6": {
            "$ref": "#/$defs/ap_radio_band"
          },
          "scanning_enabled": {
            "description": "whether scanning radio is enabled",
            "type": "boolean"
          }
        },
        "type": "object",
        "x-examples": {
          "example-1": {
            "ant_gain_24": 0,
            "ant_gain_5": 0,
            "ant_gain_6": 0,
            "band_24": {
              "allow_rrm_disable": true,
              "ant_gain": 0,
              "antenna_mode": "default",
              "bandwidth": 20,
              "channel": 0,
              "channels": [
                0
              ],
              "disabled": true,
              "power": 0,
              "power_max": 0,
              "power_min": 0,
              "preamble": "short",
              "usage": "24"
            },
            "band_24_usage": "24",
            "band_5": {
              "allow_rrm_disable": true,
              "ant_gain": 0,
              "antenna_mode": "default",
              "bandwidth": 20,
              "channel": 0,
              "channels": [
                0
              ],
              "disabled": true,
              "power": 0,
              "power_max": 0,
              "power_min": 0,
              "preamble": "short",
              "usage": "24"
            },
            "band_5_on_24_radio": {
              "allow_rrm_disable": true,
              "ant_gain": 0,
              "antenna_mode": "default",
              "bandwidth": 20,
              "channel": 0,
              "channels": [
                0
              ],
              "disabled": true,
              "power": 0,
              "power_max": 0,
              "power_min": 0,
              "preamble": "short",
              "usage": "24"
            },
            "band_6": {
              "allow_rrm_disable": true,
              "ant_gain": 0,
              "antenna_mode": "default",
              "bandwidth": 20,
              "channel": 0,
              "channels": [
                0
              ],
              "disabled": true,
              "power": 0,
              "power_max": 0,
              "power_min": 0,
              "preamble": "short",
              "usage": "24"
            },
            "scanning_enabled": true
          }
        }
      },
      "ap_radio_band": {
        "description": "Radio Band AP settings",
        "properties": {
          "allow_rrm_disable": {
            "type": "boolean"
          },
          "ant_gain": {
            "nullable": true,
            "type": "integer"
          },
          "antenna_mode": {
            "default": "default",
            "enum": [
              "default",
              "1x1",
              "2x2",
              "3x3",
              "4x4"
            ],
            "type": "string"
          },
          "bandwidth": {
            "description": "channel width for the band, 20 / 40 / 80 / 160, 80 is only applicable for band_5 and 160 is only for band_6, ignored if channel is 0",
            "enum": [
              20,
              40,
              80
            ],
            "type": "integer"
          },
          "channel": {
            "description": "For Device. (primary) channel for the band, 0 means using the Site Setting",
            "nullable": true,
            "type": "integer"
          },
          "channels": {
            "description": "For RFTemplates. List of channels, null or empty array means auto",
            "items": {
              "type": "integer"
            },
            "nullable": true,
            "type": "array"
          },
          "disabled": {
            "description": "whether to disable the radio",
            "type": "boolean"
          },
          "power": {
            "description": "TX power of the radio. For Devices, 0 mean using the Site Setting",
            "nullable": true,
            "type": "integer"
          },
          "power_max": {
            "description": "when power=0, max tx power to use, HW-specific values will be used if not set",
            "nullable": true,
            "type": "integer"
          },
          "power_min": {
            "description": "when power=0, min tx power to use, HW-specific values will be used if not set",
            "nullable": true,
            "type": "integer"
          },
          "preamble": {
            "default": "short",
            "enum": [
              "short",
              "long",
              "auto"
            ],
            "type": "string"
          },
          "usage": {
            "default": "24",
            "description": "for band_24 radio",
            "enum": [
              "24",
              "5",
              "rrm"
            ],
            "type": "string"
          }
        },
        "type": "object",
        "x-examples": {
          "example-1": {
            "allow_rrm_disable": true,
            "ant_gain": 0,
            "antenna_mode": "default",
            "bandwidth": 20,
            "channel": 0,
            "channels": [
              0
            ],
            "disabled": true,
            "power": 0,
            "power_max": 0,
            "power_min": 0,
            "preamble": "short",
            "usage": "24"
          }
        }
      },
      "ap_usb": {
        "description": "USB AP settings",
        "properties": {
          "cacert": {
            "description": "only if `type`==`imagotag`",
            "nullable": true,
            "type": "string"
          },
          "channel": {
            "description": "only if `type`==`imagotag`\nchannel selection, not needed by default, required for manual channel override only",
            "type": "integer"
          },
          "enabled": {
            "description": "whether to enable any usb config",
            "type": "boolean"
          },
          "host": {
            "description": "only if `type`==`imagotag`",
            "type": "string"
          },
          "imagotag_type": {
            "default": "auto",
            "description": "only if `type`==`imagotag`\nif native imagotag is enabled, BLE will be disabled automatically",
            "enum": [
              "auto",
              "usb",
              "native"
            ],
            "type": "string"
          },
          "port": {
            "default": 0,
            "description": "only if `type`==`imagotag`",
            "type": "integer"
          },
          "type": {
            "description": "usb config type",
            "enum": [
              "imagotag",
              "solum",
              "hanshow"
            ],
            "type": "string"
          },
          "verify_cert": {
            "description": "only if `type`==`imagotag`, whether to turn on SSL verification",
            "type": "boolean"
          },
          "vlan_id": {
            "default": 1,
            "description": "only if `type`==`solum` or `type`==`hanshow`",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "device_switch": {
        "description": "Switch Configuration\nYou can configure `port_usages` and `networks` settings at the device level, but most of the time it's better use the Site Setting to achieve better consistency and be able to re-use the same settings across switches entries defined here will \"replace\" those defined in Site Setting/Network Template",
        "properties": {
          "acl_policies": {
            "items": {
              "$ref": "#/$defs/junos_acl_policies"
            },
            "type": "array"
          },
          "acl_tags": {
            "additionalProperties": {
              "$ref": "#/$defs/junos_acl_tags"
            },
            "description": "ACL Tags to identify traffic source or destination. Key name is the tag name",
            "properties": {
              "any": {
                "description": "implicit, cannot override",
                "properties": {
                  "type": {
                    "default": "a",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "additional_config_cmds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "created_time": {
            "readOnly": true,
            "type": "number"
          },
          "deviceprofile_id": {
            "format": "uuid",
            "type": "string"
          },
          "dhcp_config": {
            "$ref": "#/$defs/junos_dhcpd"
          },
          "dhcp_snooping": {
            "$ref": "#/$defs/junos_dhcp_snooping"
          },
          "disable_auto_config": {
            "default": false,
            "description": "for a claimed switch, we control the configs by default. This option (disables the behavior)",
            "type": "boolean"
          },
          "dns_servers": {
            "description": "Global dns settings. To keep compatibility, dns settings in `ip_config` and `oob_ip_config` will overwrite this setting",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "dns_suffix": {
            "description": "Global dns settings. To keep compatibility, dns settings in `ip_config` and `oob_ip_config` will overwrite this setting",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "evpn_config": {
            "$ref": "#/$defs/junos_evpn_config"
          },
          "extra_routes": {
            "additionalProperties": {
              "properties": {
                "via": {
                  "description": "next-hop IP Address",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The property key is the network name or a CIDR",
            "type": "object"
          },
          "id": {
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "image1_url": {
            "nullable": true,
            "type": "string"
          },
          "image2_url": {
            "nullable": true,
            "type": "string"
          },
          "image3_url": {
            "nullable": true,
            "type": "string"
          },
          "ip_config": {
            "$ref": "#/$defs/junos_ip_config"
          },
          "managed": {
            "default": false,
            "description": "for an adopted switch, we don’t overwrite their existing configs automatically",
            "type": "boolean"
          },
          "modified_time": {
            "readOnly": true,
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "networks": {
            "$ref": "#/$defs/junos_networks"
          },
          "notes": {
            "type": "string"
          },
          "ntp_servers": {
            "description": "list of NTP servers specific to this device. By default, those in Site Settings will be used",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "oob_ip_config": {
            "$ref": "#/$defs/junos_oob_ip_config"
          },
          "org_id": {
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "ospf_config": {
            "$ref": "#/$defs/junos_ospf_config"
          },
          "other_ip_configs": {
            "additionalProperties": {
              "$ref": "#/$defs/junos_other_ip_configs"
            },
            "description": "The property key is the network name",
            "type": "object"
          },
          "port_config": {
            "additionalProperties": {
              "$ref": "#/$defs/junos_port_config"
            },
            "description": "The property key is the port name or range (e.g. \"ge-0/0/0-10\")",
            "type": "object"
          },
          "port_mirroring": {
            "properties": {
              "port_mirror": {
                "$ref": "#/$defs/junos_port_mirror"
              }
            },
            "type": "object"
          },
          "port_usages": {
            "additionalProperties": {
              "$ref": "#/$defs/junos_port_usages"
            },
            "description": "The property key is the port profile name",
            "properties": {
              "dynamic": {
                "$ref": "#/$defs/junos_port_usages_dynamic"
              }
            },
            "type": "object"
          },
          "radius_config": {
            "$ref": "#/$defs/junos_radius_config"
          },
          "role": {
            "default": "access",
            "enum": [
              "access",
              "aggregation"
            ],
            "type": "string"
          },
          "router_id": {
            "description": "used for OSPF / BGP / EVPN",
            "type": "string"
          },
          "site_id": {
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "switch_mgmt": {
            "properties": {
              "config_revert_timer": {
                "default": 10,
                "description": "rollback timer for commit confirmed",
                "maximum": 30,
                "minimum": 1,
                "type": "integer"
              },
              "protect_re": {
                "description": "restrict inbound-traffic to host\nwhen enabled, all traffic that is not essential to our operation will be dropped \ne.g. ntp / dns / traffic to mist will be allowed by default, if dhcpd is enabled, we'll make sure it works",
                "properties": {
                  "allowed_services": {
                    "description": "optionally, services we'll allow",
                    "items": {
                      "example": "e",
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "custom": {
                    "items": {
                      "properties": {
                        "port_range": {
                          "default": "0",
                          "example": "80,1035-1040",
                          "type": "string"
                        },
                        "protocol": {
                          "default": "any",
                          "enum": [
                            "tcp",
                            "udp",
                            "icmp",
                            "any"
                          ],
                          "example": "tcp",
                          "type": "string"
                        },
                        "subnets": {
                          "items": {
                            "example": "10.1.2.0/24",
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "enabled": {
                    "type": "boolean"
                  },
                  "trusted_hosts": {
                    "description": "optionally, host/subnets we'll allow traffic to/from",
                    "items": {
                      "example": "10.242.3.0/24",
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "root_password": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "vars": {
            "description": "a dictionary of name->value, the vars can then be used in Wlans. This can overwrite those from Site Vars",
            "type": "object"
          },
          "virtual_chassis": {
            "description": "required for preprovisioned Virtual Chassis",
            "properties": {
              "members": {
                "description": "list of Virtual Chassis mem",
                "items": {
                  "properties": {
                    "mac": {
                      "description": "fpc0, same as the mac of device_id",
                      "example": "aff827549235",
                      "type": "string"
                    },
                    "vc_role": {
                      "description": "Both vc_role master and backup will be matched to routing-engine role in Junos preprovisioned VC config",
                      "enum": [
                        "master",
                        "linecard",
                        "backup"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "preprovisioned": {
                "default": false,
                "description": "to configure whether the VC is preprovisioned or nonprovisioned",
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "vrf_config": {
            "$ref": "#/$defs/junos_vrf_config"
          },
          "vrrp_config": {
            "$ref": "#/$defs/junos_vrrp_config"
          }
        },
        "type": "object",
        "x-examples": {
          "device-switch-settings": {
            "additional_config_cmds": [
              "set snmp community public"
            ],
            "deviceprofile_id": "6f4bf402-45f9-2a56-6c8b-7f83d3bc98e9",
            "disable_auto_config": false,
            "extra_routes": [
              {
                "dest": "172.16.3.0/24",
                "via": "10.2.1.1"
              },
              {
                "dest": "it_mgmt",
                "via": "10.2.1.1"
              }
            ],
            "image1_url": "https://url/to/image.png",
            "ip_config": {
              "dns": [
                "8.8.8.8",
                "4.4.4.4"
              ],
              "dns_suffix": [
                ".mist.local",
                ".mist.com"
              ],
              "gateway": "10.2.1.254",
              "ip": "10.2.1.10",
              "netmask": "255.255.255.0",
              "network": "default",
              "type": "static"
            },
            "managed": false,
            "name": "corp-a135",
            "notes": "slightly off center",
            "ntp_servers": [
              "pool.ntp.org",
              "time.google.com"
            ],
            "oob_ip_config": {},
            "ospf": {
              "0": {
                "networks": [
                  "corp",
                  "iot"
                ],
                "nssa": false,
                "stub": false
              }
            },
            "other_ip_configs": {
              "guest": {
                "ip": "10.3.3.1",
                "netmask": "255.255.255.0",
                "type": "static"
              }
            },
            "port_config": {
              "*": {
                "usage": "default"
              },
              "ge-0/0/0": {
                "aggregated": true,
                "description": "to dist-sw-01",
                "usage": "uplink"
              },
              "ge-0/0/1": {
                "dynamic_usage": "dynamic",
                "usage": "default"
              },
              "ge-0/0/8-16,ge-1/0/0-47": {
                "usage": "ap"
              }
            },
            "radius_config": {
              "acct_interim_interval": 0,
              "acct_servers": [
                {
                  "host": "1.2.3.4",
                  "port": 1812,
                  "secret": "testing123"
                }
              ],
              "auth_servers": [
                {
                  "host": "1.2.3.4",
                  "port": 1812,
                  "secret": "testing123"
                },
                {
                  "host": "radius.internal",
                  "port": 1812,
                  "secret": "testing123"
                }
              ],
              "auth_servers_retries": 3,
              "auth_servers_timeout": 5
            },
            "role": "access",
            "router_id": "10.2.1.10",
            "vars": {
              "RADIUS_IP1": "172.31.2.5",
              "RADIUS_SECRET": "11s64632d"
            }
          }
        }
      },
      "junos_acl_policies": {
        "description": "- for GBP-based policy, all src_tags and dst_tags have to be gbp-based\n- for ACL-based policy, `network` is required in either the source or destination so that we know where to attach the policy to",
        "properties": {
          "allow_dst_tags": {
            "description": "- for GBP-based policy, all src_tags and dst_tags have to be gbp-based\n- for ACL-based policy, `network` is required in either the source or destination so that we know where to attach the policy to",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "deny_dst_tags": {
            "description": "- for GBP-based policy, all src_tags and dst_tags have to be gbp-based\n- for ACL-based policy, `network` is required in either the source or destination so that we know where to attach the policy to",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "name": {
            "type": "string"
          },
          "src_tags": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object",
        "x-examples": {
          "Example 1": {
            "action": "allow",
            "dst_tags": [
              "printer"
            ],
            "name": "guest access to printer",
            "src_tags": [
              "guest"
            ]
          }
        },
        "x-stoplight": {
          "id": "78da34fa64a5f"
        }
      },
      "junos_acl_tags": {
        "properties": {
          "gbp_tag": {
            "description": "required if\n- `type`==`dynamic_gbp` (gbp_tag received from RADIUS)\n- `type`==`static_gbp` (applying gbp tag against matching conditions)",
            "type": "number"
          },
          "macs": {
            "description": "required if \n- `type`==`mac`\n- `type`==`static_gbp` if from matching mac",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "network": {
            "description": "if:\n- `type`==`mac` (optional. default is `any`)\n- `type`==`subnet` (optional. default is `any`)\n- `type`==`network`\n- `type`==`resource` (optional. default is `any`)\n- `type`==`static_gbp` if from matching network (vlan)",
            "type": "string"
          },
          "radius_group": {
            "description": "required if \n- `type`==`radius_group` \n- `type`==`static_gbp` if from matching radius_group",
            "type": "string"
          },
          "specs": {
            "description": "if `type`==`resource`\nempty means unrestricted, i.e. any",
            "items": {
              "properties": {
                "port_range": {
                  "default": 0,
                  "description": "matched dst port, \"0\" means any",
                  "type": "integer"
                },
                "protocol": {
                  "default": "any",
                  "description": "`tcp` / `udp` / `icmp` / `gre` / `any` / `:protocol_number`. `protocol_number` is between 1-254",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "subnets": {
            "description": "if \n- `type`==`subnet` \n- `type`==`resource` (optional. default is `any`)\n- `type`==`static_gbp` if from matching subnet",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "type": {
            "enum": [
              "mac",
              "subnet",
              "network",
              "radius_group",
              "any",
              "resource",
              "dynamic_gbp",
              "static_gbp"
            ],
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "type": "object",
        "x-examples": {
          "any": {
            "type": "any"
          },
          "dynamic_gbp": {
            "gbp_tag": 100,
            "type": "dynamic_gbp"
          },
          "mac": {
            "macs": [
              "010203040506",
              "abcdef*"
            ],
            "network": "iot",
            "type": "mac"
          },
          "network": {
            "network": "guest",
            "type": "network"
          },
          "radius_group": {
            "radius_group": "VIP",
            "type": "radius_group"
          },
          "resource": {
            "network": "dmz",
            "specs": [
              {
                "port_range": 80,
                "protocol": "tcp"
              }
            ],
            "subnets": [
              "192.168.0.5"
            ],
            "type": "resource"
          },
          "static_gbp": {
            "gbp_tag": 100,
            "macs": [
              "010203040506",
              "abcdef*"
            ],
            "network": "employee",
            "radius_group": "VIP",
            "subnets": [
              "192.168.0.0/16"
            ],
            "type": "static_gbp"
          },
          "subnet": {
            "network": "lan",
            "subnets": [
              "192.168.1.30/32"
            ],
            "type": "subnet"
          }
        }
      },
      "junos_dhcpd": {
        "additionalProperties": {
          "properties": {
            "dns_servers": {
              "description": "if `type`==`local` - optional, if not defined, system one will be used",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "dns_suffix": {
              "description": "if `type`==`local` - optional, if not defined, system one will be used",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "fixed_bindings": {
              "additionalProperties": {
                "properties": {
                  "ip": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "description": "The property key is the MAC Address",
              "type": "object"
            },
            "gateway": {
              "description": "if `type`==`local` - optional, `ip` will be used if not provided",
              "type": "string"
            },
            "ip_end": {
              "description": "if `type`==`local`",
              "type": "string"
            },
            "ip_start": {
              "description": "if `type`==`local`",
              "type": "string"
            },
            "options": {
              "additionalProperties": {
                "properties": {
                  "type": {
                    "enum": [
                      "string",
                      "boolean",
                      "ip",
                      "hex",
                      "int16",
                      "int32",
                      "uint16",
                      "uint32"
                    ],
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "description": "Property key is the DHCP option number",
              "type": "object"
            },
            "servers": {
              "description": "if `type`==`relay`",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "type": {
              "default": "local",
              "description": "DHCP Server (local) or DHCP Relay (relay)",
              "enum": [
                "local",
                "relay"
              ],
              "type": "string"
            },
            "vendor_encapulated": {
              "additionalProperties": {
                "properties": {
                  "type": {
                    "enum": [
                      "string",
                      "boolean",
                      "ip",
                      "hex",
                      "int16",
                      "int32",
                      "uint16",
                      "uint32"
                    ],
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "description": "Property key is <enterprise number>:<sub option code>, with\n* enterprise number: 1-65535  (https://www.iana.org/assignments/enterprise-numbers/enterprise-numbers)\n* sub option code: 1-255, sub-option code",
              "type": "object"
            }
          },
          "type": "object"
        },
        "description": "if DHCP Server/Relay is intended. The property key is the network name",
        "properties": {
          "enabled": {
            "type": "boolean"
          }
        },
        "type": "object",
        "x-examples": {
          "DHCP Relay": {
            "value": {
              "corp": {
                "servers": [
                  "11.2.3.4"
                ],
                "type": "relay"
              },
              "enabled": true
            }
          },
          "DHCP Server": {
            "value": {
              "corp": {
                "dns_servers": [
                  "8.8.8.8",
                  "4.4.4.4"
                ],
                "dns_suffix": [
                  ".mist.local",
                  ".mist.com"
                ],
                "fixed_bindings": {
                  "5684dae9ac8b": {
                    "ip": "192.168.70.35",
                    "name": "John"
                  }
                },
                "gateway": "192.168.70.1",
                "ip_end": "192.168.70.200",
                "ip_start": "192.168.70.100",
                "type": "local"
              },
              "enabled": true
            }
          },
          "example-1": {
            "value": {
              "enabled": true,
              "property1": {
                "dns_servers": [
                  "string"
                ],
                "dns_suffix": [
                  "string"
                ],
                "fixed_bindings": {
                  "property1": {
                    "ip": "string",
                    "name": "string"
                  },
                  "property2": {
                    "ip": "string",
                    "name": "string"
                  }
                },
                "gateway": "string",
                "ip_end": "string",
                "ip_start": "string",
                "servers": [
                  "string"
                ],
                "type": "local"
              },
              "property2": {
                "dns_servers": [
                  "string"
                ],
                "dns_suffix": [
                  "string"
                ],
                "fixed_bindings": {
                  "property1": {
                    "ip": "string",
                    "name": "string"
                  },
                  "property2": {
                    "ip": "string",
                    "name": "string"
                  }
                },
                "gateway": "string",
                "ip_end": "string",
                "ip_start": "string",
                "servers": [
                  "string"
                ],
                "type": "local"
              }
            }
          }
        }
      },
      "junos_dhcp_snooping": {
        "description": "",
        "properties": {
          "all_networks": {
            "type": "boolean"
          },
          "enable_arp_spoof_check": {
            "description": "Enable for dynamic ARP inspection check ",
            "type": "boolean"
          },
          "enable_ip_source_guard": {
            "description": "Enable for check for forging source IP address",
            "type": "boolean"
          },
          "enabled": {
            "type": "boolean"
          },
          "networks": {
            "description": "if `all_networks`==`false`, list of network with DHCP snooping enabled",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object",
        "x-examples": {
          "example-1": {
            "all_networks": false,
            "enable_arp_spoof_check": true,
            "enable_ip_source_guard": true,
            "enabled": true,
            "networks": [
              "corp"
            ]
          }
        }
      },
      "junos_evpn_config": {
        "description": "EVPN Junos settings",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "role": {
            "enum": [
              "core",
              "distribution",
              "access"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "junos_ip_config": {
        "description": "Junos IP Config",
        "properties": {
          "dns": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "dns_suffix": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "gateway": {
            "type": "string"
          },
          "ip": {
            "type": "string"
          },
          "netmask": {
            "description": "used only if `subnet` is not specified in `networks`",
            "type": "string"
          },
          "network": {
            "description": "the network where this mgmt IP reside, this will be used as default network for outbound-ssh, dns, ntp, dns, tacplus, radius, syslog, snmp",
            "type": "string"
          },
          "type": {
            "default": "dynamic",
            "enum": [
              "static",
              "dynamic"
            ],
            "type": "string"
          },
          "use_mgmt_vrf": {
            "default": false,
            "description": "for host-out traffic (NTP/TACPLUS/RADIUS/SYSLOG/SNMP)",
            "type": "boolean"
          }
        },
        "type": "object",
        "x-examples": {
          "example-1": {
            "dns": [
              {}
            ],
            "dns_suffix": [
              {}
            ],
            "gateway": "string",
            "ip": "string",
            "netmask": "string",
            "network": "string",
            "type": "string"
          }
        }
      },
      "junos_networks": {
        "description": "A network represents a network segment. It can either represent a VLAN (then usually ties to a L3 subnet), optionally associate it with a subnet which can later be used to create addition routes. Used for ports doing `family ethernet-switching`. It can also be a pure L3-subnet that can then be used against a port that with `family inet`.",
        "properties": {
          "dns": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "dns_suffix": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "gateway": {
            "type": "string"
          },
          "ospf_interface_type": {
            "type": "string"
          },
          "subnet": {
            "description": "optional for pure switching, required when L3 / routing features are used",
            "type": "string"
          },
          "vlan_id": {
            "type": "integer"
          },
          "zone": {
            "description": "used for gateway",
            "type": "string"
          }
        },
        "required": [
          "vlan_id"
        ],
        "type": "object",
        "x-examples": {
          "example-1": {
            "corp": {
              "subnet": "192.168.70.0/24",
              "vlan_id": 60,
              "zone": "trust"
            },
            "dedicated": {
              "ospf_interface_type": "p2p",
              "subnet": "10.18.14.72/30"
            },
            "default": {
              "vlan_id": 1,
              "zone": "trust"
            },
            "it_mgmt": {
              "subnet": "192.168.70.0/24",
              "zone": "trust"
            },
            "wan": {
              "zone": "untrust"
            }
          }
        }
      },
      "junos_oob_ip_config": {
        "additionalProperties": {
          "description": "- If HA configuration: key parameter will be nodeX (eg: node1)\n- If there are 2 routing engines, re1 mgmt IP has to be set separately (if desired): key parameter = `re1`",
          "properties": {
            "ip": {
              "type": "string"
            },
            "netmask": {
              "description": "used only if `subnet` is not specified in `networks`",
              "type": "string"
            },
            "network": {
              "description": "optional, the network to be used for mgmt",
              "type": "string"
            },
            "type": {
              "default": "dynamic",
              "enum": [
                "static",
                "dynamic"
              ],
              "type": "string"
            }
          },
          "type": "object"
        },
        "description": "Junos out-of-band (vme/em0/fxp0) IP config",
        "properties": {
          "dns": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "dns_suffix": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "gateway": {
            "type": "string"
          },
          "ip": {
            "type": "string"
          },
          "netmask": {
            "description": "used only if `subnet` is not specified in `networks`",
            "type": "string"
          },
          "network": {
            "description": "optional, the network to be used for mgmt",
            "type": "string"
          },
          "node1": {
            "description": "for HA Cluster, node1 can have different IP Config",
            "properties": {
              "ip": {
                "type": "string"
              },
              "netmask": {
                "description": "used only if `subnet` is not specified in `networks`",
                "type": "string"
              },
              "network": {
                "description": "optional, the network to be used for mgmt",
                "type": "string"
              },
              "type": {
                "default": "dynamic",
                "enum": [
                  "static",
                  "dynamic"
                ],
                "type": "string"
              },
              "use_mgmt_vrf": {
                "default": false,
                "description": "if supported on the platform. If enabled, DNS will be using this routing-instance, too",
                "type": "boolean"
              },
              "use_mgmt_vrf_for_host_out": {
                "default": false,
                "description": "whether to use `mgmt_junos` for host-out traffic (NTP/TACPLUS/RADIUS/SYSLOG/SNMP), if alternative service is desired",
                "type": "boolean"
              },
              "vlan_id": {
                "description": "optional, if different from parent",
                "type": "integer"
              }
            },
            "type": "object"
          },
          "type": {
            "default": "dynamic",
            "enum": [
              "static",
              "dynamic"
            ],
            "type": "string"
          },
          "use_mgmt_vrf": {
            "default": false,
            "description": "if supported on the platform. If enabled, DNS will be using this routing-instance, too",
            "type": "boolean"
          },
          "use_mgmt_vrf_for_host_out": {
            "default": false,
            "description": "whether to use `mgmt_junos` for host-out traffic (NTP/TACPLUS/RADIUS/SYSLOG/SNMP), if alternative service is desired",
            "type": "boolean"
          },
          "vlan_id": {
            "type": "integer"
          }
        },
        "type": "object",
        "x-examples": {
          "Example 1": {
            "dns": [
              "string"
            ],
            "dns_suffix": [
              "string"
            ],
            "gateway": "string",
            "ip": "string",
            "netmask": "string",
            "network": "string",
            "property1": {
              "ip": "string",
              "netmask": "string",
              "network": "string",
              "type": "dynamic"
            },
            "property2": {
              "ip": "string",
              "netmask": "string",
              "network": "string",
              "type": "dynamic"
            },
            "type": "dynamic",
            "use_mgmt_vrf": false,
            "use_mgmt_vrf_for_host_outbound_traffic": false
          }
        }
      },
      "junos_ospf_config": {
        "description": "Junos OSPF config",
        "properties": {
          "areas": {
            "additionalProperties": {
              "properties": {
                "no_summary": {
                  "description": "for a stub/nssa area, where to avoid forwarding type-3 LSA to this area",
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "description": "OSPF areas to run on this device and the corresponding per-area-specific configs. The property key is the area",
            "type": "object"
          },
          "enabled": {
            "description": "whether to rung OSPF on this device",
            "type": "boolean"
          }
        },
        "type": "object",
        "x-examples": {
          "example-1": {
            "areas": {
              "0": {
                "no_summary": false
              }
            },
            "enabled": true
          }
        }
      },
      "junos_other_ip_configs": {
        "description": "optional, if it's required to have switch's L3 presense on a network/vlan",
        "properties": {
          "evpn_anycast": {
            "default": false,
            "description": "for EVPN, if anycast is desired",
            "type": "boolean"
          },
          "ip": {
            "description": "required if `type`==`static`",
            "type": "string"
          },
          "netmask": {
            "description": "optional, `subnet` from `network` definition will be used if defined  ",
            "type": "string"
          },
          "type": {
            "default": "dhcp",
            "enum": [
              "static",
              "dhcp"
            ],
            "type": "string"
          }
        },
        "type": "object",
        "x-examples": {
          "example-1": {
            "ip": "string",
            "netmask": "string",
            "type": "static"
          }
        }
      },
      "junos_port_config": {
        "description": "Switch port config",
        "properties": {
          "ae_disable_lacp": {
            "description": "To disable LACP support for the AE interface",
            "type": "boolean"
          },
          "ae_idx": {
            "description": "Users could force to use the designated AE name",
            "type": "integer"
          },
          "aggregated": {
            "default": false,
            "type": "boolean"
          },
          "critical": {
            "description": "if want to generate port up/down alarm",
            "type": "boolean"
          },
          "description": {
            "type": "string"
          },
          "disable_autoneg": {
            "default": false,
            "description": "if `speed` and `duplex` are specified, whether to disable autonegotiation",
            "type": "boolean"
          },
          "duplex": {
            "default": "auto",
            "enum": [
              "auto",
              "full",
              "half"
            ],
            "type": "string"
          },
          "dynamic_usage": {
            "description": "Enable dynamic usage for this port. Set to `dynamic` to enable.",
            "nullable": true,
            "type": "string"
          },
          "esilag": {
            "type": "boolean"
          },
          "mtu": {
            "default": 1514,
            "description": "media maximum transmission unit (MTU) is the largest data unit that can be forwarded without fragmentation",
            "type": "integer"
          },
          "no_local_overwrite": {
            "description": "prevent helpdesk to override the port config",
            "type": "boolean"
          },
          "poe_disabled": {
            "default": false,
            "type": "boolean"
          },
          "speed": {
            "default": "auto",
            "enum": [
              "auto",
              "10m",
              "100m",
              "1g",
              "2.5g",
              "5g"
            ],
            "type": "string"
          },
          "usage": {
            "description": "port usage name. \n\nIf EVPN is used, use `evpn_uplink`or `evpn_downlink`",
            "type": "string"
          }
        },
        "required": [
          "usage"
        ],
        "type": "object",
        "x-examples": {
          "example-1": {
            "ae_disable_lacp": false,
            "ae_idx": 0,
            "aggregated": true,
            "description": "to dist-sw-01",
            "usage": "uplink"
          },
          "example-3": {
            "usage": "ap"
          },
          "example-dynamic": {
            "dynamic_usage": "dynamic",
            "usage": "default"
          }
        }
      },
      "junos_port_mirror": {
        "properties": {
          "egress_port_ids": {
            "description": "at least one of `ingress_port_ids`,`egress_port_ids` or `ingress_networks` should be specified",
            "items": {
              "example": "ge-0/0/3",
              "type": "string"
            },
            "type": "array"
          },
          "filter": {
            "type": "object"
          },
          "ingress_networks": {
            "description": "at least one of `ingress_port_ids`,`egress_port_ids` or `ingress_networks` should be specified",
            "items": {
              "example": "corp",
              "type": "string"
            },
            "type": "array"
          },
          "ingress_port_ids": {
            "description": "at least one of `ingress_port_ids`,`egress_port_ids` or `ingress_networks` should be specified",
            "items": {
              "example": "ge-0/0/3",
              "type": "string"
            },
            "type": "array"
          },
          "output_network": {
            "example": "analyze",
            "type": "string"
          },
          "output_port_id": {
            "description": "only one of of `output_port_id` or `output_network` should be specified",
            "example": "ge-0/0/5",
            "type": "string"
          }
        },
        "type": "object",
        "x-examples": {
          "Example 1": {
            "egress_port_ids": [
              "ge-0/0/3"
            ],
            "filter": {},
            "ingress_networks": [
              "corp"
            ],
            "ingress_port_ids": [
              "ge-0/0/3"
            ],
            "output_network": "analyze",
            "output_port_id": "ge-0/0/5"
          }
        }
      },
      "junos_port_usages": {
        "description": "Junos port usages",
        "properties": {
          "all_networks": {
            "default": false,
            "description": "if `mode`==`trunk`, whether to trunk all network/vlans",
            "type": "boolean"
          },
          "allow_dhcpd": {
            "description": "if DHCP snooping is enabled, whether DHCP server is allowed on the interfaces with. All the interfaces from port configs using this port usage are effected. Please notice that allow_dhcpd is a tri-state.\n\nWhen it is not defined, it means using the system’s default setting which depends on whether the port is a access or trunk port.",
            "type": "boolean"
          },
          "bypass_auth_when_server_down": {
            "description": "if `port_auth`==`dot1x`, whether to allow the device to connect if RADIUS server is down",
            "type": "boolean"
          },
          "description": {
            "description": "description",
            "type": "string"
          },
          "disable_autoneg": {
            "default": false,
            "description": "if speed and duplex are specified, whether to disable autonegotiation",
            "type": "boolean"
          },
          "disabled": {
            "default": false,
            "description": "whether the port is disabled",
            "type": "boolean"
          },
          "duplex": {
            "default": "auto",
            "description": "link connection mode, choices are auto (default), full, and half",
            "enum": [
              "half",
              "full",
              "auto"
            ],
            "type": "string"
          },
          "enable_mac_auth": {
            "description": "if `port_auth`==`dot1x`, whether to enable MAC Auth",
            "type": "boolean"
          },
          "enable_qos": {
            "type": "boolean"
          },
          "guest_network": {
            "description": "if `port_auth`==`dot1x`, which network to put the device into if the device cannot do dot1x. default is null (i.e. not allowed)",
            "type": "string"
          },
          "mac_auth_only": {
            "description": "only effect once `enable_mac_auth`==`true`",
            "type": "boolean"
          },
          "mac_limit": {
            "default": 0,
            "description": "max number of mac addresses, default is 0 for unlimited, otherwise range is 1 or higher, with upper bound constrained by platform",
            "minimum": 0,
            "type": "integer"
          },
          "mode": {
            "description": "access (default) / trunk",
            "enum": [
              "access",
              "trunk",
              "inet",
              "wan"
            ],
            "type": "string"
          },
          "mtu": {
            "description": "media maximum transmission unit (MTU) is the largest data unit that can be forwarded without fragmentation. The default value is 1514.",
            "type": "integer"
          },
          "networks": {
            "description": "if `mode`==`trunk`, the list of network/vlans",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "persist_mac": {
            "default": false,
            "description": "if `mode`==`access` and `port_auth`!=`dot1x`, whether the port should retain dynamically learned MAC addresses",
            "type": "boolean"
          },
          "poe_disabled": {
            "default": false,
            "description": "whether PoE capabilities are disabled for a port",
            "type": "boolean"
          },
          "port_auth": {
            "description": "if dot1x is desired, set to dot1x",
            "type": "string"
          },
          "port_network": {
            "description": "native network/vlan for untagged traffic",
            "type": "string"
          },
          "rejected_network": {
            "description": "if `port_auth`==`dot1x`, when radius server reject / fails",
            "type": "boolean"
          },
          "speed": {
            "description": "speed, default is auto to automatically negotiate speed",
            "type": "string"
          },
          "storm_control": {
            "$ref": "#/$defs/junos_storm_control"
          },
          "stp_edge": {
            "description": "when enabled, the port is not expected to receive BPDU frames",
            "type": "boolean"
          },
          "voip_network": {
            "description": "network/vlan for voip traffic, must also set port_network. to authenticate device, set port_auth",
            "type": "string"
          }
        },
        "type": "object",
        "x-examples": {
          "example-1": {
            "all_networks": true,
            "bypass_auth_when_server_down": true,
            "description": "string",
            "disable_autoneg": true,
            "disabled": true,
            "duplex": "half",
            "enable_mac_auth": true,
            "guest_network": "string",
            "mac_limit": 0,
            "mode": "access",
            "mtu": 0,
            "networks": [
              "string"
            ],
            "poe_disabled": true,
            "port_auth": "string",
            "port_network": "string",
            "speed": "string",
            "storm_control": {},
            "stp_edge": true,
            "voip_network": "string"
          }
        }
      },
      "junos_storm_control": {
        "description": "Switch storm control",
        "properties": {
          "no_broadcast": {
            "default": false,
            "description": "whether to disable storm control on broadcast traffic",
            "type": "boolean"
          },
          "no_multicast": {
            "default": false,
            "description": "whether to disable storm control on multicast traffic",
            "type": "boolean"
          },
          "no_registered_multicast": {
            "default": false,
            "description": "whether to disable storm control on registered multicast traffic",
            "type": "boolean"
          },
          "no_unknown_unicast": {
            "default": false,
            "description": "whether to disable storm control on unknown unicast traffic",
            "type": "boolean"
          },
          "percentage": {
            "default": 80,
            "description": "bandwidth-percentage, configures the storm control level as a percentage of the available bandwidth",
            "maximum": 100,
            "minimum": 0,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "junos_port_usages_dynamic": {
        "description": "This is a special mode where the actually usage is determined by a set of rules the port will start with `access` mode and isolated depending on the rules, if resolved, the port will have the resolved usage applied.",
        "properties": {
          "mode": {
            "default": "dynamic",
            "enum": [
              "dynamic"
            ],
            "type": "string"
          },
          "reset_default_when": {
            "default": "link_down",
            "description": "Control when the DPC port should be changed to the default port usage\nConfiguring to none will let the DPC port keep at the current port usage.",
            "enum": [
              "none",
              "link_down"
            ],
            "type": "string"
          },
          "rules": {
            "items": {
              "properties": {
                "equals": {
                  "type": "string"
                },
                "equals_any": {
                  "description": "use `equals_any` to match any item in a list",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "expression": {
                  "description": "\"[0:3]\":\"abcdef\" -> \"abc\"\n\"split(.)[1]\": \"a.b.c\" -> \"b\"\n\"split(-)[1][0:3]: \"a1234-b5678-c90\" -> \"b56\"",
                  "type": "string"
                },
                "src": {
                  "enum": [
                    "lldp_chassis_id",
                    "lldp_system_name",
                    "lldp_serial_number",
                    "lldp_hardware_revision",
                    "lldp_manufacturer_name",
                    "lldp_oui",
                    "radius_username",
                    "radius_usermac",
                    "radius_dynamicfilter",
                    "link_peermac"
                  ],
                  "type": "string"
                },
                "usage": {
                  "description": "`port_usage` name",
                  "type": "string"
                }
              },
              "required": [
                "src"
              ],
              "type": "object"
            },
            "type": "array"
          }
        },
        "required": [
          "mode"
        ],
        "title": "",
        "type": "object",
        "x-examples": {
          "example-1": {
            "all_networks": true,
            "bypass_auth_when_server_down": true,
            "description": "string",
            "disable_autoneg": true,
            "disabled": true,
            "duplex": "half",
            "enable_mac_auth": true,
            "guest_network": "string",
            "mac_limit": 0,
            "mode": "access",
            "mtu": 0,
            "networks": [
              "string"
            ],
            "poe_disabled": true,
            "port_auth": "string",
            "port_network": "string",
            "speed": "string",
            "storm_control": {},
            "stp_edge": true,
            "voip_network": "string"
          }
        }
      },
      "junos_vrf_config": {
        "properties": {
          "enabled": {
            "description": "whether to enable VRF (when supported on the device)",
            "type": "boolean"
          }
        },
        "title": "junos_vrf_config",
        "type": "object"
      },
      "junos_vrrp_config": {
        "description": "Junos VRRP config",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "groups": {
            "properties": {
              "{vrrp_group}": {
                "properties": {
                  "priority": {
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {
          "example-1": {
            "enabled": true,
            "groups": {
              "0": {
                "priority": 200
              }
            }
          }
        }
      },
      "device_gateway": {
        "description": "device gateway",
        "properties": {
          "additional_config_cmds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "created_time": {
            "readOnly": true,
            "type": "number"
          },
          "deviceprofile_id": {
            "format": "uuid",
            "type": "string"
          },
          "dhcpd_config": {
            "$ref": "#/$defs/junos_dhcpd"
          },
          "extra_routes": {
            "additionalProperties": {
              "properties": {
                "via": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The property key is the destination",
            "minProperties": 0,
            "type": "object"
          },
          "for_site": {
            "readOnly": true,
            "type": "boolean"
          },
          "id": {
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "image1_url": {
            "type": "string"
          },
          "image2_url": {
            "type": "string"
          },
          "image3_url": {
            "type": "string"
          },
          "ip_config": {
            "$ref": "#/$defs/junos_ip_config"
          },
          "managed": {
            "type": "boolean"
          },
          "modified_time": {
            "readOnly": true,
            "type": "number"
          },
          "msp_id": {
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "networks": {
            "additionalProperties": {
              "properties": {
                "vlan_id": {
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "description": "The property key is the network name or a CIDR",
            "minProperties": 0,
            "type": "object"
          },
          "ntp_servers": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "oob_ip_config": {
            "$ref": "#/$defs/junos_oob_ip_config"
          },
          "org_id": {
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "port_config": {
            "additionalProperties": {
              "$ref": "#/$defs/junos_port_config_gateway"
            },
            "description": "The property key is the port name or range (e.g. \"ge-0/0/0-10\")",
            "type": "object"
          },
          "port_mirroring": {
            "properties": {
              "port_mirror": {
                "properties": {
                  "family_type": {
                    "type": "string"
                  },
                  "ingress_port_ids": {
                    "items": {
                      "example": "ge-0/0/3",
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "output_port_id": {
                    "example": "ge-0/0/5",
                    "type": "string"
                  },
                  "rate": {
                    "type": "integer"
                  },
                  "run_length": {
                    "minimum": 0,
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "site_id": {
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "vars": {
            "minProperties": 0,
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {
          "device-gateway-response": {
            "additional_config_cmds": [
              "set snmp community public"
            ],
            "created_time": 0,
            "deviceprofile_id": "6f4bf402-45f9-2a56-6c8b-7f83d3bc98e9",
            "dhcpd_config": {
              "corp": {
                "dns_servers": [
                  "8.8.8.8",
                  "4.4.4.4"
                ],
                "dns_suffix": [
                  ".mist.local",
                  ".mist.com"
                ],
                "fixed_bindings": {
                  "5684dae9ac8b": {
                    "ip": "192.168.70.35",
                    "name": "John"
                  }
                },
                "gateway": "192.168.70.1",
                "ip_end": "192.168.70.200",
                "ip_start": "192.168.70.100",
                "type": "local"
              },
              "enabled": true
            },
            "extra_routes": {
              "0.0.0.0/0": {
                "via": "10.2.1.1"
              }
            },
            "id": "b069b358-4c97-5319-1f8c-7c5ca64d6ab1",
            "image1_url": "https://url/to/image.png",
            "ip_configs": {
              "corp": {
                "ip": "192.168.10.1",
                "type": "static"
              }
            },
            "managed": false,
            "modified_time": 0,
            "name": "corp-a135",
            "networks": {},
            "ntp_servers": [
              "pool.ntp.org",
              "time.google.com"
            ],
            "oob_ip_config": {
              "ip": "192.168.50.3",
              "netmask": "255.255.255.0",
              "type": "static"
            },
            "org_id": "b069b358-4c97-5319-1f8c-7c5ca64d6ab1",
            "port_config": {
              "cl-0/0/1": {
                "ip_config": {
                  "type": "pppoe"
                },
                "usage": "wan",
                "wan_config": {
                  "backup_only": true
                }
              },
              "ge-0/0/0": {
                "ip_config": {
                  "type": "dhcp"
                },
                "usage": "wan"
              },
              "ge-0/0/0,ge-7/0/0": {
                "clustered": true,
                "ip_config": {},
                "reth_idx": 3,
                "usage": "wan"
              },
              "ge-0/0/1-5": {
                "usage": "lan"
              },
              "ge-0/0/7": {
                "ip_config": {
                  "type": "static"
                },
                "usage": "wan"
              }
            },
            "port_forward": {
              "remote-ssh": {
                "ip_port": "10.2.5.3",
                "ip_range": "10.2.5.1/32-10.2.5.20/32",
                "protocol": "tcp"
              }
            },
            "site_id": "b069b358-4c97-5319-1f8c-7c5ca64d6ab1",
            "vars": {
              "RADIUS_IP1": "172.31.2.5",
              "RADIUS_SECRET": "11s64632d"
            }
          }
        }
      },
      "junos_port_config_gateway": {
        "description": "Gateway port config",
        "properties": {
          "description": {
            "type": "string"
          },
          "disable_autoneg": {
            "default": false,
            "type": "boolean"
          },
          "dsl_config": {
            "description": "if `wan_type`==`dsl`",
            "properties": {
              "ppoe_auth": {
                "default": "none",
                "enum": [
                  "none",
                  "chap",
                  "pap"
                ],
                "type": "string"
              },
              "ppoe_password": {
                "type": "string"
              },
              "ppoe_username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "duplex": {
            "default": "auto",
            "enum": [
              "half",
              "full",
              "auto"
            ],
            "example": "full",
            "type": "string"
          },
          "ip_config": {
            "$ref": "#/$defs/junos_ip_config_gateway"
          },
          "lte_apn": {
            "description": "if `wan_type`==`lte`",
            "type": "string"
          },
          "lte_auth": {
            "default": "none",
            "description": "if `wan_type`==`lte`",
            "enum": [
              "none",
              "chap",
              "pap"
            ],
            "type": "string"
          },
          "lte_backup": {
            "type": "boolean"
          },
          "lte_password": {
            "description": "if `wan_type`==`lte`",
            "type": "string"
          },
          "lte_username": {
            "description": "if `wan_type`==`lte`",
            "type": "string"
          },
          "mtu": {
            "type": "integer"
          },
          "name": {
            "description": "name that we'll use to derive config",
            "type": "string"
          },
          "networks": {
            "description": "if `usage`==`lan`",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "outer_vlan_id": {
            "description": "for Q-in-Q",
            "type": "integer"
          },
          "poe_disabled": {
            "default": false,
            "type": "boolean"
          },
          "port_network": {
            "description": "if `usage`==`lan`",
            "type": "string"
          },
          "preserve_dscp": {
            "default": true,
            "description": "whether to preserve dscp when sending traffic over VPN (SSR-only)",
            "type": "boolean"
          },
          "redundant": {
            "description": "if HA mode",
            "type": "boolean"
          },
          "reth_idx": {
            "description": "if HA mode",
            "type": "integer"
          },
          "reth_node": {
            "description": "if HA mode",
            "type": "string"
          },
          "speed": {
            "default": "auto",
            "example": "1g",
            "type": "string"
          },
          "svr_port_range": {
            "description": "For 128T only",
            "example": "60000-60005",
            "type": "string"
          },
          "traffic_shaping": {
            "properties": {
              "class_percentages": {
                "description": "percentages for differet class of traffic: high / medium / low / best-effort\nsum must be equal to 100",
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              "enabled": {
                "default": false,
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "usage": {
            "description": "port usage name",
            "enum": [
              "lan",
              "wan",
              "ha_data",
              "ha_control"
            ],
            "type": "string"
          },
          "vlan_id": {
            "description": "if WAN interface is on a VLAN",
            "type": "integer"
          },
          "vpn_paths": {
            "additionalProperties": {
              "properties": {
                "bfd_profile": {
                  "default": "broadband",
                  "enum": [
                    "lte",
                    "broadband"
                  ],
                  "type": "string"
                },
                "bfd_udp_transform": {
                  "default": false,
                  "type": "boolean"
                },
                "role": {
                  "default": "spoke",
                  "enum": [
                    "spoke",
                    "hub"
                  ],
                  "type": "string"
                },
                "traffic_shaping": {
                  "properties": {
                    "class_percentage": {
                      "description": "percentages for differet class of traffic: high / medium / low / best-effort\nsum must be equal to 100",
                      "items": {
                        "type": "integer"
                      },
                      "type": "array"
                    },
                    "enabled": {
                      "type": "boolean"
                    },
                    "max_tx_kbps": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "object"
          },
          "wan_ext_ip": {
            "description": "optional, if spoke should reach this port by a different IP",
            "type": "string"
          },
          "wan_source_nat": {
            "description": "optional, by default, source-NAT is performed on all WAN Ports using the interface-ip",
            "properties": {
              "disabled": {
                "default": false,
                "description": "or to disable the source-nat",
                "type": "boolean"
              },
              "nat_pool": {
                "description": "if alternative nat_pool is desired",
                "example": "64.2.4.0/30",
                "type": "string"
              }
            },
            "type": "object"
          },
          "wan_type": {
            "default": "broadband",
            "description": "if `usage`==`wan`",
            "enum": [
              "broadband",
              "dsl",
              "lte"
            ],
            "type": "string"
          }
        },
        "required": [
          "usage"
        ],
        "type": "object",
        "x-examples": {
          "LAN": {
            "networks": [
              "default",
              "guest",
              "pos"
            ],
            "port_network": "default",
            "usage": "lan"
          },
          "LTE": {
            "ip_config": {
              "type": "dhcp"
            },
            "lte_apn": "5ginternet",
            "lte_backup": false,
            "usage": "wan",
            "wan_type": "lte"
          },
          "PPOE": {
            "ip_config": {
              "pppoe_password": "foryoureyesonly",
              "pppoe_username": "u13534",
              "type": "ppoe"
            },
            "peers": [
              "12.35.68.35"
            ],
            "usage": "wan",
            "wan_type": "broadband"
          },
          "VPN": {
            "vpns": {
              "data-center": {
                "links": [
                  "wan0"
                ],
                "role": "spoke"
              }
            }
          }
        }
      },
      "junos_ip_config_gateway": {
        "description": "Junos IP Config",
        "properties": {
          "dns": {
            "description": "except for out-of-band interface (vme/em0/fxp0)",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "dns_suffix": {
            "description": "except for out-of-band interface (vme/em0/fxp0)",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "gateway": {
            "description": "except for out-of-band interface (vme/em0/fxp0)",
            "type": "string"
          },
          "ip": {
            "type": "string"
          },
          "netmask": {
            "description": "used only if `subnet` is not specified in `networks`",
            "type": "string"
          },
          "network": {
            "description": "optional, the network to be used for mgmt",
            "type": "string"
          },
          "poser_password": {
            "description": "if `type`==`pppoe`",
            "type": "string"
          },
          "ppoe_username": {
            "description": "if `type`==`pppoe`",
            "type": "string"
          },
          "pppoe_auth": {
            "default": "none",
            "description": "if `type`==`pppoe`",
            "enum": [
              "none",
              "chap",
              "pap"
            ],
            "type": "string"
          },
          "type": {
            "default": "dhcp",
            "enum": [
              "dhcp",
              "static",
              "ppoe"
            ],
            "type": "string"
          }
        },
        "type": "object",
        "x-examples": {
          "example-1": {
            "dns": [
              {}
            ],
            "dns_suffix": [
              {}
            ],
            "gateway": "string",
            "ip": "string",
            "netmask": "string",
            "network": "string",
            "type": "string"
          }
        }
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "https://api.mist.com/api/v1/sites/{site_id}/devices/{device_id}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
