{
  "name": "listOrgNetworkTemplates",
  "description": "Get List of Org Network Templates",
  "parameters": {
    "type": "object",
    "properties": {
      "org_id": {
        "example": "000000ab-00ab-00ab-00ab-0000000000ab",
        "format": "uuid",
        "type": "string"
      }
    },
    "required": [
      "org_id"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://api.mist.com/api/v1/orgs/{org_id}/networktemplates"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "List"
        },
        "Network Template",
        "**Key properties:**",
        {
          "$ul": [
            "**additional_config_cmds**",
            "**created_time**",
            [
              "**dhcp_snooping**: ",
              {
                "$ul": [
                  "**all_networks**",
                  "**enable_arp_spoof_check**: Enable for dynamic ARP inspection check ",
                  "**enable_ip_source_guard**: Enable for check for forging source IP address",
                  "**enabled**",
                  "**networks**: if `all_networks`==`false`, list of network with DHCP snooping enabled"
                ]
              }
            ],
            "**dns_servers**",
            "**dns_suffix**",
            "**extra_routes**",
            "**group_tags**",
            "**id**",
            [
              "**mist_nac**: enable mist_nac to use radsec",
              {
                "$ul": [
                  "**enabled**",
                  "**network**"
                ]
              }
            ],
            "**modified_time**",
            "**name**",
            "**networks**: The property key is network name",
            "**ntp_servers**",
            "**org_id**",
            [
              "**port_usages**: The property key is the port profile name",
              {
                "$ul": [
                  [
                    "**dynamic**: This is a special mode where the actually usage is determined by a set of rules the port will start with `access` mode and isolated depending on the rules, if resolved, the port will have the resolved usage applied.",
                    {
                      "$ul": [
                        "**mode** (default: dynamic)",
                        "**reset_default_when**: Control when the DPC port should be changed to the default port usage (default: link_down)",
                        "**rules**"
                      ]
                    }
                  ]
                ]
              }
            ],
            [
              "**radius_config**: Junos Radius config",
              {
                "$ul": [
                  "**acct_interim_interval**: how frequently should interim accounting be reported, 60-65535. default is 0 (use one specified in Access-Accept request from RADIUS Server). Very frequent messages can affect the performance of the radius server, 600 and up is recommended when enabled (default: 0)",
                  "**acct_servers**",
                  "**auth_servers**",
                  "**auth_servers_retries**: radius auth session retries (default: 3)",
                  "**auth_servers_timeout**: radius auth session timeout (default: 5)",
                  "**coa_enabled** (default: false)",
                  "**coa_port** (default: 3799)",
                  "**network**: use `network`or `source_ip`",
                  "**source_ip**: use `network`or `source_ip`"
                ]
              }
            ],
            [
              "**remote_syslog**",
              {
                "$ul": [
                  [
                    "**archive**",
                    {
                      "$ul": [
                        "**files**",
                        "**size**"
                      ]
                    }
                  ],
                  [
                    "**console**",
                    {
                      "$ul": [
                        "**contents**"
                      ]
                    }
                  ],
                  "**enabled** (default: false)",
                  "**files**",
                  "**network**: if source_address is configured, will use the vlan firstly otherwise use source_ip",
                  "**send_to_all_servers** (default: true)",
                  "**servers**",
                  "**time_format**",
                  "**users**"
                ]
              }
            ],
            [
              "**snmp_config**",
              {
                "$ul": [
                  "**client_list**",
                  "**contact**",
                  "**description**",
                  "**enabled** (default: true)",
                  "**engine_id**",
                  "**location**",
                  "**name**",
                  "**trap_groups**",
                  "**v2c_config**",
                  [
                    "**v3_config**",
                    {
                      "$ul": [
                        "**notify**",
                        "**notify_filter**",
                        "**target_address**",
                        "**target_parameters**",
                        [
                          "**usm**",
                          {
                            "$ul": [
                              "**engine-id**: required only if `engine_type`==`remote_engine`",
                              "**engine_type**",
                              "**users**"
                            ]
                          }
                        ],
                        [
                          "**vacm**",
                          {
                            "$ul": [
                              "**access**",
                              [
                                "**security_to_group**",
                                {
                                  "$ul": [
                                    "**content**",
                                    "**security_model**"
                                  ]
                                }
                              ]
                            ]
                          }
                        ]
                      ]
                    }
                  ],
                  [
                    "**views**",
                    {
                      "$ul": [
                        "**include**: if the root oid configured is included",
                        "**oid**",
                        "**view_name**"
                      ]
                    }
                  ]
                ]
              }
            ],
            [
              "**switch_matching**: Switch template",
              {
                "$ul": [
                  "**enable**",
                  "**rules**"
                ]
              }
            ],
            [
              "**switch_mgmt**",
              {
                "$ul": [
                  "**config_revert** (default: 10)",
                  [
                    "**protect_re**",
                    {
                      "$ul": [
                        "**enabled** (default: false)"
                      ]
                    }
                  ],
                  "**root_password**",
                  [
                    "**tacacs**",
                    {
                      "$ul": [
                        "**acct_servers**",
                        "**enabled**",
                        "**network**",
                        "**tacplus_servers**"
                      ]
                    }
                  ]
                ]
              }
            ],
            [
              "**vrf_config**",
              {
                "$ul": [
                  "**enabled** (default: false)"
                ]
              }
            ],
            "**vrf_instances**: Property key is the VRF name"
          ]
        },
        {
          "$each": "$.body.*",
          "$as": "item",
          "$block": [
            {
              "$h2": {
                "$": "$.item.name"
              }
            },
            {
              "$lang": "json",
              "$code": {
                "$encode": "json",
                "$indent": true,
                "$content": {
                  "$": "$.item"
                }
              }
            }
          ]
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
