{
  "name": "getSiteRfdiagRecording",
  "description": "Get RF Diage Recording Details",
  "parameters": {
    "type": "object",
    "properties": {
      "site_id": {
        "example": "000000ab-00ab-00ab-00ab-0000000000ab",
        "format": "uuid",
        "type": "string"
      },
      "rfdiag_id": {
        "example": "000000ab-00ab-00ab-00ab-0000000000ab",
        "format": "uuid",
        "type": "string"
      }
    },
    "required": [
      "site_id",
      "rfdiag_id"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://api.mist.com/api/v1/sites/{site_id}/rfdiags/{rfdiag_id}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "List"
        },
        "RF Diag response",
        "**Key properties:**",
        {
          "$ul": [
            "**asset_id**: if `type`==`asset`, id of the asset",
            "**asset_name**: if `type`==`asset`, name of the asset",
            "**client_name**: if `type`==`client`, hostname of the client",
            "**duration**: recording length in seconds, max is 120",
            "**end_time**: timestamp of end of recording",
            "**frame_count**: Number of frames in the output",
            "**id**",
            "**mac**: if `type`==`client` or `asset`, mac of the device",
            "**map_id**",
            "**name**",
            "**next**: Optional. id of the next recoding if present. Only valid for site survey.",
            "**raw_events**: URL to a JSON file that contains array of raw location diag events",
            "**ready**: whether itâ€™s ready for playback",
            "**sdkclient_id**: if `type`==`sdkclient`, sdkclient_id of this recording",
            "**sdkclient_name**: if `type`==`sdkclient`, name of the sdkclient",
            "**sdkclient_uuid**: if `type`==`sdkclient`, device_id of sdkclient",
            "**start_time**: timestamp of the recording (the start)",
            "**type**: sdkclient / client / asset",
            "**url**: URL to a JSON file that contains an array of frames, each frame is the same format"
          ]
        },
        {
          "$each": "$.body.*",
          "$as": "item",
          "$block": [
            {
              "$h2": {
                "$": "$.item.name"
              }
            },
            {
              "$lang": "json",
              "$code": {
                "$encode": "json",
                "$indent": true,
                "$content": {
                  "$": "$.item"
                }
              }
            }
          ]
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
