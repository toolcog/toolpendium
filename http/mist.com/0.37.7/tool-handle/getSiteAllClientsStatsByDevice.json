{
  "name": "getSiteAllClientsStatsByDevice",
  "description": "Get wireless client stat by Device",
  "parameters": {
    "type": "object",
    "properties": {
      "site_id": {
        "example": "000000ab-00ab-00ab-00ab-0000000000ab",
        "format": "uuid",
        "type": "string"
      },
      "device_id": {
        "example": "000000ab-00ab-00ab-00ab-0000000000ab",
        "format": "uuid",
        "type": "string"
      }
    },
    "required": [
      "site_id",
      "device_id"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://api.mist.com/api/v1/sites/{site_id}/stats/devices/{device_id}/clients"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "List"
        },
        "Client statistics",
        "**Key properties:**",
        {
          "$ul": [
            "**_ttl**: TTL of the validity of the stat",
            "**accuracy**: estimated clinet location accuracy, in meter",
            "**airespace_ifname**",
            [
              "**airwatch**: information if airwatch enabled",
              {
                "$ul": [
                  "**authorized**"
                ]
              }
            ],
            "**ap_id**: AP ID the client is connected to",
            "**ap_mac**: AP the client is connected to",
            "**band**",
            "**channel**: current channel",
            "**dual_band**: whether the client is dual-band capable (determined by whether we’ve seen probe requests from both bands)",
            "**family**: device family, through fingerprinting. iPod / Nexus Galaxy / Windows Mobile or CE …",
            [
              "**guest**: information about this portal",
              {
                "$ul": [
                  "**authorized**: whether this guest is authorized (default: false)",
                  "**authorized_expiring_time**: when the guest authorization will expire",
                  "**authorized_time**: when the guest is authorized",
                  "**company**",
                  "**email**",
                  "**field1**",
                  "**name**"
                ]
              }
            ],
            "**hostname**: hostname that we learned from sniffing DHCP",
            "**idle_time**: how long, in seconds, has the client been idle (since the last RX packet)",
            "**ip**",
            "**ip6**",
            "**is_guest**: whether this is a guest (default: false)",
            "**key_mgmt**: e.g. WPA2-PSK/CCMP",
            "**last_seen**: last seen timestamp",
            "**mac**: client mac",
            "**manufacture**: device manufacture, through fingerprinting or OUI",
            "**map_id**: estimated client location - map_id",
            "**model**: device model, may be available if we can identify them",
            "**num_locating_aps**: number of APs used to locate this client",
            "**os**: device os, through fingerprinting",
            "**power_saving**: if it’s currently in power-save mode",
            "**proto**",
            "**psk_id**: PSK id (if multi-psk is used)",
            "**rssi**: signal strength",
            "**rx_bps**: rate of receiving traffic from the clients, bits/seconds, last known",
            "**rx_bytes**: amount of traffic received from client since client connects",
            "**rx_packets**: amount of traffic received from client since client connects",
            "**rx_rate**: RX Rate, Mbps",
            "**rx_retries**: amount of rx retries",
            "**snr**: signal over noise",
            "**ssid**: SSID the client is connected to",
            "**tx_bps**: rate of transmitting traffic to the clients, bits/seconds, last known",
            "**tx_bytes**: amount of traffic sent to client since client connects",
            "**tx_packets**: amount of traffic sent to client since client connects",
            "**tx_rate**: TX Rate, Mbps",
            "**tx_retries**: amount of tx retries",
            "**type**: client’s type, regular / vip / resource / blocked (if client object is created)",
            "**uptime**: how long, in seconds, has the client been connected",
            "**username**: username that we learned from 802.1X exchange or Per-user PSK or User Portal",
            "**vlan_id**: vlan id, could be empty (from older AP)",
            "**wlan_id**: WLAN ID the client is connected to",
            "**x**: estimated client location in pixels",
            "**x_m**: estimated client location in meter",
            "**y**: estimated client location in pixels",
            "**y_m**: estimated client location in meter"
          ]
        },
        {
          "$each": "$.body.*",
          "$as": "item",
          "$block": [
            {
              "$h2": "Item"
            },
            {
              "$lang": "json",
              "$code": {
                "$encode": "json",
                "$indent": true,
                "$content": {
                  "$": "$.item"
                }
              }
            }
          ]
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
