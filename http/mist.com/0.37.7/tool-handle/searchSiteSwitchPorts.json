{
  "name": "searchSiteSwitchPorts",
  "description": "Search Switch / Gateway Ports",
  "parameters": {
    "type": "object",
    "properties": {
      "full_duplex": {
        "type": "boolean",
        "description": "indicates full or half duplex"
      },
      "mac": {
        "type": "string",
        "description": "device identifier"
      },
      "neighbor_mac": {
        "type": "string",
        "description": "Chassis identifier of the chassis type listed"
      },
      "neighbor_port_desc": {
        "type": "string",
        "description": "Description supplied by the system on the interface E.g. “GigabitEthernet2/0/39”"
      },
      "neighbor_system_name": {
        "type": "string",
        "description": "Name supplied by the system on the interface E.g. neighbor system name E.g. “Kumar-Acc-SW.mist.local”"
      },
      "poe_disabled": {
        "type": "boolean",
        "description": "is the POE configured not be disabled."
      },
      "poe_mode": {
        "type": "string",
        "description": "poe mode depending on class E.g. “802.3at”"
      },
      "poe_on": {
        "type": "boolean",
        "description": "is the device attached to POE"
      },
      "port_id": {
        "type": "string",
        "description": "interface name"
      },
      "port_mac": {
        "type": "string",
        "description": "interface mac address"
      },
      "power_draw": {
        "type": "number",
        "description": "Amount of power being used by the interface at the time the command is executed. Unit in watts."
      },
      "tx_pkts": {
        "type": "integer",
        "description": "Output packets"
      },
      "rx_pkts": {
        "type": "integer",
        "description": "Input packets"
      },
      "rx_bytes": {
        "type": "integer",
        "description": "Input bytes"
      },
      "tx_bps": {
        "type": "integer",
        "description": "Output rate"
      },
      "rx_bps": {
        "type": "integer",
        "description": "Input rate"
      },
      "tx_mcast_pkts": {
        "type": "integer",
        "description": "Multicast output packets"
      },
      "tx_bcast_pkts": {
        "type": "integer",
        "description": "Broadcast output packets"
      },
      "rx_mcast_pkts": {
        "type": "integer",
        "description": "Multicast input packets"
      },
      "rx_bcast_pkts": {
        "type": "integer",
        "description": "Broadcast input packets"
      },
      "speed": {
        "type": "integer",
        "description": "port speed"
      },
      "stp_state": {
        "enum": [
          "forwarding",
          "blocking",
          "learning",
          "listening",
          "disabled"
        ],
        "type": "string",
        "description": "if `up`==`true`"
      },
      "stp_role": {
        "enum": [
          "designated",
          "backup",
          "alternate",
          "root",
          "root-prevented"
        ],
        "type": "string",
        "description": "if `up`==`true`"
      },
      "auth_state": {
        "enum": [
          "init",
          "authenticated",
          "authenticating",
          "held"
        ],
        "type": "string",
        "description": "if `up`==`true` && has Authenticator role"
      },
      "up": {
        "type": "boolean",
        "description": "indicates if interface is up"
      },
      "limit": {
        "default": 100,
        "minimum": 0,
        "type": "integer"
      },
      "start": {
        "default": 0,
        "minimum": 0,
        "type": "integer"
      },
      "end": {
        "default": 0,
        "minimum": 0,
        "type": "integer"
      },
      "duration": {
        "default": "1d",
        "example": "10m",
        "type": "string",
        "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
      },
      "site_id": {
        "example": "000000ab-00ab-00ab-00ab-0000000000ab",
        "format": "uuid",
        "type": "string"
      }
    },
    "required": [
      "site_id"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://api.mist.com/api/v1/sites/{site_id}/stats/switch_ports/search{?full_duplex,mac,neighbor_mac,neighbor_port_desc,neighbor_system_name,poe_disabled,poe_mode,poe_on,port_id,port_mac,power_draw,tx_pkts,rx_pkts,rx_bytes,tx_bps,rx_bps,tx_mcast_pkts,tx_bcast_pkts,rx_mcast_pkts,rx_bcast_pkts,speed,stp_state,stp_role,auth_state,up,limit,start,end,duration}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**end**",
            "**limit**",
            "**results**",
            "**start**",
            "**total**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
