{
  "name": "listOrgMxEdgesStats",
  "description": "Get List of Org MxEdge Stats",
  "parameters": {
    "type": "object",
    "properties": {
      "page": {
        "default": 1,
        "minimum": 1,
        "type": "integer"
      },
      "limit": {
        "default": 100,
        "minimum": 0,
        "type": "integer"
      },
      "start": {
        "default": 0,
        "minimum": 0,
        "type": "integer"
      },
      "end": {
        "default": 0,
        "minimum": 0,
        "type": "integer"
      },
      "duration": {
        "default": "1d",
        "example": "10m",
        "type": "string",
        "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
      },
      "for_site": {
        "default": "false",
        "enum": [
          "true",
          "false",
          "any"
        ],
        "type": "string",
        "description": "filter for site level mist edges"
      },
      "org_id": {
        "example": "000000ab-00ab-00ab-00ab-0000000000ab",
        "format": "uuid",
        "type": "string"
      }
    },
    "required": [
      "org_id"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://api.mist.com/api/v1/orgs/{org_id}/stats/mxedges{?page,limit,start,end,duration,for_site}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "List"
        },
        "",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**cpu_stat**: CPU/core stats list",
              {
                "$ul": [
                  "**cpus**",
                  "**idle**: percentage of Idle, Idle/(Idle + Busy) since last sampling",
                  "**interrupt**: percentage of Interrupt, (Irq + SoftIrq)/(Idle + Busy) since last sampling",
                  "**system**: percentage of System, System/(Idle + Busy) since last sampling",
                  "**usage**: percentage of load, Busy/(Idle + Busy) since last sampling",
                  "**user**: percentage of User, User/(Idle + Busy) since last sampling"
                ]
              }
            ],
            "**created_time**",
            "**for_site**",
            "**id**",
            [
              "**ip_stat**: OOBM IP stats",
              {
                "$ul": [
                  "**ip**",
                  "**ips**: Property key is the interface name. IPs for each net interface",
                  "**macs**: Property key is the interface name. MAC for each net interface"
                ]
              }
            ],
            "**lag_stat**: Stat for LAG (Link Aggregation Group). Property key is the LAG name",
            "**last_seen**",
            "**mac**",
            [
              "**memory_stat**: Memory usage",
              {
                "$ul": [
                  "**active**: The amount of memory, in kibibytes, that has been used more recently and is usually not reclaimed unless absolutely necessary.",
                  "**available**: An estimate of how much memory is available for starting new applications, without swapping.",
                  "**buffers**: The amount, in kibibytes, of temporary storage for raw disk blocks.",
                  "**cached**: The amount of physical RAM, in kibibytes, used as cache memory.",
                  "**free**: The amount of physical RAM, in kibibytes, left unused by the system",
                  "**inactive**: The amount of memory, in kibibytes, that has been used less recently and is more eligible to be reclaimed for other purposes.",
                  "**swap_cached**: The amount of memory, in kibibytes, that has once been moved into swap, then back into the main memory, but still also remains in the swapfile.",
                  "**swap_free**: The total amount of swap free, in kibibytes.",
                  "**swap_total**: The total amount of swap available, in kibibytes.",
                  "**total**: Total amount of usable RAM, in kibibytes, which is physical RAM minus a number of reserved bits and the kernel binary code",
                  "**usage**"
                ]
              }
            ],
            "**model**",
            "**modified_time**",
            "**mxagent_registered**",
            "**mxcluster_id**",
            "**name**: The name of the tunnel",
            "**num_tunnels**",
            "**org_id**",
            "**port_stat**",
            "**sensor_stat**",
            [
              "**service_stat**: stat for each services",
              {
                "$ul": [
                  [
                    "**mxagent**",
                    {
                      "$ul": [
                        "**ext_ip**: external IP from ep-terminator’s point of view. valid only for service having its own cloud connection",
                        "**last_seen**: timestamp when the last stats is seen (cloud unix time, in second). valid only for service having its own stats or whole system (last among last_seen of all services)",
                        "**package_state**: package/service installation state.",
                        "**package_version**: package/service installation state.",
                        "**running_state**: service running state.",
                        "**uptime**: service uptime."
                      ]
                    }
                  ],
                  [
                    "**tunterm**",
                    {
                      "$ul": [
                        "**ext_ip**: external IP from ep-terminator’s point of view. valid only for service having its own cloud connection",
                        "**last_seen**: timestamp when the last stats is seen (cloud unix time, in second). valid only for service having its own stats or whole system (last among last_seen of all services)",
                        "**package_state**: package/service installation state.",
                        "**package_version**: package/service installation state.",
                        "**running_state**: service running state.",
                        "**uptime**: service uptime."
                      ]
                    }
                  ]
                ]
              }
            ],
            "**services**",
            "**site_id**",
            "**status**",
            "**tunterm_id**",
            [
              "**tunterm_ip_config**",
              {
                "$ul": [
                  "**gateway**",
                  "**ip**",
                  "**netmask**"
                ]
              }
            ],
            [
              "**tunterm_port_config**",
              {
                "$ul": [
                  "**downstream_ports**",
                  "**separate_upstream_downstream**",
                  "**upstream_ports**"
                ]
              }
            ],
            "**tunterm_registered**",
            [
              "**tunterm_stat**",
              {
                "$ul": [
                  "**monitoring_failed**"
                ]
              }
            ],
            "**uptime**",
            "**virtualization_type**: Virtualization environment"
          ]
        },
        {
          "$each": "$.body.*",
          "$as": "item",
          "$block": [
            {
              "$h2": {
                "$": "$.item.name"
              }
            },
            {
              "$lang": "json",
              "$code": {
                "$encode": "json",
                "$indent": true,
                "$content": {
                  "$": "$.item"
                }
              }
            }
          ]
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
