{
  "name": "listOrgWxTunnels",
  "description": "Get List of Org WxLAN Tunnels",
  "parameters": {
    "type": "object",
    "properties": {
      "org_id": {
        "example": "000000ab-00ab-00ab-00ab-0000000000ab",
        "format": "uuid",
        "type": "string"
      }
    },
    "required": [
      "org_id"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://api.mist.com/api/v1/orgs/{org_id}/wxtunnels"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "List"
        },
        "WxLAn Tunnel",
        "**Key properties:**",
        {
          "$ul": [
            "**created_time**",
            [
              "**dmvpn**: Dynamic Multipoint VPN configurations",
              {
                "$ul": [
                  "**enabled**: whether DMVPN is enabled (default: false)",
                  "**holding_time**: optional; the holding time for NHRP ‘registration requests’ and ‘resolution replies’ sent from the Mist AP (in seconds); default 600",
                  "**host_routes**: optional; list of IPv4 DMVPN peer host ip-addresses to which traffic is forwarded"
                ]
              }
            ],
            "**for_mgmt**: determined during creation time and cannot be toggled. A management tunnel cannot be used by wxlan rule or by wlan (default: false)",
            "**for_site**",
            "**hello_interval**: in seconds, used as heartbeat to detect if a tunnel is alive. AP will try another peer after missing N hellos specified by hello_retries. (default: 60)",
            "**hello_retries** (default: 7)",
            "**hostname**: optional, overwrite the hostname in SCCRQ control message, default is “” or null, %H and %M can be used, which will be replace with corresponding values:",
            "**id**",
            [
              "**ipsec**: IPSec-related configurations; requires DMVPN be enabled",
              {
                "$ul": [
                  "**enabled**: whether ipsec is enabled, requires DMVPN be enabled (default: false)",
                  "**psk**: ipsec pre-shared key"
                ]
              }
            ],
            "**is_static**: whether it’s static/unmanaged (i.e. no control session). As the session configurations are not compatible, cannot be toggled. (default: false)",
            "**modified_time**",
            "**mtu**: 0 to enable PMTU, 552-1500 to start PMTU with a lower MTU (default: 0)",
            "**name**: The name of the tunnel",
            "**org_id**",
            "**peers**: list of remote peers’ IP or hostname",
            "**router_id**: optional, overwrite the router-id in SCCRQ control message, default is “0” or null, can also be an IPv4 address",
            "**secret**: secret, ‘’ if no auth is used",
            "**sessions**: sessions to be established with the tunnel. Has to be >= 1 in order for this tunnel to be useful. For management tunnel, it can only have 1",
            "**site_id**",
            "**udp_port**: udp port if `use_udp`==`true`",
            "**use_udp**: whether to use UDP instead of IP (proto=115, which is default of L2TPv3) (default: false)"
          ]
        },
        {
          "$each": "$.body.*",
          "$as": "item",
          "$block": [
            {
              "$h2": {
                "$": "$.item.name"
              }
            },
            {
              "$lang": "json",
              "$code": {
                "$encode": "json",
                "$indent": true,
                "$content": {
                  "$": "$.item"
                }
              }
            }
          ]
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
