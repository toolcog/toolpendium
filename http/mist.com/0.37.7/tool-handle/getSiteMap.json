{
  "name": "getSiteMap",
  "description": "Get Site Map Details",
  "parameters": {
    "type": "object",
    "properties": {
      "site_id": {
        "example": "000000ab-00ab-00ab-00ab-0000000000ab",
        "format": "uuid",
        "type": "string"
      },
      "map_id": {
        "example": "000000ab-00ab-00ab-00ab-0000000000ab",
        "format": "uuid",
        "type": "string"
      }
    },
    "required": [
      "site_id",
      "map_id"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://api.mist.com/api/v1/sites/{site_id}/maps/{map_id}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Map",
        "**Key properties:**",
        {
          "$ul": [
            "**created_time**",
            "**flags**: name/val pair objects for location engine to use",
            "**for_site**",
            "**height**: when type=image, height of the image map",
            "**height_m**",
            "**id**",
            [
              "**latlng_br**: when type=google, latitude / longitude of the bottom-right corner",
              {
                "$ul": [
                  "**lat**",
                  "**lng**"
                ]
              }
            ],
            [
              "**latlng_tl**: when type=google, latitude / longitude of the top-left corner",
              {
                "$ul": [
                  "**lat**",
                  "**lng**"
                ]
              }
            ],
            "**locked**: whether this map is considered locked down (default: false)",
            "**modified_time**",
            "**name**: The name of the map",
            "**occupancy_limit**",
            "**org_id**",
            "**orientation**: orientation of the map, 0 means up is north, 90 means up is west (default: 0)",
            "**origin_x**: the user-annotated x origin, pixels",
            "**origin_y**: the user-annotated y origin, pixels",
            "**ppm**: when type=image, pixels per meter",
            "**site_id**",
            "**sitesurvey_path**: sitesurvey_path",
            "**thumbnail_url**: when type=image, the url for the thumbnail image / preview",
            "**type** (default: image)",
            "**url**: when type=image, the url",
            "**use_auto_orientation**: whether this map uses autooreintation values or ignores them (default: false)",
            "**use_auto_placement**: whether this map uses autoplacement values or ignores them (default: false)",
            "**view**: when type=google",
            [
              "**wall_path**: a JSON blob for wall definition (same format as wayfinding_path)",
              {
                "$ul": [
                  "**coordinate**",
                  "**name**",
                  "**nodes**"
                ]
              }
            ],
            [
              "**wayfinding**: properties related to wayfinding",
              {
                "$ul": [
                  [
                    "**micello**",
                    {
                      "$ul": [
                        "**account_key**",
                        "**default_level_id**",
                        "**map_id**"
                      ]
                    }
                  ],
                  "**snap_to_path**"
                ]
              }
            ],
            [
              "**wayfinding_path**: a JSON blob for wayfinding (using Dijkstraâ€™s algorithm)",
              {
                "$ul": [
                  "**coordinate**",
                  "**nodes**"
                ]
              }
            ],
            "**width**: when type=image, width of the image map",
            "**width_m**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
