{
  "name": "updateSiteSleThreshold",
  "description": "Update the SLE threshold",
  "parameters": {
    "type": "object",
    "properties": {
      "site_id": {
        "example": "000000ab-00ab-00ab-00ab-0000000000ab",
        "format": "uuid",
        "type": "string"
      },
      "scope": {
        "enum": [
          "site",
          "ap",
          "switch",
          "gateway",
          "client"
        ],
        "type": "string"
      },
      "scope_id": {
        "type": "string",
        "description": "* site_id if `scope`==`site`\n* device_id if `scope`==`ap`, `scope`==`switch` or `scope`==`gateway`\n* mac if `scope`==`client`"
      },
      "metric": {
        "type": "string",
        "description": "values from /api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metrics"
      },
      "body": {
        "$ref": "#/$defs/sle_threshold"
      }
    },
    "required": [
      "site_id",
      "scope",
      "scope_id",
      "metric"
    ],
    "$defs": {
      "sle_threshold": {
        "description": "",
        "properties": {
          "default": {
            "readOnly": true,
            "type": "number"
          },
          "direction": {
            "minLength": 1,
            "readOnly": true,
            "type": "string"
          },
          "maximum": {
            "type": "number"
          },
          "metric": {
            "minLength": 1,
            "readOnly": true,
            "type": "string"
          },
          "minimum": {
            "type": "number"
          },
          "threshold": {
            "minLength": 1,
            "readOnly": true,
            "type": "string"
          },
          "units": {
            "minLength": 1,
            "readOnly": true,
            "type": "string"
          }
        },
        "title": "sle_threshold",
        "type": "object",
        "x-examples": {
          "example-1": {
            "default": -72,
            "direction": "left",
            "maximum": -60,
            "metric": "coverage",
            "minimum": -90,
            "threshold": "-66",
            "units": "dBm",
            "value": {
              "default": 20,
              "direction": "left",
              "maximum": 50,
              "metric": "capacity",
              "minimum": 5,
              "threshold": "50",
              "units": "%"
            }
          }
        }
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "https://api.mist.com/api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metric/{metric}/threshold"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "sle_threshold"
        },
        "",
        "**Key properties:**",
        {
          "$ul": [
            "**default**",
            "**direction**",
            "**maximum**",
            "**metric**",
            "**minimum**",
            "**threshold**",
            "**units**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
