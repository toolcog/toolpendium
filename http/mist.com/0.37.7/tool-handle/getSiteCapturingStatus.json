{
  "name": "getSiteCapturingStatus",
  "description": "Get Capturing status",
  "parameters": {
    "type": "object",
    "properties": {
      "site_id": {
        "example": "000000ab-00ab-00ab-00ab-0000000000ab",
        "format": "uuid",
        "type": "string"
      }
    },
    "required": [
      "site_id"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://api.mist.com/api/v1/sites/{site_id}/pcaps/capture"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**ap_mac**",
            "**aps**: List of target APs to capture packets",
            "**client_mac**",
            "**duration**",
            "**failed**: List of APs where configuration attempt failed",
            "**gateways**: List of target Gateways to capture packets if a gateway capture type is specified",
            "**id**: unique id for the capture",
            "**includes_mcast**",
            "**max_num_packets**: max number of packets configured by user",
            "**max_pkt_len**",
            "**num_packets**: total number of packets captured by all AP, not applicable for type [client, new_assoc]",
            "**ok**: List of target APs successfully configured to capture packets",
            "**radiotap_tcpdump_expression**: when `type`==`radiotap`, radiotap_tcpdump_expression expression provided by the user",
            "**scan_tcpdump_expression**: when `type`==`scan`, scan_tcpdump_expression provided by the user",
            "**ssid**",
            "**started_time**",
            "**tcpdump_expression**: tcpdump expression provided by the user (common)",
            "**type**",
            "**wired_tcpdump_expression**: when `type`==`wired`, wired_tcpdump_expression provided by the user",
            "**wireless_tcpdump_expression**: when `type`==`‘wireless’`, wireless_tcpdump_expression provided by the user"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
