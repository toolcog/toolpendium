{
  "name": "upgradeOrgMultiSitesDevices",
  "description": "Upgrade Multiple Sites",
  "parameters": {
    "type": "object",
    "properties": {
      "org_id": {
        "example": "000000ab-00ab-00ab-00ab-0000000000ab",
        "format": "uuid",
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/device_upgrade"
      }
    },
    "required": [
      "org_id"
    ],
    "$defs": {
      "device_upgrade": {
        "properties": {
          "canary_phases": {
            "default": [
              1,
              10,
              50,
              100
            ],
            "description": "phases for canary deployment. Each phase represents percentage of AP’s that need to be upgraded. default is [1, 10, 50, 100]",
            "items": {
              "type": "integer"
            },
            "type": "array"
          },
          "device_ids": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "enable_p2p": {
            "description": "whether to allow local AP-to-AP FW upgrade",
            "type": "boolean"
          },
          "force": {
            "default": false,
            "description": "true will force upgrade when requested version is same as running version",
            "type": "boolean"
          },
          "max_failure_percentage": {
            "default": 5,
            "description": "percentage of failures allowed across the entire upgrade(not applicable for `big_bang`)",
            "maximum": 100,
            "minimum": 0,
            "type": "number"
          },
          "max_failures": {
            "description": "number of failures allowed within each phase(applicable for `canary` or `rrm`). Will be used if provided, else max_failure_percentage will be used",
            "items": {
              "type": "integer"
            },
            "type": "array"
          },
          "models": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "p2p_cluster_size": {
            "default": 10,
            "example": 0,
            "minimum": 0,
            "type": "integer"
          },
          "p2p_parallelism": {
            "description": "number of parallel p2p download batches to creat",
            "type": "integer"
          },
          "reboot": {
            "default": false,
            "description": "Reboot device immediately after upgrade is completed (Available on Junos OS devices)",
            "type": "boolean"
          },
          "reboot_at": {
            "description": "reboot start time in epoch seconds, default is `start_time`",
            "example": 1624399840,
            "type": "number"
          },
          "rrm_first_batch_percentage": {
            "description": "percentage of AP’s that need to be present in the first rrm batch",
            "example": 2,
            "type": "integer"
          },
          "rrm_max_batch_percentage": {
            "description": "max percentage of AP’s that need to be present in each rrm batch",
            "example": 10,
            "type": "integer"
          },
          "rrm_mesh_upgrade": {
            "description": "sequential or parallel (default parallel). Whether to upgrade mesh AP’s parallelly or sequentially at the end of the upgrade",
            "type": "string"
          },
          "rrm_node_order": {
            "default": "fringe_to_center",
            "description": "Used in rrm to determine whether to start upgrade from fringe or center AP’s",
            "enum": [
              "fringe_to_center",
              "center_to_fringe"
            ],
            "type": "string"
          },
          "rrm_slow_ramp": {
            "description": "true will make rrm batch sizes slowly ramp up",
            "type": "boolean"
          },
          "snapshot": {
            "default": false,
            "description": "Perform recovery snapshot after device is rebooted (Available on Junos OS devices)",
            "type": "boolean"
          },
          "start_time": {
            "description": "upgrade start time in epoch seconds, default is now",
            "example": 1624399840,
            "type": "number"
          },
          "strategy": {
            "default": "big_bang",
            "description": "`big_bang` (upgrade all at once), `serial` (one at a time), `canary` or `rrm`",
            "enum": [
              "big_bang",
              "canary",
              "serial",
              "rrm"
            ],
            "minLength": 1,
            "type": "string"
          },
          "version": {
            "default": "latest",
            "description": "specific version / stable",
            "example": "3.1.5",
            "minLength": 1,
            "type": "string"
          }
        },
        "title": "device_upgrade",
        "type": "object",
        "x-examples": {
          "example-1": {
            "canary_phases": [
              1,
              10,
              50,
              100
            ],
            "device_ids": [
              "string"
            ],
            "enable_p2p": true,
            "force": false,
            "max_failure_percentage": 5,
            "max_failures": [
              0
            ],
            "models": [
              "string"
            ],
            "p2p_cluster_size": 10,
            "reboot": false,
            "reboot_at": 1624399840,
            "rrm_first_batch_percentage": 2,
            "rrm_max_batch_percentage": 10,
            "rrm_mesh_upgrade": "string",
            "rrm_node_order": "fringe_to_center",
            "rrm_slow_ramp": true,
            "snapshot": false,
            "start_time": 1624399840,
            "strategy": "big_bang",
            "version": "stable"
          }
        }
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://api.mist.com/api/v1/orgs/{org_id}/devices/upgrade"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**id**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
