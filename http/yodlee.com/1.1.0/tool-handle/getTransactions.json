{
  "name": "getTransactions",
  "description": "The Transaction service is used to get a list of transactions for a user.<br>By default, this service returns the last 30 days of transactions from today's date.<br>The keyword parameter performs a contains search on the original, consumer, and simple description attributes, replace the special characters #, &, and + with percent-encoding values %23, %26, and %2B respectively. Eg: for -Debit# , pass the input as -Debit%23.<br>Values for categoryId parameter can be fetched from get transaction category list service.<br> The categoryId is used to filter transactions based on system-defined category as well as user-defined category.<br>User-defined categoryIds should be provided in the filter with the prefix ''U''. E.g. U10002<br>The skip and top parameters are used for pagination. In the skip and top parameters pass the number of records to be skipped and retrieved, respectively. The response header provides the links to retrieve the next and previous set of transactions.<br>Double quotes in the merchant name will be prefixed by backslashes (&#92;) in the response, e.g. Toys \"R\" Us. <br>sourceId is a unique ID that the provider site has assigned to the transaction. The source ID is only available for the pre-populated accounts. Pre-populated accounts are the accounts that the FI customers shares with Yodlee, so that the user does not have to add or aggregate those accounts.<br><br><b>Note</b><li> <a href=\"https://developer.yodlee.com/docs/api/1.1/Transaction_Data_Enrichment\">TDE</a> is made available for bank and card accounts and for the US market only.The address field in the response is available only when the TDE key is turned on.<li>The pagination feature is available by default. If no values are passed in the skip and top parameters, the API will only return the first 500 transactions.<li>This service supports the localization feature and accepts locale as a header parameter.<br>",
  "parameters": {
    "type": "object",
    "properties": {
      "accountId": {
        "type": "string",
        "description": "Comma separated accountIds"
      },
      "baseType": {
        "type": "string",
        "description": "DEBIT/CREDIT"
      },
      "categoryId": {
        "type": "string",
        "description": "Comma separated categoryIds"
      },
      "categoryType": {
        "type": "string",
        "description": "Transaction Category Type(UNCATEGORIZE, INCOME, TRANSFER, EXPENSE or DEFERRED_COMPENSATION)"
      },
      "container": {
        "type": "string",
        "description": "bank/creditCard/investment/insurance/loan"
      },
      "detailCategoryId": {
        "type": "string",
        "description": "Comma separated detailCategoryIds"
      },
      "fromDate": {
        "type": "string",
        "description": "Transaction from date(YYYY-MM-DD)"
      },
      "highLevelCategoryId": {
        "type": "string",
        "description": "Comma separated highLevelCategoryIds"
      },
      "keyword": {
        "type": "string",
        "description": "Transaction search text"
      },
      "skip": {
        "format": "int32",
        "type": "integer",
        "description": "skip (Min 0)"
      },
      "toDate": {
        "type": "string",
        "description": "Transaction end date (YYYY-MM-DD)"
      },
      "top": {
        "format": "int32",
        "type": "integer",
        "description": "top (Max 500)"
      },
      "type": {
        "type": "string",
        "description": "Transaction Type(SELL,SWEEP, etc.) for bank/creditCard/investment"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "//transactions{?accountId,baseType,categoryId,categoryType,container,detailCategoryId,fromDate,highLevelCategoryId,keyword,skip,toDate,top,type}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "TransactionResponse"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**transaction**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "YodleeError"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**errorCode**",
            "**errorMessage**",
            "**referenceCode**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
