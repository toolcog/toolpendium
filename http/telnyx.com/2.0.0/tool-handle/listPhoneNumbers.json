{
  "name": "listPhoneNumbers",
  "description": "List phone numbers",
  "parameters": {
    "type": "object",
    "properties": {
      "page[number]": {
        "default": 1,
        "minimum": 1,
        "type": "integer",
        "description": "The page number to load."
      },
      "page[size]": {
        "default": 20,
        "maximum": 250,
        "minimum": 1,
        "type": "integer",
        "description": "The size of the page."
      },
      "filter[tag]": {
        "type": "string",
        "description": "Filter by phone number tags."
      },
      "filter[phone_number]": {
        "type": "string",
        "description": "Filter by phone number. Requires at least three digits.\n             Non-numerical characters will result in no values being returned."
      },
      "filter[status]": {
        "enum": [
          "purchase_pending",
          "purchase_failed",
          "port_pending",
          "active",
          "deleted",
          "port_failed",
          "emergency_only",
          "ported_out",
          "port_out_pending"
        ],
        "example": "active",
        "type": "string",
        "description": "Filter by phone number status."
      },
      "filter[voice.connection_name][contains]": {
        "example": "test",
        "type": "string",
        "description": "Filter contains connection name. Requires at least three characters."
      },
      "filter[voice.connection_name][starts_with]": {
        "example": "test",
        "type": "string",
        "description": "Filter starts with connection name. Requires at least three characters."
      },
      "filter[voice.connection_name][ends_with]": {
        "example": "test",
        "type": "string",
        "description": "Filter ends with connection name. Requires at least three characters."
      },
      "filter[voice.connection_name][eq]": {
        "example": "test",
        "type": "string",
        "description": "Filter by connection name."
      },
      "filter[usage_payment_method]": {
        "enum": [
          "pay-per-minute",
          "channel"
        ],
        "example": "channel",
        "type": "string",
        "description": "Filter by usage_payment_method."
      },
      "filter[billing_group_id]": {
        "example": "62e4bf2e-c278-4282-b524-488d9c9c43b2",
        "type": "string",
        "description": "Filter by the billing_group_id associated with phone numbers. To filter to only phone numbers that have no billing group associated them, set the value of this filter to the string 'null'."
      },
      "filter[emergency_address_id]": {
        "example": "9102160989215728032",
        "format": "int64",
        "type": "string",
        "description": "Filter by the emergency_address_id associated with phone numbers. To filter only phone numbers that have no emergency address associated with them, set the value of this filter to the string 'null'."
      },
      "filter[customer_reference]": {
        "type": "string",
        "description": "Filter numbers via the customer_reference set."
      },
      "sort": {
        "enum": [
          "purchased_at",
          "phone_number",
          "connection_name",
          "usage_payment_method"
        ],
        "example": "connection_name",
        "type": "string",
        "description": "Specifies the sort order for results. If not given, results are sorted by created_at in descending order."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://api.telnyx.com/v2/phone_numbers{?page[number],page[size],filter[tag],filter[phone_number],filter[status],filter[voice.connection_name][contains],filter[voice.connection_name][starts_with],filter[voice.connection_name][ends_with],filter[voice.connection_name][eq],filter[usage_payment_method],filter[billing_group_id],filter[emergency_address_id],filter[customer_reference],sort}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "List Phone Numbers Response"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**data**",
            [
              "**meta**",
              {
                "$ul": [
                  "**page_number**",
                  "**page_size**",
                  "**total_pages**",
                  "**total_results**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "default": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**errors**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
