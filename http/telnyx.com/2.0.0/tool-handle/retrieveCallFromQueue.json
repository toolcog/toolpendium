{
  "name": "retrieveCallFromQueue",
  "description": "Retrieve an existing call from an existing queue",
  "parameters": {
    "type": "object",
    "properties": {
      "queue_name": {
        "type": "string",
        "description": "Uniquely identifies the queue by name"
      },
      "call_control_id": {
        "type": "string",
        "description": "Unique identifier and token for controlling the call"
      }
    },
    "required": [
      "queue_name",
      "call_control_id"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://api.telnyx.com/v2/queues/{queue_name}/calls/{call_control_id}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Queue Call Response"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**data**",
              {
                "$ul": [
                  "**call_control_id**: Unique identifier and token for controlling the call.",
                  "**call_leg_id**: ID that is unique to the call and can be used to correlate webhook events",
                  "**call_session_id**: ID that is unique to the call session and can be used to correlate webhook events",
                  "**connection_id**: Telnyx connection ID used in the call.",
                  "**enqueued_at**: ISO 8601 formatted date of when the call was put in the queue",
                  "**from**: Number or SIP URI placing the call.",
                  "**queue_id**: Unique identifier of the queue the call is in.",
                  "**queue_position**: Current position of the call in the queue",
                  "**record_type**",
                  "**to**: Destination number or SIP URI of the call.",
                  "**wait_time_secs**: The time the call has been waiting in the queue, given in seconds"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
