{
  "name": "findAddresss",
  "description": "Returns a list of your addresses.",
  "parameters": {
    "type": "object",
    "properties": {
      "page[number]": {
        "default": 1,
        "minimum": 1,
        "type": "integer",
        "description": "The page number to load."
      },
      "page[size]": {
        "default": 20,
        "maximum": 250,
        "minimum": 1,
        "type": "integer",
        "description": "The size of the page."
      },
      "filter[customer_reference][eq]": {
        "type": "string",
        "description": "Filter addresses via the customer reference set. Matching is not case-sensitive."
      },
      "filter[customer_reference][contains]": {
        "type": "string",
        "description": "If present, addresses with <code>customer_reference</code> containing the given value will be returned. Matching is not case-sensitive."
      },
      "filter[used_as_emergency]": {
        "default": "null",
        "type": "string",
        "description": "If set as 'true', only addresses used as the emergency address for at least one active phone-number will be returned. When set to 'false', the opposite happens: only addresses not used as the emergency address from phone-numbers will be returned."
      },
      "filter[street_address][contains]": {
        "default": "null",
        "type": "string",
        "description": "If present, addresses with <code>street_address</code> containing the given value will be returned. Matching is not case-sensitive. Requires at least three characters."
      },
      "filter[address_book][eq]": {
        "default": "null",
        "type": "string",
        "description": "If present, only returns results with the <code>address_book</code> flag set to the given value."
      },
      "sort": {
        "default": "created_at",
        "enum": [
          "created_at",
          "first_name",
          "last_name",
          "business_name",
          "street_address"
        ],
        "example": "street_address",
        "type": "string",
        "description": "Specifies the sort order for results. By default sorting direction is ascending. To have the results sorted in descending order add the <code> -</code> prefix.<br/><br/>\nThat is: <ul>\n  <li>\n    <code>street_address</code>: sorts the result by the\n    <code>street_address</code> field in ascending order.\n  </li>\n\n  <li>\n    <code>-street_address</code>: sorts the result by the\n    <code>street_address</code> field in descending order.\n  </li>\n</ul> <br/> If not given, results are sorted by <code>created_at</code> in descending order."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://api.telnyx.com/v2/addresses{?page[number],page[size],filter[customer_reference][eq],filter[customer_reference][contains],filter[used_as_emergency],filter[street_address][contains],filter[address_book][eq],sort}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**data**",
            [
              "**meta**",
              {
                "$ul": [
                  "**page_number**",
                  "**page_size**",
                  "**total_pages**",
                  "**total_results**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
