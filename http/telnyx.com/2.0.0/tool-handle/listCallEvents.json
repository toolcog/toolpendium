{
  "name": "listCallEvents",
  "description": "Filters call events by given filter parameters. Events are ordered by `event_timestamp`. If filter for `call_leg_id` or `call_session_id` is not present, it only filters events from the last 24 hours.\n\n**Note**: Only one `filter[event_timestamp]` can be passed.\n",
  "parameters": {
    "type": "object",
    "properties": {
      "filter[call_leg_id]": {
        "format": "uuid",
        "type": "string",
        "description": "The unique identifier of an individual call leg."
      },
      "filter[call_session_id]": {
        "format": "uuid",
        "type": "string",
        "description": "The unique identifier of the call control session. A session may include multiple call leg events."
      },
      "filter[status]": {
        "enum": [
          "delivered",
          "failed"
        ],
        "example": "delivered",
        "type": "string",
        "description": "Event status"
      },
      "filter[type]": {
        "enum": [
          "command",
          "webhook"
        ],
        "example": "webhook",
        "type": "string",
        "description": "Event type"
      },
      "filter[event_timestamp][gt]": {
        "example": "2019-03-29T11:10:00Z",
        "type": "string",
        "description": "Event timestamp: greater than"
      },
      "filter[event_timestamp][gte]": {
        "example": "2019-03-29T11:10:00Z",
        "type": "string",
        "description": "Event timestamp: greater than or equal"
      },
      "filter[event_timestamp][lt]": {
        "example": "2019-03-29T11:10:00Z",
        "type": "string",
        "description": "Event timestamp: lower than"
      },
      "filter[event_timestamp][lte]": {
        "example": "2019-03-29T11:10:00Z",
        "type": "string",
        "description": "Event timestamp: lower than or equal"
      },
      "filter[event_timestamp][eq]": {
        "example": "2019-03-29T11:10:00Z",
        "type": "string",
        "description": "Event timestamp: equal"
      },
      "page[number]": {
        "default": 1,
        "minimum": 1,
        "type": "integer",
        "description": "The page number to load."
      },
      "page[size]": {
        "default": 20,
        "maximum": 250,
        "minimum": 1,
        "type": "integer",
        "description": "The size of the page."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://api.telnyx.com/v2/call_events{?filter[call_leg_id],filter[call_session_id],filter[status],filter[type],filter[event_timestamp][gt],filter[event_timestamp][gte],filter[event_timestamp][lt],filter[event_timestamp][lte],filter[event_timestamp][eq],page[number],page[size]}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "List Call Events Response"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**data**",
            [
              "**meta**",
              {
                "$ul": [
                  "**page_number**",
                  "**page_size**",
                  "**total_pages**",
                  "**total_results**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "default": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**errors**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
