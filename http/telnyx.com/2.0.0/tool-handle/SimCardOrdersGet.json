{
  "name": "SimCardOrdersGet",
  "description": "Get all SIM card orders according to filters.",
  "parameters": {
    "type": "object",
    "properties": {
      "filter[created_at]": {
        "example": "2018-02-02T22:25:27.521Z",
        "format": "datetime",
        "type": "string",
        "description": "Filter by ISO 8601 formatted date-time string matching resource creation date-time."
      },
      "filter[updated_at]": {
        "example": "2018-02-02T22:25:27.521Z",
        "format": "datetime",
        "type": "string",
        "description": "Filter by ISO 8601 formatted date-time string matching resource last update date-time."
      },
      "filter[quantity]": {
        "example": 21,
        "type": "integer",
        "description": "Filter orders by how many SIM cards were ordered."
      },
      "filter[cost.amount]": {
        "example": "2.53",
        "type": "string",
        "description": "The total monetary amount of the order."
      },
      "filter[cost.currency]": {
        "example": "USD",
        "type": "string",
        "description": "Filter by ISO 4217 currency string."
      },
      "filter[address.id]": {
        "example": "1293384261075731499",
        "format": "int64",
        "type": "string",
        "description": "Uniquely identifies the address for the order."
      },
      "filter[address.street_address]": {
        "example": "311 W Superior St",
        "type": "string",
        "description": "Returns entries with matching name of the street where the address is located."
      },
      "filter[address.extended_address]": {
        "example": "Suite 504",
        "type": "string",
        "description": "Returns entries with matching name of the supplemental field for address information."
      },
      "filter[address.locality]": {
        "example": "Chicago",
        "type": "string",
        "description": "Filter by the name of the city where the address is located."
      },
      "filter[address.administrative_area]": {
        "example": "IL",
        "type": "string",
        "description": "Filter by state or province where the address is located."
      },
      "filter[address.country_code]": {
        "example": "US",
        "type": "string",
        "description": "Filter by the mobile operator two-character (ISO 3166-1 alpha-2) origin country code."
      },
      "filter[address.postal_code]": {
        "example": "60654",
        "type": "string",
        "description": "Filter by postal code for the address."
      },
      "page[number]": {
        "default": 1,
        "minimum": 1,
        "type": "integer",
        "description": "The page number to load."
      },
      "page[size]": {
        "default": 20,
        "maximum": 250,
        "minimum": 1,
        "type": "integer",
        "description": "The size of the page."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://api.telnyx.com/v2/sim_card_orders{?filter[created_at],filter[updated_at],filter[quantity],filter[cost.amount],filter[cost.currency],filter[address.id],filter[address.street_address],filter[address.extended_address],filter[address.locality],filter[address.administrative_area],filter[address.country_code],filter[address.postal_code],page[number],page[size]}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**data**",
            [
              "**meta**",
              {
                "$ul": [
                  "**page_number**",
                  "**page_size**",
                  "**total_pages**",
                  "**total_results**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "default": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**errors**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
