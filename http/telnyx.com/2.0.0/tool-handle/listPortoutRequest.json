{
  "name": "listPortoutRequest",
  "description": "Returns the portout requests according to filters",
  "parameters": {
    "type": "object",
    "properties": {
      "filter[carrier_name]": {
        "type": "string",
        "description": "Filter by new carrier name."
      },
      "filter[spid]": {
        "type": "string",
        "description": "Filter by new carrier spid."
      },
      "filter[status]": {
        "enum": [
          "pending",
          "authorized",
          "ported",
          "rejected",
          "rejected-pending",
          "canceled"
        ],
        "type": "string",
        "description": "Filter by portout status."
      },
      "page[number]": {
        "default": 1,
        "minimum": 1,
        "type": "integer",
        "description": "The page number to load."
      },
      "page[size]": {
        "default": 20,
        "maximum": 250,
        "minimum": 1,
        "type": "integer",
        "description": "The size of the page."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://api.telnyx.com/v2/portouts{?filter[carrier_name],filter[spid],filter[status],page[number],page[size]}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**data**",
            [
              "**meta**",
              {
                "$ul": [
                  "**page_number**: Current Page based on pagination settings (included when defaults are used.)",
                  "**page_size**: Number of results to return per page based on pagination settings (included when defaults are used.)",
                  "**total_pages**: Total number of pages based on pagination settings",
                  "**total_results**: Total number of results"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
