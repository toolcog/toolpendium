{
  "name": "bulkCreateOrUpdateAnnotations",
  "description": "Bulk upload of annotations.\nAnnotations are individual findings that have been identified as part of a report, for example, a line of code that represents a vulnerability. These annotations can be attached to a specific file and even a specific line in that file, however, that is optional. Annotations are not mandatory and a report can contain up to 1000 annotations.\n\nAdd the annotations you want to upload as objects in a JSON array and make sure each annotation has the external_id field set to a unique value. If you want to use an existing id from your own system, we recommend prefixing it with your system's name to avoid collisions, for example, mySystem-annotation001. The external id can later be used to identify the report as an alternative to the generated [UUID](https://developer.atlassian.com/bitbucket/api/2/reference/meta/uri-uuid#uuid). You can upload up to 100 annotations per POST request.\n\n### Sample cURL request:\n```\ncurl --location 'https://api.bitbucket.org/2.0/repositories/<username>/<reposity-name>/commit/<commit-hash>/reports/mysystem-001/annotations' \\\n--header 'Content-Type: application/json' \\\n--data-raw '[\n  {\n        \"external_id\": \"mysystem-annotation001\",\n        \"title\": \"Security scan report\",\n        \"annotation_type\": \"VULNERABILITY\",\n        \"summary\": \"This line represents a security threat.\",\n        \"severity\": \"HIGH\",\n      \"path\": \"my-service/src/main/java/com/myCompany/mysystem/logic/Main.java\",\n        \"line\": 42\n  },\n  {\n        \"external_id\": \"mySystem-annotation002\",\n        \"title\": \"Bug report\",\n        \"annotation_type\": \"BUG\",\n        \"result\": \"FAILED\",\n        \"summary\": \"This line might introduce a bug.\",\n        \"severity\": \"MEDIUM\",\n      \"path\": \"my-service/src/main/java/com/myCompany/mysystem/logic/Helper.java\",\n        \"line\": 13\n  }\n]'\n```\n\n### Possible field values:\nannotation_type: VULNERABILITY, CODE_SMELL, BUG\nresult: PASSED, FAILED, IGNORED, SKIPPED\nseverity: HIGH, MEDIUM, LOW, CRITICAL\n\nPlease refer to the [Code Insights documentation](https://confluence.atlassian.com/bitbucket/code-insights-994316785.html) for more information.\n",
  "parameters": {
    "type": "object",
    "properties": {
      "workspace": {
        "type": "string",
        "description": "This can either be the workspace ID (slug) or the workspace UUID surrounded by curly-braces, for example `{workspace UUID}`."
      },
      "repo_slug": {
        "type": "string",
        "description": "The repository."
      },
      "commit": {
        "type": "string",
        "description": "The commit for which to retrieve reports."
      },
      "reportId": {
        "type": "string",
        "description": "Uuid or external-if of the report for which to get annotations for."
      },
      "body": {
        "items": {
          "$ref": "#/$defs/report_annotation"
        },
        "maxItems": 100,
        "minItems": 1,
        "type": "array",
        "description": "The annotations to create or update"
      }
    },
    "required": [
      "workspace",
      "repo_slug",
      "commit",
      "reportId",
      "body"
    ],
    "$defs": {
      "report_annotation": {
        "allOf": [
          {
            "$ref": "#/$defs/object"
          },
          {
            "additionalProperties": true,
            "description": "A report for a commit.",
            "properties": {
              "annotation_type": {
                "description": "The type of the report.",
                "enum": [
                  "VULNERABILITY",
                  "CODE_SMELL",
                  "BUG"
                ],
                "type": "string"
              },
              "created_on": {
                "description": "The timestamp when the report was created.",
                "format": "date-time",
                "type": "string"
              },
              "details": {
                "description": "The details to show to users when clicking on the annotation.",
                "type": "string"
              },
              "external_id": {
                "description": "ID of the annotation provided by the annotation creator. It can be used to identify the annotation as an alternative to it's generated uuid. It is not used by Bitbucket, but only by the annotation creator for updating or deleting this specific annotation. Needs to be unique.",
                "type": "string"
              },
              "line": {
                "description": "The line number that the annotation should belong to. If no line number is provided, then it will default to 0 and in a pull request it will appear at the top of the file specified by the path field.",
                "minimum": 1,
                "type": "integer"
              },
              "link": {
                "description": "A URL linking to the annotation in an external tool.",
                "format": "uri",
                "type": "string"
              },
              "path": {
                "description": "The path of the file on which this annotation should be placed. This is the path of the file relative to the git repository. If no path is provided, then it will appear in the overview modal on all pull requests where the tip of the branch is the given commit, regardless of which files were modified.",
                "type": "string"
              },
              "result": {
                "description": "The state of the report. May be set to PENDING and later updated.",
                "enum": [
                  "PASSED",
                  "FAILED",
                  "SKIPPED",
                  "IGNORED"
                ],
                "type": "string"
              },
              "severity": {
                "description": "The severity of the annotation.",
                "enum": [
                  "CRITICAL",
                  "HIGH",
                  "MEDIUM",
                  "LOW"
                ],
                "type": "string"
              },
              "summary": {
                "description": "The message to display to users.",
                "type": "string"
              },
              "updated_on": {
                "description": "The timestamp when the report was updated.",
                "format": "date-time",
                "type": "string"
              },
              "uuid": {
                "description": "The UUID that can be used to identify the annotation.",
                "type": "string"
              }
            },
            "title": "Report Annotation",
            "type": "object"
          }
        ],
        "x-bb-default-fields": [
          "uuid"
        ],
        "x-bb-url": "/rest/2.0/accounts/{target_user.uuid}/repositories/{repository.uuid}/commits/{commit.hash}/reports/{reportUuid}/annotations/{uuid}"
      },
      "object": {
        "additionalProperties": true,
        "description": "Base type for most resource objects. It defines the common `type` element that identifies an object's type. It also identifies the element as Swagger's `discriminator`.",
        "discriminator": {
          "propertyName": "type"
        },
        "properties": {
          "type": {
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://api.bitbucket.org/2.0/repositories/{workspace}/{repo_slug}/commit/{commit}/reports/{reportId}/annotations"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Report Annotation list"
        },
        "Base type for most resource objects. It defines the common `type` element that identifies an object's type. It also identifies the element as Swagger's `discriminator`.",
        "**Key properties:**",
        {
          "$ul": [
            "**type**",
            "**annotation_type**: The type of the report.",
            "**created_on**: The timestamp when the report was created.",
            "**details**: The details to show to users when clicking on the annotation.",
            "**external_id**: ID of the annotation provided by the annotation creator. It can be used to identify the annotation as an alternative to it's generated uuid. It is not used by Bitbucket, but only by the annotation creator for updating or deleting this specific annotation. Needs to be unique.",
            "**line**: The line number that the annotation should belong to. If no line number is provided, then it will default to 0 and in a pull request it will appear at the top of the file specified by the path field.",
            "**link**: A URL linking to the annotation in an external tool.",
            "**path**: The path of the file on which this annotation should be placed. This is the path of the file relative to the git repository. If no path is provided, then it will appear in the overview modal on all pull requests where the tip of the branch is the given commit, regardless of which files were modified.",
            "**result**: The state of the report. May be set to PENDING and later updated.",
            "**severity**: The severity of the annotation.",
            "**summary**: The message to display to users.",
            "**updated_on**: The timestamp when the report was updated.",
            "**uuid**: The UUID that can be used to identify the annotation."
          ]
        },
        {
          "$each": "$.body.*",
          "$as": "item",
          "$block": [
            {
              "$h2": "Item"
            },
            {
              "$lang": "json",
              "$code": {
                "$encode": "json",
                "$indent": true,
                "$content": {
                  "$": "$.item"
                }
              }
            }
          ]
        }
      ]
    }
  }
}
