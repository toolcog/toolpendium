{
  "name": "getPipelineStepForRepository",
  "description": "Retrieve a given step of a pipeline.",
  "parameters": {
    "type": "object",
    "properties": {
      "workspace": {
        "type": "string",
        "description": "This can either be the workspace ID (slug) or the workspace UUID surrounded by curly-braces, for example `{workspace UUID}`."
      },
      "repo_slug": {
        "type": "string",
        "description": "The repository."
      },
      "pipeline_uuid": {
        "type": "string",
        "description": "The UUID of the pipeline."
      },
      "step_uuid": {
        "type": "string",
        "description": "The UUID of the step."
      }
    },
    "required": [
      "workspace",
      "repo_slug",
      "pipeline_uuid",
      "step_uuid"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://api.bitbucket.org/2.0/repositories/{workspace}/{repo_slug}/pipelines/{pipeline_uuid}/steps/{step_uuid}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Pipeline Step"
        },
        "Base type for most resource objects. It defines the common `type` element that identifies an object's type. It also identifies the element as Swagger's `discriminator`.",
        "**Key properties:**",
        {
          "$ul": [
            "**type**",
            "**completed_on**: The timestamp when the step execution was completed. This is not set if the step is still in progress.",
            [
              "**image**: The definition of a Docker image that can be used for a Bitbucket Pipelines step execution context.",
              {
                "$ul": [
                  "**email**: The email needed to authenticate with the Docker registry. Only required when using a private Docker image.",
                  "**name**: The name of the image. If the image is hosted on DockerHub the short name can be used, otherwise the fully qualified name is required here.",
                  "**password**: The password needed to authenticate with the Docker registry. Only required when using a private Docker image.",
                  "**username**: The username needed to authenticate with the Docker registry. Only required when using a private Docker image."
                ]
              }
            ],
            "**script_commands**: The list of build commands. These commands are executed in the build container.",
            "**setup_commands**: The list of commands that are executed as part of the setup phase of the build. These commands are executed outside the build container.",
            "**started_on**: The timestamp when the step execution was started. This is not set when the step hasn't executed yet.",
            [
              "**state**: Base type for most resource objects. It defines the common `type` element that identifies an object's type. It also identifies the element as Swagger's `discriminator`.",
              {
                "$ul": [
                  "**type**"
                ]
              }
            ],
            "**uuid**: The UUID identifying the step."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Error"
        },
        "Base type for most resource objects. It defines the common `type` element that identifies an object's type. It also identifies the element as Swagger's `discriminator`.",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**error**",
              {
                "$ul": [
                  "**data**: Optional structured data that is endpoint-specific.",
                  "**detail**",
                  "**message**"
                ]
              }
            ],
            "**type**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
