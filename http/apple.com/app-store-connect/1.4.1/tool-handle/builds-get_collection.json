{
  "name": "builds-get_collection",
  "parameters": {
    "type": "object",
    "properties": {
      "filter[betaAppReviewSubmission.betaReviewState]": {
        "items": {
          "enum": [
            "WAITING_FOR_REVIEW",
            "IN_REVIEW",
            "REJECTED",
            "APPROVED"
          ],
          "type": "string"
        },
        "type": "array",
        "description": "filter by attribute 'betaAppReviewSubmission.betaReviewState'"
      },
      "filter[expired]": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "filter by attribute 'expired'"
      },
      "filter[preReleaseVersion.platform]": {
        "items": {
          "enum": [
            "IOS",
            "MAC_OS",
            "TV_OS"
          ],
          "type": "string"
        },
        "type": "array",
        "description": "filter by attribute 'preReleaseVersion.platform'"
      },
      "filter[preReleaseVersion.version]": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "filter by attribute 'preReleaseVersion.version'"
      },
      "filter[processingState]": {
        "items": {
          "enum": [
            "PROCESSING",
            "FAILED",
            "INVALID",
            "VALID"
          ],
          "type": "string"
        },
        "type": "array",
        "description": "filter by attribute 'processingState'"
      },
      "filter[usesNonExemptEncryption]": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "filter by attribute 'usesNonExemptEncryption'"
      },
      "filter[version]": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "filter by attribute 'version'"
      },
      "filter[app]": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "filter by id(s) of related 'app'"
      },
      "filter[appStoreVersion]": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "filter by id(s) of related 'appStoreVersion'"
      },
      "filter[betaGroups]": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "filter by id(s) of related 'betaGroups'"
      },
      "filter[preReleaseVersion]": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "filter by id(s) of related 'preReleaseVersion'"
      },
      "filter[id]": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "filter by id(s)"
      },
      "sort": {
        "items": {
          "enum": [
            "preReleaseVersion",
            "-preReleaseVersion",
            "uploadedDate",
            "-uploadedDate",
            "version",
            "-version"
          ],
          "type": "string"
        },
        "type": "array",
        "description": "comma-separated list of sort expressions; resources will be sorted as specified"
      },
      "fields[builds]": {
        "items": {
          "enum": [
            "app",
            "appEncryptionDeclaration",
            "appStoreVersion",
            "betaAppReviewSubmission",
            "betaBuildLocalizations",
            "betaGroups",
            "buildBetaDetail",
            "diagnosticSignatures",
            "expirationDate",
            "expired",
            "iconAssetToken",
            "icons",
            "individualTesters",
            "minOsVersion",
            "perfPowerMetrics",
            "preReleaseVersion",
            "processingState",
            "uploadedDate",
            "usesNonExemptEncryption",
            "version"
          ],
          "type": "string"
        },
        "type": "array",
        "description": "the fields to include for returned resources of type builds"
      },
      "limit": {
        "maximum": 200,
        "type": "integer",
        "description": "maximum resources per page"
      },
      "include": {
        "items": {
          "enum": [
            "app",
            "appEncryptionDeclaration",
            "appStoreVersion",
            "betaAppReviewSubmission",
            "betaBuildLocalizations",
            "buildBetaDetail",
            "icons",
            "individualTesters",
            "preReleaseVersion"
          ],
          "type": "string"
        },
        "type": "array",
        "description": "comma-separated list of relationships to include"
      },
      "fields[appEncryptionDeclarations]": {
        "items": {
          "enum": [
            "app",
            "appEncryptionDeclarationState",
            "availableOnFrenchStore",
            "builds",
            "codeValue",
            "containsProprietaryCryptography",
            "containsThirdPartyCryptography",
            "documentName",
            "documentType",
            "documentUrl",
            "exempt",
            "platform",
            "uploadedDate",
            "usesEncryption"
          ],
          "type": "string"
        },
        "type": "array",
        "description": "the fields to include for returned resources of type appEncryptionDeclarations"
      },
      "fields[betaAppReviewSubmissions]": {
        "items": {
          "enum": [
            "betaReviewState",
            "build"
          ],
          "type": "string"
        },
        "type": "array",
        "description": "the fields to include for returned resources of type betaAppReviewSubmissions"
      },
      "fields[buildBetaDetails]": {
        "items": {
          "enum": [
            "autoNotifyEnabled",
            "build",
            "externalBuildState",
            "internalBuildState"
          ],
          "type": "string"
        },
        "type": "array",
        "description": "the fields to include for returned resources of type buildBetaDetails"
      },
      "fields[buildIcons]": {
        "items": {
          "enum": [
            "iconAsset",
            "iconType"
          ],
          "type": "string"
        },
        "type": "array",
        "description": "the fields to include for returned resources of type buildIcons"
      },
      "fields[perfPowerMetrics]": {
        "items": {
          "enum": [
            "deviceType",
            "metricType",
            "platform"
          ],
          "type": "string"
        },
        "type": "array",
        "description": "the fields to include for returned resources of type perfPowerMetrics"
      },
      "fields[preReleaseVersions]": {
        "items": {
          "enum": [
            "app",
            "builds",
            "platform",
            "version"
          ],
          "type": "string"
        },
        "type": "array",
        "description": "the fields to include for returned resources of type preReleaseVersions"
      },
      "fields[appStoreVersions]": {
        "items": {
          "enum": [
            "ageRatingDeclaration",
            "app",
            "appStoreReviewDetail",
            "appStoreState",
            "appStoreVersionLocalizations",
            "appStoreVersionPhasedRelease",
            "appStoreVersionSubmission",
            "build",
            "copyright",
            "createdDate",
            "downloadable",
            "earliestReleaseDate",
            "idfaDeclaration",
            "platform",
            "releaseType",
            "routingAppCoverage",
            "usesIdfa",
            "versionString"
          ],
          "type": "string"
        },
        "type": "array",
        "description": "the fields to include for returned resources of type appStoreVersions"
      },
      "fields[diagnosticSignatures]": {
        "items": {
          "enum": [
            "diagnosticType",
            "logs",
            "signature",
            "weight"
          ],
          "type": "string"
        },
        "type": "array",
        "description": "the fields to include for returned resources of type diagnosticSignatures"
      },
      "fields[betaTesters]": {
        "items": {
          "enum": [
            "apps",
            "betaGroups",
            "builds",
            "email",
            "firstName",
            "inviteType",
            "lastName"
          ],
          "type": "string"
        },
        "type": "array",
        "description": "the fields to include for returned resources of type betaTesters"
      },
      "fields[betaBuildLocalizations]": {
        "items": {
          "enum": [
            "build",
            "locale",
            "whatsNew"
          ],
          "type": "string"
        },
        "type": "array",
        "description": "the fields to include for returned resources of type betaBuildLocalizations"
      },
      "fields[apps]": {
        "items": {
          "enum": [
            "appInfos",
            "appStoreVersions",
            "availableInNewTerritories",
            "availableTerritories",
            "betaAppLocalizations",
            "betaAppReviewDetail",
            "betaGroups",
            "betaLicenseAgreement",
            "betaTesters",
            "builds",
            "bundleId",
            "contentRightsDeclaration",
            "endUserLicenseAgreement",
            "gameCenterEnabledVersions",
            "inAppPurchases",
            "isOrEverWasMadeForKids",
            "name",
            "perfPowerMetrics",
            "preOrder",
            "preReleaseVersions",
            "prices",
            "primaryLocale",
            "sku"
          ],
          "type": "string"
        },
        "type": "array",
        "description": "the fields to include for returned resources of type apps"
      },
      "limit[betaBuildLocalizations]": {
        "maximum": 50,
        "type": "integer",
        "description": "maximum number of related betaBuildLocalizations returned (when they are included)"
      },
      "limit[icons]": {
        "maximum": 50,
        "type": "integer",
        "description": "maximum number of related icons returned (when they are included)"
      },
      "limit[individualTesters]": {
        "maximum": 50,
        "type": "integer",
        "description": "maximum number of related individualTesters returned (when they are included)"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://api.appstoreconnect.apple.com//v1/builds{?filter[betaAppReviewSubmission.betaReviewState],filter[expired],filter[preReleaseVersion.platform],filter[preReleaseVersion.version],filter[processingState],filter[usesNonExemptEncryption],filter[version],filter[app],filter[appStoreVersion],filter[betaGroups],filter[preReleaseVersion],filter[id],sort,fields[builds],limit,include,fields[appEncryptionDeclarations],fields[betaAppReviewSubmissions],fields[buildBetaDetails],fields[buildIcons],fields[perfPowerMetrics],fields[preReleaseVersions],fields[appStoreVersions],fields[diagnosticSignatures],fields[betaTesters],fields[betaBuildLocalizations],fields[apps],limit[betaBuildLocalizations],limit[icons],limit[individualTesters]}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "BuildsResponse"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**data**",
            "**included**",
            [
              "**links**",
              {
                "$ul": [
                  "**first**",
                  "**next**",
                  "**self**"
                ]
              }
            ],
            [
              "**meta**",
              {
                "$ul": [
                  [
                    "**paging**",
                    {
                      "$ul": [
                        "**limit**",
                        "**total**"
                      ]
                    }
                  ]
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**errors**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**errors**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
