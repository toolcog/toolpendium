{
  "name": "Place_GetByGeo",
  "description": "Gets the places that lie within a geographic region. The geographic region of interest can either be specified\r\n            by using a lat/lon geo-point and a radius in metres to return places within the locus defined by the lat/lon of\r\n            its centre or alternatively, by the use of a bounding box defined by the lat/lon of its north-west and south-east corners.\r\n            Optionally filters on type and can strip properties for a smaller payload.",
  "parameters": {
    "type": "object",
    "properties": {
      "radius": {
        "format": "double",
        "type": "number",
        "description": "The radius of the bounding circle in metres when only lat/lon are specified."
      },
      "categories": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "An optional list of comma separated property categories to return in the Place's property bag. If null or empty, all categories of property are returned. Pass the keyword \"none\" to return no properties (a valid list of categories can be obtained from the /Place/Meta/categories endpoint)"
      },
      "includeChildren": {
        "type": "boolean",
        "description": "Defaults to false. If true child places e.g. individual charging stations at a charge point while be included, otherwise just the URLs of any child places will be returned"
      },
      "type": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "Place types to filter on, or null to return all types"
      },
      "activeOnly": {
        "type": "boolean",
        "description": "An optional parameter to limit the results to active records only (Currently only the 'VariableMessageSign' place type is supported)"
      },
      "numberOfPlacesToReturn": {
        "format": "int32",
        "type": "integer",
        "description": "If specified, limits the number of returned places equal to the given value"
      },
      "placeGeo.swLat": {
        "format": "double",
        "type": "number"
      },
      "placeGeo.swLon": {
        "format": "double",
        "type": "number"
      },
      "placeGeo.neLat": {
        "format": "double",
        "type": "number"
      },
      "placeGeo.neLon": {
        "format": "double",
        "type": "number"
      },
      "placeGeo.lat": {
        "format": "double",
        "type": "number"
      },
      "placeGeo.lon": {
        "format": "double",
        "type": "number"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://api.digital.tfl.gov.uk/Place{?radius,categories,includeChildren,type,activeOnly,numberOfPlacesToReturn,placeGeo.swLat,placeGeo.swLon,placeGeo.neLat,placeGeo.neLon,placeGeo.lat,placeGeo.lon}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "List"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**accessibilitySummary**",
            "**additionalProperties**: A bag of additional key/value pairs with extra information about this place.",
            "**children**",
            "**childrenUrls**",
            "**commonName**: A human readable name.",
            "**distance**: The distance of the place from its search point, if this is the result\r",
            "**fullName**",
            "**hubNaptanCode**",
            "**icsCode**",
            "**id**: A unique identifier.",
            "**indicator**: The indicator of the stop point e.g. \"Stop K\"",
            "**individualStopId**",
            "**lat**: WGS84 latitude of the location.",
            "**lineGroup**",
            "**lineModeGroups**",
            "**lines**",
            "**lon**: WGS84 longitude of the location.",
            "**modes**",
            "**naptanId**",
            "**naptanMode**",
            "**placeType**: The type of Place. See /Place/Meta/placeTypes for possible values.",
            "**platformName**",
            "**smsCode**",
            "**stationNaptan**",
            "**status**",
            "**stopLetter**: The stop letter, if it could be cleansed from the Indicator e.g. \"K\"",
            "**stopType**",
            "**url**: The unique location of this resource."
          ]
        },
        {
          "$each": "$.body.*",
          "$as": "item",
          "$block": [
            {
              "$h2": {
                "$": "$.item.id"
              }
            },
            {
              "$lang": "json",
              "$code": {
                "$encode": "json",
                "$indent": true,
                "$content": {
                  "$": "$.item"
                }
              }
            }
          ]
        }
      ]
    }
  }
}
