{
  "name": "search_groups",
  "description": "Search groups",
  "parameters": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "Find groups that have the given text somewhere in their name (case insensitive)."
      },
      "latitude": {
        "type": "number",
        "description": "Find groups near the given latitude and longitude."
      },
      "longitude": {
        "type": "number",
        "description": "Find groups near the given latitude and longitude."
      },
      "distance": {
        "default": 100,
        "maximum": 150,
        "minimum": 0,
        "type": "number",
        "description": "When latitude and longitude are passed, distance can optionally be passed to only return groups within a certain distance (in kilometers) from the point specified by the latitude and longitude.  The distance must be > 0 and <= 150 and will default to 100.\n"
      },
      "country": {
        "type": "string",
        "description": "Find groups in the given country where country is a 2 letter country code for the country (see https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2 ).\n"
      },
      "region": {
        "type": "string",
        "description": "For countries with regions (AU, CA, GB, US), search groups in a specific region as specified by the region abbreviation.  The supported regions and their abbreviations are listed below. <br /><br /> NOTE: The region and postal_code parameters cannot be used at the same time and if both are passed then the postal_code will take priority. <br /><br /> --- <br /><br /> **AU**<br /> - QLD: Queensland<br /> - SA: South Australia<br /> - TAS: Tasmania<br /> - VIC: Victoria<br /> - WA: Western Australia<br /> - NT: Northern Territory<br /> - NSW: New South Wales - ACT<br /> <br /> **CA**<br /> - AB: Alberta<br /> - BC: British Columbia<br /> - MB: Manitoba<br /> - NB: New Brunswick<br /> - NL: Newfoundland and Labrador<br /> - NS: Nova Scotia<br /> - ON: Ontario<br /> - QC: Quebec<br /> - SK: Saskatchewan<br /> - PE: Prince Edward Island<br /> <br /> **GB**<br /> - E: East<br /> - EM: East Midlands<br /> - LDN: London<br /> - NE: North East<br /> - NW: North West<br /> - NI: Northern Ireland<br /> - SC: Scotland<br /> - SE: South East<br /> - SW: South West<br /> - WA: Wales<br /> - WM: West Midlands<br /> - YH: Yorkshire and the Humber<br /> <br /> **US**<br /> All 50 states and the District of Columbia are supported.  For the abbreviations, see: https://github.com/jasonong/List-of-US-States/blob/master/states.csv\n"
      },
      "postal_code": {
        "type": "string",
        "description": "Find groups in the given postal code.  Only a few countries support postal code searches (US, CA, AU, GB).  The country parameter must be passed when the postal_code parameter is set. <br /><br /> NOTE: The region and postal_code parameters cannot be used at the same time and if both are passed then the postal_code will take priority.\n"
      },
      "page": {
        "default": 1,
        "minimum": 1,
        "type": "integer",
        "description": "The page of groups to return."
      },
      "per_page": {
        "default": 20,
        "maximum": 100,
        "minimum": 1,
        "type": "integer",
        "description": "The number of groups to return per page (must be >= 1 and <= 100)."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://trashnothing.com/api/v1.3/groups{?name,latitude,longitude,distance,country,region,postal_code,page,per_page}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**end_index**: The index of the last group being returned (an integer between start_index and num_groups).",
            "**groups**",
            "**num_groups**: The total number of groups available.",
            "**num_pages**: The total number of pages available.",
            "**page**: The page number of the groups being returned.",
            "**per_page**: The number of groups being returned per page.",
            "**start_index**: The index of the first group being returned (an integer between 1 and num_groups)."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
