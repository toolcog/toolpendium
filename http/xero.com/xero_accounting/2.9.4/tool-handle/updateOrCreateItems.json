{
  "name": "updateOrCreateItems",
  "description": "Updates or creates one or more items",
  "parameters": {
    "type": "object",
    "properties": {
      "summarizeErrors": {
        "default": false,
        "type": "boolean",
        "description": "If false return 200 OK and mix of successfully created objects and any with validation errors"
      },
      "unitdp": {
        "type": "integer",
        "description": "e.g. unitdp=4 â€“ (Unit Decimal Places) You can opt in to use four decimal places for unit amounts"
      },
      "xero-tenant-id": {
        "type": "string",
        "description": "Xero identifier for Tenant"
      },
      "body": {
        "$ref": "#/$defs/Items"
      }
    },
    "required": [
      "xero-tenant-id",
      "body"
    ],
    "$defs": {
      "Items": {
        "properties": {
          "Items": {
            "items": {
              "$ref": "#/$defs/Item"
            },
            "type": "array"
          }
        },
        "type": "object",
        "x-isObjectArray": true
      },
      "Item": {
        "externalDocs": {
          "url": "http://developer.xero.com/documentation/api/items/"
        },
        "properties": {
          "Code": {
            "description": "User defined item code (max length = 30)",
            "maxLength": 30,
            "type": "string"
          },
          "Description": {
            "description": "The sales description of the item (max length = 4000)",
            "maxLength": 4000,
            "type": "string"
          },
          "InventoryAssetAccountCode": {
            "description": "The inventory asset account for the item. The account must be of type INVENTORY. The  COGSAccountCode in PurchaseDetails is also required to create a tracked item",
            "type": "string"
          },
          "IsPurchased": {
            "description": "Boolean value, defaults to true. When IsPurchased is true the item is available for purchase transactions in the Xero UI. If IsPurchased is updated to false then PurchaseDescription and PurchaseDetails values will be nulled.",
            "type": "boolean"
          },
          "IsSold": {
            "description": "Boolean value, defaults to true. When IsSold is true the item will be available on sales transactions in the Xero UI. If IsSold is updated to false then Description and SalesDetails values will be nulled.",
            "type": "boolean"
          },
          "IsTrackedAsInventory": {
            "description": "True for items that are tracked as inventory. An item will be tracked as inventory if the InventoryAssetAccountCode and COGSAccountCode are set.",
            "type": "boolean"
          },
          "ItemID": {
            "description": "The Xero identifier for an Item",
            "format": "uuid",
            "type": "string"
          },
          "Name": {
            "description": "The name of the item (max length = 50)",
            "maxLength": 50,
            "type": "string"
          },
          "PurchaseDescription": {
            "description": "The purchase description of the item (max length = 4000)",
            "maxLength": 4000,
            "type": "string"
          },
          "PurchaseDetails": {
            "$ref": "#/$defs/Purchase"
          },
          "QuantityOnHand": {
            "description": "The quantity of the item on hand",
            "format": "double",
            "type": "number",
            "x-is-money": true
          },
          "SalesDetails": {
            "$ref": "#/$defs/Purchase"
          },
          "StatusAttributeString": {
            "description": "Status of object",
            "type": "string"
          },
          "TotalCostPool": {
            "description": "The value of the item on hand. Calculated using average cost accounting.",
            "format": "double",
            "type": "number",
            "x-is-money": true
          },
          "UpdatedDateUTC": {
            "description": "Last modified date in UTC format",
            "example": "/Date(1573755038314)/",
            "readOnly": true,
            "type": "string",
            "x-is-msdate-time": true
          },
          "ValidationErrors": {
            "description": "Displays array of validation error messages from the API",
            "items": {
              "$ref": "#/$defs/ValidationError"
            },
            "type": "array"
          }
        },
        "required": [
          "Code"
        ],
        "type": "object"
      },
      "Purchase": {
        "externalDocs": {
          "url": "http://developer.xero.com/documentation/api/items/"
        },
        "properties": {
          "AccountCode": {
            "description": "Default account code to be used for purchased/sale. Not applicable to the purchase details of tracked items",
            "type": "string"
          },
          "COGSAccountCode": {
            "description": "Cost of goods sold account. Only applicable to the purchase details of tracked items.",
            "type": "string"
          },
          "TaxType": {
            "description": "The tax type from TaxRates",
            "type": "string"
          },
          "UnitPrice": {
            "description": "Unit Price of the item. By default UnitPrice is rounded to two decimal places. You can use 4 decimal places by adding the unitdp=4 querystring parameter to your request.",
            "format": "double",
            "type": "number",
            "x-is-money": true
          }
        },
        "type": "object"
      },
      "ValidationError": {
        "externalDocs": {
          "url": "https://developer.xero.com/documentation/api/http-response-codes"
        },
        "properties": {
          "Message": {
            "description": "Validation error message",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://api.xero.com/api.xro/2.0/Items{?summarizeErrors,unitdp}"
    },
    "headers": {
      "xero-tenant-id": {
        "$": "xero-tenant-id"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Items**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Elements**: Array of Elements of validation Errors",
            "**ErrorNumber**: Exception number",
            "**Message**: Exception message",
            "**Type**: Exception type"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
