{
  "name": "updateLinkedTransaction",
  "description": "Updates a specific linked transactions (billable expenses)",
  "parameters": {
    "type": "object",
    "properties": {
      "LinkedTransactionID": {
        "format": "uuid",
        "type": "string",
        "description": "Unique identifier for a LinkedTransaction"
      },
      "xero-tenant-id": {
        "type": "string",
        "description": "Xero identifier for Tenant"
      },
      "body": {
        "$ref": "#/$defs/LinkedTransactions"
      }
    },
    "required": [
      "LinkedTransactionID",
      "xero-tenant-id",
      "body"
    ],
    "$defs": {
      "LinkedTransactions": {
        "properties": {
          "LinkedTransactions": {
            "items": {
              "$ref": "#/$defs/LinkedTransaction"
            },
            "type": "array"
          }
        },
        "type": "object",
        "x-isObjectArray": true
      },
      "LinkedTransaction": {
        "externalDocs": {
          "url": "http://developer.xero.com/documentation/api/linked-transactions/"
        },
        "properties": {
          "ContactID": {
            "description": "Filter by the combination of ContactID and Status. Get all the linked transactions that have been assigned to a particular customer and have a particular status e.g. GET /LinkedTransactions?ContactID=4bb34b03-3378-4bb2-a0ed-6345abf3224e&Status=APPROVED.",
            "format": "uuid",
            "type": "string"
          },
          "LinkedTransactionID": {
            "description": "The Xero identifier for an Linked Transaction e.g./LinkedTransactions/297c2dc5-cc47-4afd-8ec8-74990b8761e9",
            "format": "uuid",
            "type": "string"
          },
          "SourceLineItemID": {
            "description": "The line item identifier from the source transaction.",
            "format": "uuid",
            "type": "string"
          },
          "SourceTransactionID": {
            "description": "Filter by the SourceTransactionID. Get all the linked transactions created from a particular ACCPAY invoice",
            "format": "uuid",
            "type": "string"
          },
          "SourceTransactionTypeCode": {
            "description": "The Type of the source tranasction. This will be ACCPAY if the linked transaction was created from an invoice and SPEND if it was created from a bank transaction.",
            "enum": [
              "ACCPAY",
              "SPEND"
            ],
            "type": "string"
          },
          "Status": {
            "description": "Filter by the combination of ContactID and Status. Get all the linked transactions that have been assigned to a particular customer and have a particular status e.g. GET /LinkedTransactions?ContactID=4bb34b03-3378-4bb2-a0ed-6345abf3224e&Status=APPROVED.",
            "enum": [
              "APPROVED",
              "DRAFT",
              "ONDRAFT",
              "BILLED",
              "VOIDED"
            ],
            "type": "string"
          },
          "TargetLineItemID": {
            "description": "The line item identifier from the target transaction. It is possible  to link multiple billable expenses to the same TargetLineItemID.",
            "format": "uuid",
            "type": "string"
          },
          "TargetTransactionID": {
            "description": "Filter by the TargetTransactionID. Get all the linked transactions  allocated to a particular ACCREC invoice",
            "format": "uuid",
            "type": "string"
          },
          "Type": {
            "description": "This will always be BILLABLEEXPENSE. More types may be added in future.",
            "enum": [
              "BILLABLEEXPENSE"
            ],
            "type": "string"
          },
          "UpdatedDateUTC": {
            "description": "The last modified date in UTC format",
            "example": "/Date(1573755038314)/",
            "readOnly": true,
            "type": "string",
            "x-is-msdate-time": true
          },
          "ValidationErrors": {
            "description": "Displays array of validation error messages from the API",
            "items": {
              "$ref": "#/$defs/ValidationError"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ValidationError": {
        "externalDocs": {
          "url": "https://developer.xero.com/documentation/api/http-response-codes"
        },
        "properties": {
          "Message": {
            "description": "Validation error message",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://api.xero.com/api.xro/2.0/LinkedTransactions/{LinkedTransactionID}"
    },
    "headers": {
      "xero-tenant-id": {
        "$": "xero-tenant-id"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**LinkedTransactions**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Elements**: Array of Elements of validation Errors",
            "**ErrorNumber**: Exception number",
            "**Message**: Exception message",
            "**Type**: Exception type"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
