{
  "name": "GET_segments",
  "description": "**The Segmentation V2 API is currently in private beta. If you'd like to be added to the beta, please fill out this [form]({https://docs.google.com/forms/d/e/1FAIpQLSd5zwC9dRk8lAp1oTWjdGc-aSY69flW_7wnutvKBhpUluSnfQ/viewform)**\n\nThe query param `parent_list_ids` is treated as a filter.  Any match will be returned.  0 matches will return a response code of 200 with an empty `results` array.\n\n`parent_list_ids` | `no_parent_list_id` | `result`\n-----------------:|:--------------------:|:-------------\nempty | false | all segments\nvalues | false | segments filtered by list_ids\nvalues | true | segments filtered by list_ids and segments with no parent list_ids\nempty | true | segments with no parent list_ids",
  "parameters": {
    "type": "object",
    "properties": {
      "parent_list_ids": {
        "type": "string",
        "description": "A comma separated list up to 50 in size, to filter segments on.  Only segments that have any of these list ids as the parent list will be retrieved. This is different from the parameter of the same name used when creating a segment."
      },
      "no_parent_list_id": {
        "default": false,
        "type": "boolean",
        "description": "If set to `true` segments with an empty value of `parent_list_id` will be returned in the filter.  If the value is not present it defaults to 'false'."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "http://api.sendgrid.com/v3/marketing/segments/2.0{?parent_list_ids,no_parent_list_id}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "all_segments_response"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**_metadata**",
              {
                "$ul": [
                  "**count**",
                  "**next**",
                  "**prev**",
                  "**self**"
                ]
              }
            ],
            "**contacts_count**: Total number of contacts present in the segment",
            "**created_at**: ISO8601 timestamp of when the object was created",
            "**id**: ID assigned to the segment when created.",
            "**name**: Name of the segment.",
            "**next_sample_update**: ISO8601 timestamp of when the samples will be next updated",
            "**parent_list_ids**: The array of list ids to filter contacts on when building this segment. It allows only one such list id for now. We will support more in future",
            "**query_version**: If not set, segment contains a query for use with Segment v1 APIs. If set to '2', segment contains a SQL query for use in v2.",
            "**sample_updated_at**: ISO8601 timestamp of when the samples were last updated",
            [
              "**status**: Segment status indicates whether the segment's contacts will be updated periodically",
              {
                "$ul": [
                  "**error_message**: Describes any errors that were encountered during query validation",
                  "**query_validation**: Status of query validation. PENDING, VALID, or INVALID"
                ]
              }
            ],
            "**updated_at**: ISO8601 timestamp of when the object was last updated"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "errors-seg"
        },
        "If the request is incorrect, an array of errors will be returned.",
        "**Key properties:**",
        {
          "$ul": [
            "**errors**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "500": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "errors-seg"
        },
        "If the request is incorrect, an array of errors will be returned.",
        "**Key properties:**",
        {
          "$ul": [
            "**errors**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
