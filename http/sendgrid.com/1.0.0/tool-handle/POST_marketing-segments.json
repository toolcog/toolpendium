{
  "name": "POST_marketing-segments",
  "description": "**This endpoint allows you to create a segment.**",
  "parameters": {
    "type": "object",
    "properties": {
      "body": {
        "allOf": [
          {
            "$ref": "#/$defs/segment_write_v2"
          },
          {
            "properties": {
              "parent_list_id": {
                "description": "The id of the list if this segment is a child of a list.  This implies the query is rewritten as `(${query_dsl}) AND CONTAINS(list_ids, ${parent_list_id})`",
                "format": "uuid",
                "maxLength": 36,
                "minLength": 36,
                "type": "string"
              }
            },
            "type": "object"
          }
        ]
      }
    },
    "$defs": {
      "segment_write_v2": {
        "properties": {
          "name": {
            "description": "Name of the segment.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "parent_list_ids": {
            "description": "The array of list ids to filter contacts on when building this segment. It allows only one such list id for now. We will support more in future",
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "query_dsl": {
            "description": "SQL query which will filter contacts based on the conditions provided",
            "type": "string"
          }
        },
        "required": [
          "name",
          "query_dsl"
        ],
        "title": "segment_write",
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://api.sendgrid.com/v3/marketing/segments"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "segment_summary"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**contacts_count**",
            "**created_at**: ISO8601 of created timestamp",
            "**id**",
            "**name**: Name of the segment.",
            "**next_sample_update**: ISO8601 string that is equal to `sample_updated_at` plus an internally calculated offset that depends on how often contacts enter or exit segments as the scheduled pipeline updates the samples.",
            "**parent_list_id**: The id of the list if this segment is a child of a list.  This implies the query `AND CONTAINS(list_ids, ${parent_list_id})`",
            "**sample_updated_at**: ISO8601 timestamp the sample was last updated",
            "**updated_at**: ISO8601 timestamp the object was last updated",
            "**contacts_sample**",
            "**query_json**: AST representation of the query DSL",
            "**parent_list_ids**: The array of list ids to filter contacts on when building this segment. It allows only one such list id for now. We will support more in future",
            "**query_dsl**: SQL query which will filter contacts based on the conditions provided"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Global Error Response Schema"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**errors**",
            "**id**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Global Error Response Schema"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**errors**",
            "**id**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Global Error Response Schema"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**errors**",
            "**id**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "500": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**errors**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
