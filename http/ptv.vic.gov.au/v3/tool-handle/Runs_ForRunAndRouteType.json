{
  "name": "Runs_ForRunAndRouteType",
  "description": "View the trip/service run for a specific run_ref and route type",
  "parameters": {
    "type": "object",
    "properties": {
      "run_ref": {
        "type": "string",
        "description": "The run_ref is the identifier of a run as returned by the departures/* and runs/* endpoints. WARNING, run_id is deprecated. Use run_ref instead."
      },
      "route_type": {
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "format": "int32",
        "type": "integer",
        "description": "Number identifying transport mode; values returned via RouteTypes API"
      },
      "expand": {
        "items": {
          "enum": [
            "All",
            "VehicleDescriptor",
            "VehiclePosition",
            "None"
          ],
          "type": "string"
        },
        "type": "array",
        "description": "List of objects to be returned in full (i.e. expanded) - options include: All, VehiclePosition, VehicleDescriptor, or None. Default is None."
      },
      "date_utc": {
        "format": "date-time",
        "type": "string",
        "description": "Date of the request. (optional - defaults to now)"
      },
      "include_geopath": {
        "type": "boolean",
        "description": "Indicates if geopath data will be returned (default = false)"
      },
      "token": {
        "type": "string",
        "description": "Please ignore"
      },
      "devid": {
        "type": "string",
        "description": "Your developer id"
      },
      "signature": {
        "type": "string",
        "description": "Authentication signature for request"
      }
    },
    "required": [
      "run_ref",
      "route_type",
      "expand"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "http://timetableapi.ptv.vic.gov.au/v3/runs/{run_ref}/route_type/{route_type}{?expand,date_utc,include_geopath,token,devid,signature}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**run**",
              {
                "$ul": [
                  "**destination_name**: Name of destination of run",
                  "**direction_id**: Direction of travel identifier",
                  "**express_stop_count**: The number of remaining skipped/express stations for the run/service from a stop",
                  "**final_stop_id**: stop_id of final stop of run",
                  "**geopath**: Geopath of the route",
                  "**route_id**: Route identifier",
                  "**route_type**: Transport mode identifier",
                  "**run_id**: Numeric trip/service run identifier. Defaults to -1 when run identifier is Alphanumeric",
                  "**run_ref**: Alphanumeric trip/service run identifier",
                  "**run_sequence**: Chronological sequence of the trip/service run on the route in direction. Order ascendingly by this field to get chronological order (earliest first) of runs with the same route_id and direction_id.",
                  "**status**: Status of metropolitan train run; returns \"scheduled\" for other modes",
                  [
                    "**vehicle_descriptor**",
                    {
                      "$ul": [
                        "**air_conditioned**: Indicator if vehicle is air conditioned. May be null. Only available for some tram runs.",
                        "**description**: Vehicle description such as \"6 Car Comeng\", \"6 Car Xtrapolis\", \"3 Car Comeng\", \"6 Car Siemens\", \"3 Car Siemens\". May be null/empty.\r",
                        "**id**: Operator identifier of the vehicle such as \"26094\". May be null/empty. Only available for some tram and bus runs.",
                        "**length**: The length of the vehicle. Applies to CIS - Metro Trains",
                        "**low_floor**: Indicator if vehicle has a low floor. May be null. Only available for some tram runs.",
                        "**operator**: Operator name of the vehicle such as \"Metro Trains Melbourne\", \"Yarra Trams\", \"Ventura Bus Line\", \"CDC\" or \"Sita Bus Lines\" . May be null/empty.\r",
                        "**supplier**: Supplier of vehicle descriptor data."
                      ]
                    }
                  ],
                  [
                    "**vehicle_position**",
                    {
                      "$ul": [
                        "**bearing**: Compass bearing of the vehicle when known, clockwise from True North, i.e., 0 is North and 90 is East. May be null.\r",
                        "**datetime_utc**: Date and time that the vehicle position data was supplied.",
                        "**direction**: CIS - Metro Train Vehicle Location Direction",
                        "**easting**: CIS - Metro Train Vehicle Location Easting coordinate",
                        "**expiry_time**: CIS - Metro Train Vehicle Location data expiry time",
                        "**latitude**: Geographic coordinate of latitude of the vehicle when known. May be null.\r",
                        "**longitude**: Geographic coordinate of longitude of the vehicle when known. \r",
                        "**northing**: CIS - Metro Train Vehicle Location Northing coordinate",
                        "**supplier**: Supplier of vehicle position data."
                      ]
                    }
                  ]
                ]
              }
            ],
            [
              "**status**",
              {
                "$ul": [
                  "**health**: API system health status (0=offline, 1=online)",
                  "**version**: API Version number"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "An error response",
        "**Key properties:**",
        {
          "$ul": [
            "**message**: Error message",
            [
              "**status**",
              {
                "$ul": [
                  "**health**: API system health status (0=offline, 1=online)",
                  "**version**: API Version number"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "An error response",
        "**Key properties:**",
        {
          "$ul": [
            "**message**: Error message",
            [
              "**status**",
              {
                "$ul": [
                  "**health**: API system health status (0=offline, 1=online)",
                  "**version**: API Version number"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
