{
  "name": "collectionTicketsUpdate",
  "description": "Update Ticket",
  "parameters": {
    "type": "object",
    "properties": {
      "ticket_id": {
        "type": "string",
        "description": "ID of the ticket you are acting upon."
      },
      "x-apideck-consumer-id": {
        "type": "string",
        "description": "ID of the consumer which you want to get or push data from"
      },
      "x-apideck-app-id": {
        "type": "string",
        "description": "The ID of your Unify application"
      },
      "x-apideck-service-id": {
        "type": "string",
        "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
      },
      "raw": {
        "default": false,
        "type": "boolean",
        "description": "Include raw response. Mostly used for debugging purposes"
      },
      "collection_id": {
        "example": "apideck-io",
        "type": "string",
        "description": "The collection ID"
      },
      "body": {
        "$ref": "#/$defs/Ticket"
      }
    },
    "required": [
      "ticket_id",
      "x-apideck-consumer-id",
      "x-apideck-app-id",
      "collection_id",
      "body"
    ],
    "$defs": {
      "Ticket": {
        "additionalProperties": false,
        "properties": {
          "assignees": {
            "items": {
              "$ref": "#/$defs/Assignee"
            },
            "type": "array"
          },
          "collection_id": {
            "description": "The ticket's collection ID",
            "example": "12345",
            "nullable": true,
            "readOnly": true,
            "type": "string"
          },
          "completed_at": {
            "description": "When the ticket was completed",
            "example": "2020-09-30T07:43:32.000Z",
            "format": "date-time",
            "nullable": true,
            "readOnly": true,
            "title": "Completed at (timestamp)",
            "type": "string"
          },
          "created_at": {
            "$ref": "#/$defs/CreatedAt"
          },
          "created_by": {
            "$ref": "#/$defs/CreatedBy"
          },
          "custom_mappings": {
            "$ref": "#/$defs/CustomMappings"
          },
          "description": {
            "description": "The ticket's description. HTML version of description is mapped if supported by the third-party platform",
            "example": "I am facing issues with my internet connection",
            "nullable": true,
            "title": "Description",
            "type": "string"
          },
          "due_date": {
            "description": "Due date of the ticket",
            "example": "2020-09-30T07:43:32.000Z",
            "format": "date-time",
            "nullable": true,
            "title": "Due date (timestamp)",
            "type": "string"
          },
          "id": {
            "$ref": "#/$defs/Id"
          },
          "parent_id": {
            "description": "The ticket's parent ID",
            "example": "12345",
            "nullable": true,
            "type": "string"
          },
          "priority": {
            "description": "Priority of the ticket",
            "enum": [
              "low",
              "normal",
              "high",
              "urgent"
            ],
            "example": "high",
            "nullable": true,
            "title": "Priority",
            "type": "string",
            "x-apideck-enum-id": "tickets.priority"
          },
          "status": {
            "description": "The current status of the ticket. Possible values include: open, in_progress, closed, or - in cases where there is no clear mapping - the original value passed through.",
            "example": "open",
            "nullable": true,
            "type": "string"
          },
          "subject": {
            "description": "Subject of the ticket",
            "example": "Technical Support Request",
            "nullable": true,
            "title": "Subject",
            "type": "string"
          },
          "tags": {
            "items": {
              "$ref": "#/$defs/CollectionTag"
            },
            "type": "array"
          },
          "type": {
            "description": "The ticket's type",
            "example": "Technical",
            "nullable": true,
            "title": "Type",
            "type": "string"
          },
          "updated_at": {
            "$ref": "#/$defs/UpdatedAt"
          }
        },
        "required": [
          "id"
        ],
        "type": "object",
        "x-apideck-schema-id": "Ticket",
        "x-apideck-weights": {
          "assignees": "high",
          "collection_id": "high",
          "completed_at": "medium",
          "created_at": "critical",
          "description": "high",
          "due_date": "medium",
          "id": "critical",
          "status": "critical",
          "subject": "high",
          "tags": "high",
          "type": "medium",
          "updated_at": "critical"
        }
      },
      "Assignee": {
        "additionalProperties": false,
        "properties": {
          "id": {
            "description": "A unique identifier for an object.",
            "example": "12345",
            "title": "ID",
            "type": "string"
          },
          "username": {
            "example": "Cocoa",
            "nullable": true,
            "readOnly": true,
            "title": "Name",
            "type": "string"
          }
        },
        "required": [
          "id"
        ],
        "type": "object",
        "x-apideck-schema-id": "Assignee",
        "x-apideck-weights": {
          "id": "critical",
          "username": "medium"
        }
      },
      "CreatedAt": {
        "description": "The date and time when the object was created.",
        "example": "2020-09-30T07:43:32.000Z",
        "format": "date-time",
        "nullable": true,
        "readOnly": true,
        "title": "Created at (timestamp)",
        "type": "string"
      },
      "CreatedBy": {
        "description": "The user who created the object.",
        "example": "12345",
        "nullable": true,
        "readOnly": true,
        "title": "Created by",
        "type": "string"
      },
      "CustomMappings": {
        "description": "When custom mappings are configured on the resource, the result is included here.",
        "nullable": true,
        "type": "object",
        "x-apideck-schema-id": "CustomMappings"
      },
      "Id": {
        "description": "A unique identifier for an object.",
        "example": "12345",
        "readOnly": true,
        "title": "ID",
        "type": "string"
      },
      "CollectionTag": {
        "additionalProperties": false,
        "properties": {
          "custom_mappings": {
            "$ref": "#/$defs/CustomMappings"
          },
          "id": {
            "description": "A unique identifier for an object.",
            "example": "12345",
            "nullable": true,
            "title": "ID",
            "type": "string"
          },
          "name": {
            "description": "The name of the tag.",
            "example": "User Experience",
            "nullable": true,
            "readOnly": true,
            "title": "Name",
            "type": "string"
          }
        },
        "required": [
          "id"
        ],
        "type": "object",
        "x-apideck-schema-id": "Tag",
        "x-apideck-weights": {
          "id": "critical",
          "name": "medium"
        }
      },
      "UpdatedAt": {
        "description": "The date and time when the object was last updated.",
        "example": "2020-09-30T07:43:32.000Z",
        "format": "date-time",
        "nullable": true,
        "readOnly": true,
        "title": "Updated at (timestamp)",
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PATCH",
    "url": {
      "$uri": "https://unify.apideck.com/issue-tracking/collections/{collection_id}/tickets/{ticket_id}{?raw}"
    },
    "headers": {
      "x-apideck-consumer-id": {
        "$": "x-apideck-consumer-id"
      },
      "x-apideck-app-id": {
        "$": "x-apideck-app-id"
      },
      "x-apideck-service-id": {
        "$": "x-apideck-service-id"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**data**",
              {
                "$ul": [
                  "**id**: The unique identifier of the resource"
                ]
              }
            ],
            "**operation**: Operation performed",
            "**resource**: Unified API resource name",
            "**service**: Apideck ID of service provider",
            "**status**: HTTP Response Status",
            "**status_code**: HTTP Response Status Code"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Contains parameter or domain specific information related to the error and why it occurred.",
            "**error**: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "**message**: A human-readable message providing more details about the error.",
            "**ref**: Link to documentation of error type",
            "**status_code**: HTTP status code",
            "**type_name**: The type of error returned"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Contains parameter or domain specific information related to the error and why it occurred.",
            "**error**: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "**message**: A human-readable message providing more details about the error.",
            "**ref**: Link to documentation of error type",
            "**status_code**: HTTP status code",
            "**type_name**: The type of error returned"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "402": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Contains parameter or domain specific information related to the error and why it occurred.",
            "**error**: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "**message**: A human-readable message providing more details about the error.",
            "**ref**: Link to documentation of error type",
            "**status_code**: HTTP status code",
            "**type_name**: The type of error returned"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Contains parameter or domain specific information related to the error and why it occurred.",
            "**error**: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "**message**: A human-readable message providing more details about the error.",
            "**ref**: Link to documentation of error type",
            "**status_code**: HTTP status code",
            "**type_name**: The type of error returned"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "422": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Contains parameter or domain specific information related to the error and why it occurred.",
            "**error**: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "**message**: A human-readable message providing more details about the error.",
            "**ref**: Link to documentation of error type",
            "**status_code**: HTTP status code",
            "**type_name**: The type of error returned"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "default": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Contains parameter or domain specific information related to the error and why it occurred.",
            "**error**: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "**message**: A human-readable message providing more details about the error.",
            "**ref**: Link to documentation of error type",
            "**status_code**: HTTP status code",
            "**type_name**: The type of error returned"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
