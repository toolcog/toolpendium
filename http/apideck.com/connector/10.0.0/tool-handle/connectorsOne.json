{
  "name": "connectorsOne",
  "description": "Get Connector",
  "parameters": {
    "type": "object",
    "properties": {
      "x-apideck-app-id": {
        "type": "string",
        "description": "The ID of your Unify application"
      },
      "id": {
        "type": "string",
        "description": "ID of the record you are acting upon."
      }
    },
    "required": [
      "x-apideck-app-id",
      "id"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://unify.apideck.com/connector/connectors/{id}"
    },
    "headers": {
      "x-apideck-app-id": {
        "$": "x-apideck-app-id"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**data**",
              {
                "$ul": [
                  "**auth_only**: Indicates whether a connector only supports authentication. In this case the connector is not mapped to a Unified API, but can be used with the Proxy API",
                  "**auth_type**: Type of authorization used by the connector",
                  "**blind_mapped**: Set to `true` when connector was implemented from downstream docs only and without API access. This state indicates that integration will require Apideck support, and access to downstream API to validate mapping quality.",
                  "**configurable_resources**: List of resources that have settings that can be configured.",
                  "**custom_scopes**: Set to `true` when connector allows the definition of custom scopes.",
                  "**description**: A description of the object.",
                  "**docs**",
                  "**free_trial_available**: Set to `true` when the connector offers a free trial. Use `signup_url` to sign up for a free trial",
                  "**has_sandbox_credentials**: Indicates whether Apideck Sandbox OAuth credentials are available.",
                  "**icon_url**: Link to a small square icon for the connector.",
                  "**id**: ID of the connector.",
                  "**logo_url**: Link to the full logo for the connector.",
                  "**name**: Name of the connector.",
                  "**oauth_credentials_source**: Location of the OAuth client credentials. For most connectors the OAuth client credentials are stored on integration and managed by the application owner. For others they are stored on connection and managed by the consumer in Vault.",
                  "**oauth_grant_type**: OAuth grant type used by the connector. More info: https://oauth.net/2/grant-types",
                  "**oauth_scopes**: List of OAuth Scopes available for this connector.",
                  "**partner_signup_url**: Link to the connector's partner program signup page.",
                  [
                    "**schema_support**: When a connector has schema_support, a call can be made to retrieve a json schema that describes a downstream resource.",
                    {
                      "$ul": [
                        "**supported**: Can a resource schema be retrieved for this connector?"
                      ]
                    }
                  ],
                  "**service_id**: Service provider identifier",
                  "**settings**",
                  "**signup_url**: Link to the connector's signup page.",
                  "**status**: Status of the connector. Connectors with status live or beta are callable.",
                  "**supported_events**: List of events that are supported on the connector across all Unified APIs.",
                  "**supported_resources**: List of resources that are supported on the connector.",
                  [
                    "**tls_support**",
                    {
                      "$ul": [
                        "**description**: Description of the TLS support",
                        "**type**"
                      ]
                    }
                  ],
                  "**unified_apis**: List of Unified APIs that feature this connector.",
                  [
                    "**webhook_support**: How webhooks are supported for the connector. Sometimes the connector natively supports webhooks, other times Apideck virtualizes them based on polling.",
                    {
                      "$ul": [
                        "**managed_via**: How the subscription is managed in the downstream.",
                        "**mode**: Mode of the webhook support.",
                        "**subscription_level**: Received events are scoped to connection or across integration.",
                        [
                          "**virtual_webhooks**: Virtual webhook config for the connector.",
                          {
                            "$ul": [
                              [
                                "**request_rate**: The rate at which requests for resources will be made to downstream.",
                                {
                                  "$ul": [
                                    "**rate**: The number of requests per window unit.",
                                    "**size**: Size of request window.",
                                    "**unit**: The window unit for the rate."
                                  ]
                                }
                              ],
                              "**resources**: The resources that will be requested from downstream."
                            ]
                          }
                        ]
                      ]
                    }
                  ],
                  "**website_url**: Link to the connector's website."
                ]
              }
            ],
            [
              "**links**: Links to navigate to previous or next pages through the API",
              {
                "$ul": [
                  "**current**: Link to navigate to the current page through the API",
                  "**next**: Link to navigate to the previous page through the API",
                  "**previous**: Link to navigate to the previous page through the API"
                ]
              }
            ],
            [
              "**meta**: Response metadata",
              {
                "$ul": [
                  [
                    "**cursors**: Cursors to navigate to previous or next pages through the API",
                    {
                      "$ul": [
                        "**current**: Cursor to navigate to the current page of results through the API",
                        "**next**: Cursor to navigate to the next page of results through the API",
                        "**previous**: Cursor to navigate to the previous page of results through the API"
                      ]
                    }
                  ],
                  "**items_on_page**: Number of items returned in the data property of the response"
                ]
              }
            ],
            "**status**: HTTP Response Status",
            "**status_code**: HTTP Response Status Code"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Contains parameter or domain specific information related to the error and why it occurred.",
            "**error**: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "**message**: A human-readable message providing more details about the error.",
            "**ref**: Link to documentation of error type",
            "**status_code**: HTTP status code",
            "**type_name**: The type of error returned"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "402": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Contains parameter or domain specific information related to the error and why it occurred.",
            "**error**: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "**message**: A human-readable message providing more details about the error.",
            "**ref**: Link to documentation of error type",
            "**status_code**: HTTP status code",
            "**type_name**: The type of error returned"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Contains parameter or domain specific information related to the error and why it occurred.",
            "**error**: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "**message**: A human-readable message providing more details about the error.",
            "**ref**: Link to documentation of error type",
            "**status_code**: HTTP status code",
            "**type_name**: The type of error returned"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "default": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Contains parameter or domain specific information related to the error and why it occurred.",
            "**error**: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "**message**: A human-readable message providing more details about the error.",
            "**ref**: Link to documentation of error type",
            "**status_code**: HTTP status code",
            "**type_name**: The type of error returned"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
