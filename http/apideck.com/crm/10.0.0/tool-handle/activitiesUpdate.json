{
  "name": "activitiesUpdate",
  "description": "Update activity",
  "parameters": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "ID of the record you are acting upon."
      },
      "x-apideck-consumer-id": {
        "type": "string",
        "description": "ID of the consumer which you want to get or push data from"
      },
      "x-apideck-app-id": {
        "type": "string",
        "description": "The ID of your Unify application"
      },
      "x-apideck-service-id": {
        "type": "string",
        "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
      },
      "raw": {
        "default": false,
        "type": "boolean",
        "description": "Include raw response. Mostly used for debugging purposes"
      },
      "body": {
        "$ref": "#/$defs/Activity"
      }
    },
    "required": [
      "id",
      "x-apideck-consumer-id",
      "x-apideck-app-id",
      "body"
    ],
    "$defs": {
      "Activity": {
        "additionalProperties": false,
        "properties": {
          "account_id": {
            "description": "The account related to the activity",
            "example": "12345",
            "nullable": true,
            "type": "string"
          },
          "activity_date": {
            "description": "The date of the activity",
            "example": "2021-05-01",
            "nullable": true,
            "type": "string"
          },
          "activity_datetime": {
            "description": "The date and time of the activity",
            "example": "2021-05-01T12:00:00.000Z",
            "nullable": true,
            "type": "string"
          },
          "all_day_event": {
            "description": "Whether the Activity is an all day event or not",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "archived": {
            "description": "Whether the activity is archived or not",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "asset_id": {
            "description": "The asset related to the activity",
            "example": "12345",
            "nullable": true,
            "type": "string"
          },
          "attendees": {
            "items": {
              "$ref": "#/$defs/ActivityAttendee"
            },
            "type": "array"
          },
          "campaign_id": {
            "description": "The campaign related to the activity",
            "example": "12345",
            "nullable": true,
            "type": "string"
          },
          "case_id": {
            "description": "The case related to the activity",
            "example": "12345",
            "nullable": true,
            "type": "string"
          },
          "child": {
            "description": "Whether the activity is a child of another activity or not",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "company_id": {
            "description": "The company related to the activity",
            "example": "12345",
            "nullable": true,
            "type": "string"
          },
          "contact_id": {
            "description": "The contact related to the activity",
            "example": "12345",
            "nullable": true,
            "type": "string"
          },
          "contract_id": {
            "description": "The contract related to the activity",
            "example": "12345",
            "nullable": true,
            "type": "string"
          },
          "created_at": {
            "description": "The date and time when the activity was created",
            "example": "2020-09-30T07:43:32.000Z",
            "nullable": true,
            "readOnly": true,
            "type": "string"
          },
          "created_by": {
            "description": "The user who created the activity",
            "example": "12345",
            "nullable": true,
            "readOnly": true,
            "type": "string"
          },
          "custom_fields": {
            "description": "Custom fields of the activity",
            "items": {
              "$ref": "#/$defs/CustomField"
            },
            "type": "array"
          },
          "custom_mappings": {
            "$ref": "#/$defs/CustomMappings"
          },
          "custom_object_id": {
            "description": "The custom object related to the activity",
            "example": "12345",
            "nullable": true,
            "type": "string"
          },
          "deleted": {
            "description": "Whether the activity is deleted or not",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "description": {
            "description": "A description of the activity",
            "example": "More info about the meeting",
            "nullable": true,
            "type": "string"
          },
          "done": {
            "description": "Whether the Activity is done or not",
            "example": false,
            "nullable": true,
            "title": "Done",
            "type": "boolean"
          },
          "downstream_id": {
            "description": "The third-party API ID of original entity",
            "example": "12345",
            "nullable": true,
            "readOnly": true,
            "type": "string"
          },
          "duration_minutes": {
            "description": "The duration of the activity in minutes",
            "example": 30,
            "nullable": true,
            "readOnly": true,
            "type": "integer"
          },
          "duration_seconds": {
            "description": "The duration of the activity in seconds",
            "example": 1800,
            "minimum": 0,
            "nullable": true,
            "type": "integer"
          },
          "end_date": {
            "description": "The end date of the activity",
            "example": "2021-05-01",
            "nullable": true,
            "type": "string"
          },
          "end_datetime": {
            "description": "The end date and time of the activity",
            "example": "2021-05-01T12:30:00.000Z",
            "nullable": true,
            "type": "string"
          },
          "event_sub_type": {
            "description": "The sub type of the group event",
            "example": "debrief",
            "nullable": true,
            "type": "string"
          },
          "group_event": {
            "description": "Whether the Activity is a group event or not",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "group_event_type": {
            "description": "The type of the group event",
            "example": "Proposed",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the activity",
            "example": "12345",
            "readOnly": true,
            "type": "string"
          },
          "lead_id": {
            "description": "The lead related to the activity",
            "example": "12345",
            "nullable": true,
            "type": "string"
          },
          "location": {
            "description": "The location of the activity",
            "example": "Space",
            "nullable": true,
            "type": "string"
          },
          "location_address": {
            "$ref": "#/$defs/Address"
          },
          "note": {
            "description": "An internal note about the activity",
            "example": "An internal note about the meeting",
            "nullable": true,
            "title": "Note (internal)",
            "type": "string"
          },
          "opportunity_id": {
            "description": "The opportunity related to the activity",
            "example": "12345",
            "nullable": true,
            "type": "string"
          },
          "owner_id": {
            "description": "The owner of the activity",
            "example": "12345",
            "nullable": true,
            "type": "string"
          },
          "private": {
            "description": "Whether the Activity is private or not",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "product_id": {
            "description": "The product related to the activity",
            "example": "12345",
            "nullable": true,
            "type": "string"
          },
          "recurrent": {
            "description": "Whether the activity is recurrent or not",
            "example": false,
            "type": "boolean"
          },
          "reminder_datetime": {
            "description": "The date and time of the reminder",
            "example": "2021-05-01T17:00:00.000Z",
            "nullable": true,
            "type": "string"
          },
          "reminder_set": {
            "description": "Whether the reminder is set or not",
            "example": false,
            "nullable": true,
            "type": "boolean"
          },
          "show_as": {
            "enum": [
              "free",
              "busy"
            ],
            "example": "busy",
            "nullable": true,
            "type": "string",
            "x-apideck-enum-id": "activities.show_as"
          },
          "solution_id": {
            "description": "The solution related to the activity",
            "example": "12345",
            "nullable": true,
            "type": "string"
          },
          "start_datetime": {
            "description": "The start date and time of the activity",
            "example": "2021-05-01T12:00:00.000Z",
            "nullable": true,
            "type": "string"
          },
          "title": {
            "description": "The title of the activity",
            "example": "Meeting",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "The type of the activity",
            "enum": [
              "call",
              "meeting",
              "email",
              "note",
              "task",
              "deadline",
              "send-letter",
              "send-quote",
              "other"
            ],
            "example": "meeting",
            "nullable": true,
            "type": "string",
            "x-apideck-enum-id": "activities.type"
          },
          "updated_at": {
            "description": "The date and time when the activity was last updated",
            "example": "2020-09-30T07:43:32.000Z",
            "nullable": true,
            "readOnly": true,
            "type": "string"
          },
          "updated_by": {
            "description": "The user who last updated the activity",
            "example": "12345",
            "nullable": true,
            "readOnly": true,
            "type": "string"
          },
          "user_id": {
            "description": "The user related to the activity",
            "example": "12345",
            "nullable": true,
            "type": "string"
          },
          "video_conference_id": {
            "description": "The ID of the video conference",
            "example": "zoom:88120759396",
            "nullable": true,
            "title": "Meeting ID",
            "type": "string"
          },
          "video_conference_url": {
            "description": "The URL of the video conference",
            "example": "https://us02web.zoom.us/j/88120759396",
            "nullable": true,
            "title": "Meeting URL",
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "type": "object",
        "x-apideck-schema-id": "Activity",
        "x-apideck-weights": {
          "account_id": "edge-case",
          "activity_date": "medium",
          "activity_datetime": "high",
          "all_day_event": "medium",
          "archived": "low",
          "asset_id": "edge-case",
          "attendees": "edge-case",
          "campaign_id": "edge-case",
          "case_id": "edge-case",
          "child": "low",
          "company_id": "edge-case",
          "contact_id": "edge-case",
          "contract_id": "edge-case",
          "custom_object_id": "edge-case",
          "deleted": "low",
          "description": "medium",
          "done": "medium",
          "downstream_id": "edge-case",
          "duration_minutes": "edge-case",
          "duration_seconds": "medium",
          "end_date": "medium",
          "end_datetime": "high",
          "event_sub_type": "medium",
          "group_event": "edge-case",
          "group_event_type": "edge-case",
          "id": "critical",
          "lead_id": "edge-case",
          "location": "medium",
          "location_address": "medium",
          "note": "medium",
          "opportunity_id": "edge-case",
          "owner_id": "high",
          "private": "low",
          "product_id": "edge-case",
          "reminder_datetime": "edge-case",
          "reminder_set": "edge-case",
          "show_as": "edge-case",
          "solution_id": "edge-case",
          "start_datetime": "high",
          "title": "critical",
          "type": "critical",
          "updated_at": "high",
          "user_id": "edge-case",
          "video_conference_id": "edge-case",
          "video_conference_url": "edge-case"
        }
      },
      "ActivityAttendee": {
        "additionalProperties": false,
        "properties": {
          "contact_id": {
            "description": "The identifier for a related contact",
            "example": "12345",
            "nullable": true,
            "readOnly": true,
            "type": "string"
          },
          "created_at": {
            "description": "The time the attendee was created (ISO 8601)",
            "example": "2017-08-12T20:43:21.291Z",
            "format": "date-time",
            "nullable": true,
            "readOnly": true,
            "type": "string"
          },
          "email_address": {
            "description": "Email address of the attendee",
            "example": "elon@musk.com",
            "nullable": true,
            "type": "string"
          },
          "first_name": {
            "description": "First name of the attendee",
            "example": "Elon",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the attendee",
            "example": "12345",
            "nullable": true,
            "readOnly": true,
            "type": "string"
          },
          "is_organizer": {
            "description": "Whether the attendee is the organizer of the activity",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "last_name": {
            "description": "Last name of the attendee",
            "example": "Musk",
            "nullable": true,
            "type": "string"
          },
          "middle_name": {
            "description": "Middle name of the attendee",
            "example": "D.",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Full name of the attendee",
            "example": "Elon Musk",
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "prefix": {
            "description": "Prefix of the attendee",
            "example": "Mr.",
            "nullable": true,
            "type": "string"
          },
          "status": {
            "description": "Status of the attendee",
            "enum": [
              "accepted",
              "tentative",
              "declined"
            ],
            "example": "accepted",
            "nullable": true,
            "type": "string",
            "x-apideck-enum-id": "activity-attendees.status"
          },
          "suffix": {
            "description": "Suffix of the attendee",
            "example": "PhD",
            "nullable": true,
            "type": "string"
          },
          "updated_at": {
            "description": "The last time the attendee was updated (ISO 8601)",
            "example": "2017-08-12T20:43:21.291Z",
            "format": "date-time",
            "nullable": true,
            "readOnly": true,
            "type": "string"
          },
          "user_id": {
            "description": "The identifier for a related user",
            "example": "12345",
            "nullable": true,
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-apideck-schema-id": "ActivityAttendee",
        "x-apideck-weights": {
          "email_address": "medium",
          "first_name": "high",
          "id": "critical",
          "is_organizer": "medium",
          "last_name": "high",
          "middle_name": "low",
          "name": "critical",
          "prefix": "low",
          "status": "medium",
          "suffix": "edge-case",
          "user_id": "low"
        },
        "x-pii": [
          "name",
          "first_name",
          "middle_name",
          "last_name",
          "email_address"
        ]
      },
      "CustomField": {
        "additionalProperties": false,
        "properties": {
          "description": {
            "description": "More information about the custom field",
            "example": "Employee Level",
            "nullable": true,
            "title": "Description",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the custom field.",
            "example": "2389328923893298",
            "nullable": true,
            "title": "ID",
            "type": "string"
          },
          "name": {
            "description": "Name of the custom field.",
            "example": "employee_level",
            "nullable": true,
            "title": "Name",
            "type": "string"
          },
          "value": {
            "anyOf": [
              {
                "example": "Uses Salesforce and Marketo",
                "nullable": true,
                "type": "string"
              },
              {
                "example": 10,
                "nullable": true,
                "type": "number"
              },
              {
                "example": true,
                "nullable": true,
                "type": "boolean"
              },
              {
                "example": {
                  "foo": "bar"
                },
                "nullable": true,
                "type": "object"
              },
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              }
            ]
          }
        },
        "required": [
          "id"
        ],
        "type": "object",
        "x-apideck-schema-id": "CustomField",
        "x-apideck-weights": {
          "description": "edge-case",
          "id": "critical",
          "name": "medium",
          "value": "critical"
        }
      },
      "CustomMappings": {
        "description": "When custom mappings are configured on the resource, the result is included here.",
        "nullable": true,
        "type": "object",
        "x-apideck-schema-id": "CustomMappings"
      },
      "Address": {
        "additionalProperties": false,
        "properties": {
          "city": {
            "description": "Name of city.",
            "example": "San Francisco",
            "nullable": true,
            "type": "string"
          },
          "contact_name": {
            "description": "Name of the contact person at the address",
            "example": "Elon Musk",
            "nullable": true,
            "type": "string"
          },
          "country": {
            "description": "country code according to ISO 3166-1 alpha-2.",
            "example": "US",
            "nullable": true,
            "type": "string"
          },
          "county": {
            "description": "Address field that holds a sublocality, such as a county",
            "example": "Santa Clara",
            "nullable": true,
            "type": "string"
          },
          "email": {
            "description": "Email address of the address",
            "example": "elon@musk.com",
            "nullable": true,
            "type": "string"
          },
          "fax": {
            "description": "Fax number of the address",
            "example": "122-111-1111",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the address.",
            "example": "123",
            "nullable": true,
            "type": "string"
          },
          "latitude": {
            "description": "Latitude of the address",
            "example": "40.759211",
            "nullable": true,
            "type": "string"
          },
          "line1": {
            "description": "Line 1 of the address e.g. number, street, suite, apt #, etc.",
            "example": "Main street",
            "nullable": true,
            "type": "string"
          },
          "line2": {
            "description": "Line 2 of the address",
            "example": "apt #",
            "nullable": true,
            "type": "string"
          },
          "line3": {
            "description": "Line 3 of the address",
            "example": "Suite #",
            "nullable": true,
            "type": "string"
          },
          "line4": {
            "description": "Line 4 of the address",
            "example": "delivery instructions",
            "nullable": true,
            "type": "string"
          },
          "longitude": {
            "description": "Longitude of the address",
            "example": "-73.984638",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "The name of the address.",
            "example": "HQ US",
            "nullable": true,
            "type": "string"
          },
          "notes": {
            "description": "Additional notes",
            "example": "Address notes or delivery instructions.",
            "nullable": true,
            "title": "Notes",
            "type": "string"
          },
          "phone_number": {
            "description": "Phone number of the address",
            "example": "111-111-1111",
            "nullable": true,
            "type": "string"
          },
          "postal_code": {
            "description": "Zip code or equivalent.",
            "example": "94104",
            "nullable": true,
            "type": "string"
          },
          "row_version": {
            "$ref": "#/$defs/RowVersion"
          },
          "salutation": {
            "description": "Salutation of the contact person at the address",
            "example": "Mr",
            "nullable": true,
            "type": "string"
          },
          "state": {
            "description": "Name of state",
            "example": "CA",
            "nullable": true,
            "type": "string"
          },
          "street_number": {
            "description": "Street number",
            "example": "25",
            "nullable": true,
            "type": "string"
          },
          "string": {
            "description": "The address string. Some APIs don't provide structured address data.",
            "example": "25 Spring Street, Blackburn, VIC 3130",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "The type of address.",
            "enum": [
              "primary",
              "secondary",
              "home",
              "office",
              "shipping",
              "billing",
              "other"
            ],
            "example": "primary",
            "nullable": true,
            "type": "string",
            "x-apideck-enum-id": "addresses.type"
          },
          "website": {
            "description": "Website of the address",
            "example": "https://elonmusk.com",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-apideck-schema-id": "Address",
        "x-apideck-weights": {
          "city": "high",
          "contact_name": "edge-case",
          "country": "high",
          "county": "edge-case",
          "email": "edge-case",
          "fax": "edge-case",
          "id": "edge-case",
          "latitude": "low",
          "line1": "high",
          "line2": "low",
          "line3": "edge-case",
          "line4": "edge-case",
          "longitude": "low",
          "name": "edge-case",
          "phone_number": "edge-case",
          "postal_code": "high",
          "row_version": "edge-case",
          "salutation": "edge-case",
          "state": "high",
          "street_number": "low",
          "string": "low",
          "type": "critical",
          "website": "edge-case"
        }
      },
      "RowVersion": {
        "description": "A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.",
        "example": "1-12345",
        "nullable": true,
        "title": "Row version",
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PATCH",
    "url": {
      "$uri": "https://unify.apideck.com/crm/activities/{id}{?raw}"
    },
    "headers": {
      "x-apideck-consumer-id": {
        "$": "x-apideck-consumer-id"
      },
      "x-apideck-app-id": {
        "$": "x-apideck-app-id"
      },
      "x-apideck-service-id": {
        "$": "x-apideck-service-id"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**data**",
              {
                "$ul": [
                  "**id**: The unique identifier of the resource"
                ]
              }
            ],
            "**operation**: Operation performed",
            "**resource**: Unified API resource name",
            "**service**: Apideck ID of service provider",
            "**status**: HTTP Response Status",
            "**status_code**: HTTP Response Status Code"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Contains parameter or domain specific information related to the error and why it occurred.",
            "**error**: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "**message**: A human-readable message providing more details about the error.",
            "**ref**: Link to documentation of error type",
            "**status_code**: HTTP status code",
            "**type_name**: The type of error returned"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Contains parameter or domain specific information related to the error and why it occurred.",
            "**error**: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "**message**: A human-readable message providing more details about the error.",
            "**ref**: Link to documentation of error type",
            "**status_code**: HTTP status code",
            "**type_name**: The type of error returned"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "402": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Contains parameter or domain specific information related to the error and why it occurred.",
            "**error**: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "**message**: A human-readable message providing more details about the error.",
            "**ref**: Link to documentation of error type",
            "**status_code**: HTTP status code",
            "**type_name**: The type of error returned"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Contains parameter or domain specific information related to the error and why it occurred.",
            "**error**: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "**message**: A human-readable message providing more details about the error.",
            "**ref**: Link to documentation of error type",
            "**status_code**: HTTP status code",
            "**type_name**: The type of error returned"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "422": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Contains parameter or domain specific information related to the error and why it occurred.",
            "**error**: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "**message**: A human-readable message providing more details about the error.",
            "**ref**: Link to documentation of error type",
            "**status_code**: HTTP status code",
            "**type_name**: The type of error returned"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "default": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Contains parameter or domain specific information related to the error and why it occurred.",
            "**error**: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "**message**: A human-readable message providing more details about the error.",
            "**ref**: Link to documentation of error type",
            "**status_code**: HTTP status code",
            "**type_name**: The type of error returned"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
