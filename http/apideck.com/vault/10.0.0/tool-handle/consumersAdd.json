{
  "name": "consumersAdd",
  "description": "Create a consumer",
  "parameters": {
    "type": "object",
    "properties": {
      "x-apideck-app-id": {
        "type": "string",
        "description": "The ID of your Unify application"
      },
      "body": {
        "$ref": "#/$defs/Consumer"
      }
    },
    "required": [
      "x-apideck-app-id",
      "body"
    ],
    "$defs": {
      "Consumer": {
        "properties": {
          "aggregated_request_count": {
            "example": 101,
            "readOnly": true,
            "type": "number"
          },
          "application_id": {
            "description": "ID of your Apideck Application",
            "example": "dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX",
            "readOnly": true,
            "type": "string"
          },
          "connections": {
            "items": {
              "$ref": "#/$defs/ConsumerConnection"
            },
            "readOnly": true,
            "type": "array"
          },
          "consumer_id": {
            "$ref": "#/$defs/ConsumerId"
          },
          "created": {
            "example": "2021-05-07T12:55:42.242Z",
            "readOnly": true,
            "type": "string"
          },
          "metadata": {
            "$ref": "#/$defs/ConsumerMetadata"
          },
          "modified": {
            "example": "2021-05-07T12:55:42.242Z",
            "readOnly": true,
            "type": "string"
          },
          "request_count_updated": {
            "example": "2021-05-07T12:55:42.242Z",
            "readOnly": true,
            "type": "string"
          },
          "request_counts": {
            "$ref": "#/$defs/RequestCountAllocation"
          },
          "services": {
            "example": [
              "salesforce",
              "stripe"
            ],
            "items": {
              "example": "salesforce",
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "required": [
          "consumer_id"
        ],
        "type": "object",
        "x-apideck-schema-id": "Consumer"
      },
      "ConsumerConnection": {
        "properties": {
          "auth_type": {
            "$ref": "#/$defs/AuthType"
          },
          "consumer_id": {
            "example": "test_user_id",
            "type": "string"
          },
          "created_at": {
            "example": "2020-09-19T12:18:37.071Z",
            "type": "string"
          },
          "enabled": {
            "example": true,
            "type": "boolean"
          },
          "icon": {
            "example": "https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png",
            "type": "string"
          },
          "id": {
            "example": "1111+test_user_id",
            "readOnly": true,
            "type": "string"
          },
          "logo": {
            "example": "https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg",
            "type": "string"
          },
          "metadata": {
            "additionalProperties": true,
            "description": "Attach your own consumer specific metadata",
            "example": {
              "account": {
                "id": "c01458a5-7276-41ce-bc19-639906b0450a",
                "name": "My Company"
              },
              "plan": "enterprise"
            },
            "nullable": true,
            "properties": {},
            "type": "object"
          },
          "name": {
            "example": "Salesforce",
            "type": "string"
          },
          "service_id": {
            "example": "teamleader",
            "type": "string"
          },
          "settings": {
            "description": "Connection settings. Values will persist to `form_fields` with corresponding id",
            "example": {
              "instance_url": "https://eu28.salesforce.com"
            },
            "nullable": true,
            "type": "object"
          },
          "state": {
            "enum": [
              "available",
              "callable",
              "added",
              "configured",
              "authorized"
            ],
            "example": "authorized",
            "type": "string",
            "x-apideck-enum-id": "consumer.connections.state"
          },
          "tag_line": {
            "example": "CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.",
            "readOnly": true,
            "type": "string"
          },
          "unified_api": {
            "example": "crm",
            "type": "string"
          },
          "updated_at": {
            "example": "2020-09-19T12:18:37.071Z",
            "nullable": true,
            "type": "string"
          },
          "website": {
            "example": "https://www.salesforce.com",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-apideck-schema-id": "ConsumerConnection"
      },
      "AuthType": {
        "description": "Type of authorization used by the connector",
        "enum": [
          "oauth2",
          "apiKey",
          "basic",
          "custom",
          "none"
        ],
        "example": "oauth2",
        "readOnly": true,
        "type": "string",
        "x-apideck-enum-id": "auth_types"
      },
      "ConsumerId": {
        "description": "Unique consumer identifier. You can freely choose a consumer ID yourself. Most of the time, this is an ID of your internal data model that represents a user or account in your system (for example account:12345). If the consumer doesn't exist yet, Vault will upsert a consumer based on your ID.",
        "example": "test_consumer_id",
        "type": "string"
      },
      "ConsumerMetadata": {
        "description": "The metadata of the consumer. This is used to display the consumer in the sidebar. This is optional, but recommended.",
        "properties": {
          "account_name": {
            "description": "The name of the account as shown in the sidebar.",
            "example": "SpaceX",
            "title": "Account name",
            "type": "string"
          },
          "email": {
            "description": "The email of the user as shown in the sidebar.",
            "example": "elon@musk.com",
            "title": "Email",
            "type": "string"
          },
          "image": {
            "description": "The avatar of the user in the sidebar. Must be a valid URL",
            "example": "https://www.spacex.com/static/images/share.jpg",
            "title": "Image",
            "type": "string"
          },
          "user_name": {
            "description": "The name of the user as shown in the sidebar.",
            "example": "Elon Musk",
            "title": "User name",
            "type": "string"
          }
        },
        "type": "object",
        "x-apideck-schema-id": "ConsumerMetadata"
      },
      "RequestCountAllocation": {
        "properties": {
          "proxy": {
            "example": 10,
            "type": "number"
          },
          "unify": {
            "example": 100,
            "type": "number"
          },
          "vault": {
            "example": 21,
            "type": "number"
          }
        },
        "readOnly": true,
        "type": "object",
        "x-apideck-schema-id": "RequestCountAllocation"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://unify.apideck.com/vault/consumers"
    },
    "headers": {
      "x-apideck-app-id": {
        "$": "x-apideck-app-id"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**data**",
              {
                "$ul": [
                  "**aggregated_request_count**",
                  "**application_id**: ID of your Apideck Application",
                  "**connections**",
                  "**consumer_id**: Unique consumer identifier. You can freely choose a consumer ID yourself. Most of the time, this is an ID of your internal data model that represents a user or account in your system (for example account:12345). If the consumer doesn't exist yet, Vault will upsert a consumer based on your ID.",
                  "**created**",
                  [
                    "**metadata**: The metadata of the consumer. This is used to display the consumer in the sidebar. This is optional, but recommended.",
                    {
                      "$ul": [
                        "**account_name**: The name of the account as shown in the sidebar.",
                        "**email**: The email of the user as shown in the sidebar.",
                        "**image**: The avatar of the user in the sidebar. Must be a valid URL",
                        "**user_name**: The name of the user as shown in the sidebar."
                      ]
                    }
                  ],
                  "**modified**",
                  "**request_count_updated**",
                  [
                    "**request_counts**",
                    {
                      "$ul": [
                        "**proxy**",
                        "**unify**",
                        "**vault**"
                      ]
                    }
                  ],
                  "**services**"
                ]
              }
            ],
            "**status**: HTTP Response Status",
            "**status_code**: HTTP Response Status Code"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Contains parameter or domain specific information related to the error and why it occurred.",
            "**error**: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "**message**: A human-readable message providing more details about the error.",
            "**ref**: Link to documentation of error type",
            "**status_code**: HTTP status code",
            "**type_name**: The type of error returned"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Contains parameter or domain specific information related to the error and why it occurred.",
            "**error**: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "**message**: A human-readable message providing more details about the error.",
            "**ref**: Link to documentation of error type",
            "**status_code**: HTTP status code",
            "**type_name**: The type of error returned"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "402": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Contains parameter or domain specific information related to the error and why it occurred.",
            "**error**: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "**message**: A human-readable message providing more details about the error.",
            "**ref**: Link to documentation of error type",
            "**status_code**: HTTP status code",
            "**type_name**: The type of error returned"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Contains parameter or domain specific information related to the error and why it occurred.",
            "**error**: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "**message**: A human-readable message providing more details about the error.",
            "**ref**: Link to documentation of error type",
            "**status_code**: HTTP status code",
            "**type_name**: The type of error returned"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "422": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Contains parameter or domain specific information related to the error and why it occurred.",
            "**error**: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "**message**: A human-readable message providing more details about the error.",
            "**ref**: Link to documentation of error type",
            "**status_code**: HTTP status code",
            "**type_name**: The type of error returned"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "default": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Contains parameter or domain specific information related to the error and why it occurred.",
            "**error**: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "**message**: A human-readable message providing more details about the error.",
            "**ref**: Link to documentation of error type",
            "**status_code**: HTTP status code",
            "**type_name**: The type of error returned"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
