{
  "name": "consumersUpdate",
  "description": "Update consumer metadata such as name and email.",
  "parameters": {
    "type": "object",
    "properties": {
      "x-apideck-app-id": {
        "type": "string",
        "description": "The ID of your Unify application"
      },
      "consumer_id": {
        "type": "string",
        "description": "ID of the consumer to return"
      },
      "body": {
        "$ref": "#/$defs/UpdateConsumerRequest"
      }
    },
    "required": [
      "x-apideck-app-id",
      "consumer_id",
      "body"
    ],
    "$defs": {
      "UpdateConsumerRequest": {
        "additionalProperties": false,
        "properties": {
          "metadata": {
            "$ref": "#/$defs/ConsumerMetadata"
          }
        },
        "type": "object",
        "x-apideck-schema-id": "UpdateConsumerRequest"
      },
      "ConsumerMetadata": {
        "description": "The metadata of the consumer. This is used to display the consumer in the sidebar. This is optional, but recommended.",
        "properties": {
          "account_name": {
            "description": "The name of the account as shown in the sidebar.",
            "example": "SpaceX",
            "title": "Account name",
            "type": "string"
          },
          "email": {
            "description": "The email of the user as shown in the sidebar.",
            "example": "elon@musk.com",
            "title": "Email",
            "type": "string"
          },
          "image": {
            "description": "The avatar of the user in the sidebar. Must be a valid URL",
            "example": "https://www.spacex.com/static/images/share.jpg",
            "title": "Image",
            "type": "string"
          },
          "user_name": {
            "description": "The name of the user as shown in the sidebar.",
            "example": "Elon Musk",
            "title": "User name",
            "type": "string"
          }
        },
        "type": "object",
        "x-apideck-schema-id": "ConsumerMetadata"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PATCH",
    "url": {
      "$uri": "https://unify.apideck.com/vault/consumers/{consumer_id}"
    },
    "headers": {
      "x-apideck-app-id": {
        "$": "x-apideck-app-id"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**data**",
              {
                "$ul": [
                  "**aggregated_request_count**",
                  "**application_id**: ID of your Apideck Application",
                  "**connections**",
                  "**consumer_id**: Unique consumer identifier. You can freely choose a consumer ID yourself. Most of the time, this is an ID of your internal data model that represents a user or account in your system (for example account:12345). If the consumer doesn't exist yet, Vault will upsert a consumer based on your ID.",
                  "**created**",
                  [
                    "**metadata**: The metadata of the consumer. This is used to display the consumer in the sidebar. This is optional, but recommended.",
                    {
                      "$ul": [
                        "**account_name**: The name of the account as shown in the sidebar.",
                        "**email**: The email of the user as shown in the sidebar.",
                        "**image**: The avatar of the user in the sidebar. Must be a valid URL",
                        "**user_name**: The name of the user as shown in the sidebar."
                      ]
                    }
                  ],
                  "**modified**",
                  "**request_count_updated**",
                  [
                    "**request_counts**",
                    {
                      "$ul": [
                        "**proxy**",
                        "**unify**",
                        "**vault**"
                      ]
                    }
                  ],
                  "**services**"
                ]
              }
            ],
            "**status**: HTTP Response Status",
            "**status_code**: HTTP Response Status Code"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Contains parameter or domain specific information related to the error and why it occurred.",
            "**error**: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "**message**: A human-readable message providing more details about the error.",
            "**ref**: Link to documentation of error type",
            "**status_code**: HTTP status code",
            "**type_name**: The type of error returned"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Contains parameter or domain specific information related to the error and why it occurred.",
            "**error**: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "**message**: A human-readable message providing more details about the error.",
            "**ref**: Link to documentation of error type",
            "**status_code**: HTTP status code",
            "**type_name**: The type of error returned"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "402": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Contains parameter or domain specific information related to the error and why it occurred.",
            "**error**: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "**message**: A human-readable message providing more details about the error.",
            "**ref**: Link to documentation of error type",
            "**status_code**: HTTP status code",
            "**type_name**: The type of error returned"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Contains parameter or domain specific information related to the error and why it occurred.",
            "**error**: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "**message**: A human-readable message providing more details about the error.",
            "**ref**: Link to documentation of error type",
            "**status_code**: HTTP status code",
            "**type_name**: The type of error returned"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "422": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Contains parameter or domain specific information related to the error and why it occurred.",
            "**error**: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "**message**: A human-readable message providing more details about the error.",
            "**ref**: Link to documentation of error type",
            "**status_code**: HTTP status code",
            "**type_name**: The type of error returned"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "default": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Contains parameter or domain specific information related to the error and why it occurred.",
            "**error**: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "**message**: A human-readable message providing more details about the error.",
            "**ref**: Link to documentation of error type",
            "**status_code**: HTTP status code",
            "**type_name**: The type of error returned"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
