{
  "name": "webhooksAdd",
  "description": "Create a webhook subscription to receive events",
  "parameters": {
    "type": "object",
    "properties": {
      "x-apideck-app-id": {
        "type": "string",
        "description": "The ID of your Unify application"
      },
      "body": {
        "$ref": "#/$defs/CreateWebhookRequest"
      }
    },
    "required": [
      "x-apideck-app-id",
      "body"
    ],
    "$defs": {
      "CreateWebhookRequest": {
        "additionalProperties": false,
        "properties": {
          "delivery_url": {
            "$ref": "#/$defs/DeliveryUrl"
          },
          "description": {
            "$ref": "#/$defs/Description"
          },
          "events": {
            "description": "The list of subscribed events for this webhook. [`*`] indicates that all events are enabled.",
            "example": [
              "vault.connection.created",
              "vault.connection.updated"
            ],
            "items": {
              "$ref": "#/$defs/WebhookEventType"
            },
            "title": "Subscribed events",
            "type": "array"
          },
          "status": {
            "$ref": "#/$defs/Status"
          },
          "unified_api": {
            "$ref": "#/$defs/UnifiedApiId"
          }
        },
        "required": [
          "delivery_url",
          "status",
          "events",
          "unified_api"
        ],
        "type": "object",
        "x-apideck-schema-id": "CreateWebhookRequest"
      },
      "DeliveryUrl": {
        "description": "The delivery url of the webhook endpoint.",
        "example": "https://example.com/my/webhook/endpoint",
        "format": "uri",
        "pattern": "^(https?)://",
        "type": "string"
      },
      "Description": {
        "description": "A description of the object.",
        "example": "A description",
        "nullable": true,
        "title": "Description",
        "type": "string"
      },
      "WebhookEventType": {
        "enum": [
          "*",
          "crm.activity.created",
          "crm.activity.updated",
          "crm.activity.deleted",
          "crm.company.created",
          "crm.company.updated",
          "crm.company.deleted",
          "crm.contact.created",
          "crm.contact.updated",
          "crm.contact.deleted",
          "crm.lead.created",
          "crm.lead.updated",
          "crm.lead.deleted",
          "crm.note.created",
          "crm.notes.updated",
          "crm.notes.deleted",
          "crm.opportunity.created",
          "crm.opportunity.updated",
          "crm.opportunity.deleted",
          "lead.lead.created",
          "lead.lead.updated",
          "lead.lead.deleted",
          "vault.connection.created",
          "vault.connection.updated",
          "vault.connection.disabled",
          "vault.connection.deleted",
          "vault.connection.callable",
          "vault.connection.revoked",
          "vault.connection.token_refresh.failed",
          "ats.job.created",
          "ats.job.updated",
          "ats.job.deleted",
          "ats.applicant.created",
          "ats.applicant.updated",
          "ats.applicant.deleted",
          "accounting.customer.created",
          "accounting.customer.updated",
          "accounting.customer.deleted",
          "accounting.invoice.created",
          "accounting.invoice.updated",
          "accounting.invoice.deleted",
          "accounting.invoice_item.created",
          "accounting.invoice_item.updated",
          "accounting.invoice_item.deleted",
          "accounting.ledger_account.created",
          "accounting.ledger_account.updated",
          "accounting.ledger_account.deleted",
          "accounting.tax_rate.created",
          "accounting.tax_rate.updated",
          "accounting.tax_rate.deleted",
          "accounting.bill.created",
          "accounting.bill.updated",
          "accounting.bill.deleted",
          "accounting.payment.created",
          "accounting.payment.updated",
          "accounting.payment.deleted",
          "accounting.supplier.created",
          "accounting.supplier.updated",
          "accounting.supplier.deleted",
          "accounting.purchase-order.created",
          "accounting.purchase-order.updated",
          "accounting.purchase-order.deleted",
          "pos.order.created",
          "pos.order.updated",
          "pos.order.deleted",
          "pos.product.created",
          "pos.product.updated",
          "pos.product.deleted",
          "pos.payment.created",
          "pos.payment.updated",
          "pos.payment.deleted",
          "pos.merchant.created",
          "pos.merchant.updated",
          "pos.merchant.deleted",
          "pos.location.created",
          "pos.location.updated",
          "pos.location.deleted",
          "pos.item.created",
          "pos.item.updated",
          "pos.item.deleted",
          "pos.modifier.created",
          "pos.modifier.updated",
          "pos.modifier.deleted",
          "pos.modifier-group.created",
          "pos.modifier-group.updated",
          "pos.modifier-group.deleted",
          "hris.employee.created",
          "hris.employee.updated",
          "hris.employee.deleted",
          "hris.employee.terminated",
          "hris.company.created",
          "hris.company.updated",
          "hris.company.deleted",
          "file-storage.file.created",
          "file-storage.file.updated",
          "file-storage.file.deleted",
          "issue-tracking.ticket.created",
          "issue-tracking.ticket.updated",
          "issue-tracking.ticket.deleted",
          "ats.application.created",
          "ats.application.updated",
          "ats.application.deleted"
        ],
        "example": "crm.company.created",
        "type": "string",
        "x-apideck-enum-id": "webhooks.event_type"
      },
      "Status": {
        "description": "The status of the webhook.",
        "enum": [
          "enabled",
          "disabled"
        ],
        "example": "enabled",
        "type": "string",
        "x-apideck-enum-id": "webhooks.status"
      },
      "UnifiedApiId": {
        "description": "Name of Apideck Unified API",
        "enum": [
          "accounting",
          "ats",
          "calendar",
          "crm",
          "csp",
          "customer-support",
          "ecommerce",
          "email",
          "email-marketing",
          "expense-management",
          "file-storage",
          "form",
          "hris",
          "lead",
          "payroll",
          "pos",
          "procurement",
          "project-management",
          "script",
          "sms",
          "spreadsheet",
          "team-messaging",
          "issue-tracking",
          "time-registration",
          "transactional-email",
          "vault",
          "data-warehouse"
        ],
        "example": "crm",
        "type": "string",
        "x-apideck-enum-id": "unified_api"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://unify.apideck.com/webhook/webhooks"
    },
    "headers": {
      "x-apideck-app-id": {
        "$": "x-apideck-app-id"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**data**",
              {
                "$ul": [
                  "**created_at**: The date and time when the object was created.",
                  "**delivery_url**: The delivery url of the webhook endpoint.",
                  "**description**: A description of the object.",
                  "**disabled_reason**: Indicates if the webhook has has been disabled as it reached its retry limit or if account is over the usage allocated by it's plan.",
                  "**events**: The list of subscribed events for this webhook. [`*`] indicates that all events are enabled.",
                  "**execute_base_url**: The Unify Base URL events from connectors will be sent to after service id is appended.",
                  "**id**",
                  "**status**: The status of the webhook.",
                  "**unified_api**: Name of Apideck Unified API",
                  "**updated_at**: The date and time when the object was last updated."
                ]
              }
            ],
            "**status**: HTTP Response Status",
            "**status_code**: HTTP Response Status Code"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Contains parameter or domain specific information related to the error and why it occurred.",
            "**error**: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "**message**: A human-readable message providing more details about the error.",
            "**ref**: Link to documentation of error type",
            "**status_code**: HTTP status code",
            "**type_name**: The type of error returned"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Contains parameter or domain specific information related to the error and why it occurred.",
            "**error**: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "**message**: A human-readable message providing more details about the error.",
            "**ref**: Link to documentation of error type",
            "**status_code**: HTTP status code",
            "**type_name**: The type of error returned"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "402": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Contains parameter or domain specific information related to the error and why it occurred.",
            "**error**: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "**message**: A human-readable message providing more details about the error.",
            "**ref**: Link to documentation of error type",
            "**status_code**: HTTP status code",
            "**type_name**: The type of error returned"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Contains parameter or domain specific information related to the error and why it occurred.",
            "**error**: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "**message**: A human-readable message providing more details about the error.",
            "**ref**: Link to documentation of error type",
            "**status_code**: HTTP status code",
            "**type_name**: The type of error returned"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "422": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Contains parameter or domain specific information related to the error and why it occurred.",
            "**error**: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "**message**: A human-readable message providing more details about the error.",
            "**ref**: Link to documentation of error type",
            "**status_code**: HTTP status code",
            "**type_name**: The type of error returned"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "default": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Contains parameter or domain specific information related to the error and why it occurred.",
            "**error**: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "**message**: A human-readable message providing more details about the error.",
            "**ref**: Link to documentation of error type",
            "**status_code**: HTTP status code",
            "**type_name**: The type of error returned"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
