{
  "name": "ordersAdd",
  "description": "Create Order",
  "parameters": {
    "type": "object",
    "properties": {
      "raw": {
        "default": false,
        "type": "boolean",
        "description": "Include raw response. Mostly used for debugging purposes"
      },
      "x-apideck-consumer-id": {
        "type": "string",
        "description": "ID of the consumer which you want to get or push data from"
      },
      "x-apideck-app-id": {
        "type": "string",
        "description": "The ID of your Unify application"
      },
      "x-apideck-service-id": {
        "type": "string",
        "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
      },
      "body": {
        "$ref": "#/$defs/Order"
      }
    },
    "required": [
      "x-apideck-consumer-id",
      "x-apideck-app-id",
      "body"
    ],
    "$defs": {
      "Order": {
        "additionalProperties": false,
        "properties": {
          "closed_date": {
            "example": "2022-08-13",
            "format": "date",
            "nullable": true,
            "type": "string"
          },
          "created_at": {
            "$ref": "#/$defs/CreatedAt"
          },
          "created_by": {
            "$ref": "#/$defs/CreatedBy"
          },
          "currency": {
            "$ref": "#/$defs/Currency"
          },
          "custom_mappings": {
            "$ref": "#/$defs/CustomMappings"
          },
          "customer_id": {
            "example": "12345",
            "type": "string"
          },
          "customers": {
            "items": {
              "properties": {
                "emails": {
                  "items": {
                    "$ref": "#/$defs/Email"
                  },
                  "type": "array"
                },
                "first_name": {
                  "example": "Elon",
                  "nullable": true,
                  "type": "string"
                },
                "id": {
                  "example": "12345",
                  "title": "Customer ID",
                  "type": "string"
                },
                "last_name": {
                  "example": "Musk",
                  "nullable": true,
                  "type": "string"
                },
                "middle_name": {
                  "example": "D.",
                  "nullable": true,
                  "type": "string"
                },
                "phone_numbers": {
                  "items": {
                    "$ref": "#/$defs/PhoneNumber"
                  },
                  "type": "array"
                }
              },
              "type": "object",
              "x-apideck-weights": {
                "emails": "medium",
                "first_name": "medium",
                "id": "medium",
                "last_name": "medium",
                "middle_name": "medium",
                "phone_numbers": "medium"
              }
            },
            "type": "array"
          },
          "discounts": {
            "items": {
              "properties": {
                "amount": {
                  "example": 27500,
                  "title": "Amount (in cents)",
                  "type": "integer"
                },
                "currency": {
                  "$ref": "#/$defs/Currency"
                },
                "id": {
                  "$ref": "#/$defs/Id"
                },
                "name": {
                  "example": "10% off",
                  "type": "string"
                },
                "product_id": {
                  "$ref": "#/$defs/Id"
                },
                "scope": {
                  "enum": [
                    "order",
                    "line_item"
                  ],
                  "example": "order",
                  "type": "string",
                  "x-apideck-enum-id": "orders.discounts.scope"
                },
                "type": {
                  "enum": [
                    "percentage",
                    "flat_fee"
                  ],
                  "example": "percentage",
                  "type": "string",
                  "x-apideck-enum-id": "orders.discounts.type"
                }
              },
              "required": [
                "type"
              ],
              "type": "object",
              "x-apideck-weights": {
                "amount": "medium",
                "currency": "medium",
                "id": "medium",
                "name": "medium",
                "product_id": "medium",
                "scope": "medium",
                "type": "medium"
              }
            },
            "type": "array"
          },
          "employee_id": {
            "example": "12345",
            "type": "string"
          },
          "fulfillments": {
            "items": {
              "properties": {
                "id": {
                  "example": "12345",
                  "type": "string"
                },
                "pickup_details": {
                  "properties": {
                    "accepted_at": {
                      "example": "2020-09-30T07:43:32.000Z",
                      "format": "date-time",
                      "nullable": true,
                      "readOnly": true,
                      "title": "Accepted at (timestamp)",
                      "type": "string"
                    },
                    "auto_complete_duration": {
                      "description": "The duration of time after which an open and accepted pickup fulfillment is automatically moved to the COMPLETED state. The duration must be in RFC 3339 format (for example, 'P1W3D').",
                      "example": "P1W3D",
                      "nullable": true,
                      "type": "string"
                    },
                    "cancel_reason": {
                      "description": "A description of why the pickup was canceled.",
                      "example": "Not hungry",
                      "nullable": true,
                      "type": "string"
                    },
                    "canceled_at": {
                      "description": "Indicating when the fulfillment was canceled. The timestamp must be in RFC 3339 format\n(for example, \"2016-09-04T23:59:33.123Z\").",
                      "example": "2016-09-04T23:59:33.123Z",
                      "format": "date-time",
                      "type": "string"
                    },
                    "curbside_pickup_details": {
                      "description": "Specific details for curbside pickup.",
                      "properties": {
                        "buyer_arrived_at": {
                          "description": "Indicating when the buyer arrived and is waiting for pickup. The timestamp must be in RFC 3339 format\n(for example, \"2016-09-04T23:59:33.123Z\").",
                          "example": "2016-09-04T23:59:33.123Z",
                          "format": "date-time",
                          "type": "string"
                        },
                        "curbside_details": {
                          "description": "Specific details for curbside pickup, such as parking number and vehicle model.",
                          "maxLength": 250,
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "x-apideck-weights": {
                        "buyer_arrived_at": "medium",
                        "curbside_details": "medium"
                      }
                    },
                    "expired_at": {
                      "description": "Indicating when the fulfillment expired. The timestamp must be in RFC 3339 format\n(for example, \"2016-09-04T23:59:33.123Z\").",
                      "example": "2016-09-04T23:59:33.123Z",
                      "format": "date-time",
                      "type": "string"
                    },
                    "expires_at": {
                      "description": "Indicating when this fulfillment expires if it is not accepted. The timestamp must be in RFC 3339 format\n(for example, \"2016-09-04T23:59:33.123Z\"). The expiration time can only be set up to 7 days in the future.\nIf `expires_at` is not set, this pickup fulfillment is automatically accepted when \nplaced.",
                      "example": "2016-09-04T23:59:33.123Z",
                      "format": "date-time",
                      "type": "string"
                    },
                    "is_curbside_pickup": {
                      "description": "If set to `true`, indicates that this pickup order is for curbside pickup, not in-store pickup.",
                      "type": "boolean"
                    },
                    "note": {
                      "description": "A note meant to provide additional instructions about the pickup\nfulfillment displayed in the Square Point of Sale application and set by the API.",
                      "example": "Pickup in the back.",
                      "type": "string"
                    },
                    "picked_up_at": {
                      "description": "Indicating when the fulfillment was picked up by the recipient. The timestamp must be in RFC 3339 format\n(for example, \"2016-09-04T23:59:33.123Z\").",
                      "example": "2016-09-04T23:59:33.123Z",
                      "format": "date-time",
                      "type": "string"
                    },
                    "pickup_at": {
                      "description": "The timestamp that represents the start of the pickup window. Must be in RFC 3339 timestamp format, e.g., \n\"2016-09-04T23:59:33.123Z\".\n\nFor fulfillments with the schedule type `ASAP`, this is automatically set\nto the current time plus the expected duration to prepare the fulfillment.",
                      "example": "2016-09-04T23:59:33.123Z",
                      "format": "date-time",
                      "type": "string"
                    },
                    "pickup_window_duration": {
                      "description": "The window of time in which the order should be picked up after the `pickup_at` timestamp.\nMust be in RFC 3339 duration format, e.g., \"P1W3D\". Can be used as an\ninformational guideline for merchants.",
                      "example": "P1W3D",
                      "type": "string"
                    },
                    "placed_at": {
                      "description": "Indicating when the fulfillment was placed. The timestamp must be in RFC 3339 format\n(for example, \"2016-09-04T23:59:33.123Z\").",
                      "example": "2016-09-04T23:59:33.123Z",
                      "format": "date-time",
                      "type": "string"
                    },
                    "prep_time_duration": {
                      "description": "The duration of time it takes to prepare this fulfillment.\nThe duration must be in RFC 3339 format (for example, \"P1W3D\").",
                      "example": "P1W3D",
                      "type": "string"
                    },
                    "ready_at": {
                      "description": "Indicating when the fulfillment is marked as ready for pickup. The timestamp must be in RFC 3339 format\n(for example, \"2016-09-04T23:59:33.123Z\").",
                      "example": "2016-09-04T23:59:33.123Z",
                      "format": "date-time",
                      "type": "string"
                    },
                    "recipient": {
                      "properties": {
                        "address": {
                          "$ref": "#/$defs/Address"
                        },
                        "customer_id": {
                          "example": "12345",
                          "type": "string"
                        },
                        "display_name": {
                          "example": "Elon Musk",
                          "title": "Display name",
                          "type": "string"
                        },
                        "email": {
                          "$ref": "#/$defs/Email"
                        },
                        "phone_number": {
                          "$ref": "#/$defs/PhoneNumber"
                        }
                      },
                      "type": "object",
                      "x-apideck-weights": {
                        "address": "medium",
                        "customer_id": "medium",
                        "email": "medium",
                        "phone_number": "medium"
                      }
                    },
                    "rejected_at": {
                      "description": "Indicating when the fulfillment was rejected. The timestamp must be in RFC 3339 format\n(for example, \"2016-09-04T23:59:33.123Z\").",
                      "example": "2016-09-04T23:59:33.123Z",
                      "format": "date-time",
                      "type": "string"
                    },
                    "schedule_type": {
                      "description": "The schedule type of the pickup fulfillment.",
                      "enum": [
                        "scheduled"
                      ],
                      "type": "string",
                      "x-apideck-enum-id": "orders.pickup_details.schedule_type"
                    }
                  },
                  "type": "object",
                  "x-apideck-weights": {
                    "accepted_at": "medium",
                    "auto_complete_duration": "medium",
                    "cancel_reason": "medium",
                    "canceled_at": "medium",
                    "curbside_pickup_details": "medium",
                    "expired_at": "medium",
                    "expires_at": "medium",
                    "is_curbside_pickup": "medium",
                    "note": "medium",
                    "picked_up_at": "medium",
                    "pickup_at": "medium",
                    "pickup_window_duration": "medium",
                    "placed_at": "medium",
                    "prep_time_duration": "medium",
                    "ready_at": "medium",
                    "recipient": "medium",
                    "rejected_at": "medium",
                    "schedule_type": "medium"
                  }
                },
                "shipment_details": {
                  "properties": {},
                  "type": "object",
                  "x-apideck-weights": {}
                },
                "status": {
                  "description": "The state of the fulfillment.",
                  "enum": [
                    "proposed",
                    "reserved",
                    "prepared",
                    "completed",
                    "cancelled",
                    "failed",
                    "other"
                  ],
                  "title": "Fulfillment status",
                  "type": "string",
                  "x-apideck-enum-id": "orders.fulfillments.status"
                },
                "type": {
                  "enum": [
                    "pickup",
                    "shipment"
                  ],
                  "example": "shipment",
                  "type": "string",
                  "x-apideck-enum-id": "orders.fulfillments.type"
                }
              },
              "type": "object",
              "x-apideck-weights": {
                "id": "medium",
                "pickup_details": "medium",
                "shipment_details": "medium",
                "status": "medium",
                "type": "medium"
              }
            },
            "type": "array"
          },
          "id": {
            "$ref": "#/$defs/Id"
          },
          "idempotency_key": {
            "$ref": "#/$defs/IdempotencyKey"
          },
          "line_items": {
            "items": {
              "properties": {
                "applied_discounts": {
                  "items": {
                    "properties": {
                      "amount": {
                        "example": 27500,
                        "title": "Amount (in cents)",
                        "type": "integer"
                      },
                      "currency": {
                        "$ref": "#/$defs/Currency"
                      },
                      "discount_id": {
                        "example": "12345",
                        "type": "string"
                      },
                      "id": {
                        "$ref": "#/$defs/Id"
                      }
                    },
                    "x-apideck-weights": {
                      "amount": "medium",
                      "currency": "medium",
                      "discount_id": "medium",
                      "id": "medium"
                    }
                  },
                  "type": "array"
                },
                "applied_taxes": {
                  "items": {
                    "properties": {
                      "amount": {
                        "example": 27500,
                        "title": "Amount (in cents)",
                        "type": "integer"
                      },
                      "currency": {
                        "$ref": "#/$defs/Currency"
                      },
                      "id": {
                        "$ref": "#/$defs/Id"
                      },
                      "tax_id": {
                        "example": "sales-tax",
                        "type": "string"
                      }
                    },
                    "x-apideck-weights": {
                      "amount": "medium",
                      "currency": "medium",
                      "id": "medium",
                      "tax_id": "medium"
                    }
                  },
                  "type": "array"
                },
                "id": {
                  "$ref": "#/$defs/Id"
                },
                "item": {
                  "properties": {
                    "id": {
                      "$ref": "#/$defs/Id"
                    }
                  },
                  "x-apideck-weights": {
                    "id": "medium"
                  }
                },
                "modifiers": {
                  "description": "Customizable options – toppings, add-ons, or special requests – create item modifiers. Modifiers that are applied to items will display on your customers’ digital receipts",
                  "items": {
                    "properties": {
                      "alternate_name": {
                        "example": "Modifier New",
                        "title": "Alternate name",
                        "type": "string"
                      },
                      "amount": {
                        "example": 27500,
                        "title": "Amount (in cents)",
                        "type": "integer"
                      },
                      "currency": {
                        "$ref": "#/$defs/Currency"
                      },
                      "id": {
                        "example": "12345",
                        "type": "string"
                      },
                      "modifier_group_id": {
                        "example": "123",
                        "title": "Modifier group ID",
                        "type": "string"
                      },
                      "name": {
                        "example": "New York Strip Steak - no cheese",
                        "type": "string"
                      }
                    },
                    "x-apideck-weights": {
                      "alternate_name": "medium",
                      "amount": "medium",
                      "currency": "medium",
                      "id": "medium",
                      "modifier_group_id": "medium",
                      "name": "medium"
                    }
                  },
                  "type": "array"
                },
                "name": {
                  "example": "New York Strip Steak",
                  "type": "string"
                },
                "quantity": {
                  "$ref": "#/$defs/Quantity"
                },
                "total_amount": {
                  "example": 27500,
                  "nullable": true,
                  "title": "Total amount (in cents)",
                  "type": "integer"
                },
                "total_discount": {
                  "example": 3000,
                  "nullable": true,
                  "title": "Total discount amount (in cents)",
                  "type": "integer"
                },
                "total_tax": {
                  "example": 2000,
                  "nullable": true,
                  "title": "Tax amount (in cents)",
                  "type": "integer"
                },
                "unit_price": {
                  "$ref": "#/$defs/UnitPrice"
                }
              },
              "type": "object",
              "x-apideck-weights": {
                "applied_discounts": "medium",
                "applied_taxes": "medium",
                "id": "medium",
                "item": "medium",
                "modifiers": "medium",
                "name": "medium",
                "quantity": "medium",
                "total_amount": "medium",
                "total_discount": "medium",
                "total_tax": "medium",
                "unit_price": "medium"
              }
            },
            "type": "array"
          },
          "location_id": {
            "example": "12345",
            "type": "string"
          },
          "merchant_id": {
            "example": "12345",
            "type": "string"
          },
          "note": {
            "description": "A note with information about this order, may be printed on the order receipt and displayed in apps",
            "title": "Note",
            "type": "string"
          },
          "order_date": {
            "example": "2022-08-12",
            "format": "date",
            "nullable": true,
            "type": "string"
          },
          "order_number": {
            "example": "1F",
            "type": "string"
          },
          "order_type_id": {
            "example": "12345",
            "type": "string"
          },
          "payment_status": {
            "description": "Is this order paid or not?",
            "enum": [
              "open",
              "paid",
              "refunded",
              "credited",
              "partially_paid",
              "partially_refunded",
              "unknown"
            ],
            "example": "open",
            "title": "PosPayment status",
            "type": "string",
            "x-apideck-enum-id": "orders.payment_status"
          },
          "payments": {
            "items": {
              "properties": {
                "amount": {
                  "example": 27500,
                  "title": "Amount (in cents)",
                  "type": "integer"
                },
                "currency": {
                  "$ref": "#/$defs/Currency"
                },
                "id": {
                  "$ref": "#/$defs/Id"
                }
              },
              "type": "object",
              "x-apideck-weights": {
                "amount": "medium",
                "currency": "medium",
                "id": "medium"
              }
            },
            "type": "array"
          },
          "reference_id": {
            "description": "An optional user-defined reference ID that associates this record with another entity in an external system. For example, a customer ID from an external customer management system.",
            "example": "my-order-001",
            "nullable": true,
            "title": "Reference ID",
            "type": "string"
          },
          "refunded": {
            "example": false,
            "type": "boolean"
          },
          "refunds": {
            "items": {
              "properties": {
                "amount": {
                  "example": 27500,
                  "title": "Amount (in cents)",
                  "type": "integer"
                },
                "currency": {
                  "$ref": "#/$defs/Currency"
                },
                "id": {
                  "$ref": "#/$defs/Id"
                },
                "location_id": {
                  "$ref": "#/$defs/Id"
                },
                "reason": {
                  "example": "The reason for the refund being issued.",
                  "type": "string"
                },
                "status": {
                  "enum": [
                    "pending",
                    "approved",
                    "rejected",
                    "failed"
                  ],
                  "type": "string",
                  "x-apideck-enum-id": "orders.refunds.status"
                },
                "tender_id": {
                  "$ref": "#/$defs/Id"
                },
                "transaction_id": {
                  "$ref": "#/$defs/Id"
                }
              },
              "type": "object",
              "x-apideck-weights": {
                "amount": "medium",
                "currency": "medium",
                "id": "medium",
                "location_id": "medium",
                "reason": "medium",
                "status": "medium",
                "tender_id": "medium",
                "transaction_id": "medium"
              }
            },
            "type": "array"
          },
          "seat": {
            "example": "23F",
            "type": "string"
          },
          "service_charges": {
            "$ref": "#/$defs/ServiceCharges"
          },
          "source": {
            "description": "Source of order. Indicates the way that the order was placed.",
            "enum": [
              "in-store",
              "online",
              "opt",
              "api",
              "kiosk",
              "caller-id",
              "google",
              "invoice"
            ],
            "example": "api",
            "nullable": true,
            "readOnly": true,
            "type": "string",
            "x-apideck-enum-id": "orders.source"
          },
          "status": {
            "description": "Order status. Clover specific: If no value is set, the status defaults to hidden, which indicates a hidden order. A hidden order is not displayed in user interfaces and can only be retrieved by its id. When creating an order via the REST API the value must be manually set to 'open'. More info [https://docs.clover.com/reference/orderupdateorder]()",
            "enum": [
              "open",
              "draft",
              "delivered",
              "delayed",
              "voided",
              "completed",
              "hidden"
            ],
            "example": "open",
            "title": "Status",
            "type": "string",
            "x-apideck-enum-id": "orders.status"
          },
          "table": {
            "example": "1F",
            "type": "string"
          },
          "taxes": {
            "items": {
              "properties": {
                "amount": {
                  "example": 27500,
                  "title": "Amount (in cents)",
                  "type": "integer"
                },
                "auto_applied": {
                  "description": "Square-only: Determines whether the tax was automatically applied to the order based on the catalog configuration. For an example, see Automatically Apply Taxes to an Order. [https://developer.squareup.com/docs/orders-api/apply-taxes-and-discounts/auto-apply-taxes]()",
                  "example": true,
                  "type": "boolean"
                },
                "currency": {
                  "$ref": "#/$defs/Currency"
                },
                "id": {
                  "example": "state-sales-tax",
                  "type": "string"
                },
                "name": {
                  "description": "The tax's name.",
                  "example": "State Sales Tax",
                  "type": "string"
                },
                "percentage": {
                  "$ref": "#/$defs/Percentage"
                },
                "scope": {
                  "enum": [
                    "order",
                    "line_item"
                  ],
                  "type": "string",
                  "x-apideck-enum-id": "orders.taxes.scope"
                },
                "type": {
                  "enum": [
                    "unknown",
                    "additive",
                    "inclusive"
                  ],
                  "type": "string",
                  "x-apideck-enum-id": "orders.taxes.type"
                }
              },
              "x-apideck-weights": {
                "amount": "medium",
                "auto_applied": "medium",
                "currency": "medium",
                "id": "medium",
                "name": "medium",
                "percentage": "medium",
                "scope": "medium",
                "type": "medium"
              }
            },
            "type": "array"
          },
          "tenders": {
            "items": {
              "properties": {
                "amount": {
                  "example": 27500,
                  "title": "Amount (in cents)",
                  "type": "number"
                },
                "buyer_tendered_cash_amount": {
                  "description": "The amount (in cents) of cash tendered by the buyer. Only applicable when the tender type is cash.",
                  "example": 27500,
                  "nullable": true,
                  "type": "integer"
                },
                "card": {
                  "$ref": "#/$defs/PaymentCard"
                },
                "card_entry_method": {
                  "description": "The entry method of the card. Only applicable when the tender type is card.",
                  "enum": [
                    "evm",
                    "swiped",
                    "keyed",
                    "on-file",
                    "contactless"
                  ],
                  "example": "swiped",
                  "nullable": true,
                  "type": "string",
                  "x-apideck-enum-id": "orders.tenders.card_entry_method"
                },
                "card_status": {
                  "description": "The status of the card. Only applicable when the tender type is card.",
                  "enum": [
                    "authorized",
                    "captured",
                    "failed",
                    "voided"
                  ],
                  "example": "authorized",
                  "nullable": true,
                  "type": "string",
                  "x-apideck-enum-id": "orders.tenders.card_status"
                },
                "change_back_cash_amount": {
                  "description": "The amount (in cents) of cash returned to the buyer. Only applicable when the tender type is cash.",
                  "example": 27500,
                  "nullable": true,
                  "type": "integer"
                },
                "currency": {
                  "$ref": "#/$defs/Currency"
                },
                "id": {
                  "$ref": "#/$defs/Id"
                },
                "location_id": {
                  "$ref": "#/$defs/Id"
                },
                "name": {
                  "example": "10% off",
                  "type": "string"
                },
                "note": {
                  "example": "An optional note associated with the tender at the time of payment.",
                  "title": "Note",
                  "type": "string"
                },
                "payment_id": {
                  "$ref": "#/$defs/Id"
                },
                "percentage": {
                  "example": 10,
                  "title": "Percentage",
                  "type": "number"
                },
                "total_amount": {
                  "example": 27.5,
                  "nullable": true,
                  "title": "Total amount (in cents)",
                  "type": "integer"
                },
                "total_discount": {
                  "example": 3,
                  "nullable": true,
                  "title": "Total discount (in cents)",
                  "type": "integer"
                },
                "total_processing_fee": {
                  "example": 0,
                  "nullable": true,
                  "title": "Total processing fee (in cents)",
                  "type": "integer"
                },
                "total_refund": {
                  "example": 0,
                  "nullable": true,
                  "title": "Total refund (in cents)",
                  "type": "integer"
                },
                "total_service_charge": {
                  "example": 0,
                  "nullable": true,
                  "title": "Total service charge (in cents)",
                  "type": "integer"
                },
                "total_tax": {
                  "example": 2.75,
                  "nullable": true,
                  "title": "Total tax (in cents)",
                  "type": "integer"
                },
                "total_tip": {
                  "example": 7,
                  "nullable": true,
                  "title": "Total tax (in cents)",
                  "type": "integer"
                },
                "transaction_id": {
                  "$ref": "#/$defs/Id"
                },
                "type": {
                  "enum": [
                    "cash",
                    "card",
                    "other"
                  ],
                  "example": "cash",
                  "type": "string",
                  "x-apideck-enum-id": "orders.tenders.type"
                }
              },
              "type": "object",
              "x-apideck-weights": {
                "amount": "medium",
                "buyer_tendered_cash_amount": "medium",
                "card": "medium",
                "card_entry_method": "medium",
                "card_status": "medium",
                "change_back_cash_amount": "medium",
                "currency": "medium",
                "id": "medium",
                "location_id": "medium",
                "name": "medium",
                "note": "medium",
                "payment_id": "medium",
                "total_amount": "medium",
                "total_discount": "medium",
                "total_processing_fee": "medium",
                "total_refund": "medium",
                "total_service_charge": "medium",
                "total_tax": "medium",
                "total_tip": "medium",
                "transaction_id": "medium",
                "type": "medium"
              }
            },
            "type": "array"
          },
          "title": {
            "title": "Title",
            "type": "string"
          },
          "total_amount": {
            "example": 275,
            "nullable": true,
            "title": "Total amount (in cents)",
            "type": "integer"
          },
          "total_discount": {
            "example": 300,
            "nullable": true,
            "title": "Total discount (in cents)",
            "type": "integer"
          },
          "total_refund": {
            "example": 0,
            "nullable": true,
            "title": "Total refund (in cents)",
            "type": "integer"
          },
          "total_service_charge": {
            "example": 0,
            "nullable": true,
            "title": "Total service charge (in cents)",
            "type": "integer"
          },
          "total_tax": {
            "example": 275,
            "nullable": true,
            "title": "Total tax (in cents)",
            "type": "integer"
          },
          "total_tip": {
            "example": 700,
            "nullable": true,
            "title": "Total tax (in cents)",
            "type": "integer"
          },
          "updated_at": {
            "$ref": "#/$defs/UpdatedAt"
          },
          "updated_by": {
            "$ref": "#/$defs/UpdatedBy"
          },
          "version": {
            "$ref": "#/$defs/Version"
          },
          "voided": {
            "example": false,
            "type": "boolean"
          },
          "voided_at": {
            "example": "2020-09-30T07:43:32.000Z",
            "format": "date-time",
            "readOnly": true,
            "title": "Updated at (timestamp)",
            "type": "string"
          }
        },
        "required": [
          "location_id",
          "merchant_id"
        ],
        "type": "object",
        "x-apideck-schema-id": "Order",
        "x-apideck-weights": {
          "closed_date": "high",
          "created_at": "medium",
          "created_by": "edge-case",
          "currency": "medium",
          "customer_id": "medium",
          "customers": "medium",
          "discounts": "medium",
          "employee_id": "medium",
          "fulfillments": "medium",
          "id": "critical",
          "idempotency_key": "low",
          "line_items": "medium",
          "location_id": "critical",
          "merchant_id": "critical",
          "note": "medium",
          "order_date": "critical",
          "order_number": "high",
          "order_type_id": "medium",
          "payment_status": "high",
          "payments": "medium",
          "reference_id": "low",
          "refunded": "medium",
          "refunds": "medium",
          "seat": "medium",
          "service_charges": "medium",
          "source": "medium",
          "state": "high",
          "status": "high",
          "table": "medium",
          "taxes": "medium",
          "tenders": "medium",
          "title": "high",
          "total_amount": "high",
          "total_discount": "medium",
          "total_refund": "medium",
          "total_service_charge": "medium",
          "total_tax": "medium",
          "total_tip": "medium",
          "updated_at": "medium",
          "updated_by": "edge-case",
          "version": "low",
          "voided": "medium",
          "voided_at": "medium"
        }
      },
      "CreatedAt": {
        "description": "The date and time when the object was created.",
        "example": "2020-09-30T07:43:32.000Z",
        "format": "date-time",
        "nullable": true,
        "readOnly": true,
        "title": "Created at (timestamp)",
        "type": "string"
      },
      "CreatedBy": {
        "description": "The user who created the object.",
        "example": "12345",
        "nullable": true,
        "readOnly": true,
        "title": "Created by",
        "type": "string"
      },
      "Currency": {
        "description": "Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).",
        "enum": [
          "UNKNOWN_CURRENCY",
          "AED",
          "AFN",
          "ALL",
          "AMD",
          "ANG",
          "AOA",
          "ARS",
          "AUD",
          "AWG",
          "AZN",
          "BAM",
          "BBD",
          "BDT",
          "BGN",
          "BHD",
          "BIF",
          "BMD",
          "BND",
          "BOB",
          "BOV",
          "BRL",
          "BSD",
          "BTN",
          "BWP",
          "BYR",
          "BZD",
          "CAD",
          "CDF",
          "CHE",
          "CHF",
          "CHW",
          "CLF",
          "CLP",
          "CNY",
          "COP",
          "COU",
          "CRC",
          "CUC",
          "CUP",
          "CVE",
          "CZK",
          "DJF",
          "DKK",
          "DOP",
          "DZD",
          "EGP",
          "ERN",
          "ETB",
          "EUR",
          "FJD",
          "FKP",
          "GBP",
          "GEL",
          "GHS",
          "GIP",
          "GMD",
          "GNF",
          "GTQ",
          "GYD",
          "HKD",
          "HNL",
          "HRK",
          "HTG",
          "HUF",
          "IDR",
          "ILS",
          "INR",
          "IQD",
          "IRR",
          "ISK",
          "JMD",
          "JOD",
          "JPY",
          "KES",
          "KGS",
          "KHR",
          "KMF",
          "KPW",
          "KRW",
          "KWD",
          "KYD",
          "KZT",
          "LAK",
          "LBP",
          "LKR",
          "LRD",
          "LSL",
          "LTL",
          "LVL",
          "LYD",
          "MAD",
          "MDL",
          "MGA",
          "MKD",
          "MMK",
          "MNT",
          "MOP",
          "MRO",
          "MUR",
          "MVR",
          "MWK",
          "MXN",
          "MXV",
          "MYR",
          "MZN",
          "NAD",
          "NGN",
          "NIO",
          "NOK",
          "NPR",
          "NZD",
          "OMR",
          "PAB",
          "PEN",
          "PGK",
          "PHP",
          "PKR",
          "PLN",
          "PYG",
          "QAR",
          "RON",
          "RSD",
          "RUB",
          "RWF",
          "SAR",
          "SBD",
          "SCR",
          "SDG",
          "SEK",
          "SGD",
          "SHP",
          "SLL",
          "SOS",
          "SRD",
          "SSP",
          "STD",
          "SVC",
          "SYP",
          "SZL",
          "THB",
          "TJS",
          "TMT",
          "TND",
          "TOP",
          "TRC",
          "TRY",
          "TTD",
          "TWD",
          "TZS",
          "UAH",
          "UGX",
          "USD",
          "USN",
          "USS",
          "UYI",
          "UYU",
          "UZS",
          "VEF",
          "VND",
          "VUV",
          "WST",
          "XAF",
          "XAG",
          "XAU",
          "XBA",
          "XBB",
          "XBC",
          "XBD",
          "XCD",
          "XDR",
          "XOF",
          "XPD",
          "XPF",
          "XPT",
          "XTS",
          "XXX",
          "YER",
          "ZAR",
          "ZMK",
          "ZMW",
          "BTC",
          "ETH"
        ],
        "example": "USD",
        "nullable": true,
        "title": "Currency",
        "type": "string",
        "x-apideck-enum-coverage-ignore": true,
        "x-apideck-enum-id": "currencies",
        "x-enum-elements": [
          {
            "description": "Unknown currency",
            "name": "UNKNOWN_CURRENCY"
          },
          {
            "description": "United Arab Emirates dirham",
            "name": "AED"
          },
          {
            "description": "Afghan afghani",
            "name": "AFN"
          },
          {
            "description": "Albanian lek",
            "name": "ALL"
          },
          {
            "description": "Armenian dram",
            "name": "AMD"
          },
          {
            "description": "Netherlands Antillean guilder",
            "name": "ANG"
          },
          {
            "description": "Angolan kwanza",
            "name": "AOA"
          },
          {
            "description": "Argentine peso",
            "name": "ARS"
          },
          {
            "description": "Australian dollar",
            "name": "AUD"
          },
          {
            "description": "Aruban florin",
            "name": "AWG"
          },
          {
            "description": "Azerbaijani manat",
            "name": "AZN"
          },
          {
            "description": "Bosnia and Herzegovina convertible mark",
            "name": "BAM"
          },
          {
            "description": "Barbados dollar",
            "name": "BBD"
          },
          {
            "description": "Bangladeshi taka",
            "name": "BDT"
          },
          {
            "description": "Bulgarian lev",
            "name": "BGN"
          },
          {
            "description": "Bahraini dinar",
            "name": "BHD"
          },
          {
            "description": "Burundian franc",
            "name": "BIF"
          },
          {
            "description": "Bermudian dollar",
            "name": "BMD"
          },
          {
            "description": "Brunei dollar",
            "name": "BND"
          },
          {
            "description": "Boliviano",
            "name": "BOB"
          },
          {
            "description": "Bolivian Mvdol",
            "name": "BOV"
          },
          {
            "description": "Brazilian real",
            "name": "BRL"
          },
          {
            "description": "Bahamian dollar",
            "name": "BSD"
          },
          {
            "description": "Bhutanese ngultrum",
            "name": "BTN"
          },
          {
            "description": "Botswana pula",
            "name": "BWP"
          },
          {
            "description": "Belarusian ruble",
            "name": "BYR"
          },
          {
            "description": "Belize dollar",
            "name": "BZD"
          },
          {
            "description": "Canadian dollar",
            "name": "CAD"
          },
          {
            "description": "Congolese franc",
            "name": "CDF"
          },
          {
            "description": "WIR Euro",
            "name": "CHE"
          },
          {
            "description": "Swiss franc",
            "name": "CHF"
          },
          {
            "description": "WIR Franc",
            "name": "CHW"
          },
          {
            "description": "Unidad de Fomento",
            "name": "CLF"
          },
          {
            "description": "Chilean peso",
            "name": "CLP"
          },
          {
            "description": "Chinese yuan",
            "name": "CNY"
          },
          {
            "description": "Colombian peso",
            "name": "COP"
          },
          {
            "description": "Unidad de Valor Real",
            "name": "COU"
          },
          {
            "description": "Costa Rican colon",
            "name": "CRC"
          },
          {
            "description": "Cuban convertible peso",
            "name": "CUC"
          },
          {
            "description": "Cuban peso",
            "name": "CUP"
          },
          {
            "description": "Cape Verdean escudo",
            "name": "CVE"
          },
          {
            "description": "Czech koruna",
            "name": "CZK"
          },
          {
            "description": "Djiboutian franc",
            "name": "DJF"
          },
          {
            "description": "Danish krone",
            "name": "DKK"
          },
          {
            "description": "Dominican peso",
            "name": "DOP"
          },
          {
            "description": "Algerian dinar",
            "name": "DZD"
          },
          {
            "description": "Egyptian pound",
            "name": "EGP"
          },
          {
            "description": "Eritrean nakfa",
            "name": "ERN"
          },
          {
            "description": "Ethiopian birr",
            "name": "ETB"
          },
          {
            "description": "Euro",
            "name": "EUR"
          },
          {
            "description": "Fiji dollar",
            "name": "FJD"
          },
          {
            "description": "Falkland Islands pound",
            "name": "FKP"
          },
          {
            "description": "Pound sterling",
            "name": "GBP"
          },
          {
            "description": "Georgian lari",
            "name": "GEL"
          },
          {
            "description": "Ghanaian cedi",
            "name": "GHS"
          },
          {
            "description": "Gibraltar pound",
            "name": "GIP"
          },
          {
            "description": "Gambian dalasi",
            "name": "GMD"
          },
          {
            "description": "Guinean franc",
            "name": "GNF"
          },
          {
            "description": "Guatemalan quetzal",
            "name": "GTQ"
          },
          {
            "description": "Guyanese dollar",
            "name": "GYD"
          },
          {
            "description": "Hong Kong dollar",
            "name": "HKD"
          },
          {
            "description": "Honduran lempira",
            "name": "HNL"
          },
          {
            "description": "Croatian kuna",
            "name": "HRK"
          },
          {
            "description": "Haitian gourde",
            "name": "HTG"
          },
          {
            "description": "Hungarian forint",
            "name": "HUF"
          },
          {
            "description": "Indonesian rupiah",
            "name": "IDR"
          },
          {
            "description": "Israeli new shekel",
            "name": "ILS"
          },
          {
            "description": "Indian rupee",
            "name": "INR"
          },
          {
            "description": "Iraqi dinar",
            "name": "IQD"
          },
          {
            "description": "Iranian rial",
            "name": "IRR"
          },
          {
            "description": "Icelandic króna",
            "name": "ISK"
          },
          {
            "description": "Jamaican dollar",
            "name": "JMD"
          },
          {
            "description": "Jordanian dinar",
            "name": "JOD"
          },
          {
            "description": "Japanese yen",
            "name": "JPY"
          },
          {
            "description": "Kenyan shilling",
            "name": "KES"
          },
          {
            "description": "Kyrgyzstani som",
            "name": "KGS"
          },
          {
            "description": "Cambodian riel",
            "name": "KHR"
          },
          {
            "description": "Comoro franc",
            "name": "KMF"
          },
          {
            "description": "North Korean won",
            "name": "KPW"
          },
          {
            "description": "South Korean won",
            "name": "KRW"
          },
          {
            "description": "Kuwaiti dinar",
            "name": "KWD"
          },
          {
            "description": "Cayman Islands dollar",
            "name": "KYD"
          },
          {
            "description": "Kazakhstani tenge",
            "name": "KZT"
          },
          {
            "description": "Lao kip",
            "name": "LAK"
          },
          {
            "description": "Lebanese pound",
            "name": "LBP"
          },
          {
            "description": "Sri Lankan rupee",
            "name": "LKR"
          },
          {
            "description": "Liberian dollar",
            "name": "LRD"
          },
          {
            "description": "Lesotho loti",
            "name": "LSL"
          },
          {
            "description": "Lithuanian litas",
            "name": "LTL"
          },
          {
            "description": "Latvian lats",
            "name": "LVL"
          },
          {
            "description": "Libyan dinar",
            "name": "LYD"
          },
          {
            "description": "Moroccan dirham",
            "name": "MAD"
          },
          {
            "description": "Moldovan leu",
            "name": "MDL"
          },
          {
            "description": "Malagasy ariary",
            "name": "MGA"
          },
          {
            "description": "Macedonian denar",
            "name": "MKD"
          },
          {
            "description": "Myanmar kyat",
            "name": "MMK"
          },
          {
            "description": "Mongolian tögrög",
            "name": "MNT"
          },
          {
            "description": "Macanese pataca",
            "name": "MOP"
          },
          {
            "description": "Mauritanian ouguiya",
            "name": "MRO"
          },
          {
            "description": "Mauritian rupee",
            "name": "MUR"
          },
          {
            "description": "Maldivian rufiyaa",
            "name": "MVR"
          },
          {
            "description": "Malawian kwacha",
            "name": "MWK"
          },
          {
            "description": "Mexican peso",
            "name": "MXN"
          },
          {
            "description": "Mexican Unidad de Inversion",
            "name": "MXV"
          },
          {
            "description": "Malaysian ringgit",
            "name": "MYR"
          },
          {
            "description": "Mozambican metical",
            "name": "MZN"
          },
          {
            "description": "Namibian dollar",
            "name": "NAD"
          },
          {
            "description": "Nigerian naira",
            "name": "NGN"
          },
          {
            "description": "Nicaraguan córdoba",
            "name": "NIO"
          },
          {
            "description": "Norwegian krone",
            "name": "NOK"
          },
          {
            "description": "Nepalese rupee",
            "name": "NPR"
          },
          {
            "description": "New Zealand dollar",
            "name": "NZD"
          },
          {
            "description": "Omani rial",
            "name": "OMR"
          },
          {
            "description": "Panamanian balboa",
            "name": "PAB"
          },
          {
            "description": "Peruvian sol",
            "name": "PEN"
          },
          {
            "description": "Papua New Guinean kina",
            "name": "PGK"
          },
          {
            "description": "Philippine peso",
            "name": "PHP"
          },
          {
            "description": "Pakistani rupee",
            "name": "PKR"
          },
          {
            "description": "Polish złoty",
            "name": "PLN"
          },
          {
            "description": "Paraguayan guaraní",
            "name": "PYG"
          },
          {
            "description": "Qatari riyal",
            "name": "QAR"
          },
          {
            "description": "Romanian leu",
            "name": "RON"
          },
          {
            "description": "Serbian dinar",
            "name": "RSD"
          },
          {
            "description": "Russian ruble",
            "name": "RUB"
          },
          {
            "description": "Rwandan franc",
            "name": "RWF"
          },
          {
            "description": "Saudi riyal",
            "name": "SAR"
          },
          {
            "description": "Solomon Islands dollar",
            "name": "SBD"
          },
          {
            "description": "Seychelles rupee",
            "name": "SCR"
          },
          {
            "description": "Sudanese pound",
            "name": "SDG"
          },
          {
            "description": "Swedish krona",
            "name": "SEK"
          },
          {
            "description": "Singapore dollar",
            "name": "SGD"
          },
          {
            "description": "Saint Helena pound",
            "name": "SHP"
          },
          {
            "description": "Sierra Leonean leone",
            "name": "SLL"
          },
          {
            "description": "Somali shilling",
            "name": "SOS"
          },
          {
            "description": "Surinamese dollar",
            "name": "SRD"
          },
          {
            "description": "South Sudanese pound",
            "name": "SSP"
          },
          {
            "description": "São Tomé and Príncipe dobra",
            "name": "STD"
          },
          {
            "description": "Salvadoran colón",
            "name": "SVC"
          },
          {
            "description": "Syrian pound",
            "name": "SYP"
          },
          {
            "description": "Swazi lilangeni",
            "name": "SZL"
          },
          {
            "description": "Thai baht",
            "name": "THB"
          },
          {
            "description": "Tajikstani somoni",
            "name": "TJS"
          },
          {
            "description": "Turkmenistan manat",
            "name": "TMT"
          },
          {
            "description": "Tunisian dinar",
            "name": "TND"
          },
          {
            "description": "Tongan pa'anga",
            "name": "TOP"
          },
          {
            "description": "Turkish lira",
            "name": "TRY"
          },
          {
            "description": "Trinidad and Tobago dollar",
            "name": "TTD"
          },
          {
            "description": "New Taiwan dollar",
            "name": "TWD"
          },
          {
            "description": "Tanzanian shilling",
            "name": "TZS"
          },
          {
            "description": "Ukrainian hryvnia",
            "name": "UAH"
          },
          {
            "description": "Ugandan shilling",
            "name": "UGX"
          },
          {
            "description": "United States dollar",
            "name": "USD"
          },
          {
            "description": "United States dollar (next day)",
            "name": "USN"
          },
          {
            "description": "United States dollar (same day)",
            "name": "USS"
          },
          {
            "description": "Uruguay Peso en Unidedades Indexadas",
            "name": "UYI"
          },
          {
            "description": "Uruguyan peso",
            "name": "UYU"
          },
          {
            "description": "Uzbekistan som",
            "name": "UZS"
          },
          {
            "description": "Venezuelan bolívar soberano",
            "name": "VEF"
          },
          {
            "description": "Vietnamese đồng",
            "name": "VND"
          },
          {
            "description": "Vanuatu vatu",
            "name": "VUV"
          },
          {
            "description": "Samoan tala",
            "name": "WST"
          },
          {
            "description": "CFA franc BEAC",
            "name": "XAF"
          },
          {
            "description": "Silver",
            "name": "XAG"
          },
          {
            "description": "Gold",
            "name": "XAU"
          },
          {
            "description": "European Composite Unit",
            "name": "XBA"
          },
          {
            "description": "European Monetary Unit",
            "name": "XBB"
          },
          {
            "description": "European Unit of Account 9",
            "name": "XBC"
          },
          {
            "description": "European Unit of Account 17",
            "name": "XBD"
          },
          {
            "description": "East Caribbean dollar",
            "name": "XCD"
          },
          {
            "description": "Special drawing rights (International Monetary Fund)",
            "name": "XDR"
          },
          {
            "description": "CFA franc BCEAO",
            "name": "XOF"
          },
          {
            "description": "Palladium",
            "name": "XPD"
          },
          {
            "description": "CFP franc",
            "name": "XPF"
          },
          {
            "description": "Platinum",
            "name": "XPT"
          },
          {
            "description": "Code reserved for testing",
            "name": "XTS"
          },
          {
            "description": "No currency",
            "name": "XXX"
          },
          {
            "description": "Yemeni rial",
            "name": "YER"
          },
          {
            "description": "South African rand",
            "name": "ZAR"
          },
          {
            "description": "Zambian kwacha",
            "name": "ZMK"
          },
          {
            "description": "Zambian kwacha",
            "name": "ZMW"
          },
          {
            "description": "Bitcoin",
            "name": "BTC"
          },
          {
            "description": "Ether",
            "name": "ETH"
          }
        ]
      },
      "CustomMappings": {
        "description": "When custom mappings are configured on the resource, the result is included here.",
        "nullable": true,
        "type": "object",
        "x-apideck-schema-id": "CustomMappings"
      },
      "Email": {
        "additionalProperties": false,
        "properties": {
          "email": {
            "description": "Email address",
            "example": "elon@musk.com",
            "format": "email",
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the email address",
            "example": "123",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "Email type",
            "enum": [
              "primary",
              "secondary",
              "work",
              "personal",
              "billing",
              "other"
            ],
            "example": "primary",
            "nullable": true,
            "type": "string",
            "x-apideck-enum-id": "emails.type"
          }
        },
        "required": [
          "email"
        ],
        "type": "object",
        "x-apideck-schema-id": "Email",
        "x-apideck-weights": {
          "email": "critical",
          "id": "edge-case",
          "type": "critical"
        }
      },
      "PhoneNumber": {
        "additionalProperties": false,
        "properties": {
          "area_code": {
            "description": "The area code of the phone number, e.g. 323",
            "example": "323",
            "nullable": true,
            "title": "Area code",
            "type": "string"
          },
          "country_code": {
            "description": "The country code of the phone number, e.g. +1",
            "example": "1",
            "nullable": true,
            "title": "Country code",
            "type": "string"
          },
          "extension": {
            "description": "The extension of the phone number",
            "example": "105",
            "nullable": true,
            "title": "Phone extension",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier of the phone number",
            "example": "12345",
            "nullable": true,
            "type": "string"
          },
          "number": {
            "description": "The phone number",
            "example": "111-111-1111",
            "minLength": 1,
            "title": "Phone number",
            "type": "string"
          },
          "type": {
            "description": "The type of phone number",
            "enum": [
              "primary",
              "secondary",
              "home",
              "work",
              "office",
              "mobile",
              "assistant",
              "fax",
              "direct-dial-in",
              "personal",
              "other"
            ],
            "example": "primary",
            "nullable": true,
            "type": "string",
            "x-apideck-enum-id": "phone_numbers.type"
          }
        },
        "required": [
          "number"
        ],
        "type": "object",
        "x-apideck-schema-id": "PhoneNumber",
        "x-apideck-weights": {
          "area_code": "edge-case",
          "country_code": "edge-case",
          "extension": "edge-case",
          "id": "edge-case",
          "number": "critical",
          "type": "critical"
        }
      },
      "Id": {
        "description": "A unique identifier for an object.",
        "example": "12345",
        "readOnly": true,
        "title": "ID",
        "type": "string"
      },
      "Address": {
        "additionalProperties": false,
        "properties": {
          "city": {
            "description": "Name of city.",
            "example": "San Francisco",
            "nullable": true,
            "type": "string"
          },
          "contact_name": {
            "description": "Name of the contact person at the address",
            "example": "Elon Musk",
            "nullable": true,
            "type": "string"
          },
          "country": {
            "description": "country code according to ISO 3166-1 alpha-2.",
            "example": "US",
            "nullable": true,
            "type": "string"
          },
          "county": {
            "description": "Address field that holds a sublocality, such as a county",
            "example": "Santa Clara",
            "nullable": true,
            "type": "string"
          },
          "email": {
            "description": "Email address of the address",
            "example": "elon@musk.com",
            "nullable": true,
            "type": "string"
          },
          "fax": {
            "description": "Fax number of the address",
            "example": "122-111-1111",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the address.",
            "example": "123",
            "nullable": true,
            "type": "string"
          },
          "latitude": {
            "description": "Latitude of the address",
            "example": "40.759211",
            "nullable": true,
            "type": "string"
          },
          "line1": {
            "description": "Line 1 of the address e.g. number, street, suite, apt #, etc.",
            "example": "Main street",
            "nullable": true,
            "type": "string"
          },
          "line2": {
            "description": "Line 2 of the address",
            "example": "apt #",
            "nullable": true,
            "type": "string"
          },
          "line3": {
            "description": "Line 3 of the address",
            "example": "Suite #",
            "nullable": true,
            "type": "string"
          },
          "line4": {
            "description": "Line 4 of the address",
            "example": "delivery instructions",
            "nullable": true,
            "type": "string"
          },
          "longitude": {
            "description": "Longitude of the address",
            "example": "-73.984638",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "The name of the address.",
            "example": "HQ US",
            "nullable": true,
            "type": "string"
          },
          "notes": {
            "description": "Additional notes",
            "example": "Address notes or delivery instructions.",
            "nullable": true,
            "title": "Notes",
            "type": "string"
          },
          "phone_number": {
            "description": "Phone number of the address",
            "example": "111-111-1111",
            "nullable": true,
            "type": "string"
          },
          "postal_code": {
            "description": "Zip code or equivalent.",
            "example": "94104",
            "nullable": true,
            "type": "string"
          },
          "row_version": {
            "$ref": "#/$defs/RowVersion"
          },
          "salutation": {
            "description": "Salutation of the contact person at the address",
            "example": "Mr",
            "nullable": true,
            "type": "string"
          },
          "state": {
            "description": "Name of state",
            "example": "CA",
            "nullable": true,
            "type": "string"
          },
          "street_number": {
            "description": "Street number",
            "example": "25",
            "nullable": true,
            "type": "string"
          },
          "string": {
            "description": "The address string. Some APIs don't provide structured address data.",
            "example": "25 Spring Street, Blackburn, VIC 3130",
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "The type of address.",
            "enum": [
              "primary",
              "secondary",
              "home",
              "office",
              "shipping",
              "billing",
              "other"
            ],
            "example": "primary",
            "nullable": true,
            "type": "string",
            "x-apideck-enum-id": "addresses.type"
          },
          "website": {
            "description": "Website of the address",
            "example": "https://elonmusk.com",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-apideck-schema-id": "Address",
        "x-apideck-weights": {
          "city": "high",
          "contact_name": "edge-case",
          "country": "high",
          "county": "edge-case",
          "email": "edge-case",
          "fax": "edge-case",
          "id": "edge-case",
          "latitude": "low",
          "line1": "high",
          "line2": "low",
          "line3": "edge-case",
          "line4": "edge-case",
          "longitude": "low",
          "name": "edge-case",
          "phone_number": "edge-case",
          "postal_code": "high",
          "row_version": "edge-case",
          "salutation": "edge-case",
          "state": "high",
          "street_number": "low",
          "string": "low",
          "type": "critical",
          "website": "edge-case"
        }
      },
      "RowVersion": {
        "description": "A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.",
        "example": "1-12345",
        "nullable": true,
        "title": "Row version",
        "type": "string"
      },
      "IdempotencyKey": {
        "description": "A value you specify that uniquely identifies this request among requests you have sent.",
        "example": "random_string",
        "maxLength": 45,
        "type": "string"
      },
      "Quantity": {
        "example": 1,
        "nullable": true,
        "title": "Quantity",
        "type": "number"
      },
      "UnitPrice": {
        "example": 27500.5,
        "nullable": true,
        "title": "Unit price",
        "type": "number"
      },
      "ServiceCharges": {
        "description": "Optional service charges or gratuity tip applied to the order.",
        "items": {
          "$ref": "#/$defs/ServiceCharge"
        },
        "type": "array",
        "x-apideck-schema-id": "ServiceCharges",
        "x-apideck-weights": {
          "amount": "critical",
          "currency": "high",
          "name": "high",
          "percentage": "high",
          "type": "high"
        }
      },
      "ServiceCharge": {
        "properties": {
          "active": {
            "$ref": "#/$defs/Active"
          },
          "amount": {
            "example": 27500,
            "title": "Amount (in cents)",
            "type": "number"
          },
          "currency": {
            "$ref": "#/$defs/Currency"
          },
          "id": {
            "$ref": "#/$defs/Id"
          },
          "name": {
            "description": "Service charge name",
            "example": "Charge for delivery",
            "type": "string"
          },
          "percentage": {
            "description": "Service charge percentage. Use this field to calculate the amount of the service charge. Pass a percentage and amount at the same time.",
            "example": 12.5,
            "type": "number"
          },
          "type": {
            "description": "The type of the service charge.",
            "enum": [
              "auto_gratuity",
              "custom"
            ],
            "type": "string",
            "x-apideck-enum-id": "service-charges.type"
          }
        },
        "type": "object",
        "x-apideck-schema-id": "ServiceCharge"
      },
      "Active": {
        "example": true,
        "nullable": true,
        "title": "Is active",
        "type": "boolean"
      },
      "Percentage": {
        "example": 15,
        "title": "Percentage",
        "type": "number"
      },
      "PaymentCard": {
        "additionalProperties": false,
        "description": "A card's non-confidential details.",
        "nullable": true,
        "properties": {
          "billing_address": {
            "$ref": "#/$defs/Address"
          },
          "bin": {
            "description": "The first six digits of the card number, known as the Bank Identification Number (BIN).",
            "example": "41111",
            "nullable": true,
            "type": "string"
          },
          "card_brand": {
            "description": "The first six digits of the card number, known as the Bank Identification Number (BIN).",
            "enum": [
              "visa",
              "mastercard",
              "amex",
              "discover",
              "discover-diners",
              "jcb",
              "china-unionpay",
              "square-gift-card",
              "square-capital-card",
              "interac",
              "eftpos",
              "felica",
              "ebt",
              "other"
            ],
            "nullable": true,
            "type": "string",
            "x-apideck-enum-id": "payment-cards.card_brand"
          },
          "card_type": {
            "enum": [
              "credit",
              "debit",
              "prepaid",
              "other"
            ],
            "example": "credit",
            "nullable": true,
            "type": "string",
            "x-apideck-enum-id": "payment-cards.card_type"
          },
          "cardholder_name": {
            "example": "John Doe",
            "nullable": true,
            "type": "string"
          },
          "customer_id": {
            "example": "12345",
            "nullable": true,
            "type": "string"
          },
          "enabled": {
            "description": "Indicates whether or not a card can be used for payments.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "exp_month": {
            "description": "The expiration month of the associated card as an integer between 1 and 12.",
            "example": 1,
            "maximum": 12,
            "minimum": 1,
            "nullable": true,
            "type": "integer"
          },
          "exp_year": {
            "description": "The four-digit year of the card's expiration date.",
            "example": 2022,
            "nullable": true,
            "type": "integer"
          },
          "fingerprint": {
            "example": " Intended as a POS-assigned identifier, based on the card number, to identify the card across multiple locations within a single application.",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "$ref": "#/$defs/Id"
          },
          "last_4": {
            "example": "The last 4 digits of the card number.",
            "nullable": true,
            "type": "string"
          },
          "merchant_id": {
            "example": "12345",
            "type": "string"
          },
          "prepaid_type": {
            "enum": [
              "non-prepaid",
              "prepaid",
              "unknown"
            ],
            "example": "prepaid",
            "nullable": true,
            "type": "string",
            "x-apideck-enum-id": "payment-cards.prepaid_type"
          },
          "reference_id": {
            "description": "An optional user-defined reference ID that associates this record with another entity in an external system. For example, a customer ID from an external customer management system.",
            "example": "card-001",
            "nullable": true,
            "title": "Reference ID",
            "type": "string"
          },
          "version": {
            "$ref": "#/$defs/Version"
          }
        },
        "type": "object",
        "x-apideck-schema-id": "PaymentCard"
      },
      "Version": {
        "example": "230320320320",
        "nullable": true,
        "title": "Version",
        "type": "string"
      },
      "UpdatedAt": {
        "description": "The date and time when the object was last updated.",
        "example": "2020-09-30T07:43:32.000Z",
        "format": "date-time",
        "nullable": true,
        "readOnly": true,
        "title": "Updated at (timestamp)",
        "type": "string"
      },
      "UpdatedBy": {
        "description": "The user who last updated the object.",
        "example": "12345",
        "nullable": true,
        "readOnly": true,
        "title": "Updated by",
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://unify.apideck.com/pos/orders{?raw}"
    },
    "headers": {
      "x-apideck-consumer-id": {
        "$": "x-apideck-consumer-id"
      },
      "x-apideck-app-id": {
        "$": "x-apideck-app-id"
      },
      "x-apideck-service-id": {
        "$": "x-apideck-service-id"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**data**",
              {
                "$ul": [
                  "**id**: The unique identifier of the resource"
                ]
              }
            ],
            "**operation**: Operation performed",
            "**resource**: Unified API resource name",
            "**service**: Apideck ID of service provider",
            "**status**: HTTP Response Status",
            "**status_code**: HTTP Response Status Code"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Contains parameter or domain specific information related to the error and why it occurred.",
            "**error**: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "**message**: A human-readable message providing more details about the error.",
            "**ref**: Link to documentation of error type",
            "**status_code**: HTTP status code",
            "**type_name**: The type of error returned"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Contains parameter or domain specific information related to the error and why it occurred.",
            "**error**: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "**message**: A human-readable message providing more details about the error.",
            "**ref**: Link to documentation of error type",
            "**status_code**: HTTP status code",
            "**type_name**: The type of error returned"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "402": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Contains parameter or domain specific information related to the error and why it occurred.",
            "**error**: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "**message**: A human-readable message providing more details about the error.",
            "**ref**: Link to documentation of error type",
            "**status_code**: HTTP status code",
            "**type_name**: The type of error returned"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Contains parameter or domain specific information related to the error and why it occurred.",
            "**error**: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "**message**: A human-readable message providing more details about the error.",
            "**ref**: Link to documentation of error type",
            "**status_code**: HTTP status code",
            "**type_name**: The type of error returned"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "422": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Contains parameter or domain specific information related to the error and why it occurred.",
            "**error**: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "**message**: A human-readable message providing more details about the error.",
            "**ref**: Link to documentation of error type",
            "**status_code**: HTTP status code",
            "**type_name**: The type of error returned"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "default": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Contains parameter or domain specific information related to the error and why it occurred.",
            "**error**: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "**message**: A human-readable message providing more details about the error.",
            "**ref**: Link to documentation of error type",
            "**status_code**: HTTP status code",
            "**type_name**: The type of error returned"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
