{
  "name": "postProxy",
  "description": "Proxies a downstream POST request to a service and injects the necessary credentials into a request stored in Vault. This allows you to have an additional security layer and logging without needing to rely on Unify for normalization.\n**Note**: Vault will proxy all data to the downstream URL and method/verb in the headers.\n",
  "parameters": {
    "type": "object",
    "properties": {
      "x-apideck-consumer-id": {
        "type": "string",
        "description": "ID of the consumer which you want to get or push data from"
      },
      "x-apideck-app-id": {
        "type": "string",
        "description": "The ID of your Unify application"
      },
      "x-apideck-service-id": {
        "type": "string",
        "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
      },
      "x-apideck-downstream-url": {
        "type": "string",
        "description": "Downstream URL"
      },
      "x-apideck-downstream-authorization": {
        "type": "string",
        "description": "Downstream authorization header. This will skip the Vault token injection."
      }
    },
    "required": [
      "x-apideck-consumer-id",
      "x-apideck-app-id",
      "x-apideck-service-id",
      "x-apideck-downstream-url"
    ]
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://unify.apideck.com/proxy"
    },
    "headers": {
      "x-apideck-consumer-id": {
        "$": "x-apideck-consumer-id"
      },
      "x-apideck-app-id": {
        "$": "x-apideck-app-id"
      },
      "x-apideck-service-id": {
        "$": "x-apideck-service-id"
      },
      "x-apideck-downstream-url": {
        "$": "x-apideck-downstream-url"
      },
      "x-apideck-downstream-authorization": {
        "$": "x-apideck-downstream-authorization"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Contains parameter or domain specific information related to the error and why it occurred.",
            "**error**: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "**message**: A human-readable message providing more details about the error.",
            "**ref**: Link to documentation of error type",
            "**status_code**: HTTP status code",
            "**type_name**: The type of error returned"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "default": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
