{
  "name": "jobsOne",
  "description": "Get Job",
  "parameters": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "ID of the record you are acting upon."
      },
      "x-apideck-consumer-id": {
        "type": "string",
        "description": "ID of the consumer which you want to get or push data from"
      },
      "x-apideck-app-id": {
        "type": "string",
        "description": "The ID of your Unify application"
      },
      "x-apideck-service-id": {
        "type": "string",
        "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
      },
      "raw": {
        "default": false,
        "type": "boolean",
        "description": "Include raw response. Mostly used for debugging purposes"
      },
      "fields": {
        "nullable": true,
        "type": "string",
        "description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded."
      }
    },
    "required": [
      "id",
      "x-apideck-consumer-id",
      "x-apideck-app-id"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://unify.apideck.com/ats/jobs/{id}{?raw,fields}"
    },
    "headers": {
      "x-apideck-consumer-id": {
        "$": "x-apideck-consumer-id"
      },
      "x-apideck-app-id": {
        "$": "x-apideck-app-id"
      },
      "x-apideck-service-id": {
        "$": "x-apideck-service-id"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**data**",
              {
                "$ul": [
                  "**addresses**",
                  "**available_to_employees**: Specifies whether an employee of the organization can apply for the job.",
                  "**blocks**",
                  [
                    "**branch**: Details of the branch for which the job is created.",
                    {
                      "$ul": [
                        "**id**: A unique identifier for an object.",
                        "**name**: Name of the branch."
                      ]
                    }
                  ],
                  "**closing**",
                  "**closing_date**",
                  "**closing_html**: The closing section of the job description in HTML format",
                  "**code**: The code of the job.",
                  "**confidential**",
                  "**created_at**: The date and time when the object was created.",
                  "**created_by**: The user who created the object.",
                  "**custom_fields**",
                  "**custom_mappings**: When custom mappings are configured on the resource, the result is included here.",
                  "**deleted**: Flag to indicate if the object is deleted.",
                  [
                    "**department**",
                    {
                      "$ul": [
                        "**code**",
                        "**created_at**: The date and time when the object was created.",
                        "**created_by**: The user who created the object.",
                        "**custom_mappings**: When custom mappings are configured on the resource, the result is included here.",
                        "**description**",
                        "**id**: A unique identifier for an object.",
                        "**name**: Department name",
                        "**parent_id**: Parent ID",
                        "**updated_at**: The date and time when the object was last updated.",
                        "**updated_by**: The user who last updated the object."
                      ]
                    }
                  ],
                  "**description**: A description of the object.",
                  "**description_html**: The job description in HTML format",
                  "**employment_terms**",
                  "**experience**: Level of experience required for the job role.",
                  "**followers**",
                  "**hiring_managers**",
                  "**id**: A unique identifier for an object.",
                  "**job_portal_url**: URL of the job portal",
                  "**language**: language code according to ISO 639-1. For the United States - EN",
                  "**links**",
                  "**location**: Specifies the location for the job posting.",
                  "**owner_id**",
                  "**published_at**",
                  "**record_url**",
                  "**recruiters**: The recruiter is generally someone who is tasked to help the hiring manager find and screen qualified applicant",
                  "**remote**: Specifies whether the posting is for a remote job.",
                  "**requisition_id**: A job's Requisition ID (Req ID) allows your organization to identify and track a job based on alphanumeric naming conventions unique to your company's internal processes.",
                  [
                    "**salary**",
                    {
                      "$ul": [
                        "**currency**: Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).",
                        "**interval**",
                        "**max**: Maximum salary payable for the job role.",
                        "**min**: Minimum salary payable for the job role."
                      ]
                    }
                  ],
                  "**sequence**: Sequence in relation to other jobs.",
                  "**slug**",
                  "**status**: The status of the job.",
                  "**tags**",
                  "**title**: The job title of the person.",
                  "**updated_at**: The date and time when the object was last updated.",
                  "**updated_by**: The user who last updated the object.",
                  "**url**: URL of the job description",
                  "**visibility**: The visibility of the job"
                ]
              }
            ],
            "**operation**: Operation performed",
            "**resource**: Unified API resource name",
            "**service**: Apideck ID of service provider",
            "**status**: HTTP Response Status",
            "**status_code**: HTTP Response Status Code"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Contains parameter or domain specific information related to the error and why it occurred.",
            "**error**: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "**message**: A human-readable message providing more details about the error.",
            "**ref**: Link to documentation of error type",
            "**status_code**: HTTP status code",
            "**type_name**: The type of error returned"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Contains parameter or domain specific information related to the error and why it occurred.",
            "**error**: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "**message**: A human-readable message providing more details about the error.",
            "**ref**: Link to documentation of error type",
            "**status_code**: HTTP status code",
            "**type_name**: The type of error returned"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "402": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Contains parameter or domain specific information related to the error and why it occurred.",
            "**error**: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "**message**: A human-readable message providing more details about the error.",
            "**ref**: Link to documentation of error type",
            "**status_code**: HTTP status code",
            "**type_name**: The type of error returned"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Contains parameter or domain specific information related to the error and why it occurred.",
            "**error**: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "**message**: A human-readable message providing more details about the error.",
            "**ref**: Link to documentation of error type",
            "**status_code**: HTTP status code",
            "**type_name**: The type of error returned"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "422": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Contains parameter or domain specific information related to the error and why it occurred.",
            "**error**: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "**message**: A human-readable message providing more details about the error.",
            "**ref**: Link to documentation of error type",
            "**status_code**: HTTP status code",
            "**type_name**: The type of error returned"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "default": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Contains parameter or domain specific information related to the error and why it occurred.",
            "**error**: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "**message**: A human-readable message providing more details about the error.",
            "**ref**: Link to documentation of error type",
            "**status_code**: HTTP status code",
            "**type_name**: The type of error returned"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
