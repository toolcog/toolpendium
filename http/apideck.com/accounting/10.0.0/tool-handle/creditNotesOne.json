{
  "name": "creditNotesOne",
  "description": "Get Credit Note",
  "parameters": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "ID of the record you are acting upon."
      },
      "x-apideck-consumer-id": {
        "type": "string",
        "description": "ID of the consumer which you want to get or push data from"
      },
      "x-apideck-app-id": {
        "type": "string",
        "description": "The ID of your Unify application"
      },
      "x-apideck-service-id": {
        "type": "string",
        "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
      },
      "raw": {
        "default": false,
        "type": "boolean",
        "description": "Include raw response. Mostly used for debugging purposes"
      },
      "fields": {
        "nullable": true,
        "type": "string",
        "description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded."
      }
    },
    "required": [
      "id",
      "x-apideck-consumer-id",
      "x-apideck-app-id"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://unify.apideck.com/accounting/credit-notes/{id}{?raw,fields}"
    },
    "headers": {
      "x-apideck-consumer-id": {
        "$": "x-apideck-consumer-id"
      },
      "x-apideck-app-id": {
        "$": "x-apideck-app-id"
      },
      "x-apideck-service-id": {
        "$": "x-apideck-service-id"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**data**",
              {
                "$ul": [
                  [
                    "**account**",
                    {
                      "$ul": [
                        "**code**: The code assigned to the account.",
                        "**id**: The unique identifier for the account.",
                        "**name**: The name of the account.",
                        "**nominal_code**: The nominal code of the account."
                      ]
                    }
                  ],
                  "**allocations**",
                  "**balance**: The balance reflecting any payments made against the transaction.",
                  "**created_at**: The date and time when the object was created.",
                  "**created_by**: The user who created the object.",
                  "**currency**: Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).",
                  "**currency_rate**: Currency Exchange Rate at the time entity was recorded/generated.",
                  "**custom_mappings**: When custom mappings are configured on the resource, the result is included here.",
                  [
                    "**customer**: The customer this entity is linked to.",
                    {
                      "$ul": [
                        "**company_name**: The company name of the customer.",
                        "**display_id**: The display ID of the customer.",
                        "**display_name**: The display name of the customer.",
                        "**id**: The ID of the customer this entity is linked to.",
                        "**name**: The name of the customer. Deprecated, use display_name instead."
                      ]
                    }
                  ],
                  "**date_issued**: Date credit note issued - YYYY:MM::DDThh:mm:ss.sTZD",
                  "**date_paid**: Date credit note paid - YYYY:MM::DDThh:mm:ss.sTZD",
                  "**id**: Unique identifier representing the entity",
                  "**line_items**",
                  "**note**: Optional note to be associated with the credit note.",
                  "**number**: Credit note number.",
                  "**reference**: Optional reference message ie: Debit remittance detail.",
                  "**remaining_credit**: Indicates the total credit amount still available to apply towards the payment.",
                  "**row_version**: A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.",
                  "**status**: Status of credit notes",
                  "**sub_total**: Sub-total amount, normally before tax.",
                  "**tax_code**: Applicable tax id/code override if tax is not supplied on a line item basis.",
                  "**tax_inclusive**: Amounts are including tax",
                  "**terms**: Optional terms to be associated with the credit note.",
                  "**total_amount**: Amount of transaction",
                  "**total_tax**: Total tax amount applied to this invoice.",
                  "**type**: Type of payment",
                  "**updated_at**: The date and time when the object was last updated.",
                  "**updated_by**: The user who last updated the object."
                ]
              }
            ],
            "**operation**: Operation performed",
            "**resource**: Unified API resource name",
            "**service**: Apideck ID of service provider",
            "**status**: HTTP Response Status",
            "**status_code**: HTTP Response Status Code"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Contains parameter or domain specific information related to the error and why it occurred.",
            "**error**: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "**message**: A human-readable message providing more details about the error.",
            "**ref**: Link to documentation of error type",
            "**status_code**: HTTP status code",
            "**type_name**: The type of error returned"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Contains parameter or domain specific information related to the error and why it occurred.",
            "**error**: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "**message**: A human-readable message providing more details about the error.",
            "**ref**: Link to documentation of error type",
            "**status_code**: HTTP status code",
            "**type_name**: The type of error returned"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "402": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Contains parameter or domain specific information related to the error and why it occurred.",
            "**error**: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "**message**: A human-readable message providing more details about the error.",
            "**ref**: Link to documentation of error type",
            "**status_code**: HTTP status code",
            "**type_name**: The type of error returned"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Contains parameter or domain specific information related to the error and why it occurred.",
            "**error**: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "**message**: A human-readable message providing more details about the error.",
            "**ref**: Link to documentation of error type",
            "**status_code**: HTTP status code",
            "**type_name**: The type of error returned"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "422": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Contains parameter or domain specific information related to the error and why it occurred.",
            "**error**: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "**message**: A human-readable message providing more details about the error.",
            "**ref**: Link to documentation of error type",
            "**status_code**: HTTP status code",
            "**type_name**: The type of error returned"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "default": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Contains parameter or domain specific information related to the error and why it occurred.",
            "**error**: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "**message**: A human-readable message providing more details about the error.",
            "**ref**: Link to documentation of error type",
            "**status_code**: HTTP status code",
            "**type_name**: The type of error returned"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
