{
  "name": "invoiceItemsOne",
  "description": "Get Invoice Item",
  "parameters": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "ID of the record you are acting upon."
      },
      "x-apideck-consumer-id": {
        "type": "string",
        "description": "ID of the consumer which you want to get or push data from"
      },
      "x-apideck-app-id": {
        "type": "string",
        "description": "The ID of your Unify application"
      },
      "x-apideck-service-id": {
        "type": "string",
        "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API."
      },
      "raw": {
        "default": false,
        "type": "boolean",
        "description": "Include raw response. Mostly used for debugging purposes"
      },
      "fields": {
        "nullable": true,
        "type": "string",
        "description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded."
      }
    },
    "required": [
      "id",
      "x-apideck-consumer-id",
      "x-apideck-app-id"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://unify.apideck.com/accounting/invoice-items/{id}{?raw,fields}"
    },
    "headers": {
      "x-apideck-consumer-id": {
        "$": "x-apideck-consumer-id"
      },
      "x-apideck-app-id": {
        "$": "x-apideck-app-id"
      },
      "x-apideck-service-id": {
        "$": "x-apideck-service-id"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**data**",
              {
                "$ul": [
                  "**active**",
                  [
                    "**asset_account**",
                    {
                      "$ul": [
                        "**code**: The code assigned to the account.",
                        "**id**: The unique identifier for the account.",
                        "**name**: The name of the account.",
                        "**nominal_code**: The nominal code of the account."
                      ]
                    }
                  ],
                  "**code**: User defined item code",
                  "**created_at**: The date and time when the object was created.",
                  "**created_by**: The user who created the object.",
                  "**custom_mappings**: When custom mappings are configured on the resource, the result is included here.",
                  "**description**: A short description of the item",
                  [
                    "**expense_account**",
                    {
                      "$ul": [
                        "**code**: The code assigned to the account.",
                        "**id**: The unique identifier for the account.",
                        "**name**: The name of the account.",
                        "**nominal_code**: The nominal code of the account."
                      ]
                    }
                  ],
                  "**id**: The ID of the item.",
                  [
                    "**income_account**",
                    {
                      "$ul": [
                        "**code**: The code assigned to the account.",
                        "**id**: The unique identifier for the account.",
                        "**name**: The name of the account.",
                        "**nominal_code**: The nominal code of the account."
                      ]
                    }
                  ],
                  "**inventory_date**: The date of opening balance if inventory item is tracked - YYYY-MM-DD.",
                  "**name**: Item name",
                  [
                    "**purchase_details**",
                    {
                      "$ul": [
                        "**tax_inclusive**: Amounts are including tax",
                        [
                          "**tax_rate**",
                          {
                            "$ul": [
                              "**code**: Tax rate code",
                              "**id**: The ID of the object.",
                              "**name**: Name of the tax rate",
                              "**rate**: Rate of the tax rate"
                            ]
                          }
                        ],
                        "**unit_of_measure**: Description of the unit type the item is sold as, ie: kg, hour.",
                        "**unit_price**"
                      ]
                    }
                  ],
                  "**purchased**: Item is available for purchase transactions",
                  "**quantity**",
                  "**row_version**: A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.",
                  [
                    "**sales_details**",
                    {
                      "$ul": [
                        "**tax_inclusive**: Amounts are including tax",
                        [
                          "**tax_rate**",
                          {
                            "$ul": [
                              "**code**: Tax rate code",
                              "**id**: The ID of the object.",
                              "**name**: Name of the tax rate",
                              "**rate**: Rate of the tax rate"
                            ]
                          }
                        ],
                        "**unit_of_measure**: Description of the unit type the item is sold as, ie: kg, hour.",
                        "**unit_price**"
                      ]
                    }
                  ],
                  "**sold**: Item will be available on sales transactions",
                  "**taxable**: If true, transactions for this item are taxable",
                  "**tracked**: Item is inventoried",
                  [
                    "**tracking_category**",
                    {
                      "$ul": [
                        "**id**: The unique identifier for the tracking category.",
                        "**name**: The name of the tracking category."
                      ]
                    }
                  ],
                  "**type**: Item type",
                  "**unit_price**",
                  "**updated_at**: The date and time when the object was last updated.",
                  "**updated_by**: The user who last updated the object."
                ]
              }
            ],
            "**operation**: Operation performed",
            "**resource**: Unified API resource name",
            "**service**: Apideck ID of service provider",
            "**status**: HTTP Response Status",
            "**status_code**: HTTP Response Status Code"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Contains parameter or domain specific information related to the error and why it occurred.",
            "**error**: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "**message**: A human-readable message providing more details about the error.",
            "**ref**: Link to documentation of error type",
            "**status_code**: HTTP status code",
            "**type_name**: The type of error returned"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Contains parameter or domain specific information related to the error and why it occurred.",
            "**error**: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "**message**: A human-readable message providing more details about the error.",
            "**ref**: Link to documentation of error type",
            "**status_code**: HTTP status code",
            "**type_name**: The type of error returned"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "402": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Contains parameter or domain specific information related to the error and why it occurred.",
            "**error**: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "**message**: A human-readable message providing more details about the error.",
            "**ref**: Link to documentation of error type",
            "**status_code**: HTTP status code",
            "**type_name**: The type of error returned"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Contains parameter or domain specific information related to the error and why it occurred.",
            "**error**: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "**message**: A human-readable message providing more details about the error.",
            "**ref**: Link to documentation of error type",
            "**status_code**: HTTP status code",
            "**type_name**: The type of error returned"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "422": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Contains parameter or domain specific information related to the error and why it occurred.",
            "**error**: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "**message**: A human-readable message providing more details about the error.",
            "**ref**: Link to documentation of error type",
            "**status_code**: HTTP status code",
            "**type_name**: The type of error returned"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "default": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: Contains parameter or domain specific information related to the error and why it occurred.",
            "**error**: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "**message**: A human-readable message providing more details about the error.",
            "**ref**: Link to documentation of error type",
            "**status_code**: HTTP status code",
            "**type_name**: The type of error returned"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
