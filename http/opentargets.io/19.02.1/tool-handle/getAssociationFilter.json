{
  "name": "getAssociationFilter",
  "description": "More complex queries for associations scores and objects can be done using\nthis method, which allows to sort in different order, restrict to a specific class\nof diseases or targets, as well as filtering results by score and associated pathways.\n",
  "parameters": {
    "type": "object",
    "properties": {
      "target": {
        "type": "string",
        "description": "A target identifier listed as target.id."
      },
      "disease": {
        "type": "string",
        "description": "An EFO code listed as disease.id."
      },
      "therapeutic_area": {
        "type": "string",
        "description": "An EFO code of a therapeutic area."
      },
      "datasource": {
        "type": "string",
        "description": "Data source to consider."
      },
      "datatype": {
        "type": "string",
        "description": "Data type to consider."
      },
      "pathway": {
        "type": "string",
        "description": "A Reactome pathway identifier (returning only those targets linked to the specified pathway)."
      },
      "target_class": {
        "type": "string",
        "description": "A ChEMBL target class identifier (returning only those targets belonging to the specified class)."
      },
      "uniprotkw": {
        "type": "string",
        "description": "A UniProt keyword (meaning all the targets linked to that keyword)."
      },
      "direct": {
        "type": "boolean",
        "description": "If `true`, it returns associations that have at least one direct evidence connecting the target and the disease. If `false` it only returns associations for which there is no direct evidence connecting the target and the disease, but only evidence connecting the target to a children of the disease in the EFO ontology."
      },
      "datastructure": {
        "type": "string",
        "description": "Type of data structure to return. Can be 'full', 'simple', 'ids', or 'count'."
      },
      "fields": {
        "type": "string",
        "description": "Fields you want to retrieve. This will get priority over the data structure requested."
      },
      "facets": {
        "default": false,
        "type": "boolean",
        "description": "Returns facets"
      },
      "scorevalue_min": {
        "default": 0,
        "format": "float",
        "type": "number",
        "description": "Filter by minimum score value. The default is 0, but using 0.2 is a good trade-off to filter lower quality data points."
      },
      "scorevalue_max": {
        "format": "float",
        "type": "number",
        "description": "Filter by maximum score value."
      },
      "scorevalue_types": {
        "type": "string",
        "description": "Score types to apply the score value min and max filters. The default is `overall`."
      },
      "size": {
        "format": "integer",
        "type": "number",
        "description": "Maximum amount of results to return. Defaults to 10, max is 10000."
      },
      "from": {
        "format": "integer",
        "type": "number",
        "description": "How many initial results should be skipped. Defaults to 0."
      },
      "format": {
        "type": "string",
        "description": "Format to get the data back. Can be 'json', 'xml', 'tab' or 'csv'. **Note** that this option can only be used when calling the API directly and will not work in this page. The response here will always be JSON."
      },
      "sort": {
        "type": "string",
        "description": "Sort by the given score type. Defaults to 'overall' and descending order. Use '~' prefix to do ascending\norder e.g. '~overall'. You will call a data type score like: 'datatypes.literature', and a data source as\n'datasources.gwas'. Supports multiple entries.\n"
      },
      "search": {
        "type": "string",
        "description": "Restrict the filtered results to those matching the passed string. The matching is done with a\nphrase match prefix.\n"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "//platform-api.opentargets.io/v3/platform/public/association/filter{?target,disease,therapeutic_area,datasource,datatype,pathway,target_class,uniprotkw,direct,datastructure,fields,facets,scorevalue_min,scorevalue_max,scorevalue_types,size,from,format,sort,search}"
    }
  },
  "responses": {}
}
