{
  "name": "list_events",
  "description": "List Events",
  "parameters": {
    "type": "object",
    "properties": {
      "cursor": {
        "description": "Return the page of entries after this one.",
        "type": "string"
      },
      "limit": {
        "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
        "minimum": 0,
        "type": "integer"
      },
      "created_at.after": {
        "description": "Return results after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp.",
        "format": "date-time",
        "type": "string"
      },
      "created_at.before": {
        "description": "Return results before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp.",
        "format": "date-time",
        "type": "string"
      },
      "created_at.on_or_after": {
        "description": "Return results on or after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp.",
        "format": "date-time",
        "type": "string"
      },
      "created_at.on_or_before": {
        "description": "Return results on or before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp.",
        "format": "date-time",
        "type": "string"
      },
      "category.in": {
        "description": "Filter Events for those with the specified category or categories. For GET requests, this should be encoded as a comma-delimited string, such as `?in=one,two,three`.",
        "items": {
          "enum": [
            "account.created",
            "account.updated",
            "account_number.created",
            "account_number.updated",
            "account_statement.created",
            "account_transfer.created",
            "account_transfer.updated",
            "ach_prenotification.created",
            "ach_prenotification.updated",
            "ach_transfer.created",
            "ach_transfer.updated",
            "card.created",
            "card.updated",
            "card_payment.created",
            "card_payment.updated",
            "card_dispute.created",
            "card_dispute.updated",
            "check_deposit.created",
            "check_deposit.updated",
            "check_transfer.created",
            "check_transfer.updated",
            "declined_transaction.created",
            "digital_wallet_token.created",
            "digital_wallet_token.updated",
            "document.created",
            "entity.created",
            "entity.updated",
            "external_account.created",
            "file.created",
            "group.updated",
            "group.heartbeat",
            "inbound_ach_transfer_return.created",
            "inbound_ach_transfer_return.updated",
            "inbound_wire_drawdown_request.created",
            "oauth_connection.created",
            "oauth_connection.deactivated",
            "pending_transaction.created",
            "pending_transaction.updated",
            "real_time_decision.card_authorization_requested",
            "real_time_decision.digital_wallet_token_requested",
            "real_time_decision.digital_wallet_authentication_requested",
            "real_time_payments_transfer.created",
            "real_time_payments_transfer.updated",
            "real_time_payments_request_for_payment.created",
            "real_time_payments_request_for_payment.updated",
            "transaction.created",
            "wire_drawdown_request.created",
            "wire_drawdown_request.updated",
            "wire_transfer.created",
            "wire_transfer.updated"
          ],
          "type": "string",
          "x-enum-descriptions": [
            "Occurs whenever an Account is created.",
            "Occurs whenever an Account is updated.",
            "Occurs whenever an Account Number is created.",
            "Occurs whenever an Account Number is updated.",
            "Occurs whenever an Account Statement is created.",
            "Occurs whenever an Account Transfer is created.",
            "Occurs whenever an Account Transfer is updated.",
            "Occurs whenever an ACH Prenotification is created.",
            "Occurs whenever an ACH Prenotification is updated.",
            "Occurs whenever an ACH Transfer is created.",
            "Occurs whenever an ACH Transfer is updated.",
            "Occurs whenever a Card is created.",
            "Occurs whenever a Card is updated.",
            "Occurs whenever a Card Payment is created.",
            "Occurs whenever a Card Payment is updated.",
            "Occurs whenever a Card Dispute is created.",
            "Occurs whenever a Card Dispute is updated.",
            "Occurs whenever a Check Deposit is created.",
            "Occurs whenever a Check Deposit is updated.",
            "Occurs whenever a Check Transfer is created.",
            "Occurs whenever a Check Transfer is updated.",
            "Occurs whenever a Declined Transaction is created.",
            "Occurs whenever a Digital Wallet Token is created.",
            "Occurs whenever a Digital Wallet Token is updated.",
            "Occurs whenever a Document is created.",
            "Occurs whenever an Entity is created.",
            "Occurs whenever an Entity is updated.",
            "Occurs whenever an External Account is created.",
            "Occurs whenever a File is created.",
            "Occurs whenever a Group is updated.",
            "Increase may send webhooks with this category to see if a webhook endpoint is working properly.",
            "Occurs whenever an Inbound ACH Transfer Return is created.",
            "Occurs whenever an Inbound ACH Transfer Return is updated.",
            "Occurs whenever an Inbound Wire Drawdown Request is created.",
            "Occurs whenever an OAuth Connection is created.",
            "Occurs whenever an OAuth Connection is deactivated.",
            "Occurs whenever a Pending Transaction is created.",
            "Occurs whenever a Pending Transaction is updated.",
            "Occurs whenever a Real-Time Decision is created in response to a card authorization.",
            "Occurs whenever a Real-Time Decision is created in response to a digital wallet provisioning attempt.",
            "Occurs whenever a Real-Time Decision is created in response to a digital wallet requiring two-factor authentication.",
            "Occurs whenever a Real Time Payments Transfer is created.",
            "Occurs whenever a Real Time Payments Transfer is updated.",
            "Occurs whenever a Real Time Payments Request for Payment is created.",
            "Occurs whenever a Real Time Payments Request for Payment is updated.",
            "Occurs whenever a Transaction is updated.",
            "Occurs whenever a Wire Drawdown Request is created.",
            "Occurs whenever a Wire Drawdown Request is updated.",
            "Occurs whenever a Wire Transfer is created.",
            "Occurs whenever a Wire Transfer is updated."
          ]
        },
        "type": "array"
      },
      "associated_object_id": {
        "description": "Filter Events to those belonging to the object with the provided identifier.",
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://api.increase.com/events{?cursor,limit,created_at.after,created_at.before,created_at.on_or_after,created_at.on_or_before,category.in,associated_object_id}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Event List"
        },
        "A list of Event objects",
        "**Key properties:**",
        {
          "$ul": [
            "**data**: The contents of the list.",
            "**next_cursor**: A pointer to a place in the list."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "default": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
