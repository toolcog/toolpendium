{
  "name": "CreateConnector",
  "description": "Creates a connector using the specified properties.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "capacity",
          "connectorConfiguration",
          "connectorName",
          "kafkaCluster",
          "kafkaClusterClientAuthentication",
          "kafkaClusterEncryptionInTransit",
          "kafkaConnectVersion",
          "plugins",
          "serviceExecutionRoleArn"
        ],
        "properties": {
          "capacity": {
            "description": "Information about the capacity of the connector, whether it is auto scaled or provisioned.",
            "type": "object",
            "properties": {
              "autoScaling": {
                "allOf": [
                  {
                    "$ref": "#/$defs/AutoScaling"
                  },
                  {
                    "description": "Information about the auto scaling parameters for the connector."
                  }
                ]
              },
              "provisionedCapacity": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ProvisionedCapacity"
                  },
                  {
                    "description": "Details about a fixed capacity allocated to a connector."
                  }
                ]
              }
            }
          },
          "connectorConfiguration": {
            "description": "A map of keys to values that represent the configuration for the connector.",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/__string"
            }
          },
          "connectorDescription": {
            "description": "A summary description of the connector.",
            "type": "string",
            "minLength": 0,
            "maxLength": 1024
          },
          "connectorName": {
            "description": "The name of the connector.",
            "type": "string",
            "minLength": 1,
            "maxLength": 128
          },
          "kafkaCluster": {
            "description": "The details of the Apache Kafka cluster to which the connector is connected.",
            "type": "object",
            "properties": {
              "apacheKafkaCluster": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ApacheKafkaCluster"
                  },
                  {
                    "description": "The Apache Kafka cluster to which the connector is connected."
                  }
                ]
              }
            }
          },
          "kafkaClusterClientAuthentication": {
            "description": "The client authentication information used in order to authenticate with the Apache Kafka cluster.",
            "type": "object",
            "properties": {
              "authenticationType": {
                "allOf": [
                  {
                    "$ref": "#/$defs/KafkaClusterClientAuthenticationType"
                  },
                  {
                    "description": "The type of client authentication used to connect to the Apache Kafka cluster. Value NONE means that no client authentication is used."
                  }
                ]
              }
            }
          },
          "kafkaClusterEncryptionInTransit": {
            "description": "Details of encryption in transit to the Apache Kafka cluster.",
            "type": "object",
            "properties": {
              "encryptionType": {
                "allOf": [
                  {
                    "$ref": "#/$defs/KafkaClusterEncryptionInTransitType"
                  },
                  {
                    "description": "The type of encryption in transit to the Apache Kafka cluster."
                  }
                ]
              }
            }
          },
          "kafkaConnectVersion": {
            "description": "The version of Kafka Connect. It has to be compatible with both the Apache Kafka cluster's version and the plugins.",
            "type": "string"
          },
          "logDelivery": {
            "description": "Details about log delivery.",
            "type": "object",
            "properties": {
              "workerLogDelivery": {
                "allOf": [
                  {
                    "$ref": "#/$defs/WorkerLogDelivery"
                  },
                  {
                    "description": "The workers can send worker logs to different destination types. This configuration specifies the details of these destinations."
                  }
                ]
              }
            }
          },
          "plugins": {
            "description": "Specifies which plugins to use for the connector.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/Plugin"
            }
          },
          "serviceExecutionRoleArn": {
            "description": "The Amazon Resource Name (ARN) of the IAM role used by the connector to access the Amazon Web Services resources that it needs. The types of resources depends on the logic of the connector. For example, a connector that has Amazon S3 as a destination must have permissions that allow it to write to the S3 destination bucket.",
            "type": "string"
          },
          "workerConfiguration": {
            "description": "The configuration of the workers, which are the processes that run the connector logic.",
            "type": "object",
            "properties": {
              "revision": {
                "allOf": [
                  {
                    "$ref": "#/$defs/__longMin1"
                  },
                  {
                    "description": "The revision of the worker configuration."
                  }
                ]
              },
              "workerConfigurationArn": {
                "allOf": [
                  {
                    "$ref": "#/$defs/__string"
                  },
                  {
                    "description": "The Amazon Resource Name (ARN) of the worker configuration."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "AutoScaling": {
        "type": "object",
        "required": [
          "maxWorkerCount",
          "mcuCount",
          "minWorkerCount"
        ],
        "properties": {
          "maxWorkerCount": {
            "allOf": [
              {
                "$ref": "#/$defs/__integerMin1Max10"
              },
              {
                "description": "The maximum number of workers allocated to the connector."
              }
            ]
          },
          "mcuCount": {
            "allOf": [
              {
                "$ref": "#/$defs/__integerMin1Max8"
              },
              {
                "description": "The number of microcontroller units (MCUs) allocated to each connector worker. The valid values are 1,2,4,8."
              }
            ]
          },
          "minWorkerCount": {
            "allOf": [
              {
                "$ref": "#/$defs/__integerMin1Max10"
              },
              {
                "description": "The minimum number of workers allocated to the connector."
              }
            ]
          },
          "scaleInPolicy": {
            "allOf": [
              {
                "$ref": "#/$defs/ScaleInPolicy"
              },
              {
                "description": "The sacle-in policy for the connector."
              }
            ]
          },
          "scaleOutPolicy": {
            "allOf": [
              {
                "$ref": "#/$defs/ScaleOutPolicy"
              },
              {
                "description": "The sacle-out policy for the connector."
              }
            ]
          }
        },
        "description": "Specifies how the connector scales."
      },
      "__integerMin1Max10": {
        "type": "integer",
        "minimum": 1,
        "maximum": 10
      },
      "__integerMin1Max8": {
        "type": "integer",
        "minimum": 1,
        "maximum": 8
      },
      "ScaleInPolicy": {
        "type": "object",
        "required": [
          "cpuUtilizationPercentage"
        ],
        "properties": {
          "cpuUtilizationPercentage": {
            "allOf": [
              {
                "$ref": "#/$defs/__integerMin1Max100"
              },
              {
                "description": "Specifies the CPU utilization percentage threshold at which you want connector scale in to be triggered."
              }
            ]
          }
        },
        "description": "The scale-in policy for the connector."
      },
      "__integerMin1Max100": {
        "type": "integer",
        "minimum": 1,
        "maximum": 100
      },
      "ScaleOutPolicy": {
        "type": "object",
        "required": [
          "cpuUtilizationPercentage"
        ],
        "properties": {
          "cpuUtilizationPercentage": {
            "allOf": [
              {
                "$ref": "#/$defs/__integerMin1Max100"
              },
              {
                "description": "The CPU utilization percentage threshold at which you want connector scale out to be triggered."
              }
            ]
          }
        },
        "description": "The scale-out policy for the connector."
      },
      "ProvisionedCapacity": {
        "type": "object",
        "required": [
          "mcuCount",
          "workerCount"
        ],
        "properties": {
          "mcuCount": {
            "allOf": [
              {
                "$ref": "#/$defs/__integerMin1Max8"
              },
              {
                "description": "The number of microcontroller units (MCUs) allocated to each connector worker. The valid values are 1,2,4,8."
              }
            ]
          },
          "workerCount": {
            "allOf": [
              {
                "$ref": "#/$defs/__integerMin1Max10"
              },
              {
                "description": "The number of workers that are allocated to the connector."
              }
            ]
          }
        },
        "description": "Details about a connector's provisioned capacity."
      },
      "__string": {
        "type": "string"
      },
      "ApacheKafkaCluster": {
        "type": "object",
        "required": [
          "bootstrapServers",
          "vpc"
        ],
        "properties": {
          "bootstrapServers": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "The bootstrap servers of the cluster."
              }
            ]
          },
          "vpc": {
            "allOf": [
              {
                "$ref": "#/$defs/Vpc"
              },
              {
                "description": "Details of an Amazon VPC which has network connectivity to the Apache Kafka cluster."
              }
            ]
          }
        },
        "description": "The details of the Apache Kafka cluster to which the connector is connected."
      },
      "Vpc": {
        "type": "object",
        "required": [
          "subnets"
        ],
        "properties": {
          "securityGroups": {
            "allOf": [
              {
                "$ref": "#/$defs/__listOf__string"
              },
              {
                "description": "The security groups for the connector."
              }
            ]
          },
          "subnets": {
            "allOf": [
              {
                "$ref": "#/$defs/__listOf__string"
              },
              {
                "description": "The subnets for the connector."
              }
            ]
          }
        },
        "description": "Information about the VPC in which the connector resides."
      },
      "__listOf__string": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/__string"
        }
      },
      "KafkaClusterClientAuthenticationType": {
        "type": "string",
        "enum": [
          "NONE",
          "IAM"
        ]
      },
      "KafkaClusterEncryptionInTransitType": {
        "type": "string",
        "enum": [
          "PLAINTEXT",
          "TLS"
        ]
      },
      "WorkerLogDelivery": {
        "type": "object",
        "properties": {
          "cloudWatchLogs": {
            "allOf": [
              {
                "$ref": "#/$defs/CloudWatchLogsLogDelivery"
              },
              {
                "description": "Details about delivering logs to Amazon CloudWatch Logs."
              }
            ]
          },
          "firehose": {
            "allOf": [
              {
                "$ref": "#/$defs/FirehoseLogDelivery"
              },
              {
                "description": "Details about delivering logs to Amazon Kinesis Data Firehose."
              }
            ]
          },
          "s3": {
            "allOf": [
              {
                "$ref": "#/$defs/S3LogDelivery"
              },
              {
                "description": "Details about delivering logs to Amazon S3."
              }
            ]
          }
        },
        "description": "Workers can send worker logs to different destination types. This configuration specifies the details of these destinations."
      },
      "CloudWatchLogsLogDelivery": {
        "type": "object",
        "required": [
          "enabled"
        ],
        "properties": {
          "enabled": {
            "allOf": [
              {
                "$ref": "#/$defs/__boolean"
              },
              {
                "description": "Whether log delivery to Amazon CloudWatch Logs is enabled."
              }
            ]
          },
          "logGroup": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "The name of the CloudWatch log group that is the destination for log delivery."
              }
            ]
          }
        },
        "description": "The settings for delivering connector logs to Amazon CloudWatch Logs."
      },
      "__boolean": {
        "type": "boolean"
      },
      "FirehoseLogDelivery": {
        "type": "object",
        "required": [
          "enabled"
        ],
        "properties": {
          "deliveryStream": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "The name of the Kinesis Data Firehose delivery stream that is the destination for log delivery."
              }
            ]
          },
          "enabled": {
            "allOf": [
              {
                "$ref": "#/$defs/__boolean"
              },
              {
                "description": "Specifies whether connector logs get delivered to Amazon Kinesis Data Firehose."
              }
            ]
          }
        },
        "description": "The settings for delivering logs to Amazon Kinesis Data Firehose."
      },
      "S3LogDelivery": {
        "type": "object",
        "required": [
          "enabled"
        ],
        "properties": {
          "bucket": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "The name of the S3 bucket that is the destination for log delivery."
              }
            ]
          },
          "enabled": {
            "allOf": [
              {
                "$ref": "#/$defs/__boolean"
              },
              {
                "description": "Specifies whether connector logs get sent to the specified Amazon S3 destination."
              }
            ]
          },
          "prefix": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "The S3 prefix that is the destination for log delivery."
              }
            ]
          }
        },
        "description": "Details about delivering logs to Amazon S3."
      },
      "Plugin": {
        "type": "object",
        "required": [
          "customPlugin"
        ],
        "properties": {
          "customPlugin": {
            "allOf": [
              {
                "$ref": "#/$defs/CustomPlugin"
              },
              {
                "description": "Details about a custom plugin."
              }
            ]
          }
        },
        "description": "A plugin is an AWS resource that contains the code that defines your connector logic. "
      },
      "CustomPlugin": {
        "type": "object",
        "required": [
          "customPluginArn",
          "revision"
        ],
        "properties": {
          "customPluginArn": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the custom plugin."
              }
            ]
          },
          "revision": {
            "allOf": [
              {
                "$ref": "#/$defs/__longMin1"
              },
              {
                "description": "The revision of the custom plugin."
              }
            ]
          }
        },
        "description": "A plugin is an AWS resource that contains the code that defines a connector's logic."
      },
      "__longMin1": {
        "type": "integer",
        "minimum": 1,
        "maximum": 9223372036854776000
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://kafkaconnect.us-east-1.amazonaws.com/v1/connectors"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**connectorArn**",
            "**connectorName**",
            "**connectorState**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "487": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
