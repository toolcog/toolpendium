{
  "name": "DescribeAffectedEntities",
  "description": "<p>Returns a list of entities that have been affected by the specified events, based on the specified filter criteria. Entities can refer to individual customer resources, groups of customer resources, or any other construct, depending on the Amazon Web Service. Events that have impact beyond that of the affected entities, or where the extent of impact is unknown, include at least one entity indicating this.</p> <p>At least one event ARN is required.</p> <note> <ul> <li> <p>This API operation uses pagination. Specify the <code>nextToken</code> parameter in the next request to return more results.</p> </li> <li> <p>This operation supports resource-level permissions. You can use this operation to allow or deny access to specific Health events. For more information, see <a href=\"https://docs.aws.amazon.com/health/latest/ug/security_iam_id-based-policy-examples.html#resource-action-based-conditions\">Resource- and action-based conditions</a> in the <i>Health User Guide</i>.</p> </li> </ul> </note>",
  "parameters": {
    "type": "object",
    "properties": {
      "maxResults": {
        "type": "string",
        "description": "Pagination limit"
      },
      "nextToken": {
        "type": "string",
        "description": "Pagination token"
      },
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AWSHealth_20160804.DescribeAffectedEntities"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/DescribeAffectedEntitiesRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "DescribeAffectedEntitiesRequest": {
        "type": "object",
        "required": [
          "filter"
        ],
        "title": "DescribeAffectedEntitiesRequest",
        "properties": {
          "filter": {
            "allOf": [
              {
                "$ref": "#/$defs/EntityFilter"
              },
              {
                "description": "Values to narrow the results returned. At least one event ARN is required."
              }
            ]
          },
          "locale": {
            "allOf": [
              {
                "$ref": "#/$defs/locale"
              },
              {
                "description": "The locale (language) to return information in. English (en) is the default and the only supported value at this time."
              }
            ]
          },
          "nextToken": {
            "allOf": [
              {
                "$ref": "#/$defs/nextToken"
              },
              {
                "description": "If the results of a search are large, only a portion of the results are returned, and a <code>nextToken</code> pagination token is returned in the response. To retrieve the next batch of results, reissue the search request and include the returned token. When all results have been returned, the response does not contain a pagination token value."
              }
            ]
          },
          "maxResults": {
            "allOf": [
              {
                "$ref": "#/$defs/maxResults"
              },
              {
                "description": "The maximum number of items to return in one batch, between 10 and 100, inclusive."
              }
            ]
          }
        }
      },
      "EntityFilter": {
        "type": "object",
        "required": [
          "eventArns"
        ],
        "properties": {
          "eventArns": {
            "allOf": [
              {
                "$ref": "#/$defs/eventArnList"
              },
              {
                "description": "A list of event ARNs (unique identifiers). For example: <code>\"arn:aws:health:us-east-1::event/EC2/EC2_INSTANCE_RETIREMENT_SCHEDULED/EC2_INSTANCE_RETIREMENT_SCHEDULED_ABC123-CDE456\", \"arn:aws:health:us-west-1::event/EBS/AWS_EBS_LOST_VOLUME/AWS_EBS_LOST_VOLUME_CHI789_JKL101\"</code> "
              }
            ]
          },
          "entityArns": {
            "allOf": [
              {
                "$ref": "#/$defs/entityArnList"
              },
              {
                "description": "A list of entity ARNs (unique identifiers)."
              }
            ]
          },
          "entityValues": {
            "allOf": [
              {
                "$ref": "#/$defs/entityValueList"
              },
              {
                "description": "A list of IDs for affected entities."
              }
            ]
          },
          "lastUpdatedTimes": {
            "allOf": [
              {
                "$ref": "#/$defs/dateTimeRangeList"
              },
              {
                "description": "A list of the most recent dates and times that the entity was updated."
              }
            ]
          },
          "tags": {
            "allOf": [
              {
                "$ref": "#/$defs/tagFilter"
              },
              {
                "description": "<p>A map of entity tags attached to the affected entity.</p> <note> <p>Currently, the <code>tags</code> property isn't supported.</p> </note>"
              }
            ]
          },
          "statusCodes": {
            "allOf": [
              {
                "$ref": "#/$defs/entityStatusCodeList"
              },
              {
                "description": "A list of entity status codes (<code>IMPAIRED</code>, <code>UNIMPAIRED</code>, or <code>UNKNOWN</code>)."
              }
            ]
          }
        },
        "description": "The values to use to filter results from the <a href=\"https://docs.aws.amazon.com/health/latest/APIReference/API_DescribeAffectedEntities.html\">DescribeAffectedEntities</a> operation."
      },
      "eventArnList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/eventArn"
        },
        "minItems": 1,
        "maxItems": 10
      },
      "eventArn": {
        "type": "string",
        "pattern": "arn:aws(-[a-z]+(-[a-z]+)?)?:health:[^:]*:[^:]*:event(?:/[\\w-]+){3}",
        "maxLength": 1600
      },
      "entityArnList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/entityArn"
        },
        "minItems": 1,
        "maxItems": 99
      },
      "entityArn": {
        "type": "string",
        "pattern": ".{0,1600}",
        "maxLength": 1600
      },
      "entityValueList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/entityValue"
        },
        "minItems": 1,
        "maxItems": 99
      },
      "entityValue": {
        "type": "string",
        "pattern": ".{0,1224}",
        "maxLength": 1224
      },
      "dateTimeRangeList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/DateTimeRange"
        },
        "minItems": 1,
        "maxItems": 10
      },
      "DateTimeRange": {
        "type": "object",
        "properties": {
          "from": {
            "allOf": [
              {
                "$ref": "#/$defs/timestamp"
              },
              {
                "description": "The starting date and time of a time range."
              }
            ]
          },
          "to": {
            "allOf": [
              {
                "$ref": "#/$defs/timestamp"
              },
              {
                "description": "The ending date and time of a time range."
              }
            ]
          }
        },
        "description": "A range of dates and times that is used by the <a href=\"https://docs.aws.amazon.com/health/latest/APIReference/API_EventFilter.html\">EventFilter</a> and <a href=\"https://docs.aws.amazon.com/health/latest/APIReference/API_EntityFilter.html\">EntityFilter</a> objects. If <code>from</code> is set and <code>to</code> is set: match items where the timestamp (<code>startTime</code>, <code>endTime</code>, or <code>lastUpdatedTime</code>) is between <code>from</code> and <code>to</code> inclusive. If <code>from</code> is set and <code>to</code> is not set: match items where the timestamp value is equal to or after <code>from</code>. If <code>from</code> is not set and <code>to</code> is set: match items where the timestamp value is equal to or before <code>to</code>."
      },
      "timestamp": {
        "type": "string",
        "format": "date-time"
      },
      "tagFilter": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/tagSet"
        },
        "maxItems": 50
      },
      "tagSet": {
        "type": "object",
        "maxProperties": 50,
        "additionalProperties": {
          "$ref": "#/$defs/tagValue"
        }
      },
      "tagValue": {
        "type": "string",
        "pattern": ".{0,255}",
        "maxLength": 255
      },
      "entityStatusCodeList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/entityStatusCode"
        },
        "minItems": 1,
        "maxItems": 3
      },
      "entityStatusCode": {
        "type": "string",
        "enum": [
          "IMPAIRED",
          "UNIMPAIRED",
          "UNKNOWN"
        ]
      },
      "locale": {
        "type": "string",
        "pattern": ".{2,256}",
        "minLength": 2,
        "maxLength": 256
      },
      "nextToken": {
        "type": "string",
        "pattern": "[a-zA-Z0-9=/+_.-]{4,10000}",
        "minLength": 4,
        "maxLength": 10000
      },
      "maxResults": {
        "type": "integer",
        "minimum": 10,
        "maximum": 100
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://health.us-east-1.amazonaws.com/#X-Amz-Target=AWSHealth_20160804.DescribeAffectedEntities{?maxResults,nextToken}"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**entities**",
            "**nextToken**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
