{
  "name": "DescribeEventsForOrganization",
  "description": "<p>Returns information about events across your organization in Organizations. You can use the<code>filters</code> parameter to specify the events that you want to return. Events are returned in a summary form and don't include the affected accounts, detailed description, any additional metadata that depends on the event type, or any affected resources. To retrieve that information, use the following operations:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/health/latest/APIReference/API_DescribeAffectedAccountsForOrganization.html\">DescribeAffectedAccountsForOrganization</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/health/latest/APIReference/API_DescribeEventDetailsForOrganization.html\">DescribeEventDetailsForOrganization</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/health/latest/APIReference/API_DescribeAffectedEntitiesForOrganization.html\">DescribeAffectedEntitiesForOrganization</a> </p> </li> </ul> <p>If you don't specify a <code>filter</code>, the <code>DescribeEventsForOrganizations</code> returns all events across your organization. Results are sorted by <code>lastModifiedTime</code>, starting with the most recent event. </p> <p>For more information about the different types of Health events, see <a href=\"https://docs.aws.amazon.com/health/latest/APIReference/API_Event.html\">Event</a>.</p> <p>Before you can call this operation, you must first enable Health to work with Organizations. To do this, call the <a href=\"https://docs.aws.amazon.com/health/latest/APIReference/API_EnableHealthServiceAccessForOrganization.html\">EnableHealthServiceAccessForOrganization</a> operation from your organization's management account.</p> <note> <p>This API operation uses pagination. Specify the <code>nextToken</code> parameter in the next request to return more results.</p> </note>",
  "parameters": {
    "type": "object",
    "properties": {
      "maxResults": {
        "type": "string",
        "description": "Pagination limit"
      },
      "nextToken": {
        "type": "string",
        "description": "Pagination token"
      },
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AWSHealth_20160804.DescribeEventsForOrganization"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/DescribeEventsForOrganizationRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "DescribeEventsForOrganizationRequest": {
        "type": "object",
        "title": "DescribeEventsForOrganizationRequest",
        "properties": {
          "filter": {
            "allOf": [
              {
                "$ref": "#/$defs/OrganizationEventFilter"
              },
              {
                "description": "Values to narrow the results returned."
              }
            ]
          },
          "nextToken": {
            "allOf": [
              {
                "$ref": "#/$defs/nextToken"
              },
              {
                "description": "If the results of a search are large, only a portion of the results are returned, and a <code>nextToken</code> pagination token is returned in the response. To retrieve the next batch of results, reissue the search request and include the returned token. When all results have been returned, the response does not contain a pagination token value."
              }
            ]
          },
          "maxResults": {
            "allOf": [
              {
                "$ref": "#/$defs/maxResultsLowerRange"
              },
              {
                "description": "The maximum number of items to return in one batch, between 10 and 100, inclusive."
              }
            ]
          },
          "locale": {
            "allOf": [
              {
                "$ref": "#/$defs/locale"
              },
              {
                "description": "The locale (language) to return information in. English (en) is the default and the only supported value at this time."
              }
            ]
          }
        }
      },
      "OrganizationEventFilter": {
        "type": "object",
        "properties": {
          "eventTypeCodes": {
            "allOf": [
              {
                "$ref": "#/$defs/eventTypeList"
              },
              {
                "description": "A list of unique identifiers for event types. For example, <code>\"AWS_EC2_SYSTEM_MAINTENANCE_EVENT\",\"AWS_RDS_MAINTENANCE_SCHEDULED\".</code> "
              }
            ]
          },
          "awsAccountIds": {
            "allOf": [
              {
                "$ref": "#/$defs/awsAccountIdsList"
              },
              {
                "description": "A list of 12-digit Amazon Web Services account numbers that contains the affected entities."
              }
            ]
          },
          "services": {
            "allOf": [
              {
                "$ref": "#/$defs/serviceList"
              },
              {
                "description": "The Amazon Web Services associated with the event. For example, <code>EC2</code>, <code>RDS</code>."
              }
            ]
          },
          "regions": {
            "allOf": [
              {
                "$ref": "#/$defs/regionList"
              },
              {
                "description": "A list of Amazon Web Services Regions."
              }
            ]
          },
          "startTime": {
            "$ref": "#/$defs/DateTimeRange"
          },
          "endTime": {
            "$ref": "#/$defs/DateTimeRange"
          },
          "lastUpdatedTime": {
            "$ref": "#/$defs/DateTimeRange"
          },
          "entityArns": {
            "allOf": [
              {
                "$ref": "#/$defs/entityArnList"
              },
              {
                "description": "A list of entity ARNs (unique identifiers)."
              }
            ]
          },
          "entityValues": {
            "allOf": [
              {
                "$ref": "#/$defs/entityValueList"
              },
              {
                "description": "A list of entity identifiers, such as EC2 instance IDs (i-34ab692e) or EBS volumes (vol-426ab23e)."
              }
            ]
          },
          "eventTypeCategories": {
            "allOf": [
              {
                "$ref": "#/$defs/eventTypeCategoryList"
              },
              {
                "description": "A list of event type category codes. Possible values are <code>issue</code>, <code>accountNotification</code>, or <code>scheduledChange</code>. Currently, the <code>investigation</code> value isn't supported at this time."
              }
            ]
          },
          "eventStatusCodes": {
            "allOf": [
              {
                "$ref": "#/$defs/eventStatusCodeList"
              },
              {
                "description": "A list of event status codes."
              }
            ]
          }
        },
        "description": "The values to filter results from the <a href=\"https://docs.aws.amazon.com/health/latest/APIReference/API_DescribeEventsForOrganization.html\">DescribeEventsForOrganization</a> operation."
      },
      "eventTypeList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/eventType"
        },
        "minItems": 1,
        "maxItems": 10
      },
      "eventType": {
        "type": "string",
        "pattern": "[^:/]{3,100}",
        "minLength": 3,
        "maxLength": 100
      },
      "awsAccountIdsList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/accountId"
        },
        "minItems": 1,
        "maxItems": 50
      },
      "accountId": {
        "type": "string",
        "pattern": "^\\S+$",
        "maxLength": 12
      },
      "serviceList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/service"
        },
        "minItems": 1,
        "maxItems": 10
      },
      "service": {
        "type": "string",
        "pattern": "[^:/]{2,30}",
        "minLength": 2,
        "maxLength": 30
      },
      "regionList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/region"
        },
        "minItems": 1,
        "maxItems": 10
      },
      "region": {
        "type": "string",
        "pattern": "[^:/]{2,25}",
        "minLength": 2,
        "maxLength": 25
      },
      "DateTimeRange": {
        "type": "object",
        "properties": {
          "from": {
            "allOf": [
              {
                "$ref": "#/$defs/timestamp"
              },
              {
                "description": "The starting date and time of a time range."
              }
            ]
          },
          "to": {
            "allOf": [
              {
                "$ref": "#/$defs/timestamp"
              },
              {
                "description": "The ending date and time of a time range."
              }
            ]
          }
        },
        "description": "A range of dates and times that is used by the <a href=\"https://docs.aws.amazon.com/health/latest/APIReference/API_EventFilter.html\">EventFilter</a> and <a href=\"https://docs.aws.amazon.com/health/latest/APIReference/API_EntityFilter.html\">EntityFilter</a> objects. If <code>from</code> is set and <code>to</code> is set: match items where the timestamp (<code>startTime</code>, <code>endTime</code>, or <code>lastUpdatedTime</code>) is between <code>from</code> and <code>to</code> inclusive. If <code>from</code> is set and <code>to</code> is not set: match items where the timestamp value is equal to or after <code>from</code>. If <code>from</code> is not set and <code>to</code> is set: match items where the timestamp value is equal to or before <code>to</code>."
      },
      "timestamp": {
        "type": "string",
        "format": "date-time"
      },
      "entityArnList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/entityArn"
        },
        "minItems": 1,
        "maxItems": 99
      },
      "entityArn": {
        "type": "string",
        "pattern": ".{0,1600}",
        "maxLength": 1600
      },
      "entityValueList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/entityValue"
        },
        "minItems": 1,
        "maxItems": 99
      },
      "entityValue": {
        "type": "string",
        "pattern": ".{0,1224}",
        "maxLength": 1224
      },
      "eventTypeCategoryList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/eventTypeCategory"
        },
        "minItems": 1,
        "maxItems": 10
      },
      "eventTypeCategory": {
        "type": "string",
        "enum": [
          "issue",
          "accountNotification",
          "scheduledChange",
          "investigation"
        ],
        "minLength": 3,
        "maxLength": 255
      },
      "eventStatusCodeList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/eventStatusCode"
        },
        "minItems": 1,
        "maxItems": 6
      },
      "eventStatusCode": {
        "type": "string",
        "enum": [
          "open",
          "closed",
          "upcoming"
        ]
      },
      "nextToken": {
        "type": "string",
        "pattern": "[a-zA-Z0-9=/+_.-]{4,10000}",
        "minLength": 4,
        "maxLength": 10000
      },
      "maxResultsLowerRange": {
        "type": "integer",
        "minimum": 1,
        "maximum": 100
      },
      "locale": {
        "type": "string",
        "pattern": ".{2,256}",
        "minLength": 2,
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://health.us-east-1.amazonaws.com/#X-Amz-Target=AWSHealth_20160804.DescribeEventsForOrganization{?maxResults,nextToken}"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**events**",
            "**nextToken**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
