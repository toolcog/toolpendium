{
  "name": "UpdateDistributionConfiguration",
  "description": "Updates a new distribution configuration. Distribution configurations define and configure the outputs of your pipeline.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "distributionConfigurationArn",
          "distributions",
          "clientToken"
        ],
        "properties": {
          "distributionConfigurationArn": {
            "description": "The Amazon Resource Name (ARN) of the distribution configuration that you want to update.",
            "type": "string",
            "pattern": "^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):distribution-configuration/[a-z0-9-_]+$"
          },
          "description": {
            "description": "The description of the distribution configuration.",
            "type": "string",
            "minLength": 1,
            "maxLength": 1024
          },
          "distributions": {
            "description": "The distributions of the distribution configuration.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/Distribution"
            }
          },
          "clientToken": {
            "description": "The idempotency token of the distribution configuration.",
            "type": "string",
            "minLength": 1,
            "maxLength": 36
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "Distribution": {
        "type": "object",
        "required": [
          "region"
        ],
        "properties": {
          "region": {
            "allOf": [
              {
                "$ref": "#/$defs/NonEmptyString"
              },
              {
                "description": "The target Region."
              }
            ]
          },
          "amiDistributionConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/AmiDistributionConfiguration"
              },
              {
                "description": "The specific AMI settings; for example, launch permissions or AMI tags."
              }
            ]
          },
          "containerDistributionConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/ContainerDistributionConfiguration"
              },
              {
                "description": "Container distribution settings for encryption, licensing, and sharing in a specific Region."
              }
            ]
          },
          "licenseConfigurationArns": {
            "allOf": [
              {
                "$ref": "#/$defs/LicenseConfigurationArnList"
              },
              {
                "description": "The License Manager Configuration to associate with the AMI in the specified Region."
              }
            ]
          },
          "launchTemplateConfigurations": {
            "allOf": [
              {
                "$ref": "#/$defs/LaunchTemplateConfigurationList"
              },
              {
                "description": "A group of launchTemplateConfiguration settings that apply to image distribution for specified accounts."
              }
            ]
          },
          "s3ExportConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/S3ExportConfiguration"
              },
              {
                "description": "Configure export settings to deliver disk images created from your image build, using a file format that is compatible with your VMs in that Region."
              }
            ]
          },
          "fastLaunchConfigurations": {
            "allOf": [
              {
                "$ref": "#/$defs/FastLaunchConfigurationList"
              },
              {
                "description": "The Windows faster-launching configurations to use for AMI distribution."
              }
            ]
          }
        },
        "description": "Defines the settings for a specific Region."
      },
      "NonEmptyString": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1024
      },
      "AmiDistributionConfiguration": {
        "type": "object",
        "properties": {
          "name": {
            "allOf": [
              {
                "$ref": "#/$defs/AmiNameString"
              },
              {
                "description": "The name of the output AMI."
              }
            ]
          },
          "description": {
            "allOf": [
              {
                "$ref": "#/$defs/NonEmptyString"
              },
              {
                "description": "The description of the AMI distribution configuration. Minimum and maximum length are in characters."
              }
            ]
          },
          "targetAccountIds": {
            "allOf": [
              {
                "$ref": "#/$defs/AccountList"
              },
              {
                "description": "The ID of an account to which you want to distribute an image."
              }
            ]
          },
          "amiTags": {
            "allOf": [
              {
                "$ref": "#/$defs/TagMap"
              },
              {
                "description": "The tags to apply to AMIs distributed to this Region."
              }
            ]
          },
          "kmsKeyId": {
            "allOf": [
              {
                "$ref": "#/$defs/NonEmptyString"
              },
              {
                "description": "The KMS key identifier used to encrypt the distributed image."
              }
            ]
          },
          "launchPermission": {
            "allOf": [
              {
                "$ref": "#/$defs/LaunchPermissionConfiguration"
              },
              {
                "description": "Launch permissions can be used to configure which Amazon Web Services accounts can use the AMI to launch instances."
              }
            ]
          }
        },
        "description": "Define and configure the output AMIs of the pipeline."
      },
      "AmiNameString": {
        "type": "string",
        "pattern": "^[-_A-Za-z0-9{][-_A-Za-z0-9\\s:{}\\.]+[-_A-Za-z0-9}]$",
        "minLength": 1,
        "maxLength": 127
      },
      "AccountList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/AccountId"
        },
        "minItems": 1,
        "maxItems": 1536
      },
      "AccountId": {
        "type": "string",
        "pattern": "^[0-9]{12}$"
      },
      "TagMap": {
        "type": "object",
        "minProperties": 1,
        "maxProperties": 50,
        "additionalProperties": {
          "$ref": "#/$defs/TagValue"
        }
      },
      "TagValue": {
        "type": "string",
        "maxLength": 256
      },
      "LaunchPermissionConfiguration": {
        "type": "object",
        "properties": {
          "userIds": {
            "allOf": [
              {
                "$ref": "#/$defs/AccountList"
              },
              {
                "description": "The Amazon Web Services account ID."
              }
            ]
          },
          "userGroups": {
            "allOf": [
              {
                "$ref": "#/$defs/StringList"
              },
              {
                "description": "The name of the group."
              }
            ]
          },
          "organizationArns": {
            "allOf": [
              {
                "$ref": "#/$defs/OrganizationArnList"
              },
              {
                "description": "The ARN for an Amazon Web Services Organization that you want to share your AMI with. For more information, see <a href=\"https://docs.aws.amazon.com/organizations/latest/userguide/orgs_introduction.html\">What is Organizations?</a>."
              }
            ]
          },
          "organizationalUnitArns": {
            "allOf": [
              {
                "$ref": "#/$defs/OrganizationalUnitArnList"
              },
              {
                "description": "The ARN for an Organizations organizational unit (OU) that you want to share your AMI with. For more information about key concepts for Organizations, see <a href=\"https://docs.aws.amazon.com/organizations/latest/userguide/orgs_getting-started_concepts.html\">Organizations terminology and concepts</a>."
              }
            ]
          }
        },
        "description": "Describes the configuration for a launch permission. The launch permission modification request is sent to the <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyImageAttribute.html\">Amazon EC2 ModifyImageAttribute</a> API on behalf of the user for each Region they have selected to distribute the AMI. To make an AMI public, set the launch permission authorized accounts to <code>all</code>. See the examples for making an AMI public at <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyImageAttribute.html\">Amazon EC2 ModifyImageAttribute</a>."
      },
      "StringList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/NonEmptyString"
        }
      },
      "OrganizationArnList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/OrganizationArn"
        },
        "minItems": 1,
        "maxItems": 25
      },
      "OrganizationArn": {
        "type": "string",
        "pattern": "^arn:aws[^:]*:organizations::[0-9]{12}:organization/o-[a-z0-9]{10,32}$"
      },
      "OrganizationalUnitArnList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/OrganizationalUnitArn"
        },
        "minItems": 1,
        "maxItems": 25
      },
      "OrganizationalUnitArn": {
        "type": "string",
        "pattern": "^arn:aws[^:]*:organizations::[0-9]{12}:ou/o-[a-z0-9]{10,32}/ou-[0-9a-z]{4,32}-[0-9a-z]{8,32}"
      },
      "ContainerDistributionConfiguration": {
        "type": "object",
        "required": [
          "targetRepository"
        ],
        "properties": {
          "description": {
            "allOf": [
              {
                "$ref": "#/$defs/NonEmptyString"
              },
              {
                "description": "The description of the container distribution configuration."
              }
            ]
          },
          "containerTags": {
            "allOf": [
              {
                "$ref": "#/$defs/StringList"
              },
              {
                "description": "Tags that are attached to the container distribution configuration."
              }
            ]
          },
          "targetRepository": {
            "allOf": [
              {
                "$ref": "#/$defs/TargetContainerRepository"
              },
              {
                "description": "The destination repository for the container distribution configuration."
              }
            ]
          }
        },
        "description": "Container distribution settings for encryption, licensing, and sharing in a specific Region."
      },
      "TargetContainerRepository": {
        "type": "object",
        "required": [
          "service",
          "repositoryName"
        ],
        "properties": {
          "service": {
            "allOf": [
              {
                "$ref": "#/$defs/ContainerRepositoryService"
              },
              {
                "description": "Specifies the service in which this image was registered."
              }
            ]
          },
          "repositoryName": {
            "allOf": [
              {
                "$ref": "#/$defs/NonEmptyString"
              },
              {
                "description": "The name of the container repository where the output container image is stored. This name is prefixed by the repository location."
              }
            ]
          }
        },
        "description": "The container repository where the output container image is stored."
      },
      "ContainerRepositoryService": {
        "type": "string",
        "enum": [
          "ECR"
        ]
      },
      "LicenseConfigurationArnList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/LicenseConfigurationArn"
        },
        "minItems": 1,
        "maxItems": 50
      },
      "LicenseConfigurationArn": {
        "type": "string",
        "pattern": "^arn:aws[^:]*:license-manager:[^:]+:[0-9]{12}:license-configuration:lic-[a-z0-9-_]{32}$"
      },
      "LaunchTemplateConfigurationList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/LaunchTemplateConfiguration"
        },
        "minItems": 1,
        "maxItems": 100
      },
      "LaunchTemplateConfiguration": {
        "type": "object",
        "required": [
          "launchTemplateId"
        ],
        "properties": {
          "launchTemplateId": {
            "allOf": [
              {
                "$ref": "#/$defs/LaunchTemplateId"
              },
              {
                "description": "Identifies the Amazon EC2 launch template to use."
              }
            ]
          },
          "accountId": {
            "allOf": [
              {
                "$ref": "#/$defs/AccountId"
              },
              {
                "description": "The account ID that this configuration applies to."
              }
            ]
          },
          "setDefaultVersion": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Set the specified Amazon EC2 launch template as the default launch template for the specified account."
              }
            ]
          }
        },
        "description": "Identifies an Amazon EC2 launch template to use for a specific account."
      },
      "LaunchTemplateId": {
        "type": "string",
        "pattern": "^lt-[a-z0-9-_]{17}$"
      },
      "Boolean": {
        "type": "boolean"
      },
      "S3ExportConfiguration": {
        "type": "object",
        "required": [
          "roleName",
          "diskImageFormat",
          "s3Bucket"
        ],
        "properties": {
          "roleName": {
            "allOf": [
              {
                "$ref": "#/$defs/NonEmptyString"
              },
              {
                "description": "The name of the role that grants VM Import/Export permission to export images to your S3 bucket."
              }
            ]
          },
          "diskImageFormat": {
            "allOf": [
              {
                "$ref": "#/$defs/DiskImageFormat"
              },
              {
                "description": "<p>Export the updated image to one of the following supported disk image formats:</p> <ul> <li> <p> <b>Virtual Hard Disk (VHD)</b> – Compatible with Citrix Xen and Microsoft Hyper-V virtualization products.</p> </li> <li> <p> <b>Stream-optimized ESX Virtual Machine Disk (VMDK)</b> – Compatible with VMware ESX and VMware vSphere versions 4, 5, and 6.</p> </li> <li> <p> <b>Raw</b> – Raw format.</p> </li> </ul>"
              }
            ]
          },
          "s3Bucket": {
            "allOf": [
              {
                "$ref": "#/$defs/NonEmptyString"
              },
              {
                "description": "The S3 bucket in which to store the output disk images for your VM."
              }
            ]
          },
          "s3Prefix": {
            "allOf": [
              {
                "$ref": "#/$defs/NonEmptyString"
              },
              {
                "description": "The Amazon S3 path for the bucket where the output disk images for your VM are stored."
              }
            ]
          }
        },
        "description": "Properties that configure export from your build instance to a compatible file format for your VM."
      },
      "DiskImageFormat": {
        "type": "string",
        "enum": [
          "VMDK",
          "RAW",
          "VHD"
        ]
      },
      "FastLaunchConfigurationList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/FastLaunchConfiguration"
        },
        "minItems": 1,
        "maxItems": 1000
      },
      "FastLaunchConfiguration": {
        "type": "object",
        "required": [
          "enabled"
        ],
        "properties": {
          "enabled": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "A Boolean that represents the current state of faster launching for the Windows AMI. Set to <code>true</code> to start using Windows faster launching, or <code>false</code> to stop using it."
              }
            ]
          },
          "snapshotConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/FastLaunchSnapshotConfiguration"
              },
              {
                "description": "Configuration settings for managing the number of snapshots that are created from pre-provisioned instances for the Windows AMI when faster launching is enabled."
              }
            ]
          },
          "maxParallelLaunches": {
            "allOf": [
              {
                "$ref": "#/$defs/MaxParallelLaunches"
              },
              {
                "description": "The maximum number of parallel instances that are launched for creating resources."
              }
            ]
          },
          "launchTemplate": {
            "allOf": [
              {
                "$ref": "#/$defs/FastLaunchLaunchTemplateSpecification"
              },
              {
                "description": "The launch template that the fast-launch enabled Windows AMI uses when it launches Windows instances to create pre-provisioned snapshots."
              }
            ]
          },
          "accountId": {
            "allOf": [
              {
                "$ref": "#/$defs/AccountId"
              },
              {
                "description": "The owner account ID for the fast-launch enabled Windows AMI."
              }
            ]
          }
        },
        "description": "Define and configure faster launching for output Windows AMIs."
      },
      "FastLaunchSnapshotConfiguration": {
        "type": "object",
        "properties": {
          "targetResourceCount": {
            "allOf": [
              {
                "$ref": "#/$defs/TargetResourceCount"
              },
              {
                "description": "The number of pre-provisioned snapshots to keep on hand for a fast-launch enabled Windows AMI."
              }
            ]
          }
        },
        "description": "Configuration settings for creating and managing pre-provisioned snapshots for a fast-launch enabled Windows AMI."
      },
      "TargetResourceCount": {
        "type": "integer",
        "minimum": 1,
        "maximum": 10000
      },
      "MaxParallelLaunches": {
        "type": "integer",
        "minimum": 1,
        "maximum": 10000
      },
      "FastLaunchLaunchTemplateSpecification": {
        "type": "object",
        "properties": {
          "launchTemplateId": {
            "allOf": [
              {
                "$ref": "#/$defs/LaunchTemplateId"
              },
              {
                "description": "The ID of the launch template to use for faster launching for a Windows AMI."
              }
            ]
          },
          "launchTemplateName": {
            "allOf": [
              {
                "$ref": "#/$defs/NonEmptyString"
              },
              {
                "description": "The name of the launch template to use for faster launching for a Windows AMI."
              }
            ]
          },
          "launchTemplateVersion": {
            "allOf": [
              {
                "$ref": "#/$defs/NonEmptyString"
              },
              {
                "description": "The version of the launch template to use for faster launching for a Windows AMI."
              }
            ]
          }
        },
        "description": "<p>Identifies the launch template that the associated Windows AMI uses for launching an instance when faster launching is enabled.</p> <note> <p>You can specify either the <code>launchTemplateName</code> or the <code>launchTemplateId</code>, but not both.</p> </note>"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "http://imagebuilder.us-east-1.amazonaws.com/UpdateDistributionConfiguration"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**requestId**",
            "**clientToken**",
            "**distributionConfigurationArn**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "487": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "488": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
