{
  "name": "CreateDataset",
  "description": "Creates a dataset to upload training or test data for a model associated with a flywheel. For more information about datasets, see <a href=\"https://docs.aws.amazon.com/comprehend/latest/dg/flywheels-about.html\"> Flywheel overview</a> in the <i>Amazon Comprehend Developer Guide</i>.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "Comprehend_20171127.CreateDataset"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/CreateDatasetRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "CreateDatasetRequest": {
        "type": "object",
        "required": [
          "FlywheelArn",
          "DatasetName",
          "InputDataConfig"
        ],
        "title": "CreateDatasetRequest",
        "properties": {
          "FlywheelArn": {
            "allOf": [
              {
                "$ref": "#/$defs/ComprehendFlywheelArn"
              },
              {
                "description": "The Amazon Resource Number (ARN) of the flywheel of the flywheel to receive the data."
              }
            ]
          },
          "DatasetName": {
            "allOf": [
              {
                "$ref": "#/$defs/ComprehendArnName"
              },
              {
                "description": "Name of the dataset."
              }
            ]
          },
          "DatasetType": {
            "allOf": [
              {
                "$ref": "#/$defs/DatasetType"
              },
              {
                "description": "The dataset type. You can specify that the data in a dataset is for training the model or for testing the model."
              }
            ]
          },
          "Description": {
            "allOf": [
              {
                "$ref": "#/$defs/Description"
              },
              {
                "description": "Description of the dataset."
              }
            ]
          },
          "InputDataConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/DatasetInputDataConfig"
              },
              {
                "description": "Information about the input data configuration. The type of input data varies based on the format of the input and whether the data is for a classifier model or an entity recognition model."
              }
            ]
          },
          "ClientRequestToken": {
            "allOf": [
              {
                "$ref": "#/$defs/ClientRequestTokenString"
              },
              {
                "description": "A unique identifier for the request. If you don't set the client request token, Amazon Comprehend generates one."
              }
            ]
          },
          "Tags": {
            "allOf": [
              {
                "$ref": "#/$defs/TagList"
              },
              {
                "description": "Tags for the dataset."
              }
            ]
          }
        }
      },
      "ComprehendFlywheelArn": {
        "type": "string",
        "pattern": "arn:aws(-[^:]+)?:comprehend:[a-zA-Z0-9-]*:[0-9]{12}:flywheel/[a-zA-Z0-9](-*[a-zA-Z0-9])*",
        "maxLength": 256
      },
      "ComprehendArnName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*$",
        "maxLength": 63
      },
      "DatasetType": {
        "type": "string",
        "enum": [
          "TRAIN",
          "TEST"
        ]
      },
      "Description": {
        "type": "string",
        "pattern": "^([a-zA-Z0-9_])[\\\\a-zA-Z0-9_@#%*+=:?./!\\s-]*$",
        "maxLength": 2048
      },
      "DatasetInputDataConfig": {
        "type": "object",
        "properties": {
          "AugmentedManifests": {
            "allOf": [
              {
                "$ref": "#/$defs/DatasetAugmentedManifestsList"
              },
              {
                "description": "A list of augmented manifest files that provide training data for your custom model. An augmented manifest file is a labeled dataset that is produced by Amazon SageMaker Ground Truth. "
              }
            ]
          },
          "DataFormat": {
            "allOf": [
              {
                "$ref": "#/$defs/DatasetDataFormat"
              },
              {
                "description": "<p> <code>COMPREHEND_CSV</code>: The data format is a two-column CSV file, where the first column contains labels and the second column contains documents.</p> <p> <code>AUGMENTED_MANIFEST</code>: The data format </p>"
              }
            ]
          },
          "DocumentClassifierInputDataConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/DatasetDocumentClassifierInputDataConfig"
              },
              {
                "description": "<p>The input properties for training a document classifier model. </p> <p>For more information on how the input file is formatted, see <a href=\"https://docs.aws.amazon.com/comprehend/latest/dg/prep-classifier-data.html\">Preparing training data</a> in the Comprehend Developer Guide. </p>"
              }
            ]
          },
          "EntityRecognizerInputDataConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/DatasetEntityRecognizerInputDataConfig"
              },
              {
                "description": "The input properties for training an entity recognizer model."
              }
            ]
          }
        },
        "description": "Specifies the format and location of the input data for the dataset."
      },
      "DatasetAugmentedManifestsList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/DatasetAugmentedManifestsListItem"
        }
      },
      "DatasetAugmentedManifestsListItem": {
        "type": "object",
        "required": [
          "AttributeNames",
          "S3Uri"
        ],
        "properties": {
          "AttributeNames": {
            "allOf": [
              {
                "$ref": "#/$defs/AttributeNamesList"
              },
              {
                "description": "<p>The JSON attribute that contains the annotations for your training documents. The number of attribute names that you specify depends on whether your augmented manifest file is the output of a single labeling job or a chained labeling job.</p> <p>If your file is the output of a single labeling job, specify the LabelAttributeName key that was used when the job was created in Ground Truth.</p> <p>If your file is the output of a chained labeling job, specify the LabelAttributeName key for one or more jobs in the chain. Each LabelAttributeName key provides the annotations from an individual job.</p>"
              }
            ]
          },
          "S3Uri": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Uri"
              },
              {
                "description": "The Amazon S3 location of the augmented manifest file."
              }
            ]
          },
          "AnnotationDataS3Uri": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Uri"
              },
              {
                "description": "The S3 prefix to the annotation files that are referred in the augmented manifest file."
              }
            ]
          },
          "SourceDocumentsS3Uri": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Uri"
              },
              {
                "description": "The S3 prefix to the source files (PDFs) that are referred to in the augmented manifest file."
              }
            ]
          },
          "DocumentType": {
            "allOf": [
              {
                "$ref": "#/$defs/AugmentedManifestsDocumentTypeFormat"
              },
              {
                "description": "<p>The type of augmented manifest. If you don't specify, the default is PlainTextDocument. </p> <p> <code>PLAIN_TEXT_DOCUMENT</code> A document type that represents any unicode text that is encoded in UTF-8.</p>"
              }
            ]
          }
        },
        "description": "An augmented manifest file that provides training data for your custom model. An augmented manifest file is a labeled dataset that is produced by Amazon SageMaker Ground Truth."
      },
      "AttributeNamesList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/AttributeNamesListItem"
        }
      },
      "AttributeNamesListItem": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*",
        "minLength": 1,
        "maxLength": 63
      },
      "S3Uri": {
        "type": "string",
        "pattern": "s3://[a-z0-9][\\.\\-a-z0-9]{1,61}[a-z0-9](/.*)?",
        "maxLength": 1024
      },
      "AugmentedManifestsDocumentTypeFormat": {
        "type": "string",
        "enum": [
          "PLAIN_TEXT_DOCUMENT",
          "SEMI_STRUCTURED_DOCUMENT"
        ]
      },
      "DatasetDataFormat": {
        "type": "string",
        "enum": [
          "COMPREHEND_CSV",
          "AUGMENTED_MANIFEST"
        ]
      },
      "DatasetDocumentClassifierInputDataConfig": {
        "type": "object",
        "required": [
          "S3Uri"
        ],
        "properties": {
          "S3Uri": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Uri"
              },
              {
                "description": "<p>The Amazon S3 URI for the input data. The S3 bucket must be in the same Region as the API endpoint that you are calling. The URI can point to a single input file or it can provide the prefix for a collection of input files.</p> <p>For example, if you use the URI <code>S3://bucketName/prefix</code>, if the prefix is a single file, Amazon Comprehend uses that file as input. If more than one file begins with the prefix, Amazon Comprehend uses all of them as input.</p> <p>This parameter is required if you set <code>DataFormat</code> to <code>COMPREHEND_CSV</code>.</p>"
              }
            ]
          },
          "LabelDelimiter": {
            "allOf": [
              {
                "$ref": "#/$defs/LabelDelimiter"
              },
              {
                "description": "Indicates the delimiter used to separate each label for training a multi-label classifier. The default delimiter between labels is a pipe (|). You can use a different character as a delimiter (if it's an allowed character) by specifying it under Delimiter for labels. If the training documents use a delimiter other than the default or the delimiter you specify, the labels on that line will be combined to make a single unique label, such as LABELLABELLABEL."
              }
            ]
          }
        },
        "description": "<p>Describes the dataset input data configuration for a document classifier model.</p> <p>For more information on how the input file is formatted, see <a href=\"https://docs.aws.amazon.com/comprehend/latest/dg/prep-classifier-data.html\">Preparing training data</a> in the Comprehend Developer Guide. </p>"
      },
      "LabelDelimiter": {
        "type": "string",
        "pattern": "^[ ~!@#$%^*\\-_+=|\\\\:;\\t>?/]$",
        "minLength": 1,
        "maxLength": 1
      },
      "DatasetEntityRecognizerInputDataConfig": {
        "type": "object",
        "required": [
          "Documents"
        ],
        "properties": {
          "Annotations": {
            "allOf": [
              {
                "$ref": "#/$defs/DatasetEntityRecognizerAnnotations"
              },
              {
                "description": "The S3 location of the annotation documents for your custom entity recognizer."
              }
            ]
          },
          "Documents": {
            "allOf": [
              {
                "$ref": "#/$defs/DatasetEntityRecognizerDocuments"
              },
              {
                "description": "The format and location of the training documents for your custom entity recognizer."
              }
            ]
          },
          "EntityList": {
            "allOf": [
              {
                "$ref": "#/$defs/DatasetEntityRecognizerEntityList"
              },
              {
                "description": "The S3 location of the entity list for your custom entity recognizer."
              }
            ]
          }
        },
        "description": "Specifies the format and location of the input data. You must provide either the <code>Annotations</code> parameter or the <code>EntityList</code> parameter."
      },
      "DatasetEntityRecognizerAnnotations": {
        "type": "object",
        "required": [
          "S3Uri"
        ],
        "properties": {
          "S3Uri": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Uri"
              },
              {
                "description": " Specifies the Amazon S3 location where the training documents for an entity recognizer are located. The URI must be in the same Region as the API endpoint that you are calling."
              }
            ]
          }
        },
        "description": "Describes the annotations associated with a entity recognizer."
      },
      "DatasetEntityRecognizerDocuments": {
        "type": "object",
        "required": [
          "S3Uri"
        ],
        "properties": {
          "S3Uri": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Uri"
              },
              {
                "description": " Specifies the Amazon S3 location where the documents for the dataset are located. "
              }
            ]
          },
          "InputFormat": {
            "allOf": [
              {
                "$ref": "#/$defs/InputFormat"
              },
              {
                "description": " Specifies how the text in an input file should be processed. This is optional, and the default is ONE_DOC_PER_LINE. ONE_DOC_PER_FILE - Each file is considered a separate document. Use this option when you are processing large documents, such as newspaper articles or scientific papers. ONE_DOC_PER_LINE - Each line in a file is considered a separate document. Use this option when you are processing many short documents, such as text messages."
              }
            ]
          }
        },
        "description": "Describes the documents submitted with a dataset for an entity recognizer model."
      },
      "InputFormat": {
        "type": "string",
        "enum": [
          "ONE_DOC_PER_FILE",
          "ONE_DOC_PER_LINE"
        ]
      },
      "DatasetEntityRecognizerEntityList": {
        "type": "object",
        "required": [
          "S3Uri"
        ],
        "properties": {
          "S3Uri": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Uri"
              },
              {
                "description": "Specifies the Amazon S3 location where the entity list is located."
              }
            ]
          }
        },
        "description": "<p>Describes the dataset entity list for an entity recognizer model.</p> <p>For more information on how the input file is formatted, see <a href=\"https://docs.aws.amazon.com/comprehend/latest/dg/prep-training-data-cer.html\">Preparing training data</a> in the Comprehend Developer Guide. </p>"
      },
      "ClientRequestTokenString": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9-]+$",
        "minLength": 1,
        "maxLength": 64
      },
      "TagList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Tag"
        }
      },
      "Tag": {
        "type": "object",
        "required": [
          "Key"
        ],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "The initial part of a key-value pair that forms a tag associated with a given resource. For instance, if you want to show which resources are used by which departments, you might use “Department” as the key portion of the pair, with multiple possible values such as “sales,” “legal,” and “administration.” "
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": " The second part of a key-value pair that forms a tag associated with a given resource. For instance, if you want to show which resources are used by which departments, you might use “Department” as the initial (key) portion of the pair, with a value of “sales” to indicate the sales department. "
              }
            ]
          }
        },
        "description": "A key-value pair that adds as a metadata to a resource used by Amazon Comprehend. For example, a tag with the key-value pair ‘Department’:’Sales’ might be added to a resource to indicate its use by a particular department. "
      },
      "TagKey": {
        "type": "string",
        "minLength": 1,
        "maxLength": 128
      },
      "TagValue": {
        "type": "string",
        "minLength": 0,
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://comprehend.us-east-1.amazonaws.com/#X-Amz-Target=Comprehend_20171127.CreateDataset"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**DatasetArn**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
