openapi: 3.0.0
info:
  version: '2020-07-08'
  x-release: v4
  title: Amazon WorkSpaces Web
  description: 'WorkSpaces Web is a low cost, fully managed WorkSpace built specifically to facilitate secure, web-based workloads. WorkSpaces Web makes it easy for customers to safely provide their employees with access to internal websites and SaaS web applications without the administrative burden of appliances or specialized client software. WorkSpaces Web provides simple policy tools tailored for user interactions, while offloading common tasks like capacity management, scaling, and maintaining browser images.'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: workspaces-web
  x-aws-signingName: workspaces-web
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/workspaces-web-2020-07-08.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/workspaces-web/'
servers:
  - url: 'http://workspaces-web.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon WorkSpaces Web multi-region endpoint
  - url: 'https://workspaces-web.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon WorkSpaces Web multi-region endpoint
  - url: 'http://workspaces-web.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon WorkSpaces Web endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://workspaces-web.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon WorkSpaces Web endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  '/portals/{portalArn}/browserSettings#browserSettingsArn':
    put:
      operationId: AssociateBrowserSettings
      description: Associates a browser settings resource with a web portal.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateBrowserSettingsResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '485':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: browserSettingsArn
          in: query
          required: true
          description: The ARN of the browser settings.
          schema:
            type: string
            pattern: '^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$'
            minLength: 20
            maxLength: 2048
        - name: portalArn
          in: path
          required: true
          description: The ARN of the web portal.
          schema:
            type: string
            pattern: '^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$'
            minLength: 20
            maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/portals/{portalArn}/ipAccessSettings#ipAccessSettingsArn':
    put:
      operationId: AssociateIpAccessSettings
      description: Associates an IP access settings resource with a web portal.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateIpAccessSettingsResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '485':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: ipAccessSettingsArn
          in: query
          required: true
          description: The ARN of the IP access settings.
          schema:
            type: string
            pattern: '^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$'
            minLength: 20
            maxLength: 2048
        - name: portalArn
          in: path
          required: true
          description: The ARN of the web portal.
          schema:
            type: string
            pattern: '^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$'
            minLength: 20
            maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/portals/{portalArn}/networkSettings#networkSettingsArn':
    put:
      operationId: AssociateNetworkSettings
      description: Associates a network settings resource with a web portal.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateNetworkSettingsResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '485':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: networkSettingsArn
          in: query
          required: true
          description: The ARN of the network settings.
          schema:
            type: string
            pattern: '^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$'
            minLength: 20
            maxLength: 2048
        - name: portalArn
          in: path
          required: true
          description: The ARN of the web portal.
          schema:
            type: string
            pattern: '^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$'
            minLength: 20
            maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/portals/{portalArn}/trustStores#trustStoreArn':
    put:
      operationId: AssociateTrustStore
      description: Associates a trust store with a web portal.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateTrustStoreResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: portalArn
          in: path
          required: true
          description: The ARN of the web portal.
          schema:
            type: string
            pattern: '^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$'
            minLength: 20
            maxLength: 2048
        - name: trustStoreArn
          in: query
          required: true
          description: The ARN of the trust store.
          schema:
            type: string
            pattern: '^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$'
            minLength: 20
            maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/portals/{portalArn}/userAccessLoggingSettings#userAccessLoggingSettingsArn':
    put:
      operationId: AssociateUserAccessLoggingSettings
      description: Associates a user access logging settings resource with a web portal.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateUserAccessLoggingSettingsResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '485':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: portalArn
          in: path
          required: true
          description: The ARN of the web portal.
          schema:
            type: string
            pattern: '^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$'
            minLength: 20
            maxLength: 2048
        - name: userAccessLoggingSettingsArn
          in: query
          required: true
          description: The ARN of the user access logging settings.
          schema:
            type: string
            pattern: '^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$'
            minLength: 20
            maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/portals/{portalArn}/userSettings#userSettingsArn':
    put:
      operationId: AssociateUserSettings
      description: Associates a user settings resource with a web portal.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateUserSettingsResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '485':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: portalArn
          in: path
          required: true
          description: The ARN of the web portal.
          schema:
            type: string
            pattern: '^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$'
            minLength: 20
            maxLength: 2048
        - name: userSettingsArn
          in: query
          required: true
          description: The ARN of the user settings.
          schema:
            type: string
            pattern: '^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$'
            minLength: 20
            maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /browserSettings:
    post:
      operationId: CreateBrowserSettings
      description: 'Creates a browser settings resource that can be associated with a web portal. Once associated with a web portal, browser settings control how the browser will behave once a user starts a streaming session for the web portal. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateBrowserSettingsResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '485':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '486':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - browserPolicy
              properties:
                additionalEncryptionContext:
                  description: Additional encryption context of the browser settings.
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/StringType'
                browserPolicy:
                  description: A JSON string containing Chrome Enterprise policies that will be applied to all streaming sessions.
                  type: string
                  pattern: '\{[\S\s]*\}\s*'
                  minLength: 2
                  maxLength: 131072
                  format: password
                clientToken:
                  description: '<p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token returns the result from the original successful request.</p> <p>If you do not specify a client token, one is automatically generated by the AWS SDK. </p>'
                  type: string
                  minLength: 1
                  maxLength: 512
                customerManagedKey:
                  description: The custom managed key of the browser settings.
                  type: string
                  pattern: '^arn:[\w+=\/,.@-]+:kms:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:key\/[a-zA-Z0-9-]+$'
                  minLength: 20
                  maxLength: 2048
                tags:
                  description: The tags to add to the browser settings resource. A tag is a key-value pair.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
                  minItems: 0
                  maxItems: 200
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListBrowserSettings
      description: Retrieves a list of browser settings.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBrowserSettingsResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to be included in the next page.
          schema:
            type: integer
            minimum: 1
        - name: nextToken
          in: query
          required: false
          description: The pagination token used to retrieve the next page of results for this operation.
          schema:
            type: string
            pattern: ^\S+$
            minLength: 1
            maxLength: 2048
  /identityProviders:
    post:
      operationId: CreateIdentityProvider
      description: Creates an identity provider resource that is then associated with a web portal.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateIdentityProviderResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '485':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '486':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - identityProviderDetails
                - identityProviderName
                - identityProviderType
                - portalArn
              properties:
                clientToken:
                  description: '<p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token returns the result from the original successful request.</p> <p>If you do not specify a client token, one is automatically generated by the AWS SDK.</p>'
                  type: string
                  minLength: 1
                  maxLength: 512
                identityProviderDetails:
                  description: '<p>The identity provider details. The following list describes the provider detail keys for each identity provider type. </p> <ul> <li> <p>For Google and Login with Amazon:</p> <ul> <li> <p> <code>client_id</code> </p> </li> <li> <p> <code>client_secret</code> </p> </li> <li> <p> <code>authorize_scopes</code> </p> </li> </ul> </li> <li> <p>For Facebook:</p> <ul> <li> <p> <code>client_id</code> </p> </li> <li> <p> <code>client_secret</code> </p> </li> <li> <p> <code>authorize_scopes</code> </p> </li> <li> <p> <code>api_version</code> </p> </li> </ul> </li> <li> <p>For Sign in with Apple:</p> <ul> <li> <p> <code>client_id</code> </p> </li> <li> <p> <code>team_id</code> </p> </li> <li> <p> <code>key_id</code> </p> </li> <li> <p> <code>private_key</code> </p> </li> <li> <p> <code>authorize_scopes</code> </p> </li> </ul> </li> <li> <p>For OIDC providers:</p> <ul> <li> <p> <code>client_id</code> </p> </li> <li> <p> <code>client_secret</code> </p> </li> <li> <p> <code>attributes_request_method</code> </p> </li> <li> <p> <code>oidc_issuer</code> </p> </li> <li> <p> <code>authorize_scopes</code> </p> </li> <li> <p> <code>authorize_url</code> <i>if not available from discovery URL specified by <code>oidc_issuer</code> key</i> </p> </li> <li> <p> <code>token_url</code> <i>if not available from discovery URL specified by <code>oidc_issuer</code> key</i> </p> </li> <li> <p> <code>attributes_url</code> <i>if not available from discovery URL specified by <code>oidc_issuer</code> key</i> </p> </li> <li> <p> <code>jwks_uri</code> <i>if not available from discovery URL specified by <code>oidc_issuer</code> key</i> </p> </li> </ul> </li> <li> <p>For SAML providers:</p> <ul> <li> <p> <code>MetadataFile</code> OR <code>MetadataURL</code> </p> </li> <li> <p> <code>IDPSignout</code> (boolean) <i>optional</i> </p> </li> </ul> </li> </ul>'
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/StringType'
                identityProviderName:
                  description: The identity provider name.
                  type: string
                  pattern: '^[^_][\p{L}\p{M}\p{S}\p{N}\p{P}][^_]+$'
                  minLength: 1
                  maxLength: 32
                  format: password
                identityProviderType:
                  description: The identity provider type.
                  type: string
                  enum:
                    - SAML
                    - Facebook
                    - Google
                    - LoginWithAmazon
                    - SignInWithApple
                    - OIDC
                portalArn:
                  description: The ARN of the web portal.
                  type: string
                  pattern: '^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$'
                  minLength: 20
                  maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /ipAccessSettings:
    post:
      operationId: CreateIpAccessSettings
      description: Creates an IP access settings resource that can be associated with a web portal.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateIpAccessSettingsResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '485':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ipRules
              properties:
                additionalEncryptionContext:
                  description: Additional encryption context of the IP access settings.
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/StringType'
                clientToken:
                  description: '<p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token returns the result from the original successful request. </p> <p>If you do not specify a client token, one is automatically generated by the AWS SDK.</p>'
                  type: string
                  minLength: 1
                  maxLength: 512
                customerManagedKey:
                  description: The custom managed key of the IP access settings.
                  type: string
                  pattern: '^arn:[\w+=\/,.@-]+:kms:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:key\/[a-zA-Z0-9-]+$'
                  minLength: 20
                  maxLength: 2048
                description:
                  description: The description of the IP access settings.
                  type: string
                  pattern: ^.+$
                  minLength: 1
                  maxLength: 256
                  format: password
                displayName:
                  description: The display name of the IP access settings.
                  type: string
                  pattern: ^.+$
                  minLength: 1
                  maxLength: 64
                  format: password
                ipRules:
                  description: The IP rules of the IP access settings.
                  type: array
                  items:
                    $ref: '#/components/schemas/IpRule'
                  minItems: 1
                  maxItems: 100
                tags:
                  description: The tags to add to the browser settings resource. A tag is a key-value pair.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
                  minItems: 0
                  maxItems: 200
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListIpAccessSettings
      description: Retrieves a list of IP access settings.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListIpAccessSettingsResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to be included in the next page.
          schema:
            type: integer
            minimum: 1
        - name: nextToken
          in: query
          required: false
          description: The pagination token used to retrieve the next page of results for this operation.
          schema:
            type: string
            pattern: ^\S+$
            minLength: 1
            maxLength: 2048
  /networkSettings:
    post:
      operationId: CreateNetworkSettings
      description: 'Creates a network settings resource that can be associated with a web portal. Once associated with a web portal, network settings define how streaming instances will connect with your specified VPC. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateNetworkSettingsResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '485':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - securityGroupIds
                - subnetIds
                - vpcId
              properties:
                clientToken:
                  description: '<p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token returns the result from the original successful request. </p> <p>If you do not specify a client token, one is automatically generated by the AWS SDK.</p>'
                  type: string
                  minLength: 1
                  maxLength: 512
                securityGroupIds:
                  description: One or more security groups used to control access from streaming instances to your VPC.
                  type: array
                  items:
                    $ref: '#/components/schemas/SecurityGroupId'
                  minItems: 1
                  maxItems: 5
                subnetIds:
                  description: The subnets in which network interfaces are created to connect streaming instances to your VPC. At least two of these subnets must be in different availability zones.
                  type: array
                  items:
                    $ref: '#/components/schemas/SubnetId'
                  minItems: 2
                  maxItems: 3
                tags:
                  description: The tags to add to the network settings resource. A tag is a key-value pair.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
                  minItems: 0
                  maxItems: 200
                vpcId:
                  description: The VPC that streaming instances will connect to.
                  type: string
                  pattern: '^vpc-[0-9a-z]*$'
                  minLength: 1
                  maxLength: 255
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListNetworkSettings
      description: Retrieves a list of network settings.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNetworkSettingsResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to be included in the next page.
          schema:
            type: integer
            minimum: 1
        - name: nextToken
          in: query
          required: false
          description: The pagination token used to retrieve the next page of results for this operation.
          schema:
            type: string
            pattern: ^\S+$
            minLength: 1
            maxLength: 2048
  /portals:
    post:
      operationId: CreatePortal
      description: Creates a web portal.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePortalResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '485':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '486':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                additionalEncryptionContext:
                  description: The additional encryption context of the portal.
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/StringType'
                authenticationType:
                  description: '<p>The type of authentication integration points used when signing into the web portal. Defaults to <code>Standard</code>.</p> <p> <code>Standard</code> web portals are authenticated directly through your identity provider. You need to call <code>CreateIdentityProvider</code> to integrate your identity provider with your web portal. User and group access to your web portal is controlled through your identity provider.</p> <p> <code>IAM_Identity_Center</code> web portals are authenticated through AWS IAM Identity Center (successor to AWS Single Sign-On). They provide additional features, such as IdP-initiated authentication. Identity sources (including external identity provider integration), plus user and group access to your web portal, can be configured in the IAM Identity Center.</p>'
                  type: string
                  enum:
                    - Standard
                    - IAM_Identity_Center
                clientToken:
                  description: '<p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token returns the result from the original successful request. </p> <p>If you do not specify a client token, one is automatically generated by the AWS SDK.</p>'
                  type: string
                  minLength: 1
                  maxLength: 512
                customerManagedKey:
                  description: The customer managed key of the web portal.
                  type: string
                  pattern: '^arn:[\w+=\/,.@-]+:kms:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:key\/[a-zA-Z0-9-]+$'
                  minLength: 20
                  maxLength: 2048
                displayName:
                  description: The name of the web portal. This is not visible to users who log into the web portal.
                  type: string
                  pattern: ^.+$
                  minLength: 1
                  maxLength: 64
                  format: password
                tags:
                  description: The tags to add to the web portal. A tag is a key-value pair.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
                  minItems: 0
                  maxItems: 200
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListPortals
      description: Retrieves a list or web portals.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPortalsResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to be included in the next page.
          schema:
            type: integer
            minimum: 1
        - name: nextToken
          in: query
          required: false
          description: 'The pagination token used to retrieve the next page of results for this operation. '
          schema:
            type: string
            pattern: ^\S+$
            minLength: 1
            maxLength: 2048
  /trustStores:
    post:
      operationId: CreateTrustStore
      description: 'Creates a trust store that can be associated with a web portal. A trust store contains certificate authority (CA) certificates. Once associated with a web portal, the browser in a streaming session will recognize certificates that have been issued using any of the CAs in the trust store. If your organization has internal websites that use certificates issued by private CAs, you should add the private CA certificate to the trust store. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTrustStoreResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '485':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - certificateList
              properties:
                certificateList:
                  description: A list of CA certificates to be added to the trust store.
                  type: array
                  items:
                    $ref: '#/components/schemas/CertificateAuthorityBody'
                clientToken:
                  description: '<p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token returns the result from the original successful request. </p> <p>If you do not specify a client token, one is automatically generated by the AWS SDK.</p>'
                  type: string
                  minLength: 1
                  maxLength: 512
                tags:
                  description: The tags to add to the trust store. A tag is a key-value pair.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
                  minItems: 0
                  maxItems: 200
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListTrustStores
      description: Retrieves a list of trust stores.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTrustStoresResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to be included in the next page.
          schema:
            type: integer
            minimum: 1
        - name: nextToken
          in: query
          required: false
          description: The pagination token used to retrieve the next page of results for this operation.
          schema:
            type: string
            pattern: ^\S+$
            minLength: 1
            maxLength: 2048
  /userAccessLoggingSettings:
    post:
      operationId: CreateUserAccessLoggingSettings
      description: Creates a user access logging settings resource that can be associated with a web portal.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserAccessLoggingSettingsResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '485':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - kinesisStreamArn
              properties:
                clientToken:
                  description: '<p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token returns the result from the original successful request. </p> <p>If you do not specify a client token, one is automatically generated by the AWS SDK.</p>'
                  type: string
                  minLength: 1
                  maxLength: 512
                kinesisStreamArn:
                  description: Kinesis stream ARN to which log events are published.
                  type: string
                  pattern: 'arn:[\w+=/,.@-]+:kinesis:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:stream/.+'
                  minLength: 20
                  maxLength: 2048
                tags:
                  description: The tags to add to the user settings resource. A tag is a key-value pair.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
                  minItems: 0
                  maxItems: 200
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListUserAccessLoggingSettings
      description: Retrieves a list of user access logging settings.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUserAccessLoggingSettingsResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to be included in the next page.
          schema:
            type: integer
            minimum: 1
        - name: nextToken
          in: query
          required: false
          description: The pagination token used to retrieve the next page of results for this operation.
          schema:
            type: string
            pattern: ^\S+$
            minLength: 1
            maxLength: 2048
  /userSettings:
    post:
      operationId: CreateUserSettings
      description: 'Creates a user settings resource that can be associated with a web portal. Once associated with a web portal, user settings control how users can transfer data between a streaming session and the their local devices. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserSettingsResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '485':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - copyAllowed
                - downloadAllowed
                - pasteAllowed
                - printAllowed
                - uploadAllowed
              properties:
                clientToken:
                  description: '<p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token returns the result from the original successful request. </p> <p>If you do not specify a client token, one is automatically generated by the AWS SDK.</p>'
                  type: string
                  minLength: 1
                  maxLength: 512
                copyAllowed:
                  description: Specifies whether the user can copy text from the streaming session to the local device.
                  type: string
                  enum:
                    - Disabled
                    - Enabled
                disconnectTimeoutInMinutes:
                  description: The amount of time that a streaming session remains active after users disconnect.
                  type: integer
                  minimum: 1
                  maximum: 600
                downloadAllowed:
                  description: Specifies whether the user can download files from the streaming session to the local device.
                  type: string
                  enum:
                    - Disabled
                    - Enabled
                idleDisconnectTimeoutInMinutes:
                  description: The amount of time that users can be idle (inactive) before they are disconnected from their streaming session and the disconnect timeout interval begins.
                  type: integer
                  minimum: 0
                  maximum: 60
                pasteAllowed:
                  description: Specifies whether the user can paste text from the local device to the streaming session.
                  type: string
                  enum:
                    - Disabled
                    - Enabled
                printAllowed:
                  description: Specifies whether the user can print to the local device.
                  type: string
                  enum:
                    - Disabled
                    - Enabled
                tags:
                  description: The tags to add to the user settings resource. A tag is a key-value pair.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
                  minItems: 0
                  maxItems: 200
                uploadAllowed:
                  description: Specifies whether the user can upload files from the local device to the streaming session.
                  type: string
                  enum:
                    - Disabled
                    - Enabled
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListUserSettings
      description: Retrieves a list of user settings.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUserSettingsResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to be included in the next page.
          schema:
            type: integer
            minimum: 1
        - name: nextToken
          in: query
          required: false
          description: 'The pagination token used to retrieve the next page of results for this operation. '
          schema:
            type: string
            pattern: ^\S+$
            minLength: 1
            maxLength: 2048
  '/browserSettings/{browserSettingsArn}':
    delete:
      operationId: DeleteBrowserSettings
      description: Deletes browser settings.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteBrowserSettingsResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: browserSettingsArn
          in: path
          required: true
          description: The ARN of the browser settings.
          schema:
            type: string
            pattern: '^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$'
            minLength: 20
            maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetBrowserSettings
      description: Gets browser settings.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBrowserSettingsResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: browserSettingsArn
          in: path
          required: true
          description: The ARN of the browser settings.
          schema:
            type: string
            pattern: '^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$'
            minLength: 20
            maxLength: 2048
    patch:
      operationId: UpdateBrowserSettings
      description: Updates browser settings.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateBrowserSettingsResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: browserSettingsArn
          in: path
          required: true
          description: The ARN of the browser settings.
          schema:
            type: string
            pattern: '^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$'
            minLength: 20
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                browserPolicy:
                  description: 'A JSON string containing Chrome Enterprise policies that will be applied to all streaming sessions. '
                  type: string
                  pattern: '\{[\S\s]*\}\s*'
                  minLength: 2
                  maxLength: 131072
                  format: password
                clientToken:
                  description: '<p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token return the result from the original successful request. </p> <p>If you do not specify a client token, one is automatically generated by the AWS SDK.</p>'
                  type: string
                  minLength: 1
                  maxLength: 512
  '/identityProviders/{identityProviderArn}':
    delete:
      operationId: DeleteIdentityProvider
      description: Deletes the identity provider.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteIdentityProviderResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: identityProviderArn
          in: path
          required: true
          description: The ARN of the identity provider.
          schema:
            type: string
            pattern: '^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$'
            minLength: 20
            maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetIdentityProvider
      description: Gets the identity provider.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetIdentityProviderResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: identityProviderArn
          in: path
          required: true
          description: The ARN of the identity provider.
          schema:
            type: string
            pattern: '^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$'
            minLength: 20
            maxLength: 2048
    patch:
      operationId: UpdateIdentityProvider
      description: 'Updates the identity provider. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateIdentityProviderResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: identityProviderArn
          in: path
          required: true
          description: The ARN of the identity provider.
          schema:
            type: string
            pattern: '^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$'
            minLength: 20
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clientToken:
                  description: '<p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token return the result from the original successful request. </p> <p>If you do not specify a client token, one is automatically generated by the AWS SDK.</p>'
                  type: string
                  minLength: 1
                  maxLength: 512
                identityProviderDetails:
                  description: '<p>The details of the identity provider. The following list describes the provider detail keys for each identity provider type. </p> <ul> <li> <p>For Google and Login with Amazon:</p> <ul> <li> <p> <code>client_id</code> </p> </li> <li> <p> <code>client_secret</code> </p> </li> <li> <p> <code>authorize_scopes</code> </p> </li> </ul> </li> <li> <p>For Facebook:</p> <ul> <li> <p> <code>client_id</code> </p> </li> <li> <p> <code>client_secret</code> </p> </li> <li> <p> <code>authorize_scopes</code> </p> </li> <li> <p> <code>api_version</code> </p> </li> </ul> </li> <li> <p>For Sign in with Apple:</p> <ul> <li> <p> <code>client_id</code> </p> </li> <li> <p> <code>team_id</code> </p> </li> <li> <p> <code>key_id</code> </p> </li> <li> <p> <code>private_key</code> </p> </li> <li> <p> <code>authorize_scopes</code> </p> </li> </ul> </li> <li> <p>For OIDC providers:</p> <ul> <li> <p> <code>client_id</code> </p> </li> <li> <p> <code>client_secret</code> </p> </li> <li> <p> <code>attributes_request_method</code> </p> </li> <li> <p> <code>oidc_issuer</code> </p> </li> <li> <p> <code>authorize_scopes</code> </p> </li> <li> <p> <code>authorize_url</code> <i>if not available from discovery URL specified by <code>oidc_issuer</code> key</i> </p> </li> <li> <p> <code>token_url</code> <i>if not available from discovery URL specified by <code>oidc_issuer</code> key</i> </p> </li> <li> <p> <code>attributes_url</code> <i>if not available from discovery URL specified by <code>oidc_issuer</code> key</i> </p> </li> <li> <p> <code>jwks_uri</code> <i>if not available from discovery URL specified by <code>oidc_issuer</code> key</i> </p> </li> </ul> </li> <li> <p>For SAML providers:</p> <ul> <li> <p> <code>MetadataFile</code> OR <code>MetadataURL</code> </p> </li> <li> <p> <code>IDPSignout</code> (boolean) <i>optional</i> </p> </li> </ul> </li> </ul>'
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/StringType'
                identityProviderName:
                  description: The name of the identity provider.
                  type: string
                  pattern: '^[^_][\p{L}\p{M}\p{S}\p{N}\p{P}][^_]+$'
                  minLength: 1
                  maxLength: 32
                  format: password
                identityProviderType:
                  description: The type of the identity provider.
                  type: string
                  enum:
                    - SAML
                    - Facebook
                    - Google
                    - LoginWithAmazon
                    - SignInWithApple
                    - OIDC
  '/ipAccessSettings/{ipAccessSettingsArn}':
    delete:
      operationId: DeleteIpAccessSettings
      description: Deletes IP access settings.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteIpAccessSettingsResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: ipAccessSettingsArn
          in: path
          required: true
          description: The ARN of the IP access settings.
          schema:
            type: string
            pattern: '^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$'
            minLength: 20
            maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetIpAccessSettings
      description: Gets the IP access settings.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetIpAccessSettingsResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: ipAccessSettingsArn
          in: path
          required: true
          description: The ARN of the IP access settings.
          schema:
            type: string
            pattern: '^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$'
            minLength: 20
            maxLength: 2048
    patch:
      operationId: UpdateIpAccessSettings
      description: Updates IP access settings.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateIpAccessSettingsResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: ipAccessSettingsArn
          in: path
          required: true
          description: The ARN of the IP access settings.
          schema:
            type: string
            pattern: '^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$'
            minLength: 20
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clientToken:
                  description: '<p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token return the result from the original successful request. </p> <p>If you do not specify a client token, one is automatically generated by the AWS SDK.</p>'
                  type: string
                  minLength: 1
                  maxLength: 512
                description:
                  description: The description of the IP access settings.
                  type: string
                  pattern: ^.+$
                  minLength: 1
                  maxLength: 256
                  format: password
                displayName:
                  description: The display name of the IP access settings.
                  type: string
                  pattern: ^.+$
                  minLength: 1
                  maxLength: 64
                  format: password
                ipRules:
                  description: The updated IP rules of the IP access settings.
                  type: array
                  items:
                    $ref: '#/components/schemas/IpRule'
                  minItems: 1
                  maxItems: 100
  '/networkSettings/{networkSettingsArn}':
    delete:
      operationId: DeleteNetworkSettings
      description: Deletes network settings.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteNetworkSettingsResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: networkSettingsArn
          in: path
          required: true
          description: The ARN of the network settings.
          schema:
            type: string
            pattern: '^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$'
            minLength: 20
            maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetNetworkSettings
      description: Gets the network settings.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNetworkSettingsResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: networkSettingsArn
          in: path
          required: true
          description: The ARN of the network settings.
          schema:
            type: string
            pattern: '^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$'
            minLength: 20
            maxLength: 2048
    patch:
      operationId: UpdateNetworkSettings
      description: Updates network settings.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateNetworkSettingsResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: networkSettingsArn
          in: path
          required: true
          description: The ARN of the network settings.
          schema:
            type: string
            pattern: '^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$'
            minLength: 20
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clientToken:
                  description: '<p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token return the result from the original successful request. </p> <p>If you do not specify a client token, one is automatically generated by the AWS SDK.</p>'
                  type: string
                  minLength: 1
                  maxLength: 512
                securityGroupIds:
                  description: One or more security groups used to control access from streaming instances to your VPC.
                  type: array
                  items:
                    $ref: '#/components/schemas/SecurityGroupId'
                  minItems: 1
                  maxItems: 5
                subnetIds:
                  description: The subnets in which network interfaces are created to connect streaming instances to your VPC. At least two of these subnets must be in different availability zones.
                  type: array
                  items:
                    $ref: '#/components/schemas/SubnetId'
                  minItems: 2
                  maxItems: 3
                vpcId:
                  description: The VPC that streaming instances will connect to.
                  type: string
                  pattern: '^vpc-[0-9a-z]*$'
                  minLength: 1
                  maxLength: 255
  '/portals/{portalArn}':
    delete:
      operationId: DeletePortal
      description: Deletes a web portal.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletePortalResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: portalArn
          in: path
          required: true
          description: The ARN of the web portal.
          schema:
            type: string
            pattern: '^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$'
            minLength: 20
            maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetPortal
      description: Gets the web portal.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPortalResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: portalArn
          in: path
          required: true
          description: The ARN of the web portal.
          schema:
            type: string
            pattern: '^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$'
            minLength: 20
            maxLength: 2048
    put:
      operationId: UpdatePortal
      description: Updates a web portal.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePortalResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '485':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: portalArn
          in: path
          required: true
          description: The ARN of the web portal.
          schema:
            type: string
            pattern: '^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$'
            minLength: 20
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                authenticationType:
                  description: '<p>The type of authentication integration points used when signing into the web portal. Defaults to <code>Standard</code>.</p> <p> <code>Standard</code> web portals are authenticated directly through your identity provider. You need to call <code>CreateIdentityProvider</code> to integrate your identity provider with your web portal. User and group access to your web portal is controlled through your identity provider.</p> <p> <code>IAM_Identity_Center</code> web portals are authenticated through AWS IAM Identity Center (successor to AWS Single Sign-On). They provide additional features, such as IdP-initiated authentication. Identity sources (including external identity provider integration), plus user and group access to your web portal, can be configured in the IAM Identity Center.</p>'
                  type: string
                  enum:
                    - Standard
                    - IAM_Identity_Center
                displayName:
                  description: The name of the web portal. This is not visible to users who log into the web portal.
                  type: string
                  pattern: ^.+$
                  minLength: 1
                  maxLength: 64
                  format: password
  '/trustStores/{trustStoreArn}':
    delete:
      operationId: DeleteTrustStore
      description: Deletes the trust store.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTrustStoreResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: trustStoreArn
          in: path
          required: true
          description: The ARN of the trust store.
          schema:
            type: string
            pattern: '^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$'
            minLength: 20
            maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetTrustStore
      description: Gets the trust store.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTrustStoreResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: trustStoreArn
          in: path
          required: true
          description: The ARN of the trust store.
          schema:
            type: string
            pattern: '^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$'
            minLength: 20
            maxLength: 2048
    patch:
      operationId: UpdateTrustStore
      description: Updates the trust store.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTrustStoreResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '485':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: trustStoreArn
          in: path
          required: true
          description: The ARN of the trust store.
          schema:
            type: string
            pattern: '^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$'
            minLength: 20
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                certificatesToAdd:
                  description: A list of CA certificates to add to the trust store.
                  type: array
                  items:
                    $ref: '#/components/schemas/CertificateAuthorityBody'
                certificatesToDelete:
                  description: A list of CA certificates to delete from a trust store.
                  type: array
                  items:
                    $ref: '#/components/schemas/CertificateThumbprint'
                clientToken:
                  description: '<p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token return the result from the original successful request. </p> <p>If you do not specify a client token, one is automatically generated by the AWS SDK.</p>'
                  type: string
                  minLength: 1
                  maxLength: 512
  '/userAccessLoggingSettings/{userAccessLoggingSettingsArn}':
    delete:
      operationId: DeleteUserAccessLoggingSettings
      description: Deletes user access logging settings.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteUserAccessLoggingSettingsResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: userAccessLoggingSettingsArn
          in: path
          required: true
          description: The ARN of the user access logging settings.
          schema:
            type: string
            pattern: '^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$'
            minLength: 20
            maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetUserAccessLoggingSettings
      description: Gets user access logging settings.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserAccessLoggingSettingsResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: userAccessLoggingSettingsArn
          in: path
          required: true
          description: The ARN of the user access logging settings.
          schema:
            type: string
            pattern: '^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$'
            minLength: 20
            maxLength: 2048
    patch:
      operationId: UpdateUserAccessLoggingSettings
      description: Updates the user access logging settings.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateUserAccessLoggingSettingsResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: userAccessLoggingSettingsArn
          in: path
          required: true
          description: The ARN of the user access logging settings.
          schema:
            type: string
            pattern: '^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$'
            minLength: 20
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clientToken:
                  description: '<p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token return the result from the original successful request. </p> <p>If you do not specify a client token, one is automatically generated by the AWS SDK.</p>'
                  type: string
                  minLength: 1
                  maxLength: 512
                kinesisStreamArn:
                  description: Kinesis stream ARN to which log events are published.
                  type: string
                  pattern: 'arn:[\w+=/,.@-]+:kinesis:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:stream/.+'
                  minLength: 20
                  maxLength: 2048
  '/userSettings/{userSettingsArn}':
    delete:
      operationId: DeleteUserSettings
      description: Deletes user settings.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteUserSettingsResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: userSettingsArn
          in: path
          required: true
          description: The ARN of the user settings.
          schema:
            type: string
            pattern: '^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$'
            minLength: 20
            maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetUserSettings
      description: Gets user settings.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserSettingsResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: userSettingsArn
          in: path
          required: true
          description: The ARN of the user settings.
          schema:
            type: string
            pattern: '^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$'
            minLength: 20
            maxLength: 2048
    patch:
      operationId: UpdateUserSettings
      description: Updates the user settings.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateUserSettingsResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: userSettingsArn
          in: path
          required: true
          description: The ARN of the user settings.
          schema:
            type: string
            pattern: '^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$'
            minLength: 20
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clientToken:
                  description: '<p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token return the result from the original successful request. </p> <p>If you do not specify a client token, one is automatically generated by the AWS SDK.</p>'
                  type: string
                  minLength: 1
                  maxLength: 512
                copyAllowed:
                  description: Specifies whether the user can copy text from the streaming session to the local device.
                  type: string
                  enum:
                    - Disabled
                    - Enabled
                disconnectTimeoutInMinutes:
                  description: The amount of time that a streaming session remains active after users disconnect.
                  type: integer
                  minimum: 1
                  maximum: 600
                downloadAllowed:
                  description: Specifies whether the user can download files from the streaming session to the local device.
                  type: string
                  enum:
                    - Disabled
                    - Enabled
                idleDisconnectTimeoutInMinutes:
                  description: The amount of time that users can be idle (inactive) before they are disconnected from their streaming session and the disconnect timeout interval begins.
                  type: integer
                  minimum: 0
                  maximum: 60
                pasteAllowed:
                  description: Specifies whether the user can paste text from the local device to the streaming session.
                  type: string
                  enum:
                    - Disabled
                    - Enabled
                printAllowed:
                  description: Specifies whether the user can print to the local device.
                  type: string
                  enum:
                    - Disabled
                    - Enabled
                uploadAllowed:
                  description: Specifies whether the user can upload files from the local device to the streaming session.
                  type: string
                  enum:
                    - Disabled
                    - Enabled
  '/portals/{portalArn}/browserSettings':
    delete:
      operationId: DisassociateBrowserSettings
      description: Disassociates browser settings from a web portal.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateBrowserSettingsResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: portalArn
          in: path
          required: true
          description: The ARN of the web portal.
          schema:
            type: string
            pattern: '^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$'
            minLength: 20
            maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/portals/{portalArn}/ipAccessSettings':
    delete:
      operationId: DisassociateIpAccessSettings
      description: Disassociates IP access settings from a web portal.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateIpAccessSettingsResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: portalArn
          in: path
          required: true
          description: The ARN of the web portal.
          schema:
            type: string
            pattern: '^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$'
            minLength: 20
            maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/portals/{portalArn}/networkSettings':
    delete:
      operationId: DisassociateNetworkSettings
      description: Disassociates network settings from a web portal.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateNetworkSettingsResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: portalArn
          in: path
          required: true
          description: The ARN of the web portal.
          schema:
            type: string
            pattern: '^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$'
            minLength: 20
            maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/portals/{portalArn}/trustStores':
    delete:
      operationId: DisassociateTrustStore
      description: Disassociates a trust store from a web portal.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateTrustStoreResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: portalArn
          in: path
          required: true
          description: The ARN of the web portal.
          schema:
            type: string
            pattern: '^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$'
            minLength: 20
            maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/portals/{portalArn}/userAccessLoggingSettings':
    delete:
      operationId: DisassociateUserAccessLoggingSettings
      description: Disassociates user access logging settings from a web portal.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateUserAccessLoggingSettingsResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: portalArn
          in: path
          required: true
          description: The ARN of the web portal.
          schema:
            type: string
            pattern: '^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$'
            minLength: 20
            maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/portals/{portalArn}/userSettings':
    delete:
      operationId: DisassociateUserSettings
      description: Disassociates user settings from a web portal.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateUserSettingsResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: portalArn
          in: path
          required: true
          description: The ARN of the web portal.
          schema:
            type: string
            pattern: '^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$'
            minLength: 20
            maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/portalIdp/{portalArn}':
    get:
      operationId: GetPortalServiceProviderMetadata
      description: Gets the service provider metadata.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPortalServiceProviderMetadataResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: portalArn
          in: path
          required: true
          description: The ARN of the web portal.
          schema:
            type: string
            pattern: '^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$'
            minLength: 20
            maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/trustStores/{trustStoreArn}/certificate#thumbprint':
    get:
      operationId: GetTrustStoreCertificate
      description: Gets the trust store certificate.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTrustStoreCertificateResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: thumbprint
          in: query
          required: true
          description: The thumbprint of the trust store certificate.
          schema:
            type: string
            pattern: '^[A-Fa-f0-9]{64}$'
            minLength: 64
            maxLength: 64
        - name: trustStoreArn
          in: path
          required: true
          description: The ARN of the trust store certificate.
          schema:
            type: string
            pattern: '^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$'
            minLength: 20
            maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/portals/{portalArn}/identityProviders':
    get:
      operationId: ListIdentityProviders
      description: Retrieves a list of identity providers for a specific web portal.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListIdentityProvidersResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to be included in the next page.
          schema:
            type: integer
            minimum: 1
        - name: nextToken
          in: query
          required: false
          description: The pagination token used to retrieve the next page of results for this operation.
          schema:
            type: string
            pattern: ^\S+$
            minLength: 1
            maxLength: 2048
        - name: portalArn
          in: path
          required: true
          description: The ARN of the web portal.
          schema:
            type: string
            pattern: '^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$'
            minLength: 20
            maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/tags/{resourceArn}':
    get:
      operationId: ListTagsForResource
      description: Retrieves a list of tags for a resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The ARN of the resource.
          schema:
            type: string
            pattern: '^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$'
            minLength: 20
            maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: TagResource
      description: Adds or overwrites one or more tags for the specified resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '485':
          description: TooManyTagsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyTagsException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The ARN of the resource.
          schema:
            type: string
            pattern: '^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$'
            minLength: 20
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - tags
              properties:
                clientToken:
                  description: '<p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token returns the result from the original successful request. </p> <p>If you do not specify a client token, one is automatically generated by the AWS SDK.</p>'
                  type: string
                  minLength: 1
                  maxLength: 512
                tags:
                  description: The tags of the resource.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
                  minItems: 0
                  maxItems: 200
  '/trustStores/{trustStoreArn}/certificates':
    get:
      operationId: ListTrustStoreCertificates
      description: Retrieves a list of trust store certificates.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTrustStoreCertificatesResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to be included in the next page.
          schema:
            type: integer
            minimum: 1
        - name: nextToken
          in: query
          required: false
          description: The pagination token used to retrieve the next page of results for this operation.
          schema:
            type: string
            pattern: ^\S+$
            minLength: 1
            maxLength: 2048
        - name: trustStoreArn
          in: path
          required: true
          description: The ARN of the trust store
          schema:
            type: string
            pattern: '^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$'
            minLength: 20
            maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/tags/{resourceArn}#tagKeys':
    delete:
      operationId: UntagResource
      description: Removes one or more tags from the specified resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The ARN of the resource.
          schema:
            type: string
            pattern: '^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$'
            minLength: 20
            maxLength: 2048
        - name: tagKeys
          in: query
          required: true
          description: The list of tag keys to remove from the resource.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TagKey'
            minItems: 0
            maxItems: 200
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AssociateBrowserSettingsResponse:
      type: object
      required:
        - browserSettingsArn
        - portalArn
      properties:
        browserSettingsArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The ARN of the browser settings.
        portalArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The ARN of the web portal.
    InternalServerException: {}
    ResourceNotFoundException: {}
    AccessDeniedException: {}
    ThrottlingException: {}
    ValidationException: {}
    ConflictException: {}
    AssociateIpAccessSettingsResponse:
      type: object
      required:
        - ipAccessSettingsArn
        - portalArn
      properties:
        ipAccessSettingsArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The ARN of the IP access settings resource.
        portalArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The ARN of the web portal.
    AssociateNetworkSettingsResponse:
      type: object
      required:
        - networkSettingsArn
        - portalArn
      properties:
        networkSettingsArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The ARN of the network settings.
        portalArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The ARN of the web portal.
    AssociateTrustStoreResponse:
      type: object
      required:
        - portalArn
        - trustStoreArn
      properties:
        portalArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The ARN of the web portal.
        trustStoreArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The ARN of the trust store.
    AssociateUserAccessLoggingSettingsResponse:
      type: object
      required:
        - portalArn
        - userAccessLoggingSettingsArn
      properties:
        portalArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The ARN of the web portal.
        userAccessLoggingSettingsArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The ARN of the user access logging settings.
    AssociateUserSettingsResponse:
      type: object
      required:
        - portalArn
        - userSettingsArn
      properties:
        portalArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The ARN of the web portal.
        userSettingsArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The ARN of the user settings.
    CreateBrowserSettingsResponse:
      type: object
      required:
        - browserSettingsArn
      properties:
        browserSettingsArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The ARN of the browser settings.
    StringType:
      type: string
      pattern: '^[\s\S]*$'
      minLength: 0
      maxLength: 131072
    Tag:
      type: object
      required:
        - Key
        - Value
      properties:
        Key:
          allOf:
            - $ref: '#/components/schemas/TagKey'
            - description: The key of the tag.
        Value:
          allOf:
            - $ref: '#/components/schemas/TagValue'
            - description: The value of the tag
      description: The tag.
    ServiceQuotaExceededException: {}
    CreateIdentityProviderResponse:
      type: object
      required:
        - identityProviderArn
      properties:
        identityProviderArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The ARN of the identity provider.
    CreateIpAccessSettingsResponse:
      type: object
      required:
        - ipAccessSettingsArn
      properties:
        ipAccessSettingsArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The ARN of the IP access settings resource.
    IpRule:
      type: object
      required:
        - ipRange
      properties:
        description:
          allOf:
            - $ref: '#/components/schemas/Description'
            - description: The description of the IP rule.
        ipRange:
          allOf:
            - $ref: '#/components/schemas/IpRange'
            - description: The IP range of the IP rule.
      description: The IP rules of the IP access settings.
    CreateNetworkSettingsResponse:
      type: object
      required:
        - networkSettingsArn
      properties:
        networkSettingsArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The ARN of the network settings.
    SecurityGroupId:
      type: string
      pattern: '^[\w+\-]+$'
      minLength: 1
      maxLength: 128
    SubnetId:
      type: string
      pattern: '^subnet-([0-9a-f]{8}|[0-9a-f]{17})$'
      minLength: 1
      maxLength: 32
    CreatePortalResponse:
      type: object
      required:
        - portalArn
        - portalEndpoint
      properties:
        portalArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The ARN of the web portal.
        portalEndpoint:
          allOf:
            - $ref: '#/components/schemas/PortalEndpoint'
            - description: The endpoint URL of the web portal that users access in order to start streaming sessions.
    CreateTrustStoreResponse:
      type: object
      required:
        - trustStoreArn
      properties:
        trustStoreArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The ARN of the trust store.
    CertificateAuthorityBody:
      type: string
    CreateUserAccessLoggingSettingsResponse:
      type: object
      required:
        - userAccessLoggingSettingsArn
      properties:
        userAccessLoggingSettingsArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The ARN of the user access logging settings.
    CreateUserSettingsResponse:
      type: object
      required:
        - userSettingsArn
      properties:
        userSettingsArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The ARN of the user settings.
    DeleteBrowserSettingsResponse:
      type: object
      properties: {}
    DeleteIdentityProviderResponse:
      type: object
      properties: {}
    DeleteIpAccessSettingsResponse:
      type: object
      properties: {}
    DeleteNetworkSettingsResponse:
      type: object
      properties: {}
    DeletePortalResponse:
      type: object
      properties: {}
    DeleteTrustStoreResponse:
      type: object
      properties: {}
    DeleteUserAccessLoggingSettingsResponse:
      type: object
      properties: {}
    DeleteUserSettingsResponse:
      type: object
      properties: {}
    DisassociateBrowserSettingsResponse:
      type: object
      properties: {}
    DisassociateIpAccessSettingsResponse:
      type: object
      properties: {}
    DisassociateNetworkSettingsResponse:
      type: object
      properties: {}
    DisassociateTrustStoreResponse:
      type: object
      properties: {}
    DisassociateUserAccessLoggingSettingsResponse:
      type: object
      properties: {}
    DisassociateUserSettingsResponse:
      type: object
      properties: {}
    GetBrowserSettingsResponse:
      type: object
      properties:
        browserSettings:
          allOf:
            - $ref: '#/components/schemas/BrowserSettings'
            - description: The browser settings.
    GetIdentityProviderResponse:
      type: object
      properties:
        identityProvider:
          allOf:
            - $ref: '#/components/schemas/IdentityProvider'
            - description: The identity provider.
    GetIpAccessSettingsResponse:
      type: object
      properties:
        ipAccessSettings:
          allOf:
            - $ref: '#/components/schemas/IpAccessSettings'
            - description: The IP access settings.
    GetNetworkSettingsResponse:
      type: object
      properties:
        networkSettings:
          allOf:
            - $ref: '#/components/schemas/NetworkSettings'
            - description: The network settings.
    GetPortalResponse:
      type: object
      properties:
        portal:
          allOf:
            - $ref: '#/components/schemas/Portal'
            - description: The web portal.
    GetPortalServiceProviderMetadataResponse:
      type: object
      required:
        - portalArn
      properties:
        portalArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The ARN of the web portal.
        serviceProviderSamlMetadata:
          allOf:
            - $ref: '#/components/schemas/SamlMetadata'
            - description: The service provider SAML metadata.
    GetTrustStoreResponse:
      type: object
      properties:
        trustStore:
          allOf:
            - $ref: '#/components/schemas/TrustStore'
            - description: The trust store.
    GetTrustStoreCertificateResponse:
      type: object
      properties:
        certificate:
          allOf:
            - $ref: '#/components/schemas/Certificate'
            - description: The certificate of the trust store certificate.
        trustStoreArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The ARN of the trust store certificate.
    GetUserAccessLoggingSettingsResponse:
      type: object
      properties:
        userAccessLoggingSettings:
          allOf:
            - $ref: '#/components/schemas/UserAccessLoggingSettings'
            - description: The user access logging settings.
    GetUserSettingsResponse:
      type: object
      properties:
        userSettings:
          allOf:
            - $ref: '#/components/schemas/UserSettings'
            - description: The user settings.
    ListBrowserSettingsResponse:
      type: object
      properties:
        browserSettings:
          allOf:
            - $ref: '#/components/schemas/BrowserSettingsList'
            - description: The browser settings.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/PaginationToken'
            - description: The pagination token used to retrieve the next page of results for this operation.
    ListIdentityProvidersResponse:
      type: object
      properties:
        identityProviders:
          allOf:
            - $ref: '#/components/schemas/IdentityProviderList'
            - description: The identity providers.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/PaginationToken'
            - description: The pagination token used to retrieve the next page of results for this operation.
    ListIpAccessSettingsResponse:
      type: object
      properties:
        ipAccessSettings:
          allOf:
            - $ref: '#/components/schemas/IpAccessSettingsList'
            - description: The IP access settings.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/PaginationToken'
            - description: The pagination token used to retrieve the next page of results for this operation.
    ListNetworkSettingsResponse:
      type: object
      properties:
        networkSettings:
          allOf:
            - $ref: '#/components/schemas/NetworkSettingsList'
            - description: The network settings.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/PaginationToken'
            - description: The pagination token used to retrieve the next page of results for this operation.
    ListPortalsResponse:
      type: object
      properties:
        nextToken:
          allOf:
            - $ref: '#/components/schemas/PaginationToken'
            - description: 'The pagination token used to retrieve the next page of results for this operation. '
        portals:
          allOf:
            - $ref: '#/components/schemas/PortalList'
            - description: The portals in the list.
    ListTagsForResourceResponse:
      type: object
      properties:
        tags:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The tags of the resource.
    ListTrustStoreCertificatesResponse:
      type: object
      properties:
        certificateList:
          allOf:
            - $ref: '#/components/schemas/CertificateSummaryList'
            - description: The certificate list.
        nextToken:
          allOf:
            - $ref: '#/components/schemas/PaginationToken'
            - description: The pagination token used to retrieve the next page of results for this operation.&gt;
        trustStoreArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The ARN of the trust store.
    ListTrustStoresResponse:
      type: object
      properties:
        nextToken:
          allOf:
            - $ref: '#/components/schemas/PaginationToken'
            - description: The pagination token used to retrieve the next page of results for this operation.
        trustStores:
          allOf:
            - $ref: '#/components/schemas/TrustStoreSummaryList'
            - description: The trust stores.
    ListUserAccessLoggingSettingsResponse:
      type: object
      properties:
        nextToken:
          allOf:
            - $ref: '#/components/schemas/PaginationToken'
            - description: The pagination token used to retrieve the next page of results for this operation.
        userAccessLoggingSettings:
          allOf:
            - $ref: '#/components/schemas/UserAccessLoggingSettingsList'
            - description: The user access logging settings.
    ListUserSettingsResponse:
      type: object
      properties:
        nextToken:
          allOf:
            - $ref: '#/components/schemas/PaginationToken'
            - description: 'The pagination token used to retrieve the next page of results for this operation. '
        userSettings:
          allOf:
            - $ref: '#/components/schemas/UserSettingsList'
            - description: The user settings.
    TagResourceResponse:
      type: object
      properties: {}
    TooManyTagsException: {}
    UntagResourceResponse:
      type: object
      properties: {}
    TagKey:
      type: string
      pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
      minLength: 1
      maxLength: 128
      format: password
    UpdateBrowserSettingsResponse:
      type: object
      required:
        - browserSettings
      properties:
        browserSettings:
          allOf:
            - $ref: '#/components/schemas/BrowserSettings'
            - description: The browser settings.
    UpdateIdentityProviderResponse:
      type: object
      required:
        - identityProvider
      properties:
        identityProvider:
          allOf:
            - $ref: '#/components/schemas/IdentityProvider'
            - description: The identity provider.
    UpdateIpAccessSettingsResponse:
      type: object
      required:
        - ipAccessSettings
      properties:
        ipAccessSettings:
          allOf:
            - $ref: '#/components/schemas/IpAccessSettings'
            - description: The IP access settings.
    UpdateNetworkSettingsResponse:
      type: object
      required:
        - networkSettings
      properties:
        networkSettings:
          allOf:
            - $ref: '#/components/schemas/NetworkSettings'
            - description: The network settings.
    UpdatePortalResponse:
      type: object
      properties:
        portal:
          allOf:
            - $ref: '#/components/schemas/Portal'
            - description: The web portal.
    UpdateTrustStoreResponse:
      type: object
      required:
        - trustStoreArn
      properties:
        trustStoreArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The ARN of the trust store.
    CertificateThumbprint:
      type: string
      pattern: '^[A-Fa-f0-9]{64}$'
      minLength: 64
      maxLength: 64
    UpdateUserAccessLoggingSettingsResponse:
      type: object
      required:
        - userAccessLoggingSettings
      properties:
        userAccessLoggingSettings:
          allOf:
            - $ref: '#/components/schemas/UserAccessLoggingSettings'
            - description: The user access logging settings.
    UpdateUserSettingsResponse:
      type: object
      required:
        - userSettings
      properties:
        userSettings:
          allOf:
            - $ref: '#/components/schemas/UserSettings'
            - description: The user settings.
    ARN:
      type: string
      pattern: '^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$'
      minLength: 20
      maxLength: 2048
    ArnList:
      type: array
      items:
        $ref: '#/components/schemas/ARN'
    AssociateBrowserSettingsRequest:
      type: object
      title: AssociateBrowserSettingsRequest
      properties: {}
    AssociateIpAccessSettingsRequest:
      type: object
      title: AssociateIpAccessSettingsRequest
      properties: {}
    AssociateNetworkSettingsRequest:
      type: object
      title: AssociateNetworkSettingsRequest
      properties: {}
    AssociateTrustStoreRequest:
      type: object
      title: AssociateTrustStoreRequest
      properties: {}
    AssociateUserAccessLoggingSettingsRequest:
      type: object
      title: AssociateUserAccessLoggingSettingsRequest
      properties: {}
    AssociateUserSettingsRequest:
      type: object
      title: AssociateUserSettingsRequest
      properties: {}
    AuthenticationType:
      type: string
      enum:
        - Standard
        - IAM_Identity_Center
    BrowserPolicy:
      type: string
      pattern: '\{[\S\s]*\}\s*'
      minLength: 2
      maxLength: 131072
      format: password
    BrowserSettings:
      type: object
      required:
        - browserSettingsArn
      properties:
        associatedPortalArns:
          allOf:
            - $ref: '#/components/schemas/ArnList'
            - description: A list of web portal ARNs that this browser settings is associated with.
        browserPolicy:
          allOf:
            - $ref: '#/components/schemas/BrowserPolicy'
            - description: A JSON string containing Chrome Enterprise policies that will be applied to all streaming sessions.
        browserSettingsArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The ARN of the browser settings.
      description: 'The browser settings resource that can be associated with a web portal. Once associated with a web portal, browser settings control how the browser will behave once a user starts a streaming session for the web portal. '
    BrowserSettingsSummary:
      type: object
      properties:
        browserSettingsArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The ARN of the browser settings.
      description: The summary for browser settings.
    BrowserSettingsList:
      type: array
      items:
        $ref: '#/components/schemas/BrowserSettingsSummary'
    BrowserType:
      type: string
      enum:
        - Chrome
    CertificatePrincipal:
      type: string
      pattern: ^\S+$
      minLength: 1
      maxLength: 256
    Timestamp:
      type: string
      format: date-time
    Certificate:
      type: object
      properties:
        body:
          allOf:
            - $ref: '#/components/schemas/CertificateAuthorityBody'
            - description: The body of the certificate.
        issuer:
          allOf:
            - $ref: '#/components/schemas/CertificatePrincipal'
            - description: The entity that issued the certificate.
        notValidAfter:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The certificate is not valid after this date.
        notValidBefore:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The certificate is not valid before this date.
        subject:
          allOf:
            - $ref: '#/components/schemas/CertificatePrincipal'
            - description: The entity the certificate belongs to.
        thumbprint:
          allOf:
            - $ref: '#/components/schemas/CertificateThumbprint'
            - description: A hexadecimal identifier for the certificate.
      description: The certificate.
    CertificateList:
      type: array
      items:
        $ref: '#/components/schemas/CertificateAuthorityBody'
    CertificateSummary:
      type: object
      properties:
        issuer:
          allOf:
            - $ref: '#/components/schemas/CertificatePrincipal'
            - description: The entity that issued the certificate.
        notValidAfter:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The certificate is not valid after this date.
        notValidBefore:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The certificate is not valid before this date.
        subject:
          allOf:
            - $ref: '#/components/schemas/CertificatePrincipal'
            - description: The entity the certificate belongs to.
        thumbprint:
          allOf:
            - $ref: '#/components/schemas/CertificateThumbprint'
            - description: A hexadecimal identifier for the certificate.
      description: The summary of the certificate.
    CertificateSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/CertificateSummary'
    CertificateThumbprintList:
      type: array
      items:
        $ref: '#/components/schemas/CertificateThumbprint'
    ClientToken:
      type: string
      minLength: 1
      maxLength: 512
    EncryptionContextMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/StringType'
    keyArn:
      type: string
      pattern: '^arn:[\w+=\/,.@-]+:kms:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:key\/[a-zA-Z0-9-]+$'
      minLength: 20
      maxLength: 2048
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
      minItems: 0
      maxItems: 200
    CreateBrowserSettingsRequest:
      type: object
      required:
        - browserPolicy
      title: CreateBrowserSettingsRequest
      properties:
        additionalEncryptionContext:
          allOf:
            - $ref: '#/components/schemas/EncryptionContextMap'
            - description: Additional encryption context of the browser settings.
        browserPolicy:
          allOf:
            - $ref: '#/components/schemas/BrowserPolicy'
            - description: A JSON string containing Chrome Enterprise policies that will be applied to all streaming sessions.
        clientToken:
          allOf:
            - $ref: '#/components/schemas/ClientToken'
            - description: '<p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token returns the result from the original successful request.</p> <p>If you do not specify a client token, one is automatically generated by the AWS SDK. </p>'
        customerManagedKey:
          allOf:
            - $ref: '#/components/schemas/keyArn'
            - description: The custom managed key of the browser settings.
        tags:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The tags to add to the browser settings resource. A tag is a key-value pair.
    IdentityProviderDetails:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/StringType'
    IdentityProviderName:
      type: string
      pattern: '^[^_][\p{L}\p{M}\p{S}\p{N}\p{P}][^_]+$'
      minLength: 1
      maxLength: 32
      format: password
    IdentityProviderType:
      type: string
      enum:
        - SAML
        - Facebook
        - Google
        - LoginWithAmazon
        - SignInWithApple
        - OIDC
    CreateIdentityProviderRequest:
      type: object
      required:
        - identityProviderDetails
        - identityProviderName
        - identityProviderType
        - portalArn
      title: CreateIdentityProviderRequest
      properties:
        clientToken:
          allOf:
            - $ref: '#/components/schemas/ClientToken'
            - description: '<p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token returns the result from the original successful request.</p> <p>If you do not specify a client token, one is automatically generated by the AWS SDK.</p>'
        identityProviderDetails:
          allOf:
            - $ref: '#/components/schemas/IdentityProviderDetails'
            - description: '<p>The identity provider details. The following list describes the provider detail keys for each identity provider type. </p> <ul> <li> <p>For Google and Login with Amazon:</p> <ul> <li> <p> <code>client_id</code> </p> </li> <li> <p> <code>client_secret</code> </p> </li> <li> <p> <code>authorize_scopes</code> </p> </li> </ul> </li> <li> <p>For Facebook:</p> <ul> <li> <p> <code>client_id</code> </p> </li> <li> <p> <code>client_secret</code> </p> </li> <li> <p> <code>authorize_scopes</code> </p> </li> <li> <p> <code>api_version</code> </p> </li> </ul> </li> <li> <p>For Sign in with Apple:</p> <ul> <li> <p> <code>client_id</code> </p> </li> <li> <p> <code>team_id</code> </p> </li> <li> <p> <code>key_id</code> </p> </li> <li> <p> <code>private_key</code> </p> </li> <li> <p> <code>authorize_scopes</code> </p> </li> </ul> </li> <li> <p>For OIDC providers:</p> <ul> <li> <p> <code>client_id</code> </p> </li> <li> <p> <code>client_secret</code> </p> </li> <li> <p> <code>attributes_request_method</code> </p> </li> <li> <p> <code>oidc_issuer</code> </p> </li> <li> <p> <code>authorize_scopes</code> </p> </li> <li> <p> <code>authorize_url</code> <i>if not available from discovery URL specified by <code>oidc_issuer</code> key</i> </p> </li> <li> <p> <code>token_url</code> <i>if not available from discovery URL specified by <code>oidc_issuer</code> key</i> </p> </li> <li> <p> <code>attributes_url</code> <i>if not available from discovery URL specified by <code>oidc_issuer</code> key</i> </p> </li> <li> <p> <code>jwks_uri</code> <i>if not available from discovery URL specified by <code>oidc_issuer</code> key</i> </p> </li> </ul> </li> <li> <p>For SAML providers:</p> <ul> <li> <p> <code>MetadataFile</code> OR <code>MetadataURL</code> </p> </li> <li> <p> <code>IDPSignout</code> (boolean) <i>optional</i> </p> </li> </ul> </li> </ul>'
        identityProviderName:
          allOf:
            - $ref: '#/components/schemas/IdentityProviderName'
            - description: The identity provider name.
        identityProviderType:
          allOf:
            - $ref: '#/components/schemas/IdentityProviderType'
            - description: The identity provider type.
        portalArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The ARN of the web portal.
    Description:
      type: string
      pattern: ^.+$
      minLength: 1
      maxLength: 256
      format: password
    DisplayName:
      type: string
      pattern: ^.+$
      minLength: 1
      maxLength: 64
      format: password
    IpRuleList:
      type: array
      items:
        $ref: '#/components/schemas/IpRule'
      minItems: 1
      maxItems: 100
    CreateIpAccessSettingsRequest:
      type: object
      required:
        - ipRules
      title: CreateIpAccessSettingsRequest
      properties:
        additionalEncryptionContext:
          allOf:
            - $ref: '#/components/schemas/EncryptionContextMap'
            - description: Additional encryption context of the IP access settings.
        clientToken:
          allOf:
            - $ref: '#/components/schemas/ClientToken'
            - description: '<p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token returns the result from the original successful request. </p> <p>If you do not specify a client token, one is automatically generated by the AWS SDK.</p>'
        customerManagedKey:
          allOf:
            - $ref: '#/components/schemas/keyArn'
            - description: The custom managed key of the IP access settings.
        description:
          allOf:
            - $ref: '#/components/schemas/Description'
            - description: The description of the IP access settings.
        displayName:
          allOf:
            - $ref: '#/components/schemas/DisplayName'
            - description: The display name of the IP access settings.
        ipRules:
          allOf:
            - $ref: '#/components/schemas/IpRuleList'
            - description: The IP rules of the IP access settings.
        tags:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The tags to add to the browser settings resource. A tag is a key-value pair.
    SecurityGroupIdList:
      type: array
      items:
        $ref: '#/components/schemas/SecurityGroupId'
      minItems: 1
      maxItems: 5
    SubnetIdList:
      type: array
      items:
        $ref: '#/components/schemas/SubnetId'
      minItems: 2
      maxItems: 3
    VpcId:
      type: string
      pattern: '^vpc-[0-9a-z]*$'
      minLength: 1
      maxLength: 255
    CreateNetworkSettingsRequest:
      type: object
      required:
        - securityGroupIds
        - subnetIds
        - vpcId
      title: CreateNetworkSettingsRequest
      properties:
        clientToken:
          allOf:
            - $ref: '#/components/schemas/ClientToken'
            - description: '<p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token returns the result from the original successful request. </p> <p>If you do not specify a client token, one is automatically generated by the AWS SDK.</p>'
        securityGroupIds:
          allOf:
            - $ref: '#/components/schemas/SecurityGroupIdList'
            - description: One or more security groups used to control access from streaming instances to your VPC.
        subnetIds:
          allOf:
            - $ref: '#/components/schemas/SubnetIdList'
            - description: The subnets in which network interfaces are created to connect streaming instances to your VPC. At least two of these subnets must be in different availability zones.
        tags:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The tags to add to the network settings resource. A tag is a key-value pair.
        vpcId:
          allOf:
            - $ref: '#/components/schemas/VpcId'
            - description: The VPC that streaming instances will connect to.
    CreatePortalRequest:
      type: object
      title: CreatePortalRequest
      properties:
        additionalEncryptionContext:
          allOf:
            - $ref: '#/components/schemas/EncryptionContextMap'
            - description: The additional encryption context of the portal.
        authenticationType:
          allOf:
            - $ref: '#/components/schemas/AuthenticationType'
            - description: '<p>The type of authentication integration points used when signing into the web portal. Defaults to <code>Standard</code>.</p> <p> <code>Standard</code> web portals are authenticated directly through your identity provider. You need to call <code>CreateIdentityProvider</code> to integrate your identity provider with your web portal. User and group access to your web portal is controlled through your identity provider.</p> <p> <code>IAM_Identity_Center</code> web portals are authenticated through AWS IAM Identity Center (successor to AWS Single Sign-On). They provide additional features, such as IdP-initiated authentication. Identity sources (including external identity provider integration), plus user and group access to your web portal, can be configured in the IAM Identity Center.</p>'
        clientToken:
          allOf:
            - $ref: '#/components/schemas/ClientToken'
            - description: '<p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token returns the result from the original successful request. </p> <p>If you do not specify a client token, one is automatically generated by the AWS SDK.</p>'
        customerManagedKey:
          allOf:
            - $ref: '#/components/schemas/keyArn'
            - description: The customer managed key of the web portal.
        displayName:
          allOf:
            - $ref: '#/components/schemas/DisplayName'
            - description: The name of the web portal. This is not visible to users who log into the web portal.
        tags:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The tags to add to the web portal. A tag is a key-value pair.
    PortalEndpoint:
      type: string
      pattern: '^[a-zA-Z0-9]?((?!-)([A-Za-z0-9-]*[A-Za-z0-9])\.)+[a-zA-Z0-9]+$'
      minLength: 1
      maxLength: 253
    CreateTrustStoreRequest:
      type: object
      required:
        - certificateList
      title: CreateTrustStoreRequest
      properties:
        certificateList:
          allOf:
            - $ref: '#/components/schemas/CertificateList'
            - description: A list of CA certificates to be added to the trust store.
        clientToken:
          allOf:
            - $ref: '#/components/schemas/ClientToken'
            - description: '<p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token returns the result from the original successful request. </p> <p>If you do not specify a client token, one is automatically generated by the AWS SDK.</p>'
        tags:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The tags to add to the trust store. A tag is a key-value pair.
    KinesisStreamArn:
      type: string
      pattern: 'arn:[\w+=/,.@-]+:kinesis:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:stream/.+'
      description: Kinesis stream ARN to which log events are published.
      minLength: 20
      maxLength: 2048
    CreateUserAccessLoggingSettingsRequest:
      type: object
      required:
        - kinesisStreamArn
      title: CreateUserAccessLoggingSettingsRequest
      properties:
        clientToken:
          allOf:
            - $ref: '#/components/schemas/ClientToken'
            - description: '<p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token returns the result from the original successful request. </p> <p>If you do not specify a client token, one is automatically generated by the AWS SDK.</p>'
        kinesisStreamArn:
          allOf:
            - $ref: '#/components/schemas/KinesisStreamArn'
            - description: The ARN of the Kinesis stream.
        tags:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The tags to add to the user settings resource. A tag is a key-value pair.
    EnabledType:
      type: string
      enum:
        - Disabled
        - Enabled
    DisconnectTimeoutInMinutes:
      type: integer
      minimum: 1
      maximum: 600
    IdleDisconnectTimeoutInMinutes:
      type: integer
      minimum: 0
      maximum: 60
    CreateUserSettingsRequest:
      type: object
      required:
        - copyAllowed
        - downloadAllowed
        - pasteAllowed
        - printAllowed
        - uploadAllowed
      title: CreateUserSettingsRequest
      properties:
        clientToken:
          allOf:
            - $ref: '#/components/schemas/ClientToken'
            - description: '<p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token returns the result from the original successful request. </p> <p>If you do not specify a client token, one is automatically generated by the AWS SDK.</p>'
        copyAllowed:
          allOf:
            - $ref: '#/components/schemas/EnabledType'
            - description: Specifies whether the user can copy text from the streaming session to the local device.
        disconnectTimeoutInMinutes:
          allOf:
            - $ref: '#/components/schemas/DisconnectTimeoutInMinutes'
            - description: The amount of time that a streaming session remains active after users disconnect.
        downloadAllowed:
          allOf:
            - $ref: '#/components/schemas/EnabledType'
            - description: Specifies whether the user can download files from the streaming session to the local device.
        idleDisconnectTimeoutInMinutes:
          allOf:
            - $ref: '#/components/schemas/IdleDisconnectTimeoutInMinutes'
            - description: The amount of time that users can be idle (inactive) before they are disconnected from their streaming session and the disconnect timeout interval begins.
        pasteAllowed:
          allOf:
            - $ref: '#/components/schemas/EnabledType'
            - description: Specifies whether the user can paste text from the local device to the streaming session.
        printAllowed:
          allOf:
            - $ref: '#/components/schemas/EnabledType'
            - description: Specifies whether the user can print to the local device.
        tags:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The tags to add to the user settings resource. A tag is a key-value pair.
        uploadAllowed:
          allOf:
            - $ref: '#/components/schemas/EnabledType'
            - description: Specifies whether the user can upload files from the local device to the streaming session.
    DeleteBrowserSettingsRequest:
      type: object
      title: DeleteBrowserSettingsRequest
      properties: {}
    DeleteIdentityProviderRequest:
      type: object
      title: DeleteIdentityProviderRequest
      properties: {}
    DeleteIpAccessSettingsRequest:
      type: object
      title: DeleteIpAccessSettingsRequest
      properties: {}
    DeleteNetworkSettingsRequest:
      type: object
      title: DeleteNetworkSettingsRequest
      properties: {}
    DeletePortalRequest:
      type: object
      title: DeletePortalRequest
      properties: {}
    DeleteTrustStoreRequest:
      type: object
      title: DeleteTrustStoreRequest
      properties: {}
    DeleteUserAccessLoggingSettingsRequest:
      type: object
      title: DeleteUserAccessLoggingSettingsRequest
      properties: {}
    DeleteUserSettingsRequest:
      type: object
      title: DeleteUserSettingsRequest
      properties: {}
    DisassociateBrowserSettingsRequest:
      type: object
      title: DisassociateBrowserSettingsRequest
      properties: {}
    DisassociateIpAccessSettingsRequest:
      type: object
      title: DisassociateIpAccessSettingsRequest
      properties: {}
    DisassociateNetworkSettingsRequest:
      type: object
      title: DisassociateNetworkSettingsRequest
      properties: {}
    DisassociateTrustStoreRequest:
      type: object
      title: DisassociateTrustStoreRequest
      properties: {}
    DisassociateUserAccessLoggingSettingsRequest:
      type: object
      title: DisassociateUserAccessLoggingSettingsRequest
      properties: {}
    DisassociateUserSettingsRequest:
      type: object
      title: DisassociateUserSettingsRequest
      properties: {}
    GetBrowserSettingsRequest:
      type: object
      title: GetBrowserSettingsRequest
      properties: {}
    GetIdentityProviderRequest:
      type: object
      title: GetIdentityProviderRequest
      properties: {}
    IdentityProvider:
      type: object
      required:
        - identityProviderArn
      properties:
        identityProviderArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The ARN of the identity provider.
        identityProviderDetails:
          allOf:
            - $ref: '#/components/schemas/IdentityProviderDetails'
            - description: '<p>The identity provider details. The following list describes the provider detail keys for each identity provider type. </p> <ul> <li> <p>For Google and Login with Amazon:</p> <ul> <li> <p> <code>client_id</code> </p> </li> <li> <p> <code>client_secret</code> </p> </li> <li> <p> <code>authorize_scopes</code> </p> </li> </ul> </li> <li> <p>For Facebook:</p> <ul> <li> <p> <code>client_id</code> </p> </li> <li> <p> <code>client_secret</code> </p> </li> <li> <p> <code>authorize_scopes</code> </p> </li> <li> <p> <code>api_version</code> </p> </li> </ul> </li> <li> <p>For Sign in with Apple:</p> <ul> <li> <p> <code>client_id</code> </p> </li> <li> <p> <code>team_id</code> </p> </li> <li> <p> <code>key_id</code> </p> </li> <li> <p> <code>private_key</code> </p> </li> <li> <p> <code>authorize_scopes</code> </p> </li> </ul> </li> <li> <p>For OIDC providers:</p> <ul> <li> <p> <code>client_id</code> </p> </li> <li> <p> <code>client_secret</code> </p> </li> <li> <p> <code>attributes_request_method</code> </p> </li> <li> <p> <code>oidc_issuer</code> </p> </li> <li> <p> <code>authorize_scopes</code> </p> </li> <li> <p> <code>authorize_url</code> <i>if not available from discovery URL specified by oidc_issuer key</i> </p> </li> <li> <p> <code>token_url</code> <i>if not available from discovery URL specified by oidc_issuer key</i> </p> </li> <li> <p> <code>attributes_url</code> <i>if not available from discovery URL specified by oidc_issuer key</i> </p> </li> <li> <p> <code>jwks_uri</code> <i>if not available from discovery URL specified by oidc_issuer key</i> </p> </li> </ul> </li> <li> <p>For SAML providers:</p> <ul> <li> <p> <code>MetadataFile</code> OR <code>MetadataURL</code> </p> </li> <li> <p> <code>IDPSignout</code> <i>optional</i> </p> </li> </ul> </li> </ul>'
        identityProviderName:
          allOf:
            - $ref: '#/components/schemas/IdentityProviderName'
            - description: The identity provider name.
        identityProviderType:
          allOf:
            - $ref: '#/components/schemas/IdentityProviderType'
            - description: The identity provider type.
      description: The identity provider.
    GetIpAccessSettingsRequest:
      type: object
      title: GetIpAccessSettingsRequest
      properties: {}
    IpAccessSettings:
      type: object
      required:
        - ipAccessSettingsArn
      properties:
        associatedPortalArns:
          allOf:
            - $ref: '#/components/schemas/ArnList'
            - description: A list of web portal ARNs that this IP access settings resource is associated with.
        creationDate:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The creation date timestamp of the IP access settings.
        description:
          allOf:
            - $ref: '#/components/schemas/Description'
            - description: The description of the IP access settings.
        displayName:
          allOf:
            - $ref: '#/components/schemas/DisplayName'
            - description: ' The display name of the IP access settings.'
        ipAccessSettingsArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The ARN of the IP access settings resource.
        ipRules:
          allOf:
            - $ref: '#/components/schemas/IpRuleList'
            - description: The IP rules of the IP access settings.
      description: 'The IP access settings resource that can be associated with a web portal. '
    GetNetworkSettingsRequest:
      type: object
      title: GetNetworkSettingsRequest
      properties: {}
    NetworkSettings:
      type: object
      required:
        - networkSettingsArn
      properties:
        associatedPortalArns:
          allOf:
            - $ref: '#/components/schemas/ArnList'
            - description: A list of web portal ARNs that this network settings is associated with.
        networkSettingsArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The ARN of the network settings.
        securityGroupIds:
          allOf:
            - $ref: '#/components/schemas/SecurityGroupIdList'
            - description: 'One or more security groups used to control access from streaming instances to your VPC. '
        subnetIds:
          allOf:
            - $ref: '#/components/schemas/SubnetIdList'
            - description: The subnets in which network interfaces are created to connect streaming instances to your VPC. At least two of these subnets must be in different availability zones.
        vpcId:
          allOf:
            - $ref: '#/components/schemas/VpcId'
            - description: The VPC that streaming instances will connect to.
      description: 'A network settings resource that can be associated with a web portal. Once associated with a web portal, network settings define how streaming instances will connect with your specified VPC. '
    GetPortalRequest:
      type: object
      title: GetPortalRequest
      properties: {}
    Portal:
      type: object
      properties:
        authenticationType:
          allOf:
            - $ref: '#/components/schemas/AuthenticationType'
            - description: '<p>The type of authentication integration points used when signing into the web portal. Defaults to <code>Standard</code>.</p> <p> <code>Standard</code> web portals are authenticated directly through your identity provider. You need to call <code>CreateIdentityProvider</code> to integrate your identity provider with your web portal. User and group access to your web portal is controlled through your identity provider.</p> <p> <code>IAM_Identity_Center</code> web portals are authenticated through AWS IAM Identity Center (successor to AWS Single Sign-On). They provide additional features, such as IdP-initiated authentication. Identity sources (including external identity provider integration), plus user and group access to your web portal, can be configured in the IAM Identity Center.</p>'
        browserSettingsArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The ARN of the browser settings that is associated with this web portal.
        browserType:
          allOf:
            - $ref: '#/components/schemas/BrowserType'
            - description: The browser that users see when using a streaming session.
        creationDate:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The creation date of the web portal.
        displayName:
          allOf:
            - $ref: '#/components/schemas/DisplayName'
            - description: The name of the web portal.
        ipAccessSettingsArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The ARN of the IP access settings.
        networkSettingsArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The ARN of the network settings that is associated with the web portal.
        portalArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The ARN of the web portal.
        portalEndpoint:
          allOf:
            - $ref: '#/components/schemas/PortalEndpoint'
            - description: The endpoint URL of the web portal that users access in order to start streaming sessions.
        portalStatus:
          allOf:
            - $ref: '#/components/schemas/PortalStatus'
            - description: The status of the web portal.
        rendererType:
          allOf:
            - $ref: '#/components/schemas/RendererType'
            - description: The renderer that is used in streaming sessions.
        statusReason:
          allOf:
            - $ref: '#/components/schemas/StatusReason'
            - description: A message that explains why the web portal is in its current status.
        trustStoreArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The ARN of the trust store that is associated with the web portal.
        userAccessLoggingSettingsArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The ARN of the user access logging settings that is associated with the web portal.
        userSettingsArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The ARN of the user settings that is associated with the web portal.
      description: The web portal.
    GetPortalServiceProviderMetadataRequest:
      type: object
      title: GetPortalServiceProviderMetadataRequest
      properties: {}
    SamlMetadata:
      type: string
      pattern: ^.+$
      minLength: 1
      maxLength: 204800
    GetTrustStoreCertificateRequest:
      type: object
      title: GetTrustStoreCertificateRequest
      properties: {}
    GetTrustStoreRequest:
      type: object
      title: GetTrustStoreRequest
      properties: {}
    TrustStore:
      type: object
      properties:
        associatedPortalArns:
          allOf:
            - $ref: '#/components/schemas/ArnList'
            - description: A list of web portal ARNs that this trust store is associated with.
        trustStoreArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The ARN of the trust store.
      description: 'A trust store that can be associated with a web portal. A trust store contains certificate authority (CA) certificates. Once associated with a web portal, the browser in a streaming session will recognize certificates that have been issued using any of the CAs in the trust store. If your organization has internal websites that use certificates issued by private CAs, you should add the private CA certificate to the trust store. '
    GetUserAccessLoggingSettingsRequest:
      type: object
      title: GetUserAccessLoggingSettingsRequest
      properties: {}
    UserAccessLoggingSettings:
      type: object
      required:
        - userAccessLoggingSettingsArn
      properties:
        associatedPortalArns:
          allOf:
            - $ref: '#/components/schemas/ArnList'
            - description: A list of web portal ARNs that this user access logging settings is associated with.
        kinesisStreamArn:
          allOf:
            - $ref: '#/components/schemas/KinesisStreamArn'
            - description: The ARN of the Kinesis stream.
        userAccessLoggingSettingsArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The ARN of the user access logging settings.
      description: A user access logging settings resource that can be associated with a web portal.
    GetUserSettingsRequest:
      type: object
      title: GetUserSettingsRequest
      properties: {}
    UserSettings:
      type: object
      required:
        - userSettingsArn
      properties:
        associatedPortalArns:
          allOf:
            - $ref: '#/components/schemas/ArnList'
            - description: A list of web portal ARNs that this user settings is associated with.
        copyAllowed:
          allOf:
            - $ref: '#/components/schemas/EnabledType'
            - description: Specifies whether the user can copy text from the streaming session to the local device.
        disconnectTimeoutInMinutes:
          allOf:
            - $ref: '#/components/schemas/DisconnectTimeoutInMinutes'
            - description: The amount of time that a streaming session remains active after users disconnect.
        downloadAllowed:
          allOf:
            - $ref: '#/components/schemas/EnabledType'
            - description: Specifies whether the user can download files from the streaming session to the local device.
        idleDisconnectTimeoutInMinutes:
          allOf:
            - $ref: '#/components/schemas/IdleDisconnectTimeoutInMinutes'
            - description: The amount of time that users can be idle (inactive) before they are disconnected from their streaming session and the disconnect timeout interval begins.
        pasteAllowed:
          allOf:
            - $ref: '#/components/schemas/EnabledType'
            - description: Specifies whether the user can paste text from the local device to the streaming session.
        printAllowed:
          allOf:
            - $ref: '#/components/schemas/EnabledType'
            - description: Specifies whether the user can print to the local device.
        uploadAllowed:
          allOf:
            - $ref: '#/components/schemas/EnabledType'
            - description: Specifies whether the user can upload files from the local device to the streaming session.
        userSettingsArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The ARN of the user settings.
      description: 'A user settings resource that can be associated with a web portal. Once associated with a web portal, user settings control how users can transfer data between a streaming session and the their local devices. '
    IdentityProviderSummary:
      type: object
      properties:
        identityProviderArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The ARN of the identity provider.
        identityProviderName:
          allOf:
            - $ref: '#/components/schemas/IdentityProviderName'
            - description: The identity provider name.
        identityProviderType:
          allOf:
            - $ref: '#/components/schemas/IdentityProviderType'
            - description: The identity provider type.
      description: The summary of the identity provider.
    IdentityProviderList:
      type: array
      items:
        $ref: '#/components/schemas/IdentityProviderSummary'
    IpAccessSettingsSummary:
      type: object
      properties:
        creationDate:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The creation date timestamp of the IP access settings.
        description:
          allOf:
            - $ref: '#/components/schemas/Description'
            - description: The description of the IP access settings.
        displayName:
          allOf:
            - $ref: '#/components/schemas/DisplayName'
            - description: The display name of the IP access settings.
        ipAccessSettingsArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The ARN of IP access settings.
      description: The summary of IP access settings.
    IpAccessSettingsList:
      type: array
      items:
        $ref: '#/components/schemas/IpAccessSettingsSummary'
    IpRange:
      type: string
      pattern: '^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}(?:/([0-9]|[12][0-9]|3[0-2])|)$'
      description: A single IP address or an IP address range in CIDR notation
      format: password
    MaxResults:
      type: integer
      minimum: 1
    PaginationToken:
      type: string
      pattern: ^\S+$
      minLength: 1
      maxLength: 2048
    ListBrowserSettingsRequest:
      type: object
      title: ListBrowserSettingsRequest
      properties: {}
    ListIdentityProvidersRequest:
      type: object
      title: ListIdentityProvidersRequest
      properties: {}
    ListIpAccessSettingsRequest:
      type: object
      title: ListIpAccessSettingsRequest
      properties: {}
    ListNetworkSettingsRequest:
      type: object
      title: ListNetworkSettingsRequest
      properties: {}
    NetworkSettingsList:
      type: array
      items:
        $ref: '#/components/schemas/NetworkSettingsSummary'
    ListPortalsRequest:
      type: object
      title: ListPortalsRequest
      properties: {}
    PortalList:
      type: array
      items:
        $ref: '#/components/schemas/PortalSummary'
    ListTagsForResourceRequest:
      type: object
      title: ListTagsForResourceRequest
      properties: {}
    ListTrustStoreCertificatesRequest:
      type: object
      title: ListTrustStoreCertificatesRequest
      properties: {}
    ListTrustStoresRequest:
      type: object
      title: ListTrustStoresRequest
      properties: {}
    TrustStoreSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/TrustStoreSummary'
    ListUserAccessLoggingSettingsRequest:
      type: object
      title: ListUserAccessLoggingSettingsRequest
      properties: {}
    UserAccessLoggingSettingsList:
      type: array
      items:
        $ref: '#/components/schemas/UserAccessLoggingSettingsSummary'
    ListUserSettingsRequest:
      type: object
      title: ListUserSettingsRequest
      properties: {}
    UserSettingsList:
      type: array
      items:
        $ref: '#/components/schemas/UserSettingsSummary'
    NetworkSettingsSummary:
      type: object
      properties:
        networkSettingsArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The ARN of the network settings.
        vpcId:
          allOf:
            - $ref: '#/components/schemas/VpcId'
            - description: The VPC ID of the network settings.
      description: The summary of network settings.
    PortalStatus:
      type: string
      enum:
        - Incomplete
        - Pending
        - Active
    RendererType:
      type: string
      enum:
        - AppStream
    StatusReason:
      type: string
      pattern: .*
      minLength: 1
      maxLength: 1024
    PortalSummary:
      type: object
      properties:
        authenticationType:
          allOf:
            - $ref: '#/components/schemas/AuthenticationType'
            - description: '<p>The type of authentication integration points used when signing into the web portal. Defaults to <code>Standard</code>.</p> <p> <code>Standard</code> web portals are authenticated directly through your identity provider. You need to call <code>CreateIdentityProvider</code> to integrate your identity provider with your web portal. User and group access to your web portal is controlled through your identity provider.</p> <p> <code>IAM_Identity_Center</code> web portals are authenticated through AWS IAM Identity Center (successor to AWS Single Sign-On). They provide additional features, such as IdP-initiated authentication. Identity sources (including external identity provider integration), plus user and group access to your web portal, can be configured in the IAM Identity Center.</p>'
        browserSettingsArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The ARN of the browser settings that is associated with the web portal.
        browserType:
          allOf:
            - $ref: '#/components/schemas/BrowserType'
            - description: The browser type of the web portal.
        creationDate:
          allOf:
            - $ref: '#/components/schemas/Timestamp'
            - description: The creation date of the web portal.
        displayName:
          allOf:
            - $ref: '#/components/schemas/DisplayName'
            - description: The name of the web portal.
        ipAccessSettingsArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The ARN of the IP access settings.
        networkSettingsArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The ARN of the network settings that is associated with the web portal.
        portalArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The ARN of the web portal.
        portalEndpoint:
          allOf:
            - $ref: '#/components/schemas/PortalEndpoint'
            - description: The endpoint URL of the web portal that users access in order to start streaming sessions.
        portalStatus:
          allOf:
            - $ref: '#/components/schemas/PortalStatus'
            - description: The status of the web portal.
        rendererType:
          allOf:
            - $ref: '#/components/schemas/RendererType'
            - description: The renderer that is used in streaming sessions.
        trustStoreArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The ARN of the trust that is associated with this web portal.
        userAccessLoggingSettingsArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The ARN of the user access logging settings that is associated with the web portal.
        userSettingsArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The ARN of the user settings that is associated with the web portal.
      description: The summary of the portal.
    TagValue:
      type: string
      pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
      minLength: 0
      maxLength: 256
      format: password
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
      minItems: 0
      maxItems: 200
    TagResourceRequest:
      type: object
      required:
        - tags
      title: TagResourceRequest
      properties:
        clientToken:
          allOf:
            - $ref: '#/components/schemas/ClientToken'
            - description: '<p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token returns the result from the original successful request. </p> <p>If you do not specify a client token, one is automatically generated by the AWS SDK.</p>'
        tags:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: The tags of the resource.
    TrustStoreSummary:
      type: object
      properties:
        trustStoreArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The ARN of the trust store.
      description: The summary of the trust store.
    UntagResourceRequest:
      type: object
      title: UntagResourceRequest
      properties: {}
    UpdateBrowserSettingsRequest:
      type: object
      title: UpdateBrowserSettingsRequest
      properties:
        browserPolicy:
          allOf:
            - $ref: '#/components/schemas/BrowserPolicy'
            - description: 'A JSON string containing Chrome Enterprise policies that will be applied to all streaming sessions. '
        clientToken:
          allOf:
            - $ref: '#/components/schemas/ClientToken'
            - description: '<p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token return the result from the original successful request. </p> <p>If you do not specify a client token, one is automatically generated by the AWS SDK.</p>'
    UpdateIdentityProviderRequest:
      type: object
      title: UpdateIdentityProviderRequest
      properties:
        clientToken:
          allOf:
            - $ref: '#/components/schemas/ClientToken'
            - description: '<p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token return the result from the original successful request. </p> <p>If you do not specify a client token, one is automatically generated by the AWS SDK.</p>'
        identityProviderDetails:
          allOf:
            - $ref: '#/components/schemas/IdentityProviderDetails'
            - description: '<p>The details of the identity provider. The following list describes the provider detail keys for each identity provider type. </p> <ul> <li> <p>For Google and Login with Amazon:</p> <ul> <li> <p> <code>client_id</code> </p> </li> <li> <p> <code>client_secret</code> </p> </li> <li> <p> <code>authorize_scopes</code> </p> </li> </ul> </li> <li> <p>For Facebook:</p> <ul> <li> <p> <code>client_id</code> </p> </li> <li> <p> <code>client_secret</code> </p> </li> <li> <p> <code>authorize_scopes</code> </p> </li> <li> <p> <code>api_version</code> </p> </li> </ul> </li> <li> <p>For Sign in with Apple:</p> <ul> <li> <p> <code>client_id</code> </p> </li> <li> <p> <code>team_id</code> </p> </li> <li> <p> <code>key_id</code> </p> </li> <li> <p> <code>private_key</code> </p> </li> <li> <p> <code>authorize_scopes</code> </p> </li> </ul> </li> <li> <p>For OIDC providers:</p> <ul> <li> <p> <code>client_id</code> </p> </li> <li> <p> <code>client_secret</code> </p> </li> <li> <p> <code>attributes_request_method</code> </p> </li> <li> <p> <code>oidc_issuer</code> </p> </li> <li> <p> <code>authorize_scopes</code> </p> </li> <li> <p> <code>authorize_url</code> <i>if not available from discovery URL specified by <code>oidc_issuer</code> key</i> </p> </li> <li> <p> <code>token_url</code> <i>if not available from discovery URL specified by <code>oidc_issuer</code> key</i> </p> </li> <li> <p> <code>attributes_url</code> <i>if not available from discovery URL specified by <code>oidc_issuer</code> key</i> </p> </li> <li> <p> <code>jwks_uri</code> <i>if not available from discovery URL specified by <code>oidc_issuer</code> key</i> </p> </li> </ul> </li> <li> <p>For SAML providers:</p> <ul> <li> <p> <code>MetadataFile</code> OR <code>MetadataURL</code> </p> </li> <li> <p> <code>IDPSignout</code> (boolean) <i>optional</i> </p> </li> </ul> </li> </ul>'
        identityProviderName:
          allOf:
            - $ref: '#/components/schemas/IdentityProviderName'
            - description: The name of the identity provider.
        identityProviderType:
          allOf:
            - $ref: '#/components/schemas/IdentityProviderType'
            - description: The type of the identity provider.
    UpdateIpAccessSettingsRequest:
      type: object
      title: UpdateIpAccessSettingsRequest
      properties:
        clientToken:
          allOf:
            - $ref: '#/components/schemas/ClientToken'
            - description: '<p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token return the result from the original successful request. </p> <p>If you do not specify a client token, one is automatically generated by the AWS SDK.</p>'
        description:
          allOf:
            - $ref: '#/components/schemas/Description'
            - description: The description of the IP access settings.
        displayName:
          allOf:
            - $ref: '#/components/schemas/DisplayName'
            - description: The display name of the IP access settings.
        ipRules:
          allOf:
            - $ref: '#/components/schemas/IpRuleList'
            - description: The updated IP rules of the IP access settings.
    UpdateNetworkSettingsRequest:
      type: object
      title: UpdateNetworkSettingsRequest
      properties:
        clientToken:
          allOf:
            - $ref: '#/components/schemas/ClientToken'
            - description: '<p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token return the result from the original successful request. </p> <p>If you do not specify a client token, one is automatically generated by the AWS SDK.</p>'
        securityGroupIds:
          allOf:
            - $ref: '#/components/schemas/SecurityGroupIdList'
            - description: One or more security groups used to control access from streaming instances to your VPC.
        subnetIds:
          allOf:
            - $ref: '#/components/schemas/SubnetIdList'
            - description: The subnets in which network interfaces are created to connect streaming instances to your VPC. At least two of these subnets must be in different availability zones.
        vpcId:
          allOf:
            - $ref: '#/components/schemas/VpcId'
            - description: The VPC that streaming instances will connect to.
    UpdatePortalRequest:
      type: object
      title: UpdatePortalRequest
      properties:
        authenticationType:
          allOf:
            - $ref: '#/components/schemas/AuthenticationType'
            - description: '<p>The type of authentication integration points used when signing into the web portal. Defaults to <code>Standard</code>.</p> <p> <code>Standard</code> web portals are authenticated directly through your identity provider. You need to call <code>CreateIdentityProvider</code> to integrate your identity provider with your web portal. User and group access to your web portal is controlled through your identity provider.</p> <p> <code>IAM_Identity_Center</code> web portals are authenticated through AWS IAM Identity Center (successor to AWS Single Sign-On). They provide additional features, such as IdP-initiated authentication. Identity sources (including external identity provider integration), plus user and group access to your web portal, can be configured in the IAM Identity Center.</p>'
        displayName:
          allOf:
            - $ref: '#/components/schemas/DisplayName'
            - description: The name of the web portal. This is not visible to users who log into the web portal.
    UpdateTrustStoreRequest:
      type: object
      title: UpdateTrustStoreRequest
      properties:
        certificatesToAdd:
          allOf:
            - $ref: '#/components/schemas/CertificateList'
            - description: A list of CA certificates to add to the trust store.
        certificatesToDelete:
          allOf:
            - $ref: '#/components/schemas/CertificateThumbprintList'
            - description: A list of CA certificates to delete from a trust store.
        clientToken:
          allOf:
            - $ref: '#/components/schemas/ClientToken'
            - description: '<p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token return the result from the original successful request. </p> <p>If you do not specify a client token, one is automatically generated by the AWS SDK.</p>'
    UpdateUserAccessLoggingSettingsRequest:
      type: object
      title: UpdateUserAccessLoggingSettingsRequest
      properties:
        clientToken:
          allOf:
            - $ref: '#/components/schemas/ClientToken'
            - description: '<p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token return the result from the original successful request. </p> <p>If you do not specify a client token, one is automatically generated by the AWS SDK.</p>'
        kinesisStreamArn:
          allOf:
            - $ref: '#/components/schemas/KinesisStreamArn'
            - description: The ARN of the Kinesis stream.
    UpdateUserSettingsRequest:
      type: object
      title: UpdateUserSettingsRequest
      properties:
        clientToken:
          allOf:
            - $ref: '#/components/schemas/ClientToken'
            - description: '<p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token return the result from the original successful request. </p> <p>If you do not specify a client token, one is automatically generated by the AWS SDK.</p>'
        copyAllowed:
          allOf:
            - $ref: '#/components/schemas/EnabledType'
            - description: Specifies whether the user can copy text from the streaming session to the local device.
        disconnectTimeoutInMinutes:
          allOf:
            - $ref: '#/components/schemas/DisconnectTimeoutInMinutes'
            - description: The amount of time that a streaming session remains active after users disconnect.
        downloadAllowed:
          allOf:
            - $ref: '#/components/schemas/EnabledType'
            - description: Specifies whether the user can download files from the streaming session to the local device.
        idleDisconnectTimeoutInMinutes:
          allOf:
            - $ref: '#/components/schemas/IdleDisconnectTimeoutInMinutes'
            - description: The amount of time that users can be idle (inactive) before they are disconnected from their streaming session and the disconnect timeout interval begins.
        pasteAllowed:
          allOf:
            - $ref: '#/components/schemas/EnabledType'
            - description: Specifies whether the user can paste text from the local device to the streaming session.
        printAllowed:
          allOf:
            - $ref: '#/components/schemas/EnabledType'
            - description: Specifies whether the user can print to the local device.
        uploadAllowed:
          allOf:
            - $ref: '#/components/schemas/EnabledType'
            - description: Specifies whether the user can upload files from the local device to the streaming session.
    UserAccessLoggingSettingsSummary:
      type: object
      properties:
        kinesisStreamArn:
          allOf:
            - $ref: '#/components/schemas/KinesisStreamArn'
            - description: The ARN of the Kinesis stream.
        userAccessLoggingSettingsArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The ARN of the user access logging settings.
      description: The summary of user access logging settings.
    UserSettingsSummary:
      type: object
      properties:
        copyAllowed:
          allOf:
            - $ref: '#/components/schemas/EnabledType'
            - description: Specifies whether the user can copy text from the streaming session to the local device.
        disconnectTimeoutInMinutes:
          allOf:
            - $ref: '#/components/schemas/DisconnectTimeoutInMinutes'
            - description: The amount of time that a streaming session remains active after users disconnect.
        downloadAllowed:
          allOf:
            - $ref: '#/components/schemas/EnabledType'
            - description: Specifies whether the user can download files from the streaming session to the local device.
        idleDisconnectTimeoutInMinutes:
          allOf:
            - $ref: '#/components/schemas/IdleDisconnectTimeoutInMinutes'
            - description: The amount of time that users can be idle (inactive) before they are disconnected from their streaming session and the disconnect timeout interval begins.
        pasteAllowed:
          allOf:
            - $ref: '#/components/schemas/EnabledType'
            - description: Specifies whether the user can paste text from the local device to the streaming session.
        printAllowed:
          allOf:
            - $ref: '#/components/schemas/EnabledType'
            - description: Specifies whether the user can print to the local device.
        uploadAllowed:
          allOf:
            - $ref: '#/components/schemas/EnabledType'
            - description: Specifies whether the user can upload files from the local device to the streaming session.
        userSettingsArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The ARN of the user settings.
      description: The summary of user settings.
security:
  - hmac: []
