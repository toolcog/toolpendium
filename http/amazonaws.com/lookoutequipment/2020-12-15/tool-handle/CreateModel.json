{
  "name": "CreateModel",
  "description": "<p>Creates an ML model for data inference. </p> <p>A machine-learning (ML) model is a mathematical model that finds patterns in your data. In Amazon Lookout for Equipment, the model learns the patterns of normal behavior and detects abnormal behavior that could be potential equipment failure (or maintenance events). The models are made by analyzing normal data and abnormalities in machine behavior that have already occurred.</p> <p>Your model is trained using a portion of the data from your dataset and uses that data to learn patterns of normal behavior and abnormal patterns that lead to equipment failure. Another portion of the data is used to evaluate the model's accuracy. </p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AWSLookoutEquipmentFrontendService.CreateModel"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/CreateModelRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "CreateModelRequest": {
        "type": "object",
        "required": [
          "ModelName",
          "DatasetName",
          "ClientToken"
        ],
        "title": "CreateModelRequest",
        "properties": {
          "ModelName": {
            "allOf": [
              {
                "$ref": "#/$defs/ModelName"
              },
              {
                "description": "The name for the ML model to be created."
              }
            ]
          },
          "DatasetName": {
            "allOf": [
              {
                "$ref": "#/$defs/DatasetIdentifier"
              },
              {
                "description": "The name of the dataset for the ML model being created. "
              }
            ]
          },
          "DatasetSchema": {
            "allOf": [
              {
                "$ref": "#/$defs/DatasetSchema"
              },
              {
                "description": "The data schema for the ML model being created. "
              }
            ]
          },
          "LabelsInputConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/LabelsInputConfiguration"
              },
              {
                "description": "The input configuration for the labels being used for the ML model that's being created. "
              }
            ]
          },
          "ClientToken": {
            "allOf": [
              {
                "$ref": "#/$defs/IdempotenceToken"
              },
              {
                "description": "A unique identifier for the request. If you do not set the client request token, Amazon Lookout for Equipment generates one. "
              }
            ]
          },
          "TrainingDataStartTime": {
            "allOf": [
              {
                "$ref": "#/$defs/Timestamp"
              },
              {
                "description": "Indicates the time reference in the dataset that should be used to begin the subset of training data for the ML model. "
              }
            ]
          },
          "TrainingDataEndTime": {
            "allOf": [
              {
                "$ref": "#/$defs/Timestamp"
              },
              {
                "description": "Indicates the time reference in the dataset that should be used to end the subset of training data for the ML model. "
              }
            ]
          },
          "EvaluationDataStartTime": {
            "allOf": [
              {
                "$ref": "#/$defs/Timestamp"
              },
              {
                "description": "Indicates the time reference in the dataset that should be used to begin the subset of evaluation data for the ML model. "
              }
            ]
          },
          "EvaluationDataEndTime": {
            "allOf": [
              {
                "$ref": "#/$defs/Timestamp"
              },
              {
                "description": " Indicates the time reference in the dataset that should be used to end the subset of evaluation data for the ML model. "
              }
            ]
          },
          "RoleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/IamRoleArn"
              },
              {
                "description": " The Amazon Resource Name (ARN) of a role with permission to access the data source being used to create the ML model. "
              }
            ]
          },
          "DataPreProcessingConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/DataPreProcessingConfiguration"
              },
              {
                "description": "<p>The configuration is the <code>TargetSamplingRate</code>, which is the sampling rate of the data after post processing by Amazon Lookout for Equipment. For example, if you provide data that has been collected at a 1 second level and you want the system to resample the data at a 1 minute rate before training, the <code>TargetSamplingRate</code> is 1 minute.</p> <p>When providing a value for the <code>TargetSamplingRate</code>, you must attach the prefix \"PT\" to the rate you want. The value for a 1 second rate is therefore <i>PT1S</i>, the value for a 15 minute rate is <i>PT15M</i>, and the value for a 1 hour rate is <i>PT1H</i> </p>"
              }
            ]
          },
          "ServerSideKmsKeyId": {
            "allOf": [
              {
                "$ref": "#/$defs/NameOrArn"
              },
              {
                "description": "Provides the identifier of the KMS key used to encrypt model data by Amazon Lookout for Equipment. "
              }
            ]
          },
          "Tags": {
            "allOf": [
              {
                "$ref": "#/$defs/TagList"
              },
              {
                "description": " Any tags associated with the ML model being created. "
              }
            ]
          },
          "OffCondition": {
            "allOf": [
              {
                "$ref": "#/$defs/OffCondition"
              },
              {
                "description": "Indicates that the asset associated with this sensor has been shut off. As long as this condition is met, Lookout for Equipment will not use data from this asset for training, evaluation, or inference."
              }
            ]
          }
        }
      },
      "ModelName": {
        "type": "string",
        "pattern": "^[0-9a-zA-Z_-]{1,200}$",
        "minLength": 1,
        "maxLength": 200
      },
      "DatasetIdentifier": {
        "type": "string",
        "pattern": "^[0-9a-zA-Z_-]{1,200}$",
        "minLength": 1,
        "maxLength": 200
      },
      "DatasetSchema": {
        "type": "object",
        "properties": {
          "InlineDataSchema": {
            "allOf": [
              {
                "$ref": "#/$defs/InlineDataSchema"
              },
              {
                "description": " "
              }
            ]
          }
        },
        "description": "Provides information about the data schema used with the given dataset. "
      },
      "InlineDataSchema": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1000000
      },
      "LabelsInputConfiguration": {
        "type": "object",
        "properties": {
          "S3InputConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/LabelsS3InputConfiguration"
              },
              {
                "description": "Contains location information for the S3 location being used for label data. "
              }
            ]
          },
          "LabelGroupName": {
            "allOf": [
              {
                "$ref": "#/$defs/LabelGroupName"
              },
              {
                "description": " The name of the label group to be used for label data. "
              }
            ]
          }
        },
        "description": "Contains the configuration information for the S3 location being used to hold label data. "
      },
      "LabelsS3InputConfiguration": {
        "type": "object",
        "required": [
          "Bucket"
        ],
        "properties": {
          "Bucket": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Bucket"
              },
              {
                "description": "The name of the S3 bucket holding the label data. "
              }
            ]
          },
          "Prefix": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Prefix"
              },
              {
                "description": " The prefix for the S3 bucket used for the label data. "
              }
            ]
          }
        },
        "description": "The location information (prefix and bucket name) for the s3 location being used for label data. "
      },
      "S3Bucket": {
        "type": "string",
        "pattern": "^[a-z0-9][\\.\\-a-z0-9]{1,61}[a-z0-9]$",
        "minLength": 3,
        "maxLength": 63
      },
      "S3Prefix": {
        "type": "string",
        "pattern": "(^$)|([\\u0009\\u000A\\u000D\\u0020-\\u00FF]{1,1023}/$)",
        "minLength": 0,
        "maxLength": 1024
      },
      "LabelGroupName": {
        "type": "string",
        "pattern": "^[0-9a-zA-Z_-]{1,200}$",
        "minLength": 1,
        "maxLength": 200
      },
      "IdempotenceToken": {
        "type": "string",
        "pattern": "\\p{ASCII}{1,256}",
        "minLength": 1,
        "maxLength": 256
      },
      "Timestamp": {
        "type": "string",
        "format": "date-time"
      },
      "IamRoleArn": {
        "type": "string",
        "pattern": "arn:aws(-[^:]+)?:iam::[0-9]{12}:role/.+",
        "minLength": 20,
        "maxLength": 2048
      },
      "DataPreProcessingConfiguration": {
        "type": "object",
        "properties": {
          "TargetSamplingRate": {
            "allOf": [
              {
                "$ref": "#/$defs/TargetSamplingRate"
              },
              {
                "description": "<p>The sampling rate of the data after post processing by Amazon Lookout for Equipment. For example, if you provide data that has been collected at a 1 second level and you want the system to resample the data at a 1 minute rate before training, the <code>TargetSamplingRate</code> is 1 minute.</p> <p>When providing a value for the <code>TargetSamplingRate</code>, you must attach the prefix \"PT\" to the rate you want. The value for a 1 second rate is therefore <i>PT1S</i>, the value for a 15 minute rate is <i>PT15M</i>, and the value for a 1 hour rate is <i>PT1H</i> </p>"
              }
            ]
          }
        },
        "description": "<p>The configuration is the <code>TargetSamplingRate</code>, which is the sampling rate of the data after post processing by Amazon Lookout for Equipment. For example, if you provide data that has been collected at a 1 second level and you want the system to resample the data at a 1 minute rate before training, the <code>TargetSamplingRate</code> is 1 minute.</p> <p>When providing a value for the <code>TargetSamplingRate</code>, you must attach the prefix \"PT\" to the rate you want. The value for a 1 second rate is therefore <i>PT1S</i>, the value for a 15 minute rate is <i>PT15M</i>, and the value for a 1 hour rate is <i>PT1H</i> </p>"
      },
      "TargetSamplingRate": {
        "type": "string",
        "enum": [
          "PT1S",
          "PT5S",
          "PT10S",
          "PT15S",
          "PT30S",
          "PT1M",
          "PT5M",
          "PT10M",
          "PT15M",
          "PT30M",
          "PT1H"
        ]
      },
      "NameOrArn": {
        "type": "string",
        "pattern": "^[A-Za-z0-9][A-Za-z0-9:_/+=,@.-]{0,2048}$",
        "minLength": 1,
        "maxLength": 2048
      },
      "TagList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Tag"
        },
        "minItems": 0,
        "maxItems": 200
      },
      "Tag": {
        "type": "object",
        "required": [
          "Key",
          "Value"
        ],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "The key for the specified tag. "
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": "The value for the specified tag. "
              }
            ]
          }
        },
        "description": "A tag is a key-value pair that can be added to a resource as metadata. "
      },
      "TagKey": {
        "type": "string",
        "pattern": "^(?!aws:)[a-zA-Z+-=._:/]+$",
        "minLength": 1,
        "maxLength": 128
      },
      "TagValue": {
        "type": "string",
        "pattern": "[\\s\\w+-=\\.:/@]*",
        "minLength": 0,
        "maxLength": 256
      },
      "OffCondition": {
        "type": "string",
        "minLength": 1,
        "maxLength": 2048
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://lookoutequipment.us-east-1.amazonaws.com/#X-Amz-Target=AWSLookoutEquipmentFrontendService.CreateModel"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**ModelArn**",
            "**Status**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
