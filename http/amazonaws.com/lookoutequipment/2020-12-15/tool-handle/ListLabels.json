{
  "name": "ListLabels",
  "description": " Provides a list of labels. ",
  "parameters": {
    "type": "object",
    "properties": {
      "MaxResults": {
        "type": "string",
        "description": "Pagination limit"
      },
      "NextToken": {
        "type": "string",
        "description": "Pagination token"
      },
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AWSLookoutEquipmentFrontendService.ListLabels"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/ListLabelsRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "ListLabelsRequest": {
        "type": "object",
        "required": [
          "LabelGroupName"
        ],
        "title": "ListLabelsRequest",
        "properties": {
          "LabelGroupName": {
            "allOf": [
              {
                "$ref": "#/$defs/LabelGroupName"
              },
              {
                "description": " Retruns the name of the label group. "
              }
            ]
          },
          "IntervalStartTime": {
            "allOf": [
              {
                "$ref": "#/$defs/Timestamp"
              },
              {
                "description": " Returns all the labels with a end time equal to or later than the start time given. "
              }
            ]
          },
          "IntervalEndTime": {
            "allOf": [
              {
                "$ref": "#/$defs/Timestamp"
              },
              {
                "description": " Returns all labels with a start time earlier than the end time given. "
              }
            ]
          },
          "FaultCode": {
            "allOf": [
              {
                "$ref": "#/$defs/FaultCode"
              },
              {
                "description": " Returns labels with a particular fault code. "
              }
            ]
          },
          "Equipment": {
            "allOf": [
              {
                "$ref": "#/$defs/Equipment"
              },
              {
                "description": " Lists the labels that pertain to a particular piece of equipment. "
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/$defs/NextToken"
              },
              {
                "description": " An opaque pagination token indicating where to continue the listing of label groups. "
              }
            ]
          },
          "MaxResults": {
            "allOf": [
              {
                "$ref": "#/$defs/MaxResults"
              },
              {
                "description": " Specifies the maximum number of labels to list. "
              }
            ]
          }
        }
      },
      "LabelGroupName": {
        "type": "string",
        "pattern": "^[0-9a-zA-Z_-]{1,200}$",
        "minLength": 1,
        "maxLength": 200
      },
      "Timestamp": {
        "type": "string",
        "format": "date-time"
      },
      "FaultCode": {
        "type": "string",
        "pattern": "[\\P{M}\\p{M}]{1,100}",
        "minLength": 1,
        "maxLength": 100
      },
      "Equipment": {
        "type": "string",
        "pattern": "[\\P{M}\\p{M}]{1,200}",
        "minLength": 1,
        "maxLength": 200
      },
      "NextToken": {
        "type": "string",
        "pattern": "\\p{ASCII}{0,8192}",
        "maxLength": 8192
      },
      "MaxResults": {
        "type": "integer",
        "minimum": 1,
        "maximum": 500
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://lookoutequipment.us-east-1.amazonaws.com/#X-Amz-Target=AWSLookoutEquipmentFrontendService.ListLabels{?MaxResults,NextToken}"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**NextToken**",
            "**LabelSummaries**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
