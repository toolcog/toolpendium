{
  "name": "GET_ListStackInstances",
  "description": "Returns summary information about stack instances that are associated with the specified stack set. You can filter for stack instances that are associated with a specific Amazon Web Services account name or Region, or that have a specific status.",
  "parameters": {
    "type": "object",
    "properties": {
      "StackSetName": {
        "type": "string",
        "description": "The name or unique ID of the stack set that you want to list stack instances for."
      },
      "NextToken": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1024,
        "description": "If the previous request didn't return all the remaining results, the response's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListStackInstances</code> again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>."
      },
      "MaxResults": {
        "type": "integer",
        "minimum": 1,
        "maximum": 100,
        "description": "The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results."
      },
      "Filters": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/StackInstanceFilter"
        },
        "maxItems": 3,
        "description": "The filter to apply to stack instances"
      },
      "StackInstanceAccount": {
        "type": "string",
        "pattern": "^[0-9]{12}$",
        "description": "The name of the Amazon Web Services account that you want to list stack instances for."
      },
      "StackInstanceRegion": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9-]{1,128}$",
        "description": "The name of the Region where you want to list stack instances."
      },
      "CallAs": {
        "type": "string",
        "enum": [
          "SELF",
          "DELEGATED_ADMIN"
        ],
        "description": "<p>[Service-managed permissions] Specifies whether you are acting as an account administrator in the organization's management account or as a delegated administrator in a member account.</p> <p>By default, <code>SELF</code> is specified. Use <code>SELF</code> for stack sets with self-managed permissions.</p> <ul> <li> <p>If you are signed in to the management account, specify <code>SELF</code>.</p> </li> <li> <p>If you are signed in to a delegated administrator account, specify <code>DELEGATED_ADMIN</code>.</p> <p>Your Amazon Web Services account must be registered as a delegated administrator in the management account. For more information, see <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-orgs-delegated-admin.html\">Register a delegated administrator</a> in the <i>CloudFormation User Guide</i>.</p> </li> </ul>"
      },
      "Action": {
        "type": "string",
        "enum": [
          "ListStackInstances"
        ]
      },
      "Version": {
        "type": "string",
        "enum": [
          "2010-05-15"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      }
    },
    "required": [
      "StackSetName",
      "Action",
      "Version"
    ],
    "$defs": {
      "StackInstanceFilter": {
        "type": "object",
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/StackInstanceFilterName"
              },
              {
                "description": "The type of filter to apply."
              }
            ]
          },
          "Values": {
            "allOf": [
              {
                "$ref": "#/$defs/StackInstanceFilterValues"
              },
              {
                "description": "The status to filter by."
              }
            ]
          }
        },
        "description": "The filter to apply to stack instances"
      },
      "StackInstanceFilterName": {
        "type": "string",
        "enum": [
          "DETAILED_STATUS",
          "LAST_OPERATION_ID",
          "DRIFT_STATUS"
        ]
      },
      "StackInstanceFilterValues": {
        "type": "string",
        "pattern": "^\\S{1,128}$",
        "minLength": 1,
        "maxLength": 128
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "http://cloudformation.us-east-1.amazonaws.com/#Action=ListStackInstances{?StackSetName,NextToken,MaxResults,Filters,StackInstanceAccount,StackInstanceRegion,CallAs,Action,Version}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Summaries**",
            "**NextToken**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
