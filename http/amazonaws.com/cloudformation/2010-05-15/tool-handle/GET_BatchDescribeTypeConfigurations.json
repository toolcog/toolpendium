{
  "name": "GET_BatchDescribeTypeConfigurations",
  "description": "<p>Returns configuration data for the specified CloudFormation extensions, from the CloudFormation registry for the account and Region.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/registry-register.html#registry-set-configuration\">Configuring extensions at the account level</a> in the <i>CloudFormation User Guide</i>.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "TypeConfigurationIdentifiers": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/TypeConfigurationIdentifier"
        },
        "minItems": 1,
        "description": "The list of identifiers for the desired extension configurations."
      },
      "Action": {
        "type": "string",
        "enum": [
          "BatchDescribeTypeConfigurations"
        ]
      },
      "Version": {
        "type": "string",
        "enum": [
          "2010-05-15"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      }
    },
    "required": [
      "TypeConfigurationIdentifiers",
      "Action",
      "Version"
    ],
    "$defs": {
      "TypeConfigurationIdentifier": {
        "type": "object",
        "properties": {
          "TypeArn": {
            "allOf": [
              {
                "$ref": "#/$defs/TypeArn"
              },
              {
                "description": "<p>The Amazon Resource Name (ARN) for the extension, in this account and Region.</p> <p>For public extensions, this will be the ARN assigned when you <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_ActivateType.html\">activate the type</a> in this account and Region. For private extensions, this will be the ARN assigned when you <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_RegisterType.html\">register the type</a> in this account and Region.</p>"
              }
            ]
          },
          "TypeConfigurationAlias": {
            "allOf": [
              {
                "$ref": "#/$defs/TypeConfigurationAlias"
              },
              {
                "description": "The alias specified for this configuration, if one was specified when the configuration was set."
              }
            ]
          },
          "TypeConfigurationArn": {
            "allOf": [
              {
                "$ref": "#/$defs/TypeConfigurationArn"
              },
              {
                "description": "The Amazon Resource Name (ARN) for the configuration, in this account and Region."
              }
            ]
          },
          "Type": {
            "allOf": [
              {
                "$ref": "#/$defs/ThirdPartyType"
              },
              {
                "description": "The type of extension."
              }
            ]
          },
          "TypeName": {
            "allOf": [
              {
                "$ref": "#/$defs/TypeName"
              },
              {
                "description": "The name of the extension type to which this configuration applies."
              }
            ]
          }
        },
        "description": "Identifying information for the configuration of a CloudFormation extension."
      },
      "TypeArn": {
        "type": "string",
        "pattern": "arn:aws[A-Za-z0-9-]{0,64}:cloudformation:[A-Za-z0-9-]{1,64}:([0-9]{12})?:type/.+",
        "maxLength": 1024
      },
      "TypeConfigurationAlias": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9]{1,256}$",
        "minLength": 1,
        "maxLength": 256
      },
      "TypeConfigurationArn": {
        "type": "string",
        "pattern": "arn:aws[A-Za-z0-9-]{0,64}:cloudformation:[A-Za-z0-9-]{1,64}:([0-9]{12})?:type-configuration/.+",
        "maxLength": 1024
      },
      "ThirdPartyType": {
        "type": "string",
        "enum": [
          "RESOURCE",
          "MODULE",
          "HOOK"
        ]
      },
      "TypeName": {
        "type": "string",
        "pattern": "[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}(::MODULE){0,1}",
        "minLength": 10,
        "maxLength": 204
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "http://cloudformation.us-east-1.amazonaws.com/#Action=BatchDescribeTypeConfigurations{?TypeConfigurationIdentifiers,Action,Version}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Errors**",
            "**UnprocessedTypeConfigurations**",
            "**TypeConfigurations**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
