{
  "name": "GET_ImportStacksToStackSet",
  "description": "Import existing stacks into a new stack sets. Use the stack import operation to import up to 10 stacks into a new stack set in the same account as the source stack or in a different administrator account and Region, by specifying the stack ID of the stack you intend to import.",
  "parameters": {
    "type": "object",
    "properties": {
      "StackSetName": {
        "type": "string",
        "pattern": "[a-zA-Z][-a-zA-Z0-9]*(?::[a-zA-Z0-9]{8}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{12})?",
        "description": "The name of the stack set. The name must be unique in the Region where you create your stack set."
      },
      "StackIds": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/StackId"
        },
        "description": "<p>The IDs of the stacks you are importing into a stack set. You import up to 10 stacks per stack set at a time.</p> <p>Specify either <code>StackIds</code> or <code>StackIdsUrl</code>.</p>"
      },
      "StackIdsUrl": {
        "type": "string",
        "pattern": "(s3://|http(s?)://).+",
        "minLength": 1,
        "maxLength": 5120,
        "description": "<p>The Amazon S3 URL which contains list of stack ids to be inputted.</p> <p>Specify either <code>StackIds</code> or <code>StackIdsUrl</code>.</p>"
      },
      "OrganizationalUnitIds": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/OrganizationalUnitId"
        },
        "description": "The list of OU ID's to which the stacks being imported has to be mapped as deployment target."
      },
      "OperationPreferences": {
        "type": "object",
        "properties": {
          "RegionConcurrencyType": {
            "allOf": [
              {
                "$ref": "#/$defs/RegionConcurrencyType"
              },
              {
                "description": "The concurrency type of deploying StackSets operations in Regions, could be in parallel or one Region at a time."
              }
            ]
          },
          "RegionOrder": {
            "allOf": [
              {
                "$ref": "#/$defs/RegionList"
              },
              {
                "description": "The order of the Regions where you want to perform the stack operation."
              }
            ]
          },
          "FailureToleranceCount": {
            "allOf": [
              {
                "$ref": "#/$defs/FailureToleranceCount"
              },
              {
                "description": "<p>The number of accounts, per Region, for which this operation can fail before CloudFormation stops the operation in that Region. If the operation is stopped in a Region, CloudFormation doesn't attempt the operation in any subsequent Regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p> <p>By default, <code>0</code> is specified.</p>"
              }
            ]
          },
          "FailureTolerancePercentage": {
            "allOf": [
              {
                "$ref": "#/$defs/FailureTolerancePercentage"
              },
              {
                "description": "<p>The percentage of accounts, per Region, for which this stack operation can fail before CloudFormation stops the operation in that Region. If the operation is stopped in a Region, CloudFormation doesn't attempt the operation in any subsequent Regions.</p> <p>When calculating the number of accounts based on the specified percentage, CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p> <p>By default, <code>0</code> is specified.</p>"
              }
            ]
          },
          "MaxConcurrentCount": {
            "allOf": [
              {
                "$ref": "#/$defs/MaxConcurrentCount"
              },
              {
                "description": "<p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>.<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code>.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p> <p>By default, <code>1</code> is specified.</p>"
              }
            ]
          },
          "MaxConcurrentPercentage": {
            "allOf": [
              {
                "$ref": "#/$defs/MaxConcurrentPercentage"
              },
              {
                "description": "<p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p> <p>By default, <code>1</code> is specified.</p>"
              }
            ]
          }
        },
        "description": "<p>The user-specified preferences for how CloudFormation performs a stack set operation.</p> <p>For more information about maximum concurrent accounts and failure tolerance, see <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options\">Stack set operation options</a>.</p>"
      },
      "OperationId": {
        "type": "string",
        "pattern": "[a-zA-Z0-9][-a-zA-Z0-9]*",
        "minLength": 1,
        "maxLength": 128,
        "description": "A unique, user defined, identifier for the stack set operation."
      },
      "CallAs": {
        "type": "string",
        "enum": [
          "SELF",
          "DELEGATED_ADMIN"
        ],
        "description": "<p>By default, <code>SELF</code> is specified. Use <code>SELF</code> for stack sets with self-managed permissions.</p> <ul> <li> <p>If you are signed in to the management account, specify <code>SELF</code>.</p> </li> <li> <p>For service managed stack sets, specify <code>DELEGATED_ADMIN</code>.</p> </li> </ul>"
      },
      "Action": {
        "type": "string",
        "enum": [
          "ImportStacksToStackSet"
        ]
      },
      "Version": {
        "type": "string",
        "enum": [
          "2010-05-15"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      }
    },
    "required": [
      "StackSetName",
      "Action",
      "Version"
    ],
    "$defs": {
      "StackId": {
        "type": "string"
      },
      "OrganizationalUnitId": {
        "type": "string",
        "pattern": "^(ou-[a-z0-9]{4,32}-[a-z0-9]{8,32}|r-[a-z0-9]{4,32})$"
      },
      "RegionConcurrencyType": {
        "type": "string",
        "enum": [
          "SEQUENTIAL",
          "PARALLEL"
        ]
      },
      "RegionList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Region"
        }
      },
      "Region": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9-]{1,128}$"
      },
      "FailureToleranceCount": {
        "type": "integer",
        "minimum": 0
      },
      "FailureTolerancePercentage": {
        "type": "integer",
        "minimum": 0,
        "maximum": 100
      },
      "MaxConcurrentCount": {
        "type": "integer",
        "minimum": 1
      },
      "MaxConcurrentPercentage": {
        "type": "integer",
        "minimum": 1,
        "maximum": 100
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "http://cloudformation.us-east-1.amazonaws.com/#Action=ImportStacksToStackSet{?StackSetName,StackIds,StackIdsUrl,OrganizationalUnitIds,OperationPreferences,OperationId,CallAs,Action,Version}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**OperationId**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
