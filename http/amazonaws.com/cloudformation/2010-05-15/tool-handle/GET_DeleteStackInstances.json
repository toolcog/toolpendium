{
  "name": "GET_DeleteStackInstances",
  "description": "Deletes stack instances for the specified accounts, in the specified Amazon Web Services Regions.",
  "parameters": {
    "type": "object",
    "properties": {
      "StackSetName": {
        "type": "string",
        "description": "The name or unique ID of the stack set that you want to delete stack instances for."
      },
      "Accounts": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Account"
        },
        "description": "<p>[Self-managed permissions] The names of the Amazon Web Services accounts that you want to delete stack instances for.</p> <p>You can specify <code>Accounts</code> or <code>DeploymentTargets</code>, but not both.</p>"
      },
      "DeploymentTargets": {
        "type": "object",
        "properties": {
          "Accounts": {
            "allOf": [
              {
                "$ref": "#/$defs/AccountList"
              },
              {
                "description": "The names of one or more Amazon Web Services accounts for which you want to deploy stack set updates."
              }
            ]
          },
          "AccountsUrl": {
            "allOf": [
              {
                "$ref": "#/$defs/AccountsUrl"
              },
              {
                "description": "Returns the value of the <code>AccountsUrl</code> property."
              }
            ]
          },
          "OrganizationalUnitIds": {
            "allOf": [
              {
                "$ref": "#/$defs/OrganizationalUnitIdList"
              },
              {
                "description": "The organization root ID or organizational unit (OU) IDs to which StackSets deploys."
              }
            ]
          },
          "AccountFilterType": {
            "allOf": [
              {
                "$ref": "#/$defs/AccountFilterType"
              },
              {
                "description": "<p>Limit deployment targets to individual accounts or include additional accounts with provided OUs.</p> <p>The following is a list of possible values for the <code>AccountFilterType</code> operation.</p> <ul> <li> <p> <code>INTERSECTION</code>: StackSets deploys to the accounts specified in <code>Accounts</code> parameter. </p> </li> <li> <p> <code>DIFFERENCE</code>: StackSets excludes the accounts specified in <code>Accounts</code> parameter. This enables user to avoid certain accounts within an OU such as suspended accounts.</p> </li> <li> <p> <code>UNION</code>: StackSets includes additional accounts deployment targets. </p> <p>This is the default value if <code>AccountFilterType</code> is not provided. This enables user to update an entire OU and individual accounts from a different OU in one request, which used to be two separate requests.</p> </li> <li> <p> <code>NONE</code>: Deploys to all the accounts in specified organizational units (OU).</p> </li> </ul>"
              }
            ]
          }
        },
        "description": "<p>[Service-managed permissions] The Organizations accounts from which to delete stack instances.</p> <p>You can specify <code>Accounts</code> or <code>DeploymentTargets</code>, but not both.</p>"
      },
      "Regions": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Region"
        },
        "description": "The Amazon Web Services Regions where you want to delete stack set instances."
      },
      "OperationPreferences": {
        "type": "object",
        "properties": {
          "RegionConcurrencyType": {
            "allOf": [
              {
                "$ref": "#/$defs/RegionConcurrencyType"
              },
              {
                "description": "The concurrency type of deploying StackSets operations in Regions, could be in parallel or one Region at a time."
              }
            ]
          },
          "RegionOrder": {
            "allOf": [
              {
                "$ref": "#/$defs/RegionList"
              },
              {
                "description": "The order of the Regions where you want to perform the stack operation."
              }
            ]
          },
          "FailureToleranceCount": {
            "allOf": [
              {
                "$ref": "#/$defs/FailureToleranceCount"
              },
              {
                "description": "<p>The number of accounts, per Region, for which this operation can fail before CloudFormation stops the operation in that Region. If the operation is stopped in a Region, CloudFormation doesn't attempt the operation in any subsequent Regions.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code> (but not both).</p> <p>By default, <code>0</code> is specified.</p>"
              }
            ]
          },
          "FailureTolerancePercentage": {
            "allOf": [
              {
                "$ref": "#/$defs/FailureTolerancePercentage"
              },
              {
                "description": "<p>The percentage of accounts, per Region, for which this stack operation can fail before CloudFormation stops the operation in that Region. If the operation is stopped in a Region, CloudFormation doesn't attempt the operation in any subsequent Regions.</p> <p>When calculating the number of accounts based on the specified percentage, CloudFormation rounds <i>down</i> to the next whole number.</p> <p>Conditional: You must specify either <code>FailureToleranceCount</code> or <code>FailureTolerancePercentage</code>, but not both.</p> <p>By default, <code>0</code> is specified.</p>"
              }
            ]
          },
          "MaxConcurrentCount": {
            "allOf": [
              {
                "$ref": "#/$defs/MaxConcurrentCount"
              },
              {
                "description": "<p>The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of <code>FailureToleranceCount</code>.<code>MaxConcurrentCount</code> is at most one more than the <code>FailureToleranceCount</code>.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p> <p>By default, <code>1</code> is specified.</p>"
              }
            ]
          },
          "MaxConcurrentPercentage": {
            "allOf": [
              {
                "$ref": "#/$defs/MaxConcurrentPercentage"
              },
              {
                "description": "<p>The maximum percentage of accounts in which to perform this operation at one time.</p> <p>When calculating the number of accounts based on the specified percentage, CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.</p> <p>Note that this setting lets you specify the <i>maximum</i> for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.</p> <p>Conditional: You must specify either <code>MaxConcurrentCount</code> or <code>MaxConcurrentPercentage</code>, but not both.</p> <p>By default, <code>1</code> is specified.</p>"
              }
            ]
          }
        },
        "description": "Preferences for how CloudFormation performs this stack set operation."
      },
      "RetainStacks": {
        "type": "boolean",
        "description": "<p>Removes the stack instances from the specified stack set, but doesn't delete the stacks. You can't reassociate a retained stack or add an existing, saved stack to a new stack set.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options\">Stack set operation options</a>.</p>"
      },
      "OperationId": {
        "type": "string",
        "pattern": "[a-zA-Z0-9][-a-zA-Z0-9]*",
        "minLength": 1,
        "maxLength": 128,
        "description": "<p>The unique identifier for this stack set operation.</p> <p>If you don't specify an operation ID, the SDK generates one automatically.</p> <p>The operation ID also functions as an idempotency token, to ensure that CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You can retry stack set operation requests to ensure that CloudFormation successfully received them.</p> <p>Repeating this stack set operation with a new operation ID retries all stack instances whose status is <code>OUTDATED</code>.</p>"
      },
      "CallAs": {
        "type": "string",
        "enum": [
          "SELF",
          "DELEGATED_ADMIN"
        ],
        "description": "<p>[Service-managed permissions] Specifies whether you are acting as an account administrator in the organization's management account or as a delegated administrator in a member account.</p> <p>By default, <code>SELF</code> is specified. Use <code>SELF</code> for stack sets with self-managed permissions.</p> <ul> <li> <p>If you are signed in to the management account, specify <code>SELF</code>.</p> </li> <li> <p>If you are signed in to a delegated administrator account, specify <code>DELEGATED_ADMIN</code>.</p> <p>Your Amazon Web Services account must be registered as a delegated administrator in the management account. For more information, see <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-orgs-delegated-admin.html\">Register a delegated administrator</a> in the <i>CloudFormation User Guide</i>.</p> </li> </ul>"
      },
      "Action": {
        "type": "string",
        "enum": [
          "DeleteStackInstances"
        ]
      },
      "Version": {
        "type": "string",
        "enum": [
          "2010-05-15"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      }
    },
    "required": [
      "StackSetName",
      "Regions",
      "RetainStacks",
      "Action",
      "Version"
    ],
    "$defs": {
      "Account": {
        "type": "string",
        "pattern": "^[0-9]{12}$"
      },
      "AccountList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Account"
        }
      },
      "AccountsUrl": {
        "type": "string",
        "pattern": "(s3://|http(s?)://).+",
        "minLength": 1,
        "maxLength": 5120
      },
      "OrganizationalUnitIdList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/OrganizationalUnitId"
        }
      },
      "OrganizationalUnitId": {
        "type": "string",
        "pattern": "^(ou-[a-z0-9]{4,32}-[a-z0-9]{8,32}|r-[a-z0-9]{4,32})$"
      },
      "AccountFilterType": {
        "type": "string",
        "enum": [
          "NONE",
          "INTERSECTION",
          "DIFFERENCE",
          "UNION"
        ]
      },
      "Region": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9-]{1,128}$"
      },
      "RegionConcurrencyType": {
        "type": "string",
        "enum": [
          "SEQUENTIAL",
          "PARALLEL"
        ]
      },
      "RegionList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Region"
        }
      },
      "FailureToleranceCount": {
        "type": "integer",
        "minimum": 0
      },
      "FailureTolerancePercentage": {
        "type": "integer",
        "minimum": 0,
        "maximum": 100
      },
      "MaxConcurrentCount": {
        "type": "integer",
        "minimum": 1
      },
      "MaxConcurrentPercentage": {
        "type": "integer",
        "minimum": 1,
        "maximum": 100
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "http://cloudformation.us-east-1.amazonaws.com/#Action=DeleteStackInstances{?StackSetName,Accounts,DeploymentTargets,Regions,OperationPreferences,RetainStacks,OperationId,CallAs,Action,Version}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**OperationId**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
