{
  "name": "GetAnomalies",
  "description": "Retrieves all of the cost anomalies detected on your account during the time period that's specified by the <code>DateInterval</code> object. Anomalies are available for up to 90 days.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AWSInsightsIndexService.GetAnomalies"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/GetAnomaliesRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "GetAnomaliesRequest": {
        "type": "object",
        "required": [
          "DateInterval"
        ],
        "title": "GetAnomaliesRequest",
        "properties": {
          "MonitorArn": {
            "allOf": [
              {
                "$ref": "#/$defs/GenericString"
              },
              {
                "description": "Retrieves all of the cost anomalies detected for a specific cost anomaly monitor Amazon Resource Name (ARN). "
              }
            ]
          },
          "DateInterval": {
            "allOf": [
              {
                "$ref": "#/$defs/AnomalyDateInterval"
              },
              {
                "description": "Assigns the start and end dates for retrieving cost anomalies. The returned anomaly object will have an <code>AnomalyEndDate</code> in the specified time range. "
              }
            ]
          },
          "Feedback": {
            "allOf": [
              {
                "$ref": "#/$defs/AnomalyFeedbackType"
              },
              {
                "description": "Filters anomaly results by the feedback field on the anomaly object. "
              }
            ]
          },
          "TotalImpact": {
            "allOf": [
              {
                "$ref": "#/$defs/TotalImpactFilter"
              },
              {
                "description": "Filters anomaly results by the total impact field on the anomaly object. For example, you can filter anomalies <code>GREATER_THAN 200.00</code> to retrieve anomalies, with an estimated dollar impact greater than 200. "
              }
            ]
          },
          "NextPageToken": {
            "allOf": [
              {
                "$ref": "#/$defs/NextPageToken"
              },
              {
                "description": "The token to retrieve the next set of results. Amazon Web Services provides the token when the response from a previous call has more results than the maximum page size. "
              }
            ]
          },
          "MaxResults": {
            "allOf": [
              {
                "$ref": "#/$defs/PageSize"
              },
              {
                "description": "The number of entries a paginated response contains. "
              }
            ]
          }
        }
      },
      "GenericString": {
        "type": "string",
        "pattern": "[\\S\\s]*",
        "minLength": 0,
        "maxLength": 1024
      },
      "AnomalyDateInterval": {
        "type": "object",
        "required": [
          "StartDate"
        ],
        "properties": {
          "StartDate": {
            "allOf": [
              {
                "$ref": "#/$defs/YearMonthDay"
              },
              {
                "description": "The first date an anomaly was observed. "
              }
            ]
          },
          "EndDate": {
            "allOf": [
              {
                "$ref": "#/$defs/YearMonthDay"
              },
              {
                "description": "The last date an anomaly was observed. "
              }
            ]
          }
        },
        "description": "The time period for an anomaly. "
      },
      "YearMonthDay": {
        "type": "string",
        "pattern": "(\\d{4}-\\d{2}-\\d{2})(T\\d{2}:\\d{2}:\\d{2}Z)?",
        "minLength": 0,
        "maxLength": 40
      },
      "AnomalyFeedbackType": {
        "type": "string",
        "enum": [
          "YES",
          "NO",
          "PLANNED_ACTIVITY"
        ]
      },
      "TotalImpactFilter": {
        "type": "object",
        "required": [
          "NumericOperator",
          "StartValue"
        ],
        "properties": {
          "NumericOperator": {
            "allOf": [
              {
                "$ref": "#/$defs/NumericOperator"
              },
              {
                "description": "The comparing value that's used in the filter. "
              }
            ]
          },
          "StartValue": {
            "allOf": [
              {
                "$ref": "#/$defs/GenericDouble"
              },
              {
                "description": "The lower bound dollar value that's used in the filter. "
              }
            ]
          },
          "EndValue": {
            "allOf": [
              {
                "$ref": "#/$defs/GenericDouble"
              },
              {
                "description": "The upper bound dollar value that's used in the filter. "
              }
            ]
          }
        },
        "description": "Filters cost anomalies based on the total impact. "
      },
      "NumericOperator": {
        "type": "string",
        "enum": [
          "EQUAL",
          "GREATER_THAN_OR_EQUAL",
          "LESS_THAN_OR_EQUAL",
          "GREATER_THAN",
          "LESS_THAN",
          "BETWEEN"
        ]
      },
      "GenericDouble": {
        "type": "number",
        "format": "double"
      },
      "NextPageToken": {
        "type": "string",
        "pattern": "[\\S\\s]*",
        "minLength": 0,
        "maxLength": 8192
      },
      "PageSize": {
        "type": "integer"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://ce.us-east-1.amazonaws.com/#X-Amz-Target=AWSInsightsIndexService.GetAnomalies"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Anomalies**",
            "**NextPageToken**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
