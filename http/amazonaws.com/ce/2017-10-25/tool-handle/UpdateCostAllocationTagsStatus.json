{
  "name": "UpdateCostAllocationTagsStatus",
  "description": "Updates status for cost allocation tags in bulk, with maximum batch size of 20. If the tag status that's updated is the same as the existing tag status, the request doesn't fail. Instead, it doesn't have any effect on the tag status (for example, activating the active tag). ",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AWSInsightsIndexService.UpdateCostAllocationTagsStatus"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/UpdateCostAllocationTagsStatusRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "UpdateCostAllocationTagsStatusRequest": {
        "type": "object",
        "required": [
          "CostAllocationTagsStatus"
        ],
        "title": "UpdateCostAllocationTagsStatusRequest",
        "properties": {
          "CostAllocationTagsStatus": {
            "allOf": [
              {
                "$ref": "#/$defs/CostAllocationTagStatusList"
              },
              {
                "description": "The list of <code>CostAllocationTagStatusEntry</code> objects that are used to update cost allocation tags status for this request. "
              }
            ]
          }
        }
      },
      "CostAllocationTagStatusList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/CostAllocationTagStatusEntry"
        },
        "minItems": 1,
        "maxItems": 20
      },
      "CostAllocationTagStatusEntry": {
        "type": "object",
        "required": [
          "TagKey",
          "Status"
        ],
        "properties": {
          "TagKey": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "The key for the cost allocation tag. "
              }
            ]
          },
          "Status": {
            "allOf": [
              {
                "$ref": "#/$defs/CostAllocationTagStatus"
              },
              {
                "description": "The status of a cost allocation tag. "
              }
            ]
          }
        },
        "description": "The cost allocation tag status. The status of a key can either be active or inactive. "
      },
      "TagKey": {
        "type": "string",
        "pattern": "[\\S\\s]*",
        "minLength": 0,
        "maxLength": 1024
      },
      "CostAllocationTagStatus": {
        "type": "string",
        "enum": [
          "Active",
          "Inactive"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://ce.us-east-1.amazonaws.com/#X-Amz-Target=AWSInsightsIndexService.UpdateCostAllocationTagsStatus"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Errors**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
