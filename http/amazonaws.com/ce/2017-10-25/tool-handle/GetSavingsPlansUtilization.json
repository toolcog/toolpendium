{
  "name": "GetSavingsPlansUtilization",
  "description": "<p>Retrieves the Savings Plans utilization for your account across date ranges with daily or monthly granularity. Management account in an organization have access to member accounts. You can use <code>GetDimensionValues</code> in <code>SAVINGS_PLANS</code> to determine the possible dimension values.</p> <note> <p>You can't group by any dimension values for <code>GetSavingsPlansUtilization</code>.</p> </note>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AWSInsightsIndexService.GetSavingsPlansUtilization"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/GetSavingsPlansUtilizationRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "GetSavingsPlansUtilizationRequest": {
        "type": "object",
        "required": [
          "TimePeriod"
        ],
        "title": "GetSavingsPlansUtilizationRequest",
        "properties": {
          "TimePeriod": {
            "allOf": [
              {
                "$ref": "#/$defs/DateInterval"
              },
              {
                "description": "The time period that you want the usage and costs for. The <code>Start</code> date must be within 13 months. The <code>End</code> date must be after the <code>Start</code> date, and before the current date. Future dates can't be used as an <code>End</code> date."
              }
            ]
          },
          "Granularity": {
            "allOf": [
              {
                "$ref": "#/$defs/Granularity"
              },
              {
                "description": "<p>The granularity of the Amazon Web Services utillization data for your Savings Plans.</p> <p>The <code>GetSavingsPlansUtilization</code> operation supports only <code>DAILY</code> and <code>MONTHLY</code> granularities.</p>"
              }
            ]
          },
          "Filter": {
            "allOf": [
              {
                "$ref": "#/$defs/Expression"
              },
              {
                "description": "<p>Filters Savings Plans utilization coverage data for active Savings Plans dimensions. You can filter data with the following dimensions:</p> <ul> <li> <p> <code>LINKED_ACCOUNT</code> </p> </li> <li> <p> <code>SAVINGS_PLAN_ARN</code> </p> </li> <li> <p> <code>SAVINGS_PLANS_TYPE</code> </p> </li> <li> <p> <code>REGION</code> </p> </li> <li> <p> <code>PAYMENT_OPTION</code> </p> </li> <li> <p> <code>INSTANCE_TYPE_FAMILY</code> </p> </li> </ul> <p> <code>GetSavingsPlansUtilization</code> uses the same <a href=\"https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_Expression.html\">Expression</a> object as the other operations, but only <code>AND</code> is supported among each dimension.</p>"
              }
            ]
          },
          "SortBy": {
            "allOf": [
              {
                "$ref": "#/$defs/SortDefinition"
              },
              {
                "description": "<p>The value that you want to sort the data by.</p> <p>The following values are supported for <code>Key</code>:</p> <ul> <li> <p> <code>UtilizationPercentage</code> </p> </li> <li> <p> <code>TotalCommitment</code> </p> </li> <li> <p> <code>UsedCommitment</code> </p> </li> <li> <p> <code>UnusedCommitment</code> </p> </li> <li> <p> <code>NetSavings</code> </p> </li> </ul> <p>The supported values for <code>SortOrder</code> are <code>ASCENDING</code> and <code>DESCENDING</code>.</p>"
              }
            ]
          }
        }
      },
      "DateInterval": {
        "type": "object",
        "required": [
          "Start",
          "End"
        ],
        "properties": {
          "Start": {
            "allOf": [
              {
                "$ref": "#/$defs/YearMonthDay"
              },
              {
                "description": "The beginning of the time period. The start date is inclusive. For example, if <code>start</code> is <code>2017-01-01</code>, Amazon Web Services retrieves cost and usage data starting at <code>2017-01-01</code> up to the end date. The start date must be equal to or no later than the current date to avoid a validation error."
              }
            ]
          },
          "End": {
            "allOf": [
              {
                "$ref": "#/$defs/YearMonthDay"
              },
              {
                "description": "The end of the time period. The end date is exclusive. For example, if <code>end</code> is <code>2017-05-01</code>, Amazon Web Services retrieves cost and usage data from the start date up to, but not including, <code>2017-05-01</code>."
              }
            ]
          }
        },
        "description": "The time period of the request. "
      },
      "YearMonthDay": {
        "type": "string",
        "pattern": "(\\d{4}-\\d{2}-\\d{2})(T\\d{2}:\\d{2}:\\d{2}Z)?",
        "minLength": 0,
        "maxLength": 40
      },
      "Granularity": {
        "type": "string",
        "enum": [
          "DAILY",
          "MONTHLY",
          "HOURLY"
        ]
      },
      "Expression": {
        "type": "object",
        "properties": {
          "Or": {
            "allOf": [
              {
                "$ref": "#/$defs/Expressions"
              },
              {
                "description": "Return results that match either <code>Dimension</code> object."
              }
            ]
          },
          "And": {
            "allOf": [
              {
                "$ref": "#/$defs/Expressions"
              },
              {
                "description": "Return results that match both <code>Dimension</code> objects."
              }
            ]
          },
          "Not": {
            "allOf": [
              {
                "$ref": "#/$defs/Expression"
              },
              {
                "description": "Return results that don't match a <code>Dimension</code> object."
              }
            ]
          },
          "Dimensions": {
            "allOf": [
              {
                "$ref": "#/$defs/DimensionValues"
              },
              {
                "description": "The specific <code>Dimension</code> to use for <code>Expression</code>."
              }
            ]
          },
          "Tags": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValues"
              },
              {
                "description": "The specific <code>Tag</code> to use for <code>Expression</code>."
              }
            ]
          },
          "CostCategories": {
            "allOf": [
              {
                "$ref": "#/$defs/CostCategoryValues"
              },
              {
                "description": "The filter that's based on <code>CostCategory</code> values."
              }
            ]
          }
        },
        "description": "<p>Use <code>Expression</code> to filter in various Cost Explorer APIs.</p> <p>Not all <code>Expression</code> types are supported in each API. Refer to the documentation for each specific API to see what is supported.</p> <p>There are two patterns:</p> <ul> <li> <p>Simple dimension values.</p> <ul> <li> <p>There are three types of simple dimension values: <code>CostCategories</code>, <code>Tags</code>, and <code>Dimensions</code>.</p> <ul> <li> <p>Specify the <code>CostCategories</code> field to define a filter that acts on Cost Categories.</p> </li> <li> <p>Specify the <code>Tags</code> field to define a filter that acts on Cost Allocation Tags.</p> </li> <li> <p>Specify the <code>Dimensions</code> field to define a filter that acts on the <a href=\"https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_DimensionValues.html\"> <code>DimensionValues</code> </a>.</p> </li> </ul> </li> <li> <p>For each filter type, you can set the dimension name and values for the filters that you plan to use.</p> <ul> <li> <p>For example, you can filter for <code>REGION==us-east-1 OR REGION==us-west-1</code>. For <code>GetRightsizingRecommendation</code>, the Region is a full name (for example, <code>REGION==US East (N. Virginia)</code>.</p> </li> <li> <p>The corresponding <code>Expression</code> for this example is as follows: <code>{ \"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", \"us-west-1\" ] } }</code> </p> </li> <li> <p>As shown in the previous example, lists of dimension values are combined with <code>OR</code> when applying the filter.</p> </li> </ul> </li> <li> <p>You can also set different match options to further control how the filter behaves. Not all APIs support match options. Refer to the documentation for each specific API to see what is supported.</p> <ul> <li> <p>For example, you can filter for linked account names that start with \"a\".</p> </li> <li> <p>The corresponding <code>Expression</code> for this example is as follows: <code>{ \"Dimensions\": { \"Key\": \"LINKED_ACCOUNT_NAME\", \"MatchOptions\": [ \"STARTS_WITH\" ], \"Values\": [ \"a\" ] } }</code> </p> </li> </ul> </li> </ul> </li> <li> <p>Compound <code>Expression</code> types with logical operations.</p> <ul> <li> <p>You can use multiple <code>Expression</code> types and the logical operators <code>AND/OR/NOT</code> to create a list of one or more <code>Expression</code> objects. By doing this, you can filter by more advanced options.</p> </li> <li> <p>For example, you can filter by <code>((REGION == us-east-1 OR REGION == us-west-1) OR (TAG.Type == Type1)) AND (USAGE_TYPE != DataTransfer)</code>.</p> </li> <li> <p>The corresponding <code>Expression</code> for this example is as follows: <code>{ \"And\": [ {\"Or\": [ {\"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", \"us-west-1\" ] }}, {\"Tags\": { \"Key\": \"TagName\", \"Values\": [\"Value1\"] } } ]}, {\"Not\": {\"Dimensions\": { \"Key\": \"USAGE_TYPE\", \"Values\": [\"DataTransfer\"] }}} ] } </code> </p> </li> </ul> <note> <p>Because each <code>Expression</code> can have only one operator, the service returns an error if more than one is specified. The following example shows an <code>Expression</code> object that creates an error: <code> { \"And\": [ ... ], \"Dimensions\": { \"Key\": \"USAGE_TYPE\", \"Values\": [ \"DataTransfer\" ] } } </code> </p> <p>The following is an example of the corresponding error message: <code>\"Expression has more than one roots. Only one root operator is allowed for each expression: And, Or, Not, Dimensions, Tags, CostCategories\"</code> </p> </note> </li> </ul> <note> <p>For the <code>GetRightsizingRecommendation</code> action, a combination of OR and NOT isn't supported. OR isn't supported between different dimensions, or dimensions and tags. NOT operators aren't supported. Dimensions are also limited to <code>LINKED_ACCOUNT</code>, <code>REGION</code>, or <code>RIGHTSIZING_TYPE</code>.</p> <p>For the <code>GetReservationPurchaseRecommendation</code> action, only NOT is supported. AND and OR aren't supported. Dimensions are limited to <code>LINKED_ACCOUNT</code>.</p> </note>"
      },
      "Expressions": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Expression"
        }
      },
      "DimensionValues": {
        "type": "object",
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/Dimension"
              },
              {
                "description": "<p>The names of the metadata types that you can use to filter and group your results. For example, <code>AZ</code> returns a list of Availability Zones.</p> <p>Not all dimensions are supported in each API. Refer to the documentation for each specific API to see what is supported.</p> <p> <code>LINK_ACCOUNT_NAME</code> and <code>SERVICE_CODE</code> can only be used in <a href=\"https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_CostCategoryRule.html\">CostCategoryRule</a>.</p> <p> <code>ANOMALY_TOTAL_IMPACT_ABSOLUTE</code> and <code>ANOMALY_TOTAL_IMPACT_PERCENTAGE</code> can only be used in <a href=\"https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_AnomalySubscription.html\">AnomalySubscriptions</a>.</p>"
              }
            ]
          },
          "Values": {
            "allOf": [
              {
                "$ref": "#/$defs/Values"
              },
              {
                "description": "The metadata values that you can use to filter and group your results. You can use <code>GetDimensionValues</code> to find specific values."
              }
            ]
          },
          "MatchOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/MatchOptions"
              },
              {
                "description": "<p>The match options that you can use to filter your results.</p> <p> <code>MatchOptions</code> is only applicable for actions related to Cost Category and Anomaly Subscriptions. Refer to the documentation for each specific API to see what is supported.</p> <p>The default values for <code>MatchOptions</code> are <code>EQUALS</code> and <code>CASE_SENSITIVE</code>.</p>"
              }
            ]
          }
        },
        "description": "The metadata that you can use to filter and group your results. You can use <code>GetDimensionValues</code> to find specific values."
      },
      "Dimension": {
        "type": "string",
        "enum": [
          "AZ",
          "INSTANCE_TYPE",
          "LINKED_ACCOUNT",
          "LINKED_ACCOUNT_NAME",
          "OPERATION",
          "PURCHASE_TYPE",
          "REGION",
          "SERVICE",
          "SERVICE_CODE",
          "USAGE_TYPE",
          "USAGE_TYPE_GROUP",
          "RECORD_TYPE",
          "OPERATING_SYSTEM",
          "TENANCY",
          "SCOPE",
          "PLATFORM",
          "SUBSCRIPTION_ID",
          "LEGAL_ENTITY_NAME",
          "DEPLOYMENT_OPTION",
          "DATABASE_ENGINE",
          "CACHE_ENGINE",
          "INSTANCE_TYPE_FAMILY",
          "BILLING_ENTITY",
          "RESERVATION_ID",
          "RESOURCE_ID",
          "RIGHTSIZING_TYPE",
          "SAVINGS_PLANS_TYPE",
          "SAVINGS_PLAN_ARN",
          "PAYMENT_OPTION",
          "AGREEMENT_END_DATE_TIME_AFTER",
          "AGREEMENT_END_DATE_TIME_BEFORE",
          "INVOICING_ENTITY",
          "ANOMALY_TOTAL_IMPACT_ABSOLUTE",
          "ANOMALY_TOTAL_IMPACT_PERCENTAGE"
        ]
      },
      "Values": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Value"
        }
      },
      "Value": {
        "type": "string",
        "pattern": "[\\S\\s]*",
        "minLength": 0,
        "maxLength": 1024
      },
      "MatchOptions": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/MatchOption"
        }
      },
      "MatchOption": {
        "type": "string",
        "enum": [
          "EQUALS",
          "ABSENT",
          "STARTS_WITH",
          "ENDS_WITH",
          "CONTAINS",
          "CASE_SENSITIVE",
          "CASE_INSENSITIVE",
          "GREATER_THAN_OR_EQUAL"
        ]
      },
      "TagValues": {
        "type": "object",
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "The key for the tag."
              }
            ]
          },
          "Values": {
            "allOf": [
              {
                "$ref": "#/$defs/Values"
              },
              {
                "description": "The specific value of the tag."
              }
            ]
          },
          "MatchOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/MatchOptions"
              },
              {
                "description": "The match options that you can use to filter your results. <code>MatchOptions</code> is only applicable for actions related to Cost Category. The default values for <code>MatchOptions</code> are <code>EQUALS</code> and <code>CASE_SENSITIVE</code>."
              }
            ]
          }
        },
        "description": "<p>The values that are available for a tag.</p> <p>If <code>Values</code> and <code>Key</code> aren't specified, the <code>ABSENT</code> <code>MatchOption</code> is applied to all tags. That is, it's filtered on resources with no tags.</p> <p>If <code>Key</code> is provided and <code>Values</code> isn't specified, the <code>ABSENT</code> <code>MatchOption</code> is applied to the tag <code>Key</code> only. That is, it's filtered on resources without the given tag key.</p>"
      },
      "TagKey": {
        "type": "string",
        "pattern": "[\\S\\s]*",
        "minLength": 0,
        "maxLength": 1024
      },
      "CostCategoryValues": {
        "type": "object",
        "properties": {
          "Key": {
            "$ref": "#/$defs/CostCategoryName"
          },
          "Values": {
            "allOf": [
              {
                "$ref": "#/$defs/Values"
              },
              {
                "description": "The specific value of the Cost Category."
              }
            ]
          },
          "MatchOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/MatchOptions"
              },
              {
                "description": "The match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for <code>MatchOptions</code> is <code>EQUALS</code> and <code>CASE_SENSITIVE</code>. "
              }
            ]
          }
        },
        "description": "<p>The Cost Categories values used for filtering the costs.</p> <p>If <code>Values</code> and <code>Key</code> are not specified, the <code>ABSENT</code> <code>MatchOption</code> is applied to all Cost Categories. That is, it filters on resources that aren't mapped to any Cost Categories.</p> <p>If <code>Values</code> is provided and <code>Key</code> isn't specified, the <code>ABSENT</code> <code>MatchOption</code> is applied to the Cost Categories <code>Key</code> only. That is, it filters on resources without the given Cost Categories key.</p>"
      },
      "CostCategoryName": {
        "type": "string",
        "description": "The unique name of the Cost Category.",
        "minLength": 1,
        "maxLength": 50,
        "x-pattern": "^\\(\\?! \\)[\\p\\{L\\}\\p\\{N\\}\\p\\{Z\\}-_]*$"
      },
      "SortDefinition": {
        "type": "object",
        "required": [
          "Key"
        ],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/SortDefinitionKey"
              },
              {
                "description": "The key that's used to sort the data."
              }
            ]
          },
          "SortOrder": {
            "allOf": [
              {
                "$ref": "#/$defs/SortOrder"
              },
              {
                "description": "The order that's used to sort the data."
              }
            ]
          }
        },
        "description": "The details for how to sort the data."
      },
      "SortDefinitionKey": {
        "type": "string",
        "pattern": "[\\S\\s]*",
        "minLength": 0,
        "maxLength": 1024
      },
      "SortOrder": {
        "type": "string",
        "enum": [
          "ASCENDING",
          "DESCENDING"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://ce.us-east-1.amazonaws.com/#X-Amz-Target=AWSInsightsIndexService.GetSavingsPlansUtilization"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**SavingsPlansUtilizationsByTime**",
            "**Total**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
