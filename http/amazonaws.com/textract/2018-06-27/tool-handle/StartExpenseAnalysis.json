{
  "name": "StartExpenseAnalysis",
  "description": "<p>Starts the asynchronous analysis of invoices or receipts for data like contact information, items purchased, and vendor names.</p> <p> <code>StartExpenseAnalysis</code> can analyze text in documents that are in JPEG, PNG, and PDF format. The documents must be stored in an Amazon S3 bucket. Use the <a>DocumentLocation</a> parameter to specify the name of your S3 bucket and the name of the document in that bucket. </p> <p> <code>StartExpenseAnalysis</code> returns a job identifier (<code>JobId</code>) that you will provide to <code>GetExpenseAnalysis</code> to retrieve the results of the operation. When the analysis of the input invoices/receipts is finished, Amazon Textract publishes a completion status to the Amazon Simple Notification Service (Amazon SNS) topic that you provide to the <code>NotificationChannel</code>. To obtain the results of the invoice and receipt analysis operation, ensure that the status value published to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <a>GetExpenseAnalysis</a>, and pass the job identifier (<code>JobId</code>) that was returned by your call to <code>StartExpenseAnalysis</code>.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/textract/latest/dg/invoice-receipts.html\">Analyzing Invoices and Receipts</a>.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "Textract.StartExpenseAnalysis"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/StartExpenseAnalysisRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "StartExpenseAnalysisRequest": {
        "type": "object",
        "required": [
          "DocumentLocation"
        ],
        "title": "StartExpenseAnalysisRequest",
        "properties": {
          "DocumentLocation": {
            "allOf": [
              {
                "$ref": "#/$defs/DocumentLocation"
              },
              {
                "description": "The location of the document to be processed."
              }
            ]
          },
          "ClientRequestToken": {
            "allOf": [
              {
                "$ref": "#/$defs/ClientRequestToken"
              },
              {
                "description": "The idempotent token that's used to identify the start request. If you use the same token with multiple <code>StartDocumentTextDetection</code> requests, the same <code>JobId</code> is returned. Use <code>ClientRequestToken</code> to prevent the same job from being accidentally started more than once. For more information, see <a href=\"https://docs.aws.amazon.com/textract/latest/dg/api-async.html\">Calling Amazon Textract Asynchronous Operations</a> "
              }
            ]
          },
          "JobTag": {
            "allOf": [
              {
                "$ref": "#/$defs/JobTag"
              },
              {
                "description": "An identifier you specify that's included in the completion notification published to the Amazon SNS topic. For example, you can use <code>JobTag</code> to identify the type of document that the completion notification corresponds to (such as a tax form or a receipt)."
              }
            ]
          },
          "NotificationChannel": {
            "allOf": [
              {
                "$ref": "#/$defs/NotificationChannel"
              },
              {
                "description": "The Amazon SNS topic ARN that you want Amazon Textract to publish the completion status of the operation to. "
              }
            ]
          },
          "OutputConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/OutputConfig"
              },
              {
                "description": "Sets if the output will go to a customer defined bucket. By default, Amazon Textract will save the results internally to be accessed by the <code>GetExpenseAnalysis</code> operation."
              }
            ]
          },
          "KMSKeyId": {
            "allOf": [
              {
                "$ref": "#/$defs/KMSKeyId"
              },
              {
                "description": "The KMS key used to encrypt the inference results. This can be in either Key ID or Key Alias format. When a KMS key is provided, the KMS key will be used for server-side encryption of the objects in the customer bucket. When this parameter is not enabled, the result will be encrypted server side,using SSE-S3."
              }
            ]
          }
        }
      },
      "DocumentLocation": {
        "type": "object",
        "properties": {
          "S3Object": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Object"
              },
              {
                "description": "The Amazon S3 bucket that contains the input document."
              }
            ]
          }
        },
        "description": "<p>The Amazon S3 bucket that contains the document to be processed. It's used by asynchronous operations.</p> <p>The input document can be an image file in JPEG or PNG format. It can also be a file in PDF format.</p>"
      },
      "S3Object": {
        "type": "object",
        "properties": {
          "Bucket": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Bucket"
              },
              {
                "description": "The name of the S3 bucket. Note that the # character is not valid in the file name."
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/S3ObjectName"
              },
              {
                "description": "The file name of the input document. Synchronous operations can use image files that are in JPEG or PNG format. Asynchronous operations also support PDF and TIFF format files."
              }
            ]
          },
          "Version": {
            "allOf": [
              {
                "$ref": "#/$defs/S3ObjectVersion"
              },
              {
                "description": "If the bucket has versioning enabled, you can specify the object version. "
              }
            ]
          }
        },
        "description": "<p>The S3 bucket name and file name that identifies the document.</p> <p>The AWS Region for the S3 bucket that contains the document must match the Region that you use for Amazon Textract operations.</p> <p>For Amazon Textract to process a file in an S3 bucket, the user must have permission to access the S3 bucket and file. </p>"
      },
      "S3Bucket": {
        "type": "string",
        "pattern": "[0-9A-Za-z\\.\\-_]*",
        "minLength": 3,
        "maxLength": 255
      },
      "S3ObjectName": {
        "type": "string",
        "pattern": ".*\\S.*",
        "minLength": 1,
        "maxLength": 1024
      },
      "S3ObjectVersion": {
        "type": "string",
        "pattern": ".*\\S.*",
        "minLength": 1,
        "maxLength": 1024
      },
      "ClientRequestToken": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9-_]+$",
        "minLength": 1,
        "maxLength": 64
      },
      "JobTag": {
        "type": "string",
        "pattern": "[a-zA-Z0-9_.\\-:]+",
        "minLength": 1,
        "maxLength": 64
      },
      "NotificationChannel": {
        "type": "object",
        "required": [
          "SNSTopicArn",
          "RoleArn"
        ],
        "properties": {
          "SNSTopicArn": {
            "allOf": [
              {
                "$ref": "#/$defs/SNSTopicArn"
              },
              {
                "description": "The Amazon SNS topic that Amazon Textract posts the completion status to."
              }
            ]
          },
          "RoleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/RoleArn"
              },
              {
                "description": "The Amazon Resource Name (ARN) of an IAM role that gives Amazon Textract publishing permissions to the Amazon SNS topic. "
              }
            ]
          }
        },
        "description": "The Amazon Simple Notification Service (Amazon SNS) topic to which Amazon Textract publishes the completion status of an asynchronous document operation. "
      },
      "SNSTopicArn": {
        "type": "string",
        "pattern": "(^arn:([a-z\\d-]+):sns:[a-zA-Z\\d-]{1,20}:\\w{12}:.+$)",
        "minLength": 20,
        "maxLength": 1024
      },
      "RoleArn": {
        "type": "string",
        "pattern": "arn:([a-z\\d-]+):iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+",
        "minLength": 20,
        "maxLength": 2048
      },
      "OutputConfig": {
        "type": "object",
        "required": [
          "S3Bucket"
        ],
        "properties": {
          "S3Bucket": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Bucket"
              },
              {
                "description": "The name of the bucket your output will go to."
              }
            ]
          },
          "S3Prefix": {
            "allOf": [
              {
                "$ref": "#/$defs/S3ObjectName"
              },
              {
                "description": "The prefix of the object key that the output will be saved to. When not enabled, the prefix will be â€œtextract_output\"."
              }
            ]
          }
        },
        "description": "<p>Sets whether or not your output will go to a user created bucket. Used to set the name of the bucket, and the prefix on the output file.</p> <p> <code>OutputConfig</code> is an optional parameter which lets you adjust where your output will be placed. By default, Amazon Textract will store the results internally and can only be accessed by the Get API operations. With <code>OutputConfig</code> enabled, you can set the name of the bucket the output will be sent to the file prefix of the results where you can download your results. Additionally, you can set the <code>KMSKeyID</code> parameter to a customer master key (CMK) to encrypt your output. Without this parameter set Amazon Textract will encrypt server-side using the AWS managed CMK for Amazon S3.</p> <p>Decryption of Customer Content is necessary for processing of the documents by Amazon Textract. If your account is opted out under an AI services opt out policy then all unencrypted Customer Content is immediately and permanently deleted after the Customer Content has been processed by the service. No copy of of the output is retained by Amazon Textract. For information about how to opt out, see <a href=\"https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_ai-opt-out.html\"> Managing AI services opt-out policy. </a> </p> <p>For more information on data privacy, see the <a href=\"https://aws.amazon.com/compliance/data-privacy-faq/\">Data Privacy FAQ</a>.</p>"
      },
      "KMSKeyId": {
        "type": "string",
        "pattern": "^[A-Za-z0-9][A-Za-z0-9:_/+=,@.-]{0,2048}$",
        "minLength": 1,
        "maxLength": 2048
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://textract.us-east-1.amazonaws.com/#X-Amz-Target=Textract.StartExpenseAnalysis"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**JobId**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "487": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "488": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "489": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "490": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "491": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
