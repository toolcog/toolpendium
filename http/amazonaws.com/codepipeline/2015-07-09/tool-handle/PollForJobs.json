{
  "name": "PollForJobs",
  "description": "<p>Returns information about any jobs for CodePipeline to act on. <code>PollForJobs</code> is valid only for action types with \"Custom\" in the owner field. If the action type contains <code>AWS</code> or <code>ThirdParty</code> in the owner field, the <code>PollForJobs</code> action returns an error.</p> <important> <p>When this API is called, CodePipeline returns temporary credentials for the S3 bucket used to store artifacts for the pipeline, if the action requires access to that S3 bucket for input or output artifacts. This API also returns any secret values defined for the action.</p> </important>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "CodePipeline_20150709.PollForJobs"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/PollForJobsInput"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "PollForJobsInput": {
        "type": "object",
        "required": [
          "actionTypeId"
        ],
        "title": "PollForJobsInput",
        "properties": {
          "actionTypeId": {
            "allOf": [
              {
                "$ref": "#/$defs/ActionTypeId"
              },
              {
                "description": "Represents information about an action type."
              }
            ]
          },
          "maxBatchSize": {
            "allOf": [
              {
                "$ref": "#/$defs/MaxBatchSize"
              },
              {
                "description": "The maximum number of jobs to return in a poll for jobs call."
              }
            ]
          },
          "queryParam": {
            "allOf": [
              {
                "$ref": "#/$defs/QueryParamMap"
              },
              {
                "description": "A map of property names and values. For an action type with no queryable properties, this value must be null or an empty map. For an action type with a queryable property, you must supply that property as a key in the map. Only jobs whose action configuration matches the mapped value are returned."
              }
            ]
          }
        },
        "description": "Represents the input of a <code>PollForJobs</code> action."
      },
      "ActionTypeId": {
        "type": "object",
        "required": [
          "category",
          "owner",
          "provider",
          "version"
        ],
        "properties": {
          "category": {
            "allOf": [
              {
                "$ref": "#/$defs/ActionCategory"
              },
              {
                "description": "<p>A category defines what kind of action can be taken in the stage, and constrains the provider type for the action. Valid categories are limited to one of the following values. </p> <ul> <li> <p>Source</p> </li> <li> <p>Build</p> </li> <li> <p>Test</p> </li> <li> <p>Deploy</p> </li> <li> <p>Invoke</p> </li> <li> <p>Approval</p> </li> </ul>"
              }
            ]
          },
          "owner": {
            "allOf": [
              {
                "$ref": "#/$defs/ActionOwner"
              },
              {
                "description": "The creator of the action being called. There are three valid values for the <code>Owner</code> field in the action category section within your pipeline structure: <code>AWS</code>, <code>ThirdParty</code>, and <code>Custom</code>. For more information, see <a href=\"https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#actions-valid-providers\">Valid Action Types and Providers in CodePipeline</a>."
              }
            ]
          },
          "provider": {
            "allOf": [
              {
                "$ref": "#/$defs/ActionProvider"
              },
              {
                "description": "The provider of the service being called by the action. Valid providers are determined by the action category. For example, an action in the Deploy category type might have a provider of CodeDeploy, which would be specified as <code>CodeDeploy</code>. For more information, see <a href=\"https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#actions-valid-providers\">Valid Action Types and Providers in CodePipeline</a>."
              }
            ]
          },
          "version": {
            "allOf": [
              {
                "$ref": "#/$defs/Version"
              },
              {
                "description": "A string that describes the action version."
              }
            ]
          }
        },
        "description": "Represents information about an action type."
      },
      "ActionCategory": {
        "type": "string",
        "enum": [
          "Source",
          "Build",
          "Deploy",
          "Test",
          "Invoke",
          "Approval"
        ]
      },
      "ActionOwner": {
        "type": "string",
        "enum": [
          "AWS",
          "ThirdParty",
          "Custom"
        ]
      },
      "ActionProvider": {
        "type": "string",
        "pattern": "[0-9A-Za-z_-]+",
        "minLength": 1,
        "maxLength": 35
      },
      "Version": {
        "type": "string",
        "pattern": "[0-9A-Za-z_-]+",
        "minLength": 1,
        "maxLength": 9
      },
      "MaxBatchSize": {
        "type": "integer",
        "minimum": 1
      },
      "QueryParamMap": {
        "type": "object",
        "minProperties": 0,
        "maxProperties": 1,
        "additionalProperties": {
          "$ref": "#/$defs/ActionConfigurationQueryableValue"
        }
      },
      "ActionConfigurationQueryableValue": {
        "type": "string",
        "pattern": "[a-zA-Z0-9_-]+",
        "minLength": 1,
        "maxLength": 50
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://codepipeline.us-east-1.amazonaws.com/#X-Amz-Target=CodePipeline_20150709.PollForJobs"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Represents the output of a <code>PollForJobs</code> action.",
        "**Key properties:**",
        {
          "$ul": [
            "**jobs**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
