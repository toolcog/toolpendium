{
  "name": "PutActionRevision",
  "description": "Provides information to CodePipeline about new revisions to a source.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "CodePipeline_20150709.PutActionRevision"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/PutActionRevisionInput"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "PutActionRevisionInput": {
        "type": "object",
        "required": [
          "pipelineName",
          "stageName",
          "actionName",
          "actionRevision"
        ],
        "title": "PutActionRevisionInput",
        "properties": {
          "pipelineName": {
            "allOf": [
              {
                "$ref": "#/$defs/PipelineName"
              },
              {
                "description": "The name of the pipeline that starts processing the revision to the source."
              }
            ]
          },
          "stageName": {
            "allOf": [
              {
                "$ref": "#/$defs/StageName"
              },
              {
                "description": "The name of the stage that contains the action that acts on the revision."
              }
            ]
          },
          "actionName": {
            "allOf": [
              {
                "$ref": "#/$defs/ActionName"
              },
              {
                "description": "The name of the action that processes the revision."
              }
            ]
          },
          "actionRevision": {
            "allOf": [
              {
                "$ref": "#/$defs/ActionRevision"
              },
              {
                "description": "Represents information about the version (or revision) of an action."
              }
            ]
          }
        },
        "description": "Represents the input of a <code>PutActionRevision</code> action."
      },
      "PipelineName": {
        "type": "string",
        "pattern": "[A-Za-z0-9.@\\-_]+",
        "minLength": 1,
        "maxLength": 100
      },
      "StageName": {
        "type": "string",
        "pattern": "[A-Za-z0-9.@\\-_]+",
        "minLength": 1,
        "maxLength": 100
      },
      "ActionName": {
        "type": "string",
        "pattern": "[A-Za-z0-9.@\\-_]+",
        "minLength": 1,
        "maxLength": 100
      },
      "ActionRevision": {
        "type": "object",
        "required": [
          "revisionId",
          "revisionChangeId",
          "created"
        ],
        "properties": {
          "revisionId": {
            "allOf": [
              {
                "$ref": "#/$defs/Revision"
              },
              {
                "description": "The system-generated unique ID that identifies the revision number of the action."
              }
            ]
          },
          "revisionChangeId": {
            "allOf": [
              {
                "$ref": "#/$defs/RevisionChangeIdentifier"
              },
              {
                "description": "The unique identifier of the change that set the state to this revision (for example, a deployment ID or timestamp)."
              }
            ]
          },
          "created": {
            "allOf": [
              {
                "$ref": "#/$defs/Timestamp"
              },
              {
                "description": "The date and time when the most recent version of the action was created, in timestamp format."
              }
            ]
          }
        },
        "description": "Represents information about the version (or revision) of an action."
      },
      "Revision": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1500
      },
      "RevisionChangeIdentifier": {
        "type": "string",
        "minLength": 1,
        "maxLength": 100
      },
      "Timestamp": {
        "type": "string",
        "format": "date-time"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://codepipeline.us-east-1.amazonaws.com/#X-Amz-Target=CodePipeline_20150709.PutActionRevision"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Represents the output of a <code>PutActionRevision</code> action.",
        "**Key properties:**",
        {
          "$ul": [
            "**newRevision**",
            "**pipelineExecutionId**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
