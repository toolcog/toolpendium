{
  "name": "CreateCustomActionType",
  "description": "Creates a new custom action that can be used in all pipelines associated with the Amazon Web Services account. Only used for custom actions.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "CodePipeline_20150709.CreateCustomActionType"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/CreateCustomActionTypeInput"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "CreateCustomActionTypeInput": {
        "type": "object",
        "required": [
          "category",
          "provider",
          "version",
          "inputArtifactDetails",
          "outputArtifactDetails"
        ],
        "title": "CreateCustomActionTypeInput",
        "properties": {
          "category": {
            "allOf": [
              {
                "$ref": "#/$defs/ActionCategory"
              },
              {
                "description": "The category of the custom action, such as a build action or a test action."
              }
            ]
          },
          "provider": {
            "allOf": [
              {
                "$ref": "#/$defs/ActionProvider"
              },
              {
                "description": "The provider of the service used in the custom action, such as CodeDeploy."
              }
            ]
          },
          "version": {
            "allOf": [
              {
                "$ref": "#/$defs/Version"
              },
              {
                "description": "The version identifier of the custom action."
              }
            ]
          },
          "settings": {
            "allOf": [
              {
                "$ref": "#/$defs/ActionTypeSettings"
              },
              {
                "description": "URLs that provide users information about this custom action."
              }
            ]
          },
          "configurationProperties": {
            "allOf": [
              {
                "$ref": "#/$defs/ActionConfigurationPropertyList"
              },
              {
                "description": "<p>The configuration properties for the custom action.</p> <note> <p>You can refer to a name in the configuration properties of the custom action within the URL templates by following the format of {Config:name}, as long as the configuration property is both required and not secret. For more information, see <a href=\"https://docs.aws.amazon.com/codepipeline/latest/userguide/how-to-create-custom-action.html\">Create a Custom Action for a Pipeline</a>.</p> </note>"
              }
            ]
          },
          "inputArtifactDetails": {
            "allOf": [
              {
                "$ref": "#/$defs/ArtifactDetails"
              },
              {
                "description": "The details of the input artifact for the action, such as its commit ID."
              }
            ]
          },
          "outputArtifactDetails": {
            "allOf": [
              {
                "$ref": "#/$defs/ArtifactDetails"
              },
              {
                "description": "The details of the output artifact of the action, such as its commit ID."
              }
            ]
          },
          "tags": {
            "allOf": [
              {
                "$ref": "#/$defs/TagList"
              },
              {
                "description": "The tags for the custom action."
              }
            ]
          }
        },
        "description": "Represents the input of a CreateCustomActionType operation."
      },
      "ActionCategory": {
        "type": "string",
        "enum": [
          "Source",
          "Build",
          "Deploy",
          "Test",
          "Invoke",
          "Approval"
        ]
      },
      "ActionProvider": {
        "type": "string",
        "pattern": "[0-9A-Za-z_-]+",
        "minLength": 1,
        "maxLength": 35
      },
      "Version": {
        "type": "string",
        "pattern": "[0-9A-Za-z_-]+",
        "minLength": 1,
        "maxLength": 9
      },
      "ActionTypeSettings": {
        "type": "object",
        "properties": {
          "thirdPartyConfigurationUrl": {
            "allOf": [
              {
                "$ref": "#/$defs/Url"
              },
              {
                "description": "The URL of a sign-up page where users can sign up for an external service and perform initial configuration of the action provided by that service."
              }
            ]
          },
          "entityUrlTemplate": {
            "allOf": [
              {
                "$ref": "#/$defs/UrlTemplate"
              },
              {
                "description": "The URL returned to the CodePipeline console that provides a deep link to the resources of the external system, such as the configuration page for a CodeDeploy deployment group. This link is provided as part of the action display in the pipeline."
              }
            ]
          },
          "executionUrlTemplate": {
            "allOf": [
              {
                "$ref": "#/$defs/UrlTemplate"
              },
              {
                "description": "The URL returned to the CodePipeline console that contains a link to the top-level landing page for the external system, such as the console page for CodeDeploy. This link is shown on the pipeline view page in the CodePipeline console and provides a link to the execution entity of the external action."
              }
            ]
          },
          "revisionUrlTemplate": {
            "allOf": [
              {
                "$ref": "#/$defs/UrlTemplate"
              },
              {
                "description": "The URL returned to the CodePipeline console that contains a link to the page where customers can update or change the configuration of the external action."
              }
            ]
          }
        },
        "description": "Returns information about the settings for an action type."
      },
      "Url": {
        "type": "string",
        "minLength": 1,
        "maxLength": 2048
      },
      "UrlTemplate": {
        "type": "string",
        "minLength": 1,
        "maxLength": 2048
      },
      "ActionConfigurationPropertyList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ActionConfigurationProperty"
        },
        "maxItems": 10
      },
      "ActionConfigurationProperty": {
        "type": "object",
        "required": [
          "name",
          "required",
          "key",
          "secret"
        ],
        "properties": {
          "name": {
            "allOf": [
              {
                "$ref": "#/$defs/ActionConfigurationKey"
              },
              {
                "description": "The name of the action configuration property."
              }
            ]
          },
          "required": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Whether the configuration property is a required value."
              }
            ]
          },
          "key": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Whether the configuration property is a key."
              }
            ]
          },
          "secret": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "<p>Whether the configuration property is secret. Secrets are hidden from all calls except for <code>GetJobDetails</code>, <code>GetThirdPartyJobDetails</code>, <code>PollForJobs</code>, and <code>PollForThirdPartyJobs</code>.</p> <p>When updating a pipeline, passing * * * * * without changing any other values of the action preserves the previous value of the secret.</p>"
              }
            ]
          },
          "queryable": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "<p>Indicates that the property is used with <code>PollForJobs</code>. When creating a custom action, an action can have up to one queryable property. If it has one, that property must be both required and not secret.</p> <p>If you create a pipeline with a custom action type, and that custom action contains a queryable property, the value for that configuration property is subject to other restrictions. The value must be less than or equal to twenty (20) characters. The value can contain only alphanumeric characters, underscores, and hyphens.</p>"
              }
            ]
          },
          "description": {
            "allOf": [
              {
                "$ref": "#/$defs/Description"
              },
              {
                "description": "The description of the action configuration property that is displayed to users."
              }
            ]
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/$defs/ActionConfigurationPropertyType"
              },
              {
                "description": "The type of the configuration property."
              }
            ]
          }
        },
        "description": "Represents information about an action configuration property."
      },
      "ActionConfigurationKey": {
        "type": "string",
        "minLength": 1,
        "maxLength": 50
      },
      "Boolean": {
        "type": "boolean"
      },
      "Description": {
        "type": "string",
        "minLength": 1,
        "maxLength": 160
      },
      "ActionConfigurationPropertyType": {
        "type": "string",
        "enum": [
          "String",
          "Number",
          "Boolean"
        ]
      },
      "ArtifactDetails": {
        "type": "object",
        "required": [
          "minimumCount",
          "maximumCount"
        ],
        "properties": {
          "minimumCount": {
            "allOf": [
              {
                "$ref": "#/$defs/MinimumArtifactCount"
              },
              {
                "description": "The minimum number of artifacts allowed for the action type."
              }
            ]
          },
          "maximumCount": {
            "allOf": [
              {
                "$ref": "#/$defs/MaximumArtifactCount"
              },
              {
                "description": "The maximum number of artifacts allowed for the action type."
              }
            ]
          }
        },
        "description": "Returns information about the details of an artifact."
      },
      "MinimumArtifactCount": {
        "type": "integer",
        "minimum": 0,
        "maximum": 5
      },
      "MaximumArtifactCount": {
        "type": "integer",
        "minimum": 0,
        "maximum": 5
      },
      "TagList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Tag"
        }
      },
      "Tag": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "The tag's key."
              }
            ]
          },
          "value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": "The tag's value."
              }
            ]
          }
        },
        "description": "A tag is a key-value pair that is used to manage the resource."
      },
      "TagKey": {
        "type": "string",
        "minLength": 1,
        "maxLength": 128
      },
      "TagValue": {
        "type": "string",
        "minLength": 0,
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://codepipeline.us-east-1.amazonaws.com/#X-Amz-Target=CodePipeline_20150709.CreateCustomActionType"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Represents the output of a <code>CreateCustomActionType</code> operation.",
        "**Key properties:**",
        {
          "$ul": [
            "**actionType**",
            "**tags**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
