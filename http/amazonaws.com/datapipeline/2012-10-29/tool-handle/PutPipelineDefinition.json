{
  "name": "PutPipelineDefinition",
  "description": "<p>Adds tasks, schedules, and preconditions to the specified pipeline. You can use <code>PutPipelineDefinition</code> to populate a new pipeline.</p> <p> <code>PutPipelineDefinition</code> also validates the configuration as it adds it to the pipeline. Changes to the pipeline are saved unless one of the following three validation errors exists in the pipeline. </p> <ol> <li>An object is missing a name or identifier field.</li> <li>A string or reference field is empty.</li> <li>The number of objects in the pipeline exceeds the maximum allowed objects.</li> <li>The pipeline is in a FINISHED state.</li> </ol> <p> Pipeline object definitions are passed to the <code>PutPipelineDefinition</code> action and returned by the <a>GetPipelineDefinition</a> action. </p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "DataPipeline.PutPipelineDefinition"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/PutPipelineDefinitionInput"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "PutPipelineDefinitionInput": {
        "type": "object",
        "required": [
          "pipelineId",
          "pipelineObjects"
        ],
        "title": "PutPipelineDefinitionInput",
        "properties": {
          "pipelineId": {
            "allOf": [
              {
                "$ref": "#/$defs/id"
              },
              {
                "description": "The ID of the pipeline."
              }
            ]
          },
          "pipelineObjects": {
            "allOf": [
              {
                "$ref": "#/$defs/PipelineObjectList"
              },
              {
                "description": "The objects that define the pipeline. These objects overwrite the existing pipeline definition."
              }
            ]
          },
          "parameterObjects": {
            "allOf": [
              {
                "$ref": "#/$defs/ParameterObjectList"
              },
              {
                "description": "The parameter objects used with the pipeline."
              }
            ]
          },
          "parameterValues": {
            "allOf": [
              {
                "$ref": "#/$defs/ParameterValueList"
              },
              {
                "description": "The parameter values used with the pipeline."
              }
            ]
          }
        },
        "description": "Contains the parameters for PutPipelineDefinition."
      },
      "id": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1024,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
      },
      "PipelineObjectList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/PipelineObject"
        }
      },
      "PipelineObject": {
        "type": "object",
        "required": [
          "id",
          "name",
          "fields"
        ],
        "properties": {
          "id": {
            "allOf": [
              {
                "$ref": "#/$defs/id"
              },
              {
                "description": "The ID of the object."
              }
            ]
          },
          "name": {
            "allOf": [
              {
                "$ref": "#/$defs/id"
              },
              {
                "description": "The name of the object."
              }
            ]
          },
          "fields": {
            "allOf": [
              {
                "$ref": "#/$defs/fieldList"
              },
              {
                "description": "Key-value pairs that define the properties of the object."
              }
            ]
          }
        },
        "description": "Contains information about a pipeline object. This can be a logical, physical, or physical attempt pipeline object. The complete set of components of a pipeline defines the pipeline."
      },
      "fieldList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Field"
        }
      },
      "Field": {
        "type": "object",
        "required": [
          "key"
        ],
        "properties": {
          "key": {
            "allOf": [
              {
                "$ref": "#/$defs/fieldNameString"
              },
              {
                "description": "The field identifier."
              }
            ]
          },
          "stringValue": {
            "allOf": [
              {
                "$ref": "#/$defs/fieldStringValue"
              },
              {
                "description": "The field value, expressed as a String."
              }
            ]
          },
          "refValue": {
            "allOf": [
              {
                "$ref": "#/$defs/fieldNameString"
              },
              {
                "description": "The field value, expressed as the identifier of another object."
              }
            ]
          }
        },
        "description": "A key-value pair that describes a property of a pipeline object. The value is specified as either a string value (<code>StringValue</code>) or a reference to another object (<code>RefValue</code>) but not as both."
      },
      "fieldNameString": {
        "type": "string",
        "minLength": 1,
        "maxLength": 256,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
      },
      "fieldStringValue": {
        "type": "string",
        "minLength": 0,
        "maxLength": 10240,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
      },
      "ParameterObjectList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ParameterObject"
        }
      },
      "ParameterObject": {
        "type": "object",
        "required": [
          "id",
          "attributes"
        ],
        "properties": {
          "id": {
            "allOf": [
              {
                "$ref": "#/$defs/fieldNameString"
              },
              {
                "description": "The ID of the parameter object. "
              }
            ]
          },
          "attributes": {
            "allOf": [
              {
                "$ref": "#/$defs/ParameterAttributeList"
              },
              {
                "description": "The attributes of the parameter object."
              }
            ]
          }
        },
        "description": "Contains information about a parameter object."
      },
      "ParameterAttributeList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ParameterAttribute"
        }
      },
      "ParameterAttribute": {
        "type": "object",
        "required": [
          "key",
          "stringValue"
        ],
        "properties": {
          "key": {
            "allOf": [
              {
                "$ref": "#/$defs/attributeNameString"
              },
              {
                "description": "The field identifier."
              }
            ]
          },
          "stringValue": {
            "allOf": [
              {
                "$ref": "#/$defs/attributeValueString"
              },
              {
                "description": "The field value, expressed as a String."
              }
            ]
          }
        },
        "description": "The attributes allowed or specified with a parameter object."
      },
      "attributeNameString": {
        "type": "string",
        "minLength": 1,
        "maxLength": 256,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
      },
      "attributeValueString": {
        "type": "string",
        "minLength": 0,
        "maxLength": 10240,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
      },
      "ParameterValueList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ParameterValue"
        }
      },
      "ParameterValue": {
        "type": "object",
        "required": [
          "id",
          "stringValue"
        ],
        "properties": {
          "id": {
            "allOf": [
              {
                "$ref": "#/$defs/fieldNameString"
              },
              {
                "description": "The ID of the parameter value."
              }
            ]
          },
          "stringValue": {
            "allOf": [
              {
                "$ref": "#/$defs/fieldStringValue"
              },
              {
                "description": "The field value, expressed as a String."
              }
            ]
          }
        },
        "description": "A value or list of parameter values. "
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://datapipeline.us-east-1.amazonaws.com/#X-Amz-Target=DataPipeline.PutPipelineDefinition"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Contains the output of PutPipelineDefinition.",
        "**Key properties:**",
        {
          "$ul": [
            "**validationErrors**",
            "**validationWarnings**",
            "**errored**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
