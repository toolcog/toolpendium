{
  "name": "UpdateResource",
  "description": "Updates data for the resource. To have the latest information, it must be preceded by a <a>DescribeResource</a> call. The dataset in the request should be the one expected when performing another <code>DescribeResource</code> call.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "WorkMailService.UpdateResource"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/UpdateResourceRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "UpdateResourceRequest": {
        "type": "object",
        "required": [
          "OrganizationId",
          "ResourceId"
        ],
        "title": "UpdateResourceRequest",
        "properties": {
          "OrganizationId": {
            "allOf": [
              {
                "$ref": "#/$defs/OrganizationId"
              },
              {
                "description": "The identifier associated with the organization for which the resource is updated."
              }
            ]
          },
          "ResourceId": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceId"
              },
              {
                "description": "The identifier of the resource to be updated."
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceName"
              },
              {
                "description": "The name of the resource to be updated."
              }
            ]
          },
          "BookingOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/BookingOptions"
              },
              {
                "description": "The resource's booking options to be updated."
              }
            ]
          }
        }
      },
      "OrganizationId": {
        "type": "string",
        "pattern": "^m-[0-9a-f]{32}$",
        "minLength": 34,
        "maxLength": 34
      },
      "ResourceId": {
        "type": "string",
        "pattern": "^r-[0-9a-f]{32}$",
        "minLength": 34,
        "maxLength": 34
      },
      "ResourceName": {
        "type": "string",
        "pattern": "[\\w\\-.]+(@[a-zA-Z0-9.\\-]+\\.[a-zA-Z0-9-]{2,})?",
        "minLength": 1,
        "maxLength": 20
      },
      "BookingOptions": {
        "type": "object",
        "properties": {
          "AutoAcceptRequests": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "The resource's ability to automatically reply to requests. If disabled, delegates must be associated to the resource."
              }
            ]
          },
          "AutoDeclineRecurringRequests": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "The resource's ability to automatically decline any recurring requests."
              }
            ]
          },
          "AutoDeclineConflictingRequests": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "The resource's ability to automatically decline any conflicting requests."
              }
            ]
          }
        },
        "description": "At least one delegate must be associated to the resource to disable automatic replies from the resource."
      },
      "Boolean": {
        "type": "boolean"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://workmail.us-east-1.amazonaws.com/#X-Amz-Target=WorkMailService.UpdateResource"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "487": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "488": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "489": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
