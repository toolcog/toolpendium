{
  "name": "UpdateImpersonationRole",
  "description": "Updates an impersonation role for the given WorkMail organization.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "WorkMailService.UpdateImpersonationRole"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/UpdateImpersonationRoleRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "UpdateImpersonationRoleRequest": {
        "type": "object",
        "required": [
          "OrganizationId",
          "ImpersonationRoleId",
          "Name",
          "Type",
          "Rules"
        ],
        "title": "UpdateImpersonationRoleRequest",
        "properties": {
          "OrganizationId": {
            "allOf": [
              {
                "$ref": "#/$defs/OrganizationId"
              },
              {
                "description": "The WorkMail organization that contains the impersonation role to update."
              }
            ]
          },
          "ImpersonationRoleId": {
            "allOf": [
              {
                "$ref": "#/$defs/ImpersonationRoleId"
              },
              {
                "description": "The ID of the impersonation role to update."
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/ImpersonationRoleName"
              },
              {
                "description": "The updated impersonation role name."
              }
            ]
          },
          "Type": {
            "allOf": [
              {
                "$ref": "#/$defs/ImpersonationRoleType"
              },
              {
                "description": "The updated impersonation role type."
              }
            ]
          },
          "Description": {
            "allOf": [
              {
                "$ref": "#/$defs/ImpersonationRoleDescription"
              },
              {
                "description": "The updated impersonation role description."
              }
            ]
          },
          "Rules": {
            "allOf": [
              {
                "$ref": "#/$defs/ImpersonationRuleList"
              },
              {
                "description": "The updated list of rules."
              }
            ]
          }
        }
      },
      "OrganizationId": {
        "type": "string",
        "pattern": "^m-[0-9a-f]{32}$",
        "minLength": 34,
        "maxLength": 34
      },
      "ImpersonationRoleId": {
        "type": "string",
        "pattern": "[a-zA-Z0-9_-]+",
        "minLength": 1,
        "maxLength": 64
      },
      "ImpersonationRoleName": {
        "type": "string",
        "pattern": "[^\\x00-\\x1F\\x7F\\x3C\\x3E\\x5C]+",
        "minLength": 1,
        "maxLength": 64
      },
      "ImpersonationRoleType": {
        "type": "string",
        "enum": [
          "FULL_ACCESS",
          "READ_ONLY"
        ]
      },
      "ImpersonationRoleDescription": {
        "type": "string",
        "pattern": "[^\\x00-\\x09\\x0B\\x0C\\x0E-\\x1F\\x7F\\x3C\\x3E\\x5C]+",
        "minLength": 1,
        "maxLength": 256
      },
      "ImpersonationRuleList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ImpersonationRule"
        },
        "minItems": 0,
        "maxItems": 10
      },
      "ImpersonationRule": {
        "type": "object",
        "required": [
          "ImpersonationRuleId",
          "Effect"
        ],
        "properties": {
          "ImpersonationRuleId": {
            "allOf": [
              {
                "$ref": "#/$defs/ImpersonationRuleId"
              },
              {
                "description": "The identifier of the rule."
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/ImpersonationRuleName"
              },
              {
                "description": "The rule name."
              }
            ]
          },
          "Description": {
            "allOf": [
              {
                "$ref": "#/$defs/ImpersonationRuleDescription"
              },
              {
                "description": "The rule description."
              }
            ]
          },
          "Effect": {
            "allOf": [
              {
                "$ref": "#/$defs/AccessEffect"
              },
              {
                "description": "The effect of the rule when it matches the input. Allowed effect values are <code>ALLOW</code> or <code>DENY</code>."
              }
            ]
          },
          "TargetUsers": {
            "allOf": [
              {
                "$ref": "#/$defs/TargetUsers"
              },
              {
                "description": "A list of user IDs that match the rule."
              }
            ]
          },
          "NotTargetUsers": {
            "allOf": [
              {
                "$ref": "#/$defs/TargetUsers"
              },
              {
                "description": "A list of user IDs that don't match the rule."
              }
            ]
          }
        },
        "description": "The rules for the given impersonation role."
      },
      "ImpersonationRuleId": {
        "type": "string",
        "pattern": "[a-zA-Z0-9_-]+",
        "minLength": 1,
        "maxLength": 64
      },
      "ImpersonationRuleName": {
        "type": "string",
        "pattern": "[^\\x00-\\x1F\\x7F\\x3C\\x3E\\x5C]+",
        "minLength": 1,
        "maxLength": 64
      },
      "ImpersonationRuleDescription": {
        "type": "string",
        "pattern": "[^\\x00-\\x09\\x0B\\x0C\\x0E-\\x1F\\x7F\\x3C\\x3E\\x5C]+",
        "minLength": 1,
        "maxLength": 256
      },
      "AccessEffect": {
        "type": "string",
        "enum": [
          "ALLOW",
          "DENY"
        ]
      },
      "TargetUsers": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/EntityIdentifier"
        },
        "minItems": 1,
        "maxItems": 10
      },
      "EntityIdentifier": {
        "type": "string",
        "pattern": "[a-zA-Z0-9._%+@-]+",
        "minLength": 1,
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://workmail.us-east-1.amazonaws.com/#X-Amz-Target=WorkMailService.UpdateImpersonationRole"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
