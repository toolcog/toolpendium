{
  "name": "PutAccessControlRule",
  "description": "Adds a new access control rule for the specified organization. The rule allows or denies access to the organization for the specified IPv4 addresses, access protocol actions, user IDs and impersonation IDs. Adding a new rule with the same name as an existing rule replaces the older rule.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "WorkMailService.PutAccessControlRule"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/PutAccessControlRuleRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "PutAccessControlRuleRequest": {
        "type": "object",
        "required": [
          "Name",
          "Effect",
          "Description",
          "OrganizationId"
        ],
        "title": "PutAccessControlRuleRequest",
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/AccessControlRuleName"
              },
              {
                "description": "The rule name."
              }
            ]
          },
          "Effect": {
            "allOf": [
              {
                "$ref": "#/$defs/AccessControlRuleEffect"
              },
              {
                "description": "The rule effect."
              }
            ]
          },
          "Description": {
            "allOf": [
              {
                "$ref": "#/$defs/AccessControlRuleDescription"
              },
              {
                "description": "The rule description."
              }
            ]
          },
          "IpRanges": {
            "allOf": [
              {
                "$ref": "#/$defs/IpRangeList"
              },
              {
                "description": "IPv4 CIDR ranges to include in the rule."
              }
            ]
          },
          "NotIpRanges": {
            "allOf": [
              {
                "$ref": "#/$defs/IpRangeList"
              },
              {
                "description": "IPv4 CIDR ranges to exclude from the rule."
              }
            ]
          },
          "Actions": {
            "allOf": [
              {
                "$ref": "#/$defs/ActionsList"
              },
              {
                "description": "Access protocol actions to include in the rule. Valid values include <code>ActiveSync</code>, <code>AutoDiscover</code>, <code>EWS</code>, <code>IMAP</code>, <code>SMTP</code>, <code>WindowsOutlook</code>, and <code>WebMail</code>."
              }
            ]
          },
          "NotActions": {
            "allOf": [
              {
                "$ref": "#/$defs/ActionsList"
              },
              {
                "description": "Access protocol actions to exclude from the rule. Valid values include <code>ActiveSync</code>, <code>AutoDiscover</code>, <code>EWS</code>, <code>IMAP</code>, <code>SMTP</code>, <code>WindowsOutlook</code>, and <code>WebMail</code>."
              }
            ]
          },
          "UserIds": {
            "allOf": [
              {
                "$ref": "#/$defs/UserIdList"
              },
              {
                "description": "User IDs to include in the rule."
              }
            ]
          },
          "NotUserIds": {
            "allOf": [
              {
                "$ref": "#/$defs/UserIdList"
              },
              {
                "description": "User IDs to exclude from the rule."
              }
            ]
          },
          "OrganizationId": {
            "allOf": [
              {
                "$ref": "#/$defs/OrganizationId"
              },
              {
                "description": "The identifier of the organization."
              }
            ]
          },
          "ImpersonationRoleIds": {
            "allOf": [
              {
                "$ref": "#/$defs/ImpersonationRoleIdList"
              },
              {
                "description": "Impersonation role IDs to include in the rule."
              }
            ]
          },
          "NotImpersonationRoleIds": {
            "allOf": [
              {
                "$ref": "#/$defs/ImpersonationRoleIdList"
              },
              {
                "description": "Impersonation role IDs to exclude from the rule."
              }
            ]
          }
        }
      },
      "AccessControlRuleName": {
        "type": "string",
        "pattern": "[a-zA-Z0-9_-]+",
        "minLength": 1,
        "maxLength": 64
      },
      "AccessControlRuleEffect": {
        "type": "string",
        "enum": [
          "ALLOW",
          "DENY"
        ]
      },
      "AccessControlRuleDescription": {
        "type": "string",
        "pattern": "[\\u0020-\\u00FF]+",
        "minLength": 0,
        "maxLength": 255
      },
      "IpRangeList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/IpRange"
        },
        "minItems": 0,
        "maxItems": 1024
      },
      "IpRange": {
        "type": "string",
        "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/([0-9]|[12][0-9]|3[0-2])$",
        "minLength": 1,
        "maxLength": 18
      },
      "ActionsList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/AccessControlRuleAction"
        },
        "minItems": 0,
        "maxItems": 10
      },
      "AccessControlRuleAction": {
        "type": "string",
        "pattern": "[a-zA-Z]+",
        "minLength": 1,
        "maxLength": 64
      },
      "UserIdList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/WorkMailIdentifier"
        },
        "minItems": 0,
        "maxItems": 10
      },
      "WorkMailIdentifier": {
        "type": "string",
        "minLength": 12,
        "maxLength": 256
      },
      "OrganizationId": {
        "type": "string",
        "pattern": "^m-[0-9a-f]{32}$",
        "minLength": 34,
        "maxLength": 34
      },
      "ImpersonationRoleIdList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ImpersonationRoleId"
        },
        "minItems": 0,
        "maxItems": 10
      },
      "ImpersonationRoleId": {
        "type": "string",
        "pattern": "[a-zA-Z0-9_-]+",
        "minLength": 1,
        "maxLength": 64
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://workmail.us-east-1.amazonaws.com/#X-Amz-Target=WorkMailService.PutAccessControlRule"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
