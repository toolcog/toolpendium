openapi: 3.0.0
info:
  version: '2021-01-01'
  x-release: v4
  title: Amazon OpenSearch Service
  description: '<p>Use the Amazon OpenSearch Service configuration API to create, configure, and manage OpenSearch Service domains.</p> <p>For sample code that uses the configuration API, see the <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/opensearch-configuration-samples.html"> <i>Amazon OpenSearch Service Developer Guide</i> </a>. The guide also contains <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/request-signing.html">sample code</a> for sending signed HTTP requests to the OpenSearch APIs. The endpoint for configuration service requests is Region specific: es.<i>region</i>.amazonaws.com. For example, es.us-east-1.amazonaws.com. For a current list of supported Regions and endpoints, see <a href="https://docs.aws.amazon.com/general/latest/gr/rande.html#service-regions">Amazon Web Services service endpoints</a>.</p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: opensearch
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/opensearch-2021-01-01.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/es/'
servers:
  - url: 'http://es.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon OpenSearch Service multi-region endpoint
  - url: 'https://es.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon OpenSearch Service multi-region endpoint
  - url: 'http://es.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon OpenSearch Service endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://es.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon OpenSearch Service endpoint for China (Beijing) and China (Ningxia)
paths:
  '/2021-01-01/opensearch/cc/inboundConnection/{ConnectionId}/accept':
    put:
      operationId: AcceptInboundConnection
      description: 'Allows the destination Amazon OpenSearch Service domain owner to accept an inbound cross-cluster search connection request. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/cross-cluster-search.html">Cross-cluster search for Amazon OpenSearch Service</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptInboundConnectionResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '482':
          description: DisabledOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
      parameters:
        - name: ConnectionId
          in: path
          required: true
          description: The ID of the inbound connection to accept.
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            minLength: 10
            maxLength: 256
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2021-01-01/tags:
    post:
      operationId: AddTags
      description: 'Attaches tags to an existing Amazon OpenSearch Service domain. Tags are a set of case-sensitive key-value pairs. A domain can have up to 10 tags. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains-awsresourcetagging.html">Tagging Amazon OpenSearch Service domains</a>.'
      responses:
        '200':
          description: Success
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ARN
                - TagList
              properties:
                ARN:
                  description: 'The Amazon Resource Name (ARN) of the domain. See <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/index.html">Identifiers for IAM Entities </a> in <i>Using AWS Identity and Access Management</i> for more information. '
                  type: string
                  pattern: .*
                  minLength: 20
                  maxLength: 2048
                TagList:
                  description: A list of tags attached to a domain.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2021-01-01/packages/associate/{PackageID}/{DomainName}':
    post:
      operationId: AssociatePackage
      description: 'Associates a package with an Amazon OpenSearch Service domain. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/custom-packages.html">Custom packages for Amazon OpenSearch Service</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociatePackageResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '485':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: PackageID
          in: path
          required: true
          description: 'Internal ID of the package to associate with a domain. Use <code>DescribePackages</code> to find this value. '
          schema:
            type: string
        - name: DomainName
          in: path
          required: true
          description: Name of the domain to associate the package with.
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: The name of an OpenSearch Service domain. Domain names are unique across the domains owned by an account within an Amazon Web Services Region.
            minLength: 3
            maxLength: 28
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2021-01-01/opensearch/domain/{DomainName}/authorizeVpcEndpointAccess':
    post:
      operationId: AuthorizeVpcEndpointAccess
      description: Provides access to an Amazon OpenSearch Service domain through the use of an interface VPC endpoint.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizeVpcEndpointAccessResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: DisabledOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '485':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
      parameters:
        - name: DomainName
          in: path
          required: true
          description: The name of the OpenSearch Service domain to provide access to.
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: The name of an OpenSearch Service domain. Domain names are unique across the domains owned by an account within an Amazon Web Services Region.
            minLength: 3
            maxLength: 28
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Account
              properties:
                Account:
                  description: The Amazon Web Services account ID to grant access to.
                  type: string
                  pattern: '^[0-9]+$'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2021-01-01/opensearch/serviceSoftwareUpdate/cancel:
    post:
      operationId: CancelServiceSoftwareUpdate
      description: 'Cancels a scheduled service software update for an Amazon OpenSearch Service domain. You can only perform this operation before the <code>AutomatedUpdateDate</code> and when the domain''s <code>UpdateStatus</code> is <code>PENDING_UPDATE</code>. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/service-software.html">Service software updates in Amazon OpenSearch Service</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelServiceSoftwareUpdateResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - DomainName
              properties:
                DomainName:
                  description: The name of an OpenSearch Service domain. Domain names are unique across the domains owned by an account within an Amazon Web Services Region.
                  type: string
                  pattern: '[a-z][a-z0-9\-]+'
                  minLength: 3
                  maxLength: 28
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2021-01-01/opensearch/domain:
    post:
      operationId: CreateDomain
      description: 'Creates an Amazon OpenSearch Service domain. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html">Creating and managing Amazon OpenSearch Service domains</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDomainResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: DisabledOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
        '482':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '483':
          description: InvalidTypeException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTypeException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '486':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - DomainName
              properties:
                DomainName:
                  description: The name of an OpenSearch Service domain. Domain names are unique across the domains owned by an account within an Amazon Web Services Region.
                  type: string
                  pattern: '[a-z][a-z0-9\-]+'
                  minLength: 3
                  maxLength: 28
                EngineVersion:
                  description: 'String of format Elasticsearch_X.Y or OpenSearch_X.Y to specify the engine version for the OpenSearch Service domain. For example, <code>OpenSearch_1.0</code> or <code>Elasticsearch_7.9</code>. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomains">Creating and managing Amazon OpenSearch Service domains</a>.'
                  type: string
                  pattern: '^Elasticsearch_[0-9]{1}\.[0-9]{1,2}$|^OpenSearch_[0-9]{1,2}\.[0-9]{1,2}$'
                  minLength: 14
                  maxLength: 18
                ClusterConfig:
                  description: 'Container for the cluster configuration of an OpenSearch Service domain. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html">Creating and managing Amazon OpenSearch Service domains</a>.'
                  type: object
                  properties:
                    InstanceType:
                      allOf:
                        - $ref: '#/components/schemas/OpenSearchPartitionInstanceType'
                        - description: Instance type of data nodes in the cluster.
                    InstanceCount:
                      allOf:
                        - $ref: '#/components/schemas/IntegerClass'
                        - description: 'Number of dedicated master nodes in the cluster. This number must be greater than 1, otherwise you receive a validation exception.'
                    DedicatedMasterEnabled:
                      allOf:
                        - $ref: '#/components/schemas/Boolean'
                        - description: Indicates whether dedicated master nodes are enabled for the cluster.<code>True</code> if the cluster will use a dedicated master node.<code>False</code> if the cluster will not.
                    ZoneAwarenessEnabled:
                      allOf:
                        - $ref: '#/components/schemas/Boolean'
                        - description: 'Indicates whether multiple Availability Zones are enabled. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains-multiaz.html">Configuring a multi-AZ domain in Amazon OpenSearch Service</a>.'
                    ZoneAwarenessConfig:
                      allOf:
                        - $ref: '#/components/schemas/ZoneAwarenessConfig'
                        - description: Container for zone awareness configuration options. Only required if <code>ZoneAwarenessEnabled</code> is <code>true</code>.
                    DedicatedMasterType:
                      allOf:
                        - $ref: '#/components/schemas/OpenSearchPartitionInstanceType'
                        - description: OpenSearch Service instance type of the dedicated master nodes in the cluster.
                    DedicatedMasterCount:
                      allOf:
                        - $ref: '#/components/schemas/IntegerClass'
                        - description: 'Number of dedicated master nodes in the cluster. This number must be greater than 2 and not 4, otherwise you receive a validation exception.'
                    WarmEnabled:
                      allOf:
                        - $ref: '#/components/schemas/Boolean'
                        - description: Whether to enable warm storage for the cluster.
                    WarmType:
                      allOf:
                        - $ref: '#/components/schemas/OpenSearchWarmPartitionInstanceType'
                        - description: The instance type for the cluster's warm nodes.
                    WarmCount:
                      allOf:
                        - $ref: '#/components/schemas/IntegerClass'
                        - description: The number of warm nodes in the cluster.
                    ColdStorageOptions:
                      allOf:
                        - $ref: '#/components/schemas/ColdStorageOptions'
                        - description: Container for cold storage configuration options.
                    MultiAZWithStandbyEnabled:
                      allOf:
                        - $ref: '#/components/schemas/Boolean'
                        - description: 'A boolean that indicates whether a multi-AZ domain is turned on with a standby AZ. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains-multiaz.html">Configuring a multi-AZ domain in Amazon OpenSearch Service</a>. '
                EBSOptions:
                  description: Container for the parameters required to enable EBS-based storage for an OpenSearch Service domain.
                  type: object
                  properties:
                    EBSEnabled:
                      allOf:
                        - $ref: '#/components/schemas/Boolean'
                        - description: Indicates whether EBS volumes are attached to data nodes in an OpenSearch Service domain.
                    VolumeType:
                      allOf:
                        - $ref: '#/components/schemas/VolumeType'
                        - description: Specifies the type of EBS volumes attached to data nodes.
                    VolumeSize:
                      allOf:
                        - $ref: '#/components/schemas/IntegerClass'
                        - description: Specifies the size (in GiB) of EBS volumes attached to data nodes.
                    Iops:
                      allOf:
                        - $ref: '#/components/schemas/IntegerClass'
                        - description: Specifies the baseline input/output (I/O) performance of EBS volumes attached to data nodes. Applicable only for the <code>gp3</code> and provisioned IOPS EBS volume types.
                    Throughput:
                      allOf:
                        - $ref: '#/components/schemas/IntegerClass'
                        - description: Specifies the throughput (in MiB/s) of the EBS volumes attached to data nodes. Applicable only for the <code>gp3</code> volume type.
                AccessPolicies:
                  description: 'Access policy rules for an Amazon OpenSearch Service domain endpoint. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomain-configure-access-policies">Configuring access policies</a>. The maximum size of a policy document is 100 KB.'
                  type: string
                  pattern: .*
                  minLength: 0
                  maxLength: 102400
                SnapshotOptions:
                  description: 'The time, in UTC format, when OpenSearch Service takes a daily automated snapshot of the specified domain. Default is <code>0</code> hours.'
                  type: object
                  properties:
                    AutomatedSnapshotStartHour:
                      allOf:
                        - $ref: '#/components/schemas/IntegerClass'
                        - description: 'The time, in UTC format, when OpenSearch Service takes a daily automated snapshot of the specified domain. Default is <code>0</code> hours.'
                VPCOptions:
                  description: 'Options to specify the subnets and security groups for an Amazon OpenSearch Service VPC endpoint. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/vpc.html">Launching your Amazon OpenSearch Service domains using a VPC</a>.'
                  type: object
                  properties:
                    SubnetIds:
                      allOf:
                        - $ref: '#/components/schemas/StringList'
                        - description: 'A list of subnet IDs associated with the VPC endpoints for the domain. If your domain uses multiple Availability Zones, you need to provide two subnet IDs, one per zone. Otherwise, provide only one.'
                    SecurityGroupIds:
                      allOf:
                        - $ref: '#/components/schemas/StringList'
                        - description: 'The list of security group IDs associated with the VPC endpoints for the domain. If you do not provide a security group ID, OpenSearch Service uses the default security group for the VPC.'
                CognitoOptions:
                  description: 'Container for the parameters required to enable Cognito authentication for an OpenSearch Service domain. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/cognito-auth.html">Configuring Amazon Cognito authentication for OpenSearch Dashboards</a>.'
                  type: object
                  properties:
                    Enabled:
                      allOf:
                        - $ref: '#/components/schemas/Boolean'
                        - description: Whether to enable or disable Amazon Cognito authentication for OpenSearch Dashboards.
                    UserPoolId:
                      allOf:
                        - $ref: '#/components/schemas/UserPoolId'
                        - description: The Amazon Cognito user pool ID that you want OpenSearch Service to use for OpenSearch Dashboards authentication.
                    IdentityPoolId:
                      allOf:
                        - $ref: '#/components/schemas/IdentityPoolId'
                        - description: The Amazon Cognito identity pool ID that you want OpenSearch Service to use for OpenSearch Dashboards authentication.
                    RoleArn:
                      allOf:
                        - $ref: '#/components/schemas/RoleArn'
                        - description: The <code>AmazonOpenSearchServiceCognitoAccess</code> role that allows OpenSearch Service to configure your user pool and identity pool.
                EncryptionAtRestOptions:
                  description: 'Specifies whether the domain should encrypt data at rest, and if so, the Key Management Service (KMS) key to use. Can be used only to create a new domain, not update an existing one.'
                  type: object
                  properties:
                    Enabled:
                      allOf:
                        - $ref: '#/components/schemas/Boolean'
                        - description: True to enable encryption at rest.
                    KmsKeyId:
                      allOf:
                        - $ref: '#/components/schemas/KmsKeyId'
                        - description: The KMS key ID. Takes the form <code>1a2a3a4-1a2a-3a4a-5a6a-1a2a3a4a5a6a</code>.
                NodeToNodeEncryptionOptions:
                  description: 'Enables or disables node-to-node encryption. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/ntn.html">Node-to-node encryption for Amazon OpenSearch Service</a>.'
                  type: object
                  properties:
                    Enabled:
                      allOf:
                        - $ref: '#/components/schemas/Boolean'
                        - description: True to enable node-to-node encryption.
                AdvancedOptions:
                  description: '<p>Exposes native OpenSearch configuration values from <code>opensearch.yml</code>. The following advanced options are available: </p> <ul> <li> <p>Allows references to indexes in an HTTP request body. Must be <code>false</code> when configuring access to individual sub-resources. Default is <code>true</code>.</p> </li> <li> <p>Specifies the percentage of heap space allocated to field data. Default is unbounded.</p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomain-configure-advanced-options">Advanced cluster parameters</a>.</p>'
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/String'
                LogPublishingOptions:
                  description: Key-value pairs to configure log publishing.
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/LogPublishingOption'
                DomainEndpointOptions:
                  description: Options to configure a custom endpoint for an OpenSearch Service domain.
                  type: object
                  properties:
                    EnforceHTTPS:
                      allOf:
                        - $ref: '#/components/schemas/Boolean'
                        - description: True to require that all traffic to the domain arrive over HTTPS.
                    TLSSecurityPolicy:
                      allOf:
                        - $ref: '#/components/schemas/TLSSecurityPolicy'
                        - description: '<p>Specify the TLS security policy to apply to the HTTPS endpoint of the domain.</p> <p> Can be one of the following values:</p> <ul> <li> <p> <b>Policy-Min-TLS-1-0-2019-07:</b> TLS security policy which supports TLS version 1.0 and higher.</p> </li> <li> <p> <b>Policy-Min-TLS-1-2-2019-07:</b> TLS security policy which supports only TLS version 1.2 </p> </li> </ul>'
                    CustomEndpointEnabled:
                      allOf:
                        - $ref: '#/components/schemas/Boolean'
                        - description: Whether to enable a custom endpoint for the domain.
                    CustomEndpoint:
                      allOf:
                        - $ref: '#/components/schemas/DomainNameFqdn'
                        - description: The fully qualified URL for the custom endpoint.
                    CustomEndpointCertificateArn:
                      allOf:
                        - $ref: '#/components/schemas/ARN'
                        - description: 'The ARN for your security certificate, managed in Amazon Web Services Certificate Manager (ACM).'
                AdvancedSecurityOptions:
                  description: 'Options for enabling and configuring fine-grained access control. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/fgac.html">Fine-grained access control in Amazon OpenSearch Service</a>.'
                  type: object
                  properties:
                    Enabled:
                      allOf:
                        - $ref: '#/components/schemas/Boolean'
                        - description: True to enable fine-grained access control.
                    InternalUserDatabaseEnabled:
                      allOf:
                        - $ref: '#/components/schemas/Boolean'
                        - description: True to enable the internal user database.
                    MasterUserOptions:
                      allOf:
                        - $ref: '#/components/schemas/MasterUserOptions'
                        - description: Container for information about the master user.
                    SAMLOptions:
                      allOf:
                        - $ref: '#/components/schemas/SAMLOptionsInput'
                        - description: Container for information about the SAML configuration for OpenSearch Dashboards.
                    AnonymousAuthEnabled:
                      allOf:
                        - $ref: '#/components/schemas/Boolean'
                        - description: 'True to enable a 30-day migration period during which administrators can create role mappings. Only necessary when <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/fgac.html#fgac-enabling-existing">enabling fine-grained access control on an existing domain</a>.'
                TagList:
                  description: A list of tags attached to a domain.
                  type: array
                  items:
                    $ref: '#/components/schemas/Tag'
                AutoTuneOptions:
                  description: 'Options for configuring Auto-Tune. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html">Auto-Tune for Amazon OpenSearch Service</a> '
                  type: object
                  properties:
                    DesiredState:
                      allOf:
                        - $ref: '#/components/schemas/AutoTuneDesiredState'
                        - description: Whether Auto-Tune is enabled or disabled.
                    MaintenanceSchedules:
                      allOf:
                        - $ref: '#/components/schemas/AutoTuneMaintenanceScheduleList'
                        - description: 'A list of maintenance schedules during which Auto-Tune can deploy changes. Maintenance windows are deprecated and have been replaced with <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/off-peak.html">off-peak windows</a>.'
                    UseOffPeakWindow:
                      allOf:
                        - $ref: '#/components/schemas/Boolean'
                        - description: Whether to schedule Auto-Tune optimizations that require blue/green deployments during the domain's configured daily off-peak window.
                OffPeakWindowOptions:
                  description: 'Options for a domain''s <a href="https://docs.aws.amazon.com/opensearch-service/latest/APIReference/API_OffPeakWindow.html">off-peak window</a>, during which OpenSearch Service can perform mandatory configuration changes on the domain.'
                  type: object
                  properties:
                    Enabled:
                      allOf:
                        - $ref: '#/components/schemas/Boolean'
                        - description: '<p>Whether to enable an off-peak window.</p> <p>This option is only available when modifying a domain created prior to February 16, 2023, not when creating a new domain. All domains created after this date have the off-peak window enabled by default. You can''t disable the off-peak window after it''s enabled for a domain.</p>'
                    OffPeakWindow:
                      allOf:
                        - $ref: '#/components/schemas/OffPeakWindow'
                        - description: Off-peak window settings for the domain.
                SoftwareUpdateOptions:
                  description: Options for configuring service software updates for a domain.
                  type: object
                  properties:
                    AutoSoftwareUpdateEnabled:
                      allOf:
                        - $ref: '#/components/schemas/Boolean'
                        - description: Whether automatic service software updates are enabled for the domain.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2021-01-01/opensearch/cc/outboundConnection:
    post:
      operationId: CreateOutboundConnection
      description: 'Creates a new cross-cluster search connection from a source Amazon OpenSearch Service domain to a destination domain. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/cross-cluster-search.html">Cross-cluster search for Amazon OpenSearch Service</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOutboundConnectionResponse'
        '480':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '483':
          description: DisabledOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - LocalDomainInfo
                - RemoteDomainInfo
                - ConnectionAlias
              properties:
                LocalDomainInfo:
                  description: Container for information about an OpenSearch Service domain.
                  type: object
                  properties:
                    AWSDomainInformation:
                      allOf:
                        - $ref: '#/components/schemas/AWSDomainInformation'
                        - description: Information about an Amazon OpenSearch Service domain.
                RemoteDomainInfo:
                  description: Container for information about an OpenSearch Service domain.
                  type: object
                  properties:
                    AWSDomainInformation:
                      allOf:
                        - $ref: '#/components/schemas/AWSDomainInformation'
                        - description: Information about an Amazon OpenSearch Service domain.
                ConnectionAlias:
                  description: Name of the connection.
                  type: string
                  pattern: '[a-zA-Z][a-zA-Z0-9\-\_]+'
                  minLength: 2
                  maxLength: 100
                ConnectionMode:
                  description: <p>The connection mode for the cross-cluster connection.</p> <ul> <li> <p> <b>DIRECT</b> - Used for cross-cluster search or cross-cluster replication.</p> </li> <li> <p> <b>VPC_ENDPOINT</b> - Used for remote reindex between Amazon OpenSearch Service VPC domains.</p> </li> </ul>
                  type: string
                  enum:
                    - DIRECT
                    - VPC_ENDPOINT
                ConnectionProperties:
                  description: The connection properties of an outbound connection.
                  type: object
                  properties:
                    Endpoint:
                      allOf:
                        - $ref: '#/components/schemas/Endpoint'
                        - description: <important> <p>The Endpoint attribute cannot be modified. </p> </important> <p>The endpoint of the remote domain. Applicable for VPC_ENDPOINT connection mode.</p>
                    CrossClusterSearch:
                      allOf:
                        - $ref: '#/components/schemas/CrossClusterSearchConnectionProperties'
                        - description: The connection properties for cross cluster search.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2021-01-01/packages:
    post:
      operationId: CreatePackage
      description: 'Creates a package for use with Amazon OpenSearch Service domains. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/custom-packages.html">Custom packages for Amazon OpenSearch Service</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePackageResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: InvalidTypeException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTypeException'
        '484':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - PackageName
                - PackageType
                - PackageSource
              properties:
                PackageName:
                  description: Unique name for the package.
                  type: string
                  pattern: '[a-z][a-z0-9\-]+'
                  minLength: 3
                  maxLength: 28
                PackageType:
                  description: The type of package.
                  type: string
                  enum:
                    - TXT-DICTIONARY
                PackageDescription:
                  description: Description of the package.
                  type: string
                  maxLength: 1024
                PackageSource:
                  description: The Amazon S3 location to import the package from.
                  type: object
                  properties:
                    S3BucketName:
                      allOf:
                        - $ref: '#/components/schemas/S3BucketName'
                        - description: The name of the Amazon S3 bucket containing the package.
                    S3Key:
                      allOf:
                        - $ref: '#/components/schemas/S3Key'
                        - description: Key (file name) of the package.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2021-01-01/opensearch/vpcEndpoints:
    post:
      operationId: CreateVpcEndpoint
      description: Creates an Amazon OpenSearch Service-managed VPC endpoint.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateVpcEndpointResponse'
        '480':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '484':
          description: DisabledOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
        '485':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - DomainArn
                - VpcOptions
              properties:
                DomainArn:
                  description: The Amazon Resource Name (ARN) of the domain to create the endpoint for.
                  type: string
                  pattern: 'arn:aws[a-z\-]*:[a-z]+:[a-z0-9\-]+:[0-9]+:domain\/[a-z0-9\-]+'
                  minLength: 1
                  maxLength: 512
                VpcOptions:
                  description: 'Options to specify the subnets and security groups for an Amazon OpenSearch Service VPC endpoint. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/vpc.html">Launching your Amazon OpenSearch Service domains using a VPC</a>.'
                  type: object
                  properties:
                    SubnetIds:
                      allOf:
                        - $ref: '#/components/schemas/StringList'
                        - description: 'A list of subnet IDs associated with the VPC endpoints for the domain. If your domain uses multiple Availability Zones, you need to provide two subnet IDs, one per zone. Otherwise, provide only one.'
                    SecurityGroupIds:
                      allOf:
                        - $ref: '#/components/schemas/StringList'
                        - description: 'The list of security group IDs associated with the VPC endpoints for the domain. If you do not provide a security group ID, OpenSearch Service uses the default security group for the VPC.'
                ClientToken:
                  description: 'Unique, case-sensitive identifier to ensure idempotency of the request.'
                  type: string
                  minLength: 1
                  maxLength: 64
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListVpcEndpoints
      description: Retrieves all Amazon OpenSearch Service-managed VPC endpoints in the current Amazon Web Services account and Region.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVpcEndpointsResponse'
        '480':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '481':
          description: DisabledOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
        '482':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
      parameters:
        - name: nextToken
          in: query
          required: false
          description: 'If your initial <code>ListVpcEndpoints</code> operation returns a <code>nextToken</code>, you can include the returned <code>nextToken</code> in subsequent <code>ListVpcEndpoints</code> operations, which returns results in the next page.'
          schema:
            type: string
            description: 'When <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page.'
  '/2021-01-01/opensearch/domain/{DomainName}':
    delete:
      operationId: DeleteDomain
      description: Deletes an Amazon OpenSearch Service domain and all of its data. You can't recover a domain after you delete it.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDomainResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: DomainName
          in: path
          required: true
          description: The name of the domain you want to permanently delete.
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: The name of an OpenSearch Service domain. Domain names are unique across the domains owned by an account within an Amazon Web Services Region.
            minLength: 3
            maxLength: 28
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeDomain
      description: 'Describes the domain configuration for the specified Amazon OpenSearch Service domain, including the domain ID, domain service endpoint, and domain ARN.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDomainResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: DomainName
          in: path
          required: true
          description: The name of the domain that you want information about.
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: The name of an OpenSearch Service domain. Domain names are unique across the domains owned by an account within an Amazon Web Services Region.
            minLength: 3
            maxLength: 28
  '/2021-01-01/opensearch/cc/inboundConnection/{ConnectionId}':
    delete:
      operationId: DeleteInboundConnection
      description: 'Allows the destination Amazon OpenSearch Service domain owner to delete an existing inbound cross-cluster search connection. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/cross-cluster-search.html">Cross-cluster search for Amazon OpenSearch Service</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteInboundConnectionResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: DisabledOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
      parameters:
        - name: ConnectionId
          in: path
          required: true
          description: The ID of the inbound connection to permanently delete.
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            minLength: 10
            maxLength: 256
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2021-01-01/opensearch/cc/outboundConnection/{ConnectionId}':
    delete:
      operationId: DeleteOutboundConnection
      description: 'Allows the source Amazon OpenSearch Service domain owner to delete an existing outbound cross-cluster search connection. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/cross-cluster-search.html">Cross-cluster search for Amazon OpenSearch Service</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteOutboundConnectionResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: DisabledOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
      parameters:
        - name: ConnectionId
          in: path
          required: true
          description: The ID of the outbound connection you want to permanently delete.
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            minLength: 10
            maxLength: 256
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2021-01-01/packages/{PackageID}':
    delete:
      operationId: DeletePackage
      description: 'Deletes an Amazon OpenSearch Service package. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/custom-packages.html">Custom packages for Amazon OpenSearch Service</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletePackageResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '485':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: PackageID
          in: path
          required: true
          description: The internal ID of the package you want to delete. Use <code>DescribePackages</code> to find this value.
          schema:
            type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2021-01-01/opensearch/vpcEndpoints/{VpcEndpointId}':
    delete:
      operationId: DeleteVpcEndpoint
      description: Deletes an Amazon OpenSearch Service-managed interface VPC endpoint.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteVpcEndpointResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: DisabledOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
        '482':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '483':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
      parameters:
        - name: VpcEndpointId
          in: path
          required: true
          description: The unique identifier of the endpoint.
          schema:
            type: string
            pattern: '^aos-[a-zA-Z0-9]*$'
            minLength: 5
            maxLength: 256
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2021-01-01/opensearch/domain/{DomainName}/autoTunes':
    get:
      operationId: DescribeDomainAutoTunes
      description: 'Returns the list of optimizations that Auto-Tune has made to an Amazon OpenSearch Service domain. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html">Auto-Tune for Amazon OpenSearch Service</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDomainAutoTunesResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: DomainName
          in: path
          required: true
          description: Name of the domain that you want Auto-Tune details about.
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: The name of an OpenSearch Service domain. Domain names are unique across the domains owned by an account within an Amazon Web Services Region.
            minLength: 3
            maxLength: 28
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MaxResults:
                  description: An optional parameter that specifies the maximum number of results to return for a given request.
                  type: integer
                  maximum: 100
                NextToken:
                  description: 'When <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page.'
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2021-01-01/opensearch/domain/{DomainName}/progress':
    get:
      operationId: DescribeDomainChangeProgress
      description: 'Returns information about the current blue/green deployment happening on an Amazon OpenSearch Service domain. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains-configuration-changes.html">Making configuration changes in Amazon OpenSearch Service</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDomainChangeProgressResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: DomainName
          in: path
          required: true
          description: The name of the domain to get progress information for.
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: The name of an OpenSearch Service domain. Domain names are unique across the domains owned by an account within an Amazon Web Services Region.
            minLength: 3
            maxLength: 28
        - name: changeid
          in: query
          required: false
          description: 'The specific change ID for which you want to get progress information. If omitted, the request returns information about the most recent configuration change.'
          schema:
            type: string
            pattern: '\p{XDigit}{8}-\p{XDigit}{4}-\p{XDigit}{4}-\p{XDigit}{4}-\p{XDigit}{12}'
            minLength: 36
            maxLength: 36
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2021-01-01/opensearch/domain/{DomainName}/config':
    get:
      operationId: DescribeDomainConfig
      description: Returns the configuration of an Amazon OpenSearch Service domain.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDomainConfigResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: DomainName
          in: path
          required: true
          description: Name of the OpenSearch Service domain configuration that you want to describe.
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: The name of an OpenSearch Service domain. Domain names are unique across the domains owned by an account within an Amazon Web Services Region.
            minLength: 3
            maxLength: 28
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateDomainConfig
      description: Modifies the cluster configuration of the specified Amazon OpenSearch Service domain.sl
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDomainConfigResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: InvalidTypeException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTypeException'
        '483':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: DomainName
          in: path
          required: true
          description: The name of the domain that you're updating.
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: The name of an OpenSearch Service domain. Domain names are unique across the domains owned by an account within an Amazon Web Services Region.
            minLength: 3
            maxLength: 28
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ClusterConfig:
                  description: 'Container for the cluster configuration of an OpenSearch Service domain. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html">Creating and managing Amazon OpenSearch Service domains</a>.'
                  type: object
                  properties:
                    InstanceType:
                      allOf:
                        - $ref: '#/components/schemas/OpenSearchPartitionInstanceType'
                        - description: Instance type of data nodes in the cluster.
                    InstanceCount:
                      allOf:
                        - $ref: '#/components/schemas/IntegerClass'
                        - description: 'Number of dedicated master nodes in the cluster. This number must be greater than 1, otherwise you receive a validation exception.'
                    DedicatedMasterEnabled:
                      allOf:
                        - $ref: '#/components/schemas/Boolean'
                        - description: Indicates whether dedicated master nodes are enabled for the cluster.<code>True</code> if the cluster will use a dedicated master node.<code>False</code> if the cluster will not.
                    ZoneAwarenessEnabled:
                      allOf:
                        - $ref: '#/components/schemas/Boolean'
                        - description: 'Indicates whether multiple Availability Zones are enabled. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains-multiaz.html">Configuring a multi-AZ domain in Amazon OpenSearch Service</a>.'
                    ZoneAwarenessConfig:
                      allOf:
                        - $ref: '#/components/schemas/ZoneAwarenessConfig'
                        - description: Container for zone awareness configuration options. Only required if <code>ZoneAwarenessEnabled</code> is <code>true</code>.
                    DedicatedMasterType:
                      allOf:
                        - $ref: '#/components/schemas/OpenSearchPartitionInstanceType'
                        - description: OpenSearch Service instance type of the dedicated master nodes in the cluster.
                    DedicatedMasterCount:
                      allOf:
                        - $ref: '#/components/schemas/IntegerClass'
                        - description: 'Number of dedicated master nodes in the cluster. This number must be greater than 2 and not 4, otherwise you receive a validation exception.'
                    WarmEnabled:
                      allOf:
                        - $ref: '#/components/schemas/Boolean'
                        - description: Whether to enable warm storage for the cluster.
                    WarmType:
                      allOf:
                        - $ref: '#/components/schemas/OpenSearchWarmPartitionInstanceType'
                        - description: The instance type for the cluster's warm nodes.
                    WarmCount:
                      allOf:
                        - $ref: '#/components/schemas/IntegerClass'
                        - description: The number of warm nodes in the cluster.
                    ColdStorageOptions:
                      allOf:
                        - $ref: '#/components/schemas/ColdStorageOptions'
                        - description: Container for cold storage configuration options.
                    MultiAZWithStandbyEnabled:
                      allOf:
                        - $ref: '#/components/schemas/Boolean'
                        - description: 'A boolean that indicates whether a multi-AZ domain is turned on with a standby AZ. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains-multiaz.html">Configuring a multi-AZ domain in Amazon OpenSearch Service</a>. '
                EBSOptions:
                  description: Container for the parameters required to enable EBS-based storage for an OpenSearch Service domain.
                  type: object
                  properties:
                    EBSEnabled:
                      allOf:
                        - $ref: '#/components/schemas/Boolean'
                        - description: Indicates whether EBS volumes are attached to data nodes in an OpenSearch Service domain.
                    VolumeType:
                      allOf:
                        - $ref: '#/components/schemas/VolumeType'
                        - description: Specifies the type of EBS volumes attached to data nodes.
                    VolumeSize:
                      allOf:
                        - $ref: '#/components/schemas/IntegerClass'
                        - description: Specifies the size (in GiB) of EBS volumes attached to data nodes.
                    Iops:
                      allOf:
                        - $ref: '#/components/schemas/IntegerClass'
                        - description: Specifies the baseline input/output (I/O) performance of EBS volumes attached to data nodes. Applicable only for the <code>gp3</code> and provisioned IOPS EBS volume types.
                    Throughput:
                      allOf:
                        - $ref: '#/components/schemas/IntegerClass'
                        - description: Specifies the throughput (in MiB/s) of the EBS volumes attached to data nodes. Applicable only for the <code>gp3</code> volume type.
                SnapshotOptions:
                  description: 'The time, in UTC format, when OpenSearch Service takes a daily automated snapshot of the specified domain. Default is <code>0</code> hours.'
                  type: object
                  properties:
                    AutomatedSnapshotStartHour:
                      allOf:
                        - $ref: '#/components/schemas/IntegerClass'
                        - description: 'The time, in UTC format, when OpenSearch Service takes a daily automated snapshot of the specified domain. Default is <code>0</code> hours.'
                VPCOptions:
                  description: 'Options to specify the subnets and security groups for an Amazon OpenSearch Service VPC endpoint. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/vpc.html">Launching your Amazon OpenSearch Service domains using a VPC</a>.'
                  type: object
                  properties:
                    SubnetIds:
                      allOf:
                        - $ref: '#/components/schemas/StringList'
                        - description: 'A list of subnet IDs associated with the VPC endpoints for the domain. If your domain uses multiple Availability Zones, you need to provide two subnet IDs, one per zone. Otherwise, provide only one.'
                    SecurityGroupIds:
                      allOf:
                        - $ref: '#/components/schemas/StringList'
                        - description: 'The list of security group IDs associated with the VPC endpoints for the domain. If you do not provide a security group ID, OpenSearch Service uses the default security group for the VPC.'
                CognitoOptions:
                  description: 'Container for the parameters required to enable Cognito authentication for an OpenSearch Service domain. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/cognito-auth.html">Configuring Amazon Cognito authentication for OpenSearch Dashboards</a>.'
                  type: object
                  properties:
                    Enabled:
                      allOf:
                        - $ref: '#/components/schemas/Boolean'
                        - description: Whether to enable or disable Amazon Cognito authentication for OpenSearch Dashboards.
                    UserPoolId:
                      allOf:
                        - $ref: '#/components/schemas/UserPoolId'
                        - description: The Amazon Cognito user pool ID that you want OpenSearch Service to use for OpenSearch Dashboards authentication.
                    IdentityPoolId:
                      allOf:
                        - $ref: '#/components/schemas/IdentityPoolId'
                        - description: The Amazon Cognito identity pool ID that you want OpenSearch Service to use for OpenSearch Dashboards authentication.
                    RoleArn:
                      allOf:
                        - $ref: '#/components/schemas/RoleArn'
                        - description: The <code>AmazonOpenSearchServiceCognitoAccess</code> role that allows OpenSearch Service to configure your user pool and identity pool.
                AdvancedOptions:
                  description: '<p>Exposes native OpenSearch configuration values from <code>opensearch.yml</code>. The following advanced options are available: </p> <ul> <li> <p>Allows references to indexes in an HTTP request body. Must be <code>false</code> when configuring access to individual sub-resources. Default is <code>true</code>.</p> </li> <li> <p>Specifies the percentage of heap space allocated to field data. Default is unbounded.</p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomain-configure-advanced-options">Advanced cluster parameters</a>.</p>'
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/String'
                AccessPolicies:
                  description: 'Access policy rules for an Amazon OpenSearch Service domain endpoint. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomain-configure-access-policies">Configuring access policies</a>. The maximum size of a policy document is 100 KB.'
                  type: string
                  pattern: .*
                  minLength: 0
                  maxLength: 102400
                LogPublishingOptions:
                  description: Options to publish OpenSearch logs to Amazon CloudWatch Logs.
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/LogPublishingOption'
                EncryptionAtRestOptions:
                  description: 'Specifies whether the domain should encrypt data at rest, and if so, the Key Management Service (KMS) key to use. Can be used only to create a new domain, not update an existing one.'
                  type: object
                  properties:
                    Enabled:
                      allOf:
                        - $ref: '#/components/schemas/Boolean'
                        - description: True to enable encryption at rest.
                    KmsKeyId:
                      allOf:
                        - $ref: '#/components/schemas/KmsKeyId'
                        - description: The KMS key ID. Takes the form <code>1a2a3a4-1a2a-3a4a-5a6a-1a2a3a4a5a6a</code>.
                DomainEndpointOptions:
                  description: Options to configure a custom endpoint for an OpenSearch Service domain.
                  type: object
                  properties:
                    EnforceHTTPS:
                      allOf:
                        - $ref: '#/components/schemas/Boolean'
                        - description: True to require that all traffic to the domain arrive over HTTPS.
                    TLSSecurityPolicy:
                      allOf:
                        - $ref: '#/components/schemas/TLSSecurityPolicy'
                        - description: '<p>Specify the TLS security policy to apply to the HTTPS endpoint of the domain.</p> <p> Can be one of the following values:</p> <ul> <li> <p> <b>Policy-Min-TLS-1-0-2019-07:</b> TLS security policy which supports TLS version 1.0 and higher.</p> </li> <li> <p> <b>Policy-Min-TLS-1-2-2019-07:</b> TLS security policy which supports only TLS version 1.2 </p> </li> </ul>'
                    CustomEndpointEnabled:
                      allOf:
                        - $ref: '#/components/schemas/Boolean'
                        - description: Whether to enable a custom endpoint for the domain.
                    CustomEndpoint:
                      allOf:
                        - $ref: '#/components/schemas/DomainNameFqdn'
                        - description: The fully qualified URL for the custom endpoint.
                    CustomEndpointCertificateArn:
                      allOf:
                        - $ref: '#/components/schemas/ARN'
                        - description: 'The ARN for your security certificate, managed in Amazon Web Services Certificate Manager (ACM).'
                NodeToNodeEncryptionOptions:
                  description: 'Enables or disables node-to-node encryption. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/ntn.html">Node-to-node encryption for Amazon OpenSearch Service</a>.'
                  type: object
                  properties:
                    Enabled:
                      allOf:
                        - $ref: '#/components/schemas/Boolean'
                        - description: True to enable node-to-node encryption.
                AdvancedSecurityOptions:
                  description: 'Options for enabling and configuring fine-grained access control. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/fgac.html">Fine-grained access control in Amazon OpenSearch Service</a>.'
                  type: object
                  properties:
                    Enabled:
                      allOf:
                        - $ref: '#/components/schemas/Boolean'
                        - description: True to enable fine-grained access control.
                    InternalUserDatabaseEnabled:
                      allOf:
                        - $ref: '#/components/schemas/Boolean'
                        - description: True to enable the internal user database.
                    MasterUserOptions:
                      allOf:
                        - $ref: '#/components/schemas/MasterUserOptions'
                        - description: Container for information about the master user.
                    SAMLOptions:
                      allOf:
                        - $ref: '#/components/schemas/SAMLOptionsInput'
                        - description: Container for information about the SAML configuration for OpenSearch Dashboards.
                    AnonymousAuthEnabled:
                      allOf:
                        - $ref: '#/components/schemas/Boolean'
                        - description: 'True to enable a 30-day migration period during which administrators can create role mappings. Only necessary when <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/fgac.html#fgac-enabling-existing">enabling fine-grained access control on an existing domain</a>.'
                AutoTuneOptions:
                  description: 'Auto-Tune settings when updating a domain. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html">Auto-Tune for Amazon OpenSearch Service</a>.'
                  type: object
                  properties:
                    DesiredState:
                      allOf:
                        - $ref: '#/components/schemas/AutoTuneDesiredState'
                        - description: Whether Auto-Tune is enabled or disabled.
                    RollbackOnDisable:
                      allOf:
                        - $ref: '#/components/schemas/RollbackOnDisable'
                        - description: 'When disabling Auto-Tune, specify <code>NO_ROLLBACK</code> to retain all prior Auto-Tune settings or <code>DEFAULT_ROLLBACK</code> to revert to the OpenSearch Service defaults. If you specify <code>DEFAULT_ROLLBACK</code>, you must include a <code>MaintenanceSchedule</code> in the request. Otherwise, OpenSearch Service is unable to perform the rollback.'
                    MaintenanceSchedules:
                      allOf:
                        - $ref: '#/components/schemas/AutoTuneMaintenanceScheduleList'
                        - description: '<p>DEPRECATED. Use <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/off-peak.html">off-peak window</a> instead.</p> <p>A list of maintenance schedules during which Auto-Tune can deploy changes.</p>'
                    UseOffPeakWindow:
                      allOf:
                        - $ref: '#/components/schemas/Boolean'
                        - description: 'Whether to use the domain''s <a href="https://docs.aws.amazon.com/opensearch-service/latest/APIReference/API_OffPeakWindow.html">off-peak window</a> to deploy configuration changes on the domain rather than a maintenance schedule.'
                DryRun:
                  description: 'This flag, when set to True, specifies whether the <code>UpdateDomain</code> request should return the results of a dry run analysis without actually applying the change. A dry run determines what type of deployment the update will cause.'
                  type: boolean
                DryRunMode:
                  description: '<p>The type of dry run to perform.</p> <ul> <li> <p> <code>Basic</code> only returns the type of deployment (blue/green or dynamic) that the update will cause.</p> </li> <li> <p> <code>Verbose</code> runs an additional check to validate the changes you''re making. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains-configuration-changes#validation-check">Validating a domain update</a>.</p> </li> </ul>'
                  type: string
                  enum:
                    - Basic
                    - Verbose
                OffPeakWindowOptions:
                  description: 'Options for a domain''s <a href="https://docs.aws.amazon.com/opensearch-service/latest/APIReference/API_OffPeakWindow.html">off-peak window</a>, during which OpenSearch Service can perform mandatory configuration changes on the domain.'
                  type: object
                  properties:
                    Enabled:
                      allOf:
                        - $ref: '#/components/schemas/Boolean'
                        - description: '<p>Whether to enable an off-peak window.</p> <p>This option is only available when modifying a domain created prior to February 16, 2023, not when creating a new domain. All domains created after this date have the off-peak window enabled by default. You can''t disable the off-peak window after it''s enabled for a domain.</p>'
                    OffPeakWindow:
                      allOf:
                        - $ref: '#/components/schemas/OffPeakWindow'
                        - description: Off-peak window settings for the domain.
                SoftwareUpdateOptions:
                  description: Options for configuring service software updates for a domain.
                  type: object
                  properties:
                    AutoSoftwareUpdateEnabled:
                      allOf:
                        - $ref: '#/components/schemas/Boolean'
                        - description: Whether automatic service software updates are enabled for the domain.
  '/2021-01-01/opensearch/domain/{DomainName}/health':
    get:
      operationId: DescribeDomainHealth
      description: 'Returns information about domain and node health, the standby Availability Zone, number of nodes per Availability Zone, and shard count per node.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDomainHealthResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: DisabledOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
      parameters:
        - name: DomainName
          in: path
          required: true
          description: The name of the domain.
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: The name of an OpenSearch Service domain. Domain names are unique across the domains owned by an account within an Amazon Web Services Region.
            minLength: 3
            maxLength: 28
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2021-01-01/opensearch/domain/{DomainName}/nodes':
    get:
      operationId: DescribeDomainNodes
      description: 'Returns information about domain and nodes, including data nodes, master nodes, ultrawarm nodes, Availability Zone(s), standby nodes, node configurations, and node states.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDomainNodesResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: DisabledOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
        '485':
          description: DependencyFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DependencyFailureException'
      parameters:
        - name: DomainName
          in: path
          required: true
          description: The name of the domain.
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: The name of an OpenSearch Service domain. Domain names are unique across the domains owned by an account within an Amazon Web Services Region.
            minLength: 3
            maxLength: 28
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2021-01-01/opensearch/domain-info:
    post:
      operationId: DescribeDomains
      description: Returns domain configuration information about the specified Amazon OpenSearch Service domains.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDomainsResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - DomainNames
              properties:
                DomainNames:
                  description: A list of OpenSearch Service domain names.
                  type: array
                  items:
                    $ref: '#/components/schemas/DomainName'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2021-01-01/opensearch/domain/{DomainName}/dryRun':
    get:
      operationId: DescribeDryRunProgress
      description: 'Describes the progress of a pre-update dry run analysis on an Amazon OpenSearch Service domain. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains-configuration-changes#dryrun">Determining whether a change will cause a blue/green deployment</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDryRunProgressResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: DisabledOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
      parameters:
        - name: DomainName
          in: path
          required: true
          description: The name of the domain.
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: The name of an OpenSearch Service domain. Domain names are unique across the domains owned by an account within an Amazon Web Services Region.
            minLength: 3
            maxLength: 28
        - name: dryRunId
          in: query
          required: false
          description: The unique identifier of the dry run.
          schema:
            type: string
            pattern: '\p{XDigit}{8}-\p{XDigit}{4}-\p{XDigit}{4}-\p{XDigit}{4}-\p{XDigit}{12}'
            minLength: 36
            maxLength: 36
        - name: loadDryRunConfig
          in: query
          required: false
          description: Whether to include the configuration of the dry run in the response. The configuration specifies the updates that you're planning to make on the domain.
          schema:
            type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2021-01-01/opensearch/cc/inboundConnection/search:
    post:
      operationId: DescribeInboundConnections
      description: 'Lists all the inbound cross-cluster search connections for a destination (remote) Amazon OpenSearch Service domain. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/cross-cluster-search.html">Cross-cluster search for Amazon OpenSearch Service</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeInboundConnectionsResponse'
        '480':
          description: InvalidPaginationTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidPaginationTokenException'
        '481':
          description: DisabledOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Filters:
                  description: ' A list of filters used to match properties for inbound cross-cluster connections.'
                  type: array
                  items:
                    $ref: '#/components/schemas/Filter'
                MaxResults:
                  description: An optional parameter that specifies the maximum number of results to return for a given request.
                  type: integer
                  maximum: 100
                NextToken:
                  description: 'When <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page.'
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2021-01-01/opensearch/instanceTypeLimits/{EngineVersion}/{InstanceType}':
    get:
      operationId: DescribeInstanceTypeLimits
      description: 'Describes the instance count, storage, and master node limits for a given OpenSearch or Elasticsearch version and instance type.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeInstanceTypeLimitsResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: InvalidTypeException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTypeException'
        '483':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: domainName
          in: query
          required: false
          description: The name of the domain. Only specify if you need the limits for an existing domain.
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: The name of an OpenSearch Service domain. Domain names are unique across the domains owned by an account within an Amazon Web Services Region.
            minLength: 3
            maxLength: 28
        - name: InstanceType
          in: path
          required: true
          description: The OpenSearch Service instance type for which you need limit information.
          schema:
            type: string
            enum:
              - m3.medium.search
              - m3.large.search
              - m3.xlarge.search
              - m3.2xlarge.search
              - m4.large.search
              - m4.xlarge.search
              - m4.2xlarge.search
              - m4.4xlarge.search
              - m4.10xlarge.search
              - m5.large.search
              - m5.xlarge.search
              - m5.2xlarge.search
              - m5.4xlarge.search
              - m5.12xlarge.search
              - m5.24xlarge.search
              - r5.large.search
              - r5.xlarge.search
              - r5.2xlarge.search
              - r5.4xlarge.search
              - r5.12xlarge.search
              - r5.24xlarge.search
              - c5.large.search
              - c5.xlarge.search
              - c5.2xlarge.search
              - c5.4xlarge.search
              - c5.9xlarge.search
              - c5.18xlarge.search
              - t3.nano.search
              - t3.micro.search
              - t3.small.search
              - t3.medium.search
              - t3.large.search
              - t3.xlarge.search
              - t3.2xlarge.search
              - ultrawarm1.medium.search
              - ultrawarm1.large.search
              - ultrawarm1.xlarge.search
              - t2.micro.search
              - t2.small.search
              - t2.medium.search
              - r3.large.search
              - r3.xlarge.search
              - r3.2xlarge.search
              - r3.4xlarge.search
              - r3.8xlarge.search
              - i2.xlarge.search
              - i2.2xlarge.search
              - d2.xlarge.search
              - d2.2xlarge.search
              - d2.4xlarge.search
              - d2.8xlarge.search
              - c4.large.search
              - c4.xlarge.search
              - c4.2xlarge.search
              - c4.4xlarge.search
              - c4.8xlarge.search
              - r4.large.search
              - r4.xlarge.search
              - r4.2xlarge.search
              - r4.4xlarge.search
              - r4.8xlarge.search
              - r4.16xlarge.search
              - i3.large.search
              - i3.xlarge.search
              - i3.2xlarge.search
              - i3.4xlarge.search
              - i3.8xlarge.search
              - i3.16xlarge.search
              - r6g.large.search
              - r6g.xlarge.search
              - r6g.2xlarge.search
              - r6g.4xlarge.search
              - r6g.8xlarge.search
              - r6g.12xlarge.search
              - m6g.large.search
              - m6g.xlarge.search
              - m6g.2xlarge.search
              - m6g.4xlarge.search
              - m6g.8xlarge.search
              - m6g.12xlarge.search
              - c6g.large.search
              - c6g.xlarge.search
              - c6g.2xlarge.search
              - c6g.4xlarge.search
              - c6g.8xlarge.search
              - c6g.12xlarge.search
              - r6gd.large.search
              - r6gd.xlarge.search
              - r6gd.2xlarge.search
              - r6gd.4xlarge.search
              - r6gd.8xlarge.search
              - r6gd.12xlarge.search
              - r6gd.16xlarge.search
              - t4g.small.search
              - t4g.medium.search
        - name: EngineVersion
          in: path
          required: true
          description: 'Version of OpenSearch or Elasticsearch, in the format Elasticsearch_X.Y or OpenSearch_X.Y. Defaults to the latest version of OpenSearch.'
          schema:
            type: string
            pattern: '^Elasticsearch_[0-9]{1}\.[0-9]{1,2}$|^OpenSearch_[0-9]{1,2}\.[0-9]{1,2}$'
            minLength: 14
            maxLength: 18
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2021-01-01/opensearch/cc/outboundConnection/search:
    post:
      operationId: DescribeOutboundConnections
      description: 'Lists all the outbound cross-cluster connections for a local (source) Amazon OpenSearch Service domain. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/cross-cluster-search.html">Cross-cluster search for Amazon OpenSearch Service</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeOutboundConnectionsResponse'
        '480':
          description: InvalidPaginationTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidPaginationTokenException'
        '481':
          description: DisabledOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Filters:
                  description: List of filter names and values that you can use for requests.
                  type: array
                  items:
                    $ref: '#/components/schemas/Filter'
                MaxResults:
                  description: An optional parameter that specifies the maximum number of results to return for a given request.
                  type: integer
                  maximum: 100
                NextToken:
                  description: 'When <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page.'
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2021-01-01/packages/describe:
    post:
      operationId: DescribePackages
      description: 'Describes all packages available to OpenSearch Service. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/custom-packages.html">Custom packages for Amazon OpenSearch Service</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribePackagesResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Filters:
                  description: A list of <code>DescribePackagesFilter</code> to filter the packages included in a <code>DescribePackages</code> response.
                  type: array
                  items:
                    $ref: '#/components/schemas/DescribePackagesFilter'
                MaxResults:
                  description: An optional parameter that specifies the maximum number of results to return for a given request.
                  type: integer
                  maximum: 100
                NextToken:
                  description: 'When <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page.'
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2021-01-01/opensearch/reservedInstanceOfferings:
    get:
      operationId: DescribeReservedInstanceOfferings
      description: 'Describes the available Amazon OpenSearch Service Reserved Instance offerings for a given Region. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/ri.html">Reserved Instances in Amazon OpenSearch Service</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeReservedInstanceOfferingsResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: DisabledOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
        '483':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
      parameters:
        - name: offeringId
          in: query
          required: false
          description: The Reserved Instance identifier filter value. Use this parameter to show only the available instance types that match the specified reservation identifier.
          schema:
            type: string
            pattern: '\p{XDigit}{8}-\p{XDigit}{4}-\p{XDigit}{4}-\p{XDigit}{4}-\p{XDigit}{12}'
            minLength: 36
            maxLength: 36
        - name: maxResults
          in: query
          required: false
          description: An optional parameter that specifies the maximum number of results to return. You can use <code>nextToken</code> to get the next page of results.
          schema:
            type: integer
            description: An optional parameter that specifies the maximum number of results to return for a given request.
            maximum: 100
        - name: nextToken
          in: query
          required: false
          description: 'If your initial <code>DescribeReservedInstanceOfferings</code> operation returns a <code>nextToken</code>, you can include the returned <code>nextToken</code> in subsequent <code>DescribeReservedInstanceOfferings</code> operations, which returns results in the next page.'
          schema:
            type: string
            description: 'When <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page.'
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2021-01-01/opensearch/reservedInstances:
    get:
      operationId: DescribeReservedInstances
      description: 'Describes the Amazon OpenSearch Service instances that you have reserved in a given Region. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/ri.html">Reserved Instances in Amazon OpenSearch Service</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeReservedInstancesResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: DisabledOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
      parameters:
        - name: reservationId
          in: query
          required: false
          description: The reserved instance identifier filter value. Use this parameter to show only the reservation that matches the specified reserved OpenSearch instance ID.
          schema:
            type: string
            pattern: '\p{XDigit}{8}-\p{XDigit}{4}-\p{XDigit}{4}-\p{XDigit}{4}-\p{XDigit}{12}'
            minLength: 36
            maxLength: 36
        - name: maxResults
          in: query
          required: false
          description: An optional parameter that specifies the maximum number of results to return. You can use <code>nextToken</code> to get the next page of results.
          schema:
            type: integer
            description: An optional parameter that specifies the maximum number of results to return for a given request.
            maximum: 100
        - name: nextToken
          in: query
          required: false
          description: 'If your initial <code>DescribeReservedInstances</code> operation returns a <code>nextToken</code>, you can include the returned <code>nextToken</code> in subsequent <code>DescribeReservedInstances</code> operations, which returns results in the next page.'
          schema:
            type: string
            description: 'When <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page.'
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2021-01-01/opensearch/vpcEndpoints/describe:
    post:
      operationId: DescribeVpcEndpoints
      description: Describes one or more Amazon OpenSearch Service-managed VPC endpoints.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeVpcEndpointsResponse'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: DisabledOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
        '483':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - VpcEndpointIds
              properties:
                VpcEndpointIds:
                  description: The unique identifiers of the endpoints to get information about.
                  type: array
                  items:
                    $ref: '#/components/schemas/VpcEndpointId'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2021-01-01/packages/dissociate/{PackageID}/{DomainName}':
    post:
      operationId: DissociatePackage
      description: 'Removes a package from the specified Amazon OpenSearch Service domain. The package can''t be in use with any OpenSearch index for the dissociation to succeed. The package is still available in OpenSearch Service for association later. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/custom-packages.html">Custom packages for Amazon OpenSearch Service</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DissociatePackageResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '485':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: PackageID
          in: path
          required: true
          description: Internal ID of the package to dissociate from the domain. Use <code>ListPackagesForDomain</code> to find this value.
          schema:
            type: string
        - name: DomainName
          in: path
          required: true
          description: Name of the domain to dissociate the package from.
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: The name of an OpenSearch Service domain. Domain names are unique across the domains owned by an account within an Amazon Web Services Region.
            minLength: 3
            maxLength: 28
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2021-01-01/opensearch/compatibleVersions:
    get:
      operationId: GetCompatibleVersions
      description: Returns a map of OpenSearch or Elasticsearch versions and the versions you can upgrade them to.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCompatibleVersionsResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: DisabledOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
      parameters:
        - name: domainName
          in: query
          required: false
          description: The name of an existing domain. Provide this parameter to limit the results to a single domain.
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: The name of an OpenSearch Service domain. Domain names are unique across the domains owned by an account within an Amazon Web Services Region.
            minLength: 3
            maxLength: 28
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2021-01-01/packages/{PackageID}/history':
    get:
      operationId: GetPackageVersionHistory
      description: 'Returns a list of Amazon OpenSearch Service package versions, along with their creation time, commit message, and plugin properties (if the package is a zip plugin package). For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/custom-packages.html">Custom packages for Amazon OpenSearch Service</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPackageVersionHistoryResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: PackageID
          in: path
          required: true
          description: The unique identifier of the package.
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: An optional parameter that specifies the maximum number of results to return. You can use <code>nextToken</code> to get the next page of results.
          schema:
            type: integer
            description: An optional parameter that specifies the maximum number of results to return for a given request.
            maximum: 100
        - name: nextToken
          in: query
          required: false
          description: 'If your initial <code>GetPackageVersionHistory</code> operation returns a <code>nextToken</code>, you can include the returned <code>nextToken</code> in subsequent <code>GetPackageVersionHistory</code> operations, which returns results in the next page. '
          schema:
            type: string
            description: 'When <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page.'
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2021-01-01/opensearch/upgradeDomain/{DomainName}/history':
    get:
      operationId: GetUpgradeHistory
      description: Retrieves the complete history of the last 10 upgrades performed on an Amazon OpenSearch Service domain.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUpgradeHistoryResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: DisabledOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
      parameters:
        - name: DomainName
          in: path
          required: true
          description: The name of an existing domain.
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: The name of an OpenSearch Service domain. Domain names are unique across the domains owned by an account within an Amazon Web Services Region.
            minLength: 3
            maxLength: 28
        - name: maxResults
          in: query
          required: false
          description: An optional parameter that specifies the maximum number of results to return. You can use <code>nextToken</code> to get the next page of results.
          schema:
            type: integer
            description: An optional parameter that specifies the maximum number of results to return for a given request.
            maximum: 100
        - name: nextToken
          in: query
          required: false
          description: 'If your initial <code>GetUpgradeHistory</code> operation returns a <code>nextToken</code>, you can include the returned <code>nextToken</code> in subsequent <code>GetUpgradeHistory</code> operations, which returns results in the next page.'
          schema:
            type: string
            description: 'When <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page.'
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2021-01-01/opensearch/upgradeDomain/{DomainName}/status':
    get:
      operationId: GetUpgradeStatus
      description: Returns the most recent status of the last upgrade or upgrade eligibility check performed on an Amazon OpenSearch Service domain.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUpgradeStatusResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: DisabledOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
      parameters:
        - name: DomainName
          in: path
          required: true
          description: The domain of the domain to get upgrade status information for.
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: The name of an OpenSearch Service domain. Domain names are unique across the domains owned by an account within an Amazon Web Services Region.
            minLength: 3
            maxLength: 28
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2021-01-01/domain:
    get:
      operationId: ListDomainNames
      description: Returns the names of all Amazon OpenSearch Service domains owned by the current user in the active Region.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDomainNamesResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: engineType
          in: query
          required: false
          description: Filters the output by domain engine type.
          schema:
            type: string
            enum:
              - OpenSearch
              - Elasticsearch
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2021-01-01/packages/{PackageID}/domains':
    get:
      operationId: ListDomainsForPackage
      description: 'Lists all Amazon OpenSearch Service domains associated with a given package. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/custom-packages.html">Custom packages for Amazon OpenSearch Service</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDomainsForPackageResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: PackageID
          in: path
          required: true
          description: The unique identifier of the package for which to list associated domains.
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: An optional parameter that specifies the maximum number of results to return. You can use <code>nextToken</code> to get the next page of results.
          schema:
            type: integer
            description: An optional parameter that specifies the maximum number of results to return for a given request.
            maximum: 100
        - name: nextToken
          in: query
          required: false
          description: 'If your initial <code>ListDomainsForPackage</code> operation returns a <code>nextToken</code>, you can include the returned <code>nextToken</code> in subsequent <code>ListDomainsForPackage</code> operations, which returns results in the next page.'
          schema:
            type: string
            description: 'When <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page.'
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2021-01-01/opensearch/instanceTypeDetails/{EngineVersion}':
    get:
      operationId: ListInstanceTypeDetails
      description: Lists all instance types and available features for a given OpenSearch or Elasticsearch version.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInstanceTypeDetailsResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: EngineVersion
          in: path
          required: true
          description: 'The version of OpenSearch or Elasticsearch, in the format Elasticsearch_X.Y or OpenSearch_X.Y. Defaults to the latest version of OpenSearch.'
          schema:
            type: string
            pattern: '^Elasticsearch_[0-9]{1}\.[0-9]{1,2}$|^OpenSearch_[0-9]{1,2}\.[0-9]{1,2}$'
            minLength: 14
            maxLength: 18
        - name: domainName
          in: query
          required: false
          description: The name of the domain.
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: The name of an OpenSearch Service domain. Domain names are unique across the domains owned by an account within an Amazon Web Services Region.
            minLength: 3
            maxLength: 28
        - name: maxResults
          in: query
          required: false
          description: An optional parameter that specifies the maximum number of results to return. You can use <code>nextToken</code> to get the next page of results.
          schema:
            type: integer
            description: An optional parameter that specifies the maximum number of results to return for a given request.
            maximum: 100
        - name: nextToken
          in: query
          required: false
          description: 'If your initial <code>ListInstanceTypeDetails</code> operation returns a <code>nextToken</code>, you can include the returned <code>nextToken</code> in subsequent <code>ListInstanceTypeDetails</code> operations, which returns results in the next page.'
          schema:
            type: string
            description: 'When <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page.'
        - name: retrieveAZs
          in: query
          required: false
          description: An optional parameter that specifies the Availability Zones for the domain.
          schema:
            type: boolean
        - name: instanceType
          in: query
          required: false
          description: An optional parameter that lists information for a given instance type.
          schema:
            type: string
            pattern: ^.*\..*\.search$
            minLength: 10
            maxLength: 40
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2021-01-01/domain/{DomainName}/packages':
    get:
      operationId: ListPackagesForDomain
      description: 'Lists all packages associated with an Amazon OpenSearch Service domain. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/custom-packages.html">Custom packages for Amazon OpenSearch Service</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPackagesForDomainResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: DomainName
          in: path
          required: true
          description: The name of the domain for which you want to list associated packages.
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: The name of an OpenSearch Service domain. Domain names are unique across the domains owned by an account within an Amazon Web Services Region.
            minLength: 3
            maxLength: 28
        - name: maxResults
          in: query
          required: false
          description: An optional parameter that specifies the maximum number of results to return. You can use <code>nextToken</code> to get the next page of results.
          schema:
            type: integer
            description: An optional parameter that specifies the maximum number of results to return for a given request.
            maximum: 100
        - name: nextToken
          in: query
          required: false
          description: 'If your initial <code>ListPackagesForDomain</code> operation returns a <code>nextToken</code>, you can include the returned <code>nextToken</code> in subsequent <code>ListPackagesForDomain</code> operations, which returns results in the next page.'
          schema:
            type: string
            description: 'When <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page.'
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2021-01-01/opensearch/domain/{DomainName}/scheduledActions':
    get:
      operationId: ListScheduledActions
      description: 'Retrieves a list of configuration changes that are scheduled for a domain. These changes can be <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/service-software.html">service software updates</a> or <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html#auto-tune-types">blue/green Auto-Tune enhancements</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListScheduledActionsResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: InvalidPaginationTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidPaginationTokenException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: DomainName
          in: path
          required: true
          description: The name of the domain.
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: The name of an OpenSearch Service domain. Domain names are unique across the domains owned by an account within an Amazon Web Services Region.
            minLength: 3
            maxLength: 28
        - name: maxResults
          in: query
          required: false
          description: An optional parameter that specifies the maximum number of results to return. You can use <code>nextToken</code> to get the next page of results.
          schema:
            type: integer
            description: An optional parameter that specifies the maximum number of results to return for a given request.
            maximum: 100
        - name: nextToken
          in: query
          required: false
          description: 'If your initial <code>ListScheduledActions</code> operation returns a <code>nextToken</code>, you can include the returned <code>nextToken</code> in subsequent <code>ListScheduledActions</code> operations, which returns results in the next page.'
          schema:
            type: string
            description: 'When <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page.'
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2021-01-01/tags/#arn:
    get:
      operationId: ListTags
      description: 'Returns all resource tags for an Amazon OpenSearch Service domain. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains-awsresourcetagging.html">Tagging Amazon OpenSearch Service domains</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '483':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
      parameters:
        - name: arn
          in: query
          required: true
          description: Amazon Resource Name (ARN) for the domain to view tags for.
          schema:
            type: string
            pattern: .*
            description: 'The Amazon Resource Name (ARN) of the domain. See <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/index.html">Identifiers for IAM Entities </a> in <i>Using AWS Identity and Access Management</i> for more information. '
            minLength: 20
            maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2021-01-01/opensearch/versions:
    get:
      operationId: ListVersions
      description: Lists all versions of OpenSearch and Elasticsearch that Amazon OpenSearch Service supports.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVersionsResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: An optional parameter that specifies the maximum number of results to return. You can use <code>nextToken</code> to get the next page of results.
          schema:
            type: integer
            description: An optional parameter that specifies the maximum number of results to return for a given request.
            maximum: 100
        - name: nextToken
          in: query
          required: false
          description: 'If your initial <code>ListVersions</code> operation returns a <code>nextToken</code>, you can include the returned <code>nextToken</code> in subsequent <code>ListVersions</code> operations, which returns results in the next page.'
          schema:
            type: string
            description: 'When <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page.'
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2021-01-01/opensearch/domain/{DomainName}/listVpcEndpointAccess':
    get:
      operationId: ListVpcEndpointAccess
      description: Retrieves information about each Amazon Web Services principal that is allowed to access a given Amazon OpenSearch Service domain through the use of an interface VPC endpoint.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVpcEndpointAccessResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: DisabledOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
        '482':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '483':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
      parameters:
        - name: DomainName
          in: path
          required: true
          description: The name of the OpenSearch Service domain to retrieve access information for.
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: The name of an OpenSearch Service domain. Domain names are unique across the domains owned by an account within an Amazon Web Services Region.
            minLength: 3
            maxLength: 28
        - name: nextToken
          in: query
          required: false
          description: 'If your initial <code>ListVpcEndpointAccess</code> operation returns a <code>nextToken</code>, you can include the returned <code>nextToken</code> in subsequent <code>ListVpcEndpointAccess</code> operations, which returns results in the next page.'
          schema:
            type: string
            description: 'When <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page.'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2021-01-01/opensearch/domain/{DomainName}/vpcEndpoints':
    get:
      operationId: ListVpcEndpointsForDomain
      description: Retrieves all Amazon OpenSearch Service-managed VPC endpoints associated with a particular domain.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVpcEndpointsForDomainResponse'
        '480':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '481':
          description: DisabledOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
      parameters:
        - name: DomainName
          in: path
          required: true
          description: The name of the domain to list associated VPC endpoints for.
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: The name of an OpenSearch Service domain. Domain names are unique across the domains owned by an account within an Amazon Web Services Region.
            minLength: 3
            maxLength: 28
        - name: nextToken
          in: query
          required: false
          description: 'If your initial <code>ListEndpointsForDomain</code> operation returns a <code>nextToken</code>, you can include the returned <code>nextToken</code> in subsequent <code>ListEndpointsForDomain</code> operations, which returns results in the next page.'
          schema:
            type: string
            description: 'When <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page.'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2021-01-01/opensearch/purchaseReservedInstanceOffering:
    post:
      operationId: PurchaseReservedInstanceOffering
      description: Allows you to purchase Amazon OpenSearch Service Reserved Instances.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseReservedInstanceOfferingResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: DisabledOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '485':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ReservedInstanceOfferingId
                - ReservationName
              properties:
                ReservedInstanceOfferingId:
                  description: The ID of the Reserved Instance offering to purchase.
                  type: string
                  pattern: '\p{XDigit}{8}-\p{XDigit}{4}-\p{XDigit}{4}-\p{XDigit}{4}-\p{XDigit}{12}'
                  minLength: 36
                  maxLength: 36
                ReservationName:
                  description: A customer-specified identifier to track this reservation.
                  type: string
                  pattern: .*
                  minLength: 5
                  maxLength: 64
                InstanceCount:
                  description: Number of instances in an OpenSearch Service cluster.
                  type: integer
                  minimum: 1
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2021-01-01/opensearch/cc/inboundConnection/{ConnectionId}/reject':
    put:
      operationId: RejectInboundConnection
      description: Allows the remote Amazon OpenSearch Service domain owner to reject an inbound cross-cluster connection request.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RejectInboundConnectionResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: DisabledOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
      parameters:
        - name: ConnectionId
          in: path
          required: true
          description: The unique identifier of the inbound connection to reject.
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            minLength: 10
            maxLength: 256
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2021-01-01/tags-removal:
    post:
      operationId: RemoveTags
      description: 'Removes the specified set of tags from an Amazon OpenSearch Service domain. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains.html#managedomains-awsresorcetagging"> Tagging Amazon OpenSearch Service domains</a>.'
      responses:
        '200':
          description: Success
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ARN
                - TagKeys
              properties:
                ARN:
                  description: 'The Amazon Resource Name (ARN) of the domain. See <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/index.html">Identifiers for IAM Entities </a> in <i>Using AWS Identity and Access Management</i> for more information. '
                  type: string
                  pattern: .*
                  minLength: 20
                  maxLength: 2048
                TagKeys:
                  description: The list of tag keys to remove from the domain.
                  type: array
                  items:
                    $ref: '#/components/schemas/String'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2021-01-01/opensearch/domain/{DomainName}/revokeVpcEndpointAccess':
    post:
      operationId: RevokeVpcEndpointAccess
      description: Revokes access to an Amazon OpenSearch Service domain that was provided through an interface VPC endpoint.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevokeVpcEndpointAccessResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '482':
          description: DisabledOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
        '483':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '484':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
      parameters:
        - name: DomainName
          in: path
          required: true
          description: The name of the OpenSearch Service domain.
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: The name of an OpenSearch Service domain. Domain names are unique across the domains owned by an account within an Amazon Web Services Region.
            minLength: 3
            maxLength: 28
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Account
              properties:
                Account:
                  description: The account ID to revoke access from.
                  type: string
                  pattern: '^[0-9]+$'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2021-01-01/opensearch/serviceSoftwareUpdate/start:
    post:
      operationId: StartServiceSoftwareUpdate
      description: 'Schedules a service software update for an Amazon OpenSearch Service domain. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/service-software.html">Service software updates in Amazon OpenSearch Service</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartServiceSoftwareUpdateResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - DomainName
              properties:
                DomainName:
                  description: The name of an OpenSearch Service domain. Domain names are unique across the domains owned by an account within an Amazon Web Services Region.
                  type: string
                  pattern: '[a-z][a-z0-9\-]+'
                  minLength: 3
                  maxLength: 28
                ScheduleAt:
                  description: '<p>When to start the service software update.</p> <ul> <li> <p> <code>NOW</code> - Immediately schedules the update to happen in the current hour if there''s capacity available.</p> </li> <li> <p> <code>TIMESTAMP</code> - Lets you specify a custom date and time to apply the update. If you specify this value, you must also provide a value for <code>DesiredStartTime</code>.</p> </li> <li> <p> <code>OFF_PEAK_WINDOW</code> - Marks the update to be picked up during an upcoming off-peak window. There''s no guarantee that the update will happen during the next immediate window. Depending on capacity, it might happen in subsequent days.</p> </li> </ul> <p>Default: <code>NOW</code> if you don''t specify a value for <code>DesiredStartTime</code>, and <code>TIMESTAMP</code> if you do.</p>'
                  type: string
                  enum:
                    - NOW
                    - TIMESTAMP
                    - OFF_PEAK_WINDOW
                DesiredStartTime:
                  description: The Epoch timestamp when you want the service software update to start. You only need to specify this parameter if you set <code>ScheduleAt</code> to <code>TIMESTAMP</code>.
                  type: integer
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2021-01-01/packages/update:
    post:
      operationId: UpdatePackage
      description: 'Updates a package for use with Amazon OpenSearch Service domains. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/custom-packages.html">Custom packages for Amazon OpenSearch Service</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePackageResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - PackageID
                - PackageSource
              properties:
                PackageID:
                  description: The unique identifier for the package.
                  type: string
                PackageSource:
                  description: The Amazon S3 location to import the package from.
                  type: object
                  properties:
                    S3BucketName:
                      allOf:
                        - $ref: '#/components/schemas/S3BucketName'
                        - description: The name of the Amazon S3 bucket containing the package.
                    S3Key:
                      allOf:
                        - $ref: '#/components/schemas/S3Key'
                        - description: Key (file name) of the package.
                PackageDescription:
                  description: A new description of the package.
                  type: string
                  maxLength: 1024
                CommitMessage:
                  description: 'Commit message for the updated file, which is shown as part of <code>GetPackageVersionHistoryResponse</code>.'
                  type: string
                  maxLength: 160
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2021-01-01/opensearch/domain/{DomainName}/scheduledAction/update':
    put:
      operationId: UpdateScheduledAction
      description: 'Reschedules a planned domain configuration change for a later time. This change can be a scheduled <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/service-software.html">service software update</a> or a <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html#auto-tune-types">blue/green Auto-Tune enhancement</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateScheduledActionResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: SlotNotAvailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SlotNotAvailableException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '486':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
      parameters:
        - name: DomainName
          in: path
          required: true
          description: The name of the domain to reschedule an action for.
          schema:
            type: string
            pattern: '[a-z][a-z0-9\-]+'
            description: The name of an OpenSearch Service domain. Domain names are unique across the domains owned by an account within an Amazon Web Services Region.
            minLength: 3
            maxLength: 28
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ActionID
                - ActionType
                - ScheduleAt
              properties:
                ActionID:
                  description: 'The unique identifier of the action to reschedule. To retrieve this ID, send a <a href="https://docs.aws.amazon.com/opensearch-service/latest/APIReference/API_ListScheduledActions.html">ListScheduledActions</a> request.'
                  type: string
                ActionType:
                  description: 'The type of action to reschedule. Can be one of <code>SERVICE_SOFTWARE_UPDATE</code>, <code>JVM_HEAP_SIZE_TUNING</code>, or <code>JVM_YOUNG_GEN_TUNING</code>. To retrieve this value, send a <a href="https://docs.aws.amazon.com/opensearch-service/latest/APIReference/API_ListScheduledActions.html">ListScheduledActions</a> request.'
                  type: string
                  enum:
                    - SERVICE_SOFTWARE_UPDATE
                    - JVM_HEAP_SIZE_TUNING
                    - JVM_YOUNG_GEN_TUNING
                ScheduleAt:
                  description: '<p>When to schedule the action.</p> <ul> <li> <p> <code>NOW</code> - Immediately schedules the update to happen in the current hour if there''s capacity available.</p> </li> <li> <p> <code>TIMESTAMP</code> - Lets you specify a custom date and time to apply the update. If you specify this value, you must also provide a value for <code>DesiredStartTime</code>.</p> </li> <li> <p> <code>OFF_PEAK_WINDOW</code> - Marks the action to be picked up during an upcoming off-peak window. There''s no guarantee that the change will be implemented during the next immediate window. Depending on capacity, it might happen in subsequent days.</p> </li> </ul>'
                  type: string
                  enum:
                    - NOW
                    - TIMESTAMP
                    - OFF_PEAK_WINDOW
                DesiredStartTime:
                  description: 'The time to implement the change, in Coordinated Universal Time (UTC). Only specify this parameter if you set <code>ScheduleAt</code> to <code>TIMESTAMP</code>.'
                  type: integer
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2021-01-01/opensearch/vpcEndpoints/update:
    post:
      operationId: UpdateVpcEndpoint
      description: Modifies an Amazon OpenSearch Service-managed interface VPC endpoint.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateVpcEndpointResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: DisabledOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
        '482':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '485':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - VpcEndpointId
                - VpcOptions
              properties:
                VpcEndpointId:
                  description: The unique identifier of the endpoint.
                  type: string
                  pattern: '^aos-[a-zA-Z0-9]*$'
                  minLength: 5
                  maxLength: 256
                VpcOptions:
                  description: 'Options to specify the subnets and security groups for an Amazon OpenSearch Service VPC endpoint. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/vpc.html">Launching your Amazon OpenSearch Service domains using a VPC</a>.'
                  type: object
                  properties:
                    SubnetIds:
                      allOf:
                        - $ref: '#/components/schemas/StringList'
                        - description: 'A list of subnet IDs associated with the VPC endpoints for the domain. If your domain uses multiple Availability Zones, you need to provide two subnet IDs, one per zone. Otherwise, provide only one.'
                    SecurityGroupIds:
                      allOf:
                        - $ref: '#/components/schemas/StringList'
                        - description: 'The list of security group IDs associated with the VPC endpoints for the domain. If you do not provide a security group ID, OpenSearch Service uses the default security group for the VPC.'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2021-01-01/opensearch/upgradeDomain:
    post:
      operationId: UpgradeDomain
      description: Allows you to either upgrade your Amazon OpenSearch Service domain or perform an upgrade eligibility check to a compatible version of OpenSearch or Elasticsearch.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpgradeDomainResponse'
        '480':
          description: BaseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '483':
          description: DisabledOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
        '484':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '485':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - DomainName
                - TargetVersion
              properties:
                DomainName:
                  description: The name of an OpenSearch Service domain. Domain names are unique across the domains owned by an account within an Amazon Web Services Region.
                  type: string
                  pattern: '[a-z][a-z0-9\-]+'
                  minLength: 3
                  maxLength: 28
                TargetVersion:
                  description: 'OpenSearch or Elasticsearch version to which you want to upgrade, in the format Opensearch_X.Y or Elasticsearch_X.Y.'
                  type: string
                  pattern: '^Elasticsearch_[0-9]{1}\.[0-9]{1,2}$|^OpenSearch_[0-9]{1,2}\.[0-9]{1,2}$'
                  minLength: 14
                  maxLength: 18
                PerformCheckOnly:
                  description: 'When true, indicates that an upgrade eligibility check needs to be performed. Does not actually perform the upgrade.'
                  type: boolean
                AdvancedOptions:
                  description: '<p>Exposes native OpenSearch configuration values from <code>opensearch.yml</code>. The following advanced options are available: </p> <ul> <li> <p>Allows references to indexes in an HTTP request body. Must be <code>false</code> when configuring access to individual sub-resources. Default is <code>true</code>.</p> </li> <li> <p>Specifies the percentage of heap space allocated to field data. Default is unbounded.</p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomain-configure-advanced-options">Advanced cluster parameters</a>.</p>'
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/String'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AcceptInboundConnectionResponse:
      type: object
      properties:
        Connection:
          allOf:
            - $ref: '#/components/schemas/InboundConnection'
            - description: Information about the accepted inbound connection.
      description: Contains details about the accepted inbound connection.
    ResourceNotFoundException: {}
    LimitExceededException: {}
    DisabledOperationException: {}
    Tag:
      type: object
      required:
        - Key
        - Value
      properties:
        Key:
          allOf:
            - $ref: '#/components/schemas/TagKey'
            - description: The tag key. Tag keys must be unique for the domain to which they are attached.
        Value:
          allOf:
            - $ref: '#/components/schemas/TagValue'
            - description: 'The value assigned to the corresponding tag key. Tag values can be null and don''t have to be unique in a tag set. For example, you can have a key value pair in a tag set of <code>project : Trinity</code> and <code>cost-center : Trinity</code> '
      description: A tag (key-value pair) for an Amazon OpenSearch Service resource.
    BaseException: {}
    ValidationException: {}
    InternalException: {}
    AssociatePackageResponse:
      type: object
      properties:
        DomainPackageDetails:
          allOf:
            - $ref: '#/components/schemas/DomainPackageDetails'
            - description: Information about a package that is associated with a domain.
      description: Container for the response returned by the <code>AssociatePackage</code> operation.
    AccessDeniedException: {}
    ConflictException: {}
    AuthorizeVpcEndpointAccessResponse:
      type: object
      required:
        - AuthorizedPrincipal
      properties:
        AuthorizedPrincipal:
          allOf:
            - $ref: '#/components/schemas/AuthorizedPrincipal'
            - description: Information about the Amazon Web Services account or service that was provided access to the domain.
    CancelServiceSoftwareUpdateResponse:
      type: object
      properties:
        ServiceSoftwareOptions:
          allOf:
            - $ref: '#/components/schemas/ServiceSoftwareOptions'
            - description: Container for the state of your domain relative to the latest service software.
      description: Container for the response to a <code>CancelServiceSoftwareUpdate</code> operation. Contains the status of the update.
    CreateDomainResponse:
      type: object
      properties:
        DomainStatus:
          allOf:
            - $ref: '#/components/schemas/DomainStatus'
            - description: The status of the newly created domain.
      description: The result of a <code>CreateDomain</code> operation. Contains the status of the newly created domain.
    OpenSearchPartitionInstanceType:
      type: string
      enum:
        - m3.medium.search
        - m3.large.search
        - m3.xlarge.search
        - m3.2xlarge.search
        - m4.large.search
        - m4.xlarge.search
        - m4.2xlarge.search
        - m4.4xlarge.search
        - m4.10xlarge.search
        - m5.large.search
        - m5.xlarge.search
        - m5.2xlarge.search
        - m5.4xlarge.search
        - m5.12xlarge.search
        - m5.24xlarge.search
        - r5.large.search
        - r5.xlarge.search
        - r5.2xlarge.search
        - r5.4xlarge.search
        - r5.12xlarge.search
        - r5.24xlarge.search
        - c5.large.search
        - c5.xlarge.search
        - c5.2xlarge.search
        - c5.4xlarge.search
        - c5.9xlarge.search
        - c5.18xlarge.search
        - t3.nano.search
        - t3.micro.search
        - t3.small.search
        - t3.medium.search
        - t3.large.search
        - t3.xlarge.search
        - t3.2xlarge.search
        - ultrawarm1.medium.search
        - ultrawarm1.large.search
        - ultrawarm1.xlarge.search
        - t2.micro.search
        - t2.small.search
        - t2.medium.search
        - r3.large.search
        - r3.xlarge.search
        - r3.2xlarge.search
        - r3.4xlarge.search
        - r3.8xlarge.search
        - i2.xlarge.search
        - i2.2xlarge.search
        - d2.xlarge.search
        - d2.2xlarge.search
        - d2.4xlarge.search
        - d2.8xlarge.search
        - c4.large.search
        - c4.xlarge.search
        - c4.2xlarge.search
        - c4.4xlarge.search
        - c4.8xlarge.search
        - r4.large.search
        - r4.xlarge.search
        - r4.2xlarge.search
        - r4.4xlarge.search
        - r4.8xlarge.search
        - r4.16xlarge.search
        - i3.large.search
        - i3.xlarge.search
        - i3.2xlarge.search
        - i3.4xlarge.search
        - i3.8xlarge.search
        - i3.16xlarge.search
        - r6g.large.search
        - r6g.xlarge.search
        - r6g.2xlarge.search
        - r6g.4xlarge.search
        - r6g.8xlarge.search
        - r6g.12xlarge.search
        - m6g.large.search
        - m6g.xlarge.search
        - m6g.2xlarge.search
        - m6g.4xlarge.search
        - m6g.8xlarge.search
        - m6g.12xlarge.search
        - c6g.large.search
        - c6g.xlarge.search
        - c6g.2xlarge.search
        - c6g.4xlarge.search
        - c6g.8xlarge.search
        - c6g.12xlarge.search
        - r6gd.large.search
        - r6gd.xlarge.search
        - r6gd.2xlarge.search
        - r6gd.4xlarge.search
        - r6gd.8xlarge.search
        - r6gd.12xlarge.search
        - r6gd.16xlarge.search
        - t4g.small.search
        - t4g.medium.search
    IntegerClass:
      type: integer
    Boolean:
      type: boolean
    ZoneAwarenessConfig:
      type: object
      properties:
        AvailabilityZoneCount:
          allOf:
            - $ref: '#/components/schemas/IntegerClass'
            - description: 'If you enabled multiple Availability Zones, this value is the number of zones that you want the domain to use. Valid values are <code>2</code> and <code>3</code>. If your domain is provisioned within a VPC, this value be equal to number of subnets.'
      description: The zone awareness configuration for an Amazon OpenSearch Service domain.
    OpenSearchWarmPartitionInstanceType:
      type: string
      enum:
        - ultrawarm1.medium.search
        - ultrawarm1.large.search
        - ultrawarm1.xlarge.search
    ColdStorageOptions:
      type: object
      required:
        - Enabled
      properties:
        Enabled:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Whether to enable or disable cold storage on the domain.
      description: 'Container for the parameters required to enable cold storage for an OpenSearch Service domain. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/cold-storage.html">Cold storage for Amazon OpenSearch Service</a>.'
    VolumeType:
      type: string
      enum:
        - standard
        - gp2
        - io1
        - gp3
      description: 'The type of EBS volume that a domain uses. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/opensearch-createupdatedomains.html#opensearch-createdomain-configure-ebs">Configuring EBS-based storage</a>.'
    StringList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    UserPoolId:
      type: string
      pattern: '[\w-]+_[0-9a-zA-Z]+'
      minLength: 1
      maxLength: 55
    IdentityPoolId:
      type: string
      pattern: '[\w-]+:[0-9a-f-]+'
      minLength: 1
      maxLength: 55
    RoleArn:
      type: string
      pattern: 'arn:(aws|aws\-cn|aws\-us\-gov|aws\-iso|aws\-iso\-b):iam::[0-9]+:role\/.*'
      minLength: 20
      maxLength: 2048
    KmsKeyId:
      type: string
      pattern: .*
      minLength: 1
      maxLength: 500
    String:
      type: string
    LogPublishingOption:
      type: object
      properties:
        CloudWatchLogsLogGroupArn:
          allOf:
            - $ref: '#/components/schemas/CloudWatchLogsLogGroupArn'
            - description: The Amazon Resource Name (ARN) of the CloudWatch Logs group to publish logs to.
        Enabled:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Whether the log should be published.
      description: '<p>Specifies whether the Amazon OpenSearch Service domain publishes the OpenSearch application and slow logs to Amazon CloudWatch. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createdomain-configure-slow-logs.html">Monitoring OpenSearch logs with Amazon CloudWatch Logs</a>.</p> <note> <p>After you enable log publishing, you still have to enable the collection of slow logs using the OpenSearch REST API.</p> </note>'
    TLSSecurityPolicy:
      type: string
      enum:
        - Policy-Min-TLS-1-0-2019-07
        - Policy-Min-TLS-1-2-2019-07
    DomainNameFqdn:
      type: string
      pattern: '^(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$'
      minLength: 1
      maxLength: 255
    ARN:
      type: string
      pattern: .*
      description: 'The Amazon Resource Name (ARN) of the domain. See <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/index.html">Identifiers for IAM Entities </a> in <i>Using AWS Identity and Access Management</i> for more information. '
      minLength: 20
      maxLength: 2048
    MasterUserOptions:
      type: object
      properties:
        MasterUserARN:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: Amazon Resource Name (ARN) for the master user. Only specify if <code>InternalUserDatabaseEnabled</code> is <code>false</code>.
        MasterUserName:
          allOf:
            - $ref: '#/components/schemas/Username'
            - description: User name for the master user. Only specify if <code>InternalUserDatabaseEnabled</code> is <code>true</code>.
        MasterUserPassword:
          allOf:
            - $ref: '#/components/schemas/Password'
            - description: Password for the master user. Only specify if <code>InternalUserDatabaseEnabled</code> is <code>true</code>.
      description: Credentials for the master user for a domain.
    SAMLOptionsInput:
      type: object
      properties:
        Enabled:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: True to enable SAML authentication for a domain.
        Idp:
          allOf:
            - $ref: '#/components/schemas/SAMLIdp'
            - description: The SAML Identity Provider's information.
        MasterUserName:
          allOf:
            - $ref: '#/components/schemas/Username'
            - description: 'The SAML master user name, which is stored in the domain''s internal user database.'
        MasterBackendRole:
          allOf:
            - $ref: '#/components/schemas/BackendRole'
            - description: The backend role that the SAML master user is mapped to.
        SubjectKey:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: Element of the SAML assertion to use for the user name. Default is <code>NameID</code>.
        RolesKey:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: Element of the SAML assertion to use for backend roles. Default is <code>roles</code>.
        SessionTimeoutMinutes:
          allOf:
            - $ref: '#/components/schemas/IntegerClass'
            - description: 'The duration, in minutes, after which a user session becomes inactive. Acceptable values are between 1 and 1440, and the default value is 60.'
      description: The SAML authentication configuration for an Amazon OpenSearch Service domain.
    AutoTuneDesiredState:
      type: string
      enum:
        - ENABLED
        - DISABLED
      description: The Auto-Tune desired state. Valid values are ENABLED and DISABLED.
    AutoTuneMaintenanceScheduleList:
      type: array
      items:
        $ref: '#/components/schemas/AutoTuneMaintenanceSchedule'
      maxItems: 100
    OffPeakWindow:
      type: object
      properties:
        WindowStartTime:
          allOf:
            - $ref: '#/components/schemas/WindowStartTime'
            - description: 'A custom start time for the off-peak window, in Coordinated Universal Time (UTC). The window length will always be 10 hours, so you can''t specify an end time. For example, if you specify 11:00 P.M. UTC as a start time, the end time will automatically be set to 9:00 A.M.'
      description: '<p>A custom 10-hour, low-traffic window during which OpenSearch Service can perform mandatory configuration changes on the domain. These actions can include scheduled service software updates and blue/green Auto-Tune enhancements. OpenSearch Service will schedule these actions during the window that you specify.</p> <p>If you don''t specify a window start time, it defaults to 10:00 P.M. local time.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/off-peak.html">Defining off-peak maintenance windows for Amazon OpenSearch Service</a>.</p>'
    InvalidTypeException: {}
    ResourceAlreadyExistsException: {}
    CreateOutboundConnectionResponse:
      type: object
      properties:
        LocalDomainInfo:
          allOf:
            - $ref: '#/components/schemas/DomainInformationContainer'
            - description: Information about the source (local) domain.
        RemoteDomainInfo:
          allOf:
            - $ref: '#/components/schemas/DomainInformationContainer'
            - description: Information about the destination (remote) domain.
        ConnectionAlias:
          allOf:
            - $ref: '#/components/schemas/ConnectionAlias'
            - description: Name of the connection.
        ConnectionStatus:
          allOf:
            - $ref: '#/components/schemas/OutboundConnectionStatus'
            - description: The status of the connection.
        ConnectionId:
          allOf:
            - $ref: '#/components/schemas/ConnectionId'
            - description: 'The unique identifier for the created outbound connection, which is used for subsequent operations on the connection.'
        ConnectionMode:
          allOf:
            - $ref: '#/components/schemas/ConnectionMode'
            - description: The connection mode.
        ConnectionProperties:
          allOf:
            - $ref: '#/components/schemas/ConnectionProperties'
            - description: The <code>ConnectionProperties</code> for the newly created connection.
      description: The result of a <code>CreateOutboundConnection</code> request. Contains details about the newly created cross-cluster connection.
    AWSDomainInformation:
      type: object
      required:
        - DomainName
      properties:
        OwnerId:
          allOf:
            - $ref: '#/components/schemas/OwnerId'
            - description: The Amazon Web Services account ID of the domain owner.
        DomainName:
          allOf:
            - $ref: '#/components/schemas/DomainName'
            - description: Name of the domain.
        Region:
          allOf:
            - $ref: '#/components/schemas/Region'
            - description: The Amazon Web Services Region in which the domain is located.
      description: Information about an Amazon OpenSearch Service domain.
    Endpoint:
      type: string
      pattern: '^[A-Za-z0-9\-\.]+$'
    CrossClusterSearchConnectionProperties:
      type: object
      properties:
        SkipUnavailable:
          allOf:
            - $ref: '#/components/schemas/SkipUnavailableStatus'
            - description: Status of SkipUnavailable param for outbound connection.
      description: Cross cluster search specific connection properties.
    CreatePackageResponse:
      type: object
      properties:
        PackageDetails:
          allOf:
            - $ref: '#/components/schemas/PackageDetails'
            - description: Basic information about an OpenSearch Service package.
      description: Container for the response returned by the <code>CreatePackage</code> operation.
    S3BucketName:
      type: string
      minLength: 3
      maxLength: 63
    S3Key:
      type: string
      minLength: 1
      maxLength: 1024
    CreateVpcEndpointResponse:
      type: object
      required:
        - VpcEndpoint
      properties:
        VpcEndpoint:
          allOf:
            - $ref: '#/components/schemas/VpcEndpoint'
            - description: Information about the newly created VPC endpoint.
    DeleteDomainResponse:
      type: object
      properties:
        DomainStatus:
          allOf:
            - $ref: '#/components/schemas/DomainStatus'
            - description: The status of the domain being deleted.
      description: 'The results of a <code>DeleteDomain</code> request. Contains the status of the pending deletion, or a "domain not found" error if the domain and all of its resources have been deleted.'
    DeleteInboundConnectionResponse:
      type: object
      properties:
        Connection:
          allOf:
            - $ref: '#/components/schemas/InboundConnection'
            - description: The deleted inbound connection.
      description: The results of a <code>DeleteInboundConnection</code> operation. Contains details about the deleted inbound connection.
    DeleteOutboundConnectionResponse:
      type: object
      properties:
        Connection:
          allOf:
            - $ref: '#/components/schemas/OutboundConnection'
            - description: The deleted inbound connection.
      description: Details about the deleted outbound connection.
    DeletePackageResponse:
      type: object
      properties:
        PackageDetails:
          allOf:
            - $ref: '#/components/schemas/PackageDetails'
            - description: ' Information about the deleted package.'
      description: Container for the response parameters to the <code>DeletePackage</code> operation.
    DeleteVpcEndpointResponse:
      type: object
      required:
        - VpcEndpointSummary
      properties:
        VpcEndpointSummary:
          allOf:
            - $ref: '#/components/schemas/VpcEndpointSummary'
            - description: 'Information about the deleted endpoint, including its current status (<code>DELETING</code> or <code>DELETE_FAILED</code>).'
    DescribeDomainResponse:
      type: object
      required:
        - DomainStatus
      properties:
        DomainStatus:
          allOf:
            - $ref: '#/components/schemas/DomainStatus'
            - description: List that contains the status of each specified OpenSearch Service domain.
      description: Contains the status of the domain specified in the request.
    DescribeDomainAutoTunesResponse:
      type: object
      properties:
        AutoTunes:
          allOf:
            - $ref: '#/components/schemas/AutoTuneList'
            - description: The list of setting adjustments that Auto-Tune has made to the domain.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: 'When <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page.'
      description: The result of a <code>DescribeDomainAutoTunes</code> request.
    DescribeDomainChangeProgressResponse:
      type: object
      properties:
        ChangeProgressStatus:
          allOf:
            - $ref: '#/components/schemas/ChangeProgressStatusDetails'
            - description: Container for information about the stages of a configuration change happening on a domain.
      description: The result of a <code>DescribeDomainChangeProgress</code> request. Contains progress information for the requested domain change.
    DescribeDomainConfigResponse:
      type: object
      required:
        - DomainConfig
      properties:
        DomainConfig:
          allOf:
            - $ref: '#/components/schemas/DomainConfig'
            - description: Container for the configuration of the OpenSearch Service domain.
      description: Contains the configuration information of the requested domain.
    DescribeDomainHealthResponse:
      type: object
      properties:
        DomainState:
          allOf:
            - $ref: '#/components/schemas/DomainState'
            - description: <p>The current state of the domain.</p> <ul> <li> <p> <code>Processing</code> - The domain has updates in progress.</p> </li> <li> <p> <code>Active</code> - Requested changes have been processed and deployed to the domain.</p> </li> </ul>
        AvailabilityZoneCount:
          allOf:
            - $ref: '#/components/schemas/NumberOfAZs'
            - description: 'The number of Availability Zones configured for the domain. If the service is unable to fetch this information, it will return <code>NotAvailable</code>.'
        ActiveAvailabilityZoneCount:
          allOf:
            - $ref: '#/components/schemas/NumberOfAZs'
            - description: 'The number of active Availability Zones configured for the domain. If the service is unable to fetch this information, it will return <code>NotAvailable</code>.'
        StandByAvailabilityZoneCount:
          allOf:
            - $ref: '#/components/schemas/NumberOfAZs'
            - description: 'The number of standby Availability Zones configured for the domain. If the service is unable to fetch this information, it will return <code>NotAvailable</code>.'
        DataNodeCount:
          allOf:
            - $ref: '#/components/schemas/NumberOfNodes'
            - description: 'The number of data nodes configured for the domain. If the service is unable to fetch this information, it will return <code>NotAvailable</code>.'
        DedicatedMaster:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: A boolean that indicates if dedicated master nodes are activated for the domain.
        MasterEligibleNodeCount:
          allOf:
            - $ref: '#/components/schemas/NumberOfNodes'
            - description: 'The number of nodes that can be elected as a master node. If dedicated master nodes is turned on, this value is the number of dedicated master nodes configured for the domain. If the service is unable to fetch this information, it will return <code>NotAvailable</code>.'
        WarmNodeCount:
          allOf:
            - $ref: '#/components/schemas/NumberOfNodes'
            - description: The number of warm nodes configured for the domain.
        MasterNode:
          allOf:
            - $ref: '#/components/schemas/MasterNodeStatus'
            - description: '<p>Indicates whether the domain has an elected master node.</p> <ul> <li> <p> <b>Available</b> - The domain has an elected master node.</p> </li> <li> <p> <b>UnAvailable</b> - The master node hasn''t yet been elected, and a quorum to elect a new master node hasn''t been reached.</p> </li> </ul>'
        ClusterHealth:
          allOf:
            - $ref: '#/components/schemas/DomainHealth'
            - description: '<p>The current health status of your cluster.</p> <ul> <li> <p> <code>Red</code> - At least one primary shard is not allocated to any node.</p> </li> <li> <p> <code>Yellow</code> - All primary shards are allocated to nodes, but some replicas aren’t.</p> </li> <li> <p> <code>Green</code> - All primary shards and their replicas are allocated to nodes.</p> </li> <li> <p> <code>NotAvailable</code> - Unable to retrieve cluster health.</p> </li> </ul>'
        TotalShards:
          allOf:
            - $ref: '#/components/schemas/NumberOfShards'
            - description: The total number of primary and replica shards for the domain.
        TotalUnAssignedShards:
          allOf:
            - $ref: '#/components/schemas/NumberOfShards'
            - description: The total number of primary and replica shards not allocated to any of the nodes for the cluster.
        EnvironmentInformation:
          allOf:
            - $ref: '#/components/schemas/EnvironmentInfoList'
            - description: 'A list of <code>EnvironmentInfo</code> for the domain. '
      description: The result of a <code>DescribeDomainHealth</code> request. Contains health information for the requested domain.
    DescribeDomainNodesResponse:
      type: object
      properties:
        DomainNodesStatusList:
          allOf:
            - $ref: '#/components/schemas/DomainNodesStatusList'
            - description: Contains nodes information list <code>DomainNodesStatusList</code> with details about the all nodes on the requested domain.
      description: 'The result of a <code>DescribeDomainNodes</code> request. Contains information about the nodes on the requested domain. '
    DependencyFailureException: {}
    DescribeDomainsResponse:
      type: object
      required:
        - DomainStatusList
      properties:
        DomainStatusList:
          allOf:
            - $ref: '#/components/schemas/DomainStatusList'
            - description: The status of the requested domains.
      description: Contains the status of the specified domains or all domains owned by the account.
    DomainName:
      type: string
      pattern: '[a-z][a-z0-9\-]+'
      description: The name of an OpenSearch Service domain. Domain names are unique across the domains owned by an account within an Amazon Web Services Region.
      minLength: 3
      maxLength: 28
    DescribeDryRunProgressResponse:
      type: object
      properties:
        DryRunProgressStatus:
          allOf:
            - $ref: '#/components/schemas/DryRunProgressStatus'
            - description: 'The current status of the dry run, including any validation errors.'
        DryRunConfig:
          allOf:
            - $ref: '#/components/schemas/DomainStatus'
            - description: Details about the changes you're planning to make on the domain.
        DryRunResults:
          allOf:
            - $ref: '#/components/schemas/DryRunResults'
            - description: 'The results of the dry run. '
    DescribeInboundConnectionsResponse:
      type: object
      properties:
        Connections:
          allOf:
            - $ref: '#/components/schemas/InboundConnections'
            - description: List of inbound connections.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: 'When <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page.'
      description: Contains a list of connections matching the filter criteria.
    Filter:
      type: object
      properties:
        Name:
          allOf:
            - $ref: '#/components/schemas/NonEmptyString'
            - description: The name of the filter.
        Values:
          allOf:
            - $ref: '#/components/schemas/ValueStringList'
            - description: One or more values for the filter.
      description: A filter used to limit results when describing inbound or outbound cross-cluster connections. You can specify multiple values per filter. A cross-cluster connection must match at least one of the specified values for it to be returned from an operation.
    InvalidPaginationTokenException: {}
    DescribeInstanceTypeLimitsResponse:
      type: object
      properties:
        LimitsByRole:
          allOf:
            - $ref: '#/components/schemas/LimitsByRole'
            - description: Map that contains all applicable instance type limits.<code>data</code> refers to data nodes.<code>master</code> refers to dedicated master nodes.
      description: Container for the parameters received from the <code>DescribeInstanceTypeLimits</code> operation.
    DescribeOutboundConnectionsResponse:
      type: object
      properties:
        Connections:
          allOf:
            - $ref: '#/components/schemas/OutboundConnections'
            - description: List of outbound connections that match the filter criteria.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: 'When <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page.'
      description: Contains a list of connections matching the filter criteria.
    DescribePackagesResponse:
      type: object
      properties:
        PackageDetailsList:
          allOf:
            - $ref: '#/components/schemas/PackageDetailsList'
            - description: Basic information about a package.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'When <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page.'
      description: Container for the response returned by the <code>DescribePackages</code> operation.
    DescribePackagesFilter:
      type: object
      properties:
        Name:
          allOf:
            - $ref: '#/components/schemas/DescribePackagesFilterName'
            - description: Any field from <code>PackageDetails</code>.
        Value:
          allOf:
            - $ref: '#/components/schemas/DescribePackagesFilterValues'
            - description: A non-empty list of values for the specified filter field.
      description: A filter to apply to the <code>DescribePackage</code> response.
    DescribeReservedInstanceOfferingsResponse:
      type: object
      properties:
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: 'When <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page.'
        ReservedInstanceOfferings:
          allOf:
            - $ref: '#/components/schemas/ReservedInstanceOfferingList'
            - description: List of Reserved Instance offerings.
      description: Container for results of a <code>DescribeReservedInstanceOfferings</code> request.
    DescribeReservedInstancesResponse:
      type: object
      properties:
        NextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'When <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page.'
        ReservedInstances:
          allOf:
            - $ref: '#/components/schemas/ReservedInstanceList'
            - description: List of Reserved Instances in the current Region.
      description: 'Container for results from <code>DescribeReservedInstances</code> '
    DescribeVpcEndpointsResponse:
      type: object
      required:
        - VpcEndpoints
        - VpcEndpointErrors
      properties:
        VpcEndpoints:
          allOf:
            - $ref: '#/components/schemas/VpcEndpoints'
            - description: Information about each requested VPC endpoint.
        VpcEndpointErrors:
          allOf:
            - $ref: '#/components/schemas/VpcEndpointErrorList'
            - description: Any errors associated with the request.
    VpcEndpointId:
      type: string
      pattern: '^aos-[a-zA-Z0-9]*$'
      minLength: 5
      maxLength: 256
    DissociatePackageResponse:
      type: object
      properties:
        DomainPackageDetails:
          allOf:
            - $ref: '#/components/schemas/DomainPackageDetails'
            - description: ' Information about a package that has been dissociated from the domain.'
      description: Container for the response returned by an <code>DissociatePackage</code> operation.
    GetCompatibleVersionsResponse:
      type: object
      properties:
        CompatibleVersions:
          allOf:
            - $ref: '#/components/schemas/CompatibleVersionsList'
            - description: A map of OpenSearch or Elasticsearch versions and the versions you can upgrade them to.
      description: Container for the response returned by the <code>GetCompatibleVersions</code> operation.
    GetPackageVersionHistoryResponse:
      type: object
      properties:
        PackageID:
          allOf:
            - $ref: '#/components/schemas/PackageID'
            - description: The unique identifier of the package.
        PackageVersionHistoryList:
          allOf:
            - $ref: '#/components/schemas/PackageVersionHistoryList'
            - description: 'A list of package versions, along with their creation time and commit message.'
        NextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'When <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page.'
      description: Container for response returned by <code>GetPackageVersionHistory</code> operation.
    GetUpgradeHistoryResponse:
      type: object
      properties:
        UpgradeHistories:
          allOf:
            - $ref: '#/components/schemas/UpgradeHistoryList'
            - description: A list of objects corresponding to each upgrade or upgrade eligibility check performed on a domain.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'When <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page.'
      description: Container for the response returned by the <code>GetUpgradeHistory</code> operation.
    GetUpgradeStatusResponse:
      type: object
      properties:
        UpgradeStep:
          allOf:
            - $ref: '#/components/schemas/UpgradeStep'
            - description: One of three steps that an upgrade or upgrade eligibility check goes through.
        StepStatus:
          allOf:
            - $ref: '#/components/schemas/UpgradeStatus'
            - description: The status of the current step that an upgrade is on.
        UpgradeName:
          allOf:
            - $ref: '#/components/schemas/UpgradeName'
            - description: A string that describes the update.
      description: Container for the response returned by the <code>GetUpgradeStatus</code> operation.
    ListDomainNamesResponse:
      type: object
      properties:
        DomainNames:
          allOf:
            - $ref: '#/components/schemas/DomainInfoList'
            - description: The names of all OpenSearch Service domains owned by the current user and their respective engine types.
      description: The results of a <code>ListDomainNames</code> operation. Contains the names of all domains owned by this account and their respective engine types.
    ListDomainsForPackageResponse:
      type: object
      properties:
        DomainPackageDetailsList:
          allOf:
            - $ref: '#/components/schemas/DomainPackageDetailsList'
            - description: Information about all domains associated with a package.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'When <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page.'
      description: Container for the response parameters to the <code>ListDomainsForPackage</code> operation.
    ListInstanceTypeDetailsResponse:
      type: object
      properties:
        InstanceTypeDetails:
          allOf:
            - $ref: '#/components/schemas/InstanceTypeDetailsList'
            - description: Lists all supported instance types and features for the given OpenSearch or Elasticsearch version.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: 'When <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page.'
    ListPackagesForDomainResponse:
      type: object
      properties:
        DomainPackageDetailsList:
          allOf:
            - $ref: '#/components/schemas/DomainPackageDetailsList'
            - description: List of all packages associated with a domain.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'When <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page.'
      description: Container for the response parameters to the <code>ListPackagesForDomain</code> operation.
    ListScheduledActionsResponse:
      type: object
      properties:
        ScheduledActions:
          allOf:
            - $ref: '#/components/schemas/ScheduledActionsList'
            - description: A list of actions that are scheduled for the domain.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: 'When <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page.'
    ListTagsResponse:
      type: object
      properties:
        TagList:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: List of resource tags associated with the specified domain.
      description: The results of a <code>ListTags</code> operation.
    ListVersionsResponse:
      type: object
      properties:
        Versions:
          allOf:
            - $ref: '#/components/schemas/VersionList'
            - description: A list of all versions of OpenSearch and Elasticsearch that Amazon OpenSearch Service supports.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: 'When <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page.'
      description: Container for the parameters for response received from the <code>ListVersions</code> operation.
    ListVpcEndpointAccessResponse:
      type: object
      required:
        - AuthorizedPrincipalList
        - NextToken
      properties:
        AuthorizedPrincipalList:
          allOf:
            - $ref: '#/components/schemas/AuthorizedPrincipalList'
            - description: 'A list of <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_principal.html">IAM principals</a> that can currently access the domain.'
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: 'When <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page.'
    ListVpcEndpointsResponse:
      type: object
      required:
        - VpcEndpointSummaryList
        - NextToken
      properties:
        VpcEndpointSummaryList:
          allOf:
            - $ref: '#/components/schemas/VpcEndpointSummaryList'
            - description: Information about each endpoint.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: 'When <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page.'
    ListVpcEndpointsForDomainResponse:
      type: object
      required:
        - VpcEndpointSummaryList
        - NextToken
      properties:
        VpcEndpointSummaryList:
          allOf:
            - $ref: '#/components/schemas/VpcEndpointSummaryList'
            - description: Information about each endpoint associated with the domain.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: 'When <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page.'
    PurchaseReservedInstanceOfferingResponse:
      type: object
      properties:
        ReservedInstanceId:
          allOf:
            - $ref: '#/components/schemas/GUID'
            - description: The ID of the Reserved Instance offering that was purchased.
        ReservationName:
          allOf:
            - $ref: '#/components/schemas/ReservationToken'
            - description: The customer-specified identifier used to track this reservation.
      description: Represents the output of a <code>PurchaseReservedInstanceOffering</code> operation.
    RejectInboundConnectionResponse:
      type: object
      properties:
        Connection:
          allOf:
            - $ref: '#/components/schemas/InboundConnection'
            - description: Contains details about the rejected inbound connection.
      description: Represents the output of a <code>RejectInboundConnection</code> operation.
    RevokeVpcEndpointAccessResponse:
      type: object
      properties: {}
    StartServiceSoftwareUpdateResponse:
      type: object
      properties:
        ServiceSoftwareOptions:
          allOf:
            - $ref: '#/components/schemas/ServiceSoftwareOptions'
            - description: The current status of the OpenSearch Service software update.
      description: Represents the output of a <code>StartServiceSoftwareUpdate</code> operation. Contains the status of the update.
    UpdateDomainConfigResponse:
      type: object
      required:
        - DomainConfig
      properties:
        DomainConfig:
          allOf:
            - $ref: '#/components/schemas/DomainConfig'
            - description: The status of the updated domain.
        DryRunResults:
          allOf:
            - $ref: '#/components/schemas/DryRunResults'
            - description: Results of the dry run performed in the update domain request.
        DryRunProgressStatus:
          allOf:
            - $ref: '#/components/schemas/DryRunProgressStatus'
            - description: 'The status of the dry run being performed on the domain, if any.'
      description: The results of an <code>UpdateDomain</code> request. Contains the status of the domain being updated.
    RollbackOnDisable:
      type: string
      enum:
        - NO_ROLLBACK
        - DEFAULT_ROLLBACK
      description: The rollback state while disabling Auto-Tune for the domain.
    UpdatePackageResponse:
      type: object
      properties:
        PackageDetails:
          allOf:
            - $ref: '#/components/schemas/PackageDetails'
            - description: Information about a package.
      description: Container for the response returned by the <code>UpdatePackage</code> operation.
    UpdateScheduledActionResponse:
      type: object
      properties:
        ScheduledAction:
          allOf:
            - $ref: '#/components/schemas/ScheduledAction'
            - description: Information about the rescheduled action.
    SlotNotAvailableException: {}
    UpdateVpcEndpointResponse:
      type: object
      required:
        - VpcEndpoint
      properties:
        VpcEndpoint:
          allOf:
            - $ref: '#/components/schemas/VpcEndpoint'
            - description: The endpoint to be updated.
    UpgradeDomainResponse:
      type: object
      properties:
        UpgradeId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The unique identifier of the domain upgrade.
        DomainName:
          allOf:
            - $ref: '#/components/schemas/DomainName'
            - description: The name of the domain that was upgraded.
        TargetVersion:
          allOf:
            - $ref: '#/components/schemas/VersionString'
            - description: OpenSearch or Elasticsearch version that the domain was upgraded to.
        PerformCheckOnly:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'When true, indicates that an upgrade eligibility check was performed.'
        AdvancedOptions:
          allOf:
            - $ref: '#/components/schemas/AdvancedOptions'
            - description: The advanced options configuration for the domain.
        ChangeProgressDetails:
          allOf:
            - $ref: '#/components/schemas/ChangeProgressDetails'
            - description: Container for information about a configuration change happening on a domain.
      description: Container for the response returned by <code>UpgradeDomain</code> operation.
    AWSAccount:
      type: string
      pattern: '^[0-9]+$'
    OwnerId:
      type: string
      pattern: '[0-9]+'
      minLength: 12
      maxLength: 12
    Region:
      type: string
      pattern: '[a-z][a-z0-9\-]+'
      minLength: 5
      maxLength: 30
    ConnectionId:
      type: string
      pattern: '[a-z][a-z0-9\-]+'
      minLength: 10
      maxLength: 256
    AcceptInboundConnectionRequest:
      type: object
      title: AcceptInboundConnectionRequest
      properties: {}
      description: Container for the parameters to the <code>AcceptInboundConnection</code> operation.
    InboundConnection:
      type: object
      properties:
        LocalDomainInfo:
          allOf:
            - $ref: '#/components/schemas/DomainInformationContainer'
            - description: Information about the source (local) domain.
        RemoteDomainInfo:
          allOf:
            - $ref: '#/components/schemas/DomainInformationContainer'
            - description: Information about the destination (remote) domain.
        ConnectionId:
          allOf:
            - $ref: '#/components/schemas/ConnectionId'
            - description: The unique identifier of the connection.
        ConnectionStatus:
          allOf:
            - $ref: '#/components/schemas/InboundConnectionStatus'
            - description: The current status of the connection.
        ConnectionMode:
          allOf:
            - $ref: '#/components/schemas/ConnectionMode'
            - description: The connection mode.
      description: 'Describes an inbound cross-cluster connection for Amazon OpenSearch Service. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/cross-cluster-search.html">Cross-cluster search for Amazon OpenSearch Service</a>.'
    PolicyDocument:
      type: string
      pattern: .*
      description: 'Access policy rules for an Amazon OpenSearch Service domain endpoint. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomain-configure-access-policies">Configuring access policies</a>. The maximum size of a policy document is 100 KB.'
      minLength: 0
      maxLength: 102400
    OptionStatus:
      type: object
      required:
        - CreationDate
        - UpdateDate
        - State
      properties:
        CreationDate:
          allOf:
            - $ref: '#/components/schemas/UpdateTimestamp'
            - description: The timestamp when the entity was created.
        UpdateDate:
          allOf:
            - $ref: '#/components/schemas/UpdateTimestamp'
            - description: The timestamp of the last time the entity was updated.
        UpdateVersion:
          allOf:
            - $ref: '#/components/schemas/UIntValue'
            - description: The latest version of the entity.
        State:
          allOf:
            - $ref: '#/components/schemas/OptionState'
            - description: The state of the entity.
        PendingDeletion:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether the entity is being deleted.
      description: Provides the current status of an entity.
    AccessPoliciesStatus:
      type: object
      required:
        - Options
        - Status
      properties:
        Options:
          allOf:
            - $ref: '#/components/schemas/PolicyDocument'
            - description: 'The access policy configured for the domain. Access policies can be resource-based, IP-based, or IAM-based. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomain-configure-access-policies">Configuring access policies</a>.'
        Status:
          allOf:
            - $ref: '#/components/schemas/OptionStatus'
            - description: The status of the access policy for the domain.
      description: 'The configured access rules for the domain''s search endpoint, and the current status of those rules.'
    ActionSeverity:
      type: string
      enum:
        - HIGH
        - MEDIUM
        - LOW
    ActionStatus:
      type: string
      enum:
        - PENDING_UPDATE
        - IN_PROGRESS
        - FAILED
        - COMPLETED
        - NOT_ELIGIBLE
        - ELIGIBLE
    ActionType:
      type: string
      enum:
        - SERVICE_SOFTWARE_UPDATE
        - JVM_HEAP_SIZE_TUNING
        - JVM_YOUNG_GEN_TUNING
    TagList:
      type: array
      description: A list of tags attached to a domain.
      items:
        $ref: '#/components/schemas/Tag'
    AddTagsRequest:
      type: object
      required:
        - ARN
        - TagList
      title: AddTagsRequest
      properties:
        ARN:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: Amazon Resource Name (ARN) for the OpenSearch Service domain to which you want to attach resource tags.
        TagList:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: List of resource tags.
      description: Container for the parameters to the <code>AddTags</code> operation. Specifies the tags to attach to the domain.
    LimitName:
      type: string
    LimitValueList:
      type: array
      items:
        $ref: '#/components/schemas/LimitValue'
    AdditionalLimit:
      type: object
      properties:
        LimitName:
          allOf:
            - $ref: '#/components/schemas/LimitName'
            - description: <ul> <li> <p> <code>MaximumNumberOfDataNodesSupported</code> - This attribute only applies to master nodes and specifies the maximum number of data nodes of a given instance type a master node can support.</p> </li> <li> <p> <code>MaximumNumberOfDataNodesWithoutMasterNode</code> - This attribute only applies to data nodes and specifies the maximum number of data nodes of a given instance type can exist without a master node governing them.</p> </li> </ul>
        LimitValues:
          allOf:
            - $ref: '#/components/schemas/LimitValueList'
            - description: ' The values of the additional instance type limits.'
      description: ' List of limits that are specific to a given instance type.'
    AdditionalLimitList:
      type: array
      items:
        $ref: '#/components/schemas/AdditionalLimit'
    AdvancedOptions:
      type: object
      description: '<p>Exposes native OpenSearch configuration values from <code>opensearch.yml</code>. The following advanced options are available: </p> <ul> <li> <p>Allows references to indexes in an HTTP request body. Must be <code>false</code> when configuring access to individual sub-resources. Default is <code>true</code>.</p> </li> <li> <p>Specifies the percentage of heap space allocated to field data. Default is unbounded.</p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomain-configure-advanced-options">Advanced cluster parameters</a>.</p>'
      additionalProperties:
        $ref: '#/components/schemas/String'
    AdvancedOptionsStatus:
      type: object
      required:
        - Options
        - Status
      properties:
        Options:
          allOf:
            - $ref: '#/components/schemas/AdvancedOptions'
            - description: The status of advanced options for the specified domain.
        Status:
          allOf:
            - $ref: '#/components/schemas/OptionStatus'
            - description: The status of advanced options for the specified domain.
      description: '<p>Status of the advanced options for the specified domain. The following options are available: </p> <ul> <li> <p> <code>"rest.action.multi.allow_explicit_index": "true" | "false"</code> - Note the use of a string rather than a boolean. Specifies whether explicit references to indexes are allowed inside the body of HTTP requests. If you want to configure access policies for domain sub-resources, such as specific indexes and domain APIs, you must disable this property. Default is true.</p> </li> <li> <p> <code>"indices.fielddata.cache.size": "80" </code> - Note the use of a string rather than a boolean. Specifies the percentage of heap space allocated to field data. Default is unbounded.</p> </li> <li> <p> <code>"indices.query.bool.max_clause_count": "1024"</code> - Note the use of a string rather than a boolean. Specifies the maximum number of clauses allowed in a Lucene boolean query. Default is 1,024. Queries with more than the permitted number of clauses result in a <code>TooManyClauses</code> error.</p> </li> <li> <p> <code>"override_main_response_version": "true" | "false"</code> - Note the use of a string rather than a boolean. Specifies whether the domain reports its version as 7.10 to allow Elasticsearch OSS clients and plugins to continue working with it. Default is false when creating a domain and true when upgrading a domain.</p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomain-configure-advanced-options">Advanced cluster parameters</a>.</p>'
    SAMLOptionsOutput:
      type: object
      properties:
        Enabled:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: True if SAML is enabled.
        Idp:
          allOf:
            - $ref: '#/components/schemas/SAMLIdp'
            - description: Describes the SAML identity provider's information.
        SubjectKey:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The key used for matching the SAML subject attribute.
        RolesKey:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The key used for matching the SAML roles attribute.
        SessionTimeoutMinutes:
          allOf:
            - $ref: '#/components/schemas/IntegerClass'
            - description: 'The duration, in minutes, after which a user session becomes inactive.'
      description: Describes the SAML application configured for the domain.
    DisableTimestamp:
      type: string
      format: date-time
    AdvancedSecurityOptions:
      type: object
      properties:
        Enabled:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: True if fine-grained access control is enabled.
        InternalUserDatabaseEnabled:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: True if the internal user database is enabled.
        SAMLOptions:
          allOf:
            - $ref: '#/components/schemas/SAMLOptionsOutput'
            - description: Container for information about the SAML configuration for OpenSearch Dashboards.
        AnonymousAuthDisableDate:
          allOf:
            - $ref: '#/components/schemas/DisableTimestamp'
            - description: 'Date and time when the migration period will be disabled. Only necessary when <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/fgac.html#fgac-enabling-existing">enabling fine-grained access control on an existing domain</a>.'
        AnonymousAuthEnabled:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'True if a 30-day migration period is enabled, during which administrators can create role mappings. Only necessary when <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/fgac.html#fgac-enabling-existing">enabling fine-grained access control on an existing domain</a>.'
      description: Container for fine-grained access control settings.
    AdvancedSecurityOptionsInput:
      type: object
      properties:
        Enabled:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: True to enable fine-grained access control.
        InternalUserDatabaseEnabled:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: True to enable the internal user database.
        MasterUserOptions:
          allOf:
            - $ref: '#/components/schemas/MasterUserOptions'
            - description: Container for information about the master user.
        SAMLOptions:
          allOf:
            - $ref: '#/components/schemas/SAMLOptionsInput'
            - description: Container for information about the SAML configuration for OpenSearch Dashboards.
        AnonymousAuthEnabled:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'True to enable a 30-day migration period during which administrators can create role mappings. Only necessary when <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/fgac.html#fgac-enabling-existing">enabling fine-grained access control on an existing domain</a>.'
      description: 'Options for enabling and configuring fine-grained access control. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/fgac.html">Fine-grained access control in Amazon OpenSearch Service</a>.'
    AdvancedSecurityOptionsStatus:
      type: object
      required:
        - Options
        - Status
      properties:
        Options:
          allOf:
            - $ref: '#/components/schemas/AdvancedSecurityOptions'
            - description: Container for fine-grained access control settings.
        Status:
          allOf:
            - $ref: '#/components/schemas/OptionStatus'
            - description: Status of the fine-grained access control settings for a domain.
      description: The status of fine-grained access control settings for a domain.
    PackageID:
      type: string
    AssociatePackageRequest:
      type: object
      title: AssociatePackageRequest
      properties: {}
      description: Container for the request parameters to the <code>AssociatePackage</code> operation.
    DomainPackageDetails:
      type: object
      properties:
        PackageID:
          allOf:
            - $ref: '#/components/schemas/PackageID'
            - description: Internal ID of the package.
        PackageName:
          allOf:
            - $ref: '#/components/schemas/PackageName'
            - description: User-specified name of the package.
        PackageType:
          allOf:
            - $ref: '#/components/schemas/PackageType'
            - description: The type of package.
        LastUpdated:
          allOf:
            - $ref: '#/components/schemas/LastUpdated'
            - description: Timestamp of the most recent update to the package association status.
        DomainName:
          allOf:
            - $ref: '#/components/schemas/DomainName'
            - description: Name of the domain that the package is associated with.
        DomainPackageStatus:
          allOf:
            - $ref: '#/components/schemas/DomainPackageStatus'
            - description: State of the association.
        PackageVersion:
          allOf:
            - $ref: '#/components/schemas/PackageVersion'
            - description: The current version of the package.
        ReferencePath:
          allOf:
            - $ref: '#/components/schemas/ReferencePath'
            - description: The relative path of the package on the OpenSearch Service cluster nodes. This is <code>synonym_path</code> when the package is for synonym files.
        ErrorDetails:
          allOf:
            - $ref: '#/components/schemas/ErrorDetails'
            - description: Additional information if the package is in an error state. Null otherwise.
      description: 'Information about a package that is associated with a domain. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/custom-packages.html">Custom packages for Amazon OpenSearch Service</a>.'
    AuthorizeVpcEndpointAccessRequest:
      type: object
      required:
        - Account
      title: AuthorizeVpcEndpointAccessRequest
      properties:
        Account:
          allOf:
            - $ref: '#/components/schemas/AWSAccount'
            - description: The Amazon Web Services account ID to grant access to.
    AuthorizedPrincipal:
      type: object
      properties:
        PrincipalType:
          allOf:
            - $ref: '#/components/schemas/PrincipalType'
            - description: The type of principal.
        Principal:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_principal.html">IAM principal</a> that is allowed access to the domain.'
      description: Information about an Amazon Web Services account or service that has access to an Amazon OpenSearch Service domain through the use of an interface VPC endpoint.
    PrincipalType:
      type: string
      enum:
        - AWS_ACCOUNT
        - AWS_SERVICE
    AuthorizedPrincipalList:
      type: array
      items:
        $ref: '#/components/schemas/AuthorizedPrincipal'
    AutoTuneType:
      type: string
      enum:
        - SCHEDULED_ACTION
      description: Specifies the Auto-Tune type. Valid value is SCHEDULED_ACTION.
    AutoTuneDetails:
      type: object
      properties:
        ScheduledAutoTuneDetails:
          allOf:
            - $ref: '#/components/schemas/ScheduledAutoTuneDetails'
            - description: Container for details about a scheduled Auto-Tune action.
      description: 'Specifies details about a scheduled Auto-Tune action. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html">Auto-Tune for Amazon OpenSearch Service</a>.'
    AutoTune:
      type: object
      properties:
        AutoTuneType:
          allOf:
            - $ref: '#/components/schemas/AutoTuneType'
            - description: The type of Auto-Tune action.
        AutoTuneDetails:
          allOf:
            - $ref: '#/components/schemas/AutoTuneDetails'
            - description: Details about an Auto-Tune action.
      description: 'Information about an Auto-Tune action. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html">Auto-Tune for Amazon OpenSearch Service</a>.'
    AutoTuneDate:
      type: string
      description: The timestamp of the Auto-Tune action scheduled for the domain.
      format: date-time
    ScheduledAutoTuneDetails:
      type: object
      properties:
        Date:
          allOf:
            - $ref: '#/components/schemas/AutoTuneDate'
            - description: The date and time when the Auto-Tune action is scheduled for the domain.
        ActionType:
          allOf:
            - $ref: '#/components/schemas/ScheduledAutoTuneActionType'
            - description: The type of Auto-Tune action.
        Action:
          allOf:
            - $ref: '#/components/schemas/ScheduledAutoTuneDescription'
            - description: A description of the Auto-Tune action.
        Severity:
          allOf:
            - $ref: '#/components/schemas/ScheduledAutoTuneSeverityType'
            - description: 'The severity of the Auto-Tune action. Valid values are <code>LOW</code>, <code>MEDIUM</code>, and <code>HIGH</code>.'
      description: 'Specifies details about a scheduled Auto-Tune action. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html">Auto-Tune for Amazon OpenSearch Service</a>.'
    AutoTuneList:
      type: array
      items:
        $ref: '#/components/schemas/AutoTune'
    StartAt:
      type: string
      format: date-time
    Duration:
      type: object
      properties:
        Value:
          allOf:
            - $ref: '#/components/schemas/DurationValue'
            - description: Integer to specify the value of a maintenance schedule duration.
        Unit:
          allOf:
            - $ref: '#/components/schemas/TimeUnit'
            - description: The unit of measurement for the duration of a maintenance schedule.
      description: 'The duration of a maintenance schedule. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html">Auto-Tune for Amazon OpenSearch Service</a>.'
    AutoTuneMaintenanceSchedule:
      type: object
      properties:
        StartAt:
          allOf:
            - $ref: '#/components/schemas/StartAt'
            - description: The Epoch timestamp at which the Auto-Tune maintenance schedule starts.
        Duration:
          allOf:
            - $ref: '#/components/schemas/Duration'
            - description: 'The duration of the maintenance schedule. For example, <code>"Duration": {"Value": 2, "Unit": "HOURS"}</code>.'
        CronExpressionForRecurrence:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A cron expression for a recurring maintenance schedule during which Auto-Tune can deploy changes.
      description: '<note> <p>This object is deprecated. Use the domain''s <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/off-peak.html">off-peak window</a> to schedule Auto-Tune optimizations. For migration instructions, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/off-peak.html#off-peak-migrate">Migrating from Auto-Tune maintenance windows</a>.</p> </note> <p>The Auto-Tune maintenance schedule. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html">Auto-Tune for Amazon OpenSearch Service</a>.</p>'
    AutoTuneOptions:
      type: object
      properties:
        DesiredState:
          allOf:
            - $ref: '#/components/schemas/AutoTuneDesiredState'
            - description: Whether Auto-Tune is enabled or disabled.
        RollbackOnDisable:
          allOf:
            - $ref: '#/components/schemas/RollbackOnDisable'
            - description: 'When disabling Auto-Tune, specify <code>NO_ROLLBACK</code> to retain all prior Auto-Tune settings or <code>DEFAULT_ROLLBACK</code> to revert to the OpenSearch Service defaults. If you specify <code>DEFAULT_ROLLBACK</code>, you must include a <code>MaintenanceSchedule</code> in the request. Otherwise, OpenSearch Service is unable to perform the rollback.'
        MaintenanceSchedules:
          allOf:
            - $ref: '#/components/schemas/AutoTuneMaintenanceScheduleList'
            - description: '<p>DEPRECATED. Use <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/off-peak.html">off-peak window</a> instead.</p> <p>A list of maintenance schedules during which Auto-Tune can deploy changes.</p>'
        UseOffPeakWindow:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Whether to use the domain''s <a href="https://docs.aws.amazon.com/opensearch-service/latest/APIReference/API_OffPeakWindow.html">off-peak window</a> to deploy configuration changes on the domain rather than a maintenance schedule.'
      description: 'Auto-Tune settings when updating a domain. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html">Auto-Tune for Amazon OpenSearch Service</a>.'
    AutoTuneOptionsInput:
      type: object
      properties:
        DesiredState:
          allOf:
            - $ref: '#/components/schemas/AutoTuneDesiredState'
            - description: Whether Auto-Tune is enabled or disabled.
        MaintenanceSchedules:
          allOf:
            - $ref: '#/components/schemas/AutoTuneMaintenanceScheduleList'
            - description: 'A list of maintenance schedules during which Auto-Tune can deploy changes. Maintenance windows are deprecated and have been replaced with <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/off-peak.html">off-peak windows</a>.'
        UseOffPeakWindow:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Whether to schedule Auto-Tune optimizations that require blue/green deployments during the domain's configured daily off-peak window.
      description: 'Options for configuring Auto-Tune. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html">Auto-Tune for Amazon OpenSearch Service</a> '
    AutoTuneState:
      type: string
      enum:
        - ENABLED
        - DISABLED
        - ENABLE_IN_PROGRESS
        - DISABLE_IN_PROGRESS
        - DISABLED_AND_ROLLBACK_SCHEDULED
        - DISABLED_AND_ROLLBACK_IN_PROGRESS
        - DISABLED_AND_ROLLBACK_COMPLETE
        - DISABLED_AND_ROLLBACK_ERROR
        - ERROR
      description: 'The Auto-Tune state for the domain. For valid states see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html">Auto-Tune for Amazon OpenSearch Service</a>. '
    AutoTuneOptionsOutput:
      type: object
      properties:
        State:
          allOf:
            - $ref: '#/components/schemas/AutoTuneState'
            - description: The current state of Auto-Tune on the domain.
        ErrorMessage:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: Any errors that occurred while enabling or disabling Auto-Tune.
        UseOffPeakWindow:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Whether the domain's off-peak window will be used to deploy Auto-Tune changes rather than a maintenance schedule.
      description: 'The Auto-Tune settings for a domain, displayed when enabling or disabling Auto-Tune.'
    AutoTuneStatus:
      type: object
      required:
        - CreationDate
        - UpdateDate
        - State
      properties:
        CreationDate:
          allOf:
            - $ref: '#/components/schemas/UpdateTimestamp'
            - description: Date and time when Auto-Tune was enabled for the domain.
        UpdateDate:
          allOf:
            - $ref: '#/components/schemas/UpdateTimestamp'
            - description: Date and time when the Auto-Tune options were last updated for the domain.
        UpdateVersion:
          allOf:
            - $ref: '#/components/schemas/UIntValue'
            - description: The latest version of the Auto-Tune options.
        State:
          allOf:
            - $ref: '#/components/schemas/AutoTuneState'
            - description: The current state of Auto-Tune on the domain.
        ErrorMessage:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: Any errors that occurred while enabling or disabling Auto-Tune.
        PendingDeletion:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether the domain is being deleted.
      description: 'The current status of Auto-Tune for the domain. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html">Auto-Tune for Amazon OpenSearch Service</a>.'
    AutoTuneOptionsStatus:
      type: object
      properties:
        Options:
          allOf:
            - $ref: '#/components/schemas/AutoTuneOptions'
            - description: Auto-Tune settings for updating a domain.
        Status:
          allOf:
            - $ref: '#/components/schemas/AutoTuneStatus'
            - description: The current status of Auto-Tune for a domain.
      description: The Auto-Tune status for the domain.
    UpdateTimestamp:
      type: string
      format: date-time
    UIntValue:
      type: integer
      minimum: 0
    AvailabilityZone:
      type: string
      minLength: 1
      maxLength: 15
    ZoneStatus:
      type: string
      enum:
        - Active
        - StandBy
        - NotAvailable
    NumberOfNodes:
      type: string
      pattern: ^((\d+)|(NotAvailable))$
    NumberOfShards:
      type: string
      pattern: ^((\d+)|(NotAvailable))$
    AvailabilityZoneInfo:
      type: object
      properties:
        AvailabilityZoneName:
          allOf:
            - $ref: '#/components/schemas/AvailabilityZone'
            - description: The name of the Availability Zone.
        ZoneStatus:
          allOf:
            - $ref: '#/components/schemas/ZoneStatus'
            - description: <p>The current state of the Availability Zone. Current options are <code>Active</code> and <code>StandBy</code>.</p> <ul> <li> <p> <code>Active</code> - Data nodes in the Availability Zone are in use.</p> </li> <li> <p> <code>StandBy</code> - Data nodes in the Availability Zone are in a standby state.</p> </li> <li> <p> <code>NotAvailable</code> - Unable to retrieve information.</p> </li> </ul>
        ConfiguredDataNodeCount:
          allOf:
            - $ref: '#/components/schemas/NumberOfNodes'
            - description: The total number of data nodes configured in the Availability Zone.
        AvailableDataNodeCount:
          allOf:
            - $ref: '#/components/schemas/NumberOfNodes'
            - description: The number of data nodes active in the Availability Zone.
        TotalShards:
          allOf:
            - $ref: '#/components/schemas/NumberOfShards'
            - description: The total number of primary and replica shards in the Availability Zone.
        TotalUnAssignedShards:
          allOf:
            - $ref: '#/components/schemas/NumberOfShards'
            - description: The total number of primary and replica shards that aren't allocated to any of the nodes in the Availability Zone.
      description: Information about an Availability Zone on a domain.
    AvailabilityZoneInfoList:
      type: array
      items:
        $ref: '#/components/schemas/AvailabilityZoneInfo'
    AvailabilityZoneList:
      type: array
      items:
        $ref: '#/components/schemas/AvailabilityZone'
    BackendRole:
      type: string
      minLength: 1
      maxLength: 256
    CancelServiceSoftwareUpdateRequest:
      type: object
      required:
        - DomainName
      title: CancelServiceSoftwareUpdateRequest
      properties:
        DomainName:
          allOf:
            - $ref: '#/components/schemas/DomainName'
            - description: Name of the OpenSearch Service domain that you want to cancel the service software update on.
      description: Container for the request parameters to cancel a service software update.
    ServiceSoftwareOptions:
      type: object
      properties:
        CurrentVersion:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The current service software version present on the domain.
        NewVersion:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The new service software version, if one is available.'
        UpdateAvailable:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: True if you're able to update your service software version. False if you can't update your service software version.
        Cancellable:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: ' True if you''re able to cancel your service software version update. False if you can''t cancel your service software update.'
        UpdateStatus:
          allOf:
            - $ref: '#/components/schemas/DeploymentStatus'
            - description: The status of your service software update.
        Description:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A description of the service software update status.
        AutomatedUpdateDate:
          allOf:
            - $ref: '#/components/schemas/DeploymentCloseDateTimeStamp'
            - description: 'The timestamp, in Epoch time, until which you can manually request a service software update. After this date, we automatically update your service software.'
        OptionalDeployment:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: True if a service software is never automatically updated. False if a service software is automatically updated after the automated update date.
      description: 'The current status of the service software for an Amazon OpenSearch Service domain. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/service-software.html">Service software updates in Amazon OpenSearch Service</a>.'
    GUID:
      type: string
      pattern: '\p{XDigit}{8}-\p{XDigit}{4}-\p{XDigit}{4}-\p{XDigit}{4}-\p{XDigit}{12}'
      minLength: 36
      maxLength: 36
    Message:
      type: string
      minLength: 0
      maxLength: 1024
    ChangeProgressDetails:
      type: object
      properties:
        ChangeId:
          allOf:
            - $ref: '#/components/schemas/GUID'
            - description: The ID of the configuration change.
        Message:
          allOf:
            - $ref: '#/components/schemas/Message'
            - description: A message corresponding to the status of the configuration change.
      description: Container for information about a configuration change happening on a domain.
    ChangeProgressStageName:
      type: string
      minLength: 1
      maxLength: 64
    ChangeProgressStageStatus:
      type: string
      minLength: 1
      maxLength: 256
    Description:
      type: string
    LastUpdated:
      type: string
      format: date-time
    ChangeProgressStage:
      type: object
      properties:
        Name:
          allOf:
            - $ref: '#/components/schemas/ChangeProgressStageName'
            - description: The name of the stage.
        Status:
          allOf:
            - $ref: '#/components/schemas/ChangeProgressStageStatus'
            - description: The status of the stage.
        Description:
          allOf:
            - $ref: '#/components/schemas/Description'
            - description: The description of the stage.
        LastUpdated:
          allOf:
            - $ref: '#/components/schemas/LastUpdated'
            - description: The most recent updated timestamp of the stage.
      description: Progress details for each stage of a domain update.
    ChangeProgressStageList:
      type: array
      description: The list of progress stages of a specific domain configuration change.
      items:
        $ref: '#/components/schemas/ChangeProgressStage'
    OverallChangeStatus:
      type: string
      enum:
        - PENDING
        - PROCESSING
        - COMPLETED
        - FAILED
      description: The overall status value of the domain configuration change.
    TotalNumberOfStages:
      type: integer
    ChangeProgressStatusDetails:
      type: object
      properties:
        ChangeId:
          allOf:
            - $ref: '#/components/schemas/GUID'
            - description: The unique change identifier associated with a specific domain configuration change.
        StartTime:
          allOf:
            - $ref: '#/components/schemas/UpdateTimestamp'
            - description: The time at which the configuration change is made on the domain.
        Status:
          allOf:
            - $ref: '#/components/schemas/OverallChangeStatus'
            - description: The overall status of the domain configuration change.
        PendingProperties:
          allOf:
            - $ref: '#/components/schemas/StringList'
            - description: The list of properties in the domain configuration change that are still pending.
        CompletedProperties:
          allOf:
            - $ref: '#/components/schemas/StringList'
            - description: The list of properties in the domain configuration change that have completed.
        TotalNumberOfStages:
          allOf:
            - $ref: '#/components/schemas/TotalNumberOfStages'
            - description: The total number of stages required for the configuration change.
        ChangeProgressStages:
          allOf:
            - $ref: '#/components/schemas/ChangeProgressStageList'
            - description: The specific stages that the domain is going through to perform the configuration change.
      description: The progress details of a specific domain configuration change.
    ClientToken:
      type: string
      minLength: 1
      maxLength: 64
    CloudWatchLogsLogGroupArn:
      type: string
      pattern: .*
      description: ARN of the Cloudwatch log group to publish logs to.
      minLength: 20
      maxLength: 2048
    ClusterConfig:
      type: object
      properties:
        InstanceType:
          allOf:
            - $ref: '#/components/schemas/OpenSearchPartitionInstanceType'
            - description: Instance type of data nodes in the cluster.
        InstanceCount:
          allOf:
            - $ref: '#/components/schemas/IntegerClass'
            - description: 'Number of dedicated master nodes in the cluster. This number must be greater than 1, otherwise you receive a validation exception.'
        DedicatedMasterEnabled:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether dedicated master nodes are enabled for the cluster.<code>True</code> if the cluster will use a dedicated master node.<code>False</code> if the cluster will not.
        ZoneAwarenessEnabled:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Indicates whether multiple Availability Zones are enabled. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains-multiaz.html">Configuring a multi-AZ domain in Amazon OpenSearch Service</a>.'
        ZoneAwarenessConfig:
          allOf:
            - $ref: '#/components/schemas/ZoneAwarenessConfig'
            - description: Container for zone awareness configuration options. Only required if <code>ZoneAwarenessEnabled</code> is <code>true</code>.
        DedicatedMasterType:
          allOf:
            - $ref: '#/components/schemas/OpenSearchPartitionInstanceType'
            - description: OpenSearch Service instance type of the dedicated master nodes in the cluster.
        DedicatedMasterCount:
          allOf:
            - $ref: '#/components/schemas/IntegerClass'
            - description: 'Number of dedicated master nodes in the cluster. This number must be greater than 2 and not 4, otherwise you receive a validation exception.'
        WarmEnabled:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Whether to enable warm storage for the cluster.
        WarmType:
          allOf:
            - $ref: '#/components/schemas/OpenSearchWarmPartitionInstanceType'
            - description: The instance type for the cluster's warm nodes.
        WarmCount:
          allOf:
            - $ref: '#/components/schemas/IntegerClass'
            - description: The number of warm nodes in the cluster.
        ColdStorageOptions:
          allOf:
            - $ref: '#/components/schemas/ColdStorageOptions'
            - description: Container for cold storage configuration options.
        MultiAZWithStandbyEnabled:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'A boolean that indicates whether a multi-AZ domain is turned on with a standby AZ. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains-multiaz.html">Configuring a multi-AZ domain in Amazon OpenSearch Service</a>. '
      description: 'Container for the cluster configuration of an OpenSearch Service domain. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html">Creating and managing Amazon OpenSearch Service domains</a>.'
    ClusterConfigStatus:
      type: object
      required:
        - Options
        - Status
      properties:
        Options:
          allOf:
            - $ref: '#/components/schemas/ClusterConfig'
            - description: Cluster configuration options for the specified domain.
        Status:
          allOf:
            - $ref: '#/components/schemas/OptionStatus'
            - description: The status of cluster configuration options for the specified domain.
      description: The cluster configuration status for a domain.
    CognitoOptions:
      type: object
      properties:
        Enabled:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Whether to enable or disable Amazon Cognito authentication for OpenSearch Dashboards.
        UserPoolId:
          allOf:
            - $ref: '#/components/schemas/UserPoolId'
            - description: The Amazon Cognito user pool ID that you want OpenSearch Service to use for OpenSearch Dashboards authentication.
        IdentityPoolId:
          allOf:
            - $ref: '#/components/schemas/IdentityPoolId'
            - description: The Amazon Cognito identity pool ID that you want OpenSearch Service to use for OpenSearch Dashboards authentication.
        RoleArn:
          allOf:
            - $ref: '#/components/schemas/RoleArn'
            - description: The <code>AmazonOpenSearchServiceCognitoAccess</code> role that allows OpenSearch Service to configure your user pool and identity pool.
      description: 'Container for the parameters required to enable Cognito authentication for an OpenSearch Service domain. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/cognito-auth.html">Configuring Amazon Cognito authentication for OpenSearch Dashboards</a>.'
    CognitoOptionsStatus:
      type: object
      required:
        - Options
        - Status
      properties:
        Options:
          allOf:
            - $ref: '#/components/schemas/CognitoOptions'
            - description: Cognito options for the specified domain.
        Status:
          allOf:
            - $ref: '#/components/schemas/OptionStatus'
            - description: The status of the Cognito options for the specified domain.
      description: The status of the Cognito options for the specified domain.
    CommitMessage:
      type: string
      maxLength: 160
    CompatibleVersionsMap:
      type: object
      properties:
        SourceVersion:
          allOf:
            - $ref: '#/components/schemas/VersionString'
            - description: The current version that the OpenSearch Service domain is running.
        TargetVersions:
          allOf:
            - $ref: '#/components/schemas/VersionList'
            - description: The possible versions that you can upgrade the domain to.
      description: A map of OpenSearch or Elasticsearch versions and the versions you can upgrade them to.
    CompatibleVersionsList:
      type: array
      items:
        $ref: '#/components/schemas/CompatibleVersionsMap'
    VersionString:
      type: string
      pattern: '^Elasticsearch_[0-9]{1}\.[0-9]{1,2}$|^OpenSearch_[0-9]{1,2}\.[0-9]{1,2}$'
      minLength: 14
      maxLength: 18
    VersionList:
      type: array
      description: List of supported OpenSearch versions.
      items:
        $ref: '#/components/schemas/VersionString'
    ConnectionAlias:
      type: string
      pattern: '[a-zA-Z][a-zA-Z0-9\-\_]+'
      minLength: 2
      maxLength: 100
    ConnectionMode:
      type: string
      enum:
        - DIRECT
        - VPC_ENDPOINT
      description: <p>The connection mode for the cross-cluster connection.</p> <ul> <li> <p> <b>DIRECT</b> - Used for cross-cluster search or cross-cluster replication.</p> </li> <li> <p> <b>VPC_ENDPOINT</b> - Used for remote reindex between Amazon OpenSearch Service VPC domains.</p> </li> </ul>
    ConnectionProperties:
      type: object
      properties:
        Endpoint:
          allOf:
            - $ref: '#/components/schemas/Endpoint'
            - description: <important> <p>The Endpoint attribute cannot be modified. </p> </important> <p>The endpoint of the remote domain. Applicable for VPC_ENDPOINT connection mode.</p>
        CrossClusterSearch:
          allOf:
            - $ref: '#/components/schemas/CrossClusterSearchConnectionProperties'
            - description: The connection properties for cross cluster search.
      description: The connection properties of an outbound connection.
    ConnectionStatusMessage:
      type: string
    EBSOptions:
      type: object
      properties:
        EBSEnabled:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Indicates whether EBS volumes are attached to data nodes in an OpenSearch Service domain.
        VolumeType:
          allOf:
            - $ref: '#/components/schemas/VolumeType'
            - description: Specifies the type of EBS volumes attached to data nodes.
        VolumeSize:
          allOf:
            - $ref: '#/components/schemas/IntegerClass'
            - description: Specifies the size (in GiB) of EBS volumes attached to data nodes.
        Iops:
          allOf:
            - $ref: '#/components/schemas/IntegerClass'
            - description: Specifies the baseline input/output (I/O) performance of EBS volumes attached to data nodes. Applicable only for the <code>gp3</code> and provisioned IOPS EBS volume types.
        Throughput:
          allOf:
            - $ref: '#/components/schemas/IntegerClass'
            - description: Specifies the throughput (in MiB/s) of the EBS volumes attached to data nodes. Applicable only for the <code>gp3</code> volume type.
      description: Container for the parameters required to enable EBS-based storage for an OpenSearch Service domain.
    SnapshotOptions:
      type: object
      properties:
        AutomatedSnapshotStartHour:
          allOf:
            - $ref: '#/components/schemas/IntegerClass'
            - description: 'The time, in UTC format, when OpenSearch Service takes a daily automated snapshot of the specified domain. Default is <code>0</code> hours.'
      description: 'The time, in UTC format, when OpenSearch Service takes a daily automated snapshot of the specified domain. Default is <code>0</code> hours.'
    VPCOptions:
      type: object
      properties:
        SubnetIds:
          allOf:
            - $ref: '#/components/schemas/StringList'
            - description: 'A list of subnet IDs associated with the VPC endpoints for the domain. If your domain uses multiple Availability Zones, you need to provide two subnet IDs, one per zone. Otherwise, provide only one.'
        SecurityGroupIds:
          allOf:
            - $ref: '#/components/schemas/StringList'
            - description: 'The list of security group IDs associated with the VPC endpoints for the domain. If you do not provide a security group ID, OpenSearch Service uses the default security group for the VPC.'
      description: 'Options to specify the subnets and security groups for an Amazon OpenSearch Service VPC endpoint. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/vpc.html">Launching your Amazon OpenSearch Service domains using a VPC</a>.'
    EncryptionAtRestOptions:
      type: object
      properties:
        Enabled:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: True to enable encryption at rest.
        KmsKeyId:
          allOf:
            - $ref: '#/components/schemas/KmsKeyId'
            - description: The KMS key ID. Takes the form <code>1a2a3a4-1a2a-3a4a-5a6a-1a2a3a4a5a6a</code>.
      description: 'Specifies whether the domain should encrypt data at rest, and if so, the Key Management Service (KMS) key to use. Can be used only to create a new domain, not update an existing one.'
    NodeToNodeEncryptionOptions:
      type: object
      properties:
        Enabled:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: True to enable node-to-node encryption.
      description: 'Enables or disables node-to-node encryption. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/ntn.html">Node-to-node encryption for Amazon OpenSearch Service</a>.'
    LogPublishingOptions:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/LogPublishingOption'
    DomainEndpointOptions:
      type: object
      properties:
        EnforceHTTPS:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: True to require that all traffic to the domain arrive over HTTPS.
        TLSSecurityPolicy:
          allOf:
            - $ref: '#/components/schemas/TLSSecurityPolicy'
            - description: '<p>Specify the TLS security policy to apply to the HTTPS endpoint of the domain.</p> <p> Can be one of the following values:</p> <ul> <li> <p> <b>Policy-Min-TLS-1-0-2019-07:</b> TLS security policy which supports TLS version 1.0 and higher.</p> </li> <li> <p> <b>Policy-Min-TLS-1-2-2019-07:</b> TLS security policy which supports only TLS version 1.2 </p> </li> </ul>'
        CustomEndpointEnabled:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Whether to enable a custom endpoint for the domain.
        CustomEndpoint:
          allOf:
            - $ref: '#/components/schemas/DomainNameFqdn'
            - description: The fully qualified URL for the custom endpoint.
        CustomEndpointCertificateArn:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: 'The ARN for your security certificate, managed in Amazon Web Services Certificate Manager (ACM).'
      description: Options to configure a custom endpoint for an OpenSearch Service domain.
    OffPeakWindowOptions:
      type: object
      properties:
        Enabled:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: '<p>Whether to enable an off-peak window.</p> <p>This option is only available when modifying a domain created prior to February 16, 2023, not when creating a new domain. All domains created after this date have the off-peak window enabled by default. You can''t disable the off-peak window after it''s enabled for a domain.</p>'
        OffPeakWindow:
          allOf:
            - $ref: '#/components/schemas/OffPeakWindow'
            - description: Off-peak window settings for the domain.
      description: 'Options for a domain''s <a href="https://docs.aws.amazon.com/opensearch-service/latest/APIReference/API_OffPeakWindow.html">off-peak window</a>, during which OpenSearch Service can perform mandatory configuration changes on the domain.'
    SoftwareUpdateOptions:
      type: object
      properties:
        AutoSoftwareUpdateEnabled:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Whether automatic service software updates are enabled for the domain.
      description: Options for configuring service software updates for a domain.
    CreateDomainRequest:
      type: object
      required:
        - DomainName
      title: CreateDomainRequest
      properties:
        DomainName:
          allOf:
            - $ref: '#/components/schemas/DomainName'
            - description: Name of the OpenSearch Service domain to create. Domain names are unique across the domains owned by an account within an Amazon Web Services Region.
        EngineVersion:
          allOf:
            - $ref: '#/components/schemas/VersionString'
            - description: 'String of format Elasticsearch_X.Y or OpenSearch_X.Y to specify the engine version for the OpenSearch Service domain. For example, <code>OpenSearch_1.0</code> or <code>Elasticsearch_7.9</code>. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomains">Creating and managing Amazon OpenSearch Service domains</a>.'
        ClusterConfig:
          allOf:
            - $ref: '#/components/schemas/ClusterConfig'
            - description: Container for the cluster configuration of a domain.
        EBSOptions:
          allOf:
            - $ref: '#/components/schemas/EBSOptions'
            - description: Container for the parameters required to enable EBS-based storage for an OpenSearch Service domain.
        AccessPolicies:
          allOf:
            - $ref: '#/components/schemas/PolicyDocument'
            - description: Identity and Access Management (IAM) policy document specifying the access policies for the new domain.
        SnapshotOptions:
          allOf:
            - $ref: '#/components/schemas/SnapshotOptions'
            - description: DEPRECATED. Container for the parameters required to configure automated snapshots of domain indexes.
        VPCOptions:
          allOf:
            - $ref: '#/components/schemas/VPCOptions'
            - description: 'Container for the values required to configure VPC access domains. If you don''t specify these values, OpenSearch Service creates the domain with a public endpoint. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/vpc.html">Launching your Amazon OpenSearch Service domains using a VPC</a>.'
        CognitoOptions:
          allOf:
            - $ref: '#/components/schemas/CognitoOptions'
            - description: 'Key-value pairs to configure Amazon Cognito authentication. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/cognito-auth.html">Configuring Amazon Cognito authentication for OpenSearch Dashboards</a>.'
        EncryptionAtRestOptions:
          allOf:
            - $ref: '#/components/schemas/EncryptionAtRestOptions'
            - description: Key-value pairs to enable encryption at rest.
        NodeToNodeEncryptionOptions:
          allOf:
            - $ref: '#/components/schemas/NodeToNodeEncryptionOptions'
            - description: Enables node-to-node encryption.
        AdvancedOptions:
          allOf:
            - $ref: '#/components/schemas/AdvancedOptions'
            - description: '<p>Key-value pairs to specify advanced configuration options. The following key-value pairs are supported:</p> <ul> <li> <p> <code>"rest.action.multi.allow_explicit_index": "true" | "false"</code> - Note the use of a string rather than a boolean. Specifies whether explicit references to indexes are allowed inside the body of HTTP requests. If you want to configure access policies for domain sub-resources, such as specific indexes and domain APIs, you must disable this property. Default is true.</p> </li> <li> <p> <code>"indices.fielddata.cache.size": "80" </code> - Note the use of a string rather than a boolean. Specifies the percentage of heap space allocated to field data. Default is unbounded.</p> </li> <li> <p> <code>"indices.query.bool.max_clause_count": "1024"</code> - Note the use of a string rather than a boolean. Specifies the maximum number of clauses allowed in a Lucene boolean query. Default is 1,024. Queries with more than the permitted number of clauses result in a <code>TooManyClauses</code> error.</p> </li> <li> <p> <code>"override_main_response_version": "true" | "false"</code> - Note the use of a string rather than a boolean. Specifies whether the domain reports its version as 7.10 to allow Elasticsearch OSS clients and plugins to continue working with it. Default is false when creating a domain and true when upgrading a domain.</p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomain-configure-advanced-options">Advanced cluster parameters</a>.</p>'
        LogPublishingOptions:
          allOf:
            - $ref: '#/components/schemas/LogPublishingOptions'
            - description: Key-value pairs to configure log publishing.
        DomainEndpointOptions:
          allOf:
            - $ref: '#/components/schemas/DomainEndpointOptions'
            - description: 'Additional options for the domain endpoint, such as whether to require HTTPS for all traffic.'
        AdvancedSecurityOptions:
          allOf:
            - $ref: '#/components/schemas/AdvancedSecurityOptionsInput'
            - description: Options for fine-grained access control.
        TagList:
          allOf:
            - $ref: '#/components/schemas/TagList'
            - description: List of tags to add to the domain upon creation.
        AutoTuneOptions:
          allOf:
            - $ref: '#/components/schemas/AutoTuneOptionsInput'
            - description: Options for Auto-Tune.
        OffPeakWindowOptions:
          allOf:
            - $ref: '#/components/schemas/OffPeakWindowOptions'
            - description: 'Specifies a daily 10-hour time block during which OpenSearch Service can perform configuration changes on the domain, including service software updates and Auto-Tune enhancements that require a blue/green deployment. If no options are specified, the default start time of 10:00 P.M. local time (for the Region that the domain is created in) is used.'
        SoftwareUpdateOptions:
          allOf:
            - $ref: '#/components/schemas/SoftwareUpdateOptions'
            - description: Software update options for the domain.
    DomainStatus:
      type: object
      required:
        - DomainId
        - DomainName
        - ARN
        - ClusterConfig
      properties:
        DomainId:
          allOf:
            - $ref: '#/components/schemas/DomainId'
            - description: Unique identifier for the domain.
        DomainName:
          allOf:
            - $ref: '#/components/schemas/DomainName'
            - description: Name of the domain. Domain names are unique across all domains owned by the same account within an Amazon Web Services Region.
        ARN:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: 'The Amazon Resource Name (ARN) of the domain. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html">IAM identifiers </a> in the <i>AWS Identity and Access Management User Guide</i>.'
        Created:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Creation status of an OpenSearch Service domain. True if domain creation is complete. False if domain creation is still in progress.
        Deleted:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'Deletion status of an OpenSearch Service domain. True if domain deletion is complete. False if domain deletion is still in progress. Once deletion is complete, the status of the domain is no longer returned.'
        Endpoint:
          allOf:
            - $ref: '#/components/schemas/ServiceUrl'
            - description: 'Domain-specific endpoint used to submit index, search, and data upload requests to the domain.'
        Endpoints:
          allOf:
            - $ref: '#/components/schemas/EndpointsMap'
            - description: 'The key-value pair that exists if the OpenSearch Service domain uses VPC endpoints.. Example <code>key, value</code>: <code>''vpc'',''vpc-endpoint-h2dsd34efgyghrtguk5gt6j2foh4.us-east-1.es.amazonaws.com''</code>.'
        Processing:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: The status of the domain configuration. True if OpenSearch Service is processing configuration changes. False if the configuration is active.
        UpgradeProcessing:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: The status of a domain version upgrade to a new version of OpenSearch or Elasticsearch. True if OpenSearch Service is in the process of a version upgrade. False if the configuration is active.
        EngineVersion:
          allOf:
            - $ref: '#/components/schemas/VersionString'
            - description: 'Version of OpenSearch or Elasticsearch that the domain is running, in the format <code>Elasticsearch_X.Y</code> or <code>OpenSearch_X.Y</code>.'
        ClusterConfig:
          allOf:
            - $ref: '#/components/schemas/ClusterConfig'
            - description: Container for the cluster configuration of the domain.
        EBSOptions:
          allOf:
            - $ref: '#/components/schemas/EBSOptions'
            - description: Container for EBS-based storage settings for the domain.
        AccessPolicies:
          allOf:
            - $ref: '#/components/schemas/PolicyDocument'
            - description: Identity and Access Management (IAM) policy document specifying the access policies for the domain.
        SnapshotOptions:
          allOf:
            - $ref: '#/components/schemas/SnapshotOptions'
            - description: DEPRECATED. Container for parameters required to configure automated snapshots of domain indexes.
        VPCOptions:
          allOf:
            - $ref: '#/components/schemas/VPCDerivedInfo'
            - description: The VPC configuration for the domain.
        CognitoOptions:
          allOf:
            - $ref: '#/components/schemas/CognitoOptions'
            - description: Key-value pairs to configure Amazon Cognito authentication for OpenSearch Dashboards.
        EncryptionAtRestOptions:
          allOf:
            - $ref: '#/components/schemas/EncryptionAtRestOptions'
            - description: Encryption at rest settings for the domain.
        NodeToNodeEncryptionOptions:
          allOf:
            - $ref: '#/components/schemas/NodeToNodeEncryptionOptions'
            - description: Whether node-to-node encryption is enabled or disabled.
        AdvancedOptions:
          allOf:
            - $ref: '#/components/schemas/AdvancedOptions'
            - description: Key-value pairs that specify advanced configuration options.
        LogPublishingOptions:
          allOf:
            - $ref: '#/components/schemas/LogPublishingOptions'
            - description: Log publishing options for the domain.
        ServiceSoftwareOptions:
          allOf:
            - $ref: '#/components/schemas/ServiceSoftwareOptions'
            - description: The current status of the domain's service software.
        DomainEndpointOptions:
          allOf:
            - $ref: '#/components/schemas/DomainEndpointOptions'
            - description: 'Additional options for the domain endpoint, such as whether to require HTTPS for all traffic.'
        AdvancedSecurityOptions:
          allOf:
            - $ref: '#/components/schemas/AdvancedSecurityOptions'
            - description: Settings for fine-grained access control.
        AutoTuneOptions:
          allOf:
            - $ref: '#/components/schemas/AutoTuneOptionsOutput'
            - description: Auto-Tune settings for the domain.
        ChangeProgressDetails:
          allOf:
            - $ref: '#/components/schemas/ChangeProgressDetails'
            - description: Information about a configuration change happening on the domain.
        OffPeakWindowOptions:
          allOf:
            - $ref: '#/components/schemas/OffPeakWindowOptions'
            - description: Options that specify a custom 10-hour window during which OpenSearch Service can perform configuration changes on the domain.
        SoftwareUpdateOptions:
          allOf:
            - $ref: '#/components/schemas/SoftwareUpdateOptions'
            - description: Service software update options for the domain.
      description: The current status of an OpenSearch Service domain.
    DomainInformationContainer:
      type: object
      properties:
        AWSDomainInformation:
          allOf:
            - $ref: '#/components/schemas/AWSDomainInformation'
            - description: Information about an Amazon OpenSearch Service domain.
      description: Container for information about an OpenSearch Service domain.
    CreateOutboundConnectionRequest:
      type: object
      required:
        - LocalDomainInfo
        - RemoteDomainInfo
        - ConnectionAlias
      title: CreateOutboundConnectionRequest
      properties:
        LocalDomainInfo:
          allOf:
            - $ref: '#/components/schemas/DomainInformationContainer'
            - description: Name and Region of the source (local) domain.
        RemoteDomainInfo:
          allOf:
            - $ref: '#/components/schemas/DomainInformationContainer'
            - description: Name and Region of the destination (remote) domain.
        ConnectionAlias:
          allOf:
            - $ref: '#/components/schemas/ConnectionAlias'
            - description: Name of the connection.
        ConnectionMode:
          allOf:
            - $ref: '#/components/schemas/ConnectionMode'
            - description: The connection mode.
        ConnectionProperties:
          allOf:
            - $ref: '#/components/schemas/ConnectionProperties'
            - description: The <code>ConnectionProperties</code> for the outbound connection.
      description: Container for the parameters to the <code>CreateOutboundConnection</code> operation.
    OutboundConnectionStatus:
      type: object
      properties:
        StatusCode:
          allOf:
            - $ref: '#/components/schemas/OutboundConnectionStatusCode'
            - description: '<p>The status code for the outbound connection. Can be one of the following:</p> <ul> <li> <p> <b>VALIDATING</b> - The outbound connection request is being validated.</p> </li> <li> <p> <b>VALIDATION_FAILED</b> - Validation failed for the connection request.</p> </li> <li> <p> <b>PENDING_ACCEPTANCE</b>: Outbound connection request is validated and is not yet accepted by the remote domain owner.</p> </li> <li> <p> <b>APPROVED</b> - Outbound connection has been approved by the remote domain owner for getting provisioned.</p> </li> <li> <p> <b>PROVISIONING</b> - Outbound connection request is in process.</p> </li> <li> <p> <b>ACTIVE</b> - Outbound connection is active and ready to use.</p> </li> <li> <p> <b>REJECTING</b> - Outbound connection rejection by remote domain owner is in progress.</p> </li> <li> <p> <b>REJECTED</b> - Outbound connection request is rejected by remote domain owner.</p> </li> <li> <p> <b>DELETING</b> - Outbound connection deletion is in progress.</p> </li> <li> <p> <b>DELETED</b> - Outbound connection is deleted and can no longer be used.</p> </li> </ul>'
        Message:
          allOf:
            - $ref: '#/components/schemas/ConnectionStatusMessage'
            - description: Verbose information for the outbound connection.
      description: The status of an outbound cross-cluster connection.
    PackageName:
      type: string
      pattern: '[a-z][a-z0-9\-]+'
      minLength: 3
      maxLength: 28
    PackageType:
      type: string
      enum:
        - TXT-DICTIONARY
    PackageDescription:
      type: string
      maxLength: 1024
    PackageSource:
      type: object
      properties:
        S3BucketName:
          allOf:
            - $ref: '#/components/schemas/S3BucketName'
            - description: The name of the Amazon S3 bucket containing the package.
        S3Key:
          allOf:
            - $ref: '#/components/schemas/S3Key'
            - description: Key (file name) of the package.
      description: The Amazon S3 location to import the package from.
    CreatePackageRequest:
      type: object
      required:
        - PackageName
        - PackageType
        - PackageSource
      title: CreatePackageRequest
      properties:
        PackageName:
          allOf:
            - $ref: '#/components/schemas/PackageName'
            - description: Unique name for the package.
        PackageType:
          allOf:
            - $ref: '#/components/schemas/PackageType'
            - description: The type of package.
        PackageDescription:
          allOf:
            - $ref: '#/components/schemas/PackageDescription'
            - description: Description of the package.
        PackageSource:
          allOf:
            - $ref: '#/components/schemas/PackageSource'
            - description: The Amazon S3 location from which to import the package.
      description: Container for request parameters to the <code>CreatePackage</code> operation.
    PackageDetails:
      type: object
      properties:
        PackageID:
          allOf:
            - $ref: '#/components/schemas/PackageID'
            - description: The unique identifier of the package.
        PackageName:
          allOf:
            - $ref: '#/components/schemas/PackageName'
            - description: The user-specified name of the package.
        PackageType:
          allOf:
            - $ref: '#/components/schemas/PackageType'
            - description: The type of package.
        PackageDescription:
          allOf:
            - $ref: '#/components/schemas/PackageDescription'
            - description: User-specified description of the package.
        PackageStatus:
          allOf:
            - $ref: '#/components/schemas/PackageStatus'
            - description: 'The current status of the package. The available options are <code>AVAILABLE</code>, <code>COPYING</code>, <code>COPY_FAILED</code>, <code>VALIDATNG</code>, <code>VALIDATION_FAILED</code>, <code>DELETING</code>, and <code>DELETE_FAILED</code>.'
        CreatedAt:
          allOf:
            - $ref: '#/components/schemas/CreatedAt'
            - description: The timestamp when the package was created.
        LastUpdatedAt:
          allOf:
            - $ref: '#/components/schemas/LastUpdated'
            - description: Date and time when the package was last updated.
        AvailablePackageVersion:
          allOf:
            - $ref: '#/components/schemas/PackageVersion'
            - description: The package version.
        ErrorDetails:
          allOf:
            - $ref: '#/components/schemas/ErrorDetails'
            - description: Additional information if the package is in an error state. Null otherwise.
      description: Basic information about a package.
    DomainArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:[a-z]+:[a-z0-9\-]+:[0-9]+:domain\/[a-z0-9\-]+'
      minLength: 1
      maxLength: 512
    CreateVpcEndpointRequest:
      type: object
      required:
        - DomainArn
        - VpcOptions
      title: CreateVpcEndpointRequest
      properties:
        DomainArn:
          allOf:
            - $ref: '#/components/schemas/DomainArn'
            - description: The Amazon Resource Name (ARN) of the domain to create the endpoint for.
        VpcOptions:
          allOf:
            - $ref: '#/components/schemas/VPCOptions'
            - description: Options to specify the subnets and security groups for the endpoint.
        ClientToken:
          allOf:
            - $ref: '#/components/schemas/ClientToken'
            - description: 'Unique, case-sensitive identifier to ensure idempotency of the request.'
    VpcEndpoint:
      type: object
      properties:
        VpcEndpointId:
          allOf:
            - $ref: '#/components/schemas/VpcEndpointId'
            - description: The unique identifier of the endpoint.
        VpcEndpointOwner:
          allOf:
            - $ref: '#/components/schemas/AWSAccount'
            - description: The creator of the endpoint.
        DomainArn:
          allOf:
            - $ref: '#/components/schemas/DomainArn'
            - description: The Amazon Resource Name (ARN) of the domain associated with the endpoint.
        VpcOptions:
          allOf:
            - $ref: '#/components/schemas/VPCDerivedInfo'
            - description: Options to specify the subnets and security groups for an Amazon OpenSearch Service VPC endpoint.
        Status:
          allOf:
            - $ref: '#/components/schemas/VpcEndpointStatus'
            - description: The current status of the endpoint.
        Endpoint:
          allOf:
            - $ref: '#/components/schemas/Endpoint'
            - description: The connection endpoint ID for connecting to the domain.
      description: The connection endpoint for connecting to an Amazon OpenSearch Service domain through a proxy.
    CreatedAt:
      type: string
      format: date-time
    SkipUnavailableStatus:
      type: string
      enum:
        - ENABLED
        - DISABLED
      description: <p>Status of SkipUnavailable param for outbound connection.</p> <ul> <li> <p> <b>ENABLED</b> - The SkipUnavailable param is enabled for the connection.</p> </li> <li> <p> <b>DISABLED</b> - The SkipUnavailable param is disabled for the connection.</p> </li> </ul>
    DeleteDomainRequest:
      type: object
      title: DeleteDomainRequest
      properties: {}
      description: Container for the parameters to the <code>DeleteDomain</code> operation.
    DeleteInboundConnectionRequest:
      type: object
      title: DeleteInboundConnectionRequest
      properties: {}
      description: Container for the parameters to the <code>DeleteInboundConnection</code> operation.
    DeleteOutboundConnectionRequest:
      type: object
      title: DeleteOutboundConnectionRequest
      properties: {}
      description: Container for the parameters to the <code>DeleteOutboundConnection</code> operation.
    OutboundConnection:
      type: object
      properties:
        LocalDomainInfo:
          allOf:
            - $ref: '#/components/schemas/DomainInformationContainer'
            - description: Information about the source (local) domain.
        RemoteDomainInfo:
          allOf:
            - $ref: '#/components/schemas/DomainInformationContainer'
            - description: Information about the destination (remote) domain.
        ConnectionId:
          allOf:
            - $ref: '#/components/schemas/ConnectionId'
            - description: Unique identifier of the connection.
        ConnectionAlias:
          allOf:
            - $ref: '#/components/schemas/ConnectionAlias'
            - description: Name of the connection.
        ConnectionStatus:
          allOf:
            - $ref: '#/components/schemas/OutboundConnectionStatus'
            - description: Status of the connection.
        ConnectionMode:
          allOf:
            - $ref: '#/components/schemas/ConnectionMode'
            - description: The connection mode.
        ConnectionProperties:
          allOf:
            - $ref: '#/components/schemas/ConnectionProperties'
            - description: Properties for the outbound connection.
      description: Specifies details about an outbound cross-cluster connection.
    DeletePackageRequest:
      type: object
      title: DeletePackageRequest
      properties: {}
      description: Deletes a package from OpenSearch Service. The package can't be associated with any OpenSearch Service domain.
    DeleteVpcEndpointRequest:
      type: object
      title: DeleteVpcEndpointRequest
      properties: {}
    VpcEndpointSummary:
      type: object
      properties:
        VpcEndpointId:
          allOf:
            - $ref: '#/components/schemas/VpcEndpointId'
            - description: The unique identifier of the endpoint.
        VpcEndpointOwner:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The creator of the endpoint.
        DomainArn:
          allOf:
            - $ref: '#/components/schemas/DomainArn'
            - description: The Amazon Resource Name (ARN) of the domain associated with the endpoint.
        Status:
          allOf:
            - $ref: '#/components/schemas/VpcEndpointStatus'
            - description: The current status of the endpoint.
      description: Summary information for an Amazon OpenSearch Service-managed VPC endpoint.
    DeploymentCloseDateTimeStamp:
      type: string
      format: date-time
    DeploymentStatus:
      type: string
      enum:
        - PENDING_UPDATE
        - IN_PROGRESS
        - COMPLETED
        - NOT_ELIGIBLE
        - ELIGIBLE
    DeploymentType:
      type: string
      minLength: 2
      maxLength: 128
    MaxResults:
      type: integer
      description: An optional parameter that specifies the maximum number of results to return for a given request.
      maximum: 100
    NextToken:
      type: string
      description: 'When <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page.'
    DescribeDomainAutoTunesRequest:
      type: object
      title: DescribeDomainAutoTunesRequest
      properties:
        MaxResults:
          allOf:
            - $ref: '#/components/schemas/MaxResults'
            - description: An optional parameter that specifies the maximum number of results to return. You can use <code>nextToken</code> to get the next page of results.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: 'If your initial <code>DescribeDomainAutoTunes</code> operation returns a <code>nextToken</code>, you can include the returned <code>nextToken</code> in subsequent <code>DescribeDomainAutoTunes</code> operations, which returns results in the next page.'
      description: Container for the parameters to the <code>DescribeDomainAutoTunes</code> operation.
    DescribeDomainChangeProgressRequest:
      type: object
      title: DescribeDomainChangeProgressRequest
      properties: {}
      description: Container for the parameters to the <code>DescribeDomainChangeProgress</code> operation.
    DescribeDomainConfigRequest:
      type: object
      title: DescribeDomainConfigRequest
      properties: {}
      description: Container for the parameters to the <code>DescribeDomainConfig</code> operation.
    DomainConfig:
      type: object
      properties:
        EngineVersion:
          allOf:
            - $ref: '#/components/schemas/VersionStatus'
            - description: The OpenSearch or Elasticsearch version that the domain is running.
        ClusterConfig:
          allOf:
            - $ref: '#/components/schemas/ClusterConfigStatus'
            - description: Container for the cluster configuration of a the domain.
        EBSOptions:
          allOf:
            - $ref: '#/components/schemas/EBSOptionsStatus'
            - description: Container for EBS options configured for the domain.
        AccessPolicies:
          allOf:
            - $ref: '#/components/schemas/AccessPoliciesStatus'
            - description: Specifies the access policies for the domain.
        SnapshotOptions:
          allOf:
            - $ref: '#/components/schemas/SnapshotOptionsStatus'
            - description: DEPRECATED. Container for parameters required to configure automated snapshots of domain indexes.
        VPCOptions:
          allOf:
            - $ref: '#/components/schemas/VPCDerivedInfoStatus'
            - description: The current VPC options for the domain and the status of any updates to their configuration.
        CognitoOptions:
          allOf:
            - $ref: '#/components/schemas/CognitoOptionsStatus'
            - description: Container for Amazon Cognito options for the domain.
        EncryptionAtRestOptions:
          allOf:
            - $ref: '#/components/schemas/EncryptionAtRestOptionsStatus'
            - description: Key-value pairs to enable encryption at rest.
        NodeToNodeEncryptionOptions:
          allOf:
            - $ref: '#/components/schemas/NodeToNodeEncryptionOptionsStatus'
            - description: Whether node-to-node encryption is enabled or disabled.
        AdvancedOptions:
          allOf:
            - $ref: '#/components/schemas/AdvancedOptionsStatus'
            - description: 'Key-value pairs to specify advanced configuration options. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomain-configure-advanced-options">Advanced options</a>.'
        LogPublishingOptions:
          allOf:
            - $ref: '#/components/schemas/LogPublishingOptionsStatus'
            - description: Key-value pairs to configure log publishing.
        DomainEndpointOptions:
          allOf:
            - $ref: '#/components/schemas/DomainEndpointOptionsStatus'
            - description: 'Additional options for the domain endpoint, such as whether to require HTTPS for all traffic.'
        AdvancedSecurityOptions:
          allOf:
            - $ref: '#/components/schemas/AdvancedSecurityOptionsStatus'
            - description: Container for fine-grained access control settings for the domain.
        AutoTuneOptions:
          allOf:
            - $ref: '#/components/schemas/AutoTuneOptionsStatus'
            - description: Container for Auto-Tune settings for the domain.
        ChangeProgressDetails:
          allOf:
            - $ref: '#/components/schemas/ChangeProgressDetails'
            - description: Container for information about the progress of an existing configuration change.
        OffPeakWindowOptions:
          allOf:
            - $ref: '#/components/schemas/OffPeakWindowOptionsStatus'
            - description: Container for off-peak window options for the domain.
        SoftwareUpdateOptions:
          allOf:
            - $ref: '#/components/schemas/SoftwareUpdateOptionsStatus'
            - description: Software update options for the domain.
      description: Container for the configuration of an OpenSearch Service domain.
    DescribeDomainHealthRequest:
      type: object
      title: DescribeDomainHealthRequest
      properties: {}
      description: Container for the parameters to the <code>DescribeDomainHealth</code> operation.
    DomainState:
      type: string
      enum:
        - Active
        - Processing
        - NotAvailable
    NumberOfAZs:
      type: string
      pattern: ^((\d+)|(NotAvailable))$
    MasterNodeStatus:
      type: string
      enum:
        - Available
        - UnAvailable
    DomainHealth:
      type: string
      enum:
        - Red
        - Yellow
        - Green
        - NotAvailable
    EnvironmentInfoList:
      type: array
      items:
        $ref: '#/components/schemas/EnvironmentInfo'
    DescribeDomainNodesRequest:
      type: object
      title: DescribeDomainNodesRequest
      properties: {}
      description: Container for the parameters to the <code>DescribeDomainNodes</code> operation.
    DomainNodesStatusList:
      type: array
      description: List of <code>DomainNodesStatus</code> with details about nodes on the requested domain.
      items:
        $ref: '#/components/schemas/DomainNodesStatus'
    DescribeDomainRequest:
      type: object
      title: DescribeDomainRequest
      properties: {}
      description: Container for the parameters to the <code>DescribeDomain</code> operation.
    DomainNameList:
      type: array
      description: A list of OpenSearch Service domain names.
      items:
        $ref: '#/components/schemas/DomainName'
    DescribeDomainsRequest:
      type: object
      required:
        - DomainNames
      title: DescribeDomainsRequest
      properties:
        DomainNames:
          allOf:
            - $ref: '#/components/schemas/DomainNameList'
            - description: 'Array of OpenSearch Service domain names that you want information about. If you don''t specify any domains, OpenSearch Service returns information about all domains owned by the account.'
      description: Container for the parameters to the <code>DescribeDomains</code> operation.
    DomainStatusList:
      type: array
      description: List that contains the status of each specified OpenSearch Service domain.
      items:
        $ref: '#/components/schemas/DomainStatus'
    DescribeDryRunProgressRequest:
      type: object
      title: DescribeDryRunProgressRequest
      properties: {}
    DryRunProgressStatus:
      type: object
      required:
        - DryRunId
        - DryRunStatus
        - CreationDate
        - UpdateDate
      properties:
        DryRunId:
          allOf:
            - $ref: '#/components/schemas/GUID'
            - description: The unique identifier of the dry run.
        DryRunStatus:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The current status of the dry run.
        CreationDate:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The timestamp when the dry run was initiated.
        UpdateDate:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The timestamp when the dry run was last updated.
        ValidationFailures:
          allOf:
            - $ref: '#/components/schemas/ValidationFailures'
            - description: Any validation failures that occurred as a result of the dry run.
      description: Information about the progress of a pre-upgrade dry run analysis.
    DryRunResults:
      type: object
      properties:
        DeploymentType:
          allOf:
            - $ref: '#/components/schemas/DeploymentType'
            - description: '<p> Specifies the way in which OpenSearch Service will apply an update. Possible values are:</p> <ul> <li> <p> <b>Blue/Green</b> - The update requires a blue/green deployment.</p> </li> <li> <p> <b>DynamicUpdate</b> - No blue/green deployment required</p> </li> <li> <p> <b>Undetermined</b> - The domain is in the middle of an update and can''t predict the deployment type. Try again after the update is complete.</p> </li> <li> <p> <b>None</b> - The request doesn''t include any configuration changes.</p> </li> </ul>'
        Message:
          allOf:
            - $ref: '#/components/schemas/Message'
            - description: A message corresponding to the deployment type.
      description: Results of a dry run performed in an update domain request.
    FilterList:
      type: array
      items:
        $ref: '#/components/schemas/Filter'
    DescribeInboundConnectionsRequest:
      type: object
      title: DescribeInboundConnectionsRequest
      properties:
        Filters:
          allOf:
            - $ref: '#/components/schemas/FilterList'
            - description: ' A list of filters used to match properties for inbound cross-cluster connections.'
        MaxResults:
          allOf:
            - $ref: '#/components/schemas/MaxResults'
            - description: An optional parameter that specifies the maximum number of results to return. You can use <code>nextToken</code> to get the next page of results.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: 'If your initial <code>DescribeInboundConnections</code> operation returns a <code>nextToken</code>, you can include the returned <code>nextToken</code> in subsequent <code>DescribeInboundConnections</code> operations, which returns results in the next page.'
      description: Container for the parameters to the <code>DescribeInboundConnections</code> operation.
    InboundConnections:
      type: array
      items:
        $ref: '#/components/schemas/InboundConnection'
    DescribeInstanceTypeLimitsRequest:
      type: object
      title: DescribeInstanceTypeLimitsRequest
      properties: {}
      description: Container for the parameters to the <code>DescribeInstanceTypeLimits</code> operation.
    LimitsByRole:
      type: object
      description: '<p> The role of a given instance and all applicable limits. The role performed by a given OpenSearch instance can be one of the following: </p> <ul> <li> <p> <b>data</b> - A data node.</p> </li> <li> <p> <b>master</b> - A dedicated master node.</p> </li> <li> <p> <b>ultra_warm</b> - An UltraWarm node.</p> </li> </ul>'
      additionalProperties:
        $ref: '#/components/schemas/Limits'
    DescribeOutboundConnectionsRequest:
      type: object
      title: DescribeOutboundConnectionsRequest
      properties:
        Filters:
          allOf:
            - $ref: '#/components/schemas/FilterList'
            - description: List of filter names and values that you can use for requests.
        MaxResults:
          allOf:
            - $ref: '#/components/schemas/MaxResults'
            - description: An optional parameter that specifies the maximum number of results to return. You can use <code>nextToken</code> to get the next page of results.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: 'If your initial <code>DescribeOutboundConnections</code> operation returns a <code>nextToken</code>, you can include the returned <code>nextToken</code> in subsequent <code>DescribeOutboundConnections</code> operations, which returns results in the next page.'
      description: Container for the parameters to the <code>DescribeOutboundConnections</code> operation.
    OutboundConnections:
      type: array
      items:
        $ref: '#/components/schemas/OutboundConnection'
    DescribePackagesFilterName:
      type: string
      enum:
        - PackageID
        - PackageName
        - PackageStatus
    DescribePackagesFilterValues:
      type: array
      items:
        $ref: '#/components/schemas/DescribePackagesFilterValue'
    DescribePackagesFilterList:
      type: array
      description: A list of <code>DescribePackagesFilter</code> to filter the packages included in a <code>DescribePackages</code> response.
      items:
        $ref: '#/components/schemas/DescribePackagesFilter'
    DescribePackagesFilterValue:
      type: string
      pattern: '^[0-9a-zA-Z\*\.\\/\?-]*$'
    DescribePackagesRequest:
      type: object
      title: DescribePackagesRequest
      properties:
        Filters:
          allOf:
            - $ref: '#/components/schemas/DescribePackagesFilterList'
            - description: Only returns packages that match the <code>DescribePackagesFilterList</code> values.
        MaxResults:
          allOf:
            - $ref: '#/components/schemas/MaxResults'
            - description: An optional parameter that specifies the maximum number of results to return. You can use <code>nextToken</code> to get the next page of results.
        NextToken:
          allOf:
            - $ref: '#/components/schemas/NextToken'
            - description: 'If your initial <code>DescribePackageFilters</code> operation returns a <code>nextToken</code>, you can include the returned <code>nextToken</code> in subsequent <code>DescribePackageFilters</code> operations, which returns results in the next page.'
      description: Container for the request parameters to the <code>DescribePackage</code> operation.
    PackageDetailsList:
      type: array
      items:
        $ref: '#/components/schemas/PackageDetails'
    DescribeReservedInstanceOfferingsRequest:
      type: object
      title: DescribeReservedInstanceOfferingsRequest
      properties: {}
      description: Container for the request parameters to a <code>DescribeReservedInstanceOfferings</code> operation.
    ReservedInstanceOfferingList:
      type: array
      items:
        $ref: '#/components/schemas/ReservedInstanceOffering'
    DescribeReservedInstancesRequest:
      type: object
      title: DescribeReservedInstancesRequest
      properties: {}
      description: Container for the request parameters to the <code>DescribeReservedInstances</code> operation.
    ReservedInstanceList:
      type: array
      items:
        $ref: '#/components/schemas/ReservedInstance'
    VpcEndpointIdList:
      type: array
      items:
        $ref: '#/components/schemas/VpcEndpointId'
    DescribeVpcEndpointsRequest:
      type: object
      required:
        - VpcEndpointIds
      title: DescribeVpcEndpointsRequest
      properties:
        VpcEndpointIds:
          allOf:
            - $ref: '#/components/schemas/VpcEndpointIdList'
            - description: The unique identifiers of the endpoints to get information about.
    VpcEndpoints:
      type: array
      items:
        $ref: '#/components/schemas/VpcEndpoint'
    VpcEndpointErrorList:
      type: array
      items:
        $ref: '#/components/schemas/VpcEndpointError'
    DissociatePackageRequest:
      type: object
      title: DissociatePackageRequest
      properties: {}
      description: Container for the request parameters to the <code>DissociatePackage</code> operation.
    VersionStatus:
      type: object
      required:
        - Options
        - Status
      properties:
        Options:
          allOf:
            - $ref: '#/components/schemas/VersionString'
            - description: The OpenSearch or Elasticsearch version for the specified domain.
        Status:
          allOf:
            - $ref: '#/components/schemas/OptionStatus'
            - description: The status of the version options for the specified domain.
      description: The status of the the OpenSearch or Elasticsearch version options for the specified Amazon OpenSearch Service domain.
    EBSOptionsStatus:
      type: object
      required:
        - Options
        - Status
      properties:
        Options:
          allOf:
            - $ref: '#/components/schemas/EBSOptions'
            - description: The configured EBS options for the specified domain.
        Status:
          allOf:
            - $ref: '#/components/schemas/OptionStatus'
            - description: The status of the EBS options for the specified domain.
      description: The status of the EBS options for the specified OpenSearch Service domain.
    SnapshotOptionsStatus:
      type: object
      required:
        - Options
        - Status
      properties:
        Options:
          allOf:
            - $ref: '#/components/schemas/SnapshotOptions'
            - description: The daily snapshot options specified for the domain.
        Status:
          allOf:
            - $ref: '#/components/schemas/OptionStatus'
            - description: The status of a daily automated snapshot.
      description: Container for information about a daily automated snapshot for an OpenSearch Service domain.
    VPCDerivedInfoStatus:
      type: object
      required:
        - Options
        - Status
      properties:
        Options:
          allOf:
            - $ref: '#/components/schemas/VPCDerivedInfo'
            - description: The VPC options for the specified domain.
        Status:
          allOf:
            - $ref: '#/components/schemas/OptionStatus'
            - description: The status of the VPC options for the specified domain.
      description: Status of the VPC options for a specified domain.
    EncryptionAtRestOptionsStatus:
      type: object
      required:
        - Options
        - Status
      properties:
        Options:
          allOf:
            - $ref: '#/components/schemas/EncryptionAtRestOptions'
            - description: Encryption at rest options for the specified domain.
        Status:
          allOf:
            - $ref: '#/components/schemas/OptionStatus'
            - description: The status of the encryption at rest options for the specified domain.
      description: Status of the encryption at rest options for the specified OpenSearch Service domain.
    NodeToNodeEncryptionOptionsStatus:
      type: object
      required:
        - Options
        - Status
      properties:
        Options:
          allOf:
            - $ref: '#/components/schemas/NodeToNodeEncryptionOptions'
            - description: The node-to-node encryption options for the specified domain.
        Status:
          allOf:
            - $ref: '#/components/schemas/OptionStatus'
            - description: The status of the node-to-node encryption options for the specified domain.
      description: Status of the node-to-node encryption options for the specified domain.
    LogPublishingOptionsStatus:
      type: object
      properties:
        Options:
          allOf:
            - $ref: '#/components/schemas/LogPublishingOptions'
            - description: The log publishing options configured for the domain.
        Status:
          allOf:
            - $ref: '#/components/schemas/OptionStatus'
            - description: The status of the log publishing options for the domain.
      description: The configured log publishing options for the domain and their current status.
    DomainEndpointOptionsStatus:
      type: object
      required:
        - Options
        - Status
      properties:
        Options:
          allOf:
            - $ref: '#/components/schemas/DomainEndpointOptions'
            - description: Options to configure the endpoint for a domain.
        Status:
          allOf:
            - $ref: '#/components/schemas/OptionStatus'
            - description: The status of the endpoint options for a domain.
      description: The configured endpoint options for a domain and their current status.
    OffPeakWindowOptionsStatus:
      type: object
      properties:
        Options:
          allOf:
            - $ref: '#/components/schemas/OffPeakWindowOptions'
            - description: The domain's off-peak window configuration.
        Status:
          allOf:
            - $ref: '#/components/schemas/OptionStatus'
            - description: The current status of off-peak window options.
      description: 'The status of <a href="https://docs.aws.amazon.com/opensearch-service/latest/APIReference/API_OffPeakWindow.html">off-peak window</a> options for a domain.'
    SoftwareUpdateOptionsStatus:
      type: object
      properties:
        Options:
          allOf:
            - $ref: '#/components/schemas/SoftwareUpdateOptions'
            - description: The service software update options for a domain.
        Status:
          allOf:
            - $ref: '#/components/schemas/OptionStatus'
            - description: 'The status of service software update options, including creation date and last updated date.'
      description: The status of the service software options for a domain.
    DomainId:
      type: string
      description: Unique identifier for an OpenSearch Service domain.
      minLength: 1
      maxLength: 64
    EngineType:
      type: string
      enum:
        - OpenSearch
        - Elasticsearch
    DomainInfo:
      type: object
      properties:
        DomainName:
          allOf:
            - $ref: '#/components/schemas/DomainName'
            - description: Name of the domain.
        EngineType:
          allOf:
            - $ref: '#/components/schemas/EngineType'
            - description: 'The type of search engine that the domain is running.<code>OpenSearch</code> for an OpenSearch engine, or <code>Elasticsearch</code> for a legacy Elasticsearch OSS engine.'
      description: Information about an OpenSearch Service domain.
    DomainInfoList:
      type: array
      description: Contains a list of information about a domain.
      items:
        $ref: '#/components/schemas/DomainInfo'
    NodeId:
      type: string
      minLength: 10
      maxLength: 40
    NodeType:
      type: string
      enum:
        - Data
        - Ultrawarm
        - Master
    NodeStatus:
      type: string
      enum:
        - Active
        - StandBy
        - NotAvailable
    StorageTypeName:
      type: string
      description: '<p>The type of storage that the domain uses. Can be one of the following:</p> <dl> <dt>instance</dt> <dd> <p>Built-in storage available for the instance.</p> </dd> <dt>ebs</dt> <dd> <p>Elastic Block Storage (EBS) attached to the instance.</p> </dd> </dl>'
    VolumeSize:
      type: string
    DomainNodesStatus:
      type: object
      properties:
        NodeId:
          allOf:
            - $ref: '#/components/schemas/NodeId'
            - description: The ID of the node.
        NodeType:
          allOf:
            - $ref: '#/components/schemas/NodeType'
            - description: 'Indicates whether the nodes is a data, master, or ultrawarm node.'
        AvailabilityZone:
          allOf:
            - $ref: '#/components/schemas/AvailabilityZone'
            - description: The Availability Zone of the node.
        InstanceType:
          allOf:
            - $ref: '#/components/schemas/OpenSearchPartitionInstanceType'
            - description: The instance type information of the node.
        NodeStatus:
          allOf:
            - $ref: '#/components/schemas/NodeStatus'
            - description: Indicates if the node is active or in standby.
        StorageType:
          allOf:
            - $ref: '#/components/schemas/StorageTypeName'
            - description: 'Indicates if the node has EBS or instance storage. '
        StorageVolumeType:
          allOf:
            - $ref: '#/components/schemas/VolumeType'
            - description: 'If the nodes has EBS storage, indicates if the volume type is GP2 or GP3. Only applicable for data nodes. '
        StorageSize:
          allOf:
            - $ref: '#/components/schemas/VolumeSize'
            - description: 'The storage size of the node, in GiB.'
      description: Container for information about nodes on the domain.
    DomainPackageStatus:
      type: string
      enum:
        - ASSOCIATING
        - ASSOCIATION_FAILED
        - ACTIVE
        - DISSOCIATING
        - DISSOCIATION_FAILED
    PackageVersion:
      type: string
    ReferencePath:
      type: string
    ErrorDetails:
      type: object
      properties:
        ErrorType:
          allOf:
            - $ref: '#/components/schemas/ErrorType'
            - description: The type of error that occurred.
        ErrorMessage:
          allOf:
            - $ref: '#/components/schemas/ErrorMessage'
            - description: A message describing the error.
      description: Additional information if the package is in an error state. Null otherwise.
    DomainPackageDetailsList:
      type: array
      items:
        $ref: '#/components/schemas/DomainPackageDetails'
    ServiceUrl:
      type: string
      description: 'The domain endpoint to which index and search requests are submitted. For example, <code>search-imdb-movies-oopcnjfn6ugo.eu-west-1.es.amazonaws.com</code> or <code>doc-imdb-movies-oopcnjfn6u.eu-west-1.es.amazonaws.com</code>.'
    EndpointsMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ServiceUrl'
    VPCDerivedInfo:
      type: object
      properties:
        VPCId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The ID for your VPC. Amazon VPC generates this value when you create a VPC.
        SubnetIds:
          allOf:
            - $ref: '#/components/schemas/StringList'
            - description: A list of subnet IDs associated with the VPC endpoints for the domain.
        AvailabilityZones:
          allOf:
            - $ref: '#/components/schemas/StringList'
            - description: The list of Availability Zones associated with the VPC subnets.
        SecurityGroupIds:
          allOf:
            - $ref: '#/components/schemas/StringList'
            - description: The list of security group IDs associated with the VPC endpoints for the domain.
      description: 'Information about the subnets and security groups for an Amazon OpenSearch Service domain provisioned within a virtual private cloud (VPC). For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/vpc.html">Launching your Amazon OpenSearch Service domains using a VPC</a>. This information only exists if the domain was created with <code>VPCOptions</code>.'
    Double:
      type: number
      format: double
    DryRun:
      type: boolean
    DryRunMode:
      type: string
      enum:
        - Basic
        - Verbose
    ValidationFailures:
      type: array
      items:
        $ref: '#/components/schemas/ValidationFailure'
    DurationValue:
      type: integer
      description: Integer that specifies the value of a maintenance schedule duration.
      minimum: 1
      maximum: 24
    TimeUnit:
      type: string
      enum:
        - HOURS
      description: The unit of a maintenance schedule duration. Valid value is <code>HOUR</code>.
    EnvironmentInfo:
      type: object
      properties:
        AvailabilityZoneInformation:
          allOf:
            - $ref: '#/components/schemas/AvailabilityZoneInfoList'
            - description: ' A list of <code>AvailabilityZoneInfo</code> for the domain.'
      description: Information about the active domain environment.
    ErrorType:
      type: string
    ErrorMessage:
      type: string
    NonEmptyString:
      type: string
      pattern: '[a-zA-Z0-9\-\_\.]+'
      minLength: 1
      maxLength: 100
    ValueStringList:
      type: array
      items:
        $ref: '#/components/schemas/NonEmptyString'
      minItems: 1
    GetCompatibleVersionsRequest:
      type: object
      title: GetCompatibleVersionsRequest
      properties: {}
      description: Container for the request parameters to <code>GetCompatibleVersions</code> operation.
    GetPackageVersionHistoryRequest:
      type: object
      title: GetPackageVersionHistoryRequest
      properties: {}
      description: Container for the request parameters to the <code>GetPackageVersionHistory</code> operation.
    PackageVersionHistoryList:
      type: array
      items:
        $ref: '#/components/schemas/PackageVersionHistory'
    GetUpgradeHistoryRequest:
      type: object
      title: GetUpgradeHistoryRequest
      properties: {}
      description: Container for the request parameters to the <code>GetUpgradeHistory</code> operation.
    UpgradeHistoryList:
      type: array
      items:
        $ref: '#/components/schemas/UpgradeHistory'
    GetUpgradeStatusRequest:
      type: object
      title: GetUpgradeStatusRequest
      properties: {}
      description: Container for the request parameters to the <code>GetUpgradeStatus</code> operation.
    UpgradeStep:
      type: string
      enum:
        - PRE_UPGRADE_CHECK
        - SNAPSHOT
        - UPGRADE
    UpgradeStatus:
      type: string
      enum:
        - IN_PROGRESS
        - SUCCEEDED
        - SUCCEEDED_WITH_ISSUES
        - FAILED
    UpgradeName:
      type: string
    InboundConnectionStatus:
      type: object
      properties:
        StatusCode:
          allOf:
            - $ref: '#/components/schemas/InboundConnectionStatusCode'
            - description: '<p>The status code for the connection. Can be one of the following:</p> <ul> <li> <p> <b>PENDING_ACCEPTANCE</b> - Inbound connection is not yet accepted by the remote domain owner.</p> </li> <li> <p> <b>APPROVED</b>: Inbound connection is pending acceptance by the remote domain owner.</p> </li> <li> <p> <b>PROVISIONING</b>: Inbound connection is being provisioned.</p> </li> <li> <p> <b>ACTIVE</b>: Inbound connection is active and ready to use.</p> </li> <li> <p> <b>REJECTING</b>: Inbound connection rejection is in process.</p> </li> <li> <p> <b>REJECTED</b>: Inbound connection is rejected.</p> </li> <li> <p> <b>DELETING</b>: Inbound connection deletion is in progress.</p> </li> <li> <p> <b>DELETED</b>: Inbound connection is deleted and can no longer be used.</p> </li> </ul>'
        Message:
          allOf:
            - $ref: '#/components/schemas/ConnectionStatusMessage'
            - description: Information about the connection.
      description: The status of an inbound cross-cluster connection for OpenSearch Service.
    InboundConnectionStatusCode:
      type: string
      enum:
        - PENDING_ACCEPTANCE
        - APPROVED
        - PROVISIONING
        - ACTIVE
        - REJECTING
        - REJECTED
        - DELETING
        - DELETED
    InstanceCount:
      type: integer
      description: Number of instances in an OpenSearch Service cluster.
      minimum: 1
    MinimumInstanceCount:
      type: integer
      description: ' Minimum number of instances that can be instantiated for a given instance type.'
    MaximumInstanceCount:
      type: integer
      description: Maximum number of instances that can be instantiated for a given instance type.
    InstanceCountLimits:
      type: object
      properties:
        MinimumInstanceCount:
          allOf:
            - $ref: '#/components/schemas/MinimumInstanceCount'
            - description: The maximum allowed number of instances.
        MaximumInstanceCount:
          allOf:
            - $ref: '#/components/schemas/MaximumInstanceCount'
            - description: The minimum allowed number of instances.
      description: Limits on the number of instances that can be created in OpenSearch Service for a given instance type.
    InstanceLimits:
      type: object
      properties:
        InstanceCountLimits:
          allOf:
            - $ref: '#/components/schemas/InstanceCountLimits'
            - description: Limits on the number of instances that can be created for a given instance type.
      description: Instance-related attributes that are available for a given instance type.
    InstanceRole:
      type: string
    InstanceRoleList:
      type: array
      items:
        $ref: '#/components/schemas/InstanceRole'
    InstanceTypeDetails:
      type: object
      properties:
        InstanceType:
          allOf:
            - $ref: '#/components/schemas/OpenSearchPartitionInstanceType'
            - description: The instance type.
        EncryptionEnabled:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Whether encryption at rest and node-to-node encryption are supported for the instance type.
        CognitoEnabled:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Whether Amazon Cognito access is supported for the instance type.
        AppLogsEnabled:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Whether logging is supported for the instance type.
        AdvancedSecurityEnabled:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Whether fine-grained access control is supported for the instance type.
        WarmEnabled:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Whether UltraWarm is supported for the instance type.
        InstanceRole:
          allOf:
            - $ref: '#/components/schemas/InstanceRoleList'
            - description: 'Whether the instance acts as a data node, a dedicated master node, or an UltraWarm node.'
        AvailabilityZones:
          allOf:
            - $ref: '#/components/schemas/AvailabilityZoneList'
            - description: The supported Availability Zones for the instance type.
      description: Lists all instance types and available features for a given OpenSearch or Elasticsearch version.
    InstanceTypeDetailsList:
      type: array
      items:
        $ref: '#/components/schemas/InstanceTypeDetails'
    InstanceTypeString:
      type: string
      pattern: ^.*\..*\.search$
      minLength: 10
      maxLength: 40
    Integer:
      type: integer
    Issue:
      type: string
    Issues:
      type: array
      items:
        $ref: '#/components/schemas/Issue'
    LimitValue:
      type: string
    StorageTypeList:
      type: array
      items:
        $ref: '#/components/schemas/StorageType'
    Limits:
      type: object
      properties:
        StorageTypes:
          allOf:
            - $ref: '#/components/schemas/StorageTypeList'
            - description: Storage-related attributes that are available for a given instance type.
        InstanceLimits:
          allOf:
            - $ref: '#/components/schemas/InstanceLimits'
            - description: The limits for a given instance type.
        AdditionalLimits:
          allOf:
            - $ref: '#/components/schemas/AdditionalLimitList'
            - description: List of additional limits that are specific to a given instance type for each of its instance roles.
      description: Limits for a given instance type and for each of its roles.
    ListDomainNamesRequest:
      type: object
      title: ListDomainNamesRequest
      properties: {}
      description: Container for the parameters to the <code>ListDomainNames</code> operation.
    ListDomainsForPackageRequest:
      type: object
      title: ListDomainsForPackageRequest
      properties: {}
      description: Container for the request parameters to the <code>ListDomainsForPackage</code> operation.
    ListInstanceTypeDetailsRequest:
      type: object
      title: ListInstanceTypeDetailsRequest
      properties: {}
    ListPackagesForDomainRequest:
      type: object
      title: ListPackagesForDomainRequest
      properties: {}
      description: Container for the request parameters to the <code>ListPackagesForDomain</code> operation.
    ListScheduledActionsRequest:
      type: object
      title: ListScheduledActionsRequest
      properties: {}
    ScheduledActionsList:
      type: array
      items:
        $ref: '#/components/schemas/ScheduledAction'
    ListTagsRequest:
      type: object
      title: ListTagsRequest
      properties: {}
      description: Container for the parameters to the <code>ListTags</code> operation.
    ListVersionsRequest:
      type: object
      title: ListVersionsRequest
      properties: {}
      description: Container for the request parameters to the <code>ListVersions</code> operation.
    ListVpcEndpointAccessRequest:
      type: object
      title: ListVpcEndpointAccessRequest
      properties: {}
    ListVpcEndpointsForDomainRequest:
      type: object
      title: ListVpcEndpointsForDomainRequest
      properties: {}
    VpcEndpointSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/VpcEndpointSummary'
    ListVpcEndpointsRequest:
      type: object
      title: ListVpcEndpointsRequest
      properties: {}
    LogType:
      type: string
      enum:
        - INDEX_SLOW_LOGS
        - SEARCH_SLOW_LOGS
        - ES_APPLICATION_LOGS
        - AUDIT_LOGS
      description: '<p>The type of log file. Can be one of the following:</p> <ul> <li> <p> <b>INDEX_SLOW_LOGS</b> - Index slow logs contain insert requests that took more time than the configured index query log threshold to execute.</p> </li> <li> <p> <b>SEARCH_SLOW_LOGS</b> - Search slow logs contain search queries that took more time than the configured search query log threshold to execute.</p> </li> <li> <p> <b>ES_APPLICATION_LOGS</b> - OpenSearch application logs contain information about errors and warnings raised during the operation of the service and can be useful for troubleshooting.</p> </li> <li> <p> <b>AUDIT_LOGS</b> - Audit logs contain records of user requests for access to the domain.</p> </li> </ul>'
    Long:
      type: integer
    Username:
      type: string
      pattern: .*
      minLength: 1
      maxLength: 64
      format: password
    Password:
      type: string
      pattern: .*
      minLength: 8
      maxLength: 128
      format: password
    WindowStartTime:
      type: object
      required:
        - Hours
        - Minutes
      properties:
        Hours:
          allOf:
            - $ref: '#/components/schemas/StartTimeHours'
            - description: 'The start hour of the window in Coordinated Universal Time (UTC), using 24-hour time. For example, <code>17</code> refers to 5:00 P.M. UTC.'
        Minutes:
          allOf:
            - $ref: '#/components/schemas/StartTimeMinutes'
            - description: 'The start minute of the window, in UTC.'
      description: 'The desired start time for an <a href="https://docs.aws.amazon.com/opensearch-service/latest/APIReference/API_OffPeakWindow.html">off-peak maintenance window</a>.'
    OptionState:
      type: string
      enum:
        - RequiresIndexDocuments
        - Processing
        - Active
      description: '<p>The state of a requested domain configuration change. Can be one of the following:</p> <ul> <li> <p> <b>Processing</b> - The requested change is still in progress.</p> </li> <li> <p> <b>Active</b> - The requested change is processed and deployed to the domain.</p> </li> </ul>'
    OutboundConnectionStatusCode:
      type: string
      enum:
        - VALIDATING
        - VALIDATION_FAILED
        - PENDING_ACCEPTANCE
        - APPROVED
        - PROVISIONING
        - ACTIVE
        - REJECTING
        - REJECTED
        - DELETING
        - DELETED
    PackageStatus:
      type: string
      enum:
        - COPYING
        - COPY_FAILED
        - VALIDATING
        - VALIDATION_FAILED
        - AVAILABLE
        - DELETING
        - DELETED
        - DELETE_FAILED
    PackageVersionHistory:
      type: object
      properties:
        PackageVersion:
          allOf:
            - $ref: '#/components/schemas/PackageVersion'
            - description: The package version.
        CommitMessage:
          allOf:
            - $ref: '#/components/schemas/CommitMessage'
            - description: A message associated with the package version when it was uploaded.
        CreatedAt:
          allOf:
            - $ref: '#/components/schemas/CreatedAt'
            - description: The date and time when the package was created.
      description: Details about a package version.
    ReservationToken:
      type: string
      pattern: .*
      minLength: 5
      maxLength: 64
    PurchaseReservedInstanceOfferingRequest:
      type: object
      required:
        - ReservedInstanceOfferingId
        - ReservationName
      title: PurchaseReservedInstanceOfferingRequest
      properties:
        ReservedInstanceOfferingId:
          allOf:
            - $ref: '#/components/schemas/GUID'
            - description: The ID of the Reserved Instance offering to purchase.
        ReservationName:
          allOf:
            - $ref: '#/components/schemas/ReservationToken'
            - description: A customer-specified identifier to track this reservation.
        InstanceCount:
          allOf:
            - $ref: '#/components/schemas/InstanceCount'
            - description: The number of OpenSearch instances to reserve.
      description: Container for request parameters to the <code>PurchaseReservedInstanceOffering</code> operation.
    RecurringCharge:
      type: object
      properties:
        RecurringChargeAmount:
          allOf:
            - $ref: '#/components/schemas/Double'
            - description: The monetary amount of the recurring charge.
        RecurringChargeFrequency:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The frequency of the recurring charge.
      description: 'Contains the specific price and frequency of a recurring charges for an OpenSearch Reserved Instance, or for a Reserved Instance offering.'
    RecurringChargeList:
      type: array
      items:
        $ref: '#/components/schemas/RecurringCharge'
    RejectInboundConnectionRequest:
      type: object
      title: RejectInboundConnectionRequest
      properties: {}
      description: Container for the request parameters to the <code>RejectInboundConnection</code> operation.
    RemoveTagsRequest:
      type: object
      required:
        - ARN
        - TagKeys
      title: RemoveTagsRequest
      properties:
        ARN:
          allOf:
            - $ref: '#/components/schemas/ARN'
            - description: The Amazon Resource Name (ARN) of the domain from which you want to delete the specified tags.
        TagKeys:
          allOf:
            - $ref: '#/components/schemas/StringList'
            - description: The list of tag keys to remove from the domain.
      description: Container for the request parameters to the <code>RemoveTags</code> operation.
    ReservedInstancePaymentOption:
      type: string
      enum:
        - ALL_UPFRONT
        - PARTIAL_UPFRONT
        - NO_UPFRONT
    ReservedInstance:
      type: object
      properties:
        ReservationName:
          allOf:
            - $ref: '#/components/schemas/ReservationToken'
            - description: The customer-specified identifier to track this reservation.
        ReservedInstanceId:
          allOf:
            - $ref: '#/components/schemas/GUID'
            - description: The unique identifier for the reservation.
        BillingSubscriptionId:
          allOf:
            - $ref: '#/components/schemas/Long'
            - description: The unique identifier of the billing subscription.
        ReservedInstanceOfferingId:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The unique identifier of the Reserved Instance offering.
        InstanceType:
          allOf:
            - $ref: '#/components/schemas/OpenSearchPartitionInstanceType'
            - description: The OpenSearch instance type offered by theReserved Instance offering.
        StartTime:
          allOf:
            - $ref: '#/components/schemas/UpdateTimestamp'
            - description: The date and time when the reservation was purchased.
        Duration:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The duration, in seconds, for which the OpenSearch instance is reserved.'
        FixedPrice:
          allOf:
            - $ref: '#/components/schemas/Double'
            - description: The upfront fixed charge you will paid to purchase the specific Reserved Instance offering.
        UsagePrice:
          allOf:
            - $ref: '#/components/schemas/Double'
            - description: The hourly rate at which you're charged for the domain using this Reserved Instance.
        CurrencyCode:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The currency code for the offering.
        InstanceCount:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: The number of OpenSearch instances that have been reserved.
        State:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The state of the Reserved Instance.
        PaymentOption:
          allOf:
            - $ref: '#/components/schemas/ReservedInstancePaymentOption'
            - description: The payment option as defined in the Reserved Instance offering.
        RecurringCharges:
          allOf:
            - $ref: '#/components/schemas/RecurringChargeList'
            - description: 'The recurring charge to your account, regardless of whether you create any domains using the Reserved Instance offering.'
      description: Details of an OpenSearch Reserved Instance.
    ReservedInstanceOffering:
      type: object
      properties:
        ReservedInstanceOfferingId:
          allOf:
            - $ref: '#/components/schemas/GUID'
            - description: The unique identifier of the Reserved Instance offering.
        InstanceType:
          allOf:
            - $ref: '#/components/schemas/OpenSearchPartitionInstanceType'
            - description: The OpenSearch instance type offered by the Reserved Instance offering.
        Duration:
          allOf:
            - $ref: '#/components/schemas/Integer'
            - description: 'The duration, in seconds, for which the offering will reserve the OpenSearch instance.'
        FixedPrice:
          allOf:
            - $ref: '#/components/schemas/Double'
            - description: The upfront fixed charge you will pay to purchase the specific Reserved Instance offering.
        UsagePrice:
          allOf:
            - $ref: '#/components/schemas/Double'
            - description: The hourly rate at which you're charged for the domain using this Reserved Instance.
        CurrencyCode:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The currency code for the Reserved Instance offering.
        PaymentOption:
          allOf:
            - $ref: '#/components/schemas/ReservedInstancePaymentOption'
            - description: Payment option for the Reserved Instance offering
        RecurringCharges:
          allOf:
            - $ref: '#/components/schemas/RecurringChargeList'
            - description: 'The recurring charge to your account, regardless of whether you creates any domains using the offering.'
      description: Details of an OpenSearch Reserved Instance offering.
    RevokeVpcEndpointAccessRequest:
      type: object
      required:
        - Account
      title: RevokeVpcEndpointAccessRequest
      properties:
        Account:
          allOf:
            - $ref: '#/components/schemas/AWSAccount'
            - description: The account ID to revoke access from.
    SAMLEntityId:
      type: string
      minLength: 8
      maxLength: 512
    SAMLMetadata:
      type: string
      minLength: 1
      maxLength: 1048576
    SAMLIdp:
      type: object
      required:
        - MetadataContent
        - EntityId
      properties:
        MetadataContent:
          allOf:
            - $ref: '#/components/schemas/SAMLMetadata'
            - description: 'The metadata of the SAML application, in XML format.'
        EntityId:
          allOf:
            - $ref: '#/components/schemas/SAMLEntityId'
            - description: The unique entity ID of the application in the SAML identity provider.
      description: The SAML identity povider information.
    ScheduleAt:
      type: string
      enum:
        - NOW
        - TIMESTAMP
        - OFF_PEAK_WINDOW
    ScheduledBy:
      type: string
      enum:
        - CUSTOMER
        - SYSTEM
    ScheduledAction:
      type: object
      required:
        - Id
        - Type
        - Severity
        - ScheduledTime
      properties:
        Id:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The unique identifier of the scheduled action.
        Type:
          allOf:
            - $ref: '#/components/schemas/ActionType'
            - description: The type of action that will be taken on the domain.
        Severity:
          allOf:
            - $ref: '#/components/schemas/ActionSeverity'
            - description: The severity of the action.
        ScheduledTime:
          allOf:
            - $ref: '#/components/schemas/Long'
            - description: The time when the change is scheduled to happen.
        Description:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A description of the action to be taken.
        ScheduledBy:
          allOf:
            - $ref: '#/components/schemas/ScheduledBy'
            - description: 'Whether the action was scheduled manually (<code>CUSTOMER</code>, or by OpenSearch Service automatically (<code>SYSTEM</code>).'
        Status:
          allOf:
            - $ref: '#/components/schemas/ActionStatus'
            - description: The current status of the scheduled action.
        Mandatory:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Whether the action is required or optional.
        Cancellable:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: Whether or not the scheduled action is cancellable.
      description: 'Information about a scheduled configuration change for an OpenSearch Service domain. This actions can be a <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/service-software.html">service software update</a> or a <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html#auto-tune-types">blue/green Auto-Tune enhancement</a>.'
    ScheduledAutoTuneActionType:
      type: string
      enum:
        - JVM_HEAP_SIZE_TUNING
        - JVM_YOUNG_GEN_TUNING
      description: The Auto-Tune action type.
    ScheduledAutoTuneDescription:
      type: string
      description: The description of an Auto-Tune maintenance action that occurs on a domain.
    ScheduledAutoTuneSeverityType:
      type: string
      enum:
        - LOW
        - MEDIUM
        - HIGH
      description: The Auto-Tune action severity.
    StartServiceSoftwareUpdateRequest:
      type: object
      required:
        - DomainName
      title: StartServiceSoftwareUpdateRequest
      properties:
        DomainName:
          allOf:
            - $ref: '#/components/schemas/DomainName'
            - description: The name of the domain that you want to update to the latest service software.
        ScheduleAt:
          allOf:
            - $ref: '#/components/schemas/ScheduleAt'
            - description: '<p>When to start the service software update.</p> <ul> <li> <p> <code>NOW</code> - Immediately schedules the update to happen in the current hour if there''s capacity available.</p> </li> <li> <p> <code>TIMESTAMP</code> - Lets you specify a custom date and time to apply the update. If you specify this value, you must also provide a value for <code>DesiredStartTime</code>.</p> </li> <li> <p> <code>OFF_PEAK_WINDOW</code> - Marks the update to be picked up during an upcoming off-peak window. There''s no guarantee that the update will happen during the next immediate window. Depending on capacity, it might happen in subsequent days.</p> </li> </ul> <p>Default: <code>NOW</code> if you don''t specify a value for <code>DesiredStartTime</code>, and <code>TIMESTAMP</code> if you do.</p>'
        DesiredStartTime:
          allOf:
            - $ref: '#/components/schemas/Long'
            - description: The Epoch timestamp when you want the service software update to start. You only need to specify this parameter if you set <code>ScheduleAt</code> to <code>TIMESTAMP</code>.
      description: Container for the request parameters to the <code>StartServiceSoftwareUpdate</code> operation.
    StartTimeHours:
      type: integer
      minimum: 0
      maximum: 23
    StartTimeMinutes:
      type: integer
      minimum: 0
      maximum: 59
    StartTimestamp:
      type: string
      format: date-time
    StorageSubTypeName:
      type: string
      description: '<p> Sub-type of the given EBS storage type. List of available sub-storage options. The <code>instance</code> storage type has no storage sub-type. The <code>ebs</code> storage type has the following valid sub-types: </p> <ul> <li> <p> <code>standard</code> </p> </li> <li> <p> <code>gp2</code> </p> </li> <li> <p> <code>gp3</code> </p> </li> <li> <p> <code>io1</code> </p> </li> </ul>'
    StorageTypeLimitList:
      type: array
      items:
        $ref: '#/components/schemas/StorageTypeLimit'
    StorageType:
      type: object
      properties:
        StorageTypeName:
          allOf:
            - $ref: '#/components/schemas/StorageTypeName'
            - description: The name of the storage type.
        StorageSubTypeName:
          allOf:
            - $ref: '#/components/schemas/StorageSubTypeName'
            - description: 'The storage sub-type, such as <code>gp3</code> or <code>io1</code>.'
        StorageTypeLimits:
          allOf:
            - $ref: '#/components/schemas/StorageTypeLimitList'
            - description: Limits that are applicable for the given storage type.
      description: A list of storage types for an Amazon OpenSearch Service domain that are available for a given intance type.
    StorageTypeLimit:
      type: object
      properties:
        LimitName:
          allOf:
            - $ref: '#/components/schemas/LimitName'
            - description: '<p> Name of storage limits that are applicable for the given storage type. If <code>StorageType</code> is <code>ebs</code>, the following options are available:</p> <ul> <li> <p> <b>MinimumVolumeSize</b> - Minimum volume size that is available for the given storage type. Can be empty if not applicable.</p> </li> <li> <p> <b>MaximumVolumeSize</b> - Maximum volume size that is available for the given storage type. Can be empty if not applicable.</p> </li> <li> <p> <b>MaximumIops</b> - Maximum amount of IOPS that is available for the given the storage type. Can be empty if not applicable.</p> </li> <li> <p> <b>MinimumIops</b> - Minimum amount of IOPS that is available for the given the storage type. Can be empty if not applicable.</p> </li> <li> <p> <b>MaximumThroughput</b> - Maximum amount of throughput that is available for the given the storage type. Can be empty if not applicable.</p> </li> <li> <p> <b>MinimumThroughput</b> - Minimum amount of throughput that is available for the given the storage type. Can be empty if not applicable.</p> </li> </ul>'
        LimitValues:
          allOf:
            - $ref: '#/components/schemas/LimitValueList'
            - description: The limit values.
      description: Limits that are applicable for the given Amazon OpenSearch Service storage type.
    TagKey:
      type: string
      pattern: .*
      description: A string between 1 to 128 characters that specifies the key for a tag. Tag keys must be unique for the domain to which they're attached.
      minLength: 1
      maxLength: 128
    TagValue:
      type: string
      pattern: .*
      description: A string between 0 to 256 characters that specifies the value for a tag. Tag values can be null and don't have to be unique in a tag set.
      minLength: 0
      maxLength: 256
    UpdateDomainConfigRequest:
      type: object
      title: UpdateDomainConfigRequest
      properties:
        ClusterConfig:
          allOf:
            - $ref: '#/components/schemas/ClusterConfig'
            - description: 'Changes that you want to make to the cluster configuration, such as the instance type and number of EC2 instances.'
        EBSOptions:
          allOf:
            - $ref: '#/components/schemas/EBSOptions'
            - description: The type and size of the EBS volume to attach to instances in the domain.
        SnapshotOptions:
          allOf:
            - $ref: '#/components/schemas/SnapshotOptions'
            - description: 'Option to set the time, in UTC format, for the daily automated snapshot. Default value is <code>0</code> hours. '
        VPCOptions:
          allOf:
            - $ref: '#/components/schemas/VPCOptions'
            - description: 'Options to specify the subnets and security groups for a VPC endpoint. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/vpc.html">Launching your Amazon OpenSearch Service domains using a VPC</a>.'
        CognitoOptions:
          allOf:
            - $ref: '#/components/schemas/CognitoOptions'
            - description: Key-value pairs to configure Amazon Cognito authentication for OpenSearch Dashboards.
        AdvancedOptions:
          allOf:
            - $ref: '#/components/schemas/AdvancedOptions'
            - description: '<p>Key-value pairs to specify advanced configuration options. The following key-value pairs are supported:</p> <ul> <li> <p> <code>"rest.action.multi.allow_explicit_index": "true" | "false"</code> - Note the use of a string rather than a boolean. Specifies whether explicit references to indexes are allowed inside the body of HTTP requests. If you want to configure access policies for domain sub-resources, such as specific indexes and domain APIs, you must disable this property. Default is true.</p> </li> <li> <p> <code>"indices.fielddata.cache.size": "80" </code> - Note the use of a string rather than a boolean. Specifies the percentage of heap space allocated to field data. Default is unbounded.</p> </li> <li> <p> <code>"indices.query.bool.max_clause_count": "1024"</code> - Note the use of a string rather than a boolean. Specifies the maximum number of clauses allowed in a Lucene boolean query. Default is 1,024. Queries with more than the permitted number of clauses result in a <code>TooManyClauses</code> error.</p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomain-configure-advanced-options">Advanced cluster parameters</a>.</p>'
        AccessPolicies:
          allOf:
            - $ref: '#/components/schemas/PolicyDocument'
            - description: Identity and Access Management (IAM) access policy as a JSON-formatted string.
        LogPublishingOptions:
          allOf:
            - $ref: '#/components/schemas/LogPublishingOptions'
            - description: Options to publish OpenSearch logs to Amazon CloudWatch Logs.
        EncryptionAtRestOptions:
          allOf:
            - $ref: '#/components/schemas/EncryptionAtRestOptions'
            - description: Encryption at rest options for the domain.
        DomainEndpointOptions:
          allOf:
            - $ref: '#/components/schemas/DomainEndpointOptions'
            - description: 'Additional options for the domain endpoint, such as whether to require HTTPS for all traffic.'
        NodeToNodeEncryptionOptions:
          allOf:
            - $ref: '#/components/schemas/NodeToNodeEncryptionOptions'
            - description: Node-to-node encryption options for the domain.
        AdvancedSecurityOptions:
          allOf:
            - $ref: '#/components/schemas/AdvancedSecurityOptionsInput'
            - description: Options for fine-grained access control.
        AutoTuneOptions:
          allOf:
            - $ref: '#/components/schemas/AutoTuneOptions'
            - description: Options for Auto-Tune.
        DryRun:
          allOf:
            - $ref: '#/components/schemas/DryRun'
            - description: 'This flag, when set to True, specifies whether the <code>UpdateDomain</code> request should return the results of a dry run analysis without actually applying the change. A dry run determines what type of deployment the update will cause.'
        DryRunMode:
          allOf:
            - $ref: '#/components/schemas/DryRunMode'
            - description: '<p>The type of dry run to perform.</p> <ul> <li> <p> <code>Basic</code> only returns the type of deployment (blue/green or dynamic) that the update will cause.</p> </li> <li> <p> <code>Verbose</code> runs an additional check to validate the changes you''re making. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains-configuration-changes#validation-check">Validating a domain update</a>.</p> </li> </ul>'
        OffPeakWindowOptions:
          allOf:
            - $ref: '#/components/schemas/OffPeakWindowOptions'
            - description: Off-peak window options for the domain.
        SoftwareUpdateOptions:
          allOf:
            - $ref: '#/components/schemas/SoftwareUpdateOptions'
            - description: Service software update options for the domain.
      description: Container for the request parameters to the <code>UpdateDomain</code> operation.
    UpdatePackageRequest:
      type: object
      required:
        - PackageID
        - PackageSource
      title: UpdatePackageRequest
      properties:
        PackageID:
          allOf:
            - $ref: '#/components/schemas/PackageID'
            - description: The unique identifier for the package.
        PackageSource:
          allOf:
            - $ref: '#/components/schemas/PackageSource'
            - description: Amazon S3 bucket and key for the package.
        PackageDescription:
          allOf:
            - $ref: '#/components/schemas/PackageDescription'
            - description: A new description of the package.
        CommitMessage:
          allOf:
            - $ref: '#/components/schemas/CommitMessage'
            - description: 'Commit message for the updated file, which is shown as part of <code>GetPackageVersionHistoryResponse</code>.'
      description: Container for request parameters to the <code>UpdatePackage</code> operation.
    UpdateScheduledActionRequest:
      type: object
      required:
        - ActionID
        - ActionType
        - ScheduleAt
      title: UpdateScheduledActionRequest
      properties:
        ActionID:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: 'The unique identifier of the action to reschedule. To retrieve this ID, send a <a href="https://docs.aws.amazon.com/opensearch-service/latest/APIReference/API_ListScheduledActions.html">ListScheduledActions</a> request.'
        ActionType:
          allOf:
            - $ref: '#/components/schemas/ActionType'
            - description: 'The type of action to reschedule. Can be one of <code>SERVICE_SOFTWARE_UPDATE</code>, <code>JVM_HEAP_SIZE_TUNING</code>, or <code>JVM_YOUNG_GEN_TUNING</code>. To retrieve this value, send a <a href="https://docs.aws.amazon.com/opensearch-service/latest/APIReference/API_ListScheduledActions.html">ListScheduledActions</a> request.'
        ScheduleAt:
          allOf:
            - $ref: '#/components/schemas/ScheduleAt'
            - description: '<p>When to schedule the action.</p> <ul> <li> <p> <code>NOW</code> - Immediately schedules the update to happen in the current hour if there''s capacity available.</p> </li> <li> <p> <code>TIMESTAMP</code> - Lets you specify a custom date and time to apply the update. If you specify this value, you must also provide a value for <code>DesiredStartTime</code>.</p> </li> <li> <p> <code>OFF_PEAK_WINDOW</code> - Marks the action to be picked up during an upcoming off-peak window. There''s no guarantee that the change will be implemented during the next immediate window. Depending on capacity, it might happen in subsequent days.</p> </li> </ul>'
        DesiredStartTime:
          allOf:
            - $ref: '#/components/schemas/Long'
            - description: 'The time to implement the change, in Coordinated Universal Time (UTC). Only specify this parameter if you set <code>ScheduleAt</code> to <code>TIMESTAMP</code>.'
    UpdateVpcEndpointRequest:
      type: object
      required:
        - VpcEndpointId
        - VpcOptions
      title: UpdateVpcEndpointRequest
      properties:
        VpcEndpointId:
          allOf:
            - $ref: '#/components/schemas/VpcEndpointId'
            - description: The unique identifier of the endpoint.
        VpcOptions:
          allOf:
            - $ref: '#/components/schemas/VPCOptions'
            - description: 'The security groups and/or subnets to add, remove, or modify.'
    UpgradeDomainRequest:
      type: object
      required:
        - DomainName
        - TargetVersion
      title: UpgradeDomainRequest
      properties:
        DomainName:
          allOf:
            - $ref: '#/components/schemas/DomainName'
            - description: Name of the OpenSearch Service domain that you want to upgrade.
        TargetVersion:
          allOf:
            - $ref: '#/components/schemas/VersionString'
            - description: 'OpenSearch or Elasticsearch version to which you want to upgrade, in the format Opensearch_X.Y or Elasticsearch_X.Y.'
        PerformCheckOnly:
          allOf:
            - $ref: '#/components/schemas/Boolean'
            - description: 'When true, indicates that an upgrade eligibility check needs to be performed. Does not actually perform the upgrade.'
        AdvancedOptions:
          allOf:
            - $ref: '#/components/schemas/AdvancedOptions'
            - description: Only supports the <code>override_main_response_version</code> parameter and not other advanced options. You can only include this option when upgrading to an OpenSearch version. Specifies whether the domain reports its version as 7.10 so that it continues to work with Elasticsearch OSS clients and plugins.
      description: Container for the request parameters to the <code>UpgradeDomain</code> operation.
    UpgradeStepsList:
      type: array
      items:
        $ref: '#/components/schemas/UpgradeStepItem'
    UpgradeHistory:
      type: object
      properties:
        UpgradeName:
          allOf:
            - $ref: '#/components/schemas/UpgradeName'
            - description: A string that describes the upgrade.
        StartTimestamp:
          allOf:
            - $ref: '#/components/schemas/StartTimestamp'
            - description: 'UTC timestamp at which the upgrade API call was made, in the format <code>yyyy-MM-ddTHH:mm:ssZ</code>.'
        UpgradeStatus:
          allOf:
            - $ref: '#/components/schemas/UpgradeStatus'
            - description: '<p> The current status of the upgrade. The status can take one of the following values: </p> <ul> <li> <p>In Progress</p> </li> <li> <p>Succeeded</p> </li> <li> <p>Succeeded with Issues</p> </li> <li> <p>Failed</p> </li> </ul>'
        StepsList:
          allOf:
            - $ref: '#/components/schemas/UpgradeStepsList'
            - description: A list of each step performed as part of a specific upgrade or upgrade eligibility check.
      description: History of the last 10 upgrades and upgrade eligibility checks for an Amazon OpenSearch Service domain.
    UpgradeStepItem:
      type: object
      properties:
        UpgradeStep:
          allOf:
            - $ref: '#/components/schemas/UpgradeStep'
            - description: '<p> One of three steps that an upgrade or upgrade eligibility check goes through: </p> <ul> <li> <p>PreUpgradeCheck</p> </li> <li> <p>Snapshot</p> </li> <li> <p>Upgrade</p> </li> </ul>'
        UpgradeStepStatus:
          allOf:
            - $ref: '#/components/schemas/UpgradeStatus'
            - description: '<p> The current status of the upgrade. The status can take one of the following values: </p> <ul> <li> <p>In Progress</p> </li> <li> <p>Succeeded</p> </li> <li> <p>Succeeded with Issues</p> </li> <li> <p>Failed</p> </li> </ul>'
        Issues:
          allOf:
            - $ref: '#/components/schemas/Issues'
            - description: A list of strings containing detailed information about the errors encountered in a particular step.
        ProgressPercent:
          allOf:
            - $ref: '#/components/schemas/Double'
            - description: The floating point value representing the progress percentage of a particular step.
      description: Represents a single step of an upgrade or upgrade eligibility check workflow.
    ValidationFailure:
      type: object
      properties:
        Code:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: The error code of the failure.
        Message:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A message corresponding to the failure.
      description: A validation failure that occurred as the result of a pre-update validation check (verbose dry run) on a domain.
    VpcEndpointStatus:
      type: string
      enum:
        - CREATING
        - CREATE_FAILED
        - ACTIVE
        - UPDATING
        - UPDATE_FAILED
        - DELETING
        - DELETE_FAILED
    VpcEndpointErrorCode:
      type: string
      enum:
        - ENDPOINT_NOT_FOUND
        - SERVER_ERROR
    VpcEndpointError:
      type: object
      properties:
        VpcEndpointId:
          allOf:
            - $ref: '#/components/schemas/VpcEndpointId'
            - description: The unique identifier of the endpoint.
        ErrorCode:
          allOf:
            - $ref: '#/components/schemas/VpcEndpointErrorCode'
            - description: The code associated with the error.
        ErrorMessage:
          allOf:
            - $ref: '#/components/schemas/String'
            - description: A message describing the error.
      description: Error information when attempting to describe an Amazon OpenSearch Service-managed VPC endpoint.
security:
  - hmac: []
