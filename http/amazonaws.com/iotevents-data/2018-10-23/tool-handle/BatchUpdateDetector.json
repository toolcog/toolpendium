{
  "name": "BatchUpdateDetector",
  "description": "Updates the state, variable values, and timer settings of one or more detectors (instances) of a specified detector model.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "detectors"
        ],
        "properties": {
          "detectors": {
            "description": "The list of detectors (instances) to update, along with the values to update.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/UpdateDetectorRequest"
            },
            "minItems": 1
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "UpdateDetectorRequest": {
        "type": "object",
        "required": [
          "messageId",
          "detectorModelName",
          "state"
        ],
        "properties": {
          "messageId": {
            "allOf": [
              {
                "$ref": "#/$defs/MessageId"
              },
              {
                "description": "The ID to assign to the detector update <code>\"message\"</code>. Each <code>\"messageId\"</code> must be unique within each batch sent."
              }
            ]
          },
          "detectorModelName": {
            "allOf": [
              {
                "$ref": "#/$defs/DetectorModelName"
              },
              {
                "description": "The name of the detector model that created the detectors (instances)."
              }
            ]
          },
          "keyValue": {
            "allOf": [
              {
                "$ref": "#/$defs/KeyValue"
              },
              {
                "description": "The value of the input key attribute (identifying the device or system) that caused the creation of this detector (instance)."
              }
            ]
          },
          "state": {
            "allOf": [
              {
                "$ref": "#/$defs/DetectorStateDefinition"
              },
              {
                "description": "The new state, variable values, and timer settings of the detector (instance)."
              }
            ]
          }
        },
        "description": "Information used to update the detector (instance)."
      },
      "MessageId": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9_-]+$",
        "minLength": 1,
        "maxLength": 64
      },
      "DetectorModelName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9_-]+$",
        "minLength": 1,
        "maxLength": 128
      },
      "KeyValue": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9\\-_:]+$",
        "minLength": 1,
        "maxLength": 128
      },
      "DetectorStateDefinition": {
        "type": "object",
        "required": [
          "stateName",
          "variables",
          "timers"
        ],
        "properties": {
          "stateName": {
            "allOf": [
              {
                "$ref": "#/$defs/StateName"
              },
              {
                "description": "The name of the new state of the detector (instance)."
              }
            ]
          },
          "variables": {
            "allOf": [
              {
                "$ref": "#/$defs/VariableDefinitions"
              },
              {
                "description": "The new values of the detector's variables. Any variable whose value isn't specified is cleared."
              }
            ]
          },
          "timers": {
            "allOf": [
              {
                "$ref": "#/$defs/TimerDefinitions"
              },
              {
                "description": "The new values of the detector's timers. Any timer whose value isn't specified is cleared, and its timeout event won't occur."
              }
            ]
          }
        },
        "description": "The new state, variable values, and timer settings of the detector (instance)."
      },
      "StateName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 128
      },
      "VariableDefinitions": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/VariableDefinition"
        }
      },
      "VariableDefinition": {
        "type": "object",
        "required": [
          "name",
          "value"
        ],
        "properties": {
          "name": {
            "allOf": [
              {
                "$ref": "#/$defs/VariableName"
              },
              {
                "description": "The name of the variable."
              }
            ]
          },
          "value": {
            "allOf": [
              {
                "$ref": "#/$defs/VariableValue"
              },
              {
                "description": "The new value of the variable."
              }
            ]
          }
        },
        "description": "The new value of the variable."
      },
      "VariableName": {
        "type": "string",
        "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
        "minLength": 1,
        "maxLength": 128
      },
      "VariableValue": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1024
      },
      "TimerDefinitions": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/TimerDefinition"
        }
      },
      "TimerDefinition": {
        "type": "object",
        "required": [
          "name",
          "seconds"
        ],
        "properties": {
          "name": {
            "allOf": [
              {
                "$ref": "#/$defs/TimerName"
              },
              {
                "description": "The name of the timer."
              }
            ]
          },
          "seconds": {
            "allOf": [
              {
                "$ref": "#/$defs/Seconds"
              },
              {
                "description": "The new setting of the timer (the number of seconds before the timer elapses)."
              }
            ]
          }
        },
        "description": "The new setting of a timer."
      },
      "TimerName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 128
      },
      "Seconds": {
        "type": "integer"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://data.iotevents.us-east-1.amazonaws.com/detectors"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**batchUpdateDetectorErrorEntries**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
