{
  "name": "BatchPutMessage",
  "description": "Sends a set of messages to the IoT Events system. Each message payload is transformed into the input you specify (<code>\"inputName\"</code>) and ingested into any detectors that monitor that input. If multiple messages are sent, the order in which the messages are processed isn't guaranteed. To guarantee ordering, you must send messages one at a time and wait for a successful response.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "messages"
        ],
        "properties": {
          "messages": {
            "description": "The list of messages to send. Each message has the following format: <code>'{ \"messageId\": \"string\", \"inputName\": \"string\", \"payload\": \"string\"}'</code> ",
            "type": "array",
            "items": {
              "$ref": "#/$defs/Message"
            },
            "minItems": 1
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "Message": {
        "type": "object",
        "required": [
          "messageId",
          "inputName",
          "payload"
        ],
        "properties": {
          "messageId": {
            "allOf": [
              {
                "$ref": "#/$defs/MessageId"
              },
              {
                "description": "The ID to assign to the message. Within each batch sent, each <code>\"messageId\"</code> must be unique."
              }
            ]
          },
          "inputName": {
            "allOf": [
              {
                "$ref": "#/$defs/EphemeralInputName"
              },
              {
                "description": "The name of the input into which the message payload is transformed."
              }
            ]
          },
          "payload": {
            "allOf": [
              {
                "$ref": "#/$defs/Payload"
              },
              {
                "description": "The payload of the message. This can be a JSON string or a Base-64-encoded string representing binary data (in which case you must decode it)."
              }
            ]
          },
          "timestamp": {
            "allOf": [
              {
                "$ref": "#/$defs/TimestampValue"
              },
              {
                "description": "The timestamp associated with the message."
              }
            ]
          }
        },
        "description": "Information about a message."
      },
      "MessageId": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9_-]+$",
        "minLength": 1,
        "maxLength": 64
      },
      "EphemeralInputName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
        "minLength": 1,
        "maxLength": 128
      },
      "Payload": {
        "type": "string"
      },
      "TimestampValue": {
        "type": "object",
        "properties": {
          "timeInMillis": {
            "allOf": [
              {
                "$ref": "#/$defs/EpochMilliTimestamp"
              },
              {
                "description": "The value of the timestamp, in the Unix epoch format."
              }
            ]
          }
        },
        "description": "Contains information about a timestamp."
      },
      "EpochMilliTimestamp": {
        "type": "integer",
        "minimum": 1,
        "maximum": 9223372036854776000
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://data.iotevents.us-east-1.amazonaws.com/inputs/messages"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**BatchPutMessageErrorEntries**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
