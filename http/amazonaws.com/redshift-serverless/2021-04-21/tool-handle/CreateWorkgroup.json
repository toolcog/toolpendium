{
  "name": "CreateWorkgroup",
  "description": "Creates an workgroup in Amazon Redshift Serverless.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "RedshiftServerless.CreateWorkgroup"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/CreateWorkgroupRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "CreateWorkgroupRequest": {
        "type": "object",
        "required": [
          "namespaceName",
          "workgroupName"
        ],
        "title": "CreateWorkgroupRequest",
        "properties": {
          "baseCapacity": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "The base data warehouse capacity of the workgroup in Redshift Processing Units (RPUs)."
              }
            ]
          },
          "configParameters": {
            "allOf": [
              {
                "$ref": "#/$defs/ConfigParameterList"
              },
              {
                "description": "An array of parameters to set for advanced control over a database. The options are <code>auto_mv</code>, <code>datestyle</code>, <code>enable_case_sensitivity_identifier</code>, <code>enable_user_activity_logging</code>, <code>query_group</code>, <code>search_path</code>, and query monitoring metrics that let you define performance boundaries. For more information about query monitoring rules and available metrics, see <a href=\"https://docs.aws.amazon.com/redshift/latest/dg/cm-c-wlm-query-monitoring-rules.html#cm-c-wlm-query-monitoring-metrics-serverless\"> Query monitoring metrics for Amazon Redshift Serverless</a>."
              }
            ]
          },
          "enhancedVpcRouting": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "The value that specifies whether to turn on enhanced virtual private cloud (VPC) routing, which forces Amazon Redshift Serverless to route traffic through your VPC instead of over the internet."
              }
            ]
          },
          "namespaceName": {
            "allOf": [
              {
                "$ref": "#/$defs/NamespaceName"
              },
              {
                "description": "The name of the namespace to associate with the workgroup."
              }
            ]
          },
          "port": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "The custom port to use when connecting to a workgroup. Valid port ranges are 5431-5455 and 8191-8215. The default is 5439."
              }
            ]
          },
          "publiclyAccessible": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "A value that specifies whether the workgroup can be accessed from a public network."
              }
            ]
          },
          "securityGroupIds": {
            "allOf": [
              {
                "$ref": "#/$defs/SecurityGroupIdList"
              },
              {
                "description": "An array of security group IDs to associate with the workgroup."
              }
            ]
          },
          "subnetIds": {
            "allOf": [
              {
                "$ref": "#/$defs/SubnetIdList"
              },
              {
                "description": "An array of VPC subnet IDs to associate with the workgroup."
              }
            ]
          },
          "tags": {
            "allOf": [
              {
                "$ref": "#/$defs/TagList"
              },
              {
                "description": "A array of tag instances."
              }
            ]
          },
          "workgroupName": {
            "allOf": [
              {
                "$ref": "#/$defs/WorkgroupName"
              },
              {
                "description": "The name of the created workgroup."
              }
            ]
          }
        }
      },
      "Integer": {
        "type": "integer"
      },
      "ConfigParameterList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ConfigParameter"
        }
      },
      "ConfigParameter": {
        "type": "object",
        "properties": {
          "parameterKey": {
            "allOf": [
              {
                "$ref": "#/$defs/ParameterKey"
              },
              {
                "description": "The key of the parameter. The options are <code>auto_mv</code>, <code>datestyle</code>, <code>enable_case_sensitivity_identifier</code>, <code>enable_user_activity_logging</code>, <code>query_group</code>, <code>search_path</code>, and query monitoring metrics that let you define performance boundaries. For more information about query monitoring rules and available metrics, see <a href=\"https://docs.aws.amazon.com/redshift/latest/dg/cm-c-wlm-query-monitoring-rules.html#cm-c-wlm-query-monitoring-metrics-serverless\">Query monitoring metrics for Amazon Redshift Serverless</a>."
              }
            ]
          },
          "parameterValue": {
            "allOf": [
              {
                "$ref": "#/$defs/ParameterValue"
              },
              {
                "description": "The value of the parameter to set."
              }
            ]
          }
        },
        "description": "An array of key-value pairs to set for advanced control over Amazon Redshift Serverless."
      },
      "ParameterKey": {
        "type": "string"
      },
      "ParameterValue": {
        "type": "string"
      },
      "Boolean": {
        "type": "boolean"
      },
      "NamespaceName": {
        "type": "string",
        "pattern": "^[a-z0-9-]+$",
        "minLength": 3,
        "maxLength": 64
      },
      "SecurityGroupIdList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/SecurityGroupId"
        }
      },
      "SecurityGroupId": {
        "type": "string"
      },
      "SubnetIdList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/SubnetId"
        }
      },
      "SubnetId": {
        "type": "string"
      },
      "TagList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Tag"
        },
        "minItems": 0,
        "maxItems": 200
      },
      "Tag": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "The key to use in the tag."
              }
            ]
          },
          "value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": "The value of the tag."
              }
            ]
          }
        },
        "description": "A map of key-value pairs."
      },
      "TagKey": {
        "type": "string",
        "minLength": 1,
        "maxLength": 128
      },
      "TagValue": {
        "type": "string",
        "minLength": 0,
        "maxLength": 256
      },
      "WorkgroupName": {
        "type": "string",
        "pattern": "^[a-z0-9-]+$",
        "minLength": 3,
        "maxLength": 64
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://redshift-serverless.us-east-1.amazonaws.com/#X-Amz-Target=RedshiftServerless.CreateWorkgroup"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**workgroup**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
