{
  "name": "CreateNamespace",
  "description": "Creates a namespace in Amazon Redshift Serverless.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "RedshiftServerless.CreateNamespace"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/CreateNamespaceRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "CreateNamespaceRequest": {
        "type": "object",
        "required": [
          "namespaceName"
        ],
        "title": "CreateNamespaceRequest",
        "properties": {
          "adminUserPassword": {
            "allOf": [
              {
                "$ref": "#/$defs/DbPassword"
              },
              {
                "description": "The password of the administrator for the first database created in the namespace."
              }
            ]
          },
          "adminUsername": {
            "allOf": [
              {
                "$ref": "#/$defs/DbUser"
              },
              {
                "description": "The username of the administrator for the first database created in the namespace."
              }
            ]
          },
          "dbName": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The name of the first database created in the namespace."
              }
            ]
          },
          "defaultIamRoleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the IAM role to set as a default in the namespace."
              }
            ]
          },
          "iamRoles": {
            "allOf": [
              {
                "$ref": "#/$defs/IamRoleArnList"
              },
              {
                "description": "A list of IAM roles to associate with the namespace."
              }
            ]
          },
          "kmsKeyId": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The ID of the Amazon Web Services Key Management Service key used to encrypt your data."
              }
            ]
          },
          "logExports": {
            "allOf": [
              {
                "$ref": "#/$defs/LogExportList"
              },
              {
                "description": "The types of logs the namespace can export. Available export types are <code>userlog</code>, <code>connectionlog</code>, and <code>useractivitylog</code>."
              }
            ]
          },
          "namespaceName": {
            "allOf": [
              {
                "$ref": "#/$defs/NamespaceName"
              },
              {
                "description": "The name of the namespace."
              }
            ]
          },
          "tags": {
            "allOf": [
              {
                "$ref": "#/$defs/TagList"
              },
              {
                "description": "A list of tag instances."
              }
            ]
          }
        }
      },
      "DbPassword": {
        "type": "string",
        "format": "password"
      },
      "DbUser": {
        "type": "string",
        "format": "password"
      },
      "String": {
        "type": "string"
      },
      "IamRoleArnList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/IamRoleArn"
        }
      },
      "IamRoleArn": {
        "type": "string"
      },
      "LogExportList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/LogExport"
        },
        "minItems": 0,
        "maxItems": 16
      },
      "LogExport": {
        "type": "string",
        "enum": [
          "useractivitylog",
          "userlog",
          "connectionlog"
        ]
      },
      "NamespaceName": {
        "type": "string",
        "pattern": "^[a-z0-9-]+$",
        "minLength": 3,
        "maxLength": 64
      },
      "TagList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Tag"
        },
        "minItems": 0,
        "maxItems": 200
      },
      "Tag": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "The key to use in the tag."
              }
            ]
          },
          "value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": "The value of the tag."
              }
            ]
          }
        },
        "description": "A map of key-value pairs."
      },
      "TagKey": {
        "type": "string",
        "minLength": 1,
        "maxLength": 128
      },
      "TagValue": {
        "type": "string",
        "minLength": 0,
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://redshift-serverless.us-east-1.amazonaws.com/#X-Amz-Target=RedshiftServerless.CreateNamespace"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**namespace**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
