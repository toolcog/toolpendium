{
  "name": "UpdateBroker",
  "description": "Adds a pending configuration change to a broker.",
  "parameters": {
    "type": "object",
    "properties": {
      "broker-id": {
        "type": "string",
        "description": "The unique ID that Amazon MQ generates for the broker."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "properties": {
          "authenticationStrategy": {
            "description": "Optional. The authentication strategy used to secure the broker. The default is SIMPLE.",
            "type": "string",
            "enum": [
              "SIMPLE",
              "LDAP"
            ]
          },
          "autoMinorVersionUpgrade": {
            "description": "Enables automatic upgrades to new minor versions for brokers, as new versions are released and supported by Amazon MQ. Automatic upgrades occur during the scheduled maintenance window of the broker or after a manual broker reboot.",
            "type": "boolean"
          },
          "configuration": {
            "description": "A list of information about the configuration.",
            "type": "object",
            "properties": {
              "Id": {
                "allOf": [
                  {
                    "$ref": "#/$defs/__string"
                  },
                  {
                    "xml": {
                      "name": "id"
                    },
                    "description": "Required. The unique ID that Amazon MQ generates for the configuration."
                  }
                ]
              },
              "Revision": {
                "allOf": [
                  {
                    "$ref": "#/$defs/__integer"
                  },
                  {
                    "xml": {
                      "name": "revision"
                    },
                    "description": "The revision number of the configuration."
                  }
                ]
              }
            }
          },
          "engineVersion": {
            "description": "The broker engine version. For a list of supported engine versions, see <a href=\"https://docs.aws.amazon.com//amazon-mq/latest/developer-guide/broker-engine.html\">Supported engines</a>.",
            "type": "string"
          },
          "hostInstanceType": {
            "description": "The broker's host instance type to upgrade to. For a list of supported instance types, see <a href=\"https://docs.aws.amazon.com//amazon-mq/latest/developer-guide/broker.html#broker-instance-types\">Broker instance types</a>.",
            "type": "string"
          },
          "ldapServerMetadata": {
            "description": "<p>Optional. The metadata of the LDAP server used to authenticate and authorize connections to the broker.</p> <important><p>Does not apply to RabbitMQ brokers.</p></important>",
            "type": "object",
            "properties": {
              "Hosts": {
                "allOf": [
                  {
                    "$ref": "#/$defs/__listOf__string"
                  },
                  {
                    "xml": {
                      "name": "hosts"
                    },
                    "description": "Specifies the location of the LDAP server such as Directory Service for Microsoft Active Directory. Optional failover server."
                  }
                ]
              },
              "RoleBase": {
                "allOf": [
                  {
                    "$ref": "#/$defs/__string"
                  },
                  {
                    "xml": {
                      "name": "roleBase"
                    },
                    "description": "The distinguished name of the node in the directory information tree (DIT) to search for roles or groups. For example, ou=group, ou=corp, dc=corp,\n                  dc=example, dc=com."
                  }
                ]
              },
              "RoleName": {
                "allOf": [
                  {
                    "$ref": "#/$defs/__string"
                  },
                  {
                    "xml": {
                      "name": "roleName"
                    },
                    "description": "Specifies the LDAP attribute that identifies the group name attribute in the object returned from the group membership query."
                  }
                ]
              },
              "RoleSearchMatching": {
                "allOf": [
                  {
                    "$ref": "#/$defs/__string"
                  },
                  {
                    "xml": {
                      "name": "roleSearchMatching"
                    },
                    "description": "The LDAP search filter used to find roles within the roleBase. The distinguished name of the user matched by userSearchMatching is substituted into the {0} placeholder in the search filter. The client's username is substituted into the {1} placeholder. For example, if you set this option to (member=uid={1})for the user janedoe, the search filter becomes (member=uid=janedoe) after string substitution. It matches all role entries that have a member attribute equal to uid=janedoe under the subtree selected by the roleBase."
                  }
                ]
              },
              "RoleSearchSubtree": {
                "allOf": [
                  {
                    "$ref": "#/$defs/__boolean"
                  },
                  {
                    "xml": {
                      "name": "roleSearchSubtree"
                    },
                    "description": "The directory search scope for the role. If set to true, scope is to search the entire subtree."
                  }
                ]
              },
              "ServiceAccountPassword": {
                "allOf": [
                  {
                    "$ref": "#/$defs/__string"
                  },
                  {
                    "xml": {
                      "name": "serviceAccountPassword"
                    },
                    "description": "Service account password. A service account is an account in your LDAP server that has access to initiate a connection. For example, cn=admin,dc=corp, dc=example,\n                  dc=com."
                  }
                ]
              },
              "ServiceAccountUsername": {
                "allOf": [
                  {
                    "$ref": "#/$defs/__string"
                  },
                  {
                    "xml": {
                      "name": "serviceAccountUsername"
                    },
                    "description": "Service account username. A service account is an account in your LDAP server that has access to initiate a connection. For example, cn=admin,dc=corp, dc=example,\n                  dc=com."
                  }
                ]
              },
              "UserBase": {
                "allOf": [
                  {
                    "$ref": "#/$defs/__string"
                  },
                  {
                    "xml": {
                      "name": "userBase"
                    },
                    "description": "Select a particular subtree of the directory information tree (DIT) to search for user entries. The subtree is specified by a DN, which specifies the base node of the subtree. For example, by setting this option to ou=Users,ou=corp, dc=corp,\n                  dc=example, dc=com, the search for user entries is restricted to the subtree beneath ou=Users, ou=corp, dc=corp, dc=example, dc=com."
                  }
                ]
              },
              "UserRoleName": {
                "allOf": [
                  {
                    "$ref": "#/$defs/__string"
                  },
                  {
                    "xml": {
                      "name": "userRoleName"
                    },
                    "description": "Specifies the name of the LDAP attribute for the user group membership."
                  }
                ]
              },
              "UserSearchMatching": {
                "allOf": [
                  {
                    "$ref": "#/$defs/__string"
                  },
                  {
                    "xml": {
                      "name": "userSearchMatching"
                    },
                    "description": "The LDAP search filter used to find users within the userBase. The client's username is substituted into the {0} placeholder in the search filter. For example, if this option is set to (uid={0}) and the received username is janedoe, the search filter becomes (uid=janedoe) after string substitution. It will result in matching an entry like uid=janedoe, ou=Users,ou=corp, dc=corp, dc=example,\n                  dc=com."
                  }
                ]
              },
              "UserSearchSubtree": {
                "allOf": [
                  {
                    "$ref": "#/$defs/__boolean"
                  },
                  {
                    "xml": {
                      "name": "userSearchSubtree"
                    },
                    "description": "The directory search scope for the user. If set to true, scope is to search the entire subtree."
                  }
                ]
              }
            }
          },
          "logs": {
            "description": "The list of information about logs to be enabled for the specified broker.",
            "type": "object",
            "properties": {
              "Audit": {
                "allOf": [
                  {
                    "$ref": "#/$defs/__boolean"
                  },
                  {
                    "xml": {
                      "name": "audit"
                    },
                    "description": "Enables audit logging. Every user management action made using JMX or the ActiveMQ Web Console is logged. Does not apply to RabbitMQ brokers."
                  }
                ]
              },
              "General": {
                "allOf": [
                  {
                    "$ref": "#/$defs/__boolean"
                  },
                  {
                    "xml": {
                      "name": "general"
                    },
                    "description": "Enables general logging."
                  }
                ]
              }
            }
          },
          "maintenanceWindowStartTime": {
            "description": "The scheduled time period relative to UTC during which Amazon MQ begins to apply pending updates or patches to the broker.",
            "type": "object",
            "properties": {
              "DayOfWeek": {
                "allOf": [
                  {
                    "$ref": "#/$defs/DayOfWeek"
                  },
                  {
                    "xml": {
                      "name": "dayOfWeek"
                    },
                    "description": "Required. The day of the week."
                  }
                ]
              },
              "TimeOfDay": {
                "allOf": [
                  {
                    "$ref": "#/$defs/__string"
                  },
                  {
                    "xml": {
                      "name": "timeOfDay"
                    },
                    "description": "Required. The time, in 24-hour format."
                  }
                ]
              },
              "TimeZone": {
                "allOf": [
                  {
                    "$ref": "#/$defs/__string"
                  },
                  {
                    "xml": {
                      "name": "timeZone"
                    },
                    "description": "The time zone, UTC by default, in either the Country/City format, or the UTC offset format."
                  }
                ]
              }
            }
          },
          "securityGroups": {
            "description": "The list of security groups (1 minimum, 5 maximum) that authorizes connections to brokers.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/__string"
            }
          },
          "dataReplicationMode": {
            "description": "Specifies whether a broker is a part of a data replication pair.",
            "type": "string",
            "enum": [
              "NONE",
              "CRDR"
            ]
          }
        }
      }
    },
    "required": [
      "broker-id",
      "body"
    ],
    "$defs": {
      "__string": {
        "type": "string"
      },
      "__integer": {
        "type": "integer"
      },
      "__listOf__string": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/__string"
        }
      },
      "__boolean": {
        "type": "boolean"
      },
      "DayOfWeek": {
        "type": "string",
        "enum": [
          "MONDAY",
          "TUESDAY",
          "WEDNESDAY",
          "THURSDAY",
          "FRIDAY",
          "SATURDAY",
          "SUNDAY"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "http://mq.us-east-1.amazonaws.com/v1/brokers/{broker-id}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**AuthenticationStrategy**",
            "**AutoMinorVersionUpgrade**",
            "**BrokerId**",
            "**Configuration**",
            "**EngineVersion**",
            "**HostInstanceType**",
            "**LdapServerMetadata**",
            "**Logs**",
            "**MaintenanceWindowStartTime**",
            "**SecurityGroups**",
            "**DataReplicationMetadata**",
            "**DataReplicationMode**",
            "**PendingDataReplicationMetadata**",
            "**PendingDataReplicationMode**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
