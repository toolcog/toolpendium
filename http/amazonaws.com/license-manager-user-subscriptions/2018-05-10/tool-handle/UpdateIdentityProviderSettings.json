{
  "name": "UpdateIdentityProviderSettings",
  "description": "Updates additional product configuration settings for the registered identity provider.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "IdentityProvider",
          "Product",
          "UpdateSettings"
        ],
        "properties": {
          "IdentityProvider": {
            "description": "Details about an identity provider.",
            "type": "object",
            "properties": {
              "ActiveDirectoryIdentityProvider": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ActiveDirectoryIdentityProvider"
                  },
                  {
                    "description": "An object that details an Active Directory identity provider."
                  }
                ]
              }
            }
          },
          "Product": {
            "description": "The name of the user-based subscription product.",
            "type": "string"
          },
          "UpdateSettings": {
            "description": "Updates the registered identity providerâ€™s product related configuration settings such as the subnets to provision VPC endpoints.",
            "type": "object",
            "properties": {
              "AddSubnets": {
                "allOf": [
                  {
                    "$ref": "#/$defs/Subnets"
                  },
                  {
                    "description": "The ID of one or more subnets in which License Manager will create a VPC endpoint for products that require connectivity to activation servers."
                  }
                ]
              },
              "RemoveSubnets": {
                "allOf": [
                  {
                    "$ref": "#/$defs/Subnets"
                  },
                  {
                    "description": "The ID of one or more subnets to remove."
                  }
                ]
              },
              "SecurityGroupId": {
                "allOf": [
                  {
                    "$ref": "#/$defs/SecurityGroup"
                  },
                  {
                    "description": "A security group ID that allows inbound TCP port 1688 communication between resources in your VPC and the VPC endpoints for activation servers."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "ActiveDirectoryIdentityProvider": {
        "type": "object",
        "properties": {
          "DirectoryId": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The directory ID for an Active Directory identity provider."
              }
            ]
          }
        },
        "description": "Details about an Active Directory identity provider."
      },
      "String": {
        "type": "string"
      },
      "Subnets": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Subnet"
        }
      },
      "Subnet": {
        "type": "string",
        "pattern": "subnet-[a-z0-9]{8,17}"
      },
      "SecurityGroup": {
        "type": "string",
        "pattern": "^sg-(([0-9a-z]{8})|([0-9a-z]{17}))$",
        "minLength": 5,
        "maxLength": 200
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://license-manager-user-subscriptions.us-east-1.amazonaws.com/identity-provider/UpdateIdentityProviderSettings"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**IdentityProviderSummary**: Describes an identity provider.",
              {
                "$ul": [
                  "**FailureMessage**",
                  "**IdentityProvider**",
                  "**Product**",
                  "**Settings**",
                  "**Status**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
