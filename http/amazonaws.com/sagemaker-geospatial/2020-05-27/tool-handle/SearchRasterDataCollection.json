{
  "name": "SearchRasterDataCollection",
  "description": "Allows you run image query on a specific raster data collection to get a list of the satellite imagery matching the selected filters.",
  "parameters": {
    "type": "object",
    "properties": {
      "NextToken": {
        "type": "string",
        "description": "Pagination token"
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "Arn",
          "RasterDataCollectionQuery"
        ],
        "properties": {
          "Arn": {
            "description": "The Amazon Resource Name (ARN) of the raster data collection.",
            "type": "string",
            "pattern": "^arn:aws[a-z-]{0,12}:sagemaker-geospatial:[a-z0-9-]{1,25}:[0-9]{12}:raster-data-collection/(public|premium|user)/[a-z0-9]{12,}$"
          },
          "NextToken": {
            "description": "If the previous response was truncated, you receive this token. Use it in your next request to receive the next set of results.",
            "type": "string",
            "minLength": 0,
            "maxLength": 8192,
            "format": "password"
          },
          "RasterDataCollectionQuery": {
            "description": "This is a RasterDataCollectionQueryInput containing AreaOfInterest, Time Range filter and Property filters.",
            "type": "object",
            "properties": {
              "AreaOfInterest": {
                "allOf": [
                  {
                    "$ref": "#/$defs/AreaOfInterest"
                  },
                  {
                    "description": "The Area of interest to be used in the search query."
                  }
                ]
              },
              "BandFilter": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringListInput"
                  },
                  {
                    "description": "The list of Bands to be displayed in the result for each item."
                  }
                ]
              },
              "PropertyFilters": {
                "allOf": [
                  {
                    "$ref": "#/$defs/PropertyFilters"
                  },
                  {
                    "description": "The Property Filters used in the search query."
                  }
                ]
              },
              "TimeRangeFilter": {
                "allOf": [
                  {
                    "$ref": "#/$defs/TimeRangeFilterInput"
                  },
                  {
                    "description": "The TimeRange Filter used in the search query."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "AreaOfInterest": {
        "type": "object",
        "properties": {
          "AreaOfInterestGeometry": {
            "allOf": [
              {
                "$ref": "#/$defs/AreaOfInterestGeometry"
              },
              {
                "description": "A GeoJSON object representing the geographic extent in the coordinate space."
              }
            ]
          }
        },
        "description": "The geographic extent of the Earth Observation job."
      },
      "AreaOfInterestGeometry": {
        "type": "object",
        "properties": {
          "MultiPolygonGeometry": {
            "allOf": [
              {
                "$ref": "#/$defs/MultiPolygonGeometryInput"
              },
              {
                "description": "The structure representing the MultiPolygon Geometry."
              }
            ]
          },
          "PolygonGeometry": {
            "allOf": [
              {
                "$ref": "#/$defs/PolygonGeometryInput"
              },
              {
                "description": "The structure representing Polygon Geometry."
              }
            ]
          }
        },
        "description": "A GeoJSON object representing the geographic extent in the coordinate space."
      },
      "MultiPolygonGeometryInput": {
        "type": "object",
        "required": [
          "Coordinates"
        ],
        "properties": {
          "Coordinates": {
            "allOf": [
              {
                "$ref": "#/$defs/LinearRingsList"
              },
              {
                "description": "The coordinates of the multipolygon geometry."
              }
            ]
          }
        },
        "description": "The structure representing Polygon Geometry based on the <a href=\"https://www.rfc-editor.org/rfc/rfc7946#section-3.1.6\">GeoJson spec</a>."
      },
      "LinearRingsList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/LinearRings"
        }
      },
      "LinearRings": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/LinearRing"
        },
        "minItems": 1
      },
      "LinearRing": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Position"
        },
        "minItems": 4
      },
      "Position": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Double"
        },
        "minItems": 2,
        "maxItems": 2
      },
      "Double": {
        "type": "number",
        "format": "double"
      },
      "PolygonGeometryInput": {
        "type": "object",
        "required": [
          "Coordinates"
        ],
        "properties": {
          "Coordinates": {
            "allOf": [
              {
                "$ref": "#/$defs/LinearRings"
              },
              {
                "description": "Coordinates representing a Polygon based on the <a href=\"https://www.rfc-editor.org/rfc/rfc7946#section-3.1.6\">GeoJson spec</a>."
              }
            ]
          }
        },
        "description": "The structure representing Polygon Geometry based on the <a href=\"https://www.rfc-editor.org/rfc/rfc7946#section-3.1.6\">GeoJson spec</a>."
      },
      "StringListInput": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/String"
        },
        "minItems": 1
      },
      "String": {
        "type": "string"
      },
      "PropertyFilters": {
        "type": "object",
        "properties": {
          "LogicalOperator": {
            "allOf": [
              {
                "$ref": "#/$defs/LogicalOperator"
              },
              {
                "description": "The Logical Operator used to combine the Property Filters."
              }
            ]
          },
          "Properties": {
            "allOf": [
              {
                "$ref": "#/$defs/PropertyFiltersList"
              },
              {
                "description": "A list of Property Filters."
              }
            ]
          }
        },
        "description": "A list of PropertyFilter objects."
      },
      "LogicalOperator": {
        "type": "string",
        "enum": [
          "AND"
        ]
      },
      "PropertyFiltersList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/PropertyFilter"
        }
      },
      "PropertyFilter": {
        "type": "object",
        "required": [
          "Property"
        ],
        "properties": {
          "Property": {
            "allOf": [
              {
                "$ref": "#/$defs/Property"
              },
              {
                "description": "Represents a single property to match with when searching a raster data collection."
              }
            ]
          }
        },
        "description": "The structure representing a single PropertyFilter."
      },
      "Property": {
        "type": "object",
        "properties": {
          "EoCloudCover": {
            "allOf": [
              {
                "$ref": "#/$defs/EoCloudCoverInput"
              },
              {
                "description": "The structure representing EoCloudCover property filter containing a lower bound and upper bound."
              }
            ]
          },
          "LandsatCloudCoverLand": {
            "allOf": [
              {
                "$ref": "#/$defs/LandsatCloudCoverLandInput"
              },
              {
                "description": "The structure representing Land Cloud Cover property filter for Landsat collection containing a lower bound and upper bound."
              }
            ]
          },
          "Platform": {
            "allOf": [
              {
                "$ref": "#/$defs/PlatformInput"
              },
              {
                "description": "The structure representing Platform property filter consisting of value and comparison operator."
              }
            ]
          },
          "ViewOffNadir": {
            "allOf": [
              {
                "$ref": "#/$defs/ViewOffNadirInput"
              },
              {
                "description": "The structure representing ViewOffNadir property filter containing a lower bound and upper bound."
              }
            ]
          },
          "ViewSunAzimuth": {
            "allOf": [
              {
                "$ref": "#/$defs/ViewSunAzimuthInput"
              },
              {
                "description": "The structure representing ViewSunAzimuth property filter containing a lower bound and upper bound."
              }
            ]
          },
          "ViewSunElevation": {
            "allOf": [
              {
                "$ref": "#/$defs/ViewSunElevationInput"
              },
              {
                "description": "The structure representing ViewSunElevation property filter containing a lower bound and upper bound."
              }
            ]
          }
        },
        "description": "Represents a single searchable property to search on."
      },
      "EoCloudCoverInput": {
        "type": "object",
        "required": [
          "LowerBound",
          "UpperBound"
        ],
        "properties": {
          "LowerBound": {
            "allOf": [
              {
                "$ref": "#/$defs/Float"
              },
              {
                "description": "Lower bound for EoCloudCover."
              }
            ]
          },
          "UpperBound": {
            "allOf": [
              {
                "$ref": "#/$defs/Float"
              },
              {
                "description": "Upper bound for EoCloudCover."
              }
            ]
          }
        },
        "description": "The structure representing the EoCloudCover filter."
      },
      "Float": {
        "type": "number",
        "format": "float"
      },
      "LandsatCloudCoverLandInput": {
        "type": "object",
        "required": [
          "LowerBound",
          "UpperBound"
        ],
        "properties": {
          "LowerBound": {
            "allOf": [
              {
                "$ref": "#/$defs/Float"
              },
              {
                "description": "The minimum value for Land Cloud Cover property filter. This will filter items having Land Cloud Cover greater than or equal to this value."
              }
            ]
          },
          "UpperBound": {
            "allOf": [
              {
                "$ref": "#/$defs/Float"
              },
              {
                "description": "The maximum value for Land Cloud Cover property filter. This will filter items having Land Cloud Cover less than or equal to this value."
              }
            ]
          }
        },
        "description": "The structure representing Land Cloud Cover property for Landsat data collection."
      },
      "PlatformInput": {
        "type": "object",
        "required": [
          "Value"
        ],
        "properties": {
          "ComparisonOperator": {
            "allOf": [
              {
                "$ref": "#/$defs/ComparisonOperator"
              },
              {
                "description": "The ComparisonOperator to use with PlatformInput."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The value of the platform."
              }
            ]
          }
        },
        "description": "The input structure for specifying Platform. Platform refers to the unique name of the specific platform the instrument is attached to. For satellites it is the name of the satellite, eg. landsat-8 (Landsat-8), sentinel-2a."
      },
      "ComparisonOperator": {
        "type": "string",
        "enum": [
          "EQUALS",
          "NOT_EQUALS",
          "STARTS_WITH"
        ]
      },
      "ViewOffNadirInput": {
        "type": "object",
        "required": [
          "LowerBound",
          "UpperBound"
        ],
        "properties": {
          "LowerBound": {
            "allOf": [
              {
                "$ref": "#/$defs/Float"
              },
              {
                "description": "The minimum value for ViewOffNadir property filter. This filters items having ViewOffNadir greater than or equal to this value. "
              }
            ]
          },
          "UpperBound": {
            "allOf": [
              {
                "$ref": "#/$defs/Float"
              },
              {
                "description": "The maximum value for ViewOffNadir property filter. This filters items having ViewOffNadir lesser than or equal to this value."
              }
            ]
          }
        },
        "description": "The input structure for specifying ViewOffNadir property filter. ViewOffNadir refers to the angle from the sensor between nadir (straight down) and the scene center. Measured in degrees (0-90)."
      },
      "ViewSunAzimuthInput": {
        "type": "object",
        "required": [
          "LowerBound",
          "UpperBound"
        ],
        "properties": {
          "LowerBound": {
            "allOf": [
              {
                "$ref": "#/$defs/Float"
              },
              {
                "description": "The minimum value for ViewSunAzimuth property filter. This filters items having ViewSunAzimuth greater than or equal to this value."
              }
            ]
          },
          "UpperBound": {
            "allOf": [
              {
                "$ref": "#/$defs/Float"
              },
              {
                "description": "The maximum value for ViewSunAzimuth property filter. This filters items having ViewSunAzimuth lesser than or equal to this value."
              }
            ]
          }
        },
        "description": "The input structure for specifying ViewSunAzimuth property filter. ViewSunAzimuth refers to the Sun azimuth angle. From the scene center point on the ground, this is the angle between truth north and the sun. Measured clockwise in degrees (0-360)."
      },
      "ViewSunElevationInput": {
        "type": "object",
        "required": [
          "LowerBound",
          "UpperBound"
        ],
        "properties": {
          "LowerBound": {
            "allOf": [
              {
                "$ref": "#/$defs/Float"
              },
              {
                "description": "The lower bound to view the sun elevation."
              }
            ]
          },
          "UpperBound": {
            "allOf": [
              {
                "$ref": "#/$defs/Float"
              },
              {
                "description": "The upper bound to view the sun elevation."
              }
            ]
          }
        },
        "description": "The input structure for specifying ViewSunElevation angle property filter. "
      },
      "TimeRangeFilterInput": {
        "type": "object",
        "required": [
          "EndTime",
          "StartTime"
        ],
        "properties": {
          "EndTime": {
            "allOf": [
              {
                "$ref": "#/$defs/Timestamp"
              },
              {
                "description": "The end time for the time-range filter."
              }
            ]
          },
          "StartTime": {
            "allOf": [
              {
                "$ref": "#/$defs/Timestamp"
              },
              {
                "description": "The start time for the time-range filter."
              }
            ]
          }
        },
        "description": "The input for the time-range filter."
      },
      "Timestamp": {
        "type": "string",
        "format": "date-time"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://sagemaker-geospatial.us-east-1.amazonaws.com/search-raster-data-collection{?NextToken}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**ApproximateResultCount**",
            "**Items**",
            "**NextToken**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
