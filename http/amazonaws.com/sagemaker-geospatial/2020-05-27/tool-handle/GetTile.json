{
  "name": "GetTile",
  "description": "Gets a web mercator tile for the given Earth Observation job.",
  "parameters": {
    "type": "object",
    "properties": {
      "Arn": {
        "type": "string",
        "pattern": "^arn:aws[a-z-]{0,12}:sagemaker-geospatial:[a-z0-9-]{1,25}:[0-9]{12}:earth-observation-job/[a-z0-9]{12,}$",
        "description": "The Amazon Resource Name (ARN) of the tile operation."
      },
      "ExecutionRoleArn": {
        "type": "string",
        "pattern": "^arn:(aws[a-z-]*):iam::([0-9]{12}):role/[a-zA-Z0-9+=,.@_/-]+$",
        "minLength": 20,
        "maxLength": 2048,
        "description": "The Amazon Resource Name (ARN) of the IAM role that you specify."
      },
      "ImageAssets": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/String"
        },
        "minItems": 1,
        "description": "The particular assets or bands to tile."
      },
      "ImageMask": {
        "type": "boolean",
        "description": "Determines whether or not to return a valid data mask."
      },
      "OutputDataType": {
        "type": "string",
        "enum": [
          "INT32",
          "FLOAT32",
          "INT16",
          "FLOAT64",
          "UINT16"
        ],
        "description": "The output data type of the tile operation."
      },
      "OutputFormat": {
        "type": "string",
        "description": "The data format of the output tile. The formats include .npy, .png and .jpg."
      },
      "PropertyFilters": {
        "type": "string",
        "description": "Property filters for the imagery to tile."
      },
      "Target": {
        "type": "string",
        "enum": [
          "INPUT",
          "OUTPUT"
        ],
        "description": "Determines what part of the Earth Observation job to tile. 'INPUT' or 'OUTPUT' are the valid options."
      },
      "TimeRangeFilter": {
        "type": "string",
        "description": "Time range filter applied to imagery to find the images to tile."
      },
      "x": {
        "type": "integer",
        "description": "The x coordinate of the tile input."
      },
      "y": {
        "type": "integer",
        "description": "The y coordinate of the tile input."
      },
      "z": {
        "type": "integer",
        "description": "The z coordinate of the tile input."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      }
    },
    "required": [
      "Arn",
      "ImageAssets",
      "Target",
      "x",
      "y",
      "z"
    ],
    "$defs": {
      "String": {
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "http://sagemaker-geospatial.us-east-1.amazonaws.com/tile/{z}/{x}/{y}#Arn&ImageAssets&Target{?Arn,ExecutionRoleArn,ImageAssets,ImageMask,OutputDataType,OutputFormat,PropertyFilters,Target,TimeRangeFilter}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**BinaryFile**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
