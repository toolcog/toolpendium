{
  "name": "SendProjectSessionAction",
  "description": "Performs a recipe step within an interactive DataBrew session that's currently open.",
  "parameters": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "description": "The name of the project to apply the action to."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "properties": {
          "Preview": {
            "description": "If true, the result of the recipe step will be returned, but not applied.",
            "type": "boolean"
          },
          "RecipeStep": {
            "description": "Represents a single step from a DataBrew recipe to be performed.",
            "type": "object",
            "properties": {
              "Action": {
                "allOf": [
                  {
                    "$ref": "#/$defs/RecipeAction"
                  },
                  {
                    "description": "The particular action to be performed in the recipe step."
                  }
                ]
              },
              "ConditionExpressions": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ConditionExpressionList"
                  },
                  {
                    "description": "<p>One or more conditions that must be met for the recipe step to succeed.</p> <note> <p>All of the conditions in the array must be met. In other words, all of the conditions must be combined using a logical AND operation.</p> </note>"
                  }
                ]
              }
            }
          },
          "StepIndex": {
            "description": "The index from which to preview a step. This index is used to preview the result of steps that have already been applied, so that the resulting view frame is from earlier in the view frame stack.",
            "type": "integer",
            "minimum": 0
          },
          "ClientSessionId": {
            "description": "A unique identifier for an interactive session that's currently open and ready for work. The action will be performed on this session.",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
            "minLength": 1,
            "maxLength": 255,
            "format": "password"
          },
          "ViewFrame": {
            "description": "Represents the data being transformed during an action.",
            "type": "object",
            "properties": {
              "StartColumnIndex": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StartColumnIndex"
                  },
                  {
                    "description": "The starting index for the range of columns to return in the view frame."
                  }
                ]
              },
              "ColumnRange": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ColumnRange"
                  },
                  {
                    "description": "The number of columns to include in the view frame, beginning with the <code>StartColumnIndex</code> value and ignoring any columns in the <code>HiddenColumns</code> list."
                  }
                ]
              },
              "HiddenColumns": {
                "allOf": [
                  {
                    "$ref": "#/$defs/HiddenColumnList"
                  },
                  {
                    "description": "A list of columns to hide in the view frame."
                  }
                ]
              },
              "StartRowIndex": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StartRowIndex"
                  },
                  {
                    "description": "The starting index for the range of rows to return in the view frame."
                  }
                ]
              },
              "RowRange": {
                "allOf": [
                  {
                    "$ref": "#/$defs/RowRange"
                  },
                  {
                    "description": "The number of rows to include in the view frame, beginning with the <code>StartRowIndex</code> value."
                  }
                ]
              },
              "Analytics": {
                "allOf": [
                  {
                    "$ref": "#/$defs/AnalyticsMode"
                  },
                  {
                    "description": "Controls if analytics computation is enabled or disabled. Enabled by default."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "required": [
      "name",
      "body"
    ],
    "$defs": {
      "RecipeAction": {
        "type": "object",
        "required": [
          "Operation"
        ],
        "properties": {
          "Operation": {
            "allOf": [
              {
                "$ref": "#/$defs/Operation"
              },
              {
                "description": "The name of a valid DataBrew transformation to be performed on the data."
              }
            ]
          },
          "Parameters": {
            "allOf": [
              {
                "$ref": "#/$defs/ParameterMap"
              },
              {
                "description": "Contextual parameters for the transformation."
              }
            ]
          }
        },
        "description": "Represents a transformation and associated parameters that are used to apply a change to a DataBrew dataset. For more information, see <a href=\"https://docs.aws.amazon.com/databrew/latest/dg/recipe-actions-reference.html\">Recipe actions reference</a>."
      },
      "Operation": {
        "type": "string",
        "pattern": "^[A-Z\\_]+$",
        "minLength": 1,
        "maxLength": 128
      },
      "ParameterMap": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/ParameterValue"
        }
      },
      "ParameterValue": {
        "type": "string",
        "minLength": 1,
        "maxLength": 32768
      },
      "ConditionExpressionList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ConditionExpression"
        }
      },
      "ConditionExpression": {
        "type": "object",
        "required": [
          "Condition",
          "TargetColumn"
        ],
        "properties": {
          "Condition": {
            "allOf": [
              {
                "$ref": "#/$defs/Condition"
              },
              {
                "description": "A specific condition to apply to a recipe action. For more information, see <a href=\"https://docs.aws.amazon.com/databrew/latest/dg/recipes.html#recipes.structure\">Recipe structure</a> in the <i>Glue DataBrew Developer Guide</i>."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/ConditionValue"
              },
              {
                "description": "A value that the condition must evaluate to for the condition to succeed."
              }
            ]
          },
          "TargetColumn": {
            "allOf": [
              {
                "$ref": "#/$defs/TargetColumn"
              },
              {
                "description": "A column to apply this condition to."
              }
            ]
          }
        },
        "description": "<p>Represents an individual condition that evaluates to true or false.</p> <p>Conditions are used with recipe actions. The action is only performed for column values where the condition evaluates to true.</p> <p>If a recipe requires more than one condition, then the recipe must specify multiple <code>ConditionExpression</code> elements. Each condition is applied to the rows in a dataset first, before the recipe action is performed.</p>"
      },
      "Condition": {
        "type": "string",
        "pattern": "^[A-Z\\_]+$",
        "minLength": 1,
        "maxLength": 128
      },
      "ConditionValue": {
        "type": "string",
        "maxLength": 1024
      },
      "TargetColumn": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1024
      },
      "StartColumnIndex": {
        "type": "integer",
        "minimum": 0
      },
      "ColumnRange": {
        "type": "integer",
        "minimum": 0,
        "maximum": 20
      },
      "HiddenColumnList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ColumnName"
        }
      },
      "ColumnName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255
      },
      "StartRowIndex": {
        "type": "integer",
        "minimum": 0
      },
      "RowRange": {
        "type": "integer"
      },
      "AnalyticsMode": {
        "type": "string",
        "enum": [
          "ENABLE",
          "DISABLE"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "http://databrew.us-east-1.amazonaws.com/projects/{name}/sendProjectSessionAction"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Result**",
            "**Name**",
            "**ActionId**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
