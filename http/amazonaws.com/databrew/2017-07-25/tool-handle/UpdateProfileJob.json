{
  "name": "UpdateProfileJob",
  "description": "Modifies the definition of an existing profile job.",
  "parameters": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "minLength": 1,
        "maxLength": 240,
        "description": "The name of the job to be updated."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "OutputLocation",
          "RoleArn"
        ],
        "properties": {
          "Configuration": {
            "description": "Configuration for profile jobs. Configuration can be used to select columns, do evaluations, and override default parameters of evaluations. When configuration is undefined, the profile job will apply default settings to all supported columns. ",
            "type": "object",
            "properties": {
              "DatasetStatisticsConfiguration": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StatisticsConfiguration"
                  },
                  {
                    "description": "Configuration for inter-column evaluations. Configuration can be used to select evaluations and override parameters of evaluations. When configuration is undefined, the profile job will run all supported inter-column evaluations. "
                  }
                ]
              },
              "ProfileColumns": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ColumnSelectorList"
                  },
                  {
                    "description": "List of column selectors. ProfileColumns can be used to select columns from the dataset. When ProfileColumns is undefined, the profile job will profile all supported columns. "
                  }
                ]
              },
              "ColumnStatisticsConfigurations": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ColumnStatisticsConfigurationList"
                  },
                  {
                    "description": "List of configurations for column evaluations. ColumnStatisticsConfigurations are used to select evaluations and override parameters of evaluations for particular columns. When ColumnStatisticsConfigurations is undefined, the profile job will profile all supported columns and run all supported evaluations. "
                  }
                ]
              },
              "EntityDetectorConfiguration": {
                "allOf": [
                  {
                    "$ref": "#/$defs/EntityDetectorConfiguration"
                  },
                  {
                    "description": "Configuration of entity detection for a profile job. When undefined, entity detection is disabled."
                  }
                ]
              }
            }
          },
          "EncryptionKeyArn": {
            "description": "The Amazon Resource Name (ARN) of an encryption key that is used to protect the job.",
            "type": "string",
            "minLength": 20,
            "maxLength": 2048
          },
          "EncryptionMode": {
            "description": "<p>The encryption mode for the job, which can be one of the following:</p> <ul> <li> <p> <code>SSE-KMS</code> - Server-side encryption with keys managed by KMS.</p> </li> <li> <p> <code>SSE-S3</code> - Server-side encryption with keys managed by Amazon S3.</p> </li> </ul>",
            "type": "string",
            "enum": [
              "SSE-KMS",
              "SSE-S3"
            ]
          },
          "LogSubscription": {
            "description": "Enables or disables Amazon CloudWatch logging for the job. If logging is enabled, CloudWatch writes one log stream for each job run.",
            "type": "string",
            "enum": [
              "ENABLE",
              "DISABLE"
            ]
          },
          "MaxCapacity": {
            "description": "The maximum number of compute nodes that DataBrew can use when the job processes data.",
            "type": "integer"
          },
          "MaxRetries": {
            "description": "The maximum number of times to retry the job after a job run fails.",
            "type": "integer",
            "minimum": 0
          },
          "OutputLocation": {
            "description": "Represents an Amazon S3 location (bucket name, bucket owner, and object key) where DataBrew can read input data, or write output from a job.",
            "type": "object",
            "properties": {
              "Bucket": {
                "allOf": [
                  {
                    "$ref": "#/$defs/Bucket"
                  },
                  {
                    "description": "The Amazon S3 bucket name."
                  }
                ]
              },
              "Key": {
                "allOf": [
                  {
                    "$ref": "#/$defs/Key"
                  },
                  {
                    "description": "The unique name of the object in the bucket."
                  }
                ]
              },
              "BucketOwner": {
                "allOf": [
                  {
                    "$ref": "#/$defs/BucketOwner"
                  },
                  {
                    "description": "The Amazon Web Services account ID of the bucket owner."
                  }
                ]
              }
            }
          },
          "ValidationConfigurations": {
            "description": "List of validation configurations that are applied to the profile job.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/ValidationConfiguration"
            },
            "minItems": 1
          },
          "RoleArn": {
            "description": "The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role to be assumed when DataBrew runs the job.",
            "type": "string",
            "minLength": 20,
            "maxLength": 2048
          },
          "Timeout": {
            "description": "The job's timeout in minutes. A job that attempts to run longer than this timeout period ends with a status of <code>TIMEOUT</code>.",
            "type": "integer",
            "minimum": 0
          },
          "JobSample": {
            "description": "A sample configuration for profile jobs only, which determines the number of rows on which the profile job is run. If a <code>JobSample</code> value isn't provided, the default is used. The default value is CUSTOM_ROWS for the mode parameter and 20,000 for the size parameter.",
            "type": "object",
            "properties": {
              "Mode": {
                "allOf": [
                  {
                    "$ref": "#/$defs/SampleMode"
                  },
                  {
                    "description": "<p>A value that determines whether the profile job is run on the entire dataset or a specified number of rows. This value must be one of the following:</p> <ul> <li> <p>FULL_DATASET - The profile job is run on the entire dataset.</p> </li> <li> <p>CUSTOM_ROWS - The profile job is run on the number of rows specified in the <code>Size</code> parameter.</p> </li> </ul>"
                  }
                ]
              },
              "Size": {
                "allOf": [
                  {
                    "$ref": "#/$defs/JobSize"
                  },
                  {
                    "description": "<p>The <code>Size</code> parameter is only required when the mode is CUSTOM_ROWS. The profile job is run on the specified number of rows. The maximum value for size is Long.MAX_VALUE.</p> <p>Long.MAX_VALUE = 9223372036854775807</p>"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "required": [
      "name",
      "body"
    ],
    "$defs": {
      "StatisticsConfiguration": {
        "type": "object",
        "properties": {
          "IncludedStatistics": {
            "allOf": [
              {
                "$ref": "#/$defs/StatisticList"
              },
              {
                "description": "List of included evaluations. When the list is undefined, all supported evaluations will be included."
              }
            ]
          },
          "Overrides": {
            "allOf": [
              {
                "$ref": "#/$defs/StatisticOverrideList"
              },
              {
                "description": "List of overrides for evaluations."
              }
            ]
          }
        },
        "description": "Configuration of evaluations for a profile job. This configuration can be used to select evaluations and override the parameters of selected evaluations. "
      },
      "StatisticList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Statistic"
        },
        "minItems": 1
      },
      "Statistic": {
        "type": "string",
        "pattern": "^[A-Z\\_]+$",
        "minLength": 1,
        "maxLength": 128
      },
      "StatisticOverrideList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/StatisticOverride"
        },
        "minItems": 1
      },
      "StatisticOverride": {
        "type": "object",
        "required": [
          "Statistic",
          "Parameters"
        ],
        "properties": {
          "Statistic": {
            "allOf": [
              {
                "$ref": "#/$defs/Statistic"
              },
              {
                "description": "The name of an evaluation"
              }
            ]
          },
          "Parameters": {
            "allOf": [
              {
                "$ref": "#/$defs/ParameterMap"
              },
              {
                "description": "A map that includes overrides of an evaluation’s parameters."
              }
            ]
          }
        },
        "description": "Override of a particular evaluation for a profile job. "
      },
      "ParameterMap": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/ParameterValue"
        }
      },
      "ParameterValue": {
        "type": "string",
        "minLength": 1,
        "maxLength": 32768
      },
      "ColumnSelectorList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ColumnSelector"
        },
        "minItems": 1
      },
      "ColumnSelector": {
        "type": "object",
        "properties": {
          "Regex": {
            "allOf": [
              {
                "$ref": "#/$defs/ColumnName"
              },
              {
                "description": "A regular expression for selecting a column from a dataset."
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/ColumnName"
              },
              {
                "description": "The name of a column from a dataset."
              }
            ]
          }
        },
        "description": "Selector of a column from a dataset for profile job configuration. One selector includes either a column name or a regular expression."
      },
      "ColumnName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255
      },
      "ColumnStatisticsConfigurationList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ColumnStatisticsConfiguration"
        },
        "minItems": 1
      },
      "ColumnStatisticsConfiguration": {
        "type": "object",
        "required": [
          "Statistics"
        ],
        "properties": {
          "Selectors": {
            "allOf": [
              {
                "$ref": "#/$defs/ColumnSelectorList"
              },
              {
                "description": "List of column selectors. Selectors can be used to select columns from the dataset. When selectors are undefined, configuration will be applied to all supported columns. "
              }
            ]
          },
          "Statistics": {
            "allOf": [
              {
                "$ref": "#/$defs/StatisticsConfiguration"
              },
              {
                "description": "Configuration for evaluations. Statistics can be used to select evaluations and override parameters of evaluations. "
              }
            ]
          }
        },
        "description": "Configuration for column evaluations for a profile job. ColumnStatisticsConfiguration can be used to select evaluations and override parameters of evaluations for particular columns. "
      },
      "EntityDetectorConfiguration": {
        "type": "object",
        "required": [
          "EntityTypes"
        ],
        "properties": {
          "EntityTypes": {
            "allOf": [
              {
                "$ref": "#/$defs/EntityTypeList"
              },
              {
                "description": "<p>Entity types to detect. Can be any of the following:</p> <ul> <li> <p>USA_SSN</p> </li> <li> <p>EMAIL</p> </li> <li> <p>USA_ITIN</p> </li> <li> <p>USA_PASSPORT_NUMBER</p> </li> <li> <p>PHONE_NUMBER</p> </li> <li> <p>USA_DRIVING_LICENSE</p> </li> <li> <p>BANK_ACCOUNT</p> </li> <li> <p>CREDIT_CARD</p> </li> <li> <p>IP_ADDRESS</p> </li> <li> <p>MAC_ADDRESS</p> </li> <li> <p>USA_DEA_NUMBER</p> </li> <li> <p>USA_HCPCS_CODE</p> </li> <li> <p>USA_NATIONAL_PROVIDER_IDENTIFIER</p> </li> <li> <p>USA_NATIONAL_DRUG_CODE</p> </li> <li> <p>USA_HEALTH_INSURANCE_CLAIM_NUMBER</p> </li> <li> <p>USA_MEDICARE_BENEFICIARY_IDENTIFIER</p> </li> <li> <p>USA_CPT_CODE</p> </li> <li> <p>PERSON_NAME</p> </li> <li> <p>DATE</p> </li> </ul> <p>The Entity type group USA_ALL is also supported, and includes all of the above entity types except PERSON_NAME and DATE.</p>"
              }
            ]
          },
          "AllowedStatistics": {
            "allOf": [
              {
                "$ref": "#/$defs/AllowedStatisticList"
              },
              {
                "description": "Configuration of statistics that are allowed to be run on columns that contain detected entities. When undefined, no statistics will be computed on columns that contain detected entities."
              }
            ]
          }
        },
        "description": "Configuration of entity detection for a profile job. When undefined, entity detection is disabled."
      },
      "EntityTypeList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/EntityType"
        },
        "minItems": 1
      },
      "EntityType": {
        "type": "string",
        "pattern": "^[A-Z_][A-Z\\\\d_]*$",
        "minLength": 1,
        "maxLength": 128
      },
      "AllowedStatisticList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/AllowedStatistics"
        },
        "minItems": 1
      },
      "AllowedStatistics": {
        "type": "object",
        "required": [
          "Statistics"
        ],
        "properties": {
          "Statistics": {
            "allOf": [
              {
                "$ref": "#/$defs/StatisticList"
              },
              {
                "description": "One or more column statistics to allow for columns that contain detected entities."
              }
            ]
          }
        },
        "description": "Configuration of statistics that are allowed to be run on columns that contain detected entities. When undefined, no statistics will be computed on columns that contain detected entities."
      },
      "Bucket": {
        "type": "string",
        "minLength": 3,
        "maxLength": 63
      },
      "Key": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1280
      },
      "BucketOwner": {
        "type": "string",
        "pattern": "^[0-9]{12}$",
        "minLength": 12,
        "maxLength": 12
      },
      "ValidationConfiguration": {
        "type": "object",
        "required": [
          "RulesetArn"
        ],
        "properties": {
          "RulesetArn": {
            "allOf": [
              {
                "$ref": "#/$defs/Arn"
              },
              {
                "description": "The Amazon Resource Name (ARN) for the ruleset to be validated in the profile job. The TargetArn of the selected ruleset should be the same as the Amazon Resource Name (ARN) of the dataset that is associated with the profile job."
              }
            ]
          },
          "ValidationMode": {
            "allOf": [
              {
                "$ref": "#/$defs/ValidationMode"
              },
              {
                "description": "Mode of data quality validation. Default mode is “CHECK_ALL” which verifies all rules defined in the selected ruleset."
              }
            ]
          }
        },
        "description": "Configuration for data quality validation. Used to select the Rulesets and Validation Mode to be used in the profile job. When ValidationConfiguration is null, the profile job will run without data quality validation."
      },
      "Arn": {
        "type": "string",
        "minLength": 20,
        "maxLength": 2048
      },
      "ValidationMode": {
        "type": "string",
        "enum": [
          "CHECK_ALL"
        ]
      },
      "SampleMode": {
        "type": "string",
        "enum": [
          "FULL_DATASET",
          "CUSTOM_ROWS"
        ]
      },
      "JobSize": {
        "type": "integer"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "http://databrew.us-east-1.amazonaws.com/profileJobs/{name}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Name**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
