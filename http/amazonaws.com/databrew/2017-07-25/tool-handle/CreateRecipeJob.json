{
  "name": "CreateRecipeJob",
  "description": "Creates a new job to transform input data, using steps defined in an existing Glue DataBrew recipe",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "Name",
          "RoleArn"
        ],
        "properties": {
          "DatasetName": {
            "description": "The name of the dataset that this job processes.",
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "EncryptionKeyArn": {
            "description": "The Amazon Resource Name (ARN) of an encryption key that is used to protect the job.",
            "type": "string",
            "minLength": 20,
            "maxLength": 2048
          },
          "EncryptionMode": {
            "description": "<p>The encryption mode for the job, which can be one of the following:</p> <ul> <li> <p> <code>SSE-KMS</code> - Server-side encryption with keys managed by KMS.</p> </li> <li> <p> <code>SSE-S3</code> - Server-side encryption with keys managed by Amazon S3.</p> </li> </ul>",
            "type": "string",
            "enum": [
              "SSE-KMS",
              "SSE-S3"
            ]
          },
          "Name": {
            "description": "A unique name for the job. Valid characters are alphanumeric (A-Z, a-z, 0-9), hyphen (-), period (.), and space.",
            "type": "string",
            "minLength": 1,
            "maxLength": 240
          },
          "LogSubscription": {
            "description": "Enables or disables Amazon CloudWatch logging for the job. If logging is enabled, CloudWatch writes one log stream for each job run.",
            "type": "string",
            "enum": [
              "ENABLE",
              "DISABLE"
            ]
          },
          "MaxCapacity": {
            "description": "The maximum number of nodes that DataBrew can consume when the job processes data.",
            "type": "integer"
          },
          "MaxRetries": {
            "description": "The maximum number of times to retry the job after a job run fails.",
            "type": "integer",
            "minimum": 0
          },
          "Outputs": {
            "description": "One or more artifacts that represent the output from running the job.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/Output"
            },
            "minItems": 1
          },
          "DataCatalogOutputs": {
            "description": "One or more artifacts that represent the Glue Data Catalog output from running the job.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/DataCatalogOutput"
            },
            "minItems": 1
          },
          "DatabaseOutputs": {
            "description": "Represents a list of JDBC database output objects which defines the output destination for a DataBrew recipe job to write to. ",
            "type": "array",
            "items": {
              "$ref": "#/$defs/DatabaseOutput"
            },
            "minItems": 1
          },
          "ProjectName": {
            "description": "Either the name of an existing project, or a combination of a recipe and a dataset to associate with the recipe.",
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "RecipeReference": {
            "description": "Represents the name and version of a DataBrew recipe.",
            "type": "object",
            "properties": {
              "Name": {
                "allOf": [
                  {
                    "$ref": "#/$defs/RecipeName"
                  },
                  {
                    "description": "The name of the recipe."
                  }
                ]
              },
              "RecipeVersion": {
                "allOf": [
                  {
                    "$ref": "#/$defs/RecipeVersion"
                  },
                  {
                    "description": "The identifier for the version for the recipe. "
                  }
                ]
              }
            }
          },
          "RoleArn": {
            "description": "The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role to be assumed when DataBrew runs the job.",
            "type": "string",
            "minLength": 20,
            "maxLength": 2048
          },
          "Tags": {
            "description": "Metadata tags to apply to this job.",
            "type": "object",
            "minProperties": 1,
            "maxProperties": 200,
            "additionalProperties": {
              "$ref": "#/$defs/TagValue"
            }
          },
          "Timeout": {
            "description": "The job's timeout in minutes. A job that attempts to run longer than this timeout period ends with a status of <code>TIMEOUT</code>.",
            "type": "integer",
            "minimum": 0
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "Output": {
        "type": "object",
        "required": [
          "Location"
        ],
        "properties": {
          "CompressionFormat": {
            "allOf": [
              {
                "$ref": "#/$defs/CompressionFormat"
              },
              {
                "description": "The compression algorithm used to compress the output text of the job."
              }
            ]
          },
          "Format": {
            "allOf": [
              {
                "$ref": "#/$defs/OutputFormat"
              },
              {
                "description": "The data format of the output of the job."
              }
            ]
          },
          "PartitionColumns": {
            "allOf": [
              {
                "$ref": "#/$defs/ColumnNameList"
              },
              {
                "description": "The names of one or more partition columns for the output of the job."
              }
            ]
          },
          "Location": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Location"
              },
              {
                "description": "The location in Amazon S3 where the job writes its output."
              }
            ]
          },
          "Overwrite": {
            "allOf": [
              {
                "$ref": "#/$defs/OverwriteOutput"
              },
              {
                "description": "A value that, if true, means that any data in the location specified for output is overwritten with new output."
              }
            ]
          },
          "FormatOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/OutputFormatOptions"
              },
              {
                "description": "Represents options that define how DataBrew formats job output files."
              }
            ]
          },
          "MaxOutputFiles": {
            "allOf": [
              {
                "$ref": "#/$defs/MaxOutputFiles"
              },
              {
                "description": "Maximum number of files to be generated by the job and written to the output folder. For output partitioned by column(s), the MaxOutputFiles value is the maximum number of files per partition."
              }
            ]
          }
        },
        "description": "Represents options that specify how and where in Amazon S3 DataBrew writes the output generated by recipe jobs or profile jobs."
      },
      "CompressionFormat": {
        "type": "string",
        "enum": [
          "GZIP",
          "LZ4",
          "SNAPPY",
          "BZIP2",
          "DEFLATE",
          "LZO",
          "BROTLI",
          "ZSTD",
          "ZLIB"
        ]
      },
      "OutputFormat": {
        "type": "string",
        "enum": [
          "CSV",
          "JSON",
          "PARQUET",
          "GLUEPARQUET",
          "AVRO",
          "ORC",
          "XML",
          "TABLEAUHYPER"
        ]
      },
      "ColumnNameList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ColumnName"
        },
        "maxItems": 200
      },
      "ColumnName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255
      },
      "S3Location": {
        "type": "object",
        "required": [
          "Bucket"
        ],
        "properties": {
          "Bucket": {
            "allOf": [
              {
                "$ref": "#/$defs/Bucket"
              },
              {
                "description": "The Amazon S3 bucket name."
              }
            ]
          },
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/Key"
              },
              {
                "description": "The unique name of the object in the bucket."
              }
            ]
          },
          "BucketOwner": {
            "allOf": [
              {
                "$ref": "#/$defs/BucketOwner"
              },
              {
                "description": "The Amazon Web Services account ID of the bucket owner."
              }
            ]
          }
        },
        "description": "Represents an Amazon S3 location (bucket name, bucket owner, and object key) where DataBrew can read input data, or write output from a job."
      },
      "Bucket": {
        "type": "string",
        "minLength": 3,
        "maxLength": 63
      },
      "Key": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1280
      },
      "BucketOwner": {
        "type": "string",
        "pattern": "^[0-9]{12}$",
        "minLength": 12,
        "maxLength": 12
      },
      "OverwriteOutput": {
        "type": "boolean"
      },
      "OutputFormatOptions": {
        "type": "object",
        "properties": {
          "Csv": {
            "allOf": [
              {
                "$ref": "#/$defs/CsvOutputOptions"
              },
              {
                "description": "Represents a set of options that define the structure of comma-separated value (CSV) job output."
              }
            ]
          }
        },
        "description": "Represents a set of options that define the structure of comma-separated (CSV) job output."
      },
      "CsvOutputOptions": {
        "type": "object",
        "properties": {
          "Delimiter": {
            "allOf": [
              {
                "$ref": "#/$defs/Delimiter"
              },
              {
                "description": "A single character that specifies the delimiter used to create CSV job output."
              }
            ]
          }
        },
        "description": "Represents a set of options that define how DataBrew will write a comma-separated value (CSV) file."
      },
      "Delimiter": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1
      },
      "MaxOutputFiles": {
        "type": "integer",
        "minimum": 1,
        "maximum": 999
      },
      "DataCatalogOutput": {
        "type": "object",
        "required": [
          "DatabaseName",
          "TableName"
        ],
        "properties": {
          "CatalogId": {
            "allOf": [
              {
                "$ref": "#/$defs/CatalogId"
              },
              {
                "description": "The unique identifier of the Amazon Web Services account that holds the Data Catalog that stores the data."
              }
            ]
          },
          "DatabaseName": {
            "allOf": [
              {
                "$ref": "#/$defs/DatabaseName"
              },
              {
                "description": "The name of a database in the Data Catalog."
              }
            ]
          },
          "TableName": {
            "allOf": [
              {
                "$ref": "#/$defs/TableName"
              },
              {
                "description": "The name of a table in the Data Catalog."
              }
            ]
          },
          "S3Options": {
            "allOf": [
              {
                "$ref": "#/$defs/S3TableOutputOptions"
              },
              {
                "description": "Represents options that specify how and where DataBrew writes the Amazon S3 output generated by recipe jobs."
              }
            ]
          },
          "DatabaseOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/DatabaseTableOutputOptions"
              },
              {
                "description": "Represents options that specify how and where DataBrew writes the database output generated by recipe jobs."
              }
            ]
          },
          "Overwrite": {
            "allOf": [
              {
                "$ref": "#/$defs/OverwriteOutput"
              },
              {
                "description": "A value that, if true, means that any data in the location specified for output is overwritten with new output. Not supported with DatabaseOptions."
              }
            ]
          }
        },
        "description": "Represents options that specify how and where in the Glue Data Catalog DataBrew writes the output generated by recipe jobs."
      },
      "CatalogId": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255
      },
      "DatabaseName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255
      },
      "TableName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255
      },
      "S3TableOutputOptions": {
        "type": "object",
        "required": [
          "Location"
        ],
        "properties": {
          "Location": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Location"
              },
              {
                "description": "Represents an Amazon S3 location (bucket name and object key) where DataBrew can write output from a job."
              }
            ]
          }
        },
        "description": "Represents options that specify how and where DataBrew writes the Amazon S3 output generated by recipe jobs."
      },
      "DatabaseTableOutputOptions": {
        "type": "object",
        "required": [
          "TableName"
        ],
        "properties": {
          "TempDirectory": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Location"
              },
              {
                "description": "Represents an Amazon S3 location (bucket name and object key) where DataBrew can store intermediate results."
              }
            ]
          },
          "TableName": {
            "allOf": [
              {
                "$ref": "#/$defs/DatabaseTableName"
              },
              {
                "description": "A prefix for the name of a table DataBrew will create in the database."
              }
            ]
          }
        },
        "description": "Represents options that specify how and where DataBrew writes the database output generated by recipe jobs."
      },
      "DatabaseTableName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255
      },
      "DatabaseOutput": {
        "type": "object",
        "required": [
          "GlueConnectionName",
          "DatabaseOptions"
        ],
        "properties": {
          "GlueConnectionName": {
            "allOf": [
              {
                "$ref": "#/$defs/GlueConnectionName"
              },
              {
                "description": "The Glue connection that stores the connection information for the target database."
              }
            ]
          },
          "DatabaseOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/DatabaseTableOutputOptions"
              },
              {
                "description": "Represents options that specify how and where DataBrew writes the database output generated by recipe jobs."
              }
            ]
          },
          "DatabaseOutputMode": {
            "allOf": [
              {
                "$ref": "#/$defs/DatabaseOutputMode"
              },
              {
                "description": "The output mode to write into the database. Currently supported option: NEW_TABLE."
              }
            ]
          }
        },
        "description": "Represents a JDBC database output object which defines the output destination for a DataBrew recipe job to write into."
      },
      "GlueConnectionName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255
      },
      "DatabaseOutputMode": {
        "type": "string",
        "enum": [
          "NEW_TABLE"
        ]
      },
      "RecipeName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255
      },
      "RecipeVersion": {
        "type": "string",
        "minLength": 1,
        "maxLength": 16
      },
      "TagValue": {
        "type": "string",
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://databrew.us-east-1.amazonaws.com/recipeJobs"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Name**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
