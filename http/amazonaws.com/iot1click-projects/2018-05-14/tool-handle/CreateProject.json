{
  "name": "CreateProject",
  "description": "Creates an empty project with a placement template. A project contains zero or more placements that adhere to the placement template defined in the project.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "projectName"
        ],
        "properties": {
          "projectName": {
            "description": "The name of the project to create.",
            "type": "string",
            "pattern": "^[0-9A-Za-z_-]+$",
            "minLength": 1,
            "maxLength": 128
          },
          "description": {
            "description": "An optional description for the project.",
            "type": "string",
            "minLength": 0,
            "maxLength": 500
          },
          "placementTemplate": {
            "description": "An object defining the template for a placement.",
            "type": "object",
            "properties": {
              "defaultAttributes": {
                "allOf": [
                  {
                    "$ref": "#/$defs/DefaultPlacementAttributeMap"
                  },
                  {
                    "description": "The default attributes (key/value pairs) to be applied to all placements using this template."
                  }
                ]
              },
              "deviceTemplates": {
                "allOf": [
                  {
                    "$ref": "#/$defs/DeviceTemplateMap"
                  },
                  {
                    "description": "An object specifying the <a>DeviceTemplate</a> for all placements using this (<a>PlacementTemplate</a>) template."
                  }
                ]
              }
            }
          },
          "tags": {
            "description": "Optional tags (metadata key/value pairs) to be associated with the project. For example, <code>{ {\"key1\": \"value1\", \"key2\": \"value2\"} }</code>. For more information, see <a href=\"https://aws.amazon.com/answers/account-management/aws-tagging-strategies/\">AWS Tagging Strategies</a>.",
            "type": "object",
            "minProperties": 1,
            "maxProperties": 50,
            "additionalProperties": {
              "$ref": "#/$defs/TagValue"
            }
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "DefaultPlacementAttributeMap": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/AttributeDefaultValue"
        }
      },
      "AttributeDefaultValue": {
        "type": "string",
        "maxLength": 800
      },
      "DeviceTemplateMap": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/DeviceTemplate"
        }
      },
      "DeviceTemplate": {
        "type": "object",
        "properties": {
          "deviceType": {
            "allOf": [
              {
                "$ref": "#/$defs/DeviceType"
              },
              {
                "description": "The device type, which currently must be <code>\"button\"</code>."
              }
            ]
          },
          "callbackOverrides": {
            "allOf": [
              {
                "$ref": "#/$defs/DeviceCallbackOverrideMap"
              },
              {
                "description": "An optional Lambda function to invoke instead of the default Lambda function provided by the placement template."
              }
            ]
          }
        },
        "description": "An object representing a device for a placement template (see <a>PlacementTemplate</a>)."
      },
      "DeviceType": {
        "type": "string",
        "maxLength": 128
      },
      "DeviceCallbackOverrideMap": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/DeviceCallbackValue"
        }
      },
      "DeviceCallbackValue": {
        "type": "string",
        "maxLength": 200
      },
      "TagValue": {
        "type": "string",
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://projects.iot1click.us-east-1.amazonaws.com/projects"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
