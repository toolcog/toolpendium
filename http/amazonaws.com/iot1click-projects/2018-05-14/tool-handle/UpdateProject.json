{
  "name": "UpdateProject",
  "description": "Updates a project associated with your AWS account and region. With the exception of device template names, you can pass just the values that need to be updated because the update request will change only the values that are provided. To clear a value, pass the empty string (i.e., <code>\"\"</code>).",
  "parameters": {
    "type": "object",
    "properties": {
      "projectName": {
        "type": "string",
        "pattern": "^[0-9A-Za-z_-]+$",
        "minLength": 1,
        "maxLength": 128,
        "description": "The name of the project to be updated."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "properties": {
          "description": {
            "description": "An optional user-defined description for the project.",
            "type": "string",
            "minLength": 0,
            "maxLength": 500
          },
          "placementTemplate": {
            "description": "An object defining the template for a placement.",
            "type": "object",
            "properties": {
              "defaultAttributes": {
                "allOf": [
                  {
                    "$ref": "#/$defs/DefaultPlacementAttributeMap"
                  },
                  {
                    "description": "The default attributes (key/value pairs) to be applied to all placements using this template."
                  }
                ]
              },
              "deviceTemplates": {
                "allOf": [
                  {
                    "$ref": "#/$defs/DeviceTemplateMap"
                  },
                  {
                    "description": "An object specifying the <a>DeviceTemplate</a> for all placements using this (<a>PlacementTemplate</a>) template."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "required": [
      "projectName",
      "body"
    ],
    "$defs": {
      "DefaultPlacementAttributeMap": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/AttributeDefaultValue"
        }
      },
      "AttributeDefaultValue": {
        "type": "string",
        "maxLength": 800
      },
      "DeviceTemplateMap": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/DeviceTemplate"
        }
      },
      "DeviceTemplate": {
        "type": "object",
        "properties": {
          "deviceType": {
            "allOf": [
              {
                "$ref": "#/$defs/DeviceType"
              },
              {
                "description": "The device type, which currently must be <code>\"button\"</code>."
              }
            ]
          },
          "callbackOverrides": {
            "allOf": [
              {
                "$ref": "#/$defs/DeviceCallbackOverrideMap"
              },
              {
                "description": "An optional Lambda function to invoke instead of the default Lambda function provided by the placement template."
              }
            ]
          }
        },
        "description": "An object representing a device for a placement template (see <a>PlacementTemplate</a>)."
      },
      "DeviceType": {
        "type": "string",
        "maxLength": 128
      },
      "DeviceCallbackOverrideMap": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/DeviceCallbackValue"
        }
      },
      "DeviceCallbackValue": {
        "type": "string",
        "maxLength": 200
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "http://projects.iot1click.us-east-1.amazonaws.com/projects/{projectName}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
