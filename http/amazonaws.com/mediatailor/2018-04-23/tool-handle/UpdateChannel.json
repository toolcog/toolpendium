{
  "name": "UpdateChannel",
  "description": "Updates a channel. For information about MediaTailor channels, see <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/channel-assembly-channels.html\">Working with channels</a> in the <i>MediaTailor User Guide</i>.",
  "parameters": {
    "type": "object",
    "properties": {
      "ChannelName": {
        "type": "string",
        "description": "The name of the channel."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "Outputs"
        ],
        "properties": {
          "FillerSlate": {
            "description": "Slate VOD source configuration.",
            "type": "object",
            "properties": {
              "SourceLocationName": {
                "allOf": [
                  {
                    "$ref": "#/$defs/__string"
                  },
                  {
                    "description": "The name of the source location where the slate VOD source is stored."
                  }
                ]
              },
              "VodSourceName": {
                "allOf": [
                  {
                    "$ref": "#/$defs/__string"
                  },
                  {
                    "description": "The slate VOD source name. The VOD source must already exist in a source location before it can be used for slate."
                  }
                ]
              }
            }
          },
          "Outputs": {
            "description": "An object that represents an object in the CreateChannel request.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/RequestOutputItem"
            }
          }
        }
      }
    },
    "required": [
      "ChannelName",
      "body"
    ],
    "$defs": {
      "__string": {
        "type": "string"
      },
      "RequestOutputItem": {
        "type": "object",
        "required": [
          "ManifestName",
          "SourceGroup"
        ],
        "properties": {
          "DashPlaylistSettings": {
            "allOf": [
              {
                "$ref": "#/$defs/DashPlaylistSettings"
              },
              {
                "description": "DASH manifest configuration parameters."
              }
            ]
          },
          "HlsPlaylistSettings": {
            "allOf": [
              {
                "$ref": "#/$defs/HlsPlaylistSettings"
              },
              {
                "description": "HLS playlist configuration parameters."
              }
            ]
          },
          "ManifestName": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "The name of the manifest for the channel. The name appears in the <code>PlaybackUrl</code>."
              }
            ]
          },
          "SourceGroup": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "A string used to match which <code>HttpPackageConfiguration</code> is used for each <code>VodSource</code>."
              }
            ]
          }
        },
        "description": "The output configuration for this channel."
      },
      "DashPlaylistSettings": {
        "type": "object",
        "properties": {
          "ManifestWindowSeconds": {
            "allOf": [
              {
                "$ref": "#/$defs/__integer"
              },
              {
                "description": "The total duration (in seconds) of each manifest. Minimum value: <code>30</code> seconds. Maximum value: <code>3600</code> seconds."
              }
            ]
          },
          "MinBufferTimeSeconds": {
            "allOf": [
              {
                "$ref": "#/$defs/__integer"
              },
              {
                "description": "Minimum amount of content (measured in seconds) that a player must keep available in the buffer. Minimum value: <code>2</code> seconds. Maximum value: <code>60</code> seconds."
              }
            ]
          },
          "MinUpdatePeriodSeconds": {
            "allOf": [
              {
                "$ref": "#/$defs/__integer"
              },
              {
                "description": "Minimum amount of time (in seconds) that the player should wait before requesting updates to the manifest. Minimum value: <code>2</code> seconds. Maximum value: <code>60</code> seconds."
              }
            ]
          },
          "SuggestedPresentationDelaySeconds": {
            "allOf": [
              {
                "$ref": "#/$defs/__integer"
              },
              {
                "description": "Amount of time (in seconds) that the player should be from the live point at the end of the manifest. Minimum value: <code>2</code> seconds. Maximum value: <code>60</code> seconds."
              }
            ]
          }
        },
        "description": "Dash manifest configuration parameters."
      },
      "__integer": {
        "type": "integer"
      },
      "HlsPlaylistSettings": {
        "type": "object",
        "properties": {
          "AdMarkupType": {
            "allOf": [
              {
                "$ref": "#/$defs/adMarkupTypes"
              },
              {
                "description": "Determines the type of SCTE 35 tags to use in ad markup. Specify <code>DATERANGE</code> to use <code>DATERANGE</code> tags (for live or VOD content). Specify <code>SCTE35_ENHANCED</code> to use <code>EXT-X-CUE-OUT</code> and <code>EXT-X-CUE-IN</code> tags (for VOD content only)."
              }
            ]
          },
          "ManifestWindowSeconds": {
            "allOf": [
              {
                "$ref": "#/$defs/__integer"
              },
              {
                "description": "The total duration (in seconds) of each manifest. Minimum value: <code>30</code> seconds. Maximum value: <code>3600</code> seconds."
              }
            ]
          }
        },
        "description": "HLS playlist configuration parameters."
      },
      "adMarkupTypes": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/AdMarkupType"
        }
      },
      "AdMarkupType": {
        "type": "string",
        "enum": [
          "DATERANGE",
          "SCTE35_ENHANCED"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "http://api.mediatailor.us-east-1.amazonaws.com/channel/{ChannelName}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Arn**",
            "**ChannelName**",
            "**ChannelState**",
            "**CreationTime**",
            "**FillerSlate**",
            "**LastModifiedTime**",
            "**Outputs**",
            "**PlaybackMode**",
            "**Tags**",
            "**Tier**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
