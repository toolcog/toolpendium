{
  "name": "UpdateProgram",
  "description": "Updates a program within a channel.",
  "parameters": {
    "type": "object",
    "properties": {
      "ChannelName": {
        "type": "string",
        "description": "The name of the channel for this Program."
      },
      "ProgramName": {
        "type": "string",
        "description": "The name of the Program."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "ScheduleConfiguration"
        ],
        "properties": {
          "AdBreaks": {
            "description": "The ad break configuration settings.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/AdBreak"
            }
          },
          "ScheduleConfiguration": {
            "description": "Schedule configuration parameters.",
            "type": "object",
            "properties": {
              "ClipRange": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ClipRange"
                  },
                  {
                    "description": "Program clip range configuration."
                  }
                ]
              },
              "Transition": {
                "allOf": [
                  {
                    "$ref": "#/$defs/UpdateProgramTransition"
                  },
                  {
                    "description": "Program transition configuration."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "required": [
      "ChannelName",
      "ProgramName",
      "body"
    ],
    "$defs": {
      "AdBreak": {
        "type": "object",
        "properties": {
          "AdBreakMetadata": {
            "allOf": [
              {
                "$ref": "#/$defs/AdBreakMetadataList"
              },
              {
                "description": "Defines a list of key/value pairs that MediaTailor generates within the <code>EXT-X-ASSET</code>tag for <code>SCTE35_ENHANCED</code> output."
              }
            ]
          },
          "MessageType": {
            "allOf": [
              {
                "$ref": "#/$defs/MessageType"
              },
              {
                "description": "The SCTE-35 ad insertion type. Accepted value: <code>SPLICE_INSERT</code>, <code>TIME_SIGNAL</code>."
              }
            ]
          },
          "OffsetMillis": {
            "allOf": [
              {
                "$ref": "#/$defs/__long"
              },
              {
                "description": "How long (in milliseconds) after the beginning of the program that an ad starts. This value must fall within 100ms of a segment boundary, otherwise the ad break will be skipped."
              }
            ]
          },
          "Slate": {
            "allOf": [
              {
                "$ref": "#/$defs/SlateSource"
              },
              {
                "description": "Ad break slate configuration."
              }
            ]
          },
          "SpliceInsertMessage": {
            "allOf": [
              {
                "$ref": "#/$defs/SpliceInsertMessage"
              },
              {
                "description": "This defines the SCTE-35 <code>splice_insert()</code> message inserted around the ad. For information about using <code>splice_insert()</code>, see the SCTE-35 specficiaiton, section 9.7.3.1."
              }
            ]
          },
          "TimeSignalMessage": {
            "allOf": [
              {
                "$ref": "#/$defs/TimeSignalMessage"
              },
              {
                "description": "<p>Defines the SCTE-35 <code>time_signal</code> message inserted around the ad.</p> <p>Programs on a channel's schedule can be configured with one or more ad breaks. You can attach a <code>splice_insert</code> SCTE-35 message to the ad break. This message provides basic metadata about the ad break.</p> <p>See section 9.7.4 of the 2022 SCTE-35 specification for more information.</p>"
              }
            ]
          }
        },
        "description": "Ad break configuration parameters."
      },
      "AdBreakMetadataList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/KeyValuePair"
        }
      },
      "KeyValuePair": {
        "type": "object",
        "required": [
          "Key",
          "Value"
        ],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "For <code>SCTE35_ENHANCED</code> output, defines a key. MediaTailor takes this key, and its associated value, and generates the key/value pair within the <code>EXT-X-ASSET</code>tag. If you specify a key, you must also specify a corresponding value."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "For <code>SCTE35_ENHANCED</code> output, defines a value. MediaTailor; takes this value, and its associated key, and generates the key/value pair within the <code>EXT-X-ASSET</code>tag. If you specify a value, you must also specify a corresponding key."
              }
            ]
          }
        },
        "description": "For <code>SCTE35_ENHANCED</code> output, defines a key and corresponding value. MediaTailor generates these pairs within the <code>EXT-X-ASSET</code>tag."
      },
      "String": {
        "type": "string"
      },
      "MessageType": {
        "type": "string",
        "enum": [
          "SPLICE_INSERT",
          "TIME_SIGNAL"
        ]
      },
      "__long": {
        "type": "integer"
      },
      "SlateSource": {
        "type": "object",
        "properties": {
          "SourceLocationName": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "The name of the source location where the slate VOD source is stored."
              }
            ]
          },
          "VodSourceName": {
            "allOf": [
              {
                "$ref": "#/$defs/__string"
              },
              {
                "description": "The slate VOD source name. The VOD source must already exist in a source location before it can be used for slate."
              }
            ]
          }
        },
        "description": "Slate VOD source configuration."
      },
      "__string": {
        "type": "string"
      },
      "SpliceInsertMessage": {
        "type": "object",
        "properties": {
          "AvailNum": {
            "allOf": [
              {
                "$ref": "#/$defs/__integer"
              },
              {
                "description": "This is written to <code>splice_insert.avail_num</code>, as defined in section 9.7.3.1 of the SCTE-35 specification. The default value is <code>0</code>. Values must be between <code>0</code> and <code>256</code>, inclusive."
              }
            ]
          },
          "AvailsExpected": {
            "allOf": [
              {
                "$ref": "#/$defs/__integer"
              },
              {
                "description": "This is written to <code>splice_insert.avails_expected</code>, as defined in section 9.7.3.1 of the SCTE-35 specification. The default value is <code>0</code>. Values must be between <code>0</code> and <code>256</code>, inclusive."
              }
            ]
          },
          "SpliceEventId": {
            "allOf": [
              {
                "$ref": "#/$defs/__integer"
              },
              {
                "description": "This is written to <code>splice_insert.splice_event_id</code>, as defined in section 9.7.3.1 of the SCTE-35 specification. The default value is <code>1</code>."
              }
            ]
          },
          "UniqueProgramId": {
            "allOf": [
              {
                "$ref": "#/$defs/__integer"
              },
              {
                "description": "This is written to <code>splice_insert.unique_program_id</code>, as defined in section 9.7.3.1 of the SCTE-35 specification. The default value is <code>0</code>. Values must be between <code>0</code> and <code>256</code>, inclusive."
              }
            ]
          }
        },
        "description": "Splice insert message configuration."
      },
      "__integer": {
        "type": "integer"
      },
      "TimeSignalMessage": {
        "type": "object",
        "properties": {
          "SegmentationDescriptors": {
            "allOf": [
              {
                "$ref": "#/$defs/SegmentationDescriptorList"
              },
              {
                "description": "The configurations for the SCTE-35 <code>segmentation_descriptor</code> message(s) sent with the <code>time_signal</code> message."
              }
            ]
          }
        },
        "description": "<p>The SCTE-35 <code>time_signal</code> message can be sent with one or more <code>segmentation_descriptor</code> messages. A <code>time_signal</code> message can be sent only if a single <code>segmentation_descriptor</code> message is sent.</p> <p>The <code>time_signal</code> message contains only the <code>splice_time</code> field which is constructed using a given presentation timestamp. When sending a <code>time_signal</code> message, the <code>splice_command_type</code> field in the <code>splice_info_section</code> message is set to 6 (0x06).</p> <p>See the <code>time_signal()</code> table of the 2022 SCTE-35 specification for more information.</p>"
      },
      "SegmentationDescriptorList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/SegmentationDescriptor"
        }
      },
      "SegmentationDescriptor": {
        "type": "object",
        "properties": {
          "SegmentNum": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "The segment number to assign to the <code>segmentation_descriptor.segment_num</code> message, as defined in section 10.3.3.1 of the 2022 SCTE-35 specification Values must be between 0 and 256, inclusive. The default value is 0."
              }
            ]
          },
          "SegmentationEventId": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "The Event Identifier to assign to the <code>segmentation_descriptor.segmentation_event_id</code> message, as defined in section 10.3.3.1 of the 2022 SCTE-35 specification. The default value is 1."
              }
            ]
          },
          "SegmentationTypeId": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "The Type Identifier to assign to the <code>segmentation_descriptor.segmentation_type_id</code> message, as defined in section 10.3.3.1 of the 2022 SCTE-35 specification. Values must be between 0 and 256, inclusive. The default value is 48."
              }
            ]
          },
          "SegmentationUpid": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The Upid to assign to the <code>segmentation_descriptor.segmentation_upid</code> message, as defined in section 10.3.3.1 of the 2022 SCTE-35 specification. The value must be a hexadecimal string containing only the characters 0 though 9 and A through F. The default value is \"\" (an empty string)."
              }
            ]
          },
          "SegmentationUpidType": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "The Upid Type to assign to the <code>segmentation_descriptor.segmentation_upid_type</code> message, as defined in section 10.3.3.1 of the 2022 SCTE-35 specification. Values must be between 0 and 256, inclusive. The default value is 14."
              }
            ]
          },
          "SegmentsExpected": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "The number of segments expected, which is assigned to the <code>segmentation_descriptor.segments_expectedS</code> message, as defined in section 10.3.3.1 of the 2022 SCTE-35 specification Values must be between 0 and 256, inclusive. The default value is 0."
              }
            ]
          },
          "SubSegmentNum": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "The sub-segment number to assign to the <code>segmentation_descriptor.sub_segment_num</code> message, as defined in section 10.3.3.1 of the 2022 SCTE-35 specification. Values must be between 0 and 256, inclusive. The defualt value is null."
              }
            ]
          },
          "SubSegmentsExpected": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "The number of sub-segments expected, which is assigned to the <code>segmentation_descriptor.sub_segments_expected</code> message, as defined in section 10.3.3.1 of the 2022 SCTE-35 specification. Values must be between 0 and 256, inclusive. The default value is null."
              }
            ]
          }
        },
        "description": "<p>The <code>segmentation_descriptor</code> message can contain advanced metadata fields, like content identifiers, to convey a wide range of information about the ad break. MediaTailor writes the ad metadata in the egress manifest as part of the <code>EXT-X-DATERANGE</code> or <code>EventStream</code> ad marker's SCTE-35 data.</p> <p> <code>segmentation_descriptor</code> messages must be sent with the <code>time_signal</code> message type.</p> <p>See the <code>segmentation_descriptor()</code> table of the 2022 SCTE-35 specification for more information.</p>"
      },
      "Integer": {
        "type": "integer"
      },
      "ClipRange": {
        "type": "object",
        "required": [
          "EndOffsetMillis"
        ],
        "properties": {
          "EndOffsetMillis": {
            "allOf": [
              {
                "$ref": "#/$defs/__long"
              },
              {
                "description": "The end offset of the clip range, in milliseconds, starting from the beginning of the VOD source associated with the program."
              }
            ]
          }
        },
        "description": "Clip range configuration for the VOD source associated with the program."
      },
      "UpdateProgramTransition": {
        "type": "object",
        "properties": {
          "DurationMillis": {
            "allOf": [
              {
                "$ref": "#/$defs/__long"
              },
              {
                "description": "The duration of the live program in seconds."
              }
            ]
          },
          "ScheduledStartTimeMillis": {
            "allOf": [
              {
                "$ref": "#/$defs/__long"
              },
              {
                "description": "The date and time that the program is scheduled to start, in epoch milliseconds."
              }
            ]
          }
        },
        "description": "Program transition configuration."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "http://api.mediatailor.us-east-1.amazonaws.com/channel/{ChannelName}/program/{ProgramName}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**AdBreaks**",
            "**Arn**",
            "**ChannelName**",
            "**ClipRange**",
            "**CreationTime**",
            "**DurationMillis**",
            "**LiveSourceName**",
            "**ProgramName**",
            "**ScheduledStartTime**",
            "**SourceLocationName**",
            "**VodSourceName**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
