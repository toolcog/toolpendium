{
  "name": "SendWorkflowStepState",
  "description": "<p>Sends a callback for asynchronous custom steps.</p> <p> The <code>ExecutionId</code>, <code>WorkflowId</code>, and <code>Token</code> are passed to the target resource during execution of a custom step of a workflow. You must include those with their callback as well as providing a status. </p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "TransferService.SendWorkflowStepState"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/SendWorkflowStepStateRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "SendWorkflowStepStateRequest": {
        "type": "object",
        "required": [
          "WorkflowId",
          "ExecutionId",
          "Token",
          "Status"
        ],
        "title": "SendWorkflowStepStateRequest",
        "properties": {
          "WorkflowId": {
            "allOf": [
              {
                "$ref": "#/$defs/WorkflowId"
              },
              {
                "description": "A unique identifier for the workflow."
              }
            ]
          },
          "ExecutionId": {
            "allOf": [
              {
                "$ref": "#/$defs/ExecutionId"
              },
              {
                "description": "A unique identifier for the execution of a workflow."
              }
            ]
          },
          "Token": {
            "allOf": [
              {
                "$ref": "#/$defs/CallbackToken"
              },
              {
                "description": "Used to distinguish between multiple callbacks for multiple Lambda steps within the same execution."
              }
            ]
          },
          "Status": {
            "allOf": [
              {
                "$ref": "#/$defs/CustomStepStatus"
              },
              {
                "description": "Indicates whether the specified step succeeded or failed."
              }
            ]
          }
        }
      },
      "WorkflowId": {
        "type": "string",
        "pattern": "^w-([a-z0-9]{17})$",
        "minLength": 19,
        "maxLength": 19
      },
      "ExecutionId": {
        "type": "string",
        "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
        "minLength": 36,
        "maxLength": 36
      },
      "CallbackToken": {
        "type": "string",
        "pattern": "\\w+",
        "minLength": 1,
        "maxLength": 64
      },
      "CustomStepStatus": {
        "type": "string",
        "enum": [
          "SUCCESS",
          "FAILURE"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://transfer.us-east-1.amazonaws.com/#X-Amz-Target=TransferService.SendWorkflowStepState"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
