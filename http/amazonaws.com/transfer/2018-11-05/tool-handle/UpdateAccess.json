{
  "name": "UpdateAccess",
  "description": "Allows you to update parameters for the access specified in the <code>ServerID</code> and <code>ExternalID</code> parameters.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "TransferService.UpdateAccess"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/UpdateAccessRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "UpdateAccessRequest": {
        "type": "object",
        "required": [
          "ServerId",
          "ExternalId"
        ],
        "title": "UpdateAccessRequest",
        "properties": {
          "HomeDirectory": {
            "allOf": [
              {
                "$ref": "#/$defs/HomeDirectory"
              },
              {
                "description": "<p>The landing directory (folder) for a user when they log in to the server using the client.</p> <p>A <code>HomeDirectory</code> example is <code>/bucket_name/home/mydirectory</code>.</p>"
              }
            ]
          },
          "HomeDirectoryType": {
            "allOf": [
              {
                "$ref": "#/$defs/HomeDirectoryType"
              },
              {
                "description": "The type of landing directory (folder) that you want your users' home directory to be when they log in to the server. If you set it to <code>PATH</code>, the user will see the absolute Amazon S3 bucket or EFS paths as is in their file transfer protocol clients. If you set it <code>LOGICAL</code>, you need to provide mappings in the <code>HomeDirectoryMappings</code> for how you want to make Amazon S3 or Amazon EFS paths visible to your users."
              }
            ]
          },
          "HomeDirectoryMappings": {
            "allOf": [
              {
                "$ref": "#/$defs/HomeDirectoryMappings"
              },
              {
                "description": "<p>Logical directory mappings that specify what Amazon S3 or Amazon EFS paths and keys should be visible to your user and how you want to make them visible. You must specify the <code>Entry</code> and <code>Target</code> pair, where <code>Entry</code> shows how the path is made visible and <code>Target</code> is the actual Amazon S3 or Amazon EFS path. If you only specify a target, it is displayed as is. You also must ensure that your Identity and Access Management (IAM) role provides access to paths in <code>Target</code>. This value can be set only when <code>HomeDirectoryType</code> is set to <i>LOGICAL</i>.</p> <p>The following is an <code>Entry</code> and <code>Target</code> pair example.</p> <p> <code>[ { \"Entry\": \"/directory1\", \"Target\": \"/bucket_name/home/mydirectory\" } ]</code> </p> <p>In most cases, you can use this value instead of the session policy to lock down your user to the designated home directory (\"<code>chroot</code>\"). To do this, you can set <code>Entry</code> to <code>/</code> and set <code>Target</code> to the <code>HomeDirectory</code> parameter value.</p> <p>The following is an <code>Entry</code> and <code>Target</code> pair example for <code>chroot</code>.</p> <p> <code>[ { \"Entry\": \"/\", \"Target\": \"/bucket_name/home/mydirectory\" } ]</code> </p>"
              }
            ]
          },
          "Policy": {
            "allOf": [
              {
                "$ref": "#/$defs/Policy"
              },
              {
                "description": "<p>A session policy for your user so that you can use the same Identity and Access Management (IAM) role across multiple users. This policy scopes down a user's access to portions of their Amazon S3 bucket. Variables that you can use inside this policy include <code>${Transfer:UserName}</code>, <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.</p> <note> <p>This policy applies only when the domain of <code>ServerId</code> is Amazon S3. Amazon EFS does not use session policies.</p> <p>For session policies, Transfer Family stores the policy as a JSON blob, instead of the Amazon Resource Name (ARN) of the policy. You save the policy as a JSON blob and pass it in the <code>Policy</code> argument.</p> <p>For an example of a session policy, see <a href=\"https://docs.aws.amazon.com/transfer/latest/userguide/session-policy.html\">Example session policy</a>.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRole.html\">AssumeRole</a> in the <i>Amazon Web ServicesSecurity Token Service API Reference</i>.</p> </note>"
              }
            ]
          },
          "PosixProfile": {
            "$ref": "#/$defs/PosixProfile"
          },
          "Role": {
            "allOf": [
              {
                "$ref": "#/$defs/Role"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role that controls your users' access to your Amazon S3 bucket or Amazon EFS file system. The policies attached to this role determine the level of access that you want to provide your users when transferring files into and out of your Amazon S3 bucket or Amazon EFS file system. The IAM role should also contain a trust relationship that allows the server to access your resources when servicing your users' transfer requests."
              }
            ]
          },
          "ServerId": {
            "allOf": [
              {
                "$ref": "#/$defs/ServerId"
              },
              {
                "description": "A system-assigned unique identifier for a server instance. This is the specific server that you added your user to."
              }
            ]
          },
          "ExternalId": {
            "allOf": [
              {
                "$ref": "#/$defs/ExternalId"
              },
              {
                "description": "<p>A unique identifier that is required to identify specific groups within your directory. The users of the group that you associate have access to your Amazon S3 or Amazon EFS resources over the enabled protocols using Transfer Family. If you know the group name, you can view the SID values by running the following command using Windows PowerShell.</p> <p> <code>Get-ADGroup -Filter {samAccountName -like \"<i>YourGroupName</i>*\"} -Properties * | Select SamAccountName,ObjectSid</code> </p> <p>In that command, replace <i>YourGroupName</i> with the name of your Active Directory group.</p> <p>The regular expression used to validate this parameter is a string of characters consisting of uppercase and lowercase alphanumeric characters with no spaces. You can also include underscores or any of the following characters: =,.@:/-</p>"
              }
            ]
          }
        }
      },
      "HomeDirectory": {
        "type": "string",
        "pattern": "^$|/.*",
        "maxLength": 1024
      },
      "HomeDirectoryType": {
        "type": "string",
        "enum": [
          "PATH",
          "LOGICAL"
        ]
      },
      "HomeDirectoryMappings": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/HomeDirectoryMapEntry"
        },
        "minItems": 1,
        "maxItems": 50
      },
      "HomeDirectoryMapEntry": {
        "type": "object",
        "required": [
          "Entry",
          "Target"
        ],
        "properties": {
          "Entry": {
            "allOf": [
              {
                "$ref": "#/$defs/MapEntry"
              },
              {
                "description": "Represents an entry for <code>HomeDirectoryMappings</code>."
              }
            ]
          },
          "Target": {
            "allOf": [
              {
                "$ref": "#/$defs/MapTarget"
              },
              {
                "description": "Represents the map target that is used in a <code>HomeDirectorymapEntry</code>."
              }
            ]
          }
        },
        "description": "<p>Represents an object that contains entries and targets for <code>HomeDirectoryMappings</code>.</p> <p>The following is an <code>Entry</code> and <code>Target</code> pair example for <code>chroot</code>.</p> <p> <code>[ { \"Entry\": \"/\", \"Target\": \"/bucket_name/home/mydirectory\" } ]</code> </p>"
      },
      "MapEntry": {
        "type": "string",
        "pattern": "^/.*",
        "maxLength": 1024
      },
      "MapTarget": {
        "type": "string",
        "pattern": "^/.*",
        "maxLength": 1024
      },
      "Policy": {
        "type": "string",
        "maxLength": 2048
      },
      "PosixProfile": {
        "type": "object",
        "required": [
          "Uid",
          "Gid"
        ],
        "properties": {
          "Uid": {
            "allOf": [
              {
                "$ref": "#/$defs/PosixId"
              },
              {
                "description": "The POSIX user ID used for all EFS operations by this user."
              }
            ]
          },
          "Gid": {
            "allOf": [
              {
                "$ref": "#/$defs/PosixId"
              },
              {
                "description": "The POSIX group ID used for all EFS operations by this user."
              }
            ]
          },
          "SecondaryGids": {
            "allOf": [
              {
                "$ref": "#/$defs/SecondaryGids"
              },
              {
                "description": "The secondary POSIX group IDs used for all EFS operations by this user."
              }
            ]
          }
        },
        "description": "The full POSIX identity, including user ID (<code>Uid</code>), group ID (<code>Gid</code>), and any secondary groups IDs (<code>SecondaryGids</code>), that controls your users' access to your Amazon EFS file systems. The POSIX permissions that are set on files and directories in your file system determine the level of access your users get when transferring files into and out of your Amazon EFS file systems."
      },
      "PosixId": {
        "type": "integer",
        "minimum": 0,
        "maximum": 4294967295
      },
      "SecondaryGids": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/PosixId"
        },
        "minItems": 0,
        "maxItems": 16
      },
      "Role": {
        "type": "string",
        "pattern": "arn:.*role/.*",
        "minLength": 20,
        "maxLength": 2048
      },
      "ServerId": {
        "type": "string",
        "pattern": "^s-([0-9a-f]{17})$",
        "minLength": 19,
        "maxLength": 19
      },
      "ExternalId": {
        "type": "string",
        "pattern": "^S-1-[\\d-]+$",
        "minLength": 1,
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://transfer.us-east-1.amazonaws.com/#X-Amz-Target=TransferService.UpdateAccess"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**ServerId**",
            "**ExternalId**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
