{
  "name": "UpdateDataset",
  "description": "Updates a FinSpace Dataset.",
  "parameters": {
    "type": "object",
    "properties": {
      "datasetId": {
        "type": "string",
        "description": "The unique identifier for the Dataset to update.",
        "minLength": 1,
        "maxLength": 26
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "datasetTitle",
          "kind"
        ],
        "properties": {
          "clientToken": {
            "description": "Idempotence Token for API operations",
            "type": "string",
            "pattern": ".*\\S.*",
            "minLength": 1,
            "maxLength": 128
          },
          "datasetTitle": {
            "description": "Title for a given Dataset",
            "type": "string",
            "pattern": ".*\\S.*",
            "minLength": 1,
            "maxLength": 255
          },
          "kind": {
            "description": "Dataset Kind",
            "type": "string",
            "enum": [
              "TABULAR",
              "NON_TABULAR"
            ]
          },
          "datasetDescription": {
            "description": "Description of a dataset",
            "type": "string",
            "pattern": "[\\s\\S]*",
            "maxLength": 1000
          },
          "alias": {
            "description": "The unique resource identifier for a Dataset.",
            "type": "string",
            "pattern": "^alias\\/\\S+",
            "minLength": 1,
            "maxLength": 255
          },
          "schemaDefinition": {
            "description": "A union of schema types.",
            "type": "object",
            "properties": {
              "tabularSchemaConfig": {
                "allOf": [
                  {
                    "$ref": "#/$defs/SchemaDefinition"
                  },
                  {
                    "description": "The configuration for a schema on a tabular Dataset."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "required": [
      "datasetId",
      "body"
    ],
    "$defs": {
      "SchemaDefinition": {
        "type": "object",
        "properties": {
          "columns": {
            "allOf": [
              {
                "$ref": "#/$defs/ColumnList"
              },
              {
                "description": "List of column definitions."
              }
            ]
          },
          "primaryKeyColumns": {
            "allOf": [
              {
                "$ref": "#/$defs/ColumnNameList"
              },
              {
                "description": "List of column names used for primary key."
              }
            ]
          }
        },
        "description": "Definition for a schema on a tabular Dataset."
      },
      "ColumnList": {
        "type": "array",
        "description": "List of Column Definitions",
        "items": {
          "$ref": "#/$defs/ColumnDefinition"
        }
      },
      "ColumnDefinition": {
        "type": "object",
        "properties": {
          "dataType": {
            "allOf": [
              {
                "$ref": "#/$defs/ColumnDataType"
              },
              {
                "description": "<p>Data type of a column.</p> <ul> <li> <p> <code>STRING</code> – A String data type.</p> <p> <code>CHAR</code> – A char data type.</p> <p> <code>INTEGER</code> – An integer data type.</p> <p> <code>TINYINT</code> – A tinyint data type.</p> <p> <code>SMALLINT</code> – A smallint data type.</p> <p> <code>BIGINT</code> – A bigint data type.</p> <p> <code>FLOAT</code> – A float data type.</p> <p> <code>DOUBLE</code> – A double data type.</p> <p> <code>DATE</code> – A date data type.</p> <p> <code>DATETIME</code> – A datetime data type.</p> <p> <code>BOOLEAN</code> – A boolean data type.</p> <p> <code>BINARY</code> – A binary data type.</p> </li> </ul>"
              }
            ]
          },
          "columnName": {
            "allOf": [
              {
                "$ref": "#/$defs/ColumnName"
              },
              {
                "description": "The name of a column."
              }
            ]
          },
          "columnDescription": {
            "allOf": [
              {
                "$ref": "#/$defs/ColumnDescription"
              },
              {
                "description": "Description for a column."
              }
            ]
          }
        },
        "description": "The definition of a column in a tabular Dataset."
      },
      "ColumnDataType": {
        "type": "string",
        "enum": [
          "STRING",
          "CHAR",
          "INTEGER",
          "TINYINT",
          "SMALLINT",
          "BIGINT",
          "FLOAT",
          "DOUBLE",
          "DATE",
          "DATETIME",
          "BOOLEAN",
          "BINARY"
        ],
        "description": "Data type of a column."
      },
      "ColumnName": {
        "type": "string",
        "pattern": ".*\\S.*",
        "description": "Column Name",
        "maxLength": 126
      },
      "ColumnDescription": {
        "type": "string",
        "pattern": "[\\s\\S]*",
        "description": "Column Description",
        "maxLength": 512
      },
      "ColumnNameList": {
        "type": "array",
        "description": "List of Column Names",
        "items": {
          "$ref": "#/$defs/ColumnName"
        }
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "http://finspace-api.us-east-1.amazonaws.com/datasetsv2/{datasetId}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The response from an UpdateDataset operation",
        "**Key properties:**",
        {
          "$ul": [
            "**datasetId**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
