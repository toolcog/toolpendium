{
  "name": "CreateDataView",
  "description": "Creates a Dataview for a Dataset.",
  "parameters": {
    "type": "object",
    "properties": {
      "datasetId": {
        "type": "string",
        "description": "The unique Dataset identifier that is used to create a Dataview.",
        "minLength": 1,
        "maxLength": 26
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "destinationTypeParams"
        ],
        "properties": {
          "clientToken": {
            "description": "Idempotence Token for API operations",
            "type": "string",
            "pattern": ".*\\S.*",
            "minLength": 1,
            "maxLength": 128
          },
          "autoUpdate": {
            "description": "Common Boolean data type",
            "type": "boolean"
          },
          "sortColumns": {
            "description": "DataView Sort Column List",
            "type": "array",
            "items": {
              "$ref": "#/$defs/StringValueLength1to255"
            }
          },
          "partitionColumns": {
            "description": "DataView Partition Column List",
            "type": "array",
            "items": {
              "$ref": "#/$defs/StringValueLength1to255"
            }
          },
          "asOfTimestamp": {
            "description": "Milliseconds since UTC epoch",
            "type": "integer"
          },
          "destinationTypeParams": {
            "description": "Structure for the Dataview destination type parameters.",
            "type": "object",
            "properties": {
              "destinationType": {
                "allOf": [
                  {
                    "$ref": "#/$defs/DataViewDestinationType"
                  },
                  {
                    "description": "<p>Destination type for a Dataview.</p> <ul> <li> <p> <code>GLUE_TABLE</code> – Glue table destination type.</p> </li> <li> <p> <code>S3</code> – S3 destination type.</p> </li> </ul>"
                  }
                ]
              },
              "s3DestinationExportFileFormat": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ExportFileFormat"
                  },
                  {
                    "description": "<p>Dataview export file format.</p> <ul> <li> <p> <code>PARQUET</code> – Parquet export file format.</p> </li> <li> <p> <code>DELIMITED_TEXT</code> – Delimited text export file format.</p> </li> </ul>"
                  }
                ]
              },
              "s3DestinationExportFileFormatOptions": {
                "allOf": [
                  {
                    "$ref": "#/$defs/S3DestinationFormatOptions"
                  },
                  {
                    "description": "<p>Format Options for S3 Destination type.</p> <p>Here is an example of how you could specify the <code>s3DestinationExportFileFormatOptions</code> </p> <p> <code> { \"header\": \"true\", \"delimiter\": \",\", \"compression\": \"gzip\" }</code> </p>"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "required": [
      "datasetId",
      "body"
    ],
    "$defs": {
      "StringValueLength1to255": {
        "type": "string",
        "pattern": "[\\s\\S]*\\S[\\s\\S]*",
        "description": "1 - 255 character String",
        "minLength": 1,
        "maxLength": 255
      },
      "DataViewDestinationType": {
        "type": "string",
        "description": "DataView Destination Type"
      },
      "ExportFileFormat": {
        "type": "string",
        "enum": [
          "PARQUET",
          "DELIMITED_TEXT"
        ],
        "description": "Data View Export File Format"
      },
      "S3DestinationFormatOptions": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/StringMapValue"
        }
      },
      "StringMapValue": {
        "type": "string",
        "pattern": "[\\s\\S]*\\S[\\s\\S]*",
        "maxLength": 1000
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://finspace-api.us-east-1.amazonaws.com/datasets/{datasetId}/dataviewsv2"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Response for creating a data view.",
        "**Key properties:**",
        {
          "$ul": [
            "**datasetId**",
            "**dataViewId**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
