{
  "name": "CreateMediaCapturePipeline",
  "description": "<p>Creates a media capture pipeline.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_media-pipelines-chime_CreateMediaCapturePipeline\">CreateMediaCapturePipeline</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "SourceType",
          "SourceArn",
          "SinkType",
          "SinkArn"
        ],
        "properties": {
          "SourceType": {
            "description": "Source type from which the media artifacts will be captured. A Chime SDK Meeting is the only supported source.",
            "type": "string",
            "enum": [
              "ChimeSdkMeeting"
            ]
          },
          "SourceArn": {
            "description": "ARN of the source from which the media artifacts are captured.",
            "type": "string",
            "pattern": "^arn[\\/\\:\\-\\_\\.a-zA-Z0-9]+$",
            "minLength": 1,
            "maxLength": 1024,
            "format": "password"
          },
          "SinkType": {
            "description": "Destination type to which the media artifacts are saved. You must use an S3 bucket. ",
            "type": "string",
            "enum": [
              "S3Bucket"
            ]
          },
          "SinkArn": {
            "description": "The ARN of the sink type.",
            "type": "string",
            "pattern": "^arn[\\/\\:\\-\\_\\.a-zA-Z0-9]+$",
            "minLength": 1,
            "maxLength": 1024,
            "format": "password"
          },
          "ClientRequestToken": {
            "description": "The unique identifier for the client request. The token makes the API request idempotent. Use a different token for different media pipeline requests.",
            "type": "string",
            "pattern": "[-_a-zA-Z0-9]*",
            "minLength": 2,
            "maxLength": 64,
            "format": "password"
          },
          "ChimeSdkMeetingConfiguration": {
            "description": "The configuration object of the Amazon Chime SDK meeting for a specified media capture pipeline. <code>SourceType</code> must be <code>ChimeSdkMeeting</code>.",
            "type": "object",
            "properties": {
              "SourceConfiguration": {
                "allOf": [
                  {
                    "$ref": "#/$defs/SourceConfiguration"
                  },
                  {
                    "description": "The source configuration for a specified media capture pipeline."
                  }
                ]
              },
              "ArtifactsConfiguration": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ArtifactsConfiguration"
                  },
                  {
                    "description": "The configuration for the artifacts in an Amazon Chime SDK meeting."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "SourceConfiguration": {
        "type": "object",
        "properties": {
          "SelectedVideoStreams": {
            "allOf": [
              {
                "$ref": "#/$defs/SelectedVideoStreams"
              },
              {
                "description": "The selected video streams to capture for a specified media capture pipeline. The number of video streams can't exceed 25."
              }
            ]
          }
        },
        "description": "Source configuration for a specified media capture pipeline."
      },
      "SelectedVideoStreams": {
        "type": "object",
        "properties": {
          "AttendeeIds": {
            "allOf": [
              {
                "$ref": "#/$defs/AttendeeIdList"
              },
              {
                "description": "The attendee IDs of the streams selected for a media capture pipeline. "
              }
            ]
          },
          "ExternalUserIds": {
            "allOf": [
              {
                "$ref": "#/$defs/ExternalUserIdList"
              },
              {
                "description": "The external user IDs of the streams selected for a media capture pipeline."
              }
            ]
          }
        },
        "description": "The video streams to capture for a specified media capture pipeline. The total number of video streams can't exceed 25."
      },
      "AttendeeIdList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/GuidString"
        },
        "minItems": 1
      },
      "GuidString": {
        "type": "string",
        "pattern": "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}"
      },
      "ExternalUserIdList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ExternalUserIdType"
        },
        "minItems": 1
      },
      "ExternalUserIdType": {
        "type": "string",
        "minLength": 2,
        "maxLength": 64,
        "format": "password"
      },
      "ArtifactsConfiguration": {
        "type": "object",
        "required": [
          "Audio",
          "Video",
          "Content"
        ],
        "properties": {
          "Audio": {
            "allOf": [
              {
                "$ref": "#/$defs/AudioArtifactsConfiguration"
              },
              {
                "description": "The configuration for the audio artifacts."
              }
            ]
          },
          "Video": {
            "allOf": [
              {
                "$ref": "#/$defs/VideoArtifactsConfiguration"
              },
              {
                "description": "The configuration for the video artifacts."
              }
            ]
          },
          "Content": {
            "allOf": [
              {
                "$ref": "#/$defs/ContentArtifactsConfiguration"
              },
              {
                "description": "The configuration for the content artifacts."
              }
            ]
          }
        },
        "description": "The configuration for the artifacts."
      },
      "AudioArtifactsConfiguration": {
        "type": "object",
        "required": [
          "MuxType"
        ],
        "properties": {
          "MuxType": {
            "allOf": [
              {
                "$ref": "#/$defs/AudioMuxType"
              },
              {
                "description": "The MUX type of the audio artifact configuration object."
              }
            ]
          }
        },
        "description": "The audio artifact configuration object."
      },
      "AudioMuxType": {
        "type": "string",
        "enum": [
          "AudioOnly",
          "AudioWithActiveSpeakerVideo"
        ]
      },
      "VideoArtifactsConfiguration": {
        "type": "object",
        "required": [
          "State"
        ],
        "properties": {
          "State": {
            "allOf": [
              {
                "$ref": "#/$defs/ArtifactsState"
              },
              {
                "description": "Indicates whether the video artifact is enabled or disabled."
              }
            ]
          },
          "MuxType": {
            "allOf": [
              {
                "$ref": "#/$defs/VideoMuxType"
              },
              {
                "description": "The MUX type of the video artifact configuration object."
              }
            ]
          }
        },
        "description": "The video artifact configuration object."
      },
      "ArtifactsState": {
        "type": "string",
        "enum": [
          "Enabled",
          "Disabled"
        ]
      },
      "VideoMuxType": {
        "type": "string",
        "enum": [
          "VideoOnly"
        ]
      },
      "ContentArtifactsConfiguration": {
        "type": "object",
        "required": [
          "State"
        ],
        "properties": {
          "State": {
            "allOf": [
              {
                "$ref": "#/$defs/ArtifactsState"
              },
              {
                "description": "Indicates whether the content artifact is enabled or disabled."
              }
            ]
          },
          "MuxType": {
            "allOf": [
              {
                "$ref": "#/$defs/ContentMuxType"
              },
              {
                "description": "The MUX type of the artifact configuration."
              }
            ]
          }
        },
        "description": "The content artifact object."
      },
      "ContentMuxType": {
        "type": "string",
        "enum": [
          "ContentOnly"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://service.chime.aws.amazon.com/media-capture-pipelines"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**MediaCapturePipeline**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
