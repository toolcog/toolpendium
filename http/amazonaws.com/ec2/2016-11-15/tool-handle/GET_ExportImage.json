{
  "name": "GET_ExportImage",
  "description": "Exports an Amazon Machine Image (AMI) to a VM file. For more information, see <a href=\"https://docs.aws.amazon.com/vm-import/latest/userguide/vmexport_image.html\">Exporting a VM directly from an Amazon Machine Image (AMI)</a> in the <i>VM Import/Export User Guide</i>.",
  "parameters": {
    "type": "object",
    "properties": {
      "ClientToken": {
        "type": "string",
        "description": "Token to enable idempotency for export image requests."
      },
      "Description": {
        "type": "string",
        "description": "A description of the image being exported. The maximum length is 255 characters."
      },
      "DiskImageFormat": {
        "type": "string",
        "enum": [
          "VMDK",
          "RAW",
          "VHD"
        ],
        "description": "The disk image format."
      },
      "DryRun": {
        "type": "boolean",
        "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
      },
      "ImageId": {
        "type": "string",
        "description": "The ID of the image."
      },
      "S3ExportLocation": {
        "type": "object",
        "required": [
          "S3Bucket"
        ],
        "properties": {
          "S3Bucket": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The destination Amazon S3 bucket."
              }
            ]
          },
          "S3Prefix": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The prefix (logical hierarchy) in the bucket."
              }
            ]
          }
        },
        "description": "The Amazon S3 bucket for the destination image. The destination bucket must exist."
      },
      "RoleName": {
        "type": "string",
        "description": "The name of the role that grants VM Import/Export permission to export images to your Amazon S3 bucket. If this parameter is not specified, the default role is named 'vmimport'."
      },
      "TagSpecification": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/TagSpecification"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        },
        "description": "The tags to apply to the export image task during creation."
      },
      "Action": {
        "type": "string",
        "enum": [
          "ExportImage"
        ]
      },
      "Version": {
        "type": "string",
        "enum": [
          "2016-11-15"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      }
    },
    "required": [
      "DiskImageFormat",
      "ImageId",
      "S3ExportLocation",
      "Action",
      "Version"
    ],
    "$defs": {
      "String": {
        "type": "string"
      },
      "TagSpecification": {
        "type": "object",
        "properties": {
          "ResourceType": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceType"
              },
              {
                "xml": {
                  "name": "resourceType"
                },
                "description": "The type of resource to tag on creation."
              }
            ]
          },
          "Tags": {
            "allOf": [
              {
                "$ref": "#/$defs/TagList"
              },
              {
                "xml": {
                  "name": "Tag"
                },
                "description": "The tags to apply to the resource."
              }
            ]
          }
        },
        "description": "<p>The tags to apply to a resource when the resource is being created. When you specify a tag, you must specify the resource type to tag, otherwise the request will fail.</p> <note> <p>The <code>Valid Values</code> lists all the resource types that can be tagged. However, the action you're using might not support tagging all of these resource types. If you try to tag a resource type that is unsupported for the action you're using, you'll get an error.</p> </note>"
      },
      "ResourceType": {
        "type": "string",
        "enum": [
          "capacity-reservation",
          "client-vpn-endpoint",
          "customer-gateway",
          "carrier-gateway",
          "coip-pool",
          "dedicated-host",
          "dhcp-options",
          "egress-only-internet-gateway",
          "elastic-ip",
          "elastic-gpu",
          "export-image-task",
          "export-instance-task",
          "fleet",
          "fpga-image",
          "host-reservation",
          "image",
          "import-image-task",
          "import-snapshot-task",
          "instance",
          "instance-event-window",
          "internet-gateway",
          "ipam",
          "ipam-pool",
          "ipam-scope",
          "ipv4pool-ec2",
          "ipv6pool-ec2",
          "key-pair",
          "launch-template",
          "local-gateway",
          "local-gateway-route-table",
          "local-gateway-virtual-interface",
          "local-gateway-virtual-interface-group",
          "local-gateway-route-table-vpc-association",
          "local-gateway-route-table-virtual-interface-group-association",
          "natgateway",
          "network-acl",
          "network-interface",
          "network-insights-analysis",
          "network-insights-path",
          "network-insights-access-scope",
          "network-insights-access-scope-analysis",
          "placement-group",
          "prefix-list",
          "replace-root-volume-task",
          "reserved-instances",
          "route-table",
          "security-group",
          "security-group-rule",
          "snapshot",
          "spot-fleet-request",
          "spot-instances-request",
          "subnet",
          "subnet-cidr-reservation",
          "traffic-mirror-filter",
          "traffic-mirror-session",
          "traffic-mirror-target",
          "transit-gateway",
          "transit-gateway-attachment",
          "transit-gateway-connect-peer",
          "transit-gateway-multicast-domain",
          "transit-gateway-policy-table",
          "transit-gateway-route-table",
          "transit-gateway-route-table-announcement",
          "volume",
          "vpc",
          "vpc-endpoint",
          "vpc-endpoint-connection",
          "vpc-endpoint-service",
          "vpc-endpoint-service-permission",
          "vpc-peering-connection",
          "vpn-connection",
          "vpn-gateway",
          "vpc-flow-log",
          "capacity-reservation-fleet",
          "traffic-mirror-filter-rule",
          "vpc-endpoint-connection-device-type",
          "verified-access-instance",
          "verified-access-group",
          "verified-access-endpoint",
          "verified-access-policy",
          "verified-access-trust-provider",
          "vpn-connection-device-type",
          "vpc-block-public-access-exclusion",
          "ipam-resource-discovery",
          "ipam-resource-discovery-association",
          "instance-connect-endpoint"
        ]
      },
      "TagList": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/Tag"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        }
      },
      "Tag": {
        "type": "object",
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "key"
                },
                "description": "<p>The key of the tag.</p> <p>Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with <code>aws:</code>.</p>"
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "value"
                },
                "description": "<p>The value of the tag.</p> <p>Constraints: Tag values are case-sensitive and accept a maximum of 256 Unicode characters.</p>"
              }
            ]
          }
        },
        "description": "Describes a tag."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "http://ec2.us-east-1.amazonaws.com/#Action=ExportImage{?ClientToken,Description,DiskImageFormat,DryRun,ImageId,S3ExportLocation,RoleName,TagSpecification,Action,Version}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Description**",
            "**DiskImageFormat**",
            "**ExportImageTaskId**",
            "**ImageId**",
            "**RoleName**",
            "**Progress**",
            "**S3ExportLocation**",
            "**Status**",
            "**StatusMessage**",
            "**Tags**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
