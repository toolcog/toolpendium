{
  "name": "GET_DisassociateNatGatewayAddress",
  "description": "<p>Disassociates secondary Elastic IP addresses (EIPs) from a public NAT gateway. You cannot disassociate your primary EIP. For more information, see <a href=\"https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway.html#nat-gateway-edit-secondary\">Edit secondary IP address associations</a> in the <i>Amazon VPC User Guide</i>.</p> <p>While disassociating is in progress, you cannot associate/disassociate additional EIPs while the connections are being drained. You are, however, allowed to delete the NAT gateway.</p> <p>An EIP is released only at the end of MaxDrainDurationSeconds. It stays associated and supports the existing connections but does not support any new connections (new connections are distributed across the remaining associated EIPs). As the existing connections drain out, the EIPs (and the corresponding private IP addresses mapped to them) are released.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "NatGatewayId": {
        "type": "string",
        "description": "The ID of the NAT gateway."
      },
      "AssociationId": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/ElasticIpAssociationId"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        },
        "description": "The association IDs of EIPs that have been associated with the NAT gateway."
      },
      "MaxDrainDurationSeconds": {
        "type": "integer",
        "minimum": 1,
        "maximum": 4000,
        "description": "The maximum amount of time to wait (in seconds) before forcibly releasing the IP addresses if connections are still in progress. Default value is 350 seconds."
      },
      "DryRun": {
        "type": "boolean",
        "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
      },
      "Action": {
        "type": "string",
        "enum": [
          "DisassociateNatGatewayAddress"
        ]
      },
      "Version": {
        "type": "string",
        "enum": [
          "2016-11-15"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      }
    },
    "required": [
      "NatGatewayId",
      "AssociationId",
      "Action",
      "Version"
    ],
    "$defs": {
      "ElasticIpAssociationId": {
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "http://ec2.us-east-1.amazonaws.com/#Action=DisassociateNatGatewayAddress{?NatGatewayId,AssociationId,MaxDrainDurationSeconds,DryRun,Action,Version}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**NatGatewayId**",
            "**NatGatewayAddresses**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
