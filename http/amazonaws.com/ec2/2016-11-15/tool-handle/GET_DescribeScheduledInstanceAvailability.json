{
  "name": "GET_DescribeScheduledInstanceAvailability",
  "description": "<p>Finds available schedules that meet the specified criteria.</p> <p>You can search for an available schedule no more than 3 months in advance. You must meet the minimum required duration of 1,200 hours per year. For example, the minimum daily schedule is 4 hours, the minimum weekly schedule is 24 hours, and the minimum monthly schedule is 100 hours.</p> <p>After you find a schedule that meets your needs, call <a>PurchaseScheduledInstances</a> to purchase Scheduled Instances with that schedule.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "DryRun": {
        "type": "boolean",
        "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
      },
      "Filter": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/Filter"
            },
            {
              "xml": {
                "name": "Filter"
              }
            }
          ]
        },
        "description": "<p>The filters.</p> <ul> <li> <p> <code>availability-zone</code> - The Availability Zone (for example, <code>us-west-2a</code>).</p> </li> <li> <p> <code>instance-type</code> - The instance type (for example, <code>c4.large</code>).</p> </li> <li> <p> <code>platform</code> - The platform (<code>Linux/UNIX</code> or <code>Windows</code>).</p> </li> </ul>"
      },
      "FirstSlotStartTimeRange": {
        "type": "object",
        "required": [
          "EarliestTime",
          "LatestTime"
        ],
        "properties": {
          "EarliestTime": {
            "allOf": [
              {
                "$ref": "#/$defs/DateTime"
              },
              {
                "description": "The earliest date and time, in UTC, for the Scheduled Instance to start."
              }
            ]
          },
          "LatestTime": {
            "allOf": [
              {
                "$ref": "#/$defs/DateTime"
              },
              {
                "description": "The latest date and time, in UTC, for the Scheduled Instance to start. This value must be later than or equal to the earliest date and at most three months in the future."
              }
            ]
          }
        },
        "description": "The time period for the first schedule to start."
      },
      "MaxResults": {
        "type": "integer",
        "minimum": 5,
        "maximum": 300,
        "description": "The maximum number of results to return in a single call. This value can be between 5 and 300. The default value is 300. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value."
      },
      "MaxSlotDurationInHours": {
        "type": "integer",
        "description": "The maximum available duration, in hours. This value must be greater than <code>MinSlotDurationInHours</code> and less than 1,720."
      },
      "MinSlotDurationInHours": {
        "type": "integer",
        "description": "The minimum available duration, in hours. The minimum required duration is 1,200 hours per year. For example, the minimum daily schedule is 4 hours, the minimum weekly schedule is 24 hours, and the minimum monthly schedule is 100 hours."
      },
      "NextToken": {
        "type": "string",
        "description": "The token for the next set of results."
      },
      "Recurrence": {
        "type": "object",
        "properties": {
          "Frequency": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The frequency (<code>Daily</code>, <code>Weekly</code>, or <code>Monthly</code>)."
              }
            ]
          },
          "Interval": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "The interval quantity. The interval unit depends on the value of <code>Frequency</code>. For example, every 2 weeks or every 2 months."
              }
            ]
          },
          "OccurrenceDays": {
            "allOf": [
              {
                "$ref": "#/$defs/OccurrenceDayRequestSet"
              },
              {
                "xml": {
                  "name": "OccurrenceDay"
                },
                "description": "The days. For a monthly schedule, this is one or more days of the month (1-31). For a weekly schedule, this is one or more days of the week (1-7, where 1 is Sunday). You can't specify this value with a daily schedule. If the occurrence is relative to the end of the month, you can specify only a single day."
              }
            ]
          },
          "OccurrenceRelativeToEnd": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Indicates whether the occurrence is relative to the end of the specified week or month. You can't specify this value with a daily schedule."
              }
            ]
          },
          "OccurrenceUnit": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The unit for <code>OccurrenceDays</code> (<code>DayOfWeek</code> or <code>DayOfMonth</code>). This value is required for a monthly schedule. You can't specify <code>DayOfWeek</code> with a weekly schedule. You can't specify this value with a daily schedule."
              }
            ]
          }
        },
        "description": "The schedule recurrence."
      },
      "Action": {
        "type": "string",
        "enum": [
          "DescribeScheduledInstanceAvailability"
        ]
      },
      "Version": {
        "type": "string",
        "enum": [
          "2016-11-15"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      }
    },
    "required": [
      "FirstSlotStartTimeRange",
      "Recurrence",
      "Action",
      "Version"
    ],
    "$defs": {
      "Filter": {
        "type": "object",
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The name of the filter. Filter names are case-sensitive."
              }
            ]
          },
          "Values": {
            "allOf": [
              {
                "$ref": "#/$defs/ValueStringList"
              },
              {
                "xml": {
                  "name": "Value"
                },
                "description": "The filter values. Filter values are case-sensitive. If you specify multiple values for a filter, the values are joined with an <code>OR</code>, and the request returns all results that match any of the specified values."
              }
            ]
          }
        },
        "description": "<p>A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs.</p> <p>If you specify multiple filters, the filters are joined with an <code>AND</code>, and the request returns only results that match all of the specified filters.</p>"
      },
      "String": {
        "type": "string"
      },
      "ValueStringList": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/String"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        }
      },
      "DateTime": {
        "type": "string",
        "format": "date-time"
      },
      "Integer": {
        "type": "integer"
      },
      "OccurrenceDayRequestSet": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/Integer"
            },
            {
              "xml": {
                "name": "OccurenceDay"
              }
            }
          ]
        }
      },
      "Boolean": {
        "type": "boolean"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "http://ec2.us-east-1.amazonaws.com/#Action=DescribeScheduledInstanceAvailability{?DryRun,Filter,FirstSlotStartTimeRange,MaxResults,MaxSlotDurationInHours,MinSlotDurationInHours,NextToken,Recurrence,Action,Version}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Contains the output of DescribeScheduledInstanceAvailability.",
        "**Key properties:**",
        {
          "$ul": [
            "**NextToken**",
            "**ScheduledInstanceAvailabilitySet**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
