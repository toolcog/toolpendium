{
  "name": "GET_ModifyVpnTunnelOptions",
  "description": "Modifies the options for a VPN tunnel in an Amazon Web Services Site-to-Site VPN connection. You can modify multiple options for a tunnel in a single request, but you can only modify one tunnel at a time. For more information, see <a href=\"https://docs.aws.amazon.com/vpn/latest/s2svpn/VPNTunnels.html\">Site-to-Site VPN tunnel options for your Site-to-Site VPN connection</a> in the <i>Amazon Web Services Site-to-Site VPN User Guide</i>.",
  "parameters": {
    "type": "object",
    "properties": {
      "VpnConnectionId": {
        "type": "string",
        "description": "The ID of the Amazon Web Services Site-to-Site VPN connection."
      },
      "VpnTunnelOutsideIpAddress": {
        "type": "string",
        "description": "The external IP address of the VPN tunnel."
      },
      "TunnelOptions": {
        "type": "object",
        "properties": {
          "TunnelInsideCidr": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "<p>The range of inside IPv4 addresses for the tunnel. Any specified CIDR blocks must be unique across all VPN connections that use the same virtual private gateway. </p> <p>Constraints: A size /30 CIDR block from the <code>169.254.0.0/16</code> range. The following CIDR blocks are reserved and cannot be used:</p> <ul> <li> <p> <code>169.254.0.0/30</code> </p> </li> <li> <p> <code>169.254.1.0/30</code> </p> </li> <li> <p> <code>169.254.2.0/30</code> </p> </li> <li> <p> <code>169.254.3.0/30</code> </p> </li> <li> <p> <code>169.254.4.0/30</code> </p> </li> <li> <p> <code>169.254.5.0/30</code> </p> </li> <li> <p> <code>169.254.169.252/30</code> </p> </li> </ul>"
              }
            ]
          },
          "TunnelInsideIpv6Cidr": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "<p>The range of inside IPv6 addresses for the tunnel. Any specified CIDR blocks must be unique across all VPN connections that use the same transit gateway.</p> <p>Constraints: A size /126 CIDR block from the local <code>fd00::/8</code> range.</p>"
              }
            ]
          },
          "PreSharedKey": {
            "allOf": [
              {
                "$ref": "#/$defs/preSharedKey"
              },
              {
                "description": "<p>The pre-shared key (PSK) to establish initial authentication between the virtual private gateway and the customer gateway.</p> <p>Constraints: Allowed characters are alphanumeric characters, periods (.), and underscores (_). Must be between 8 and 64 characters in length and cannot start with zero (0).</p>"
              }
            ]
          },
          "Phase1LifetimeSeconds": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "<p>The lifetime for phase 1 of the IKE negotiation, in seconds.</p> <p>Constraints: A value between 900 and 28,800.</p> <p>Default: <code>28800</code> </p>"
              }
            ]
          },
          "Phase2LifetimeSeconds": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "<p>The lifetime for phase 2 of the IKE negotiation, in seconds.</p> <p>Constraints: A value between 900 and 3,600. The value must be less than the value for <code>Phase1LifetimeSeconds</code>.</p> <p>Default: <code>3600</code> </p>"
              }
            ]
          },
          "RekeyMarginTimeSeconds": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "<p>The margin time, in seconds, before the phase 2 lifetime expires, during which the Amazon Web Services side of the VPN connection performs an IKE rekey. The exact time of the rekey is randomly selected based on the value for <code>RekeyFuzzPercentage</code>.</p> <p>Constraints: A value between 60 and half of <code>Phase2LifetimeSeconds</code>.</p> <p>Default: <code>540</code> </p>"
              }
            ]
          },
          "RekeyFuzzPercentage": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "<p>The percentage of the rekey window (determined by <code>RekeyMarginTimeSeconds</code>) during which the rekey time is randomly selected.</p> <p>Constraints: A value between 0 and 100.</p> <p>Default: <code>100</code> </p>"
              }
            ]
          },
          "ReplayWindowSize": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "<p>The number of packets in an IKE replay window.</p> <p>Constraints: A value between 64 and 2048.</p> <p>Default: <code>1024</code> </p>"
              }
            ]
          },
          "DPDTimeoutSeconds": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "<p>The number of seconds after which a DPD timeout occurs.</p> <p>Constraints: A value greater than or equal to 30.</p> <p>Default: <code>30</code> </p>"
              }
            ]
          },
          "DPDTimeoutAction": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "<p>The action to take after DPD timeout occurs. Specify <code>restart</code> to restart the IKE initiation. Specify <code>clear</code> to end the IKE session.</p> <p>Valid Values: <code>clear</code> | <code>none</code> | <code>restart</code> </p> <p>Default: <code>clear</code> </p>"
              }
            ]
          },
          "Phase1EncryptionAlgorithms": {
            "allOf": [
              {
                "$ref": "#/$defs/Phase1EncryptionAlgorithmsRequestList"
              },
              {
                "xml": {
                  "name": "Phase1EncryptionAlgorithm"
                },
                "description": "<p>One or more encryption algorithms that are permitted for the VPN tunnel for phase 1 IKE negotiations.</p> <p>Valid values: <code>AES128</code> | <code>AES256</code> | <code>AES128-GCM-16</code> | <code>AES256-GCM-16</code> </p>"
              }
            ]
          },
          "Phase2EncryptionAlgorithms": {
            "allOf": [
              {
                "$ref": "#/$defs/Phase2EncryptionAlgorithmsRequestList"
              },
              {
                "xml": {
                  "name": "Phase2EncryptionAlgorithm"
                },
                "description": "<p>One or more encryption algorithms that are permitted for the VPN tunnel for phase 2 IKE negotiations.</p> <p>Valid values: <code>AES128</code> | <code>AES256</code> | <code>AES128-GCM-16</code> | <code>AES256-GCM-16</code> </p>"
              }
            ]
          },
          "Phase1IntegrityAlgorithms": {
            "allOf": [
              {
                "$ref": "#/$defs/Phase1IntegrityAlgorithmsRequestList"
              },
              {
                "xml": {
                  "name": "Phase1IntegrityAlgorithm"
                },
                "description": "<p>One or more integrity algorithms that are permitted for the VPN tunnel for phase 1 IKE negotiations.</p> <p>Valid values: <code>SHA1</code> | <code>SHA2-256</code> | <code>SHA2-384</code> | <code>SHA2-512</code> </p>"
              }
            ]
          },
          "Phase2IntegrityAlgorithms": {
            "allOf": [
              {
                "$ref": "#/$defs/Phase2IntegrityAlgorithmsRequestList"
              },
              {
                "xml": {
                  "name": "Phase2IntegrityAlgorithm"
                },
                "description": "<p>One or more integrity algorithms that are permitted for the VPN tunnel for phase 2 IKE negotiations.</p> <p>Valid values: <code>SHA1</code> | <code>SHA2-256</code> | <code>SHA2-384</code> | <code>SHA2-512</code> </p>"
              }
            ]
          },
          "Phase1DHGroupNumbers": {
            "allOf": [
              {
                "$ref": "#/$defs/Phase1DHGroupNumbersRequestList"
              },
              {
                "xml": {
                  "name": "Phase1DHGroupNumber"
                },
                "description": "<p>One or more Diffie-Hellman group numbers that are permitted for the VPN tunnel for phase 1 IKE negotiations.</p> <p>Valid values: <code>2</code> | <code>14</code> | <code>15</code> | <code>16</code> | <code>17</code> | <code>18</code> | <code>19</code> | <code>20</code> | <code>21</code> | <code>22</code> | <code>23</code> | <code>24</code> </p>"
              }
            ]
          },
          "Phase2DHGroupNumbers": {
            "allOf": [
              {
                "$ref": "#/$defs/Phase2DHGroupNumbersRequestList"
              },
              {
                "xml": {
                  "name": "Phase2DHGroupNumber"
                },
                "description": "<p>One or more Diffie-Hellman group numbers that are permitted for the VPN tunnel for phase 2 IKE negotiations.</p> <p>Valid values: <code>2</code> | <code>5</code> | <code>14</code> | <code>15</code> | <code>16</code> | <code>17</code> | <code>18</code> | <code>19</code> | <code>20</code> | <code>21</code> | <code>22</code> | <code>23</code> | <code>24</code> </p>"
              }
            ]
          },
          "IKEVersions": {
            "allOf": [
              {
                "$ref": "#/$defs/IKEVersionsRequestList"
              },
              {
                "xml": {
                  "name": "IKEVersion"
                },
                "description": "<p>The IKE versions that are permitted for the VPN tunnel.</p> <p>Valid values: <code>ikev1</code> | <code>ikev2</code> </p>"
              }
            ]
          },
          "StartupAction": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "<p>The action to take when the establishing the tunnel for the VPN connection. By default, your customer gateway device must initiate the IKE negotiation and bring up the tunnel. Specify <code>start</code> for Amazon Web Services to initiate the IKE negotiation.</p> <p>Valid Values: <code>add</code> | <code>start</code> </p> <p>Default: <code>add</code> </p>"
              }
            ]
          },
          "LogOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/VpnTunnelLogOptionsSpecification"
              },
              {
                "description": "Options for logging VPN tunnel activity."
              }
            ]
          },
          "EnableTunnelLifecycleControl": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Turn on or off tunnel endpoint lifecycle control feature."
              }
            ]
          }
        },
        "description": "The tunnel options to modify."
      },
      "DryRun": {
        "type": "boolean",
        "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
      },
      "SkipTunnelReplacement": {
        "type": "boolean",
        "description": "<p>Choose whether or not to trigger immediate tunnel replacement.</p> <p>Valid values: <code>True</code> | <code>False</code> </p>"
      },
      "Action": {
        "type": "string",
        "enum": [
          "ModifyVpnTunnelOptions"
        ]
      },
      "Version": {
        "type": "string",
        "enum": [
          "2016-11-15"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      }
    },
    "required": [
      "VpnConnectionId",
      "VpnTunnelOutsideIpAddress",
      "TunnelOptions",
      "Action",
      "Version"
    ],
    "$defs": {
      "String": {
        "type": "string"
      },
      "preSharedKey": {
        "type": "string",
        "format": "password"
      },
      "Integer": {
        "type": "integer"
      },
      "Phase1EncryptionAlgorithmsRequestList": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/Phase1EncryptionAlgorithmsRequestListValue"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        }
      },
      "Phase1EncryptionAlgorithmsRequestListValue": {
        "type": "object",
        "properties": {
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The value for the encryption algorithm."
              }
            ]
          }
        },
        "description": "Specifies the encryption algorithm for the VPN tunnel for phase 1 IKE negotiations."
      },
      "Phase2EncryptionAlgorithmsRequestList": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/Phase2EncryptionAlgorithmsRequestListValue"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        }
      },
      "Phase2EncryptionAlgorithmsRequestListValue": {
        "type": "object",
        "properties": {
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The encryption algorithm."
              }
            ]
          }
        },
        "description": "Specifies the encryption algorithm for the VPN tunnel for phase 2 IKE negotiations."
      },
      "Phase1IntegrityAlgorithmsRequestList": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/Phase1IntegrityAlgorithmsRequestListValue"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        }
      },
      "Phase1IntegrityAlgorithmsRequestListValue": {
        "type": "object",
        "properties": {
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The value for the integrity algorithm."
              }
            ]
          }
        },
        "description": "Specifies the integrity algorithm for the VPN tunnel for phase 1 IKE negotiations."
      },
      "Phase2IntegrityAlgorithmsRequestList": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/Phase2IntegrityAlgorithmsRequestListValue"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        }
      },
      "Phase2IntegrityAlgorithmsRequestListValue": {
        "type": "object",
        "properties": {
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The integrity algorithm."
              }
            ]
          }
        },
        "description": "Specifies the integrity algorithm for the VPN tunnel for phase 2 IKE negotiations."
      },
      "Phase1DHGroupNumbersRequestList": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/Phase1DHGroupNumbersRequestListValue"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        }
      },
      "Phase1DHGroupNumbersRequestListValue": {
        "type": "object",
        "properties": {
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "The Diffie-Hellmann group number."
              }
            ]
          }
        },
        "description": "Specifies a Diffie-Hellman group number for the VPN tunnel for phase 1 IKE negotiations."
      },
      "Phase2DHGroupNumbersRequestList": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/Phase2DHGroupNumbersRequestListValue"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        }
      },
      "Phase2DHGroupNumbersRequestListValue": {
        "type": "object",
        "properties": {
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "The Diffie-Hellmann group number."
              }
            ]
          }
        },
        "description": "Specifies a Diffie-Hellman group number for the VPN tunnel for phase 2 IKE negotiations."
      },
      "IKEVersionsRequestList": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/IKEVersionsRequestListValue"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        }
      },
      "IKEVersionsRequestListValue": {
        "type": "object",
        "properties": {
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The IKE version."
              }
            ]
          }
        },
        "description": "The IKE version that is permitted for the VPN tunnel."
      },
      "VpnTunnelLogOptionsSpecification": {
        "type": "object",
        "properties": {
          "CloudWatchLogOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/CloudWatchLogOptionsSpecification"
              },
              {
                "description": "Options for sending VPN tunnel logs to CloudWatch."
              }
            ]
          }
        },
        "description": "Options for logging VPN tunnel activity."
      },
      "CloudWatchLogOptionsSpecification": {
        "type": "object",
        "properties": {
          "LogEnabled": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "<p>Enable or disable VPN tunnel logging feature. Default value is <code>False</code>.</p> <p>Valid values: <code>True</code> | <code>False</code> </p>"
              }
            ]
          },
          "LogGroupArn": {
            "allOf": [
              {
                "$ref": "#/$defs/CloudWatchLogGroupArn"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the CloudWatch log group to send logs to."
              }
            ]
          },
          "LogOutputFormat": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "<p>Set log format. Default format is <code>json</code>.</p> <p>Valid values: <code>json</code> | <code>text</code> </p>"
              }
            ]
          }
        },
        "description": "Options for sending VPN tunnel logs to CloudWatch."
      },
      "Boolean": {
        "type": "boolean"
      },
      "CloudWatchLogGroupArn": {
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "http://ec2.us-east-1.amazonaws.com/#Action=ModifyVpnTunnelOptions{?VpnConnectionId,VpnTunnelOutsideIpAddress,TunnelOptions,DryRun,SkipTunnelReplacement,Action,Version}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**VpnConnection**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
