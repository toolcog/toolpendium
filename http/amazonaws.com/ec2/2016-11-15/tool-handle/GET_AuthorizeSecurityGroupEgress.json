{
  "name": "GET_AuthorizeSecurityGroupEgress",
  "description": "<p>Adds the specified outbound (egress) rules to a security group for use with a VPC.</p> <p>An outbound rule permits instances to send traffic to the specified IPv4 or IPv6 CIDR address ranges, or to the instances that are associated with the specified source security groups. When specifying an outbound rule for your security group in a VPC, the <code>IpPermissions</code> must include a destination for the traffic.</p> <p>You specify a protocol for each rule (for example, TCP). For the TCP and UDP protocols, you must also specify the destination port or port range. For the ICMP protocol, you must also specify the ICMP type and code. You can use -1 for the type or code to mean all types or all codes.</p> <p>Rule changes are propagated to affected instances as quickly as possible. However, a small delay might occur.</p> <p>For information about VPC security group quotas, see <a href=\"https://docs.aws.amazon.com/vpc/latest/userguide/amazon-vpc-limits.html\">Amazon VPC quotas</a>.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "DryRun": {
        "type": "boolean",
        "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
      },
      "GroupId": {
        "type": "string",
        "description": "The ID of the security group."
      },
      "IpPermissions": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/IpPermission"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        },
        "description": "The sets of IP permissions. You can't specify a destination security group and a CIDR IP address range in the same set of permissions."
      },
      "TagSpecification": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/TagSpecification"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        },
        "description": "The tags applied to the security group rule."
      },
      "CidrIp": {
        "type": "string",
        "description": "Not supported. Use a set of IP permissions to specify the CIDR."
      },
      "FromPort": {
        "type": "integer",
        "description": "Not supported. Use a set of IP permissions to specify the port."
      },
      "IpProtocol": {
        "type": "string",
        "description": "Not supported. Use a set of IP permissions to specify the protocol name or number."
      },
      "ToPort": {
        "type": "integer",
        "description": "Not supported. Use a set of IP permissions to specify the port."
      },
      "SourceSecurityGroupName": {
        "type": "string",
        "description": "Not supported. Use a set of IP permissions to specify a destination security group."
      },
      "SourceSecurityGroupOwnerId": {
        "type": "string",
        "description": "Not supported. Use a set of IP permissions to specify a destination security group."
      },
      "Action": {
        "type": "string",
        "enum": [
          "AuthorizeSecurityGroupEgress"
        ]
      },
      "Version": {
        "type": "string",
        "enum": [
          "2016-11-15"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      }
    },
    "required": [
      "GroupId",
      "Action",
      "Version"
    ],
    "$defs": {
      "IpPermission": {
        "type": "object",
        "properties": {
          "FromPort": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "xml": {
                  "name": "fromPort"
                },
                "description": "If the protocol is TCP or UDP, this is the start of the port range. If the protocol is ICMP or ICMPv6, this is the type number. A value of -1 indicates all ICMP/ICMPv6 types. If you specify all ICMP/ICMPv6 types, you must specify all ICMP/ICMPv6 codes."
              }
            ]
          },
          "IpProtocol": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "ipProtocol"
                },
                "description": "<p>The IP protocol name (<code>tcp</code>, <code>udp</code>, <code>icmp</code>, <code>icmpv6</code>) or number (see <a href=\"http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml\">Protocol Numbers</a>).</p> <p>Use <code>-1</code> to specify all protocols. When authorizing security group rules, specifying <code>-1</code> or a protocol number other than <code>tcp</code>, <code>udp</code>, <code>icmp</code>, or <code>icmpv6</code> allows traffic on all ports, regardless of any port range you specify. For <code>tcp</code>, <code>udp</code>, and <code>icmp</code>, you must specify a port range. For <code>icmpv6</code>, the port range is optional; if you omit the port range, traffic for all types and codes is allowed.</p>"
              }
            ]
          },
          "IpRanges": {
            "allOf": [
              {
                "$ref": "#/$defs/IpRangeList"
              },
              {
                "xml": {
                  "name": "ipRanges"
                },
                "description": "The IPv4 ranges."
              }
            ]
          },
          "Ipv6Ranges": {
            "allOf": [
              {
                "$ref": "#/$defs/Ipv6RangeList"
              },
              {
                "xml": {
                  "name": "ipv6Ranges"
                },
                "description": "The IPv6 ranges."
              }
            ]
          },
          "PrefixListIds": {
            "allOf": [
              {
                "$ref": "#/$defs/PrefixListIdList"
              },
              {
                "xml": {
                  "name": "prefixListIds"
                },
                "description": "The prefix list IDs."
              }
            ]
          },
          "ToPort": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "xml": {
                  "name": "toPort"
                },
                "description": "If the protocol is TCP or UDP, this is the end of the port range. If the protocol is ICMP or ICMPv6, this is the code. A value of -1 indicates all ICMP/ICMPv6 codes. If you specify all ICMP/ICMPv6 types, you must specify all ICMP/ICMPv6 codes."
              }
            ]
          },
          "UserIdGroupPairs": {
            "allOf": [
              {
                "$ref": "#/$defs/UserIdGroupPairList"
              },
              {
                "xml": {
                  "name": "groups"
                },
                "description": "The security group and Amazon Web Services account ID pairs."
              }
            ]
          }
        },
        "description": "Describes a set of permissions for a security group rule."
      },
      "Integer": {
        "type": "integer"
      },
      "String": {
        "type": "string"
      },
      "IpRangeList": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/IpRange"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        }
      },
      "IpRange": {
        "type": "object",
        "properties": {
          "CidrIp": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "cidrIp"
                },
                "description": "The IPv4 CIDR range. You can either specify a CIDR range or a source security group, not both. To specify a single IPv4 address, use the /32 prefix length."
              }
            ]
          },
          "Description": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "description"
                },
                "description": "<p>A description for the security group rule that references this IPv4 address range.</p> <p>Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&amp;;{}!$*</p>"
              }
            ]
          }
        },
        "description": "Describes an IPv4 range."
      },
      "Ipv6RangeList": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/Ipv6Range"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        }
      },
      "Ipv6Range": {
        "type": "object",
        "properties": {
          "CidrIpv6": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "cidrIpv6"
                },
                "description": "The IPv6 CIDR range. You can either specify a CIDR range or a source security group, not both. To specify a single IPv6 address, use the /128 prefix length."
              }
            ]
          },
          "Description": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "description"
                },
                "description": "<p>A description for the security group rule that references this IPv6 address range.</p> <p>Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&amp;;{}!$*</p>"
              }
            ]
          }
        },
        "description": "Describes an IPv6 range."
      },
      "PrefixListIdList": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/PrefixListId"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        }
      },
      "PrefixListId": {
        "type": "object",
        "properties": {
          "Description": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "description"
                },
                "description": "<p>A description for the security group rule that references this prefix list ID.</p> <p>Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*</p>"
              }
            ]
          },
          "PrefixListId": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "prefixListId"
                },
                "description": "The ID of the prefix."
              }
            ]
          }
        },
        "description": "Describes a prefix list ID."
      },
      "UserIdGroupPairList": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/UserIdGroupPair"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        }
      },
      "UserIdGroupPair": {
        "type": "object",
        "properties": {
          "Description": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "description"
                },
                "description": "<p>A description for the security group rule that references this user ID group pair.</p> <p>Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*</p>"
              }
            ]
          },
          "GroupId": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "groupId"
                },
                "description": "The ID of the security group."
              }
            ]
          },
          "GroupName": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "groupName"
                },
                "description": "<p>[Default VPC] The name of the security group. For a security group in a nondefault VPC, use the security group ID. </p> <p>For a referenced security group in another VPC, this value is not returned if the referenced security group is deleted.</p>"
              }
            ]
          },
          "PeeringStatus": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "peeringStatus"
                },
                "description": "The status of a VPC peering connection, if applicable."
              }
            ]
          },
          "UserId": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "userId"
                },
                "description": "<p>The ID of an Amazon Web Services account.</p> <p>For a referenced security group in another VPC, the account ID of the referenced security group is returned in the response. If the referenced security group is deleted, this value is not returned.</p>"
              }
            ]
          },
          "VpcId": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "vpcId"
                },
                "description": "The ID of the VPC for the referenced security group, if applicable."
              }
            ]
          },
          "VpcPeeringConnectionId": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "vpcPeeringConnectionId"
                },
                "description": "The ID of the VPC peering connection, if applicable."
              }
            ]
          }
        },
        "description": "Describes a security group and Amazon Web Services account ID pair."
      },
      "TagSpecification": {
        "type": "object",
        "properties": {
          "ResourceType": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceType"
              },
              {
                "xml": {
                  "name": "resourceType"
                },
                "description": "The type of resource to tag on creation."
              }
            ]
          },
          "Tags": {
            "allOf": [
              {
                "$ref": "#/$defs/TagList"
              },
              {
                "xml": {
                  "name": "Tag"
                },
                "description": "The tags to apply to the resource."
              }
            ]
          }
        },
        "description": "<p>The tags to apply to a resource when the resource is being created. When you specify a tag, you must specify the resource type to tag, otherwise the request will fail.</p> <note> <p>The <code>Valid Values</code> lists all the resource types that can be tagged. However, the action you're using might not support tagging all of these resource types. If you try to tag a resource type that is unsupported for the action you're using, you'll get an error.</p> </note>"
      },
      "ResourceType": {
        "type": "string",
        "enum": [
          "capacity-reservation",
          "client-vpn-endpoint",
          "customer-gateway",
          "carrier-gateway",
          "coip-pool",
          "dedicated-host",
          "dhcp-options",
          "egress-only-internet-gateway",
          "elastic-ip",
          "elastic-gpu",
          "export-image-task",
          "export-instance-task",
          "fleet",
          "fpga-image",
          "host-reservation",
          "image",
          "import-image-task",
          "import-snapshot-task",
          "instance",
          "instance-event-window",
          "internet-gateway",
          "ipam",
          "ipam-pool",
          "ipam-scope",
          "ipv4pool-ec2",
          "ipv6pool-ec2",
          "key-pair",
          "launch-template",
          "local-gateway",
          "local-gateway-route-table",
          "local-gateway-virtual-interface",
          "local-gateway-virtual-interface-group",
          "local-gateway-route-table-vpc-association",
          "local-gateway-route-table-virtual-interface-group-association",
          "natgateway",
          "network-acl",
          "network-interface",
          "network-insights-analysis",
          "network-insights-path",
          "network-insights-access-scope",
          "network-insights-access-scope-analysis",
          "placement-group",
          "prefix-list",
          "replace-root-volume-task",
          "reserved-instances",
          "route-table",
          "security-group",
          "security-group-rule",
          "snapshot",
          "spot-fleet-request",
          "spot-instances-request",
          "subnet",
          "subnet-cidr-reservation",
          "traffic-mirror-filter",
          "traffic-mirror-session",
          "traffic-mirror-target",
          "transit-gateway",
          "transit-gateway-attachment",
          "transit-gateway-connect-peer",
          "transit-gateway-multicast-domain",
          "transit-gateway-policy-table",
          "transit-gateway-route-table",
          "transit-gateway-route-table-announcement",
          "volume",
          "vpc",
          "vpc-endpoint",
          "vpc-endpoint-connection",
          "vpc-endpoint-service",
          "vpc-endpoint-service-permission",
          "vpc-peering-connection",
          "vpn-connection",
          "vpn-gateway",
          "vpc-flow-log",
          "capacity-reservation-fleet",
          "traffic-mirror-filter-rule",
          "vpc-endpoint-connection-device-type",
          "verified-access-instance",
          "verified-access-group",
          "verified-access-endpoint",
          "verified-access-policy",
          "verified-access-trust-provider",
          "vpn-connection-device-type",
          "vpc-block-public-access-exclusion",
          "ipam-resource-discovery",
          "ipam-resource-discovery-association",
          "instance-connect-endpoint"
        ]
      },
      "TagList": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/Tag"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        }
      },
      "Tag": {
        "type": "object",
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "key"
                },
                "description": "<p>The key of the tag.</p> <p>Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with <code>aws:</code>.</p>"
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "value"
                },
                "description": "<p>The value of the tag.</p> <p>Constraints: Tag values are case-sensitive and accept a maximum of 256 Unicode characters.</p>"
              }
            ]
          }
        },
        "description": "Describes a tag."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "http://ec2.us-east-1.amazonaws.com/#Action=AuthorizeSecurityGroupEgress{?DryRun,GroupId,IpPermissions,TagSpecification,CidrIp,FromPort,IpProtocol,ToPort,SourceSecurityGroupName,SourceSecurityGroupOwnerId,Action,Version}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Return**",
            "**SecurityGroupRules**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
