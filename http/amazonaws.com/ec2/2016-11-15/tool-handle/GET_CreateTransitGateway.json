{
  "name": "GET_CreateTransitGateway",
  "description": "<p>Creates a transit gateway.</p> <p>You can use a transit gateway to interconnect your virtual private clouds (VPC) and on-premises networks. After the transit gateway enters the <code>available</code> state, you can attach your VPCs and VPN connections to the transit gateway.</p> <p>To attach your VPCs, use <a>CreateTransitGatewayVpcAttachment</a>.</p> <p>To attach a VPN connection, use <a>CreateCustomerGateway</a> to create a customer gateway and specify the ID of the customer gateway and the ID of the transit gateway in a call to <a>CreateVpnConnection</a>.</p> <p>When you create a transit gateway, we create a default transit gateway route table and use it as the default association route table and the default propagation route table. You can use <a>CreateTransitGatewayRouteTable</a> to create additional transit gateway route tables. If you disable automatic route propagation, we do not create a default transit gateway route table. You can use <a>EnableTransitGatewayRouteTablePropagation</a> to propagate routes from a resource attachment to a transit gateway route table. If you disable automatic associations, you can use <a>AssociateTransitGatewayRouteTable</a> to associate a resource attachment with a transit gateway route table.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "Description": {
        "type": "string",
        "description": "A description of the transit gateway."
      },
      "Options": {
        "type": "object",
        "properties": {
          "AmazonSideAsn": {
            "allOf": [
              {
                "$ref": "#/$defs/Long"
              },
              {
                "description": "A private Autonomous System Number (ASN) for the Amazon side of a BGP session. The range is 64512 to 65534 for 16-bit ASNs and 4200000000 to 4294967294 for 32-bit ASNs. The default is <code>64512</code>."
              }
            ]
          },
          "AutoAcceptSharedAttachments": {
            "allOf": [
              {
                "$ref": "#/$defs/AutoAcceptSharedAttachmentsValue"
              },
              {
                "description": "Enable or disable automatic acceptance of attachment requests. Disabled by default."
              }
            ]
          },
          "DefaultRouteTableAssociation": {
            "allOf": [
              {
                "$ref": "#/$defs/DefaultRouteTableAssociationValue"
              },
              {
                "description": "Enable or disable automatic association with the default association route table. Enabled by default."
              }
            ]
          },
          "DefaultRouteTablePropagation": {
            "allOf": [
              {
                "$ref": "#/$defs/DefaultRouteTablePropagationValue"
              },
              {
                "description": "Enable or disable automatic propagation of routes to the default propagation route table. Enabled by default."
              }
            ]
          },
          "VpnEcmpSupport": {
            "allOf": [
              {
                "$ref": "#/$defs/VpnEcmpSupportValue"
              },
              {
                "description": "Enable or disable Equal Cost Multipath Protocol support. Enabled by default."
              }
            ]
          },
          "DnsSupport": {
            "allOf": [
              {
                "$ref": "#/$defs/DnsSupportValue"
              },
              {
                "description": "Enable or disable DNS support. Enabled by default."
              }
            ]
          },
          "MulticastSupport": {
            "allOf": [
              {
                "$ref": "#/$defs/MulticastSupportValue"
              },
              {
                "description": "Indicates whether multicast is enabled on the transit gateway"
              }
            ]
          },
          "TransitGatewayCidrBlocks": {
            "allOf": [
              {
                "$ref": "#/$defs/TransitGatewayCidrBlockStringList"
              },
              {
                "description": "One or more IPv4 or IPv6 CIDR blocks for the transit gateway. Must be a size /24 CIDR block or larger for IPv4, or a size /64 CIDR block or larger for IPv6."
              }
            ]
          }
        },
        "description": "The transit gateway options."
      },
      "TagSpecification": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/TagSpecification"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        },
        "description": "The tags to apply to the transit gateway."
      },
      "DryRun": {
        "type": "boolean",
        "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
      },
      "Action": {
        "type": "string",
        "enum": [
          "CreateTransitGateway"
        ]
      },
      "Version": {
        "type": "string",
        "enum": [
          "2016-11-15"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      }
    },
    "required": [
      "Action",
      "Version"
    ],
    "$defs": {
      "Long": {
        "type": "integer"
      },
      "AutoAcceptSharedAttachmentsValue": {
        "type": "string",
        "enum": [
          "enable",
          "disable"
        ]
      },
      "DefaultRouteTableAssociationValue": {
        "type": "string",
        "enum": [
          "enable",
          "disable"
        ]
      },
      "DefaultRouteTablePropagationValue": {
        "type": "string",
        "enum": [
          "enable",
          "disable"
        ]
      },
      "VpnEcmpSupportValue": {
        "type": "string",
        "enum": [
          "enable",
          "disable"
        ]
      },
      "DnsSupportValue": {
        "type": "string",
        "enum": [
          "enable",
          "disable"
        ]
      },
      "MulticastSupportValue": {
        "type": "string",
        "enum": [
          "enable",
          "disable"
        ]
      },
      "TransitGatewayCidrBlockStringList": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/String"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        }
      },
      "String": {
        "type": "string"
      },
      "TagSpecification": {
        "type": "object",
        "properties": {
          "ResourceType": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceType"
              },
              {
                "xml": {
                  "name": "resourceType"
                },
                "description": "The type of resource to tag on creation."
              }
            ]
          },
          "Tags": {
            "allOf": [
              {
                "$ref": "#/$defs/TagList"
              },
              {
                "xml": {
                  "name": "Tag"
                },
                "description": "The tags to apply to the resource."
              }
            ]
          }
        },
        "description": "<p>The tags to apply to a resource when the resource is being created. When you specify a tag, you must specify the resource type to tag, otherwise the request will fail.</p> <note> <p>The <code>Valid Values</code> lists all the resource types that can be tagged. However, the action you're using might not support tagging all of these resource types. If you try to tag a resource type that is unsupported for the action you're using, you'll get an error.</p> </note>"
      },
      "ResourceType": {
        "type": "string",
        "enum": [
          "capacity-reservation",
          "client-vpn-endpoint",
          "customer-gateway",
          "carrier-gateway",
          "coip-pool",
          "dedicated-host",
          "dhcp-options",
          "egress-only-internet-gateway",
          "elastic-ip",
          "elastic-gpu",
          "export-image-task",
          "export-instance-task",
          "fleet",
          "fpga-image",
          "host-reservation",
          "image",
          "import-image-task",
          "import-snapshot-task",
          "instance",
          "instance-event-window",
          "internet-gateway",
          "ipam",
          "ipam-pool",
          "ipam-scope",
          "ipv4pool-ec2",
          "ipv6pool-ec2",
          "key-pair",
          "launch-template",
          "local-gateway",
          "local-gateway-route-table",
          "local-gateway-virtual-interface",
          "local-gateway-virtual-interface-group",
          "local-gateway-route-table-vpc-association",
          "local-gateway-route-table-virtual-interface-group-association",
          "natgateway",
          "network-acl",
          "network-interface",
          "network-insights-analysis",
          "network-insights-path",
          "network-insights-access-scope",
          "network-insights-access-scope-analysis",
          "placement-group",
          "prefix-list",
          "replace-root-volume-task",
          "reserved-instances",
          "route-table",
          "security-group",
          "security-group-rule",
          "snapshot",
          "spot-fleet-request",
          "spot-instances-request",
          "subnet",
          "subnet-cidr-reservation",
          "traffic-mirror-filter",
          "traffic-mirror-session",
          "traffic-mirror-target",
          "transit-gateway",
          "transit-gateway-attachment",
          "transit-gateway-connect-peer",
          "transit-gateway-multicast-domain",
          "transit-gateway-policy-table",
          "transit-gateway-route-table",
          "transit-gateway-route-table-announcement",
          "volume",
          "vpc",
          "vpc-endpoint",
          "vpc-endpoint-connection",
          "vpc-endpoint-service",
          "vpc-endpoint-service-permission",
          "vpc-peering-connection",
          "vpn-connection",
          "vpn-gateway",
          "vpc-flow-log",
          "capacity-reservation-fleet",
          "traffic-mirror-filter-rule",
          "vpc-endpoint-connection-device-type",
          "verified-access-instance",
          "verified-access-group",
          "verified-access-endpoint",
          "verified-access-policy",
          "verified-access-trust-provider",
          "vpn-connection-device-type",
          "vpc-block-public-access-exclusion",
          "ipam-resource-discovery",
          "ipam-resource-discovery-association",
          "instance-connect-endpoint"
        ]
      },
      "TagList": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/Tag"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        }
      },
      "Tag": {
        "type": "object",
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "key"
                },
                "description": "<p>The key of the tag.</p> <p>Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with <code>aws:</code>.</p>"
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "value"
                },
                "description": "<p>The value of the tag.</p> <p>Constraints: Tag values are case-sensitive and accept a maximum of 256 Unicode characters.</p>"
              }
            ]
          }
        },
        "description": "Describes a tag."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "http://ec2.us-east-1.amazonaws.com/#Action=CreateTransitGateway{?Description,Options,TagSpecification,DryRun,Action,Version}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**TransitGateway**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
