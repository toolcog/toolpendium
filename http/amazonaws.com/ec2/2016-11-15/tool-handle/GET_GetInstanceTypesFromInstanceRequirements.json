{
  "name": "GET_GetInstanceTypesFromInstanceRequirements",
  "description": "<p>Returns a list of instance types with the specified instance attributes. You can use the response to preview the instance types without launching instances. Note that the response does not consider capacity.</p> <p>When you specify multiple parameters, you get instance types that satisfy all of the specified parameters. If you specify multiple values for a parameter, you get instance types that satisfy any of the specified values.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet-attribute-based-instance-type-selection.html#spotfleet-get-instance-types-from-instance-requirements\">Preview instance types with specified attributes</a>, <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-attribute-based-instance-type-selection.html\">Attribute-based instance type selection for EC2 Fleet</a>, <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet-attribute-based-instance-type-selection.html\">Attribute-based instance type selection for Spot Fleet</a>, and <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-placement-score.html\">Spot placement score</a> in the <i>Amazon EC2 User Guide</i>, and <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-asg-instance-type-requirements.html\">Creating an Auto Scaling group using attribute-based instance type selection</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "DryRun": {
        "type": "boolean",
        "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
      },
      "ArchitectureType": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/ArchitectureType"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        },
        "minItems": 0,
        "maxItems": 3,
        "description": "The processor architecture type."
      },
      "VirtualizationType": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/VirtualizationType"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        },
        "minItems": 0,
        "maxItems": 2,
        "description": "The virtualization type."
      },
      "InstanceRequirements": {
        "type": "object",
        "required": [
          "VCpuCount",
          "MemoryMiB"
        ],
        "properties": {
          "VCpuCount": {
            "allOf": [
              {
                "$ref": "#/$defs/VCpuCountRangeRequest"
              },
              {
                "description": "The minimum and maximum number of vCPUs."
              }
            ]
          },
          "MemoryMiB": {
            "allOf": [
              {
                "$ref": "#/$defs/MemoryMiBRequest"
              },
              {
                "description": "The minimum and maximum amount of memory, in MiB."
              }
            ]
          },
          "CpuManufacturers": {
            "allOf": [
              {
                "$ref": "#/$defs/CpuManufacturerSet"
              },
              {
                "xml": {
                  "name": "CpuManufacturer"
                },
                "description": "<p>The CPU manufacturers to include.</p> <ul> <li> <p>For instance types with Intel CPUs, specify <code>intel</code>.</p> </li> <li> <p>For instance types with AMD CPUs, specify <code>amd</code>.</p> </li> <li> <p>For instance types with Amazon Web Services CPUs, specify <code>amazon-web-services</code>.</p> </li> </ul> <note> <p>Don't confuse the CPU manufacturer with the CPU architecture. Instances will be launched with a compatible CPU architecture based on the Amazon Machine Image (AMI) that you specify in your launch template.</p> </note> <p>Default: Any manufacturer</p>"
              }
            ]
          },
          "MemoryGiBPerVCpu": {
            "allOf": [
              {
                "$ref": "#/$defs/MemoryGiBPerVCpuRequest"
              },
              {
                "description": "<p>The minimum and maximum amount of memory per vCPU, in GiB.</p> <p>Default: No minimum or maximum limits</p>"
              }
            ]
          },
          "ExcludedInstanceTypes": {
            "allOf": [
              {
                "$ref": "#/$defs/ExcludedInstanceTypeSet"
              },
              {
                "xml": {
                  "name": "ExcludedInstanceType"
                },
                "description": "<p>The instance types to exclude.</p> <p>You can use strings with one or more wild cards, represented by an asterisk (<code>*</code>), to exclude an instance family, type, size, or generation. The following are examples: <code>m5.8xlarge</code>, <code>c5*.*</code>, <code>m5a.*</code>, <code>r*</code>, <code>*3*</code>.</p> <p>For example, if you specify <code>c5*</code>,Amazon EC2 will exclude the entire C5 instance family, which includes all C5a and C5n instance types. If you specify <code>m5a.*</code>, Amazon EC2 will exclude all the M5a instance types, but not the M5n instance types.</p> <note> <p>If you specify <code>ExcludedInstanceTypes</code>, you can't specify <code>AllowedInstanceTypes</code>.</p> </note> <p>Default: No excluded instance types</p>"
              }
            ]
          },
          "InstanceGenerations": {
            "allOf": [
              {
                "$ref": "#/$defs/InstanceGenerationSet"
              },
              {
                "xml": {
                  "name": "InstanceGeneration"
                },
                "description": "<p>Indicates whether current or previous generation instance types are included. The current generation instance types are recommended for use. Current generation instance types are typically the latest two to three generations in each instance family. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html\">Instance types</a> in the <i>Amazon EC2 User Guide</i>.</p> <p>For current generation instance types, specify <code>current</code>.</p> <p>For previous generation instance types, specify <code>previous</code>.</p> <p>Default: Current and previous generation instance types</p>"
              }
            ]
          },
          "SpotMaxPricePercentageOverLowestPrice": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "<p>The price protection threshold for Spot Instance. This is the maximum you’ll pay for an Spot Instance, expressed as a percentage above the least expensive current generation M, C, or R instance type with your specified attributes. When Amazon EC2 selects instance types with your attributes, it excludes instance types priced above your threshold.</p> <p>The parameter accepts an integer, which Amazon EC2 interprets as a percentage.</p> <p>To turn off price protection, specify a high value, such as <code>999999</code>.</p> <p>This parameter is not supported for <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetSpotPlacementScores.html\">GetSpotPlacementScores</a> and <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetInstanceTypesFromInstanceRequirements.html\">GetInstanceTypesFromInstanceRequirements</a>.</p> <note> <p>If you set <code>TargetCapacityUnitType</code> to <code>vcpu</code> or <code>memory-mib</code>, the price protection threshold is applied based on the per-vCPU or per-memory price instead of the per-instance price.</p> </note> <p>Default: <code>100</code> </p>"
              }
            ]
          },
          "OnDemandMaxPricePercentageOverLowestPrice": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "<p>The price protection threshold for On-Demand Instances. This is the maximum you’ll pay for an On-Demand Instance, expressed as a percentage above the least expensive current generation M, C, or R instance type with your specified attributes. When Amazon EC2 selects instance types with your attributes, it excludes instance types priced above your threshold.</p> <p>The parameter accepts an integer, which Amazon EC2 interprets as a percentage.</p> <p>To turn off price protection, specify a high value, such as <code>999999</code>.</p> <p>This parameter is not supported for <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetSpotPlacementScores.html\">GetSpotPlacementScores</a> and <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetInstanceTypesFromInstanceRequirements.html\">GetInstanceTypesFromInstanceRequirements</a>.</p> <note> <p>If you set <code>TargetCapacityUnitType</code> to <code>vcpu</code> or <code>memory-mib</code>, the price protection threshold is applied based on the per-vCPU or per-memory price instead of the per-instance price.</p> </note> <p>Default: <code>20</code> </p>"
              }
            ]
          },
          "BareMetal": {
            "allOf": [
              {
                "$ref": "#/$defs/BareMetal"
              },
              {
                "description": "<p>Indicates whether bare metal instance types must be included, excluded, or required.</p> <ul> <li> <p>To include bare metal instance types, specify <code>included</code>.</p> </li> <li> <p>To require only bare metal instance types, specify <code>required</code>.</p> </li> <li> <p>To exclude bare metal instance types, specify <code>excluded</code>.</p> </li> </ul> <p>Default: <code>excluded</code> </p>"
              }
            ]
          },
          "BurstablePerformance": {
            "allOf": [
              {
                "$ref": "#/$defs/BurstablePerformance"
              },
              {
                "description": "<p>Indicates whether burstable performance T instance types are included, excluded, or required. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances.html\">Burstable performance instances</a>.</p> <ul> <li> <p>To include burstable performance instance types, specify <code>included</code>.</p> </li> <li> <p>To require only burstable performance instance types, specify <code>required</code>.</p> </li> <li> <p>To exclude burstable performance instance types, specify <code>excluded</code>.</p> </li> </ul> <p>Default: <code>excluded</code> </p>"
              }
            ]
          },
          "RequireHibernateSupport": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "<p>Indicates whether instance types must support hibernation for On-Demand Instances.</p> <p>This parameter is not supported for <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetSpotPlacementScores.html\">GetSpotPlacementScores</a>.</p> <p>Default: <code>false</code> </p>"
              }
            ]
          },
          "NetworkInterfaceCount": {
            "allOf": [
              {
                "$ref": "#/$defs/NetworkInterfaceCountRequest"
              },
              {
                "description": "<p>The minimum and maximum number of network interfaces.</p> <p>Default: No minimum or maximum limits</p>"
              }
            ]
          },
          "LocalStorage": {
            "allOf": [
              {
                "$ref": "#/$defs/LocalStorage"
              },
              {
                "description": "<p>Indicates whether instance types with instance store volumes are included, excluded, or required. For more information, <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html\">Amazon EC2 instance store</a> in the <i>Amazon EC2 User Guide</i>.</p> <ul> <li> <p>To include instance types with instance store volumes, specify <code>included</code>.</p> </li> <li> <p>To require only instance types with instance store volumes, specify <code>required</code>.</p> </li> <li> <p>To exclude instance types with instance store volumes, specify <code>excluded</code>.</p> </li> </ul> <p>Default: <code>included</code> </p>"
              }
            ]
          },
          "LocalStorageTypes": {
            "allOf": [
              {
                "$ref": "#/$defs/LocalStorageTypeSet"
              },
              {
                "xml": {
                  "name": "LocalStorageType"
                },
                "description": "<p>The type of local storage that is required.</p> <ul> <li> <p>For instance types with hard disk drive (HDD) storage, specify <code>hdd</code>.</p> </li> <li> <p>For instance types with solid state drive (SSD) storage, specify <code>ssd</code>.</p> </li> </ul> <p>Default: <code>hdd</code> and <code>ssd</code> </p>"
              }
            ]
          },
          "TotalLocalStorageGB": {
            "allOf": [
              {
                "$ref": "#/$defs/TotalLocalStorageGBRequest"
              },
              {
                "description": "<p>The minimum and maximum amount of total local storage, in GB.</p> <p>Default: No minimum or maximum limits</p>"
              }
            ]
          },
          "BaselineEbsBandwidthMbps": {
            "allOf": [
              {
                "$ref": "#/$defs/BaselineEbsBandwidthMbpsRequest"
              },
              {
                "description": "<p>The minimum and maximum baseline bandwidth to Amazon EBS, in Mbps. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-optimized.html\">Amazon EBS–optimized instances</a> in the <i>Amazon EC2 User Guide</i>.</p> <p>Default: No minimum or maximum limits</p>"
              }
            ]
          },
          "AcceleratorTypes": {
            "allOf": [
              {
                "$ref": "#/$defs/AcceleratorTypeSet"
              },
              {
                "xml": {
                  "name": "AcceleratorType"
                },
                "description": "<p>The accelerator types that must be on the instance type.</p> <ul> <li> <p>To include instance types with GPU hardware, specify <code>gpu</code>.</p> </li> <li> <p>To include instance types with FPGA hardware, specify <code>fpga</code>.</p> </li> <li> <p>To include instance types with inference hardware, specify <code>inference</code>.</p> </li> </ul> <p>Default: Any accelerator type</p>"
              }
            ]
          },
          "AcceleratorCount": {
            "allOf": [
              {
                "$ref": "#/$defs/AcceleratorCountRequest"
              },
              {
                "description": "<p>The minimum and maximum number of accelerators (GPUs, FPGAs, or Amazon Web Services Inferentia chips) on an instance.</p> <p>To exclude accelerator-enabled instance types, set <code>Max</code> to <code>0</code>.</p> <p>Default: No minimum or maximum limits</p>"
              }
            ]
          },
          "AcceleratorManufacturers": {
            "allOf": [
              {
                "$ref": "#/$defs/AcceleratorManufacturerSet"
              },
              {
                "xml": {
                  "name": "AcceleratorManufacturer"
                },
                "description": "<p>Indicates whether instance types must have accelerators by specific manufacturers.</p> <ul> <li> <p>For instance types with NVIDIA devices, specify <code>nvidia</code>.</p> </li> <li> <p>For instance types with AMD devices, specify <code>amd</code>.</p> </li> <li> <p>For instance types with Amazon Web Services devices, specify <code>amazon-web-services</code>.</p> </li> <li> <p>For instance types with Xilinx devices, specify <code>xilinx</code>.</p> </li> </ul> <p>Default: Any manufacturer</p>"
              }
            ]
          },
          "AcceleratorNames": {
            "allOf": [
              {
                "$ref": "#/$defs/AcceleratorNameSet"
              },
              {
                "xml": {
                  "name": "AcceleratorName"
                },
                "description": "<p>The accelerators that must be on the instance type.</p> <ul> <li> <p>For instance types with NVIDIA A100 GPUs, specify <code>a100</code>.</p> </li> <li> <p>For instance types with NVIDIA V100 GPUs, specify <code>v100</code>.</p> </li> <li> <p>For instance types with NVIDIA K80 GPUs, specify <code>k80</code>.</p> </li> <li> <p>For instance types with NVIDIA T4 GPUs, specify <code>t4</code>.</p> </li> <li> <p>For instance types with NVIDIA M60 GPUs, specify <code>m60</code>.</p> </li> <li> <p>For instance types with AMD Radeon Pro V520 GPUs, specify <code>radeon-pro-v520</code>.</p> </li> <li> <p>For instance types with Xilinx VU9P FPGAs, specify <code> vu9p</code>.</p> </li> <li> <p>For instance types with Amazon Web Services Inferentia chips, specify <code>inferentia</code>.</p> </li> <li> <p>For instance types with NVIDIA GRID K520 GPUs, specify <code>k520</code>.</p> </li> </ul> <p>Default: Any accelerator</p>"
              }
            ]
          },
          "AcceleratorTotalMemoryMiB": {
            "allOf": [
              {
                "$ref": "#/$defs/AcceleratorTotalMemoryMiBRequest"
              },
              {
                "description": "<p>The minimum and maximum amount of total accelerator memory, in MiB.</p> <p>Default: No minimum or maximum limits</p>"
              }
            ]
          },
          "NetworkBandwidthGbps": {
            "allOf": [
              {
                "$ref": "#/$defs/NetworkBandwidthGbpsRequest"
              },
              {
                "description": "<p>The minimum and maximum amount of baseline network bandwidth, in gigabits per second (Gbps). For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-network-bandwidth.html\">Amazon EC2 instance network bandwidth</a> in the <i>Amazon EC2 User Guide</i>.</p> <p>Default: No minimum or maximum limits</p>"
              }
            ]
          },
          "AllowedInstanceTypes": {
            "allOf": [
              {
                "$ref": "#/$defs/AllowedInstanceTypeSet"
              },
              {
                "xml": {
                  "name": "AllowedInstanceType"
                },
                "description": "<p>The instance types to apply your specified attributes against. All other instance types are ignored, even if they match your specified attributes.</p> <p>You can use strings with one or more wild cards, represented by an asterisk (<code>*</code>), to allow an instance type, size, or generation. The following are examples: <code>m5.8xlarge</code>, <code>c5*.*</code>, <code>m5a.*</code>, <code>r*</code>, <code>*3*</code>.</p> <p>For example, if you specify <code>c5*</code>,Amazon EC2 will allow the entire C5 instance family, which includes all C5a and C5n instance types. If you specify <code>m5a.*</code>, Amazon EC2 will allow all the M5a instance types, but not the M5n instance types.</p> <note> <p>If you specify <code>AllowedInstanceTypes</code>, you can't specify <code>ExcludedInstanceTypes</code>.</p> </note> <p>Default: All instance types</p>"
              }
            ]
          }
        },
        "description": "The attributes required for the instance types."
      },
      "MaxResults": {
        "type": "integer",
        "description": "The maximum number of items to return for this request. To get the next page of items, make another request with the token returned in the output. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Query-Requests.html#api-pagination\">Pagination</a>."
      },
      "NextToken": {
        "type": "string",
        "description": "The token returned from a previous paginated request. Pagination continues from the end of the items returned by the previous request."
      },
      "Action": {
        "type": "string",
        "enum": [
          "GetInstanceTypesFromInstanceRequirements"
        ]
      },
      "Version": {
        "type": "string",
        "enum": [
          "2016-11-15"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      }
    },
    "required": [
      "ArchitectureType",
      "VirtualizationType",
      "InstanceRequirements",
      "Action",
      "Version"
    ],
    "$defs": {
      "ArchitectureType": {
        "type": "string",
        "enum": [
          "i386",
          "x86_64",
          "arm64",
          "x86_64_mac",
          "arm64_mac"
        ]
      },
      "VirtualizationType": {
        "type": "string",
        "enum": [
          "hvm",
          "paravirtual"
        ]
      },
      "VCpuCountRangeRequest": {
        "type": "object",
        "required": [
          "Min"
        ],
        "properties": {
          "Min": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "The minimum number of vCPUs. To specify no minimum limit, specify <code>0</code>."
              }
            ]
          },
          "Max": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "The maximum number of vCPUs. To specify no maximum limit, omit this parameter."
              }
            ]
          }
        },
        "description": "The minimum and maximum number of vCPUs."
      },
      "Integer": {
        "type": "integer"
      },
      "MemoryMiBRequest": {
        "type": "object",
        "required": [
          "Min"
        ],
        "properties": {
          "Min": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "The minimum amount of memory, in MiB. To specify no minimum limit, specify <code>0</code>."
              }
            ]
          },
          "Max": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "The maximum amount of memory, in MiB. To specify no maximum limit, omit this parameter."
              }
            ]
          }
        },
        "description": "The minimum and maximum amount of memory, in MiB."
      },
      "CpuManufacturerSet": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/CpuManufacturer"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        }
      },
      "CpuManufacturer": {
        "type": "string",
        "enum": [
          "intel",
          "amd",
          "amazon-web-services"
        ]
      },
      "MemoryGiBPerVCpuRequest": {
        "type": "object",
        "properties": {
          "Min": {
            "allOf": [
              {
                "$ref": "#/$defs/Double"
              },
              {
                "description": "The minimum amount of memory per vCPU, in GiB. To specify no minimum limit, omit this parameter."
              }
            ]
          },
          "Max": {
            "allOf": [
              {
                "$ref": "#/$defs/Double"
              },
              {
                "description": "The maximum amount of memory per vCPU, in GiB. To specify no maximum limit, omit this parameter."
              }
            ]
          }
        },
        "description": "The minimum and maximum amount of memory per vCPU, in GiB."
      },
      "Double": {
        "type": "number",
        "format": "double"
      },
      "ExcludedInstanceTypeSet": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/ExcludedInstanceType"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        },
        "minItems": 0,
        "maxItems": 400
      },
      "ExcludedInstanceType": {
        "type": "string",
        "pattern": "[a-zA-Z0-9\\.\\*\\-]+",
        "minLength": 1,
        "maxLength": 30
      },
      "InstanceGenerationSet": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/InstanceGeneration"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        }
      },
      "InstanceGeneration": {
        "type": "string",
        "enum": [
          "current",
          "previous"
        ]
      },
      "BareMetal": {
        "type": "string",
        "enum": [
          "included",
          "required",
          "excluded"
        ]
      },
      "BurstablePerformance": {
        "type": "string",
        "enum": [
          "included",
          "required",
          "excluded"
        ]
      },
      "Boolean": {
        "type": "boolean"
      },
      "NetworkInterfaceCountRequest": {
        "type": "object",
        "properties": {
          "Min": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "The minimum number of network interfaces. To specify no minimum limit, omit this parameter."
              }
            ]
          },
          "Max": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "The maximum number of network interfaces. To specify no maximum limit, omit this parameter."
              }
            ]
          }
        },
        "description": "The minimum and maximum number of network interfaces."
      },
      "LocalStorage": {
        "type": "string",
        "enum": [
          "included",
          "required",
          "excluded"
        ]
      },
      "LocalStorageTypeSet": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/LocalStorageType"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        }
      },
      "LocalStorageType": {
        "type": "string",
        "enum": [
          "hdd",
          "ssd"
        ]
      },
      "TotalLocalStorageGBRequest": {
        "type": "object",
        "properties": {
          "Min": {
            "allOf": [
              {
                "$ref": "#/$defs/Double"
              },
              {
                "description": "The minimum amount of total local storage, in GB. To specify no minimum limit, omit this parameter."
              }
            ]
          },
          "Max": {
            "allOf": [
              {
                "$ref": "#/$defs/Double"
              },
              {
                "description": "The maximum amount of total local storage, in GB. To specify no maximum limit, omit this parameter."
              }
            ]
          }
        },
        "description": "The minimum and maximum amount of total local storage, in GB."
      },
      "BaselineEbsBandwidthMbpsRequest": {
        "type": "object",
        "properties": {
          "Min": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "The minimum baseline bandwidth, in Mbps. To specify no minimum limit, omit this parameter."
              }
            ]
          },
          "Max": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "The maximum baseline bandwidth, in Mbps. To specify no maximum limit, omit this parameter."
              }
            ]
          }
        },
        "description": "The minimum and maximum baseline bandwidth to Amazon EBS, in Mbps. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-optimized.html\">Amazon EBS–optimized instances</a> in the <i>Amazon EC2 User Guide</i>."
      },
      "AcceleratorTypeSet": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/AcceleratorType"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        }
      },
      "AcceleratorType": {
        "type": "string",
        "enum": [
          "gpu",
          "fpga",
          "inference"
        ]
      },
      "AcceleratorCountRequest": {
        "type": "object",
        "properties": {
          "Min": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "The minimum number of accelerators. To specify no minimum limit, omit this parameter."
              }
            ]
          },
          "Max": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "The maximum number of accelerators. To specify no maximum limit, omit this parameter. To exclude accelerator-enabled instance types, set <code>Max</code> to <code>0</code>."
              }
            ]
          }
        },
        "description": "The minimum and maximum number of accelerators (GPUs, FPGAs, or Amazon Web Services Inferentia chips) on an instance. To exclude accelerator-enabled instance types, set <code>Max</code> to <code>0</code>."
      },
      "AcceleratorManufacturerSet": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/AcceleratorManufacturer"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        }
      },
      "AcceleratorManufacturer": {
        "type": "string",
        "enum": [
          "nvidia",
          "amd",
          "amazon-web-services",
          "xilinx"
        ]
      },
      "AcceleratorNameSet": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/AcceleratorName"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        }
      },
      "AcceleratorName": {
        "type": "string",
        "enum": [
          "a100",
          "v100",
          "k80",
          "t4",
          "m60",
          "radeon-pro-v520",
          "vu9p",
          "inferentia",
          "k520"
        ]
      },
      "AcceleratorTotalMemoryMiBRequest": {
        "type": "object",
        "properties": {
          "Min": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "The minimum amount of accelerator memory, in MiB. To specify no minimum limit, omit this parameter."
              }
            ]
          },
          "Max": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "The maximum amount of accelerator memory, in MiB. To specify no maximum limit, omit this parameter."
              }
            ]
          }
        },
        "description": "The minimum and maximum amount of total accelerator memory, in MiB."
      },
      "NetworkBandwidthGbpsRequest": {
        "type": "object",
        "properties": {
          "Min": {
            "allOf": [
              {
                "$ref": "#/$defs/Double"
              },
              {
                "description": "The minimum amount of network bandwidth, in Gbps. To specify no minimum limit, omit this parameter."
              }
            ]
          },
          "Max": {
            "allOf": [
              {
                "$ref": "#/$defs/Double"
              },
              {
                "description": "The maximum amount of network bandwidth, in Gbps. To specify no maximum limit, omit this parameter."
              }
            ]
          }
        },
        "description": "<p>The minimum and maximum amount of network bandwidth, in gigabits per second (Gbps).</p> <note> <p>Setting the minimum bandwidth does not guarantee that your instance will achieve the minimum bandwidth. Amazon EC2 will identify instance types that support the specified minimum bandwidth, but the actual bandwidth of your instance might go below the specified minimum at times. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-network-bandwidth.html#available-instance-bandwidth\">Available instance bandwidth</a> in the <i>Amazon EC2 User Guide</i>.</p> </note>"
      },
      "AllowedInstanceTypeSet": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/AllowedInstanceType"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        },
        "minItems": 0,
        "maxItems": 400
      },
      "AllowedInstanceType": {
        "type": "string",
        "pattern": "[a-zA-Z0-9\\.\\*\\-]+",
        "minLength": 1,
        "maxLength": 30
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "http://ec2.us-east-1.amazonaws.com/#Action=GetInstanceTypesFromInstanceRequirements{?DryRun,ArchitectureType,VirtualizationType,InstanceRequirements,MaxResults,NextToken,Action,Version}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**InstanceTypes**",
            "**NextToken**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
