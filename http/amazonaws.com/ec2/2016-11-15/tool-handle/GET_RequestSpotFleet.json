{
  "name": "GET_RequestSpotFleet",
  "description": "<p>Creates a Spot Fleet request.</p> <p>The Spot Fleet request specifies the total target capacity and the On-Demand target capacity. Amazon EC2 calculates the difference between the total capacity and On-Demand capacity, and launches the difference as Spot capacity.</p> <p>You can submit a single request that includes multiple launch specifications that vary by instance type, AMI, Availability Zone, or subnet.</p> <p>By default, the Spot Fleet requests Spot Instances in the Spot Instance pool where the price per unit is the lowest. Each launch specification can include its own instance weighting that reflects the value of the instance type to your application workload.</p> <p>Alternatively, you can specify that the Spot Fleet distribute the target capacity across the Spot pools included in its launch specifications. By ensuring that the Spot Instances in your Spot Fleet are in different Spot pools, you can improve the availability of your fleet.</p> <p>You can specify tags for the Spot Fleet request and instances launched by the fleet. You cannot tag other resource types in a Spot Fleet request because only the <code>spot-fleet-request</code> and <code>instance</code> resource types are supported.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet-requests.html\">Spot Fleet requests</a> in the <i>Amazon EC2 User Guide</i>.</p> <important> <p>We strongly discourage using the RequestSpotFleet API because it is a legacy API with no planned investment. For options for requesting Spot Instances, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-best-practices.html#which-spot-request-method-to-use\">Which is the best Spot request method to use?</a> in the <i>Amazon EC2 User Guide</i>.</p> </important>",
  "parameters": {
    "type": "object",
    "properties": {
      "DryRun": {
        "type": "boolean",
        "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
      },
      "SpotFleetRequestConfig": {
        "type": "object",
        "required": [
          "IamFleetRole",
          "TargetCapacity"
        ],
        "properties": {
          "AllocationStrategy": {
            "allOf": [
              {
                "$ref": "#/$defs/AllocationStrategy"
              },
              {
                "xml": {
                  "name": "allocationStrategy"
                },
                "description": "<p>The strategy that determines how to allocate the target Spot Instance capacity across the Spot Instance pools specified by the Spot Fleet launch configuration. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet-allocation-strategy.html\">Allocation strategies for Spot Instances</a> in the <i>Amazon EC2 User Guide</i>.</p> <dl> <dt>priceCapacityOptimized (recommended)</dt> <dd> <p>Spot Fleet identifies the pools with the highest capacity availability for the number of instances that are launching. This means that we will request Spot Instances from the pools that we believe have the lowest chance of interruption in the near term. Spot Fleet then requests Spot Instances from the lowest priced of these pools.</p> </dd> <dt>capacityOptimized</dt> <dd> <p>Spot Fleet identifies the pools with the highest capacity availability for the number of instances that are launching. This means that we will request Spot Instances from the pools that we believe have the lowest chance of interruption in the near term. To give certain instance types a higher chance of launching first, use <code>capacityOptimizedPrioritized</code>. Set a priority for each instance type by using the <code>Priority</code> parameter for <code>LaunchTemplateOverrides</code>. You can assign the same priority to different <code>LaunchTemplateOverrides</code>. EC2 implements the priorities on a best-effort basis, but optimizes for capacity first. <code>capacityOptimizedPrioritized</code> is supported only if your Spot Fleet uses a launch template. Note that if the <code>OnDemandAllocationStrategy</code> is set to <code>prioritized</code>, the same priority is applied when fulfilling On-Demand capacity.</p> </dd> <dt>diversified</dt> <dd> <p>Spot Fleet requests instances from all of the Spot Instance pools that you specify.</p> </dd> <dt>lowestPrice</dt> <dd> <p>Spot Fleet requests instances from the lowest priced Spot Instance pool that has available capacity. If the lowest priced pool doesn't have available capacity, the Spot Instances come from the next lowest priced pool that has available capacity. If a pool runs out of capacity before fulfilling your desired capacity, Spot Fleet will continue to fulfill your request by drawing from the next lowest priced pool. To ensure that your desired capacity is met, you might receive Spot Instances from several pools. Because this strategy only considers instance price and not capacity availability, it might lead to high interruption rates.</p> </dd> </dl> <p>Default: <code>lowestPrice</code> </p>"
              }
            ]
          },
          "OnDemandAllocationStrategy": {
            "allOf": [
              {
                "$ref": "#/$defs/OnDemandAllocationStrategy"
              },
              {
                "xml": {
                  "name": "onDemandAllocationStrategy"
                },
                "description": "The order of the launch template overrides to use in fulfilling On-Demand capacity. If you specify <code>lowestPrice</code>, Spot Fleet uses price to determine the order, launching the lowest price first. If you specify <code>prioritized</code>, Spot Fleet uses the priority that you assign to each Spot Fleet launch template override, launching the highest priority first. If you do not specify a value, Spot Fleet defaults to <code>lowestPrice</code>."
              }
            ]
          },
          "SpotMaintenanceStrategies": {
            "allOf": [
              {
                "$ref": "#/$defs/SpotMaintenanceStrategies"
              },
              {
                "xml": {
                  "name": "spotMaintenanceStrategies"
                },
                "description": "The strategies for managing your Spot Instances that are at an elevated risk of being interrupted."
              }
            ]
          },
          "ClientToken": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "clientToken"
                },
                "description": "A unique, case-sensitive identifier that you provide to ensure the idempotency of your listings. This helps to avoid duplicate listings. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring Idempotency</a>."
              }
            ]
          },
          "ExcessCapacityTerminationPolicy": {
            "allOf": [
              {
                "$ref": "#/$defs/ExcessCapacityTerminationPolicy"
              },
              {
                "xml": {
                  "name": "excessCapacityTerminationPolicy"
                },
                "description": "<p>Indicates whether running instances should be terminated if you decrease the target capacity of the Spot Fleet request below the current size of the Spot Fleet.</p> <p>Supported only for fleets of type <code>maintain</code>.</p>"
              }
            ]
          },
          "FulfilledCapacity": {
            "allOf": [
              {
                "$ref": "#/$defs/Double"
              },
              {
                "xml": {
                  "name": "fulfilledCapacity"
                },
                "description": "The number of units fulfilled by this request compared to the set target capacity. You cannot set this value."
              }
            ]
          },
          "OnDemandFulfilledCapacity": {
            "allOf": [
              {
                "$ref": "#/$defs/Double"
              },
              {
                "xml": {
                  "name": "onDemandFulfilledCapacity"
                },
                "description": "The number of On-Demand units fulfilled by this request compared to the set target On-Demand capacity."
              }
            ]
          },
          "IamFleetRole": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "iamFleetRole"
                },
                "description": "The Amazon Resource Name (ARN) of an Identity and Access Management (IAM) role that grants the Spot Fleet the permission to request, launch, terminate, and tag instances on your behalf. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet-requests.html#spot-fleet-prerequisites\">Spot Fleet prerequisites</a> in the <i>Amazon EC2 User Guide</i>. Spot Fleet can terminate Spot Instances on your behalf when you cancel its Spot Fleet request using <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CancelSpotFleetRequests\">CancelSpotFleetRequests</a> or when the Spot Fleet request expires, if you set <code>TerminateInstancesWithExpiration</code>."
              }
            ]
          },
          "LaunchSpecifications": {
            "allOf": [
              {
                "$ref": "#/$defs/LaunchSpecsList"
              },
              {
                "xml": {
                  "name": "launchSpecifications"
                },
                "description": "The launch specifications for the Spot Fleet request. If you specify <code>LaunchSpecifications</code>, you can't specify <code>LaunchTemplateConfigs</code>. If you include On-Demand capacity in your request, you must use <code>LaunchTemplateConfigs</code>."
              }
            ]
          },
          "LaunchTemplateConfigs": {
            "allOf": [
              {
                "$ref": "#/$defs/LaunchTemplateConfigList"
              },
              {
                "xml": {
                  "name": "launchTemplateConfigs"
                },
                "description": "The launch template and overrides. If you specify <code>LaunchTemplateConfigs</code>, you can't specify <code>LaunchSpecifications</code>. If you include On-Demand capacity in your request, you must use <code>LaunchTemplateConfigs</code>."
              }
            ]
          },
          "SpotPrice": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "spotPrice"
                },
                "description": "<p>The maximum price per unit hour that you are willing to pay for a Spot Instance. We do not recommend using this parameter because it can lead to increased interruptions. If you do not specify this parameter, you will pay the current Spot price.</p> <important> <p>If you specify a maximum price, your instances will be interrupted more frequently than if you do not specify this parameter.</p> </important>"
              }
            ]
          },
          "TargetCapacity": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "xml": {
                  "name": "targetCapacity"
                },
                "description": "The number of units to request for the Spot Fleet. You can choose to set the target capacity in terms of instances or a performance characteristic that is important to your application workload, such as vCPUs, memory, or I/O. If the request type is <code>maintain</code>, you can specify a target capacity of 0 and add capacity later."
              }
            ]
          },
          "OnDemandTargetCapacity": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "xml": {
                  "name": "onDemandTargetCapacity"
                },
                "description": "The number of On-Demand units to request. You can choose to set the target capacity in terms of instances or a performance characteristic that is important to your application workload, such as vCPUs, memory, or I/O. If the request type is <code>maintain</code>, you can specify a target capacity of 0 and add capacity later."
              }
            ]
          },
          "OnDemandMaxTotalPrice": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "onDemandMaxTotalPrice"
                },
                "description": "The maximum amount per hour for On-Demand Instances that you're willing to pay. You can use the <code>onDemandMaxTotalPrice</code> parameter, the <code>spotMaxTotalPrice</code> parameter, or both parameters to ensure that your fleet cost does not exceed your budget. If you set a maximum price per hour for the On-Demand Instances and Spot Instances in your request, Spot Fleet will launch instances until it reaches the maximum amount you're willing to pay. When the maximum amount you're willing to pay is reached, the fleet stops launching instances even if it hasn’t met the target capacity."
              }
            ]
          },
          "SpotMaxTotalPrice": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "spotMaxTotalPrice"
                },
                "description": "The maximum amount per hour for Spot Instances that you're willing to pay. You can use the <code>spotdMaxTotalPrice</code> parameter, the <code>onDemandMaxTotalPrice</code> parameter, or both parameters to ensure that your fleet cost does not exceed your budget. If you set a maximum price per hour for the On-Demand Instances and Spot Instances in your request, Spot Fleet will launch instances until it reaches the maximum amount you're willing to pay. When the maximum amount you're willing to pay is reached, the fleet stops launching instances even if it hasn’t met the target capacity."
              }
            ]
          },
          "TerminateInstancesWithExpiration": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "xml": {
                  "name": "terminateInstancesWithExpiration"
                },
                "description": "Indicates whether running Spot Instances are terminated when the Spot Fleet request expires."
              }
            ]
          },
          "Type": {
            "allOf": [
              {
                "$ref": "#/$defs/FleetType"
              },
              {
                "xml": {
                  "name": "type"
                },
                "description": "The type of request. Indicates whether the Spot Fleet only requests the target capacity or also attempts to maintain it. When this value is <code>request</code>, the Spot Fleet only places the required requests. It does not attempt to replenish Spot Instances if capacity is diminished, nor does it submit requests in alternative Spot pools if capacity is not available. When this value is <code>maintain</code>, the Spot Fleet maintains the target capacity. The Spot Fleet places the required requests to meet capacity and automatically replenishes any interrupted instances. Default: <code>maintain</code>. <code>instant</code> is listed but is not used by Spot Fleet."
              }
            ]
          },
          "ValidFrom": {
            "allOf": [
              {
                "$ref": "#/$defs/DateTime"
              },
              {
                "xml": {
                  "name": "validFrom"
                },
                "description": "The start date and time of the request, in UTC format (<i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z). By default, Amazon EC2 starts fulfilling the request immediately."
              }
            ]
          },
          "ValidUntil": {
            "allOf": [
              {
                "$ref": "#/$defs/DateTime"
              },
              {
                "xml": {
                  "name": "validUntil"
                },
                "description": "The end date and time of the request, in UTC format (<i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z). After the end date and time, no new Spot Instance requests are placed or able to fulfill the request. If no value is specified, the Spot Fleet request remains until you cancel it."
              }
            ]
          },
          "ReplaceUnhealthyInstances": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "xml": {
                  "name": "replaceUnhealthyInstances"
                },
                "description": "Indicates whether Spot Fleet should replace unhealthy instances."
              }
            ]
          },
          "InstanceInterruptionBehavior": {
            "allOf": [
              {
                "$ref": "#/$defs/InstanceInterruptionBehavior"
              },
              {
                "xml": {
                  "name": "instanceInterruptionBehavior"
                },
                "description": "The behavior when a Spot Instance is interrupted. The default is <code>terminate</code>."
              }
            ]
          },
          "LoadBalancersConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/LoadBalancersConfig"
              },
              {
                "xml": {
                  "name": "loadBalancersConfig"
                },
                "description": "<p>One or more Classic Load Balancers and target groups to attach to the Spot Fleet request. Spot Fleet registers the running Spot Instances with the specified Classic Load Balancers and target groups.</p> <p>With Network Load Balancers, Spot Fleet cannot register instances that have the following instance types: C1, CC1, CC2, CG1, CG2, CR1, CS1, G1, G2, HI1, HS1, M1, M2, M3, and T1.</p>"
              }
            ]
          },
          "InstancePoolsToUseCount": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "xml": {
                  "name": "instancePoolsToUseCount"
                },
                "description": "<p>The number of Spot pools across which to allocate your target Spot capacity. Valid only when Spot <b>AllocationStrategy</b> is set to <code>lowest-price</code>. Spot Fleet selects the cheapest Spot pools and evenly allocates your target Spot capacity across the number of Spot pools that you specify.</p> <p>Note that Spot Fleet attempts to draw Spot Instances from the number of pools that you specify on a best effort basis. If a pool runs out of Spot capacity before fulfilling your target capacity, Spot Fleet will continue to fulfill your request by drawing from the next cheapest pool. To ensure that your target capacity is met, you might receive Spot Instances from more than the number of pools that you specified. Similarly, if most of the pools have no Spot capacity, you might receive your full target capacity from fewer than the number of pools that you specified.</p>"
              }
            ]
          },
          "Context": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "context"
                },
                "description": "Reserved."
              }
            ]
          },
          "TargetCapacityUnitType": {
            "allOf": [
              {
                "$ref": "#/$defs/TargetCapacityUnitType"
              },
              {
                "xml": {
                  "name": "targetCapacityUnitType"
                },
                "description": "<p>The unit for the target capacity. <code>TargetCapacityUnitType</code> can only be specified when <code>InstanceRequirements</code> is specified.</p> <p>Default: <code>units</code> (translates to number of instances)</p>"
              }
            ]
          },
          "TagSpecifications": {
            "allOf": [
              {
                "$ref": "#/$defs/TagSpecificationList"
              },
              {
                "xml": {
                  "name": "TagSpecification"
                },
                "description": "The key-value pair for tagging the Spot Fleet request on creation. The value for <code>ResourceType</code> must be <code>spot-fleet-request</code>, otherwise the Spot Fleet request fails. To tag instances at launch, specify the tags in the <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-templates.html#create-launch-template\">launch template</a> (valid only if you use <code>LaunchTemplateConfigs</code>) or in the <code> <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SpotFleetTagSpecification.html\">SpotFleetTagSpecification</a> </code> (valid only if you use <code>LaunchSpecifications</code>). For information about tagging after launch, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html#tag-resources\">Tagging Your Resources</a>."
              }
            ]
          }
        },
        "description": "The configuration for the Spot Fleet request."
      },
      "Action": {
        "type": "string",
        "enum": [
          "RequestSpotFleet"
        ]
      },
      "Version": {
        "type": "string",
        "enum": [
          "2016-11-15"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      }
    },
    "required": [
      "SpotFleetRequestConfig",
      "Action",
      "Version"
    ],
    "$defs": {
      "AllocationStrategy": {
        "type": "string",
        "enum": [
          "lowestPrice",
          "diversified",
          "capacityOptimized",
          "capacityOptimizedPrioritized",
          "priceCapacityOptimized"
        ]
      },
      "OnDemandAllocationStrategy": {
        "type": "string",
        "enum": [
          "lowestPrice",
          "prioritized"
        ]
      },
      "SpotMaintenanceStrategies": {
        "type": "object",
        "properties": {
          "CapacityRebalance": {
            "allOf": [
              {
                "$ref": "#/$defs/SpotCapacityRebalance"
              },
              {
                "xml": {
                  "name": "capacityRebalance"
                },
                "description": "The Spot Instance replacement strategy to use when Amazon EC2 emits a signal that your Spot Instance is at an elevated risk of being interrupted. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet-capacity-rebalance.html\">Capacity rebalancing</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>."
              }
            ]
          }
        },
        "description": "The strategies for managing your Spot Instances that are at an elevated risk of being interrupted."
      },
      "SpotCapacityRebalance": {
        "type": "object",
        "properties": {
          "ReplacementStrategy": {
            "allOf": [
              {
                "$ref": "#/$defs/ReplacementStrategy"
              },
              {
                "xml": {
                  "name": "replacementStrategy"
                },
                "description": "<p>The replacement strategy to use. Only available for fleets of type <code>maintain</code>.</p> <p> <code>launch</code> - Spot Fleet launches a new replacement Spot Instance when a rebalance notification is emitted for an existing Spot Instance in the fleet. Spot Fleet does not terminate the instances that receive a rebalance notification. You can terminate the old instances, or you can leave them running. You are charged for all instances while they are running. </p> <p> <code>launch-before-terminate</code> - Spot Fleet launches a new replacement Spot Instance when a rebalance notification is emitted for an existing Spot Instance in the fleet, and then, after a delay that you specify (in <code>TerminationDelay</code>), terminates the instances that received a rebalance notification.</p>"
              }
            ]
          },
          "TerminationDelay": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "xml": {
                  "name": "terminationDelay"
                },
                "description": "<p>The amount of time (in seconds) that Amazon EC2 waits before terminating the old Spot Instance after launching a new replacement Spot Instance.</p> <p>Required when <code>ReplacementStrategy</code> is set to <code>launch-before-terminate</code>.</p> <p>Not valid when <code>ReplacementStrategy</code> is set to <code>launch</code>.</p> <p>Valid values: Minimum value of <code>120</code> seconds. Maximum value of <code>7200</code> seconds.</p>"
              }
            ]
          }
        },
        "description": "The Spot Instance replacement strategy to use when Amazon EC2 emits a signal that your Spot Instance is at an elevated risk of being interrupted. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet-capacity-rebalance.html\">Capacity rebalancing</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>."
      },
      "ReplacementStrategy": {
        "type": "string",
        "enum": [
          "launch",
          "launch-before-terminate"
        ]
      },
      "Integer": {
        "type": "integer"
      },
      "String": {
        "type": "string"
      },
      "ExcessCapacityTerminationPolicy": {
        "type": "string",
        "enum": [
          "noTermination",
          "default"
        ]
      },
      "Double": {
        "type": "number",
        "format": "double"
      },
      "LaunchSpecsList": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/SpotFleetLaunchSpecification"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        }
      },
      "SpotFleetLaunchSpecification": {
        "type": "object",
        "properties": {
          "SecurityGroups": {
            "allOf": [
              {
                "$ref": "#/$defs/GroupIdentifierList"
              },
              {
                "xml": {
                  "name": "groupSet"
                },
                "description": "The security groups."
              }
            ]
          },
          "AddressingType": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "addressingType"
                },
                "description": "Deprecated."
              }
            ]
          },
          "BlockDeviceMappings": {
            "allOf": [
              {
                "$ref": "#/$defs/BlockDeviceMappingList"
              },
              {
                "xml": {
                  "name": "blockDeviceMapping"
                },
                "description": "One or more block devices that are mapped to the Spot Instances. You can't specify both a snapshot ID and an encryption value. This is because only blank volumes can be encrypted on creation. If a snapshot is the basis for a volume, it is not blank and its encryption status is used for the volume encryption status."
              }
            ]
          },
          "EbsOptimized": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "xml": {
                  "name": "ebsOptimized"
                },
                "description": "<p>Indicates whether the instances are optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS Optimized instance.</p> <p>Default: <code>false</code> </p>"
              }
            ]
          },
          "IamInstanceProfile": {
            "allOf": [
              {
                "$ref": "#/$defs/IamInstanceProfileSpecification"
              },
              {
                "xml": {
                  "name": "iamInstanceProfile"
                },
                "description": "The IAM instance profile."
              }
            ]
          },
          "ImageId": {
            "allOf": [
              {
                "$ref": "#/$defs/ImageId"
              },
              {
                "xml": {
                  "name": "imageId"
                },
                "description": "The ID of the AMI."
              }
            ]
          },
          "InstanceType": {
            "allOf": [
              {
                "$ref": "#/$defs/InstanceType"
              },
              {
                "xml": {
                  "name": "instanceType"
                },
                "description": "The instance type."
              }
            ]
          },
          "KernelId": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "kernelId"
                },
                "description": "The ID of the kernel."
              }
            ]
          },
          "KeyName": {
            "allOf": [
              {
                "$ref": "#/$defs/KeyPairName"
              },
              {
                "xml": {
                  "name": "keyName"
                },
                "description": "The name of the key pair."
              }
            ]
          },
          "Monitoring": {
            "allOf": [
              {
                "$ref": "#/$defs/SpotFleetMonitoring"
              },
              {
                "xml": {
                  "name": "monitoring"
                },
                "description": "Enable or disable monitoring for the instances."
              }
            ]
          },
          "NetworkInterfaces": {
            "allOf": [
              {
                "$ref": "#/$defs/InstanceNetworkInterfaceSpecificationList"
              },
              {
                "xml": {
                  "name": "networkInterfaceSet"
                },
                "description": "<p>One or more network interfaces. If you specify a network interface, you must specify subnet IDs and security group IDs using the network interface.</p> <note> <p> <code>SpotFleetLaunchSpecification</code> currently does not support Elastic Fabric Adapter (EFA). To specify an EFA, you must use <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_LaunchTemplateConfig.html\">LaunchTemplateConfig</a>.</p> </note>"
              }
            ]
          },
          "Placement": {
            "allOf": [
              {
                "$ref": "#/$defs/SpotPlacement"
              },
              {
                "xml": {
                  "name": "placement"
                },
                "description": "The placement information."
              }
            ]
          },
          "RamdiskId": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "ramdiskId"
                },
                "description": "The ID of the RAM disk. Some kernels require additional drivers at launch. Check the kernel requirements for information about whether you need to specify a RAM disk. To find kernel requirements, refer to the Amazon Web Services Resource Center and search for the kernel ID."
              }
            ]
          },
          "SpotPrice": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "spotPrice"
                },
                "description": "<p>The maximum price per unit hour that you are willing to pay for a Spot Instance. We do not recommend using this parameter because it can lead to increased interruptions. If you do not specify this parameter, you will pay the current Spot price.</p> <important> <p>If you specify a maximum price, your instances will be interrupted more frequently than if you do not specify this parameter.</p> </important>"
              }
            ]
          },
          "SubnetId": {
            "allOf": [
              {
                "$ref": "#/$defs/SubnetId"
              },
              {
                "xml": {
                  "name": "subnetId"
                },
                "description": "The IDs of the subnets in which to launch the instances. To specify multiple subnets, separate them using commas; for example, \"subnet-1234abcdeexample1, subnet-0987cdef6example2\"."
              }
            ]
          },
          "UserData": {
            "allOf": [
              {
                "$ref": "#/$defs/SensitiveUserData"
              },
              {
                "xml": {
                  "name": "userData"
                },
                "description": "The base64-encoded user data that instances use when starting up. User data is limited to 16 KB."
              }
            ]
          },
          "WeightedCapacity": {
            "allOf": [
              {
                "$ref": "#/$defs/Double"
              },
              {
                "xml": {
                  "name": "weightedCapacity"
                },
                "description": "<p>The number of units provided by the specified instance type. These are the same units that you chose to set the target capacity in terms of instances, or a performance characteristic such as vCPUs, memory, or I/O.</p> <p>If the target capacity divided by this value is not a whole number, Amazon EC2 rounds the number of instances to the next whole number. If this value is not specified, the default is 1.</p>"
              }
            ]
          },
          "TagSpecifications": {
            "allOf": [
              {
                "$ref": "#/$defs/SpotFleetTagSpecificationList"
              },
              {
                "xml": {
                  "name": "tagSpecificationSet"
                },
                "description": "The tags to apply during creation."
              }
            ]
          },
          "InstanceRequirements": {
            "allOf": [
              {
                "$ref": "#/$defs/InstanceRequirements"
              },
              {
                "xml": {
                  "name": "instanceRequirements"
                },
                "description": "<p>The attributes for the instance types. When you specify instance attributes, Amazon EC2 will identify instance types with those attributes.</p> <note> <p>If you specify <code>InstanceRequirements</code>, you can't specify <code>InstanceType</code>.</p> </note>"
              }
            ]
          }
        },
        "description": "Describes the launch specification for one or more Spot Instances. If you include On-Demand capacity in your fleet request or want to specify an EFA network device, you can't use <code>SpotFleetLaunchSpecification</code>; you must use <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_LaunchTemplateConfig.html\">LaunchTemplateConfig</a>."
      },
      "GroupIdentifierList": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/GroupIdentifier"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        }
      },
      "GroupIdentifier": {
        "type": "object",
        "properties": {
          "GroupName": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "groupName"
                },
                "description": "The name of the security group."
              }
            ]
          },
          "GroupId": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "groupId"
                },
                "description": "The ID of the security group."
              }
            ]
          }
        },
        "description": "Describes a security group."
      },
      "BlockDeviceMappingList": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/BlockDeviceMapping"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        }
      },
      "BlockDeviceMapping": {
        "type": "object",
        "properties": {
          "DeviceName": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "deviceName"
                },
                "description": "The device name (for example, <code>/dev/sdh</code> or <code>xvdh</code>)."
              }
            ]
          },
          "VirtualName": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "virtualName"
                },
                "description": "<p>The virtual device name (<code>ephemeral</code>N). Instance store volumes are numbered starting from 0. An instance type with 2 available instance store volumes can specify mappings for <code>ephemeral0</code> and <code>ephemeral1</code>. The number of available instance store volumes depends on the instance type. After you connect to the instance, you must mount the volume.</p> <p>NVMe instance store volumes are automatically enumerated and assigned a device name. Including them in your block device mapping has no effect.</p> <p>Constraints: For M3 instances, you must specify instance store volumes in the block device mapping for the instance. When you launch an M3 instance, we ignore any instance store volumes specified in the block device mapping for the AMI.</p>"
              }
            ]
          },
          "Ebs": {
            "allOf": [
              {
                "$ref": "#/$defs/EbsBlockDevice"
              },
              {
                "xml": {
                  "name": "ebs"
                },
                "description": "Parameters used to automatically set up EBS volumes when the instance is launched."
              }
            ]
          },
          "NoDevice": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "noDevice"
                },
                "description": "To omit the device from the block device mapping, specify an empty string. When this property is specified, the device is removed from the block device mapping regardless of the assigned value."
              }
            ]
          }
        },
        "description": "Describes a block device mapping, which defines the EBS volumes and instance store volumes to attach to an instance at launch."
      },
      "EbsBlockDevice": {
        "type": "object",
        "properties": {
          "DeleteOnTermination": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "xml": {
                  "name": "deleteOnTermination"
                },
                "description": "Indicates whether the EBS volume is deleted on instance termination. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#preserving-volumes-on-termination\">Preserving Amazon EBS volumes on instance termination</a> in the <i>Amazon EC2 User Guide</i>."
              }
            ]
          },
          "Iops": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "xml": {
                  "name": "iops"
                },
                "description": "<p>The number of I/O operations per second (IOPS). For <code>gp3</code>, <code>io1</code>, and <code>io2</code> volumes, this represents the number of IOPS that are provisioned for the volume. For <code>gp2</code> volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting.</p> <p>The following are the supported values for each volume type:</p> <ul> <li> <p> <code>gp3</code>: 3,000-16,000 IOPS</p> </li> <li> <p> <code>io1</code>: 100-64,000 IOPS</p> </li> <li> <p> <code>io2</code>: 100-64,000 IOPS</p> </li> </ul> <p>For <code>io1</code> and <code>io2</code> volumes, we guarantee 64,000 IOPS only for <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#ec2-nitro-instances\">Instances built on the Nitro System</a>. Other instance families guarantee performance up to 32,000 IOPS.</p> <p>This parameter is required for <code>io1</code> and <code>io2</code> volumes. The default for <code>gp3</code> volumes is 3,000 IOPS. This parameter is not supported for <code>gp2</code>, <code>st1</code>, <code>sc1</code>, or <code>standard</code> volumes.</p>"
              }
            ]
          },
          "SnapshotId": {
            "allOf": [
              {
                "$ref": "#/$defs/SnapshotId"
              },
              {
                "xml": {
                  "name": "snapshotId"
                },
                "description": "The ID of the snapshot."
              }
            ]
          },
          "VolumeSize": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "xml": {
                  "name": "volumeSize"
                },
                "description": "<p>The size of the volume, in GiBs. You must specify either a snapshot ID or a volume size. If you specify a snapshot, the default is the snapshot size. You can specify a volume size that is equal to or larger than the snapshot size.</p> <p>The following are the supported volumes sizes for each volume type:</p> <ul> <li> <p> <code>gp2</code> and <code>gp3</code>:1-16,384</p> </li> <li> <p> <code>io1</code> and <code>io2</code>: 4-16,384</p> </li> <li> <p> <code>st1</code> and <code>sc1</code>: 125-16,384</p> </li> <li> <p> <code>standard</code>: 1-1,024</p> </li> </ul>"
              }
            ]
          },
          "VolumeType": {
            "allOf": [
              {
                "$ref": "#/$defs/VolumeType"
              },
              {
                "xml": {
                  "name": "volumeType"
                },
                "description": "The volume type. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html\">Amazon EBS volume types</a> in the <i>Amazon EC2 User Guide</i>. If the volume type is <code>io1</code> or <code>io2</code>, you must specify the IOPS that the volume supports."
              }
            ]
          },
          "KmsKeyId": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "kmsKeyId"
                },
                "description": "<p>Identifier (key ID, key alias, ID ARN, or alias ARN) for a customer managed CMK under which the EBS volume is encrypted.</p> <p>This parameter is only supported on <code>BlockDeviceMapping</code> objects called by <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html\">RunInstances</a>, <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotFleet.html\">RequestSpotFleet</a>, and <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotInstances.html\">RequestSpotInstances</a>.</p>"
              }
            ]
          },
          "Throughput": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "xml": {
                  "name": "throughput"
                },
                "description": "<p>The throughput that the volume supports, in MiB/s.</p> <p>This parameter is valid only for <code>gp3</code> volumes.</p> <p>Valid Range: Minimum value of 125. Maximum value of 1000.</p>"
              }
            ]
          },
          "OutpostArn": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "outpostArn"
                },
                "description": "<p>The ARN of the Outpost on which the snapshot is stored.</p> <p>This parameter is not supported when using <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateImage.html\">CreateImage</a>.</p>"
              }
            ]
          },
          "Encrypted": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "xml": {
                  "name": "encrypted"
                },
                "description": "<p>Indicates whether the encryption state of an EBS volume is changed while being restored from a backing snapshot. The effect of setting the encryption state to <code>true</code> depends on the volume origin (new or from a snapshot), starting encryption state, ownership, and whether encryption by default is enabled. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#encryption-parameters\">Amazon EBS encryption</a> in the <i>Amazon EC2 User Guide</i>.</p> <p>In no case can you remove encryption from an encrypted volume.</p> <p>Encrypted volumes can only be attached to instances that support Amazon EBS encryption. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#EBSEncryption_supported_instances\">Supported instance types</a>.</p> <p>This parameter is not returned by <a>DescribeImageAttribute</a>.</p> <p>For <a>CreateImage</a> and <a>RegisterImage</a>, whether you can include this parameter, and the allowed values differ depending on the type of block device mapping you are creating.</p> <ul> <li> <p>If you are creating a block device mapping for a <b>new (empty) volume</b>, you can include this parameter, and specify either <code>true</code> for an encrypted volume, or <code>false</code> for an unencrypted volume. If you omit this parameter, it defaults to <code>false</code> (unencrypted).</p> </li> <li> <p>If you are creating a block device mapping from an <b>existing encrypted or unencrypted snapshot</b>, you must omit this parameter. If you include this parameter, the request will fail, regardless of the value that you specify.</p> </li> <li> <p>If you are creating a block device mapping from an <b>existing unencrypted volume</b>, you can include this parameter, but you must specify <code>false</code>. If you specify <code>true</code>, the request will fail. In this case, we recommend that you omit the parameter.</p> </li> <li> <p>If you are creating a block device mapping from an <b>existing encrypted volume</b>, you can include this parameter, and specify either <code>true</code> or <code>false</code>. However, if you specify <code>false</code>, the parameter is ignored and the block device mapping is always encrypted. In this case, we recommend that you omit the parameter.</p> </li> </ul>"
              }
            ]
          }
        },
        "description": "Describes a block device for an EBS volume."
      },
      "Boolean": {
        "type": "boolean"
      },
      "SnapshotId": {
        "type": "string"
      },
      "VolumeType": {
        "type": "string",
        "enum": [
          "standard",
          "io1",
          "io2",
          "gp2",
          "sc1",
          "st1",
          "gp3"
        ]
      },
      "IamInstanceProfileSpecification": {
        "type": "object",
        "properties": {
          "Arn": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "arn"
                },
                "description": "The Amazon Resource Name (ARN) of the instance profile."
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "name"
                },
                "description": "The name of the instance profile."
              }
            ]
          }
        },
        "description": "Describes an IAM instance profile."
      },
      "ImageId": {
        "type": "string"
      },
      "InstanceType": {
        "type": "string",
        "enum": [
          "a1.medium",
          "a1.large",
          "a1.xlarge",
          "a1.2xlarge",
          "a1.4xlarge",
          "a1.metal",
          "c1.medium",
          "c1.xlarge",
          "c3.large",
          "c3.xlarge",
          "c3.2xlarge",
          "c3.4xlarge",
          "c3.8xlarge",
          "c4.large",
          "c4.xlarge",
          "c4.2xlarge",
          "c4.4xlarge",
          "c4.8xlarge",
          "c5.large",
          "c5.xlarge",
          "c5.2xlarge",
          "c5.4xlarge",
          "c5.9xlarge",
          "c5.12xlarge",
          "c5.18xlarge",
          "c5.24xlarge",
          "c5.metal",
          "c5a.large",
          "c5a.xlarge",
          "c5a.2xlarge",
          "c5a.4xlarge",
          "c5a.8xlarge",
          "c5a.12xlarge",
          "c5a.16xlarge",
          "c5a.24xlarge",
          "c5ad.large",
          "c5ad.xlarge",
          "c5ad.2xlarge",
          "c5ad.4xlarge",
          "c5ad.8xlarge",
          "c5ad.12xlarge",
          "c5ad.16xlarge",
          "c5ad.24xlarge",
          "c5d.large",
          "c5d.xlarge",
          "c5d.2xlarge",
          "c5d.4xlarge",
          "c5d.9xlarge",
          "c5d.12xlarge",
          "c5d.18xlarge",
          "c5d.24xlarge",
          "c5d.metal",
          "c5n.large",
          "c5n.xlarge",
          "c5n.2xlarge",
          "c5n.4xlarge",
          "c5n.9xlarge",
          "c5n.18xlarge",
          "c5n.metal",
          "c6g.medium",
          "c6g.large",
          "c6g.xlarge",
          "c6g.2xlarge",
          "c6g.4xlarge",
          "c6g.8xlarge",
          "c6g.12xlarge",
          "c6g.16xlarge",
          "c6g.metal",
          "c6gd.medium",
          "c6gd.large",
          "c6gd.xlarge",
          "c6gd.2xlarge",
          "c6gd.4xlarge",
          "c6gd.8xlarge",
          "c6gd.12xlarge",
          "c6gd.16xlarge",
          "c6gd.metal",
          "c6gn.medium",
          "c6gn.large",
          "c6gn.xlarge",
          "c6gn.2xlarge",
          "c6gn.4xlarge",
          "c6gn.8xlarge",
          "c6gn.12xlarge",
          "c6gn.16xlarge",
          "c6i.large",
          "c6i.xlarge",
          "c6i.2xlarge",
          "c6i.4xlarge",
          "c6i.8xlarge",
          "c6i.12xlarge",
          "c6i.16xlarge",
          "c6i.24xlarge",
          "c6i.32xlarge",
          "c6i.metal",
          "cc1.4xlarge",
          "cc2.8xlarge",
          "cg1.4xlarge",
          "cr1.8xlarge",
          "d2.xlarge",
          "d2.2xlarge",
          "d2.4xlarge",
          "d2.8xlarge",
          "d3.xlarge",
          "d3.2xlarge",
          "d3.4xlarge",
          "d3.8xlarge",
          "d3en.xlarge",
          "d3en.2xlarge",
          "d3en.4xlarge",
          "d3en.6xlarge",
          "d3en.8xlarge",
          "d3en.12xlarge",
          "dl1.24xlarge",
          "f1.2xlarge",
          "f1.4xlarge",
          "f1.16xlarge",
          "g2.2xlarge",
          "g2.8xlarge",
          "g3.4xlarge",
          "g3.8xlarge",
          "g3.16xlarge",
          "g3s.xlarge",
          "g4ad.xlarge",
          "g4ad.2xlarge",
          "g4ad.4xlarge",
          "g4ad.8xlarge",
          "g4ad.16xlarge",
          "g4dn.xlarge",
          "g4dn.2xlarge",
          "g4dn.4xlarge",
          "g4dn.8xlarge",
          "g4dn.12xlarge",
          "g4dn.16xlarge",
          "g4dn.metal",
          "g5.xlarge",
          "g5.2xlarge",
          "g5.4xlarge",
          "g5.8xlarge",
          "g5.12xlarge",
          "g5.16xlarge",
          "g5.24xlarge",
          "g5.48xlarge",
          "g5g.xlarge",
          "g5g.2xlarge",
          "g5g.4xlarge",
          "g5g.8xlarge",
          "g5g.16xlarge",
          "g5g.metal",
          "hi1.4xlarge",
          "hpc6a.48xlarge",
          "hs1.8xlarge",
          "h1.2xlarge",
          "h1.4xlarge",
          "h1.8xlarge",
          "h1.16xlarge",
          "i2.xlarge",
          "i2.2xlarge",
          "i2.4xlarge",
          "i2.8xlarge",
          "i3.large",
          "i3.xlarge",
          "i3.2xlarge",
          "i3.4xlarge",
          "i3.8xlarge",
          "i3.16xlarge",
          "i3.metal",
          "i3en.large",
          "i3en.xlarge",
          "i3en.2xlarge",
          "i3en.3xlarge",
          "i3en.6xlarge",
          "i3en.12xlarge",
          "i3en.24xlarge",
          "i3en.metal",
          "im4gn.large",
          "im4gn.xlarge",
          "im4gn.2xlarge",
          "im4gn.4xlarge",
          "im4gn.8xlarge",
          "im4gn.16xlarge",
          "inf1.xlarge",
          "inf1.2xlarge",
          "inf1.6xlarge",
          "inf1.24xlarge",
          "is4gen.medium",
          "is4gen.large",
          "is4gen.xlarge",
          "is4gen.2xlarge",
          "is4gen.4xlarge",
          "is4gen.8xlarge",
          "m1.small",
          "m1.medium",
          "m1.large",
          "m1.xlarge",
          "m2.xlarge",
          "m2.2xlarge",
          "m2.4xlarge",
          "m3.medium",
          "m3.large",
          "m3.xlarge",
          "m3.2xlarge",
          "m4.large",
          "m4.xlarge",
          "m4.2xlarge",
          "m4.4xlarge",
          "m4.10xlarge",
          "m4.16xlarge",
          "m5.large",
          "m5.xlarge",
          "m5.2xlarge",
          "m5.4xlarge",
          "m5.8xlarge",
          "m5.12xlarge",
          "m5.16xlarge",
          "m5.24xlarge",
          "m5.metal",
          "m5a.large",
          "m5a.xlarge",
          "m5a.2xlarge",
          "m5a.4xlarge",
          "m5a.8xlarge",
          "m5a.12xlarge",
          "m5a.16xlarge",
          "m5a.24xlarge",
          "m5ad.large",
          "m5ad.xlarge",
          "m5ad.2xlarge",
          "m5ad.4xlarge",
          "m5ad.8xlarge",
          "m5ad.12xlarge",
          "m5ad.16xlarge",
          "m5ad.24xlarge",
          "m5d.large",
          "m5d.xlarge",
          "m5d.2xlarge",
          "m5d.4xlarge",
          "m5d.8xlarge",
          "m5d.12xlarge",
          "m5d.16xlarge",
          "m5d.24xlarge",
          "m5d.metal",
          "m5dn.large",
          "m5dn.xlarge",
          "m5dn.2xlarge",
          "m5dn.4xlarge",
          "m5dn.8xlarge",
          "m5dn.12xlarge",
          "m5dn.16xlarge",
          "m5dn.24xlarge",
          "m5dn.metal",
          "m5n.large",
          "m5n.xlarge",
          "m5n.2xlarge",
          "m5n.4xlarge",
          "m5n.8xlarge",
          "m5n.12xlarge",
          "m5n.16xlarge",
          "m5n.24xlarge",
          "m5n.metal",
          "m5zn.large",
          "m5zn.xlarge",
          "m5zn.2xlarge",
          "m5zn.3xlarge",
          "m5zn.6xlarge",
          "m5zn.12xlarge",
          "m5zn.metal",
          "m6a.large",
          "m6a.xlarge",
          "m6a.2xlarge",
          "m6a.4xlarge",
          "m6a.8xlarge",
          "m6a.12xlarge",
          "m6a.16xlarge",
          "m6a.24xlarge",
          "m6a.32xlarge",
          "m6a.48xlarge",
          "m6g.metal",
          "m6g.medium",
          "m6g.large",
          "m6g.xlarge",
          "m6g.2xlarge",
          "m6g.4xlarge",
          "m6g.8xlarge",
          "m6g.12xlarge",
          "m6g.16xlarge",
          "m6gd.metal",
          "m6gd.medium",
          "m6gd.large",
          "m6gd.xlarge",
          "m6gd.2xlarge",
          "m6gd.4xlarge",
          "m6gd.8xlarge",
          "m6gd.12xlarge",
          "m6gd.16xlarge",
          "m6i.large",
          "m6i.xlarge",
          "m6i.2xlarge",
          "m6i.4xlarge",
          "m6i.8xlarge",
          "m6i.12xlarge",
          "m6i.16xlarge",
          "m6i.24xlarge",
          "m6i.32xlarge",
          "m6i.metal",
          "mac1.metal",
          "p2.xlarge",
          "p2.8xlarge",
          "p2.16xlarge",
          "p3.2xlarge",
          "p3.8xlarge",
          "p3.16xlarge",
          "p3dn.24xlarge",
          "p4d.24xlarge",
          "r3.large",
          "r3.xlarge",
          "r3.2xlarge",
          "r3.4xlarge",
          "r3.8xlarge",
          "r4.large",
          "r4.xlarge",
          "r4.2xlarge",
          "r4.4xlarge",
          "r4.8xlarge",
          "r4.16xlarge",
          "r5.large",
          "r5.xlarge",
          "r5.2xlarge",
          "r5.4xlarge",
          "r5.8xlarge",
          "r5.12xlarge",
          "r5.16xlarge",
          "r5.24xlarge",
          "r5.metal",
          "r5a.large",
          "r5a.xlarge",
          "r5a.2xlarge",
          "r5a.4xlarge",
          "r5a.8xlarge",
          "r5a.12xlarge",
          "r5a.16xlarge",
          "r5a.24xlarge",
          "r5ad.large",
          "r5ad.xlarge",
          "r5ad.2xlarge",
          "r5ad.4xlarge",
          "r5ad.8xlarge",
          "r5ad.12xlarge",
          "r5ad.16xlarge",
          "r5ad.24xlarge",
          "r5b.large",
          "r5b.xlarge",
          "r5b.2xlarge",
          "r5b.4xlarge",
          "r5b.8xlarge",
          "r5b.12xlarge",
          "r5b.16xlarge",
          "r5b.24xlarge",
          "r5b.metal",
          "r5d.large",
          "r5d.xlarge",
          "r5d.2xlarge",
          "r5d.4xlarge",
          "r5d.8xlarge",
          "r5d.12xlarge",
          "r5d.16xlarge",
          "r5d.24xlarge",
          "r5d.metal",
          "r5dn.large",
          "r5dn.xlarge",
          "r5dn.2xlarge",
          "r5dn.4xlarge",
          "r5dn.8xlarge",
          "r5dn.12xlarge",
          "r5dn.16xlarge",
          "r5dn.24xlarge",
          "r5dn.metal",
          "r5n.large",
          "r5n.xlarge",
          "r5n.2xlarge",
          "r5n.4xlarge",
          "r5n.8xlarge",
          "r5n.12xlarge",
          "r5n.16xlarge",
          "r5n.24xlarge",
          "r5n.metal",
          "r6g.medium",
          "r6g.large",
          "r6g.xlarge",
          "r6g.2xlarge",
          "r6g.4xlarge",
          "r6g.8xlarge",
          "r6g.12xlarge",
          "r6g.16xlarge",
          "r6g.metal",
          "r6gd.medium",
          "r6gd.large",
          "r6gd.xlarge",
          "r6gd.2xlarge",
          "r6gd.4xlarge",
          "r6gd.8xlarge",
          "r6gd.12xlarge",
          "r6gd.16xlarge",
          "r6gd.metal",
          "r6i.large",
          "r6i.xlarge",
          "r6i.2xlarge",
          "r6i.4xlarge",
          "r6i.8xlarge",
          "r6i.12xlarge",
          "r6i.16xlarge",
          "r6i.24xlarge",
          "r6i.32xlarge",
          "r6i.metal",
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "t2.xlarge",
          "t2.2xlarge",
          "t3.nano",
          "t3.micro",
          "t3.small",
          "t3.medium",
          "t3.large",
          "t3.xlarge",
          "t3.2xlarge",
          "t3a.nano",
          "t3a.micro",
          "t3a.small",
          "t3a.medium",
          "t3a.large",
          "t3a.xlarge",
          "t3a.2xlarge",
          "t4g.nano",
          "t4g.micro",
          "t4g.small",
          "t4g.medium",
          "t4g.large",
          "t4g.xlarge",
          "t4g.2xlarge",
          "u-6tb1.56xlarge",
          "u-6tb1.112xlarge",
          "u-9tb1.112xlarge",
          "u-12tb1.112xlarge",
          "u-6tb1.metal",
          "u-9tb1.metal",
          "u-12tb1.metal",
          "u-18tb1.metal",
          "u-24tb1.metal",
          "vt1.3xlarge",
          "vt1.6xlarge",
          "vt1.24xlarge",
          "x1.16xlarge",
          "x1.32xlarge",
          "x1e.xlarge",
          "x1e.2xlarge",
          "x1e.4xlarge",
          "x1e.8xlarge",
          "x1e.16xlarge",
          "x1e.32xlarge",
          "x2iezn.2xlarge",
          "x2iezn.4xlarge",
          "x2iezn.6xlarge",
          "x2iezn.8xlarge",
          "x2iezn.12xlarge",
          "x2iezn.metal",
          "x2gd.medium",
          "x2gd.large",
          "x2gd.xlarge",
          "x2gd.2xlarge",
          "x2gd.4xlarge",
          "x2gd.8xlarge",
          "x2gd.12xlarge",
          "x2gd.16xlarge",
          "x2gd.metal",
          "z1d.large",
          "z1d.xlarge",
          "z1d.2xlarge",
          "z1d.3xlarge",
          "z1d.6xlarge",
          "z1d.12xlarge",
          "z1d.metal",
          "x2idn.16xlarge",
          "x2idn.24xlarge",
          "x2idn.32xlarge",
          "x2iedn.xlarge",
          "x2iedn.2xlarge",
          "x2iedn.4xlarge",
          "x2iedn.8xlarge",
          "x2iedn.16xlarge",
          "x2iedn.24xlarge",
          "x2iedn.32xlarge",
          "c6a.large",
          "c6a.xlarge",
          "c6a.2xlarge",
          "c6a.4xlarge",
          "c6a.8xlarge",
          "c6a.12xlarge",
          "c6a.16xlarge",
          "c6a.24xlarge",
          "c6a.32xlarge",
          "c6a.48xlarge",
          "c6a.metal",
          "m6a.metal",
          "i4i.large",
          "i4i.xlarge",
          "i4i.2xlarge",
          "i4i.4xlarge",
          "i4i.8xlarge",
          "i4i.16xlarge",
          "i4i.32xlarge",
          "i4i.metal",
          "x2idn.metal",
          "x2iedn.metal",
          "c7g.medium",
          "c7g.large",
          "c7g.xlarge",
          "c7g.2xlarge",
          "c7g.4xlarge",
          "c7g.8xlarge",
          "c7g.12xlarge",
          "c7g.16xlarge",
          "mac2.metal",
          "c6id.large",
          "c6id.xlarge",
          "c6id.2xlarge",
          "c6id.4xlarge",
          "c6id.8xlarge",
          "c6id.12xlarge",
          "c6id.16xlarge",
          "c6id.24xlarge",
          "c6id.32xlarge",
          "c6id.metal",
          "m6id.large",
          "m6id.xlarge",
          "m6id.2xlarge",
          "m6id.4xlarge",
          "m6id.8xlarge",
          "m6id.12xlarge",
          "m6id.16xlarge",
          "m6id.24xlarge",
          "m6id.32xlarge",
          "m6id.metal",
          "r6id.large",
          "r6id.xlarge",
          "r6id.2xlarge",
          "r6id.4xlarge",
          "r6id.8xlarge",
          "r6id.12xlarge",
          "r6id.16xlarge",
          "r6id.24xlarge",
          "r6id.32xlarge",
          "r6id.metal",
          "r6a.large",
          "r6a.xlarge",
          "r6a.2xlarge",
          "r6a.4xlarge",
          "r6a.8xlarge",
          "r6a.12xlarge",
          "r6a.16xlarge",
          "r6a.24xlarge",
          "r6a.32xlarge",
          "r6a.48xlarge",
          "r6a.metal",
          "p4de.24xlarge",
          "u-3tb1.56xlarge",
          "u-18tb1.112xlarge",
          "u-24tb1.112xlarge",
          "trn1.2xlarge",
          "trn1.32xlarge",
          "hpc6id.32xlarge",
          "c6in.large",
          "c6in.xlarge",
          "c6in.2xlarge",
          "c6in.4xlarge",
          "c6in.8xlarge",
          "c6in.12xlarge",
          "c6in.16xlarge",
          "c6in.24xlarge",
          "c6in.32xlarge",
          "m6in.large",
          "m6in.xlarge",
          "m6in.2xlarge",
          "m6in.4xlarge",
          "m6in.8xlarge",
          "m6in.12xlarge",
          "m6in.16xlarge",
          "m6in.24xlarge",
          "m6in.32xlarge",
          "m6idn.large",
          "m6idn.xlarge",
          "m6idn.2xlarge",
          "m6idn.4xlarge",
          "m6idn.8xlarge",
          "m6idn.12xlarge",
          "m6idn.16xlarge",
          "m6idn.24xlarge",
          "m6idn.32xlarge",
          "r6in.large",
          "r6in.xlarge",
          "r6in.2xlarge",
          "r6in.4xlarge",
          "r6in.8xlarge",
          "r6in.12xlarge",
          "r6in.16xlarge",
          "r6in.24xlarge",
          "r6in.32xlarge",
          "r6idn.large",
          "r6idn.xlarge",
          "r6idn.2xlarge",
          "r6idn.4xlarge",
          "r6idn.8xlarge",
          "r6idn.12xlarge",
          "r6idn.16xlarge",
          "r6idn.24xlarge",
          "r6idn.32xlarge",
          "c7g.metal",
          "m7g.medium",
          "m7g.large",
          "m7g.xlarge",
          "m7g.2xlarge",
          "m7g.4xlarge",
          "m7g.8xlarge",
          "m7g.12xlarge",
          "m7g.16xlarge",
          "m7g.metal",
          "r7g.medium",
          "r7g.large",
          "r7g.xlarge",
          "r7g.2xlarge",
          "r7g.4xlarge",
          "r7g.8xlarge",
          "r7g.12xlarge",
          "r7g.16xlarge",
          "r7g.metal",
          "c6in.metal",
          "m6in.metal",
          "m6idn.metal",
          "r6in.metal",
          "r6idn.metal",
          "inf2.xlarge",
          "inf2.8xlarge",
          "inf2.24xlarge",
          "inf2.48xlarge",
          "trn1n.32xlarge",
          "i4g.large",
          "i4g.xlarge",
          "i4g.2xlarge",
          "i4g.4xlarge",
          "i4g.8xlarge",
          "i4g.16xlarge",
          "hpc7g.4xlarge",
          "hpc7g.8xlarge",
          "hpc7g.16xlarge",
          "c7gn.medium",
          "c7gn.large",
          "c7gn.xlarge",
          "c7gn.2xlarge",
          "c7gn.4xlarge",
          "c7gn.8xlarge",
          "c7gn.12xlarge",
          "c7gn.16xlarge"
        ]
      },
      "KeyPairName": {
        "type": "string"
      },
      "SpotFleetMonitoring": {
        "type": "object",
        "properties": {
          "Enabled": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "xml": {
                  "name": "enabled"
                },
                "description": "<p>Enables monitoring for the instance.</p> <p>Default: <code>false</code> </p>"
              }
            ]
          }
        },
        "description": "Describes whether monitoring is enabled."
      },
      "InstanceNetworkInterfaceSpecificationList": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/InstanceNetworkInterfaceSpecification"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        }
      },
      "InstanceNetworkInterfaceSpecification": {
        "type": "object",
        "properties": {
          "AssociatePublicIpAddress": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "xml": {
                  "name": "associatePublicIpAddress"
                },
                "description": "Indicates whether to assign a public IPv4 address to an instance you launch in a VPC. The public IP address can only be assigned to a network interface for eth0, and can only be assigned to a new network interface, not an existing one. You cannot specify more than one network interface in the request. If launching into a default subnet, the default value is <code>true</code>."
              }
            ]
          },
          "DeleteOnTermination": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "xml": {
                  "name": "deleteOnTermination"
                },
                "description": "If set to <code>true</code>, the interface is deleted when the instance is terminated. You can specify <code>true</code> only if creating a new network interface when launching an instance."
              }
            ]
          },
          "Description": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "description"
                },
                "description": "The description of the network interface. Applies only if creating a network interface when launching an instance."
              }
            ]
          },
          "DeviceIndex": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "xml": {
                  "name": "deviceIndex"
                },
                "description": "<p>The position of the network interface in the attachment order. A primary network interface has a device index of 0.</p> <p>If you specify a network interface when launching an instance, you must specify the device index.</p>"
              }
            ]
          },
          "Groups": {
            "allOf": [
              {
                "$ref": "#/$defs/SecurityGroupIdStringList"
              },
              {
                "xml": {
                  "name": "SecurityGroupId"
                },
                "description": "The IDs of the security groups for the network interface. Applies only if creating a network interface when launching an instance."
              }
            ]
          },
          "Ipv6AddressCount": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "xml": {
                  "name": "ipv6AddressCount"
                },
                "description": "A number of IPv6 addresses to assign to the network interface. Amazon EC2 chooses the IPv6 addresses from the range of the subnet. You cannot specify this option and the option to assign specific IPv6 addresses in the same request. You can specify this option if you've specified a minimum number of instances to launch."
              }
            ]
          },
          "Ipv6Addresses": {
            "allOf": [
              {
                "$ref": "#/$defs/InstanceIpv6AddressList"
              },
              {
                "xml": {
                  "name": "ipv6AddressesSet"
                },
                "description": "The IPv6 addresses to assign to the network interface. You cannot specify this option and the option to assign a number of IPv6 addresses in the same request. You cannot specify this option if you've specified a minimum number of instances to launch."
              }
            ]
          },
          "NetworkInterfaceId": {
            "allOf": [
              {
                "$ref": "#/$defs/NetworkInterfaceId"
              },
              {
                "xml": {
                  "name": "networkInterfaceId"
                },
                "description": "<p>The ID of the network interface.</p> <p>If you are creating a Spot Fleet, omit this parameter because you can’t specify a network interface ID in a launch specification.</p>"
              }
            ]
          },
          "PrivateIpAddress": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "privateIpAddress"
                },
                "description": "The private IPv4 address of the network interface. Applies only if creating a network interface when launching an instance. You cannot specify this option if you're launching more than one instance in a <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html\">RunInstances</a> request."
              }
            ]
          },
          "PrivateIpAddresses": {
            "allOf": [
              {
                "$ref": "#/$defs/PrivateIpAddressSpecificationList"
              },
              {
                "xml": {
                  "name": "privateIpAddressesSet"
                },
                "description": "The private IPv4 addresses to assign to the network interface. Only one private IPv4 address can be designated as primary. You cannot specify this option if you're launching more than one instance in a <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html\">RunInstances</a> request."
              }
            ]
          },
          "SecondaryPrivateIpAddressCount": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "xml": {
                  "name": "secondaryPrivateIpAddressCount"
                },
                "description": "The number of secondary private IPv4 addresses. You can't specify this option and specify more than one private IP address using the private IP addresses option. You cannot specify this option if you're launching more than one instance in a <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html\">RunInstances</a> request."
              }
            ]
          },
          "SubnetId": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "subnetId"
                },
                "description": "The ID of the subnet associated with the network interface. Applies only if creating a network interface when launching an instance."
              }
            ]
          },
          "AssociateCarrierIpAddress": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "<p>Indicates whether to assign a carrier IP address to the network interface.</p> <p>You can only assign a carrier IP address to a network interface that is in a subnet in a Wavelength Zone. For more information about carrier IP addresses, see <a href=\"https://docs.aws.amazon.com/wavelength/latest/developerguide/how-wavelengths-work.html#provider-owned-ip\">Carrier IP address</a> in the <i>Amazon Web Services Wavelength Developer Guide</i>.</p>"
              }
            ]
          },
          "InterfaceType": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "<p>The type of network interface.</p> <p>Valid values: <code>interface</code> | <code>efa</code> </p>"
              }
            ]
          },
          "NetworkCardIndex": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "<p>The index of the network card. Some instance types support multiple network cards. The primary network interface must be assigned to network card index 0. The default is network card index 0.</p> <p>If you are using <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotInstances.html\">RequestSpotInstances</a> to create Spot Instances, omit this parameter because you can’t specify the network card index when using this API. To specify the network card index, use <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html\">RunInstances</a>.</p>"
              }
            ]
          },
          "Ipv4Prefixes": {
            "allOf": [
              {
                "$ref": "#/$defs/Ipv4PrefixList"
              },
              {
                "xml": {
                  "name": "Ipv4Prefix"
                },
                "description": "The IPv4 delegated prefixes to be assigned to the network interface. You cannot use this option if you use the <code>Ipv4PrefixCount</code> option."
              }
            ]
          },
          "Ipv4PrefixCount": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "The number of IPv4 delegated prefixes to be automatically assigned to the network interface. You cannot use this option if you use the <code>Ipv4Prefix</code> option."
              }
            ]
          },
          "Ipv6Prefixes": {
            "allOf": [
              {
                "$ref": "#/$defs/Ipv6PrefixList"
              },
              {
                "xml": {
                  "name": "Ipv6Prefix"
                },
                "description": "The IPv6 delegated prefixes to be assigned to the network interface. You cannot use this option if you use the <code>Ipv6PrefixCount</code> option."
              }
            ]
          },
          "Ipv6PrefixCount": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "The number of IPv6 delegated prefixes to be automatically assigned to the network interface. You cannot use this option if you use the <code>Ipv6Prefix</code> option."
              }
            ]
          },
          "PrimaryIpv6": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "The primary IPv6 address of the network interface. When you enable an IPv6 GUA address to be a primary IPv6, the first IPv6 GUA will be made the primary IPv6 address until the instance is terminated or the network interface is detached. For more information about primary IPv6 addresses, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html\">RunInstances</a>."
              }
            ]
          }
        },
        "description": "Describes a network interface."
      },
      "SecurityGroupIdStringList": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/SecurityGroupId"
            },
            {
              "xml": {
                "name": "SecurityGroupId"
              }
            }
          ]
        }
      },
      "SecurityGroupId": {
        "type": "string"
      },
      "InstanceIpv6AddressList": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/InstanceIpv6Address"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        }
      },
      "InstanceIpv6Address": {
        "type": "object",
        "properties": {
          "Ipv6Address": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "ipv6Address"
                },
                "description": "The IPv6 address."
              }
            ]
          },
          "IsPrimaryIpv6": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "xml": {
                  "name": "isPrimaryIpv6"
                },
                "description": "Determines if an IPv6 address associated with a network interface is the primary IPv6 address. When you enable an IPv6 GUA address to be a primary IPv6, the first IPv6 GUA will be made the primary IPv6 address until the instance is terminated or the network interface is detached. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html\">RunInstances</a>."
              }
            ]
          }
        },
        "description": "Describes an IPv6 address."
      },
      "NetworkInterfaceId": {
        "type": "string"
      },
      "PrivateIpAddressSpecificationList": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/PrivateIpAddressSpecification"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        }
      },
      "PrivateIpAddressSpecification": {
        "type": "object",
        "properties": {
          "Primary": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "xml": {
                  "name": "primary"
                },
                "description": "Indicates whether the private IPv4 address is the primary private IPv4 address. Only one IPv4 address can be designated as primary."
              }
            ]
          },
          "PrivateIpAddress": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "privateIpAddress"
                },
                "description": "The private IPv4 address."
              }
            ]
          }
        },
        "description": "Describes a secondary private IPv4 address for a network interface."
      },
      "Ipv4PrefixList": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/Ipv4PrefixSpecificationRequest"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        }
      },
      "Ipv4PrefixSpecificationRequest": {
        "type": "object",
        "properties": {
          "Ipv4Prefix": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The IPv4 prefix. For information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-prefix-eni.html\"> Assigning prefixes to Amazon EC2 network interfaces</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>."
              }
            ]
          }
        },
        "description": "Describes the IPv4 prefix option for a network interface."
      },
      "Ipv6PrefixList": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/Ipv6PrefixSpecificationRequest"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        }
      },
      "Ipv6PrefixSpecificationRequest": {
        "type": "object",
        "properties": {
          "Ipv6Prefix": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The IPv6 prefix."
              }
            ]
          }
        },
        "description": "Describes the IPv4 prefix option for a network interface."
      },
      "SpotPlacement": {
        "type": "object",
        "properties": {
          "AvailabilityZone": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "availabilityZone"
                },
                "description": "<p>The Availability Zone.</p> <p>[Spot Fleet only] To specify multiple Availability Zones, separate them using commas; for example, \"us-west-2a, us-west-2b\".</p>"
              }
            ]
          },
          "GroupName": {
            "allOf": [
              {
                "$ref": "#/$defs/PlacementGroupName"
              },
              {
                "xml": {
                  "name": "groupName"
                },
                "description": "The name of the placement group."
              }
            ]
          },
          "Tenancy": {
            "allOf": [
              {
                "$ref": "#/$defs/Tenancy"
              },
              {
                "xml": {
                  "name": "tenancy"
                },
                "description": "The tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of <code>dedicated</code> runs on single-tenant hardware. The <code>host</code> tenancy is not supported for Spot Instances."
              }
            ]
          }
        },
        "description": "Describes Spot Instance placement."
      },
      "PlacementGroupName": {
        "type": "string"
      },
      "Tenancy": {
        "type": "string",
        "enum": [
          "default",
          "dedicated",
          "host"
        ]
      },
      "SubnetId": {
        "type": "string"
      },
      "SensitiveUserData": {
        "type": "string",
        "format": "password"
      },
      "SpotFleetTagSpecificationList": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/SpotFleetTagSpecification"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        }
      },
      "SpotFleetTagSpecification": {
        "type": "object",
        "properties": {
          "ResourceType": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceType"
              },
              {
                "xml": {
                  "name": "resourceType"
                },
                "description": "The type of resource. Currently, the only resource type that is supported is <code>instance</code>. To tag the Spot Fleet request on creation, use the <code>TagSpecifications</code> parameter in <code> <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SpotFleetRequestConfigData.html\">SpotFleetRequestConfigData</a> </code>."
              }
            ]
          },
          "Tags": {
            "allOf": [
              {
                "$ref": "#/$defs/TagList"
              },
              {
                "xml": {
                  "name": "tag"
                },
                "description": "The tags."
              }
            ]
          }
        },
        "description": "The tags for a Spot Fleet resource."
      },
      "ResourceType": {
        "type": "string",
        "enum": [
          "capacity-reservation",
          "client-vpn-endpoint",
          "customer-gateway",
          "carrier-gateway",
          "coip-pool",
          "dedicated-host",
          "dhcp-options",
          "egress-only-internet-gateway",
          "elastic-ip",
          "elastic-gpu",
          "export-image-task",
          "export-instance-task",
          "fleet",
          "fpga-image",
          "host-reservation",
          "image",
          "import-image-task",
          "import-snapshot-task",
          "instance",
          "instance-event-window",
          "internet-gateway",
          "ipam",
          "ipam-pool",
          "ipam-scope",
          "ipv4pool-ec2",
          "ipv6pool-ec2",
          "key-pair",
          "launch-template",
          "local-gateway",
          "local-gateway-route-table",
          "local-gateway-virtual-interface",
          "local-gateway-virtual-interface-group",
          "local-gateway-route-table-vpc-association",
          "local-gateway-route-table-virtual-interface-group-association",
          "natgateway",
          "network-acl",
          "network-interface",
          "network-insights-analysis",
          "network-insights-path",
          "network-insights-access-scope",
          "network-insights-access-scope-analysis",
          "placement-group",
          "prefix-list",
          "replace-root-volume-task",
          "reserved-instances",
          "route-table",
          "security-group",
          "security-group-rule",
          "snapshot",
          "spot-fleet-request",
          "spot-instances-request",
          "subnet",
          "subnet-cidr-reservation",
          "traffic-mirror-filter",
          "traffic-mirror-session",
          "traffic-mirror-target",
          "transit-gateway",
          "transit-gateway-attachment",
          "transit-gateway-connect-peer",
          "transit-gateway-multicast-domain",
          "transit-gateway-policy-table",
          "transit-gateway-route-table",
          "transit-gateway-route-table-announcement",
          "volume",
          "vpc",
          "vpc-endpoint",
          "vpc-endpoint-connection",
          "vpc-endpoint-service",
          "vpc-endpoint-service-permission",
          "vpc-peering-connection",
          "vpn-connection",
          "vpn-gateway",
          "vpc-flow-log",
          "capacity-reservation-fleet",
          "traffic-mirror-filter-rule",
          "vpc-endpoint-connection-device-type",
          "verified-access-instance",
          "verified-access-group",
          "verified-access-endpoint",
          "verified-access-policy",
          "verified-access-trust-provider",
          "vpn-connection-device-type",
          "vpc-block-public-access-exclusion",
          "ipam-resource-discovery",
          "ipam-resource-discovery-association",
          "instance-connect-endpoint"
        ]
      },
      "TagList": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/Tag"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        }
      },
      "Tag": {
        "type": "object",
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "key"
                },
                "description": "<p>The key of the tag.</p> <p>Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with <code>aws:</code>.</p>"
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "value"
                },
                "description": "<p>The value of the tag.</p> <p>Constraints: Tag values are case-sensitive and accept a maximum of 256 Unicode characters.</p>"
              }
            ]
          }
        },
        "description": "Describes a tag."
      },
      "InstanceRequirements": {
        "type": "object",
        "properties": {
          "VCpuCount": {
            "allOf": [
              {
                "$ref": "#/$defs/VCpuCountRange"
              },
              {
                "xml": {
                  "name": "vCpuCount"
                },
                "description": "The minimum and maximum number of vCPUs."
              }
            ]
          },
          "MemoryMiB": {
            "allOf": [
              {
                "$ref": "#/$defs/MemoryMiB"
              },
              {
                "xml": {
                  "name": "memoryMiB"
                },
                "description": "The minimum and maximum amount of memory, in MiB."
              }
            ]
          },
          "CpuManufacturers": {
            "allOf": [
              {
                "$ref": "#/$defs/CpuManufacturerSet"
              },
              {
                "xml": {
                  "name": "cpuManufacturerSet"
                },
                "description": "<p>The CPU manufacturers to include.</p> <ul> <li> <p>For instance types with Intel CPUs, specify <code>intel</code>.</p> </li> <li> <p>For instance types with AMD CPUs, specify <code>amd</code>.</p> </li> <li> <p>For instance types with Amazon Web Services CPUs, specify <code>amazon-web-services</code>.</p> </li> </ul> <note> <p>Don't confuse the CPU manufacturer with the CPU architecture. Instances will be launched with a compatible CPU architecture based on the Amazon Machine Image (AMI) that you specify in your launch template.</p> </note> <p>Default: Any manufacturer</p>"
              }
            ]
          },
          "MemoryGiBPerVCpu": {
            "allOf": [
              {
                "$ref": "#/$defs/MemoryGiBPerVCpu"
              },
              {
                "xml": {
                  "name": "memoryGiBPerVCpu"
                },
                "description": "<p>The minimum and maximum amount of memory per vCPU, in GiB.</p> <p>Default: No minimum or maximum limits</p>"
              }
            ]
          },
          "ExcludedInstanceTypes": {
            "allOf": [
              {
                "$ref": "#/$defs/ExcludedInstanceTypeSet"
              },
              {
                "xml": {
                  "name": "excludedInstanceTypeSet"
                },
                "description": "<p>The instance types to exclude.</p> <p>You can use strings with one or more wild cards, represented by an asterisk (<code>*</code>), to exclude an instance type, size, or generation. The following are examples: <code>m5.8xlarge</code>, <code>c5*.*</code>, <code>m5a.*</code>, <code>r*</code>, <code>*3*</code>.</p> <p>For example, if you specify <code>c5*</code>,Amazon EC2 will exclude the entire C5 instance family, which includes all C5a and C5n instance types. If you specify <code>m5a.*</code>, Amazon EC2 will exclude all the M5a instance types, but not the M5n instance types.</p> <note> <p>If you specify <code>ExcludedInstanceTypes</code>, you can't specify <code>AllowedInstanceTypes</code>.</p> </note> <p>Default: No excluded instance types</p>"
              }
            ]
          },
          "InstanceGenerations": {
            "allOf": [
              {
                "$ref": "#/$defs/InstanceGenerationSet"
              },
              {
                "xml": {
                  "name": "instanceGenerationSet"
                },
                "description": "<p>Indicates whether current or previous generation instance types are included. The current generation instance types are recommended for use. Current generation instance types are typically the latest two to three generations in each instance family. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html\">Instance types</a> in the <i>Amazon EC2 User Guide</i>.</p> <p>For current generation instance types, specify <code>current</code>.</p> <p>For previous generation instance types, specify <code>previous</code>.</p> <p>Default: Current and previous generation instance types</p>"
              }
            ]
          },
          "SpotMaxPricePercentageOverLowestPrice": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "xml": {
                  "name": "spotMaxPricePercentageOverLowestPrice"
                },
                "description": "<p>The price protection threshold for Spot Instances. This is the maximum you’ll pay for a Spot Instance, expressed as a percentage above the least expensive current generation M, C, or R instance type with your specified attributes. When Amazon EC2 selects instance types with your attributes, it excludes instance types priced above your threshold.</p> <p>The parameter accepts an integer, which Amazon EC2 interprets as a percentage.</p> <p>To turn off price protection, specify a high value, such as <code>999999</code>.</p> <p>This parameter is not supported for <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetSpotPlacementScores.html\">GetSpotPlacementScores</a> and <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetInstanceTypesFromInstanceRequirements.html\">GetInstanceTypesFromInstanceRequirements</a>.</p> <note> <p>If you set <code>TargetCapacityUnitType</code> to <code>vcpu</code> or <code>memory-mib</code>, the price protection threshold is applied based on the per-vCPU or per-memory price instead of the per-instance price.</p> </note> <p>Default: <code>100</code> </p>"
              }
            ]
          },
          "OnDemandMaxPricePercentageOverLowestPrice": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "xml": {
                  "name": "onDemandMaxPricePercentageOverLowestPrice"
                },
                "description": "<p>The price protection threshold for On-Demand Instances. This is the maximum you’ll pay for an On-Demand Instance, expressed as a percentage above the least expensive current generation M, C, or R instance type with your specified attributes. When Amazon EC2 selects instance types with your attributes, it excludes instance types priced above your threshold.</p> <p>The parameter accepts an integer, which Amazon EC2 interprets as a percentage.</p> <p>To turn off price protection, specify a high value, such as <code>999999</code>.</p> <p>This parameter is not supported for <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetSpotPlacementScores.html\">GetSpotPlacementScores</a> and <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetInstanceTypesFromInstanceRequirements.html\">GetInstanceTypesFromInstanceRequirements</a>.</p> <note> <p>If you set <code>TargetCapacityUnitType</code> to <code>vcpu</code> or <code>memory-mib</code>, the price protection threshold is applied based on the per-vCPU or per-memory price instead of the per-instance price.</p> </note> <p>Default: <code>20</code> </p>"
              }
            ]
          },
          "BareMetal": {
            "allOf": [
              {
                "$ref": "#/$defs/BareMetal"
              },
              {
                "xml": {
                  "name": "bareMetal"
                },
                "description": "<p>Indicates whether bare metal instance types must be included, excluded, or required.</p> <ul> <li> <p>To include bare metal instance types, specify <code>included</code>.</p> </li> <li> <p>To require only bare metal instance types, specify <code>required</code>.</p> </li> <li> <p>To exclude bare metal instance types, specify <code>excluded</code>.</p> </li> </ul> <p>Default: <code>excluded</code> </p>"
              }
            ]
          },
          "BurstablePerformance": {
            "allOf": [
              {
                "$ref": "#/$defs/BurstablePerformance"
              },
              {
                "xml": {
                  "name": "burstablePerformance"
                },
                "description": "<p>Indicates whether burstable performance T instance types are included, excluded, or required. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances.html\">Burstable performance instances</a>.</p> <ul> <li> <p>To include burstable performance instance types, specify <code>included</code>.</p> </li> <li> <p>To require only burstable performance instance types, specify <code>required</code>.</p> </li> <li> <p>To exclude burstable performance instance types, specify <code>excluded</code>.</p> </li> </ul> <p>Default: <code>excluded</code> </p>"
              }
            ]
          },
          "RequireHibernateSupport": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "xml": {
                  "name": "requireHibernateSupport"
                },
                "description": "<p>Indicates whether instance types must support hibernation for On-Demand Instances.</p> <p>This parameter is not supported for <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetSpotPlacementScores.html\">GetSpotPlacementScores</a>.</p> <p>Default: <code>false</code> </p>"
              }
            ]
          },
          "NetworkInterfaceCount": {
            "allOf": [
              {
                "$ref": "#/$defs/NetworkInterfaceCount"
              },
              {
                "xml": {
                  "name": "networkInterfaceCount"
                },
                "description": "<p>The minimum and maximum number of network interfaces.</p> <p>Default: No minimum or maximum limits</p>"
              }
            ]
          },
          "LocalStorage": {
            "allOf": [
              {
                "$ref": "#/$defs/LocalStorage"
              },
              {
                "xml": {
                  "name": "localStorage"
                },
                "description": "<p>Indicates whether instance types with instance store volumes are included, excluded, or required. For more information, <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html\">Amazon EC2 instance store</a> in the <i>Amazon EC2 User Guide</i>.</p> <ul> <li> <p>To include instance types with instance store volumes, specify <code>included</code>.</p> </li> <li> <p>To require only instance types with instance store volumes, specify <code>required</code>.</p> </li> <li> <p>To exclude instance types with instance store volumes, specify <code>excluded</code>.</p> </li> </ul> <p>Default: <code>included</code> </p>"
              }
            ]
          },
          "LocalStorageTypes": {
            "allOf": [
              {
                "$ref": "#/$defs/LocalStorageTypeSet"
              },
              {
                "xml": {
                  "name": "localStorageTypeSet"
                },
                "description": "<p>The type of local storage that is required.</p> <ul> <li> <p>For instance types with hard disk drive (HDD) storage, specify <code>hdd</code>.</p> </li> <li> <p>For instance types with solid state drive (SSD) storage, specify <code>ssd</code>.</p> </li> </ul> <p>Default: <code>hdd</code> and <code>ssd</code> </p>"
              }
            ]
          },
          "TotalLocalStorageGB": {
            "allOf": [
              {
                "$ref": "#/$defs/TotalLocalStorageGB"
              },
              {
                "xml": {
                  "name": "totalLocalStorageGB"
                },
                "description": "<p>The minimum and maximum amount of total local storage, in GB.</p> <p>Default: No minimum or maximum limits</p>"
              }
            ]
          },
          "BaselineEbsBandwidthMbps": {
            "allOf": [
              {
                "$ref": "#/$defs/BaselineEbsBandwidthMbps"
              },
              {
                "xml": {
                  "name": "baselineEbsBandwidthMbps"
                },
                "description": "<p>The minimum and maximum baseline bandwidth to Amazon EBS, in Mbps. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-optimized.html\">Amazon EBS–optimized instances</a> in the <i>Amazon EC2 User Guide</i>.</p> <p>Default: No minimum or maximum limits</p>"
              }
            ]
          },
          "AcceleratorTypes": {
            "allOf": [
              {
                "$ref": "#/$defs/AcceleratorTypeSet"
              },
              {
                "xml": {
                  "name": "acceleratorTypeSet"
                },
                "description": "<p>The accelerator types that must be on the instance type.</p> <ul> <li> <p>For instance types with GPU accelerators, specify <code>gpu</code>.</p> </li> <li> <p>For instance types with FPGA accelerators, specify <code>fpga</code>.</p> </li> <li> <p>For instance types with inference accelerators, specify <code>inference</code>.</p> </li> </ul> <p>Default: Any accelerator type</p>"
              }
            ]
          },
          "AcceleratorCount": {
            "allOf": [
              {
                "$ref": "#/$defs/AcceleratorCount"
              },
              {
                "xml": {
                  "name": "acceleratorCount"
                },
                "description": "<p>The minimum and maximum number of accelerators (GPUs, FPGAs, or Amazon Web Services Inferentia chips) on an instance.</p> <p>To exclude accelerator-enabled instance types, set <code>Max</code> to <code>0</code>.</p> <p>Default: No minimum or maximum limits</p>"
              }
            ]
          },
          "AcceleratorManufacturers": {
            "allOf": [
              {
                "$ref": "#/$defs/AcceleratorManufacturerSet"
              },
              {
                "xml": {
                  "name": "acceleratorManufacturerSet"
                },
                "description": "<p>Indicates whether instance types must have accelerators by specific manufacturers.</p> <ul> <li> <p>For instance types with NVIDIA devices, specify <code>nvidia</code>.</p> </li> <li> <p>For instance types with AMD devices, specify <code>amd</code>.</p> </li> <li> <p>For instance types with Amazon Web Services devices, specify <code>amazon-web-services</code>.</p> </li> <li> <p>For instance types with Xilinx devices, specify <code>xilinx</code>.</p> </li> </ul> <p>Default: Any manufacturer</p>"
              }
            ]
          },
          "AcceleratorNames": {
            "allOf": [
              {
                "$ref": "#/$defs/AcceleratorNameSet"
              },
              {
                "xml": {
                  "name": "acceleratorNameSet"
                },
                "description": "<p>The accelerators that must be on the instance type.</p> <ul> <li> <p>For instance types with NVIDIA A100 GPUs, specify <code>a100</code>.</p> </li> <li> <p>For instance types with NVIDIA V100 GPUs, specify <code>v100</code>.</p> </li> <li> <p>For instance types with NVIDIA K80 GPUs, specify <code>k80</code>.</p> </li> <li> <p>For instance types with NVIDIA T4 GPUs, specify <code>t4</code>.</p> </li> <li> <p>For instance types with NVIDIA M60 GPUs, specify <code>m60</code>.</p> </li> <li> <p>For instance types with AMD Radeon Pro V520 GPUs, specify <code>radeon-pro-v520</code>.</p> </li> <li> <p>For instance types with Xilinx VU9P FPGAs, specify <code>vu9p</code>.</p> </li> <li> <p>For instance types with Amazon Web Services Inferentia chips, specify <code>inferentia</code>.</p> </li> <li> <p>For instance types with NVIDIA GRID K520 GPUs, specify <code>k520</code>.</p> </li> </ul> <p>Default: Any accelerator</p>"
              }
            ]
          },
          "AcceleratorTotalMemoryMiB": {
            "allOf": [
              {
                "$ref": "#/$defs/AcceleratorTotalMemoryMiB"
              },
              {
                "xml": {
                  "name": "acceleratorTotalMemoryMiB"
                },
                "description": "<p>The minimum and maximum amount of total accelerator memory, in MiB.</p> <p>Default: No minimum or maximum limits</p>"
              }
            ]
          },
          "NetworkBandwidthGbps": {
            "allOf": [
              {
                "$ref": "#/$defs/NetworkBandwidthGbps"
              },
              {
                "xml": {
                  "name": "networkBandwidthGbps"
                },
                "description": "<p>The minimum and maximum amount of network bandwidth, in gigabits per second (Gbps).</p> <p>Default: No minimum or maximum limits</p>"
              }
            ]
          },
          "AllowedInstanceTypes": {
            "allOf": [
              {
                "$ref": "#/$defs/AllowedInstanceTypeSet"
              },
              {
                "xml": {
                  "name": "allowedInstanceTypeSet"
                },
                "description": "<p>The instance types to apply your specified attributes against. All other instance types are ignored, even if they match your specified attributes.</p> <p>You can use strings with one or more wild cards, represented by an asterisk (<code>*</code>), to allow an instance type, size, or generation. The following are examples: <code>m5.8xlarge</code>, <code>c5*.*</code>, <code>m5a.*</code>, <code>r*</code>, <code>*3*</code>.</p> <p>For example, if you specify <code>c5*</code>,Amazon EC2 will allow the entire C5 instance family, which includes all C5a and C5n instance types. If you specify <code>m5a.*</code>, Amazon EC2 will allow all the M5a instance types, but not the M5n instance types.</p> <note> <p>If you specify <code>AllowedInstanceTypes</code>, you can't specify <code>ExcludedInstanceTypes</code>.</p> </note> <p>Default: All instance types</p>"
              }
            ]
          }
        },
        "description": "<p>The attributes for the instance types. When you specify instance attributes, Amazon EC2 will identify instance types with these attributes.</p> <p>You must specify <code>VCpuCount</code> and <code>MemoryMiB</code>. All other attributes are optional. Any unspecified optional attribute is set to its default.</p> <p>When you specify multiple attributes, you get instance types that satisfy all of the specified attributes. If you specify multiple values for an attribute, you get instance types that satisfy any of the specified values.</p> <p>To limit the list of instance types from which Amazon EC2 can identify matching instance types, you can use one of the following parameters, but not both in the same request:</p> <ul> <li> <p> <code>AllowedInstanceTypes</code> - The instance types to include in the list. All other instance types are ignored, even if they match your specified attributes.</p> </li> <li> <p> <code>ExcludedInstanceTypes</code> - The instance types to exclude from the list, even if they match your specified attributes.</p> </li> </ul> <note> <p>If you specify <code>InstanceRequirements</code>, you can't specify <code>InstanceType</code>.</p> <p>Attribute-based instance type selection is only supported when using Auto Scaling groups, EC2 Fleet, and Spot Fleet to launch instances. If you plan to use the launch template in the <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-instance-wizard.html\">launch instance wizard</a> or with the <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html\">RunInstances API</a>, you can't specify <code>InstanceRequirements</code>.</p> </note> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-attribute-based-instance-type-selection.html\">Attribute-based instance type selection for EC2 Fleet</a>, <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet-attribute-based-instance-type-selection.html\">Attribute-based instance type selection for Spot Fleet</a>, and <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-placement-score.html\">Spot placement score</a> in the <i>Amazon EC2 User Guide</i>.</p>"
      },
      "VCpuCountRange": {
        "type": "object",
        "properties": {
          "Min": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "xml": {
                  "name": "min"
                },
                "description": "The minimum number of vCPUs. If the value is <code>0</code>, there is no minimum limit."
              }
            ]
          },
          "Max": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "xml": {
                  "name": "max"
                },
                "description": "The maximum number of vCPUs. If this parameter is not specified, there is no maximum limit."
              }
            ]
          }
        },
        "description": "The minimum and maximum number of vCPUs."
      },
      "MemoryMiB": {
        "type": "object",
        "properties": {
          "Min": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "xml": {
                  "name": "min"
                },
                "description": "The minimum amount of memory, in MiB. If this parameter is not specified, there is no minimum limit."
              }
            ]
          },
          "Max": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "xml": {
                  "name": "max"
                },
                "description": "The maximum amount of memory, in MiB. If this parameter is not specified, there is no maximum limit."
              }
            ]
          }
        },
        "description": "The minimum and maximum amount of memory, in MiB."
      },
      "CpuManufacturerSet": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/CpuManufacturer"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        }
      },
      "CpuManufacturer": {
        "type": "string",
        "enum": [
          "intel",
          "amd",
          "amazon-web-services"
        ]
      },
      "MemoryGiBPerVCpu": {
        "type": "object",
        "properties": {
          "Min": {
            "allOf": [
              {
                "$ref": "#/$defs/Double"
              },
              {
                "xml": {
                  "name": "min"
                },
                "description": "The minimum amount of memory per vCPU, in GiB. If this parameter is not specified, there is no minimum limit."
              }
            ]
          },
          "Max": {
            "allOf": [
              {
                "$ref": "#/$defs/Double"
              },
              {
                "xml": {
                  "name": "max"
                },
                "description": "The maximum amount of memory per vCPU, in GiB. If this parameter is not specified, there is no maximum limit."
              }
            ]
          }
        },
        "description": "<p>The minimum and maximum amount of memory per vCPU, in GiB.</p> <p/>"
      },
      "ExcludedInstanceTypeSet": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/ExcludedInstanceType"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        },
        "minItems": 0,
        "maxItems": 400
      },
      "ExcludedInstanceType": {
        "type": "string",
        "pattern": "[a-zA-Z0-9\\.\\*\\-]+",
        "minLength": 1,
        "maxLength": 30
      },
      "InstanceGenerationSet": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/InstanceGeneration"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        }
      },
      "InstanceGeneration": {
        "type": "string",
        "enum": [
          "current",
          "previous"
        ]
      },
      "BareMetal": {
        "type": "string",
        "enum": [
          "included",
          "required",
          "excluded"
        ]
      },
      "BurstablePerformance": {
        "type": "string",
        "enum": [
          "included",
          "required",
          "excluded"
        ]
      },
      "NetworkInterfaceCount": {
        "type": "object",
        "properties": {
          "Min": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "xml": {
                  "name": "min"
                },
                "description": "The minimum number of network interfaces. If this parameter is not specified, there is no minimum limit."
              }
            ]
          },
          "Max": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "xml": {
                  "name": "max"
                },
                "description": "The maximum number of network interfaces. If this parameter is not specified, there is no maximum limit."
              }
            ]
          }
        },
        "description": "The minimum and maximum number of network interfaces."
      },
      "LocalStorage": {
        "type": "string",
        "enum": [
          "included",
          "required",
          "excluded"
        ]
      },
      "LocalStorageTypeSet": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/LocalStorageType"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        }
      },
      "LocalStorageType": {
        "type": "string",
        "enum": [
          "hdd",
          "ssd"
        ]
      },
      "TotalLocalStorageGB": {
        "type": "object",
        "properties": {
          "Min": {
            "allOf": [
              {
                "$ref": "#/$defs/Double"
              },
              {
                "xml": {
                  "name": "min"
                },
                "description": "The minimum amount of total local storage, in GB. If this parameter is not specified, there is no minimum limit."
              }
            ]
          },
          "Max": {
            "allOf": [
              {
                "$ref": "#/$defs/Double"
              },
              {
                "xml": {
                  "name": "max"
                },
                "description": "The maximum amount of total local storage, in GB. If this parameter is not specified, there is no maximum limit."
              }
            ]
          }
        },
        "description": "The minimum and maximum amount of total local storage, in GB."
      },
      "BaselineEbsBandwidthMbps": {
        "type": "object",
        "properties": {
          "Min": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "xml": {
                  "name": "min"
                },
                "description": "The minimum baseline bandwidth, in Mbps. If this parameter is not specified, there is no minimum limit."
              }
            ]
          },
          "Max": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "xml": {
                  "name": "max"
                },
                "description": "The maximum baseline bandwidth, in Mbps. If this parameter is not specified, there is no maximum limit."
              }
            ]
          }
        },
        "description": "The minimum and maximum baseline bandwidth to Amazon EBS, in Mbps. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-optimized.html\">Amazon EBS–optimized instances</a> in the <i>Amazon EC2 User Guide</i>."
      },
      "AcceleratorTypeSet": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/AcceleratorType"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        }
      },
      "AcceleratorType": {
        "type": "string",
        "enum": [
          "gpu",
          "fpga",
          "inference"
        ]
      },
      "AcceleratorCount": {
        "type": "object",
        "properties": {
          "Min": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "xml": {
                  "name": "min"
                },
                "description": "The minimum number of accelerators. If this parameter is not specified, there is no minimum limit."
              }
            ]
          },
          "Max": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "xml": {
                  "name": "max"
                },
                "description": "The maximum number of accelerators. If this parameter is not specified, there is no maximum limit."
              }
            ]
          }
        },
        "description": "The minimum and maximum number of accelerators (GPUs, FPGAs, or Amazon Web Services Inferentia chips) on an instance."
      },
      "AcceleratorManufacturerSet": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/AcceleratorManufacturer"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        }
      },
      "AcceleratorManufacturer": {
        "type": "string",
        "enum": [
          "nvidia",
          "amd",
          "amazon-web-services",
          "xilinx"
        ]
      },
      "AcceleratorNameSet": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/AcceleratorName"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        }
      },
      "AcceleratorName": {
        "type": "string",
        "enum": [
          "a100",
          "v100",
          "k80",
          "t4",
          "m60",
          "radeon-pro-v520",
          "vu9p",
          "inferentia",
          "k520"
        ]
      },
      "AcceleratorTotalMemoryMiB": {
        "type": "object",
        "properties": {
          "Min": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "xml": {
                  "name": "min"
                },
                "description": "The minimum amount of accelerator memory, in MiB. If this parameter is not specified, there is no minimum limit."
              }
            ]
          },
          "Max": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "xml": {
                  "name": "max"
                },
                "description": "The maximum amount of accelerator memory, in MiB. If this parameter is not specified, there is no maximum limit."
              }
            ]
          }
        },
        "description": "The minimum and maximum amount of total accelerator memory, in MiB."
      },
      "NetworkBandwidthGbps": {
        "type": "object",
        "properties": {
          "Min": {
            "allOf": [
              {
                "$ref": "#/$defs/Double"
              },
              {
                "xml": {
                  "name": "min"
                },
                "description": "The minimum amount of network bandwidth, in Gbps. If this parameter is not specified, there is no minimum limit."
              }
            ]
          },
          "Max": {
            "allOf": [
              {
                "$ref": "#/$defs/Double"
              },
              {
                "xml": {
                  "name": "max"
                },
                "description": "The maximum amount of network bandwidth, in Gbps. If this parameter is not specified, there is no maximum limit."
              }
            ]
          }
        },
        "description": "<p>The minimum and maximum amount of network bandwidth, in gigabits per second (Gbps).</p> <note> <p>Setting the minimum bandwidth does not guarantee that your instance will achieve the minimum bandwidth. Amazon EC2 will identify instance types that support the specified minimum bandwidth, but the actual bandwidth of your instance might go below the specified minimum at times. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-network-bandwidth.html#available-instance-bandwidth\">Available instance bandwidth</a> in the <i>Amazon EC2 User Guide</i>.</p> </note>"
      },
      "AllowedInstanceTypeSet": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/AllowedInstanceType"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        },
        "minItems": 0,
        "maxItems": 400
      },
      "AllowedInstanceType": {
        "type": "string",
        "pattern": "[a-zA-Z0-9\\.\\*\\-]+",
        "minLength": 1,
        "maxLength": 30
      },
      "LaunchTemplateConfigList": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/LaunchTemplateConfig"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        }
      },
      "LaunchTemplateConfig": {
        "type": "object",
        "properties": {
          "LaunchTemplateSpecification": {
            "allOf": [
              {
                "$ref": "#/$defs/FleetLaunchTemplateSpecification"
              },
              {
                "xml": {
                  "name": "launchTemplateSpecification"
                },
                "description": "The launch template to use. Make sure that the launch template does not contain the <code>NetworkInterfaceId</code> parameter because you can't specify a network interface ID in a Spot Fleet."
              }
            ]
          },
          "Overrides": {
            "allOf": [
              {
                "$ref": "#/$defs/LaunchTemplateOverridesList"
              },
              {
                "xml": {
                  "name": "overrides"
                },
                "description": "Any parameters that you specify override the same parameters in the launch template."
              }
            ]
          }
        },
        "description": "Describes a launch template and overrides."
      },
      "FleetLaunchTemplateSpecification": {
        "type": "object",
        "properties": {
          "LaunchTemplateId": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "launchTemplateId"
                },
                "description": "<p>The ID of the launch template.</p> <p>You must specify the <code>LaunchTemplateId</code> or the <code>LaunchTemplateName</code>, but not both.</p>"
              }
            ]
          },
          "LaunchTemplateName": {
            "allOf": [
              {
                "$ref": "#/$defs/LaunchTemplateName"
              },
              {
                "xml": {
                  "name": "launchTemplateName"
                },
                "description": "<p>The name of the launch template.</p> <p>You must specify the <code>LaunchTemplateName</code> or the <code>LaunchTemplateId</code>, but not both.</p>"
              }
            ]
          },
          "Version": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "version"
                },
                "description": "<p>The launch template version number, <code>$Latest</code>, or <code>$Default</code>. You must specify a value, otherwise the request fails.</p> <p>If the value is <code>$Latest</code>, Amazon EC2 uses the latest version of the launch template.</p> <p>If the value is <code>$Default</code>, Amazon EC2 uses the default version of the launch template.</p>"
              }
            ]
          }
        },
        "description": "<p>The Amazon EC2 launch template that can be used by a Spot Fleet to configure Amazon EC2 instances. You must specify either the ID or name of the launch template in the request, but not both.</p> <p>For information about launch templates, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-templates.html\">Launch an instance from a launch template</a> in the <i>Amazon EC2 User Guide</i>.</p>"
      },
      "LaunchTemplateName": {
        "type": "string",
        "pattern": "[a-zA-Z0-9\\(\\)\\.\\-/_]+",
        "minLength": 3,
        "maxLength": 128
      },
      "LaunchTemplateOverridesList": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/LaunchTemplateOverrides"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        }
      },
      "LaunchTemplateOverrides": {
        "type": "object",
        "properties": {
          "InstanceType": {
            "allOf": [
              {
                "$ref": "#/$defs/InstanceType"
              },
              {
                "xml": {
                  "name": "instanceType"
                },
                "description": "The instance type."
              }
            ]
          },
          "SpotPrice": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "spotPrice"
                },
                "description": "<p>The maximum price per unit hour that you are willing to pay for a Spot Instance. We do not recommend using this parameter because it can lead to increased interruptions. If you do not specify this parameter, you will pay the current Spot price.</p> <important> <p>If you specify a maximum price, your instances will be interrupted more frequently than if you do not specify this parameter.</p> </important>"
              }
            ]
          },
          "SubnetId": {
            "allOf": [
              {
                "$ref": "#/$defs/SubnetId"
              },
              {
                "xml": {
                  "name": "subnetId"
                },
                "description": "The ID of the subnet in which to launch the instances."
              }
            ]
          },
          "AvailabilityZone": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "availabilityZone"
                },
                "description": "The Availability Zone in which to launch the instances."
              }
            ]
          },
          "WeightedCapacity": {
            "allOf": [
              {
                "$ref": "#/$defs/Double"
              },
              {
                "xml": {
                  "name": "weightedCapacity"
                },
                "description": "The number of units provided by the specified instance type."
              }
            ]
          },
          "Priority": {
            "allOf": [
              {
                "$ref": "#/$defs/Double"
              },
              {
                "xml": {
                  "name": "priority"
                },
                "description": "<p>The priority for the launch template override. The highest priority is launched first.</p> <p>If <code>OnDemandAllocationStrategy</code> is set to <code>prioritized</code>, Spot Fleet uses priority to determine which launch template override to use first in fulfilling On-Demand capacity.</p> <p>If the Spot <code>AllocationStrategy</code> is set to <code>capacityOptimizedPrioritized</code>, Spot Fleet uses priority on a best-effort basis to determine which launch template override to use in fulfilling Spot capacity, but optimizes for capacity first.</p> <p>Valid values are whole numbers starting at <code>0</code>. The lower the number, the higher the priority. If no number is set, the launch template override has the lowest priority. You can set the same priority for different launch template overrides.</p>"
              }
            ]
          },
          "InstanceRequirements": {
            "allOf": [
              {
                "$ref": "#/$defs/InstanceRequirements"
              },
              {
                "xml": {
                  "name": "instanceRequirements"
                },
                "description": "<p>The instance requirements. When you specify instance requirements, Amazon EC2 will identify instance types with the provided requirements, and then use your On-Demand and Spot allocation strategies to launch instances from these instance types, in the same way as when you specify a list of instance types.</p> <note> <p>If you specify <code>InstanceRequirements</code>, you can't specify <code>InstanceType</code>.</p> </note>"
              }
            ]
          }
        },
        "description": "Describes overrides for a launch template."
      },
      "FleetType": {
        "type": "string",
        "enum": [
          "request",
          "maintain",
          "instant"
        ]
      },
      "DateTime": {
        "type": "string",
        "format": "date-time"
      },
      "InstanceInterruptionBehavior": {
        "type": "string",
        "enum": [
          "hibernate",
          "stop",
          "terminate"
        ]
      },
      "LoadBalancersConfig": {
        "type": "object",
        "properties": {
          "ClassicLoadBalancersConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/ClassicLoadBalancersConfig"
              },
              {
                "xml": {
                  "name": "classicLoadBalancersConfig"
                },
                "description": "The Classic Load Balancers."
              }
            ]
          },
          "TargetGroupsConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/TargetGroupsConfig"
              },
              {
                "xml": {
                  "name": "targetGroupsConfig"
                },
                "description": "The target groups."
              }
            ]
          }
        },
        "description": "Describes the Classic Load Balancers and target groups to attach to a Spot Fleet request."
      },
      "ClassicLoadBalancersConfig": {
        "type": "object",
        "properties": {
          "ClassicLoadBalancers": {
            "allOf": [
              {
                "$ref": "#/$defs/ClassicLoadBalancers"
              },
              {
                "xml": {
                  "name": "classicLoadBalancers"
                },
                "description": "One or more Classic Load Balancers."
              }
            ]
          }
        },
        "description": "Describes the Classic Load Balancers to attach to a Spot Fleet. Spot Fleet registers the running Spot Instances with these Classic Load Balancers."
      },
      "ClassicLoadBalancers": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/ClassicLoadBalancer"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        },
        "minItems": 1,
        "maxItems": 5
      },
      "ClassicLoadBalancer": {
        "type": "object",
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "name"
                },
                "description": "The name of the load balancer."
              }
            ]
          }
        },
        "description": "Describes a Classic Load Balancer."
      },
      "TargetGroupsConfig": {
        "type": "object",
        "properties": {
          "TargetGroups": {
            "allOf": [
              {
                "$ref": "#/$defs/TargetGroups"
              },
              {
                "xml": {
                  "name": "targetGroups"
                },
                "description": "One or more target groups."
              }
            ]
          }
        },
        "description": "Describes the target groups to attach to a Spot Fleet. Spot Fleet registers the running Spot Instances with these target groups."
      },
      "TargetGroups": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/TargetGroup"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        },
        "minItems": 1,
        "maxItems": 5
      },
      "TargetGroup": {
        "type": "object",
        "properties": {
          "Arn": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "arn"
                },
                "description": "The Amazon Resource Name (ARN) of the target group."
              }
            ]
          }
        },
        "description": "Describes a load balancer target group."
      },
      "TargetCapacityUnitType": {
        "type": "string",
        "enum": [
          "vcpu",
          "memory-mib",
          "units"
        ]
      },
      "TagSpecificationList": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/TagSpecification"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        }
      },
      "TagSpecification": {
        "type": "object",
        "properties": {
          "ResourceType": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceType"
              },
              {
                "xml": {
                  "name": "resourceType"
                },
                "description": "The type of resource to tag on creation."
              }
            ]
          },
          "Tags": {
            "allOf": [
              {
                "$ref": "#/$defs/TagList"
              },
              {
                "xml": {
                  "name": "Tag"
                },
                "description": "The tags to apply to the resource."
              }
            ]
          }
        },
        "description": "<p>The tags to apply to a resource when the resource is being created. When you specify a tag, you must specify the resource type to tag, otherwise the request will fail.</p> <note> <p>The <code>Valid Values</code> lists all the resource types that can be tagged. However, the action you're using might not support tagging all of these resource types. If you try to tag a resource type that is unsupported for the action you're using, you'll get an error.</p> </note>"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "http://ec2.us-east-1.amazonaws.com/#Action=RequestSpotFleet{?DryRun,SpotFleetRequestConfig,Action,Version}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Contains the output of RequestSpotFleet.",
        "**Key properties:**",
        {
          "$ul": [
            "**SpotFleetRequestId**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
