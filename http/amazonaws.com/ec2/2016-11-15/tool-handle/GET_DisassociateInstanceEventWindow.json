{
  "name": "GET_DisassociateInstanceEventWindow",
  "description": "<p>Disassociates one or more targets from an event window.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/event-windows.html\">Define event windows for scheduled events</a> in the <i>Amazon EC2 User Guide</i>.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "DryRun": {
        "type": "boolean",
        "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
      },
      "InstanceEventWindowId": {
        "type": "string",
        "description": "The ID of the event window."
      },
      "AssociationTarget": {
        "type": "object",
        "properties": {
          "InstanceIds": {
            "allOf": [
              {
                "$ref": "#/$defs/InstanceIdList"
              },
              {
                "xml": {
                  "name": "InstanceId"
                },
                "description": "The IDs of the instances to disassociate from the event window."
              }
            ]
          },
          "InstanceTags": {
            "allOf": [
              {
                "$ref": "#/$defs/TagList"
              },
              {
                "xml": {
                  "name": "InstanceTag"
                },
                "description": "The instance tags to disassociate from the event window. Any instances associated with the tags will be disassociated from the event window."
              }
            ]
          },
          "DedicatedHostIds": {
            "allOf": [
              {
                "$ref": "#/$defs/DedicatedHostIdList"
              },
              {
                "xml": {
                  "name": "DedicatedHostId"
                },
                "description": "The IDs of the Dedicated Hosts to disassociate from the event window."
              }
            ]
          }
        },
        "description": "One or more targets to disassociate from the specified event window."
      },
      "Action": {
        "type": "string",
        "enum": [
          "DisassociateInstanceEventWindow"
        ]
      },
      "Version": {
        "type": "string",
        "enum": [
          "2016-11-15"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      }
    },
    "required": [
      "InstanceEventWindowId",
      "AssociationTarget",
      "Action",
      "Version"
    ],
    "$defs": {
      "InstanceIdList": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/InstanceId"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        }
      },
      "InstanceId": {
        "type": "string"
      },
      "TagList": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/Tag"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        }
      },
      "Tag": {
        "type": "object",
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "key"
                },
                "description": "<p>The key of the tag.</p> <p>Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with <code>aws:</code>.</p>"
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "value"
                },
                "description": "<p>The value of the tag.</p> <p>Constraints: Tag values are case-sensitive and accept a maximum of 256 Unicode characters.</p>"
              }
            ]
          }
        },
        "description": "Describes a tag."
      },
      "String": {
        "type": "string"
      },
      "DedicatedHostIdList": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/DedicatedHostId"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        }
      },
      "DedicatedHostId": {
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "http://ec2.us-east-1.amazonaws.com/#Action=DisassociateInstanceEventWindow{?DryRun,InstanceEventWindowId,AssociationTarget,Action,Version}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**InstanceEventWindow**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
