{
  "name": "GET_RunScheduledInstances",
  "description": "<p>Launches the specified Scheduled Instances.</p> <p>Before you can launch a Scheduled Instance, you must purchase it and obtain an identifier using <a>PurchaseScheduledInstances</a>.</p> <p>You must launch a Scheduled Instance during its scheduled time period. You can't stop or reboot a Scheduled Instance, but you can terminate it as needed. If you terminate a Scheduled Instance before the current scheduled time period ends, you can launch it again after a few minutes. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-scheduled-instances.html\">Scheduled Instances</a> in the <i>Amazon EC2 User Guide</i>.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "ClientToken": {
        "type": "string",
        "description": "Unique, case-sensitive identifier that ensures the idempotency of the request. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring Idempotency</a>."
      },
      "DryRun": {
        "type": "boolean",
        "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
      },
      "InstanceCount": {
        "type": "integer",
        "description": "<p>The number of instances.</p> <p>Default: 1</p>"
      },
      "LaunchSpecification": {
        "type": "object",
        "required": [
          "ImageId"
        ],
        "properties": {
          "BlockDeviceMappings": {
            "allOf": [
              {
                "$ref": "#/$defs/ScheduledInstancesBlockDeviceMappingSet"
              },
              {
                "xml": {
                  "name": "BlockDeviceMapping"
                },
                "description": "The block device mapping entries."
              }
            ]
          },
          "EbsOptimized": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "<p>Indicates whether the instances are optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS-optimized instance.</p> <p>Default: <code>false</code> </p>"
              }
            ]
          },
          "IamInstanceProfile": {
            "allOf": [
              {
                "$ref": "#/$defs/ScheduledInstancesIamInstanceProfile"
              },
              {
                "description": "The IAM instance profile."
              }
            ]
          },
          "ImageId": {
            "allOf": [
              {
                "$ref": "#/$defs/ImageId"
              },
              {
                "description": "The ID of the Amazon Machine Image (AMI)."
              }
            ]
          },
          "InstanceType": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The instance type."
              }
            ]
          },
          "KernelId": {
            "allOf": [
              {
                "$ref": "#/$defs/KernelId"
              },
              {
                "description": "The ID of the kernel."
              }
            ]
          },
          "KeyName": {
            "allOf": [
              {
                "$ref": "#/$defs/KeyPairName"
              },
              {
                "description": "The name of the key pair."
              }
            ]
          },
          "Monitoring": {
            "allOf": [
              {
                "$ref": "#/$defs/ScheduledInstancesMonitoring"
              },
              {
                "description": "Enable or disable monitoring for the instances."
              }
            ]
          },
          "NetworkInterfaces": {
            "allOf": [
              {
                "$ref": "#/$defs/ScheduledInstancesNetworkInterfaceSet"
              },
              {
                "xml": {
                  "name": "NetworkInterface"
                },
                "description": "The network interfaces."
              }
            ]
          },
          "Placement": {
            "allOf": [
              {
                "$ref": "#/$defs/ScheduledInstancesPlacement"
              },
              {
                "description": "The placement information."
              }
            ]
          },
          "RamdiskId": {
            "allOf": [
              {
                "$ref": "#/$defs/RamdiskId"
              },
              {
                "description": "The ID of the RAM disk."
              }
            ]
          },
          "SecurityGroupIds": {
            "allOf": [
              {
                "$ref": "#/$defs/ScheduledInstancesSecurityGroupIdSet"
              },
              {
                "xml": {
                  "name": "SecurityGroupId"
                },
                "description": "The IDs of the security groups."
              }
            ]
          },
          "SubnetId": {
            "allOf": [
              {
                "$ref": "#/$defs/SubnetId"
              },
              {
                "description": "The ID of the subnet in which to launch the instances."
              }
            ]
          },
          "UserData": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The base64-encoded MIME user data."
              }
            ]
          }
        },
        "description": "The launch specification. You must match the instance type, Availability Zone, network, and platform of the schedule that you purchased."
      },
      "ScheduledInstanceId": {
        "type": "string",
        "description": "The Scheduled Instance ID."
      },
      "Action": {
        "type": "string",
        "enum": [
          "RunScheduledInstances"
        ]
      },
      "Version": {
        "type": "string",
        "enum": [
          "2016-11-15"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      }
    },
    "required": [
      "LaunchSpecification",
      "ScheduledInstanceId",
      "Action",
      "Version"
    ],
    "$defs": {
      "ScheduledInstancesBlockDeviceMappingSet": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/ScheduledInstancesBlockDeviceMapping"
            },
            {
              "xml": {
                "name": "BlockDeviceMapping"
              }
            }
          ]
        }
      },
      "ScheduledInstancesBlockDeviceMapping": {
        "type": "object",
        "properties": {
          "DeviceName": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The device name (for example, <code>/dev/sdh</code> or <code>xvdh</code>)."
              }
            ]
          },
          "Ebs": {
            "allOf": [
              {
                "$ref": "#/$defs/ScheduledInstancesEbs"
              },
              {
                "description": "Parameters used to set up EBS volumes automatically when the instance is launched."
              }
            ]
          },
          "NoDevice": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "To omit the device from the block device mapping, specify an empty string."
              }
            ]
          },
          "VirtualName": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "<p>The virtual device name (<code>ephemeral</code>N). Instance store volumes are numbered starting from 0. An instance type with two available instance store volumes can specify mappings for <code>ephemeral0</code> and <code>ephemeral1</code>. The number of available instance store volumes depends on the instance type. After you connect to the instance, you must mount the volume.</p> <p>Constraints: For M3 instances, you must specify instance store volumes in the block device mapping for the instance. When you launch an M3 instance, we ignore any instance store volumes specified in the block device mapping for the AMI.</p>"
              }
            ]
          }
        },
        "description": "Describes a block device mapping for a Scheduled Instance."
      },
      "String": {
        "type": "string"
      },
      "ScheduledInstancesEbs": {
        "type": "object",
        "properties": {
          "DeleteOnTermination": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Indicates whether the volume is deleted on instance termination."
              }
            ]
          },
          "Encrypted": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Indicates whether the volume is encrypted. You can attached encrypted volumes only to instances that support them."
              }
            ]
          },
          "Iops": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "<p>The number of I/O operations per second (IOPS) to provision for an <code>io1</code> or <code>io2</code> volume, with a maximum ratio of 50 IOPS/GiB for <code>io1</code>, and 500 IOPS/GiB for <code>io2</code>. Range is 100 to 64,000 IOPS for volumes in most Regions. Maximum IOPS of 64,000 is guaranteed only on <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#ec2-nitro-instances\">instances built on the Nitro System</a>. Other instance families guarantee performance up to 32,000 IOPS. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html\">Amazon EBS volume types</a> in the <i>Amazon EC2 User Guide</i>.</p> <p>This parameter is valid only for Provisioned IOPS SSD (<code>io1</code> and <code>io2</code>) volumes.</p>"
              }
            ]
          },
          "SnapshotId": {
            "allOf": [
              {
                "$ref": "#/$defs/SnapshotId"
              },
              {
                "description": "The ID of the snapshot."
              }
            ]
          },
          "VolumeSize": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "<p>The size of the volume, in GiB.</p> <p>Default: If you're creating the volume from a snapshot and don't specify a volume size, the default is the snapshot size.</p>"
              }
            ]
          },
          "VolumeType": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "<p>The volume type. <code>gp2</code> for General Purpose SSD, <code>io1</code> or <code> io2</code> for Provisioned IOPS SSD, Throughput Optimized HDD for <code>st1</code>, Cold HDD for <code>sc1</code>, or <code>standard</code> for Magnetic.</p> <p>Default: <code>gp2</code> </p>"
              }
            ]
          }
        },
        "description": "Describes an EBS volume for a Scheduled Instance."
      },
      "Boolean": {
        "type": "boolean"
      },
      "Integer": {
        "type": "integer"
      },
      "SnapshotId": {
        "type": "string"
      },
      "ScheduledInstancesIamInstanceProfile": {
        "type": "object",
        "properties": {
          "Arn": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The Amazon Resource Name (ARN)."
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The name."
              }
            ]
          }
        },
        "description": "Describes an IAM instance profile for a Scheduled Instance."
      },
      "ImageId": {
        "type": "string"
      },
      "KernelId": {
        "type": "string"
      },
      "KeyPairName": {
        "type": "string"
      },
      "ScheduledInstancesMonitoring": {
        "type": "object",
        "properties": {
          "Enabled": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Indicates whether monitoring is enabled."
              }
            ]
          }
        },
        "description": "Describes whether monitoring is enabled for a Scheduled Instance."
      },
      "ScheduledInstancesNetworkInterfaceSet": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/ScheduledInstancesNetworkInterface"
            },
            {
              "xml": {
                "name": "NetworkInterface"
              }
            }
          ]
        }
      },
      "ScheduledInstancesNetworkInterface": {
        "type": "object",
        "properties": {
          "AssociatePublicIpAddress": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Indicates whether to assign a public IPv4 address to instances launched in a VPC. The public IPv4 address can only be assigned to a network interface for eth0, and can only be assigned to a new network interface, not an existing one. You cannot specify more than one network interface in the request. If launching into a default subnet, the default value is <code>true</code>."
              }
            ]
          },
          "DeleteOnTermination": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Indicates whether to delete the interface when the instance is terminated."
              }
            ]
          },
          "Description": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The description."
              }
            ]
          },
          "DeviceIndex": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "The index of the device for the network interface attachment."
              }
            ]
          },
          "Groups": {
            "allOf": [
              {
                "$ref": "#/$defs/ScheduledInstancesSecurityGroupIdSet"
              },
              {
                "xml": {
                  "name": "Group"
                },
                "description": "The IDs of the security groups."
              }
            ]
          },
          "Ipv6AddressCount": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "The number of IPv6 addresses to assign to the network interface. The IPv6 addresses are automatically selected from the subnet range."
              }
            ]
          },
          "Ipv6Addresses": {
            "allOf": [
              {
                "$ref": "#/$defs/ScheduledInstancesIpv6AddressList"
              },
              {
                "xml": {
                  "name": "Ipv6Address"
                },
                "description": "The specific IPv6 addresses from the subnet range."
              }
            ]
          },
          "NetworkInterfaceId": {
            "allOf": [
              {
                "$ref": "#/$defs/NetworkInterfaceId"
              },
              {
                "description": "The ID of the network interface."
              }
            ]
          },
          "PrivateIpAddress": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The IPv4 address of the network interface within the subnet."
              }
            ]
          },
          "PrivateIpAddressConfigs": {
            "allOf": [
              {
                "$ref": "#/$defs/PrivateIpAddressConfigSet"
              },
              {
                "xml": {
                  "name": "PrivateIpAddressConfig"
                },
                "description": "The private IPv4 addresses."
              }
            ]
          },
          "SecondaryPrivateIpAddressCount": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "The number of secondary private IPv4 addresses."
              }
            ]
          },
          "SubnetId": {
            "allOf": [
              {
                "$ref": "#/$defs/SubnetId"
              },
              {
                "description": "The ID of the subnet."
              }
            ]
          }
        },
        "description": "Describes a network interface for a Scheduled Instance."
      },
      "ScheduledInstancesSecurityGroupIdSet": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/SecurityGroupId"
            },
            {
              "xml": {
                "name": "SecurityGroupId"
              }
            }
          ]
        }
      },
      "SecurityGroupId": {
        "type": "string"
      },
      "ScheduledInstancesIpv6AddressList": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/ScheduledInstancesIpv6Address"
            },
            {
              "xml": {
                "name": "Ipv6Address"
              }
            }
          ]
        }
      },
      "ScheduledInstancesIpv6Address": {
        "type": "object",
        "properties": {
          "Ipv6Address": {
            "allOf": [
              {
                "$ref": "#/$defs/Ipv6Address"
              },
              {
                "description": "The IPv6 address."
              }
            ]
          }
        },
        "description": "Describes an IPv6 address."
      },
      "Ipv6Address": {
        "type": "string"
      },
      "NetworkInterfaceId": {
        "type": "string"
      },
      "PrivateIpAddressConfigSet": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/ScheduledInstancesPrivateIpAddressConfig"
            },
            {
              "xml": {
                "name": "PrivateIpAddressConfigSet"
              }
            }
          ]
        }
      },
      "ScheduledInstancesPrivateIpAddressConfig": {
        "type": "object",
        "properties": {
          "Primary": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Indicates whether this is a primary IPv4 address. Otherwise, this is a secondary IPv4 address."
              }
            ]
          },
          "PrivateIpAddress": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The IPv4 address."
              }
            ]
          }
        },
        "description": "Describes a private IPv4 address for a Scheduled Instance."
      },
      "SubnetId": {
        "type": "string"
      },
      "ScheduledInstancesPlacement": {
        "type": "object",
        "properties": {
          "AvailabilityZone": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The Availability Zone."
              }
            ]
          },
          "GroupName": {
            "allOf": [
              {
                "$ref": "#/$defs/PlacementGroupName"
              },
              {
                "description": "The name of the placement group."
              }
            ]
          }
        },
        "description": "Describes the placement for a Scheduled Instance."
      },
      "PlacementGroupName": {
        "type": "string"
      },
      "RamdiskId": {
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "http://ec2.us-east-1.amazonaws.com/#Action=RunScheduledInstances{?ClientToken,DryRun,InstanceCount,LaunchSpecification,ScheduledInstanceId,Action,Version}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Contains the output of RunScheduledInstances.",
        "**Key properties:**",
        {
          "$ul": [
            "**InstanceIdSet**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
