{
  "name": "GET_UpdateSecurityGroupRuleDescriptionsEgress",
  "description": "Updates the description of an egress (outbound) security group rule. You can replace an existing description, or add a description to a rule that did not have one previously. You can remove a description for a security group rule by omitting the description parameter in the request.",
  "parameters": {
    "type": "object",
    "properties": {
      "DryRun": {
        "type": "boolean",
        "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
      },
      "GroupId": {
        "type": "string",
        "description": "The ID of the security group. You must specify either the security group ID or the security group name in the request. For security groups in a nondefault VPC, you must specify the security group ID."
      },
      "GroupName": {
        "type": "string",
        "description": "[Default VPC] The name of the security group. You must specify either the security group ID or the security group name."
      },
      "IpPermissions": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/IpPermission"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        },
        "description": "The IP permissions for the security group rule. You must specify either the IP permissions or the description."
      },
      "SecurityGroupRuleDescription": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/SecurityGroupRuleDescription"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        },
        "description": "The description for the egress security group rules. You must specify either the description or the IP permissions."
      },
      "Action": {
        "type": "string",
        "enum": [
          "UpdateSecurityGroupRuleDescriptionsEgress"
        ]
      },
      "Version": {
        "type": "string",
        "enum": [
          "2016-11-15"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      }
    },
    "required": [
      "Action",
      "Version"
    ],
    "$defs": {
      "IpPermission": {
        "type": "object",
        "properties": {
          "FromPort": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "xml": {
                  "name": "fromPort"
                },
                "description": "If the protocol is TCP or UDP, this is the start of the port range. If the protocol is ICMP or ICMPv6, this is the type number. A value of -1 indicates all ICMP/ICMPv6 types. If you specify all ICMP/ICMPv6 types, you must specify all ICMP/ICMPv6 codes."
              }
            ]
          },
          "IpProtocol": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "ipProtocol"
                },
                "description": "<p>The IP protocol name (<code>tcp</code>, <code>udp</code>, <code>icmp</code>, <code>icmpv6</code>) or number (see <a href=\"http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml\">Protocol Numbers</a>).</p> <p>Use <code>-1</code> to specify all protocols. When authorizing security group rules, specifying <code>-1</code> or a protocol number other than <code>tcp</code>, <code>udp</code>, <code>icmp</code>, or <code>icmpv6</code> allows traffic on all ports, regardless of any port range you specify. For <code>tcp</code>, <code>udp</code>, and <code>icmp</code>, you must specify a port range. For <code>icmpv6</code>, the port range is optional; if you omit the port range, traffic for all types and codes is allowed.</p>"
              }
            ]
          },
          "IpRanges": {
            "allOf": [
              {
                "$ref": "#/$defs/IpRangeList"
              },
              {
                "xml": {
                  "name": "ipRanges"
                },
                "description": "The IPv4 ranges."
              }
            ]
          },
          "Ipv6Ranges": {
            "allOf": [
              {
                "$ref": "#/$defs/Ipv6RangeList"
              },
              {
                "xml": {
                  "name": "ipv6Ranges"
                },
                "description": "The IPv6 ranges."
              }
            ]
          },
          "PrefixListIds": {
            "allOf": [
              {
                "$ref": "#/$defs/PrefixListIdList"
              },
              {
                "xml": {
                  "name": "prefixListIds"
                },
                "description": "The prefix list IDs."
              }
            ]
          },
          "ToPort": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "xml": {
                  "name": "toPort"
                },
                "description": "If the protocol is TCP or UDP, this is the end of the port range. If the protocol is ICMP or ICMPv6, this is the code. A value of -1 indicates all ICMP/ICMPv6 codes. If you specify all ICMP/ICMPv6 types, you must specify all ICMP/ICMPv6 codes."
              }
            ]
          },
          "UserIdGroupPairs": {
            "allOf": [
              {
                "$ref": "#/$defs/UserIdGroupPairList"
              },
              {
                "xml": {
                  "name": "groups"
                },
                "description": "The security group and Amazon Web Services account ID pairs."
              }
            ]
          }
        },
        "description": "Describes a set of permissions for a security group rule."
      },
      "Integer": {
        "type": "integer"
      },
      "String": {
        "type": "string"
      },
      "IpRangeList": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/IpRange"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        }
      },
      "IpRange": {
        "type": "object",
        "properties": {
          "CidrIp": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "cidrIp"
                },
                "description": "The IPv4 CIDR range. You can either specify a CIDR range or a source security group, not both. To specify a single IPv4 address, use the /32 prefix length."
              }
            ]
          },
          "Description": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "description"
                },
                "description": "<p>A description for the security group rule that references this IPv4 address range.</p> <p>Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&amp;;{}!$*</p>"
              }
            ]
          }
        },
        "description": "Describes an IPv4 range."
      },
      "Ipv6RangeList": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/Ipv6Range"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        }
      },
      "Ipv6Range": {
        "type": "object",
        "properties": {
          "CidrIpv6": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "cidrIpv6"
                },
                "description": "The IPv6 CIDR range. You can either specify a CIDR range or a source security group, not both. To specify a single IPv6 address, use the /128 prefix length."
              }
            ]
          },
          "Description": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "description"
                },
                "description": "<p>A description for the security group rule that references this IPv6 address range.</p> <p>Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&amp;;{}!$*</p>"
              }
            ]
          }
        },
        "description": "Describes an IPv6 range."
      },
      "PrefixListIdList": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/PrefixListId"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        }
      },
      "PrefixListId": {
        "type": "object",
        "properties": {
          "Description": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "description"
                },
                "description": "<p>A description for the security group rule that references this prefix list ID.</p> <p>Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*</p>"
              }
            ]
          },
          "PrefixListId": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "prefixListId"
                },
                "description": "The ID of the prefix."
              }
            ]
          }
        },
        "description": "Describes a prefix list ID."
      },
      "UserIdGroupPairList": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/UserIdGroupPair"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        }
      },
      "UserIdGroupPair": {
        "type": "object",
        "properties": {
          "Description": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "description"
                },
                "description": "<p>A description for the security group rule that references this user ID group pair.</p> <p>Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*</p>"
              }
            ]
          },
          "GroupId": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "groupId"
                },
                "description": "The ID of the security group."
              }
            ]
          },
          "GroupName": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "groupName"
                },
                "description": "<p>[Default VPC] The name of the security group. For a security group in a nondefault VPC, use the security group ID. </p> <p>For a referenced security group in another VPC, this value is not returned if the referenced security group is deleted.</p>"
              }
            ]
          },
          "PeeringStatus": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "peeringStatus"
                },
                "description": "The status of a VPC peering connection, if applicable."
              }
            ]
          },
          "UserId": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "userId"
                },
                "description": "<p>The ID of an Amazon Web Services account.</p> <p>For a referenced security group in another VPC, the account ID of the referenced security group is returned in the response. If the referenced security group is deleted, this value is not returned.</p>"
              }
            ]
          },
          "VpcId": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "vpcId"
                },
                "description": "The ID of the VPC for the referenced security group, if applicable."
              }
            ]
          },
          "VpcPeeringConnectionId": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "vpcPeeringConnectionId"
                },
                "description": "The ID of the VPC peering connection, if applicable."
              }
            ]
          }
        },
        "description": "Describes a security group and Amazon Web Services account ID pair."
      },
      "SecurityGroupRuleDescription": {
        "type": "object",
        "properties": {
          "SecurityGroupRuleId": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The ID of the security group rule."
              }
            ]
          },
          "Description": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The description of the security group rule."
              }
            ]
          }
        },
        "description": "<p>Describes the description of a security group rule.</p> <p>You can use this when you want to update the security group rule description for either an inbound or outbound rule.</p>"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "http://ec2.us-east-1.amazonaws.com/#Action=UpdateSecurityGroupRuleDescriptionsEgress{?DryRun,GroupId,GroupName,IpPermissions,SecurityGroupRuleDescription,Action,Version}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Return**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
