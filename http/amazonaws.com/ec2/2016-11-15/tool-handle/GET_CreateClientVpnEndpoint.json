{
  "name": "GET_CreateClientVpnEndpoint",
  "description": "Creates a Client VPN endpoint. A Client VPN endpoint is the resource you create and configure to enable and manage client VPN sessions. It is the destination endpoint at which all client VPN sessions are terminated.",
  "parameters": {
    "type": "object",
    "properties": {
      "ClientCidrBlock": {
        "type": "string",
        "description": "The IPv4 address range, in CIDR notation, from which to assign client IP addresses. The address range cannot overlap with the local CIDR of the VPC in which the associated subnet is located, or the routes that you add manually. The address range cannot be changed after the Client VPN endpoint has been created. Client CIDR range must have a size of at least /22 and must not be greater than /12."
      },
      "ServerCertificateArn": {
        "type": "string",
        "description": "The ARN of the server certificate. For more information, see the <a href=\"https://docs.aws.amazon.com/acm/latest/userguide/\">Certificate Manager User Guide</a>."
      },
      "Authentication": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ClientVpnAuthenticationRequest"
        },
        "description": "Information about the authentication method to be used to authenticate clients."
      },
      "ConnectionLogOptions": {
        "type": "object",
        "properties": {
          "Enabled": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Indicates whether connection logging is enabled."
              }
            ]
          },
          "CloudwatchLogGroup": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The name of the CloudWatch Logs log group. Required if connection logging is enabled."
              }
            ]
          },
          "CloudwatchLogStream": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The name of the CloudWatch Logs log stream to which the connection data is published."
              }
            ]
          }
        },
        "description": "<p>Information about the client connection logging options.</p> <p>If you enable client connection logging, data about client connections is sent to a Cloudwatch Logs log stream. The following information is logged:</p> <ul> <li> <p>Client connection requests</p> </li> <li> <p>Client connection results (successful and unsuccessful)</p> </li> <li> <p>Reasons for unsuccessful client connection requests</p> </li> <li> <p>Client connection termination time</p> </li> </ul>"
      },
      "DnsServers": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/String"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        },
        "description": "Information about the DNS servers to be used for DNS resolution. A Client VPN endpoint can have up to two DNS servers. If no DNS server is specified, the DNS address configured on the device is used for the DNS server."
      },
      "TransportProtocol": {
        "type": "string",
        "enum": [
          "tcp",
          "udp"
        ],
        "description": "<p>The transport protocol to be used by the VPN session.</p> <p>Default value: <code>udp</code> </p>"
      },
      "VpnPort": {
        "type": "integer",
        "description": "<p>The port number to assign to the Client VPN endpoint for TCP and UDP traffic.</p> <p>Valid Values: <code>443</code> | <code>1194</code> </p> <p>Default Value: <code>443</code> </p>"
      },
      "Description": {
        "type": "string",
        "description": "A brief description of the Client VPN endpoint."
      },
      "SplitTunnel": {
        "type": "boolean",
        "description": "<p>Indicates whether split-tunnel is enabled on the Client VPN endpoint.</p> <p>By default, split-tunnel on a VPN endpoint is disabled.</p> <p>For information about split-tunnel VPN endpoints, see <a href=\"https://docs.aws.amazon.com/vpn/latest/clientvpn-admin/split-tunnel-vpn.html\">Split-tunnel Client VPN endpoint</a> in the <i>Client VPN Administrator Guide</i>.</p>"
      },
      "DryRun": {
        "type": "boolean",
        "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
      },
      "ClientToken": {
        "type": "string",
        "description": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">How to ensure idempotency</a>."
      },
      "TagSpecification": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/TagSpecification"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        },
        "description": "The tags to apply to the Client VPN endpoint during creation."
      },
      "SecurityGroupId": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/SecurityGroupId"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        },
        "description": "The IDs of one or more security groups to apply to the target network. You must also specify the ID of the VPC that contains the security groups."
      },
      "VpcId": {
        "type": "string",
        "description": "The ID of the VPC to associate with the Client VPN endpoint. If no security group IDs are specified in the request, the default security group for the VPC is applied."
      },
      "SelfServicePortal": {
        "type": "string",
        "enum": [
          "enabled",
          "disabled"
        ],
        "description": "<p>Specify whether to enable the self-service portal for the Client VPN endpoint.</p> <p>Default Value: <code>enabled</code> </p>"
      },
      "ClientConnectOptions": {
        "type": "object",
        "properties": {
          "Enabled": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Indicates whether client connect options are enabled. The default is <code>false</code> (not enabled)."
              }
            ]
          },
          "LambdaFunctionArn": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the Lambda function used for connection authorization."
              }
            ]
          }
        },
        "description": "The options for managing connection authorization for new client connections."
      },
      "SessionTimeoutHours": {
        "type": "integer",
        "description": "<p>The maximum VPN session duration time in hours.</p> <p>Valid values: <code>8 | 10 | 12 | 24</code> </p> <p>Default value: <code>24</code> </p>"
      },
      "ClientLoginBannerOptions": {
        "type": "object",
        "properties": {
          "Enabled": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "<p>Enable or disable a customizable text banner that will be displayed on Amazon Web Services provided clients when a VPN session is established.</p> <p>Valid values: <code>true | false</code> </p> <p>Default value: <code>false</code> </p>"
              }
            ]
          },
          "BannerText": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "Customizable text that will be displayed in a banner on Amazon Web Services provided clients when a VPN session is established. UTF-8 encoded characters only. Maximum of 1400 characters."
              }
            ]
          }
        },
        "description": "Options for enabling a customizable text banner that will be displayed on Amazon Web Services provided clients when a VPN session is established."
      },
      "Action": {
        "type": "string",
        "enum": [
          "CreateClientVpnEndpoint"
        ]
      },
      "Version": {
        "type": "string",
        "enum": [
          "2016-11-15"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      }
    },
    "required": [
      "ClientCidrBlock",
      "ServerCertificateArn",
      "Authentication",
      "ConnectionLogOptions",
      "Action",
      "Version"
    ],
    "$defs": {
      "ClientVpnAuthenticationRequest": {
        "type": "object",
        "properties": {
          "Type": {
            "allOf": [
              {
                "$ref": "#/$defs/ClientVpnAuthenticationType"
              },
              {
                "description": "The type of client authentication to be used."
              }
            ]
          },
          "ActiveDirectory": {
            "allOf": [
              {
                "$ref": "#/$defs/DirectoryServiceAuthenticationRequest"
              },
              {
                "description": "Information about the Active Directory to be used, if applicable. You must provide this information if <b>Type</b> is <code>directory-service-authentication</code>."
              }
            ]
          },
          "MutualAuthentication": {
            "allOf": [
              {
                "$ref": "#/$defs/CertificateAuthenticationRequest"
              },
              {
                "description": "Information about the authentication certificates to be used, if applicable. You must provide this information if <b>Type</b> is <code>certificate-authentication</code>."
              }
            ]
          },
          "FederatedAuthentication": {
            "allOf": [
              {
                "$ref": "#/$defs/FederatedAuthenticationRequest"
              },
              {
                "description": "Information about the IAM SAML identity provider to be used, if applicable. You must provide this information if <b>Type</b> is <code>federated-authentication</code>."
              }
            ]
          }
        },
        "description": "Describes the authentication method to be used by a Client VPN endpoint. For more information, see <a href=\"https://docs.aws.amazon.com/vpn/latest/clientvpn-admin/authentication-authrization.html#client-authentication\">Authentication</a> in the <i>Client VPN Administrator Guide</i>."
      },
      "ClientVpnAuthenticationType": {
        "type": "string",
        "enum": [
          "certificate-authentication",
          "directory-service-authentication",
          "federated-authentication"
        ]
      },
      "DirectoryServiceAuthenticationRequest": {
        "type": "object",
        "properties": {
          "DirectoryId": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The ID of the Active Directory to be used for authentication."
              }
            ]
          }
        },
        "description": "Describes the Active Directory to be used for client authentication."
      },
      "String": {
        "type": "string"
      },
      "CertificateAuthenticationRequest": {
        "type": "object",
        "properties": {
          "ClientRootCertificateChainArn": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The ARN of the client certificate. The certificate must be signed by a certificate authority (CA) and it must be provisioned in Certificate Manager (ACM)."
              }
            ]
          }
        },
        "description": "Information about the client certificate to be used for authentication."
      },
      "FederatedAuthenticationRequest": {
        "type": "object",
        "properties": {
          "SAMLProviderArn": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the IAM SAML identity provider."
              }
            ]
          },
          "SelfServiceSAMLProviderArn": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the IAM SAML identity provider for the self-service portal."
              }
            ]
          }
        },
        "description": "The IAM SAML identity provider used for federated authentication."
      },
      "Boolean": {
        "type": "boolean"
      },
      "TagSpecification": {
        "type": "object",
        "properties": {
          "ResourceType": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceType"
              },
              {
                "xml": {
                  "name": "resourceType"
                },
                "description": "The type of resource to tag on creation."
              }
            ]
          },
          "Tags": {
            "allOf": [
              {
                "$ref": "#/$defs/TagList"
              },
              {
                "xml": {
                  "name": "Tag"
                },
                "description": "The tags to apply to the resource."
              }
            ]
          }
        },
        "description": "<p>The tags to apply to a resource when the resource is being created. When you specify a tag, you must specify the resource type to tag, otherwise the request will fail.</p> <note> <p>The <code>Valid Values</code> lists all the resource types that can be tagged. However, the action you're using might not support tagging all of these resource types. If you try to tag a resource type that is unsupported for the action you're using, you'll get an error.</p> </note>"
      },
      "ResourceType": {
        "type": "string",
        "enum": [
          "capacity-reservation",
          "client-vpn-endpoint",
          "customer-gateway",
          "carrier-gateway",
          "coip-pool",
          "dedicated-host",
          "dhcp-options",
          "egress-only-internet-gateway",
          "elastic-ip",
          "elastic-gpu",
          "export-image-task",
          "export-instance-task",
          "fleet",
          "fpga-image",
          "host-reservation",
          "image",
          "import-image-task",
          "import-snapshot-task",
          "instance",
          "instance-event-window",
          "internet-gateway",
          "ipam",
          "ipam-pool",
          "ipam-scope",
          "ipv4pool-ec2",
          "ipv6pool-ec2",
          "key-pair",
          "launch-template",
          "local-gateway",
          "local-gateway-route-table",
          "local-gateway-virtual-interface",
          "local-gateway-virtual-interface-group",
          "local-gateway-route-table-vpc-association",
          "local-gateway-route-table-virtual-interface-group-association",
          "natgateway",
          "network-acl",
          "network-interface",
          "network-insights-analysis",
          "network-insights-path",
          "network-insights-access-scope",
          "network-insights-access-scope-analysis",
          "placement-group",
          "prefix-list",
          "replace-root-volume-task",
          "reserved-instances",
          "route-table",
          "security-group",
          "security-group-rule",
          "snapshot",
          "spot-fleet-request",
          "spot-instances-request",
          "subnet",
          "subnet-cidr-reservation",
          "traffic-mirror-filter",
          "traffic-mirror-session",
          "traffic-mirror-target",
          "transit-gateway",
          "transit-gateway-attachment",
          "transit-gateway-connect-peer",
          "transit-gateway-multicast-domain",
          "transit-gateway-policy-table",
          "transit-gateway-route-table",
          "transit-gateway-route-table-announcement",
          "volume",
          "vpc",
          "vpc-endpoint",
          "vpc-endpoint-connection",
          "vpc-endpoint-service",
          "vpc-endpoint-service-permission",
          "vpc-peering-connection",
          "vpn-connection",
          "vpn-gateway",
          "vpc-flow-log",
          "capacity-reservation-fleet",
          "traffic-mirror-filter-rule",
          "vpc-endpoint-connection-device-type",
          "verified-access-instance",
          "verified-access-group",
          "verified-access-endpoint",
          "verified-access-policy",
          "verified-access-trust-provider",
          "vpn-connection-device-type",
          "vpc-block-public-access-exclusion",
          "ipam-resource-discovery",
          "ipam-resource-discovery-association",
          "instance-connect-endpoint"
        ]
      },
      "TagList": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/Tag"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        }
      },
      "Tag": {
        "type": "object",
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "key"
                },
                "description": "<p>The key of the tag.</p> <p>Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with <code>aws:</code>.</p>"
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "value"
                },
                "description": "<p>The value of the tag.</p> <p>Constraints: Tag values are case-sensitive and accept a maximum of 256 Unicode characters.</p>"
              }
            ]
          }
        },
        "description": "Describes a tag."
      },
      "SecurityGroupId": {
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "http://ec2.us-east-1.amazonaws.com/#Action=CreateClientVpnEndpoint{?ClientCidrBlock,ServerCertificateArn,Authentication,ConnectionLogOptions,DnsServers,TransportProtocol,VpnPort,Description,SplitTunnel,DryRun,ClientToken,TagSpecification,SecurityGroupId,VpcId,SelfServicePortal,ClientConnectOptions,SessionTimeoutHours,ClientLoginBannerOptions,Action,Version}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**ClientVpnEndpointId**",
            "**Status**",
            "**DnsName**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
