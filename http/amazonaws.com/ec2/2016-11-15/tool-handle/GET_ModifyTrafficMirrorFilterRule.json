{
  "name": "GET_ModifyTrafficMirrorFilterRule",
  "description": "<p>Modifies the specified Traffic Mirror rule.</p> <p> <code>DestinationCidrBlock</code> and <code>SourceCidrBlock</code> must both be an IPv4 range or an IPv6 range.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "TrafficMirrorFilterRuleId": {
        "type": "string",
        "description": "The ID of the Traffic Mirror rule."
      },
      "TrafficDirection": {
        "type": "string",
        "enum": [
          "ingress",
          "egress"
        ],
        "description": "The type of traffic to assign to the rule."
      },
      "RuleNumber": {
        "type": "integer",
        "description": "The number of the Traffic Mirror rule. This number must be unique for each Traffic Mirror rule in a given direction. The rules are processed in ascending order by rule number."
      },
      "RuleAction": {
        "type": "string",
        "enum": [
          "accept",
          "reject"
        ],
        "description": "The action to assign to the rule."
      },
      "DestinationPortRange": {
        "type": "object",
        "properties": {
          "FromPort": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "The first port in the Traffic Mirror port range. This applies to the TCP and UDP protocols."
              }
            ]
          },
          "ToPort": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "The last port in the Traffic Mirror port range. This applies to the TCP and UDP protocols."
              }
            ]
          }
        },
        "description": "The destination ports that are associated with the Traffic Mirror rule."
      },
      "SourcePortRange": {
        "type": "object",
        "properties": {
          "FromPort": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "The first port in the Traffic Mirror port range. This applies to the TCP and UDP protocols."
              }
            ]
          },
          "ToPort": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "The last port in the Traffic Mirror port range. This applies to the TCP and UDP protocols."
              }
            ]
          }
        },
        "description": "The port range to assign to the Traffic Mirror rule."
      },
      "Protocol": {
        "type": "integer",
        "description": "The protocol, for example TCP, to assign to the Traffic Mirror rule."
      },
      "DestinationCidrBlock": {
        "type": "string",
        "description": "The destination CIDR block to assign to the Traffic Mirror rule."
      },
      "SourceCidrBlock": {
        "type": "string",
        "description": "The source CIDR block to assign to the Traffic Mirror rule."
      },
      "Description": {
        "type": "string",
        "description": "The description to assign to the Traffic Mirror rule."
      },
      "RemoveField": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/TrafficMirrorFilterRuleField"
        },
        "description": "<p>The properties that you want to remove from the Traffic Mirror filter rule.</p> <p>When you remove a property from a Traffic Mirror filter rule, the property is set to the default.</p>"
      },
      "DryRun": {
        "type": "boolean",
        "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
      },
      "Action": {
        "type": "string",
        "enum": [
          "ModifyTrafficMirrorFilterRule"
        ]
      },
      "Version": {
        "type": "string",
        "enum": [
          "2016-11-15"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      }
    },
    "required": [
      "TrafficMirrorFilterRuleId",
      "Action",
      "Version"
    ],
    "$defs": {
      "Integer": {
        "type": "integer"
      },
      "TrafficMirrorFilterRuleField": {
        "type": "string",
        "enum": [
          "destination-port-range",
          "source-port-range",
          "protocol",
          "description"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "http://ec2.us-east-1.amazonaws.com/#Action=ModifyTrafficMirrorFilterRule{?TrafficMirrorFilterRuleId,TrafficDirection,RuleNumber,RuleAction,DestinationPortRange,SourcePortRange,Protocol,DestinationCidrBlock,SourceCidrBlock,Description,RemoveField,DryRun,Action,Version}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**TrafficMirrorFilterRule**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
