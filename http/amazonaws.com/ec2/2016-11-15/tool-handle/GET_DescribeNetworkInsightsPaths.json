{
  "name": "GET_DescribeNetworkInsightsPaths",
  "description": "Describes one or more of your paths.",
  "parameters": {
    "type": "object",
    "properties": {
      "NetworkInsightsPathId": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/NetworkInsightsPathId"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        },
        "description": "The IDs of the paths."
      },
      "Filter": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/Filter"
            },
            {
              "xml": {
                "name": "Filter"
              }
            }
          ]
        },
        "description": "<p>The filters. The following are the possible values:</p> <ul> <li> <p>destination - The ID of the resource.</p> </li> <li> <p>filter-at-source.source-address - The source IPv4 address at the source.</p> </li> <li> <p>filter-at-source.source-port-range - The source port range at the source.</p> </li> <li> <p>filter-at-source.destination-address - The destination IPv4 address at the source.</p> </li> <li> <p>filter-at-source.destination-port-range - The destination port range at the source.</p> </li> <li> <p>filter-at-destination.source-address - The source IPv4 address at the destination.</p> </li> <li> <p>filter-at-destination.source-port-range - The source port range at the destination.</p> </li> <li> <p>filter-at-destination.destination-address - The destination IPv4 address at the destination.</p> </li> <li> <p>filter-at-destination.destination-port-range - The destination port range at the destination.</p> </li> <li> <p>protocol - The protocol.</p> </li> <li> <p>source - The ID of the resource.</p> </li> </ul>"
      },
      "MaxResults": {
        "type": "integer",
        "minimum": 1,
        "maximum": 100,
        "description": "The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value."
      },
      "DryRun": {
        "type": "boolean",
        "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
      },
      "NextToken": {
        "type": "string",
        "description": "The token for the next page of results."
      },
      "Action": {
        "type": "string",
        "enum": [
          "DescribeNetworkInsightsPaths"
        ]
      },
      "Version": {
        "type": "string",
        "enum": [
          "2016-11-15"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      }
    },
    "required": [
      "Action",
      "Version"
    ],
    "$defs": {
      "NetworkInsightsPathId": {
        "type": "string"
      },
      "Filter": {
        "type": "object",
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The name of the filter. Filter names are case-sensitive."
              }
            ]
          },
          "Values": {
            "allOf": [
              {
                "$ref": "#/$defs/ValueStringList"
              },
              {
                "xml": {
                  "name": "Value"
                },
                "description": "The filter values. Filter values are case-sensitive. If you specify multiple values for a filter, the values are joined with an <code>OR</code>, and the request returns all results that match any of the specified values."
              }
            ]
          }
        },
        "description": "<p>A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs.</p> <p>If you specify multiple filters, the filters are joined with an <code>AND</code>, and the request returns only results that match all of the specified filters.</p>"
      },
      "String": {
        "type": "string"
      },
      "ValueStringList": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/String"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        }
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "http://ec2.us-east-1.amazonaws.com/#Action=DescribeNetworkInsightsPaths{?NetworkInsightsPathId,Filter,MaxResults,DryRun,NextToken,Action,Version}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**NetworkInsightsPaths**",
            "**NextToken**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
