{
  "name": "GET_CreateNetworkInsightsAccessScope",
  "description": "<p>Creates a Network Access Scope.</p> <p>Amazon Web Services Network Access Analyzer enables cloud networking and cloud operations teams to verify that their networks on Amazon Web Services conform to their network security and governance objectives. For more information, see the <a href=\"https://docs.aws.amazon.com/vpc/latest/network-access-analyzer/\">Amazon Web Services Network Access Analyzer Guide</a>.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "MatchPath": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/AccessScopePathRequest"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        },
        "description": "The paths to match."
      },
      "ExcludePath": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/AccessScopePathRequest"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        },
        "description": "The paths to exclude."
      },
      "ClientToken": {
        "type": "string",
        "description": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">How to ensure idempotency</a>."
      },
      "TagSpecification": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/TagSpecification"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        },
        "description": "The tags to apply."
      },
      "DryRun": {
        "type": "boolean",
        "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
      },
      "Action": {
        "type": "string",
        "enum": [
          "CreateNetworkInsightsAccessScope"
        ]
      },
      "Version": {
        "type": "string",
        "enum": [
          "2016-11-15"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      }
    },
    "required": [
      "ClientToken",
      "Action",
      "Version"
    ],
    "$defs": {
      "AccessScopePathRequest": {
        "type": "object",
        "properties": {
          "Source": {
            "allOf": [
              {
                "$ref": "#/$defs/PathStatementRequest"
              },
              {
                "description": "The source."
              }
            ]
          },
          "Destination": {
            "allOf": [
              {
                "$ref": "#/$defs/PathStatementRequest"
              },
              {
                "description": "The destination."
              }
            ]
          },
          "ThroughResources": {
            "allOf": [
              {
                "$ref": "#/$defs/ThroughResourcesStatementRequestList"
              },
              {
                "xml": {
                  "name": "ThroughResource"
                },
                "description": "The through resources."
              }
            ]
          }
        },
        "description": "Describes a path."
      },
      "PathStatementRequest": {
        "type": "object",
        "properties": {
          "PacketHeaderStatement": {
            "allOf": [
              {
                "$ref": "#/$defs/PacketHeaderStatementRequest"
              },
              {
                "description": "The packet header statement."
              }
            ]
          },
          "ResourceStatement": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceStatementRequest"
              },
              {
                "description": "The resource statement."
              }
            ]
          }
        },
        "description": "Describes a path statement."
      },
      "PacketHeaderStatementRequest": {
        "type": "object",
        "properties": {
          "SourceAddresses": {
            "allOf": [
              {
                "$ref": "#/$defs/ValueStringList"
              },
              {
                "xml": {
                  "name": "SourceAddress"
                },
                "description": "The source addresses."
              }
            ]
          },
          "DestinationAddresses": {
            "allOf": [
              {
                "$ref": "#/$defs/ValueStringList"
              },
              {
                "xml": {
                  "name": "DestinationAddress"
                },
                "description": "The destination addresses."
              }
            ]
          },
          "SourcePorts": {
            "allOf": [
              {
                "$ref": "#/$defs/ValueStringList"
              },
              {
                "xml": {
                  "name": "SourcePort"
                },
                "description": "The source ports."
              }
            ]
          },
          "DestinationPorts": {
            "allOf": [
              {
                "$ref": "#/$defs/ValueStringList"
              },
              {
                "xml": {
                  "name": "DestinationPort"
                },
                "description": "The destination ports."
              }
            ]
          },
          "SourcePrefixLists": {
            "allOf": [
              {
                "$ref": "#/$defs/ValueStringList"
              },
              {
                "xml": {
                  "name": "SourcePrefixList"
                },
                "description": "The source prefix lists."
              }
            ]
          },
          "DestinationPrefixLists": {
            "allOf": [
              {
                "$ref": "#/$defs/ValueStringList"
              },
              {
                "xml": {
                  "name": "DestinationPrefixList"
                },
                "description": "The destination prefix lists."
              }
            ]
          },
          "Protocols": {
            "allOf": [
              {
                "$ref": "#/$defs/ProtocolList"
              },
              {
                "xml": {
                  "name": "Protocol"
                },
                "description": "The protocols."
              }
            ]
          }
        },
        "description": "Describes a packet header statement."
      },
      "ValueStringList": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/String"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        }
      },
      "String": {
        "type": "string"
      },
      "ProtocolList": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/Protocol"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        }
      },
      "Protocol": {
        "type": "string",
        "enum": [
          "tcp",
          "udp"
        ]
      },
      "ResourceStatementRequest": {
        "type": "object",
        "properties": {
          "Resources": {
            "allOf": [
              {
                "$ref": "#/$defs/ValueStringList"
              },
              {
                "xml": {
                  "name": "Resource"
                },
                "description": "The resources."
              }
            ]
          },
          "ResourceTypes": {
            "allOf": [
              {
                "$ref": "#/$defs/ValueStringList"
              },
              {
                "xml": {
                  "name": "ResourceType"
                },
                "description": "The resource types."
              }
            ]
          }
        },
        "description": "Describes a resource statement."
      },
      "ThroughResourcesStatementRequestList": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/ThroughResourcesStatementRequest"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        }
      },
      "ThroughResourcesStatementRequest": {
        "type": "object",
        "properties": {
          "ResourceStatement": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceStatementRequest"
              },
              {
                "description": "The resource statement."
              }
            ]
          }
        },
        "description": "Describes a through resource statement."
      },
      "TagSpecification": {
        "type": "object",
        "properties": {
          "ResourceType": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceType"
              },
              {
                "xml": {
                  "name": "resourceType"
                },
                "description": "The type of resource to tag on creation."
              }
            ]
          },
          "Tags": {
            "allOf": [
              {
                "$ref": "#/$defs/TagList"
              },
              {
                "xml": {
                  "name": "Tag"
                },
                "description": "The tags to apply to the resource."
              }
            ]
          }
        },
        "description": "<p>The tags to apply to a resource when the resource is being created. When you specify a tag, you must specify the resource type to tag, otherwise the request will fail.</p> <note> <p>The <code>Valid Values</code> lists all the resource types that can be tagged. However, the action you're using might not support tagging all of these resource types. If you try to tag a resource type that is unsupported for the action you're using, you'll get an error.</p> </note>"
      },
      "ResourceType": {
        "type": "string",
        "enum": [
          "capacity-reservation",
          "client-vpn-endpoint",
          "customer-gateway",
          "carrier-gateway",
          "coip-pool",
          "dedicated-host",
          "dhcp-options",
          "egress-only-internet-gateway",
          "elastic-ip",
          "elastic-gpu",
          "export-image-task",
          "export-instance-task",
          "fleet",
          "fpga-image",
          "host-reservation",
          "image",
          "import-image-task",
          "import-snapshot-task",
          "instance",
          "instance-event-window",
          "internet-gateway",
          "ipam",
          "ipam-pool",
          "ipam-scope",
          "ipv4pool-ec2",
          "ipv6pool-ec2",
          "key-pair",
          "launch-template",
          "local-gateway",
          "local-gateway-route-table",
          "local-gateway-virtual-interface",
          "local-gateway-virtual-interface-group",
          "local-gateway-route-table-vpc-association",
          "local-gateway-route-table-virtual-interface-group-association",
          "natgateway",
          "network-acl",
          "network-interface",
          "network-insights-analysis",
          "network-insights-path",
          "network-insights-access-scope",
          "network-insights-access-scope-analysis",
          "placement-group",
          "prefix-list",
          "replace-root-volume-task",
          "reserved-instances",
          "route-table",
          "security-group",
          "security-group-rule",
          "snapshot",
          "spot-fleet-request",
          "spot-instances-request",
          "subnet",
          "subnet-cidr-reservation",
          "traffic-mirror-filter",
          "traffic-mirror-session",
          "traffic-mirror-target",
          "transit-gateway",
          "transit-gateway-attachment",
          "transit-gateway-connect-peer",
          "transit-gateway-multicast-domain",
          "transit-gateway-policy-table",
          "transit-gateway-route-table",
          "transit-gateway-route-table-announcement",
          "volume",
          "vpc",
          "vpc-endpoint",
          "vpc-endpoint-connection",
          "vpc-endpoint-service",
          "vpc-endpoint-service-permission",
          "vpc-peering-connection",
          "vpn-connection",
          "vpn-gateway",
          "vpc-flow-log",
          "capacity-reservation-fleet",
          "traffic-mirror-filter-rule",
          "vpc-endpoint-connection-device-type",
          "verified-access-instance",
          "verified-access-group",
          "verified-access-endpoint",
          "verified-access-policy",
          "verified-access-trust-provider",
          "vpn-connection-device-type",
          "vpc-block-public-access-exclusion",
          "ipam-resource-discovery",
          "ipam-resource-discovery-association",
          "instance-connect-endpoint"
        ]
      },
      "TagList": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/$defs/Tag"
            },
            {
              "xml": {
                "name": "item"
              }
            }
          ]
        }
      },
      "Tag": {
        "type": "object",
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "key"
                },
                "description": "<p>The key of the tag.</p> <p>Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with <code>aws:</code>.</p>"
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "xml": {
                  "name": "value"
                },
                "description": "<p>The value of the tag.</p> <p>Constraints: Tag values are case-sensitive and accept a maximum of 256 Unicode characters.</p>"
              }
            ]
          }
        },
        "description": "Describes a tag."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "http://ec2.us-east-1.amazonaws.com/#Action=CreateNetworkInsightsAccessScope{?MatchPath,ExcludePath,ClientToken,TagSpecification,DryRun,Action,Version}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**NetworkInsightsAccessScope**",
            "**NetworkInsightsAccessScopeContent**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
