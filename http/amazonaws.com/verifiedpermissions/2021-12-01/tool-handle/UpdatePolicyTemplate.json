{
  "name": "UpdatePolicyTemplate",
  "description": "<p>Updates the specified policy template. You can update only the description and the some elements of the <a href=\"https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_UpdatePolicyTemplate.html#amazonverifiedpermissions-UpdatePolicyTemplate-request-policyBody\">policyBody</a>. </p> <important> <p>Changes you make to the policy template content are immediately reflected in authorization decisions that involve all template-linked policies instantiated from this template.</p> </important>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "VerifiedPermissions.UpdatePolicyTemplate"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/UpdatePolicyTemplateInput"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "UpdatePolicyTemplateInput": {
        "type": "object",
        "required": [
          "policyStoreId",
          "policyTemplateId",
          "statement"
        ],
        "title": "UpdatePolicyTemplateInput",
        "properties": {
          "policyStoreId": {
            "allOf": [
              {
                "$ref": "#/$defs/PolicyStoreId"
              },
              {
                "description": "Specifies the ID of the policy store that contains the policy template that you want to update."
              }
            ]
          },
          "policyTemplateId": {
            "allOf": [
              {
                "$ref": "#/$defs/PolicyTemplateId"
              },
              {
                "description": "Specifies the ID of the policy template that you want to update."
              }
            ]
          },
          "description": {
            "allOf": [
              {
                "$ref": "#/$defs/PolicyTemplateDescription"
              },
              {
                "description": "Specifies a new description to apply to the policy template."
              }
            ]
          },
          "statement": {
            "allOf": [
              {
                "$ref": "#/$defs/PolicyStatement"
              },
              {
                "description": "<p>Specifies new statement content written in Cedar policy language to replace the current body of the policy template.</p> <p>You can change only the following elements of the policy body:</p> <ul> <li> <p>The <code>action</code> referenced by the policy template.</p> </li> <li> <p>Any conditional clauses, such as <code>when</code> or <code>unless</code> clauses.</p> </li> </ul> <p>You <b>can't</b> change the following elements:</p> <ul> <li> <p>The effect (<code>permit</code> or <code>forbid</code>) of the policy template.</p> </li> <li> <p>The <code>principal</code> referenced by the policy template.</p> </li> <li> <p>The <code>resource</code> referenced by the policy template.</p> </li> </ul>"
              }
            ]
          }
        }
      },
      "PolicyStoreId": {
        "type": "string",
        "pattern": "[a-zA-Z0-9-]*",
        "minLength": 1,
        "maxLength": 200
      },
      "PolicyTemplateId": {
        "type": "string",
        "pattern": "[a-zA-Z0-9-]*",
        "minLength": 1,
        "maxLength": 200
      },
      "PolicyTemplateDescription": {
        "type": "string",
        "minLength": 0,
        "maxLength": 150
      },
      "PolicyStatement": {
        "type": "string",
        "minLength": 1,
        "maxLength": 10000
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://verifiedpermissions.us-east-1.amazonaws.com/#X-Amz-Target=VerifiedPermissions.UpdatePolicyTemplate"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**policyStoreId**",
            "**policyTemplateId**",
            "**createdDate**",
            "**lastUpdatedDate**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
