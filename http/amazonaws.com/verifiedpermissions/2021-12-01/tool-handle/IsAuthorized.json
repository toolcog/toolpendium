{
  "name": "IsAuthorized",
  "description": "Makes an authorization decision about a service request described in the parameters. The information in the parameters can also define additional context that Verified Permissions can include in the evaluation. The request is evaluated against all matching policies in the specified policy store. The result of the decision is either <code>Allow</code> or <code>Deny</code>, along with a list of the policies that resulted in the decision.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "VerifiedPermissions.IsAuthorized"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/IsAuthorizedInput"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "IsAuthorizedInput": {
        "type": "object",
        "required": [
          "policyStoreId"
        ],
        "title": "IsAuthorizedInput",
        "properties": {
          "policyStoreId": {
            "allOf": [
              {
                "$ref": "#/$defs/PolicyStoreId"
              },
              {
                "description": "Specifies the ID of the policy store. Policies in this policy store will be used to make an authorization decision for the input."
              }
            ]
          },
          "principal": {
            "allOf": [
              {
                "$ref": "#/$defs/EntityIdentifier"
              },
              {
                "description": "Specifies the principal for which the authorization decision is to be made."
              }
            ]
          },
          "action": {
            "allOf": [
              {
                "$ref": "#/$defs/ActionIdentifier"
              },
              {
                "description": "Specifies the requested action to be authorized. For example, is the principal authorized to perform this action on the resource?"
              }
            ]
          },
          "resource": {
            "allOf": [
              {
                "$ref": "#/$defs/EntityIdentifier"
              },
              {
                "description": "Specifies the resource for which the authorization decision is to be made."
              }
            ]
          },
          "context": {
            "allOf": [
              {
                "$ref": "#/$defs/ContextDefinition"
              },
              {
                "description": "Specifies additional context that can be used to make more granular authorization decisions."
              }
            ]
          },
          "entities": {
            "allOf": [
              {
                "$ref": "#/$defs/EntitiesDefinition"
              },
              {
                "description": "<p>Specifies the list of resources and principals and their associated attributes that Verified Permissions can examine when evaluating the policies. </p> <note> <p>You can include only principal and resource entities in this parameter; you can't include actions. You must specify actions in the schema.</p> </note>"
              }
            ]
          }
        }
      },
      "PolicyStoreId": {
        "type": "string",
        "pattern": "[a-zA-Z0-9-]*",
        "minLength": 1,
        "maxLength": 200
      },
      "EntityIdentifier": {
        "type": "object",
        "required": [
          "entityType",
          "entityId"
        ],
        "properties": {
          "entityType": {
            "allOf": [
              {
                "$ref": "#/$defs/EntityType"
              },
              {
                "description": "<p>The type of an entity.</p> <p>Example: <code>\"entityType\":\"<i>typeName</i>\"</code> </p>"
              }
            ]
          },
          "entityId": {
            "allOf": [
              {
                "$ref": "#/$defs/EntityId"
              },
              {
                "description": "<p>The identifier of an entity.</p> <p> <code>\"entityId\":\"<i>identifier</i>\"</code> </p>"
              }
            ]
          }
        },
        "description": "<p>Contains the identifier of an entity, including its ID and type.</p> <p>This data type is used as a request parameter for <a href=\"https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_IsAuthorized.html\">IsAuthorized</a> operation, and as a response parameter for the <a href=\"https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_CreatePolicy.html\">CreatePolicy</a>, <a href=\"https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_GetPolicy.html\">GetPolicy</a>, and <a href=\"https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_UpdatePolicy.html\">UpdatePolicy</a> operations.</p> <p>Example: <code>{\"entityId\":\"<i>string</i>\",\"entityType\":\"<i>string</i>\"}</code> </p>"
      },
      "EntityType": {
        "type": "string",
        "pattern": ".*",
        "minLength": 1,
        "maxLength": 200
      },
      "EntityId": {
        "type": "string",
        "pattern": ".*",
        "minLength": 1,
        "maxLength": 200
      },
      "ActionIdentifier": {
        "type": "object",
        "required": [
          "actionType",
          "actionId"
        ],
        "properties": {
          "actionType": {
            "allOf": [
              {
                "$ref": "#/$defs/ActionType"
              },
              {
                "description": "The type of an action."
              }
            ]
          },
          "actionId": {
            "allOf": [
              {
                "$ref": "#/$defs/ActionId"
              },
              {
                "description": "The ID of an action."
              }
            ]
          }
        },
        "description": "<p>Contains information about an action for a request for which an authorization decision is made.</p> <p>This data type is used as an request parameter to the <a href=\"https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_IsAuthorized.html\">IsAuthorized</a> and <a href=\"https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_IsAuthorizedWithToken.html\">IsAuthorizedWithToken</a> operations.</p> <p>Example: <code>{ \"actionId\": \"&lt;action name&gt;\", \"actionType\": \"Action\" }</code> </p>"
      },
      "ActionType": {
        "type": "string",
        "pattern": "Action$|^.+::Action",
        "minLength": 1,
        "maxLength": 200
      },
      "ActionId": {
        "type": "string",
        "pattern": ".*",
        "minLength": 1,
        "maxLength": 200
      },
      "ContextDefinition": {
        "type": "object",
        "properties": {
          "contextMap": {
            "allOf": [
              {
                "$ref": "#/$defs/ContextMap"
              },
              {
                "description": "<p>An list of attributes that are needed to successfully evaluate an authorization request. Each attribute in this array must include a map of a data type and its value.</p> <p>Example: <code>\"Context\":{\"&lt;KeyName1&gt;\":{\"boolean\":true},\"&lt;KeyName2&gt;\":{\"long\":1234}}</code> </p>"
              }
            ]
          }
        },
        "description": "<p>Contains additional details about the context of the request. Verified Permissions evaluates this information in an authorization request as part of the <code>when</code> and <code>unless</code> clauses in a policy.</p> <p>This data type is used as a request parameter for the <a href=\"https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_IsAuthorized.html\">IsAuthorized</a> and <a href=\"https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_IsAuthorizedWithToken.html\">IsAuthorizedWithToken</a> operations.</p> <p>Example: <code>\"context\":{\"Context\":{\"&lt;KeyName1&gt;\":{\"boolean\":true},\"&lt;KeyName2&gt;\":{\"long\":1234}}}</code> </p>"
      },
      "ContextMap": {
        "type": "object",
        "minProperties": 0,
        "additionalProperties": {
          "$ref": "#/$defs/AttributeValue"
        }
      },
      "AttributeValue": {
        "type": "object",
        "properties": {
          "boolean": {
            "allOf": [
              {
                "$ref": "#/$defs/BooleanAttribute"
              },
              {
                "description": "<p>An attribute value of <a href=\"https://docs.cedarpolicy.com/syntax-datatypes.html#boolean\">Boolean</a> type.</p> <p>Example: <code>{\"boolean\": true}</code> </p>"
              }
            ]
          },
          "entityIdentifier": {
            "allOf": [
              {
                "$ref": "#/$defs/EntityIdentifier"
              },
              {
                "description": "<p>An attribute value of type <a href=\"https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_EntityIdentifier.html\">EntityIdentifier</a>.</p> <p>Example: <code>\"entityIdentifier\": { \"entityId\": \"&lt;id&gt;\", \"entityType\": \"&lt;entity type&gt;\"}</code> </p>"
              }
            ]
          },
          "long": {
            "allOf": [
              {
                "$ref": "#/$defs/LongAttribute"
              },
              {
                "description": "<p>An attribute value of <a href=\"https://docs.cedarpolicy.com/syntax-datatypes.html#long\">Long</a> type.</p> <p>Example: <code>{\"long\": 0}</code> </p>"
              }
            ]
          },
          "string": {
            "allOf": [
              {
                "$ref": "#/$defs/StringAttribute"
              },
              {
                "description": "<p>An attribute value of <a href=\"https://docs.cedarpolicy.com/syntax-datatypes.html#string\">String</a> type.</p> <p>Example: <code>{\"string\": \"abc\"}</code> </p>"
              }
            ]
          },
          "set": {
            "allOf": [
              {
                "$ref": "#/$defs/SetAttribute"
              },
              {
                "description": "<p>An attribute value of <a href=\"https://docs.cedarpolicy.com/syntax-datatypes.html#set\">Set</a> type.</p> <p>Example: <code>{\"set\": [ {} ] }</code> </p>"
              }
            ]
          },
          "record": {
            "allOf": [
              {
                "$ref": "#/$defs/RecordAttribute"
              },
              {
                "description": "<p>An attribute value of <a href=\"https://docs.cedarpolicy.com/syntax-datatypes.html#record\">Record</a> type.</p> <p>Example: <code>{\"record\": { \"keyName\": {} } }</code> </p>"
              }
            ]
          }
        },
        "description": "<p>The value of an attribute.</p> <p>Contains information about the runtime context for a request for which an authorization decision is made. </p> <p>This data type is used as a member of the <a href=\"https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_ContextDefinition.html\">ContextDefinition</a> structure which is uses as a request parameter for the <a href=\"https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_IsAuthorized.html\">IsAuthorized</a> and <a href=\"https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_IsAuthorizedWithToken.html\">IsAuthorizedWithToken</a> operations.</p>"
      },
      "BooleanAttribute": {
        "type": "boolean"
      },
      "LongAttribute": {
        "type": "integer"
      },
      "StringAttribute": {
        "type": "string"
      },
      "SetAttribute": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/AttributeValue"
        }
      },
      "RecordAttribute": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/AttributeValue"
        }
      },
      "EntitiesDefinition": {
        "type": "object",
        "properties": {
          "entityList": {
            "allOf": [
              {
                "$ref": "#/$defs/EntityList"
              },
              {
                "description": "An array of entities that are needed to successfully evaluate an authorization request. Each entity in this array must include an identifier for the entity, the attributes of the entity, and a list of any parent entities."
              }
            ]
          }
        },
        "description": "<p>Contains the list of entities to be considered during an authorization request. This includes all principals, resources, and actions required to successfully evaluate the request.</p> <p>This data type is used as a field in the response parameter for the <a href=\"https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_IsAuthorized.html\">IsAuthorized</a> and <a href=\"https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_IsAuthorizedWithToken.html\">IsAuthorizedWithToken</a> operations.</p>"
      },
      "EntityList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/EntityItem"
        },
        "minItems": 0
      },
      "EntityItem": {
        "type": "object",
        "required": [
          "identifier"
        ],
        "properties": {
          "identifier": {
            "allOf": [
              {
                "$ref": "#/$defs/EntityIdentifier"
              },
              {
                "description": "The identifier of the entity."
              }
            ]
          },
          "attributes": {
            "allOf": [
              {
                "$ref": "#/$defs/EntityAttributes"
              },
              {
                "description": "A list of attributes for the entity."
              }
            ]
          },
          "parents": {
            "allOf": [
              {
                "$ref": "#/$defs/ParentList"
              },
              {
                "description": "The parents in the hierarchy that contains the entity."
              }
            ]
          }
        },
        "description": "<p>Contains information about an entity that can be referenced in a Cedar policy.</p> <p>This data type is used as one of the fields in the <a href=\"https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_EntitiesDefinition.html\">EntitiesDefinition</a> structure.</p> <p> <code>{ \"id\": { \"entityType\": \"Photo\", \"entityId\": \"VacationPhoto94.jpg\" }, \"Attributes\": {}, \"Parents\": [ { \"entityType\": \"Album\", \"entityId\": \"alice_folder\" } ] }</code> </p>"
      },
      "EntityAttributes": {
        "type": "object",
        "minProperties": 0,
        "additionalProperties": {
          "$ref": "#/$defs/AttributeValue"
        }
      },
      "ParentList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/EntityIdentifier"
        },
        "minItems": 0,
        "maxItems": 100
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://verifiedpermissions.us-east-1.amazonaws.com/#X-Amz-Target=VerifiedPermissions.IsAuthorized"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**decision**",
            "**determiningPolicies**",
            "**errors**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
