{
  "name": "CreateAnalyzer",
  "description": "Creates an analyzer for your account.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "analyzerName",
          "type"
        ],
        "properties": {
          "analyzerName": {
            "description": "The name of the analyzer to create.",
            "type": "string",
            "pattern": "[A-Za-z][A-Za-z0-9_.-]*",
            "minLength": 1,
            "maxLength": 255
          },
          "type": {
            "description": "The type of analyzer to create. Only ACCOUNT and ORGANIZATION analyzers are supported. You can create only one analyzer per account per Region. You can create up to 5 analyzers per organization per Region.",
            "type": "string",
            "enum": [
              "ACCOUNT",
              "ORGANIZATION"
            ]
          },
          "archiveRules": {
            "description": "Specifies the archive rules to add for the analyzer. Archive rules automatically archive findings that meet the criteria you define for the rule.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/InlineArchiveRule"
            }
          },
          "tags": {
            "description": "The tags to apply to the analyzer.",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/String"
            }
          },
          "clientToken": {
            "description": "A client token.",
            "type": "string"
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "InlineArchiveRule": {
        "type": "object",
        "required": [
          "ruleName",
          "filter"
        ],
        "properties": {
          "ruleName": {
            "allOf": [
              {
                "$ref": "#/$defs/Name"
              },
              {
                "description": "The name of the rule."
              }
            ]
          },
          "filter": {
            "allOf": [
              {
                "$ref": "#/$defs/FilterCriteriaMap"
              },
              {
                "description": "The condition and values for a criterion."
              }
            ]
          }
        },
        "description": "An criterion statement in an archive rule. Each archive rule may have multiple criteria."
      },
      "Name": {
        "type": "string",
        "pattern": "[A-Za-z][A-Za-z0-9_.-]*",
        "minLength": 1,
        "maxLength": 255
      },
      "FilterCriteriaMap": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/Criterion"
        }
      },
      "Criterion": {
        "type": "object",
        "properties": {
          "eq": {
            "allOf": [
              {
                "$ref": "#/$defs/ValueList"
              },
              {
                "description": "An \"equals\" operator to match for the filter used to create the rule."
              }
            ]
          },
          "neq": {
            "allOf": [
              {
                "$ref": "#/$defs/ValueList"
              },
              {
                "description": "A \"not equals\" operator to match for the filter used to create the rule."
              }
            ]
          },
          "contains": {
            "allOf": [
              {
                "$ref": "#/$defs/ValueList"
              },
              {
                "description": "A \"contains\" operator to match for the filter used to create the rule."
              }
            ]
          },
          "exists": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "An \"exists\" operator to match for the filter used to create the rule. "
              }
            ]
          }
        },
        "description": "The criteria to use in the filter that defines the archive rule. For more information on available filter keys, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-filter-keys.html\">IAM Access Analyzer filter keys</a>."
      },
      "ValueList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/String"
        },
        "minItems": 1,
        "maxItems": 20
      },
      "String": {
        "type": "string"
      },
      "Boolean": {
        "type": "boolean"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "http://access-analyzer.us-east-1.amazonaws.com/analyzer"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The response to the request to create an analyzer.",
        "**Key properties:**",
        {
          "$ul": [
            "**arn**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
