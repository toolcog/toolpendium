{
  "name": "StartPolicyGeneration",
  "description": "Starts the policy generation request.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "policyGenerationDetails"
        ],
        "properties": {
          "policyGenerationDetails": {
            "description": "Contains the ARN details about the IAM entity for which the policy is generated.",
            "type": "object",
            "properties": {
              "principalArn": {
                "allOf": [
                  {
                    "$ref": "#/$defs/PrincipalArn"
                  },
                  {
                    "description": "The ARN of the IAM entity (user or role) for which you are generating a policy."
                  }
                ]
              }
            }
          },
          "cloudTrailDetails": {
            "description": "Contains information about CloudTrail access.",
            "type": "object",
            "properties": {
              "trails": {
                "allOf": [
                  {
                    "$ref": "#/$defs/TrailList"
                  },
                  {
                    "description": "A <code>Trail</code> object that contains settings for a trail."
                  }
                ]
              },
              "accessRole": {
                "allOf": [
                  {
                    "$ref": "#/$defs/RoleArn"
                  },
                  {
                    "description": "The ARN of the service role that IAM Access Analyzer uses to access your CloudTrail trail and service last accessed information."
                  }
                ]
              },
              "startTime": {
                "allOf": [
                  {
                    "$ref": "#/$defs/Timestamp"
                  },
                  {
                    "description": "The start of the time range for which IAM Access Analyzer reviews your CloudTrail events. Events with a timestamp before this time are not considered to generate a policy."
                  }
                ]
              },
              "endTime": {
                "allOf": [
                  {
                    "$ref": "#/$defs/Timestamp"
                  },
                  {
                    "description": "The end of the time range for which IAM Access Analyzer reviews your CloudTrail events. Events with a timestamp after this time are not considered to generate a policy. If this is not included in the request, the default value is the current time."
                  }
                ]
              }
            }
          },
          "clientToken": {
            "description": "<p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, the subsequent retries with the same client token return the result from the original successful request and they have no additional effect.</p> <p>If you do not specify a client token, one is automatically generated by the Amazon Web Services SDK.</p>",
            "type": "string"
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "PrincipalArn": {
        "type": "string",
        "pattern": "arn:[^:]*:iam::[^:]*:(role|user)/.{1,576}"
      },
      "TrailList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Trail"
        }
      },
      "Trail": {
        "type": "object",
        "required": [
          "cloudTrailArn"
        ],
        "properties": {
          "cloudTrailArn": {
            "allOf": [
              {
                "$ref": "#/$defs/CloudTrailArn"
              },
              {
                "description": "Specifies the ARN of the trail. The format of a trail ARN is <code>arn:aws:cloudtrail:us-east-2:123456789012:trail/MyTrail</code>."
              }
            ]
          },
          "regions": {
            "allOf": [
              {
                "$ref": "#/$defs/RegionList"
              },
              {
                "description": "A list of regions to get CloudTrail data from and analyze to generate a policy."
              }
            ]
          },
          "allRegions": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Possible values are <code>true</code> or <code>false</code>. If set to <code>true</code>, IAM Access Analyzer retrieves CloudTrail data from all regions to analyze and generate a policy."
              }
            ]
          }
        },
        "description": "Contains details about the CloudTrail trail being analyzed to generate a policy."
      },
      "CloudTrailArn": {
        "type": "string",
        "pattern": "arn:[^:]*:cloudtrail:[^:]*:[^:]*:trail/.{1,576}"
      },
      "RegionList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/String"
        }
      },
      "String": {
        "type": "string"
      },
      "Boolean": {
        "type": "boolean"
      },
      "RoleArn": {
        "type": "string",
        "pattern": "arn:[^:]*:iam::[^:]*:role/.{1,576}"
      },
      "Timestamp": {
        "type": "string",
        "format": "date-time"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "http://access-analyzer.us-east-1.amazonaws.com/policy/generation"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**jobId**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
