{
  "name": "CreateQualificationType",
  "description": " The <code>CreateQualificationType</code> operation creates a new Qualification type, which is represented by a <code>QualificationType</code> data structure. ",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "MTurkRequesterServiceV20170117.CreateQualificationType"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/CreateQualificationTypeRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "CreateQualificationTypeRequest": {
        "type": "object",
        "required": [
          "Name",
          "Description",
          "QualificationTypeStatus"
        ],
        "title": "CreateQualificationTypeRequest",
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": " The name you give to the Qualification type. The type name is used to represent the Qualification to Workers, and to find the type using a Qualification type search. It must be unique across all of your Qualification types."
              }
            ]
          },
          "Keywords": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "One or more words or phrases that describe the Qualification type, separated by commas. The keywords of a type make the type easier to find during a search."
              }
            ]
          },
          "Description": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "A long description for the Qualification type. On the Amazon Mechanical Turk website, the long description is displayed when a Worker examines a Qualification type."
              }
            ]
          },
          "QualificationTypeStatus": {
            "allOf": [
              {
                "$ref": "#/$defs/QualificationTypeStatus"
              },
              {
                "description": "<p>The initial status of the Qualification type.</p> <p>Constraints: Valid values are: Active | Inactive</p>"
              }
            ]
          },
          "RetryDelayInSeconds": {
            "allOf": [
              {
                "$ref": "#/$defs/Long"
              },
              {
                "description": "<p>The number of seconds that a Worker must wait after requesting a Qualification of the Qualification type before the worker can retry the Qualification request.</p> <p>Constraints: None. If not specified, retries are disabled and Workers can request a Qualification of this type only once, even if the Worker has not been granted the Qualification. It is not possible to disable retries for a Qualification type after it has been created with retries enabled. If you want to disable retries, you must delete existing retry-enabled Qualification type and then create a new Qualification type with retries disabled.</p>"
              }
            ]
          },
          "Test": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "<p> The questions for the Qualification test a Worker must answer correctly to obtain a Qualification of this type. If this parameter is specified, <code>TestDurationInSeconds</code> must also be specified. </p> <p>Constraints: Must not be longer than 65535 bytes. Must be a QuestionForm data structure. This parameter cannot be specified if AutoGranted is true.</p> <p>Constraints: None. If not specified, the Worker may request the Qualification without answering any questions.</p>"
              }
            ]
          },
          "AnswerKey": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "<p>The answers to the Qualification test specified in the Test parameter, in the form of an AnswerKey data structure.</p> <p>Constraints: Must not be longer than 65535 bytes.</p> <p>Constraints: None. If not specified, you must process Qualification requests manually.</p>"
              }
            ]
          },
          "TestDurationInSeconds": {
            "allOf": [
              {
                "$ref": "#/$defs/Long"
              },
              {
                "description": "The number of seconds the Worker has to complete the Qualification test, starting from the time the Worker requests the Qualification."
              }
            ]
          },
          "AutoGranted": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "<p>Specifies whether requests for the Qualification type are granted immediately, without prompting the Worker with a Qualification test.</p> <p>Constraints: If the Test parameter is specified, this parameter cannot be true.</p>"
              }
            ]
          },
          "AutoGrantedValue": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "The Qualification value to use for automatically granted Qualifications. This parameter is used only if the AutoGranted parameter is true."
              }
            ]
          }
        }
      },
      "String": {
        "type": "string"
      },
      "QualificationTypeStatus": {
        "type": "string",
        "enum": [
          "Active",
          "Inactive"
        ]
      },
      "Long": {
        "type": "integer"
      },
      "Boolean": {
        "type": "boolean"
      },
      "Integer": {
        "type": "integer"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://mturk-requester.us-east-1.amazonaws.com/#X-Amz-Target=MTurkRequesterServiceV20170117.CreateQualificationType"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**QualificationType**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
