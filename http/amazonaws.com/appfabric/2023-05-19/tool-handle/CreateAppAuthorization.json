{
  "name": "CreateAppAuthorization",
  "description": "Creates an app authorization within an app bundle, which allows AppFabric to connect to an application.",
  "parameters": {
    "type": "object",
    "properties": {
      "appBundleIdentifier": {
        "type": "string",
        "pattern": "arn:.+$|^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}",
        "minLength": 1,
        "maxLength": 1011,
        "description": "The Amazon Resource Name (ARN) or Universal Unique Identifier (UUID) of the app bundle to use for the request."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "app",
          "credential",
          "tenant",
          "authType"
        ],
        "properties": {
          "app": {
            "description": "<p>The name of the application.</p> <p>Valid values are:</p> <ul> <li> <p> <code>SLACK</code> </p> </li> <li> <p> <code>ASANA</code> </p> </li> <li> <p> <code>JIRA</code> </p> </li> <li> <p> <code>M365</code> </p> </li> <li> <p> <code>M365AUDITLOGS</code> </p> </li> <li> <p> <code>ZOOM</code> </p> </li> <li> <p> <code>ZENDESK</code> </p> </li> <li> <p> <code>OKTA</code> </p> </li> <li> <p> <code>GOOGLE</code> </p> </li> <li> <p> <code>DROPBOX</code> </p> </li> <li> <p> <code>SMARTSHEET</code> </p> </li> <li> <p> <code>CISCO</code> </p> </li> </ul>",
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "credential": {
            "description": "Contains credential information for an application.",
            "type": "object",
            "properties": {
              "oauth2Credential": {
                "allOf": [
                  {
                    "$ref": "#/$defs/Oauth2Credential"
                  },
                  {
                    "description": "Contains OAuth2 client credential information."
                  }
                ]
              },
              "apiKeyCredential": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ApiKeyCredential"
                  },
                  {
                    "description": "Contains API key credential information."
                  }
                ]
              }
            }
          },
          "tenant": {
            "description": "Contains information about an application tenant.",
            "type": "object",
            "properties": {
              "tenantIdentifier": {
                "allOf": [
                  {
                    "$ref": "#/$defs/TenantIdentifier"
                  },
                  {
                    "description": "The ID of the application tenant."
                  }
                ]
              },
              "tenantDisplayName": {
                "allOf": [
                  {
                    "$ref": "#/$defs/String2048"
                  },
                  {
                    "description": "The display name of the tenant."
                  }
                ]
              }
            }
          },
          "authType": {
            "description": "The authorization type for the app authorization.",
            "type": "string",
            "enum": [
              "oauth2",
              "apiKey"
            ]
          },
          "clientToken": {
            "description": "<p>Specifies a unique, case-sensitive identifier that you provide to ensure the idempotency of the request. This lets you safely retry the request without accidentally performing the same operation a second time. Passing the same value to a later call to an operation requires that you also pass the same value for all other parameters. We recommend that you use a <a href=\"https://wikipedia.org/wiki/Universally_unique_identifier\">UUID type of value</a>.</p> <p>If you don't provide this value, then Amazon Web Services generates a random one for you.</p> <p>If you retry the operation with the same <code>ClientToken</code>, but with different parameters, the retry fails with an <code>IdempotentParameterMismatch</code> error.</p>",
            "type": "string",
            "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}"
          },
          "tags": {
            "description": "A map of the key-value pairs of the tag or tags to assign to the resource.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/Tag"
            },
            "minItems": 0,
            "maxItems": 50
          }
        }
      }
    },
    "required": [
      "appBundleIdentifier",
      "body"
    ],
    "$defs": {
      "Oauth2Credential": {
        "type": "object",
        "required": [
          "clientId",
          "clientSecret"
        ],
        "properties": {
          "clientId": {
            "allOf": [
              {
                "$ref": "#/$defs/String2048"
              },
              {
                "description": "The client ID of the client application."
              }
            ]
          },
          "clientSecret": {
            "allOf": [
              {
                "$ref": "#/$defs/SensitiveString2048"
              },
              {
                "description": "The client secret of the client application."
              }
            ]
          }
        },
        "description": "Contains OAuth2 client credential information."
      },
      "String2048": {
        "type": "string",
        "minLength": 1,
        "maxLength": 2048
      },
      "SensitiveString2048": {
        "type": "string",
        "minLength": 1,
        "maxLength": 2048,
        "format": "password"
      },
      "ApiKeyCredential": {
        "type": "object",
        "required": [
          "apiKey"
        ],
        "properties": {
          "apiKey": {
            "allOf": [
              {
                "$ref": "#/$defs/SensitiveString2048"
              },
              {
                "description": "An API key for an application."
              }
            ]
          }
        },
        "description": "Contains API key credential information."
      },
      "TenantIdentifier": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1024
      },
      "Tag": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "Tag key."
              }
            ]
          },
          "value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": "Tag value."
              }
            ]
          }
        },
        "description": "The key or keys of the key-value pairs for the tag or tags assigned to a resource."
      },
      "TagKey": {
        "type": "string",
        "minLength": 1,
        "maxLength": 128
      },
      "TagValue": {
        "type": "string",
        "minLength": 0,
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://appfabric.us-east-1.amazonaws.com/appbundles/{appBundleIdentifier}/appauthorizations"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**appAuthorization**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
