{
  "name": "CreateIngestionDestination",
  "description": "Creates an ingestion destination, which specifies how an application's ingested data is processed by Amazon Web Services AppFabric and where it's delivered.",
  "parameters": {
    "type": "object",
    "properties": {
      "appBundleIdentifier": {
        "type": "string",
        "pattern": "arn:.+$|^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}",
        "minLength": 1,
        "maxLength": 1011,
        "description": "The Amazon Resource Name (ARN) or Universal Unique Identifier (UUID) of the app bundle to use for the request."
      },
      "ingestionIdentifier": {
        "type": "string",
        "pattern": "arn:.+$|^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}",
        "minLength": 1,
        "maxLength": 1011,
        "description": "The Amazon Resource Name (ARN) or Universal Unique Identifier (UUID) of the ingestion to use for the request."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "processingConfiguration",
          "destinationConfiguration"
        ],
        "properties": {
          "processingConfiguration": {
            "description": "Contains information about how ingested data is processed.",
            "type": "object",
            "properties": {
              "auditLog": {
                "allOf": [
                  {
                    "$ref": "#/$defs/AuditLogProcessingConfiguration"
                  },
                  {
                    "description": "Contains information about an audit log processing configuration."
                  }
                ]
              }
            }
          },
          "destinationConfiguration": {
            "description": "Contains information about the destination of ingested data.",
            "type": "object",
            "properties": {
              "auditLog": {
                "allOf": [
                  {
                    "$ref": "#/$defs/AuditLogDestinationConfiguration"
                  },
                  {
                    "description": "Contains information about an audit log destination configuration."
                  }
                ]
              }
            }
          },
          "clientToken": {
            "description": "<p>Specifies a unique, case-sensitive identifier that you provide to ensure the idempotency of the request. This lets you safely retry the request without accidentally performing the same operation a second time. Passing the same value to a later call to an operation requires that you also pass the same value for all other parameters. We recommend that you use a <a href=\"https://wikipedia.org/wiki/Universally_unique_identifier\">UUID type of value</a>.</p> <p>If you don't provide this value, then Amazon Web Services generates a random one for you.</p> <p>If you retry the operation with the same <code>ClientToken</code>, but with different parameters, the retry fails with an <code>IdempotentParameterMismatch</code> error.</p>",
            "type": "string",
            "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}"
          },
          "tags": {
            "description": "A map of the key-value pairs of the tag or tags to assign to the resource.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/Tag"
            },
            "minItems": 0,
            "maxItems": 50
          }
        }
      }
    },
    "required": [
      "appBundleIdentifier",
      "ingestionIdentifier",
      "body"
    ],
    "$defs": {
      "AuditLogProcessingConfiguration": {
        "type": "object",
        "required": [
          "schema",
          "format"
        ],
        "properties": {
          "schema": {
            "allOf": [
              {
                "$ref": "#/$defs/Schema"
              },
              {
                "description": "The event schema in which the audit logs need to be formatted."
              }
            ]
          },
          "format": {
            "allOf": [
              {
                "$ref": "#/$defs/Format"
              },
              {
                "description": "The format in which the audit logs need to be formatted."
              }
            ]
          }
        },
        "description": "Contains information about an audit log processing configuration."
      },
      "Schema": {
        "type": "string",
        "enum": [
          "ocsf",
          "raw"
        ]
      },
      "Format": {
        "type": "string",
        "enum": [
          "json",
          "parquet"
        ]
      },
      "AuditLogDestinationConfiguration": {
        "type": "object",
        "required": [
          "destination"
        ],
        "properties": {
          "destination": {
            "allOf": [
              {
                "$ref": "#/$defs/Destination"
              },
              {
                "description": "Contains information about an audit log destination."
              }
            ]
          }
        },
        "description": "Contains information about an audit log destination configuration."
      },
      "Destination": {
        "type": "object",
        "properties": {
          "s3Bucket": {
            "allOf": [
              {
                "$ref": "#/$defs/S3Bucket"
              },
              {
                "description": "Contains information about an Amazon S3 bucket."
              }
            ]
          },
          "firehoseStream": {
            "allOf": [
              {
                "$ref": "#/$defs/FirehoseStream"
              },
              {
                "description": "Contains information about an Amazon Kinesis Data Firehose delivery stream."
              }
            ]
          }
        },
        "description": "Contains information about an audit log destination."
      },
      "S3Bucket": {
        "type": "object",
        "required": [
          "bucketName"
        ],
        "properties": {
          "bucketName": {
            "allOf": [
              {
                "$ref": "#/$defs/String63"
              },
              {
                "description": "The name of the Amazon S3 bucket."
              }
            ]
          },
          "prefix": {
            "allOf": [
              {
                "$ref": "#/$defs/String120"
              },
              {
                "description": "The object key to use."
              }
            ]
          }
        },
        "description": "Contains information about an Amazon S3 bucket."
      },
      "String63": {
        "type": "string",
        "minLength": 3,
        "maxLength": 63
      },
      "String120": {
        "type": "string",
        "minLength": 1,
        "maxLength": 120
      },
      "FirehoseStream": {
        "type": "object",
        "required": [
          "streamName"
        ],
        "properties": {
          "streamName": {
            "allOf": [
              {
                "$ref": "#/$defs/String64"
              },
              {
                "description": "The name of the Amazon Kinesis Data Firehose delivery stream."
              }
            ]
          }
        },
        "description": "Contains information about an Amazon Kinesis Data Firehose delivery stream."
      },
      "String64": {
        "type": "string",
        "minLength": 3,
        "maxLength": 64
      },
      "Tag": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "Tag key."
              }
            ]
          },
          "value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": "Tag value."
              }
            ]
          }
        },
        "description": "The key or keys of the key-value pairs for the tag or tags assigned to a resource."
      },
      "TagKey": {
        "type": "string",
        "minLength": 1,
        "maxLength": 128
      },
      "TagValue": {
        "type": "string",
        "minLength": 0,
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://appfabric.us-east-1.amazonaws.com/appbundles/{appBundleIdentifier}/ingestions/{ingestionIdentifier}/ingestiondestinations"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**ingestionDestination**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
