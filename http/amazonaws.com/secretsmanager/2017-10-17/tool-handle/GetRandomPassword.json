{
  "name": "GetRandomPassword",
  "description": "<p>Generates a random password. We recommend that you specify the maximum length and include every character type that the system you are generating a password for can support.</p> <p>Secrets Manager generates a CloudTrail log entry when you call this action. Do not include sensitive information in request parameters because it might be logged. For more information, see <a href=\"https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html\">Logging Secrets Manager events with CloudTrail</a>.</p> <p> <b>Required permissions: </b> <code>secretsmanager:GetRandomPassword</code>. For more information, see <a href=\"https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions\"> IAM policy actions for Secrets Manager</a> and <a href=\"https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html\">Authentication and access control in Secrets Manager</a>. </p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "secretsmanager.GetRandomPassword"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/GetRandomPasswordRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "GetRandomPasswordRequest": {
        "type": "object",
        "title": "GetRandomPasswordRequest",
        "properties": {
          "PasswordLength": {
            "allOf": [
              {
                "$ref": "#/$defs/PasswordLengthType"
              },
              {
                "description": "The length of the password. If you don't include this parameter, the default length is 32 characters."
              }
            ]
          },
          "ExcludeCharacters": {
            "allOf": [
              {
                "$ref": "#/$defs/ExcludeCharactersType"
              },
              {
                "description": "A string of the characters that you don't want in the password."
              }
            ]
          },
          "ExcludeNumbers": {
            "allOf": [
              {
                "$ref": "#/$defs/ExcludeNumbersType"
              },
              {
                "description": "Specifies whether to exclude numbers from the password. If you don't include this switch, the password can contain numbers."
              }
            ]
          },
          "ExcludePunctuation": {
            "allOf": [
              {
                "$ref": "#/$defs/ExcludePunctuationType"
              },
              {
                "description": "Specifies whether to exclude the following punctuation characters from the password: <code>! \" # $ % &amp; ' ( ) * + , - . / : ; &lt; = &gt; ? @ [ \\ ] ^ _ ` { | } ~</code>. If you don't include this switch, the password can contain punctuation."
              }
            ]
          },
          "ExcludeUppercase": {
            "allOf": [
              {
                "$ref": "#/$defs/ExcludeUppercaseType"
              },
              {
                "description": "Specifies whether to exclude uppercase letters from the password. If you don't include this switch, the password can contain uppercase letters."
              }
            ]
          },
          "ExcludeLowercase": {
            "allOf": [
              {
                "$ref": "#/$defs/ExcludeLowercaseType"
              },
              {
                "description": "Specifies whether to exclude lowercase letters from the password. If you don't include this switch, the password can contain lowercase letters."
              }
            ]
          },
          "IncludeSpace": {
            "allOf": [
              {
                "$ref": "#/$defs/IncludeSpaceType"
              },
              {
                "description": "Specifies whether to include the space character. If you include this switch, the password can contain space characters."
              }
            ]
          },
          "RequireEachIncludedType": {
            "allOf": [
              {
                "$ref": "#/$defs/RequireEachIncludedTypeType"
              },
              {
                "description": "Specifies whether to include at least one upper and lowercase letter, one number, and one punctuation. If you don't include this switch, the password contains at least one of every character type."
              }
            ]
          }
        }
      },
      "PasswordLengthType": {
        "type": "integer",
        "minimum": 1,
        "maximum": 4096
      },
      "ExcludeCharactersType": {
        "type": "string",
        "minLength": 0,
        "maxLength": 4096
      },
      "ExcludeNumbersType": {
        "type": "boolean"
      },
      "ExcludePunctuationType": {
        "type": "boolean"
      },
      "ExcludeUppercaseType": {
        "type": "boolean"
      },
      "ExcludeLowercaseType": {
        "type": "boolean"
      },
      "IncludeSpaceType": {
        "type": "boolean"
      },
      "RequireEachIncludedTypeType": {
        "type": "boolean"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://secretsmanager.us-east-1.amazonaws.com/#X-Amz-Target=secretsmanager.GetRandomPassword"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**RandomPassword**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
