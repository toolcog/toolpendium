{
  "name": "CreateRecommender",
  "description": "<p>Creates a recommender with the recipe (a Domain dataset group use case) you specify. You create recommenders for a Domain dataset group and specify the recommender's Amazon Resource Name (ARN) when you make a <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_RS_GetRecommendations.html\">GetRecommendations</a> request. </p> <p> <b>Minimum recommendation requests per second</b> </p> <important> <p>A high <code>minRecommendationRequestsPerSecond</code> will increase your bill. We recommend starting with 1 for <code>minRecommendationRequestsPerSecond</code> (the default). Track your usage using Amazon CloudWatch metrics, and increase the <code>minRecommendationRequestsPerSecond</code> as necessary.</p> </important> <p>When you create a recommender, you can configure the recommender's minimum recommendation requests per second. The minimum recommendation requests per second (<code>minRecommendationRequestsPerSecond</code>) specifies the baseline recommendation request throughput provisioned by Amazon Personalize. The default minRecommendationRequestsPerSecond is <code>1</code>. A recommendation request is a single <code>GetRecommendations</code> operation. Request throughput is measured in requests per second and Amazon Personalize uses your requests per second to derive your requests per hour and the price of your recommender usage. </p> <p> If your requests per second increases beyond <code>minRecommendationRequestsPerSecond</code>, Amazon Personalize auto-scales the provisioned capacity up and down, but never below <code>minRecommendationRequestsPerSecond</code>. There's a short time delay while the capacity is increased that might cause loss of requests.</p> <p> Your bill is the greater of either the minimum requests per hour (based on minRecommendationRequestsPerSecond) or the actual number of requests. The actual request throughput used is calculated as the average requests/second within a one-hour window. We recommend starting with the default <code>minRecommendationRequestsPerSecond</code>, track your usage using Amazon CloudWatch metrics, and then increase the <code>minRecommendationRequestsPerSecond</code> as necessary. </p> <p> <b>Status</b> </p> <p>A recommender can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li> <p>STOP PENDING &gt; STOP IN_PROGRESS &gt; INACTIVE &gt; START PENDING &gt; START IN_PROGRESS &gt; ACTIVE</p> </li> <li> <p>DELETE PENDING &gt; DELETE IN_PROGRESS</p> </li> </ul> <p>To get the recommender status, call <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_DescribeRecommender.html\">DescribeRecommender</a>.</p> <note> <p>Wait until the <code>status</code> of the recommender is <code>ACTIVE</code> before asking the recommender for recommendations.</p> </note> <p class=\"title\"> <b>Related APIs</b> </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_ListRecommenders.html\">ListRecommenders</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_DescribeRecommender.html\">DescribeRecommender</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_UpdateRecommender.html\">UpdateRecommender</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_DeleteRecommender.html\">DeleteRecommender</a> </p> </li> </ul>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AmazonPersonalize.CreateRecommender"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/CreateRecommenderRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "CreateRecommenderRequest": {
        "type": "object",
        "required": [
          "name",
          "datasetGroupArn",
          "recipeArn"
        ],
        "title": "CreateRecommenderRequest",
        "properties": {
          "name": {
            "allOf": [
              {
                "$ref": "#/$defs/Name"
              },
              {
                "description": "The name of the recommender."
              }
            ]
          },
          "datasetGroupArn": {
            "allOf": [
              {
                "$ref": "#/$defs/Arn"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the destination domain dataset group for the recommender."
              }
            ]
          },
          "recipeArn": {
            "allOf": [
              {
                "$ref": "#/$defs/Arn"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the recipe that the recommender will use. For a recommender, a recipe is a Domain dataset group use case. Only Domain dataset group use cases can be used to create a recommender. For information about use cases see <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/domain-use-cases.html\">Choosing recommender use cases</a>. "
              }
            ]
          },
          "recommenderConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/RecommenderConfig"
              },
              {
                "description": "The configuration details of the recommender."
              }
            ]
          },
          "tags": {
            "allOf": [
              {
                "$ref": "#/$defs/Tags"
              },
              {
                "description": "A list of <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/tagging-resources.html\">tags</a> to apply to the recommender."
              }
            ]
          }
        }
      },
      "Name": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]*",
        "minLength": 1,
        "maxLength": 63
      },
      "Arn": {
        "type": "string",
        "pattern": "arn:([a-z\\d-]+):personalize:.*:.*:.+",
        "maxLength": 256
      },
      "RecommenderConfig": {
        "type": "object",
        "properties": {
          "itemExplorationConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/HyperParameters"
              },
              {
                "description": "Specifies the exploration configuration hyperparameters, including <code>explorationWeight</code> and <code>explorationItemAgeCutOff</code>, you want to use to configure the amount of item exploration Amazon Personalize uses when recommending items. Provide <code>itemExplorationConfig</code> data only if your recommenders generate personalized recommendations for a user (not popular items or similar items)."
              }
            ]
          },
          "minRecommendationRequestsPerSecond": {
            "allOf": [
              {
                "$ref": "#/$defs/TransactionsPerSecond"
              },
              {
                "description": "Specifies the requested minimum provisioned recommendation requests per second that Amazon Personalize will support. A high <code>minRecommendationRequestsPerSecond</code> will increase your bill. We recommend starting with 1 for <code>minRecommendationRequestsPerSecond</code> (the default). Track your usage using Amazon CloudWatch metrics, and increase the <code>minRecommendationRequestsPerSecond</code> as necessary."
              }
            ]
          },
          "trainingDataConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/TrainingDataConfig"
              },
              {
                "description": " Specifies the training data configuration to use when creating a domain recommender. "
              }
            ]
          }
        },
        "description": "The configuration details of the recommender."
      },
      "HyperParameters": {
        "type": "object",
        "maxProperties": 100,
        "additionalProperties": {
          "$ref": "#/$defs/ParameterValue"
        }
      },
      "ParameterValue": {
        "type": "string",
        "maxLength": 1000
      },
      "TransactionsPerSecond": {
        "type": "integer",
        "minimum": 1
      },
      "TrainingDataConfig": {
        "type": "object",
        "properties": {
          "excludedDatasetColumns": {
            "allOf": [
              {
                "$ref": "#/$defs/ExcludedDatasetColumns"
              },
              {
                "description": "Specifies the columns to exclude from training. Each key is a dataset type, and each value is a list of columns. Exclude columns to control what data Amazon Personalize uses to generate recommendations. For example, you might have a column that you want to use only to filter recommendations. You can exclude this column from training and Amazon Personalize considers it only when filtering. "
              }
            ]
          }
        },
        "description": "The training data configuration to use when creating a domain recommender or custom solution version (trained model)."
      },
      "ExcludedDatasetColumns": {
        "type": "object",
        "maxProperties": 3,
        "additionalProperties": {
          "$ref": "#/$defs/ColumnNamesList"
        }
      },
      "ColumnNamesList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ColumnName"
        },
        "maxItems": 50
      },
      "ColumnName": {
        "type": "string",
        "maxLength": 150
      },
      "Tags": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Tag"
        },
        "minItems": 0,
        "maxItems": 200
      },
      "Tag": {
        "type": "object",
        "required": [
          "tagKey",
          "tagValue"
        ],
        "properties": {
          "tagKey": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "One part of a key-value pair that makes up a tag. A key is a general label that acts like a category for more specific tag values."
              }
            ]
          },
          "tagValue": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": "The optional part of a key-value pair that makes up a tag. A value acts as a descriptor within a tag category (key)."
              }
            ]
          }
        },
        "description": "The optional metadata that you apply to resources to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define. For more information see <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/tagging-resources.html\">Tagging Amazon Personalize recources</a>. "
      },
      "TagKey": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 1,
        "maxLength": 128
      },
      "TagValue": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 0,
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://personalize.us-east-1.amazonaws.com/#X-Amz-Target=AmazonPersonalize.CreateRecommender"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**recommenderArn**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
