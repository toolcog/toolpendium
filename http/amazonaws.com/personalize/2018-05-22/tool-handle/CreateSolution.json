{
  "name": "CreateSolution",
  "description": "<p>Creates the configuration for training a model. A trained model is known as a solution version. After the configuration is created, you train the model (create a solution version) by calling the <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_CreateSolutionVersion.html\">CreateSolutionVersion</a> operation. Every time you call <code>CreateSolutionVersion</code>, a new version of the solution is created.</p> <p>After creating a solution version, you check its accuracy by calling <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_GetSolutionMetrics.html\">GetSolutionMetrics</a>. When you are satisfied with the version, you deploy it using <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_CreateCampaign.html\">CreateCampaign</a>. The campaign provides recommendations to a client through the <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_RS_GetRecommendations.html\">GetRecommendations</a> API.</p> <p>To train a model, Amazon Personalize requires training data and a recipe. The training data comes from the dataset group that you provide in the request. A recipe specifies the training algorithm and a feature transformation. You can specify one of the predefined recipes provided by Amazon Personalize. </p> <note> <p>Amazon Personalize doesn't support configuring the <code>hpoObjective</code> for solution hyperparameter optimization at this time.</p> </note> <p> <b>Status</b> </p> <p>A solution can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li> <p>DELETE PENDING &gt; DELETE IN_PROGRESS</p> </li> </ul> <p>To get the status of the solution, call <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_DescribeSolution.html\">DescribeSolution</a>. Wait until the status shows as ACTIVE before calling <code>CreateSolutionVersion</code>.</p> <p class=\"title\"> <b>Related APIs</b> </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_ListSolutions.html\">ListSolutions</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_CreateSolutionVersion.html\">CreateSolutionVersion</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_DescribeSolution.html\">DescribeSolution</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_DeleteSolution.html\">DeleteSolution</a> </p> </li> </ul> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_ListSolutionVersions.html\">ListSolutionVersions</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_DescribeSolutionVersion.html\">DescribeSolutionVersion</a> </p> </li> </ul>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AmazonPersonalize.CreateSolution"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/CreateSolutionRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "CreateSolutionRequest": {
        "type": "object",
        "required": [
          "name",
          "datasetGroupArn"
        ],
        "title": "CreateSolutionRequest",
        "properties": {
          "name": {
            "allOf": [
              {
                "$ref": "#/$defs/Name"
              },
              {
                "description": "The name for the solution."
              }
            ]
          },
          "performHPO": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "<p>Whether to perform hyperparameter optimization (HPO) on the specified or selected recipe. The default is <code>false</code>.</p> <p>When performing AutoML, this parameter is always <code>true</code> and you should not set it to <code>false</code>.</p>"
              }
            ]
          },
          "performAutoML": {
            "allOf": [
              {
                "$ref": "#/$defs/PerformAutoML"
              },
              {
                "description": "<important> <p>We don't recommend enabling automated machine learning. Instead, match your use case to the available Amazon Personalize recipes. For more information, see <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/determining-use-case.html\">Determining your use case.</a> </p> </important> <p>Whether to perform automated machine learning (AutoML). The default is <code>false</code>. For this case, you must specify <code>recipeArn</code>.</p> <p>When set to <code>true</code>, Amazon Personalize analyzes your training data and selects the optimal USER_PERSONALIZATION recipe and hyperparameters. In this case, you must omit <code>recipeArn</code>. Amazon Personalize determines the optimal recipe by running tests with different values for the hyperparameters. AutoML lengthens the training process as compared to selecting a specific recipe.</p>"
              }
            ]
          },
          "recipeArn": {
            "allOf": [
              {
                "$ref": "#/$defs/Arn"
              },
              {
                "description": "The ARN of the recipe to use for model training. This is required when <code>performAutoML</code> is false."
              }
            ]
          },
          "datasetGroupArn": {
            "allOf": [
              {
                "$ref": "#/$defs/Arn"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the dataset group that provides the training data."
              }
            ]
          },
          "eventType": {
            "allOf": [
              {
                "$ref": "#/$defs/EventType"
              },
              {
                "description": "<p>When your have multiple event types (using an <code>EVENT_TYPE</code> schema field), this parameter specifies which event type (for example, 'click' or 'like') is used for training the model.</p> <p>If you do not provide an <code>eventType</code>, Amazon Personalize will use all interactions for training with equal weight regardless of type.</p>"
              }
            ]
          },
          "solutionConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/SolutionConfig"
              },
              {
                "description": "<p>The configuration to use with the solution. When <code>performAutoML</code> is set to true, Amazon Personalize only evaluates the <code>autoMLConfig</code> section of the solution configuration.</p> <note> <p>Amazon Personalize doesn't support configuring the <code>hpoObjective</code> at this time.</p> </note>"
              }
            ]
          },
          "tags": {
            "allOf": [
              {
                "$ref": "#/$defs/Tags"
              },
              {
                "description": "A list of <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/tagging-resources.html\">tags</a> to apply to the solution."
              }
            ]
          }
        }
      },
      "Name": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]*",
        "minLength": 1,
        "maxLength": 63
      },
      "Boolean": {
        "type": "boolean"
      },
      "PerformAutoML": {
        "type": "boolean"
      },
      "Arn": {
        "type": "string",
        "pattern": "arn:([a-z\\d-]+):personalize:.*:.*:.+",
        "maxLength": 256
      },
      "EventType": {
        "type": "string",
        "maxLength": 256
      },
      "SolutionConfig": {
        "type": "object",
        "properties": {
          "eventValueThreshold": {
            "allOf": [
              {
                "$ref": "#/$defs/EventValueThreshold"
              },
              {
                "description": "Only events with a value greater than or equal to this threshold are used for training a model."
              }
            ]
          },
          "hpoConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/HPOConfig"
              },
              {
                "description": "Describes the properties for hyperparameter optimization (HPO)."
              }
            ]
          },
          "algorithmHyperParameters": {
            "allOf": [
              {
                "$ref": "#/$defs/HyperParameters"
              },
              {
                "description": "Lists the hyperparameter names and ranges."
              }
            ]
          },
          "featureTransformationParameters": {
            "allOf": [
              {
                "$ref": "#/$defs/FeatureTransformationParameters"
              },
              {
                "description": "Lists the feature transformation parameters."
              }
            ]
          },
          "autoMLConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/AutoMLConfig"
              },
              {
                "description": "The <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_AutoMLConfig.html\">AutoMLConfig</a> object containing a list of recipes to search when AutoML is performed."
              }
            ]
          },
          "optimizationObjective": {
            "allOf": [
              {
                "$ref": "#/$defs/OptimizationObjective"
              },
              {
                "description": "Describes the additional objective for the solution, such as maximizing streaming minutes or increasing revenue. For more information see <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/optimizing-solution-for-objective.html\">Optimizing a solution</a>."
              }
            ]
          },
          "trainingDataConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/TrainingDataConfig"
              },
              {
                "description": " Specifies the training data configuration to use when creating a custom solution version (trained model). "
              }
            ]
          }
        },
        "description": "Describes the configuration properties for the solution."
      },
      "EventValueThreshold": {
        "type": "string",
        "maxLength": 256
      },
      "HPOConfig": {
        "type": "object",
        "properties": {
          "hpoObjective": {
            "allOf": [
              {
                "$ref": "#/$defs/HPOObjective"
              },
              {
                "description": "<p>The metric to optimize during HPO.</p> <note> <p>Amazon Personalize doesn't support configuring the <code>hpoObjective</code> at this time.</p> </note>"
              }
            ]
          },
          "hpoResourceConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/HPOResourceConfig"
              },
              {
                "description": "Describes the resource configuration for HPO."
              }
            ]
          },
          "algorithmHyperParameterRanges": {
            "allOf": [
              {
                "$ref": "#/$defs/HyperParameterRanges"
              },
              {
                "description": "The hyperparameters and their allowable ranges."
              }
            ]
          }
        },
        "description": "Describes the properties for hyperparameter optimization (HPO)."
      },
      "HPOObjective": {
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/$defs/HPOObjectiveType"
              },
              {
                "description": "The type of the metric. Valid values are <code>Maximize</code> and <code>Minimize</code>."
              }
            ]
          },
          "metricName": {
            "allOf": [
              {
                "$ref": "#/$defs/MetricName"
              },
              {
                "description": "The name of the metric."
              }
            ]
          },
          "metricRegex": {
            "allOf": [
              {
                "$ref": "#/$defs/MetricRegex"
              },
              {
                "description": "A regular expression for finding the metric in the training job logs."
              }
            ]
          }
        },
        "description": "<p>The metric to optimize during hyperparameter optimization (HPO).</p> <note> <p>Amazon Personalize doesn't support configuring the <code>hpoObjective</code> at this time.</p> </note>"
      },
      "HPOObjectiveType": {
        "type": "string",
        "maxLength": 256
      },
      "MetricName": {
        "type": "string",
        "maxLength": 256
      },
      "MetricRegex": {
        "type": "string",
        "maxLength": 256
      },
      "HPOResourceConfig": {
        "type": "object",
        "properties": {
          "maxNumberOfTrainingJobs": {
            "allOf": [
              {
                "$ref": "#/$defs/HPOResource"
              },
              {
                "description": "The maximum number of training jobs when you create a solution version. The maximum value for <code>maxNumberOfTrainingJobs</code> is <code>40</code>."
              }
            ]
          },
          "maxParallelTrainingJobs": {
            "allOf": [
              {
                "$ref": "#/$defs/HPOResource"
              },
              {
                "description": "The maximum number of parallel training jobs when you create a solution version. The maximum value for <code>maxParallelTrainingJobs</code> is <code>10</code>."
              }
            ]
          }
        },
        "description": "Describes the resource configuration for hyperparameter optimization (HPO)."
      },
      "HPOResource": {
        "type": "string",
        "maxLength": 256
      },
      "HyperParameterRanges": {
        "type": "object",
        "properties": {
          "integerHyperParameterRanges": {
            "allOf": [
              {
                "$ref": "#/$defs/IntegerHyperParameterRanges"
              },
              {
                "description": "The integer-valued hyperparameters and their ranges."
              }
            ]
          },
          "continuousHyperParameterRanges": {
            "allOf": [
              {
                "$ref": "#/$defs/ContinuousHyperParameterRanges"
              },
              {
                "description": "The continuous hyperparameters and their ranges."
              }
            ]
          },
          "categoricalHyperParameterRanges": {
            "allOf": [
              {
                "$ref": "#/$defs/CategoricalHyperParameterRanges"
              },
              {
                "description": "The categorical hyperparameters and their ranges."
              }
            ]
          }
        },
        "description": "Specifies the hyperparameters and their ranges. Hyperparameters can be categorical, continuous, or integer-valued."
      },
      "IntegerHyperParameterRanges": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/IntegerHyperParameterRange"
        },
        "maxItems": 100
      },
      "IntegerHyperParameterRange": {
        "type": "object",
        "properties": {
          "name": {
            "allOf": [
              {
                "$ref": "#/$defs/ParameterName"
              },
              {
                "description": "The name of the hyperparameter."
              }
            ]
          },
          "minValue": {
            "allOf": [
              {
                "$ref": "#/$defs/IntegerMinValue"
              },
              {
                "description": "The minimum allowable value for the hyperparameter."
              }
            ]
          },
          "maxValue": {
            "allOf": [
              {
                "$ref": "#/$defs/IntegerMaxValue"
              },
              {
                "description": "The maximum allowable value for the hyperparameter."
              }
            ]
          }
        },
        "description": "Provides the name and range of an integer-valued hyperparameter."
      },
      "ParameterName": {
        "type": "string",
        "maxLength": 256
      },
      "IntegerMinValue": {
        "type": "integer",
        "minimum": -1000000
      },
      "IntegerMaxValue": {
        "type": "integer",
        "maximum": 1000000
      },
      "ContinuousHyperParameterRanges": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ContinuousHyperParameterRange"
        },
        "maxItems": 100
      },
      "ContinuousHyperParameterRange": {
        "type": "object",
        "properties": {
          "name": {
            "allOf": [
              {
                "$ref": "#/$defs/ParameterName"
              },
              {
                "description": "The name of the hyperparameter."
              }
            ]
          },
          "minValue": {
            "allOf": [
              {
                "$ref": "#/$defs/ContinuousMinValue"
              },
              {
                "description": "The minimum allowable value for the hyperparameter."
              }
            ]
          },
          "maxValue": {
            "allOf": [
              {
                "$ref": "#/$defs/ContinuousMaxValue"
              },
              {
                "description": "The maximum allowable value for the hyperparameter."
              }
            ]
          }
        },
        "description": "Provides the name and range of a continuous hyperparameter."
      },
      "ContinuousMinValue": {
        "type": "number",
        "format": "double",
        "minimum": -1000000
      },
      "ContinuousMaxValue": {
        "type": "number",
        "format": "double",
        "minimum": -1000000
      },
      "CategoricalHyperParameterRanges": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/CategoricalHyperParameterRange"
        },
        "maxItems": 100
      },
      "CategoricalHyperParameterRange": {
        "type": "object",
        "properties": {
          "name": {
            "allOf": [
              {
                "$ref": "#/$defs/ParameterName"
              },
              {
                "description": "The name of the hyperparameter."
              }
            ]
          },
          "values": {
            "allOf": [
              {
                "$ref": "#/$defs/CategoricalValues"
              },
              {
                "description": "A list of the categories for the hyperparameter."
              }
            ]
          }
        },
        "description": "Provides the name and range of a categorical hyperparameter."
      },
      "CategoricalValues": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/CategoricalValue"
        },
        "maxItems": 100
      },
      "CategoricalValue": {
        "type": "string",
        "maxLength": 1000
      },
      "HyperParameters": {
        "type": "object",
        "maxProperties": 100,
        "additionalProperties": {
          "$ref": "#/$defs/ParameterValue"
        }
      },
      "ParameterValue": {
        "type": "string",
        "maxLength": 1000
      },
      "FeatureTransformationParameters": {
        "type": "object",
        "maxProperties": 100,
        "additionalProperties": {
          "$ref": "#/$defs/ParameterValue"
        }
      },
      "AutoMLConfig": {
        "type": "object",
        "properties": {
          "metricName": {
            "allOf": [
              {
                "$ref": "#/$defs/MetricName"
              },
              {
                "description": "The metric to optimize."
              }
            ]
          },
          "recipeList": {
            "allOf": [
              {
                "$ref": "#/$defs/ArnList"
              },
              {
                "description": "The list of candidate recipes."
              }
            ]
          }
        },
        "description": "When the solution performs AutoML (<code>performAutoML</code> is true in <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/API_CreateSolution.html\">CreateSolution</a>), Amazon Personalize determines which recipe, from the specified list, optimizes the given metric. Amazon Personalize then uses that recipe for the solution."
      },
      "ArnList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Arn"
        },
        "maxItems": 100
      },
      "OptimizationObjective": {
        "type": "object",
        "properties": {
          "itemAttribute": {
            "allOf": [
              {
                "$ref": "#/$defs/ItemAttribute"
              },
              {
                "description": "The numerical metadata column in an Items dataset related to the optimization objective. For example, VIDEO_LENGTH (to maximize streaming minutes), or PRICE (to maximize revenue)."
              }
            ]
          },
          "objectiveSensitivity": {
            "allOf": [
              {
                "$ref": "#/$defs/ObjectiveSensitivity"
              },
              {
                "description": "Specifies how Amazon Personalize balances the importance of your optimization objective versus relevance."
              }
            ]
          }
        },
        "description": "Describes the additional objective for the solution, such as maximizing streaming minutes or increasing revenue. For more information see <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/optimizing-solution-for-objective.html\">Optimizing a solution</a>."
      },
      "ItemAttribute": {
        "type": "string",
        "minLength": 1,
        "maxLength": 150
      },
      "ObjectiveSensitivity": {
        "type": "string",
        "enum": [
          "LOW",
          "MEDIUM",
          "HIGH",
          "OFF"
        ]
      },
      "TrainingDataConfig": {
        "type": "object",
        "properties": {
          "excludedDatasetColumns": {
            "allOf": [
              {
                "$ref": "#/$defs/ExcludedDatasetColumns"
              },
              {
                "description": "Specifies the columns to exclude from training. Each key is a dataset type, and each value is a list of columns. Exclude columns to control what data Amazon Personalize uses to generate recommendations. For example, you might have a column that you want to use only to filter recommendations. You can exclude this column from training and Amazon Personalize considers it only when filtering. "
              }
            ]
          }
        },
        "description": "The training data configuration to use when creating a domain recommender or custom solution version (trained model)."
      },
      "ExcludedDatasetColumns": {
        "type": "object",
        "maxProperties": 3,
        "additionalProperties": {
          "$ref": "#/$defs/ColumnNamesList"
        }
      },
      "ColumnNamesList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ColumnName"
        },
        "maxItems": 50
      },
      "ColumnName": {
        "type": "string",
        "maxLength": 150
      },
      "Tags": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Tag"
        },
        "minItems": 0,
        "maxItems": 200
      },
      "Tag": {
        "type": "object",
        "required": [
          "tagKey",
          "tagValue"
        ],
        "properties": {
          "tagKey": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "One part of a key-value pair that makes up a tag. A key is a general label that acts like a category for more specific tag values."
              }
            ]
          },
          "tagValue": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": "The optional part of a key-value pair that makes up a tag. A value acts as a descriptor within a tag category (key)."
              }
            ]
          }
        },
        "description": "The optional metadata that you apply to resources to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define. For more information see <a href=\"https://docs.aws.amazon.com/personalize/latest/dg/tagging-resources.html\">Tagging Amazon Personalize recources</a>. "
      },
      "TagKey": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 1,
        "maxLength": 128
      },
      "TagValue": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 0,
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://personalize.us-east-1.amazonaws.com/#X-Amz-Target=AmazonPersonalize.CreateSolution"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**solutionArn**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
