{
  "name": "GET_ModifyLoadBalancerAttributes",
  "description": "<p>Modifies the attributes of the specified load balancer.</p> <p>You can modify the load balancer attributes, such as <code>AccessLogs</code>, <code>ConnectionDraining</code>, and <code>CrossZoneLoadBalancing</code> by either enabling or disabling them. Or, you can modify the load balancer attribute <code>ConnectionSettings</code> by specifying an idle connection timeout value for your load balancer.</p> <p>For more information, see the following in the <i>Classic Load Balancers Guide</i>:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/enable-disable-crosszone-lb.html\">Cross-Zone Load Balancing</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/config-conn-drain.html\">Connection Draining</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/access-log-collection.html\">Access Logs</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/config-idle-timeout.html\">Idle Connection Timeout</a> </p> </li> </ul>",
  "parameters": {
    "type": "object",
    "properties": {
      "LoadBalancerName": {
        "type": "string",
        "description": "The name of the load balancer."
      },
      "LoadBalancerAttributes": {
        "type": "object",
        "properties": {
          "CrossZoneLoadBalancing": {
            "allOf": [
              {
                "$ref": "#/$defs/CrossZoneLoadBalancing"
              },
              {
                "description": "<p>If enabled, the load balancer routes the request traffic evenly across all instances regardless of the Availability Zones.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/enable-disable-crosszone-lb.html\">Configure Cross-Zone Load Balancing</a> in the <i>Classic Load Balancers Guide</i>.</p>"
              }
            ]
          },
          "AccessLog": {
            "allOf": [
              {
                "$ref": "#/$defs/AccessLog"
              },
              {
                "description": "<p>If enabled, the load balancer captures detailed information of all requests and delivers the information to the Amazon S3 bucket that you specify.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/enable-access-logs.html\">Enable Access Logs</a> in the <i>Classic Load Balancers Guide</i>.</p>"
              }
            ]
          },
          "ConnectionDraining": {
            "allOf": [
              {
                "$ref": "#/$defs/ConnectionDraining"
              },
              {
                "description": "<p>If enabled, the load balancer allows existing requests to complete before the load balancer shifts traffic away from a deregistered or unhealthy instance.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/config-conn-drain.html\">Configure Connection Draining</a> in the <i>Classic Load Balancers Guide</i>.</p>"
              }
            ]
          },
          "ConnectionSettings": {
            "allOf": [
              {
                "$ref": "#/$defs/ConnectionSettings"
              },
              {
                "description": "<p>If enabled, the load balancer allows the connections to remain idle (no data is sent over the connection) for the specified duration.</p> <p>By default, Elastic Load Balancing maintains a 60-second idle connection timeout for both front-end and back-end connections of your load balancer. For more information, see <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/config-idle-timeout.html\">Configure Idle Connection Timeout</a> in the <i>Classic Load Balancers Guide</i>.</p>"
              }
            ]
          },
          "AdditionalAttributes": {
            "allOf": [
              {
                "$ref": "#/$defs/AdditionalAttributes"
              },
              {
                "description": "Any additional attributes."
              }
            ]
          }
        },
        "description": "The attributes for the load balancer."
      },
      "Action": {
        "type": "string",
        "enum": [
          "ModifyLoadBalancerAttributes"
        ]
      },
      "Version": {
        "type": "string",
        "enum": [
          "2012-06-01"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      }
    },
    "required": [
      "LoadBalancerName",
      "LoadBalancerAttributes",
      "Action",
      "Version"
    ],
    "$defs": {
      "CrossZoneLoadBalancing": {
        "type": "object",
        "required": [
          "Enabled"
        ],
        "properties": {
          "Enabled": {
            "allOf": [
              {
                "$ref": "#/$defs/CrossZoneLoadBalancingEnabled"
              },
              {
                "description": "Specifies whether cross-zone load balancing is enabled for the load balancer."
              }
            ]
          }
        },
        "description": "Information about the <code>CrossZoneLoadBalancing</code> attribute."
      },
      "CrossZoneLoadBalancingEnabled": {
        "type": "boolean"
      },
      "AccessLog": {
        "type": "object",
        "required": [
          "Enabled"
        ],
        "properties": {
          "Enabled": {
            "allOf": [
              {
                "$ref": "#/$defs/AccessLogEnabled"
              },
              {
                "description": "Specifies whether access logs are enabled for the load balancer."
              }
            ]
          },
          "S3BucketName": {
            "allOf": [
              {
                "$ref": "#/$defs/S3BucketName"
              },
              {
                "description": "The name of the Amazon S3 bucket where the access logs are stored."
              }
            ]
          },
          "EmitInterval": {
            "allOf": [
              {
                "$ref": "#/$defs/AccessLogInterval"
              },
              {
                "description": "<p>The interval for publishing the access logs. You can specify an interval of either 5 minutes or 60 minutes.</p> <p>Default: 60 minutes</p>"
              }
            ]
          },
          "S3BucketPrefix": {
            "allOf": [
              {
                "$ref": "#/$defs/AccessLogPrefix"
              },
              {
                "description": "The logical hierarchy you created for your Amazon S3 bucket, for example <code>my-bucket-prefix/prod</code>. If the prefix is not provided, the log is placed at the root level of the bucket."
              }
            ]
          }
        },
        "description": "Information about the <code>AccessLog</code> attribute."
      },
      "AccessLogEnabled": {
        "type": "boolean"
      },
      "S3BucketName": {
        "type": "string"
      },
      "AccessLogInterval": {
        "type": "integer"
      },
      "AccessLogPrefix": {
        "type": "string"
      },
      "ConnectionDraining": {
        "type": "object",
        "required": [
          "Enabled"
        ],
        "properties": {
          "Enabled": {
            "allOf": [
              {
                "$ref": "#/$defs/ConnectionDrainingEnabled"
              },
              {
                "description": "Specifies whether connection draining is enabled for the load balancer."
              }
            ]
          },
          "Timeout": {
            "allOf": [
              {
                "$ref": "#/$defs/ConnectionDrainingTimeout"
              },
              {
                "description": "The maximum time, in seconds, to keep the existing connections open before deregistering the instances."
              }
            ]
          }
        },
        "description": "Information about the <code>ConnectionDraining</code> attribute."
      },
      "ConnectionDrainingEnabled": {
        "type": "boolean"
      },
      "ConnectionDrainingTimeout": {
        "type": "integer"
      },
      "ConnectionSettings": {
        "type": "object",
        "required": [
          "IdleTimeout"
        ],
        "properties": {
          "IdleTimeout": {
            "allOf": [
              {
                "$ref": "#/$defs/IdleTimeout"
              },
              {
                "description": "The time, in seconds, that the connection is allowed to be idle (no data has been sent over the connection) before it is closed by the load balancer."
              }
            ]
          }
        },
        "description": "Information about the <code>ConnectionSettings</code> attribute."
      },
      "IdleTimeout": {
        "type": "integer",
        "minimum": 1,
        "maximum": 3600
      },
      "AdditionalAttributes": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/AdditionalAttribute"
        },
        "maxItems": 10
      },
      "AdditionalAttribute": {
        "type": "object",
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/AdditionalAttributeKey"
              },
              {
                "description": "<p>The name of the attribute.</p> <p>The following attribute is supported.</p> <ul> <li> <p> <code>elb.http.desyncmitigationmode</code> - Determines how the load balancer handles requests that might pose a security risk to your application. The possible values are <code>monitor</code>, <code>defensive</code>, and <code>strictest</code>. The default is <code>defensive</code>.</p> </li> </ul>"
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/AdditionalAttributeValue"
              },
              {
                "description": "This value of the attribute."
              }
            ]
          }
        },
        "description": "Information about additional load balancer attributes."
      },
      "AdditionalAttributeKey": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9.]+$",
        "maxLength": 256
      },
      "AdditionalAttributeValue": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9.]+$",
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "http://elasticloadbalancing.us-east-1.amazonaws.com/#Action=ModifyLoadBalancerAttributes{?LoadBalancerName,LoadBalancerAttributes,Action,Version}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Contains the output of ModifyLoadBalancerAttributes.",
        "**Key properties:**",
        {
          "$ul": [
            "**LoadBalancerName**",
            "**LoadBalancerAttributes**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
