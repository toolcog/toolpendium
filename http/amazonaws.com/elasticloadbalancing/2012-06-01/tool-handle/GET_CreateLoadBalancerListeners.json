{
  "name": "GET_CreateLoadBalancerListeners",
  "description": "<p>Creates one or more listeners for the specified load balancer. If a listener with the specified port does not already exist, it is created; otherwise, the properties of the new listener must match the properties of the existing listener.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-listener-config.html\">Listeners for Your Classic Load Balancer</a> in the <i>Classic Load Balancers Guide</i>.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "LoadBalancerName": {
        "type": "string",
        "description": "The name of the load balancer."
      },
      "Listeners": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Listener"
        },
        "description": "The listeners."
      },
      "Action": {
        "type": "string",
        "enum": [
          "CreateLoadBalancerListeners"
        ]
      },
      "Version": {
        "type": "string",
        "enum": [
          "2012-06-01"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      }
    },
    "required": [
      "LoadBalancerName",
      "Listeners",
      "Action",
      "Version"
    ],
    "$defs": {
      "Listener": {
        "type": "object",
        "required": [
          "Protocol",
          "LoadBalancerPort",
          "InstancePort"
        ],
        "properties": {
          "Protocol": {
            "allOf": [
              {
                "$ref": "#/$defs/Protocol"
              },
              {
                "description": "The load balancer transport protocol to use for routing: HTTP, HTTPS, TCP, or SSL."
              }
            ]
          },
          "LoadBalancerPort": {
            "allOf": [
              {
                "$ref": "#/$defs/AccessPointPort"
              },
              {
                "description": "The port on which the load balancer is listening. On EC2-VPC, you can specify any port from the range 1-65535. On EC2-Classic, you can specify any port from the following list: 25, 80, 443, 465, 587, 1024-65535."
              }
            ]
          },
          "InstanceProtocol": {
            "allOf": [
              {
                "$ref": "#/$defs/Protocol"
              },
              {
                "description": "<p>The protocol to use for routing traffic to instances: HTTP, HTTPS, TCP, or SSL.</p> <p>If the front-end protocol is TCP or SSL, the back-end protocol must be TCP or SSL. If the front-end protocol is HTTP or HTTPS, the back-end protocol must be HTTP or HTTPS.</p> <p>If there is another listener with the same <code>InstancePort</code> whose <code>InstanceProtocol</code> is secure, (HTTPS or SSL), the listener's <code>InstanceProtocol</code> must also be secure.</p> <p>If there is another listener with the same <code>InstancePort</code> whose <code>InstanceProtocol</code> is HTTP or TCP, the listener's <code>InstanceProtocol</code> must be HTTP or TCP.</p>"
              }
            ]
          },
          "InstancePort": {
            "allOf": [
              {
                "$ref": "#/$defs/InstancePort"
              },
              {
                "description": "The port on which the instance is listening."
              }
            ]
          },
          "SSLCertificateId": {
            "allOf": [
              {
                "$ref": "#/$defs/SSLCertificateId"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the server certificate."
              }
            ]
          }
        },
        "description": "<p>Information about a listener.</p> <p>For information about the protocols and the ports supported by Elastic Load Balancing, see <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-listener-config.html\">Listeners for Your Classic Load Balancer</a> in the <i>Classic Load Balancers Guide</i>.</p>"
      },
      "Protocol": {
        "type": "string"
      },
      "AccessPointPort": {
        "type": "integer"
      },
      "InstancePort": {
        "type": "integer",
        "minimum": 1,
        "maximum": 65535
      },
      "SSLCertificateId": {
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "http://elasticloadbalancing.us-east-1.amazonaws.com/#Action=CreateLoadBalancerListeners{?LoadBalancerName,Listeners,Action,Version}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Contains the parameters for CreateLoadBalancerListener.",
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
