{
  "name": "UpdatePackageVersionsStatus",
  "description": " Updates the status of one or more versions of a package. Using <code>UpdatePackageVersionsStatus</code>, you can update the status of package versions to <code>Archived</code>, <code>Published</code>, or <code>Unlisted</code>. To set the status of a package version to <code>Disposed</code>, use <a href=\"https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_DisposePackageVersions.html\">DisposePackageVersions</a>. ",
  "parameters": {
    "type": "object",
    "properties": {
      "domain": {
        "type": "string",
        "pattern": "[a-z][a-z0-9\\-]{0,48}[a-z0-9]",
        "minLength": 2,
        "maxLength": 50,
        "description": " The name of the domain that contains the repository that contains the package versions with a status to be updated. "
      },
      "domain-owner": {
        "type": "string",
        "pattern": "[0-9]{12}",
        "minLength": 12,
        "maxLength": 12,
        "description": " The 12-digit account number of the Amazon Web Services account that owns the domain. It does not include dashes or spaces. "
      },
      "repository": {
        "type": "string",
        "pattern": "[A-Za-z0-9][A-Za-z0-9._\\-]{1,99}",
        "minLength": 2,
        "maxLength": 100,
        "description": " The repository that contains the package versions with the status you want to update. "
      },
      "format": {
        "type": "string",
        "enum": [
          "npm",
          "pypi",
          "maven",
          "nuget",
          "generic"
        ],
        "description": " A format that specifies the type of the package with the statuses to update. "
      },
      "namespace": {
        "type": "string",
        "pattern": "[^#/\\s]+",
        "minLength": 1,
        "maxLength": 255,
        "description": "<p>The namespace of the package version to be updated. The package version component that specifies its namespace depends on its type. For example:</p> <ul> <li> <p> The namespace of a Maven package version is its <code>groupId</code>. </p> </li> <li> <p> The namespace of an npm package version is its <code>scope</code>. </p> </li> <li> <p> Python and NuGet package versions do not contain a corresponding component, package versions of those formats do not have a namespace. </p> </li> <li> <p> The namespace of a generic package is its <code>namespace</code>. </p> </li> </ul>"
      },
      "package": {
        "type": "string",
        "pattern": "[^#/\\s]+",
        "minLength": 1,
        "maxLength": 255,
        "description": " The name of the package with the version statuses to update. "
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "versions",
          "targetStatus"
        ],
        "properties": {
          "versions": {
            "description": " An array of strings that specify the versions of the package with the statuses to update. ",
            "type": "array",
            "items": {
              "$ref": "#/$defs/PackageVersion"
            },
            "maxItems": 100
          },
          "versionRevisions": {
            "description": " A map of package versions and package version revisions. The map <code>key</code> is the package version (for example, <code>3.5.2</code>), and the map <code>value</code> is the package version revision. ",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/PackageVersionRevision"
            }
          },
          "expectedStatus": {
            "description": " The package versionâ€™s expected status before it is updated. If <code>expectedStatus</code> is provided, the package version's status is updated only if its status at the time <code>UpdatePackageVersionsStatus</code> is called matches <code>expectedStatus</code>. ",
            "type": "string",
            "enum": [
              "Published",
              "Unfinished",
              "Unlisted",
              "Archived",
              "Disposed",
              "Deleted"
            ]
          },
          "targetStatus": {
            "description": " The status you want to change the package version status to. ",
            "type": "string",
            "enum": [
              "Published",
              "Unfinished",
              "Unlisted",
              "Archived",
              "Disposed",
              "Deleted"
            ]
          }
        }
      }
    },
    "required": [
      "domain",
      "repository",
      "format",
      "package",
      "body"
    ],
    "$defs": {
      "PackageVersion": {
        "type": "string",
        "pattern": "[^#/\\s]+",
        "minLength": 1,
        "maxLength": 255
      },
      "PackageVersionRevision": {
        "type": "string",
        "pattern": "\\S+",
        "minLength": 1,
        "maxLength": 50
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://codeartifact.us-east-1.amazonaws.com/v1/package/versions/update_status#domain&repository&format&package{?domain,domain-owner,repository,format,namespace,package}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**successfulVersions**",
            "**failedVersions**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
