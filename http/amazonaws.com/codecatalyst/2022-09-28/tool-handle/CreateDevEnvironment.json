{
  "name": "CreateDevEnvironment",
  "description": "<p>Creates a Dev Environment in Amazon CodeCatalyst, a cloud-based development environment that you can use to quickly work on the code stored in the source repositories of your project. </p> <note> <p>When created in the Amazon CodeCatalyst console, by default a Dev Environment is configured to have a 2 core processor, 4GB of RAM, and 16GB of persistent storage. None of these defaults apply to a Dev Environment created programmatically.</p> </note>",
  "parameters": {
    "type": "object",
    "properties": {
      "spaceName": {
        "type": "string",
        "pattern": "[a-zA-Z0-9]+(?:[-_\\.][a-zA-Z0-9]+)*",
        "minLength": 3,
        "maxLength": 63,
        "description": "The name of the space."
      },
      "projectName": {
        "type": "string",
        "pattern": "[a-zA-Z0-9]+(?:[-_\\.][a-zA-Z0-9]+)*",
        "minLength": 3,
        "maxLength": 63,
        "description": "The name of the project in the space."
      },
      "body": {
        "type": "object",
        "required": [
          "instanceType",
          "persistentStorage"
        ],
        "properties": {
          "repositories": {
            "description": "The source repository that contains the branch to clone into the Dev Environment. ",
            "type": "array",
            "items": {
              "$ref": "#/$defs/RepositoryInput"
            }
          },
          "clientToken": {
            "description": "A user-specified idempotency token. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, the subsequent retries return the result from the original successful request and have no additional effect.",
            "type": "string",
            "minLength": 1,
            "maxLength": 1024
          },
          "alias": {
            "description": "The user-defined alias for a Dev Environment.",
            "type": "string",
            "pattern": "[a-zA-Z0-9]+(?:[-_\\.][a-zA-Z0-9]+)*",
            "minLength": 1,
            "maxLength": 128
          },
          "ides": {
            "description": "<p>Information about the integrated development environment (IDE) configured for a Dev Environment.</p> <note> <p>An IDE is required to create a Dev Environment. For Dev Environment creation, this field contains configuration information and must be provided. </p> </note>",
            "type": "array",
            "items": {
              "$ref": "#/$defs/IdeConfiguration"
            },
            "minItems": 0,
            "maxItems": 1
          },
          "instanceType": {
            "description": "The Amazon EC2 instace type to use for the Dev Environment. ",
            "type": "string",
            "enum": [
              "dev.standard1.small",
              "dev.standard1.medium",
              "dev.standard1.large",
              "dev.standard1.xlarge"
            ]
          },
          "inactivityTimeoutMinutes": {
            "description": "The amount of time the Dev Environment will run without any activity detected before stopping, in minutes. Only whole integers are allowed. Dev Environments consume compute minutes when running.",
            "type": "integer",
            "minimum": 0,
            "maximum": 1200
          },
          "persistentStorage": {
            "description": "Information about the configuration of persistent storage for a Dev Environment. ",
            "type": "object",
            "properties": {
              "sizeInGiB": {
                "allOf": [
                  {
                    "$ref": "#/$defs/PersistentStorageConfigurationSizeInGiBInteger"
                  },
                  {
                    "description": "<p>The size of the persistent storage in gigabytes (specifically GiB).</p> <note> <p>Valid values for storage are based on memory sizes in 16GB increments. Valid values are 16, 32, and 64.</p> </note>"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "required": [
      "spaceName",
      "projectName",
      "body"
    ],
    "$defs": {
      "RepositoryInput": {
        "type": "object",
        "required": [
          "repositoryName"
        ],
        "properties": {
          "repositoryName": {
            "allOf": [
              {
                "$ref": "#/$defs/SourceRepositoryNameString"
              },
              {
                "description": "The name of the source repository."
              }
            ]
          },
          "branchName": {
            "allOf": [
              {
                "$ref": "#/$defs/SourceRepositoryBranchString"
              },
              {
                "description": "The name of the branch in a source repository."
              }
            ]
          }
        },
        "description": "Information about a repository that will be cloned to a Dev Environment."
      },
      "SourceRepositoryNameString": {
        "type": "string",
        "pattern": "(?!.*[.]git$)[\\w\\-.]*",
        "minLength": 1,
        "maxLength": 100
      },
      "SourceRepositoryBranchString": {
        "type": "string",
        "minLength": 1,
        "maxLength": 100
      },
      "IdeConfiguration": {
        "type": "object",
        "properties": {
          "runtime": {
            "allOf": [
              {
                "$ref": "#/$defs/IdeConfigurationRuntimeString"
              },
              {
                "description": "<p>A link to the IDE runtime image. </p> <note> <p>This parameter is not required for <code>VSCode</code>.</p> </note>"
              }
            ]
          },
          "name": {
            "allOf": [
              {
                "$ref": "#/$defs/IdeConfigurationNameString"
              },
              {
                "description": "The name of the IDE. Valid values include <code>Cloud9</code>, <code>IntelliJ</code>, <code>PyCharm</code>, <code>GoLand</code>, and <code>VSCode</code>."
              }
            ]
          }
        },
        "description": "Information about the configuration of an integrated development environment (IDE) for a Dev Environment."
      },
      "IdeConfigurationRuntimeString": {
        "type": "string",
        "minLength": 1,
        "maxLength": 400
      },
      "IdeConfigurationNameString": {
        "type": "string",
        "minLength": 1,
        "maxLength": 128
      },
      "PersistentStorageConfigurationSizeInGiBInteger": {
        "type": "integer",
        "minimum": 0,
        "maximum": 64
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "http://codecatalyst.global.api.aws/v1/spaces/{spaceName}/projects/{projectName}/devEnvironments"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**spaceName**",
            "**projectName**",
            "**id**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
