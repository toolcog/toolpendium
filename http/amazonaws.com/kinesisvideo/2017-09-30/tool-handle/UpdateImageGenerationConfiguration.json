{
  "name": "UpdateImageGenerationConfiguration",
  "description": "Updates the <code>StreamInfo</code> and <code>ImageProcessingConfiguration</code> fields.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "properties": {
          "StreamName": {
            "description": "The name of the stream from which to update the image generation configuration. You must specify either the <code>StreamName</code> or the <code>StreamARN</code>.",
            "type": "string",
            "pattern": "[a-zA-Z0-9_.-]+",
            "minLength": 1,
            "maxLength": 256
          },
          "StreamARN": {
            "description": "The Amazon Resource Name (ARN) of the Kinesis video stream from where you want to update the image generation configuration. You must specify either the <code>StreamName</code> or the <code>StreamARN</code>.",
            "type": "string",
            "pattern": "arn:[a-z\\d-]+:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+",
            "minLength": 1,
            "maxLength": 1024
          },
          "ImageGenerationConfiguration": {
            "description": "The structure that contains the information required for the KVS images delivery. If null, the configuration will be deleted from the stream.",
            "type": "object",
            "properties": {
              "Status": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ConfigurationStatus"
                  },
                  {
                    "description": "Indicates whether the <code>ContinuousImageGenerationConfigurations</code> API is enabled or disabled."
                  }
                ]
              },
              "ImageSelectorType": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ImageSelectorType"
                  },
                  {
                    "description": "The origin of the Server or Producer timestamps to use to generate the images."
                  }
                ]
              },
              "DestinationConfig": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ImageGenerationDestinationConfig"
                  },
                  {
                    "description": "The structure that contains the information required to deliver images to a customer."
                  }
                ]
              },
              "SamplingInterval": {
                "allOf": [
                  {
                    "$ref": "#/$defs/SamplingInterval"
                  },
                  {
                    "description": "The time interval in milliseconds (ms) at which the images need to be generated from the stream. The minimum value that can be provided is 33 ms, because a camera that generates content at 30 FPS would create a frame every 33.3 ms. If the timestamp range is less than the sampling interval, the Image from the <code>StartTimestamp</code> will be returned if available. "
                  }
                ]
              },
              "Format": {
                "allOf": [
                  {
                    "$ref": "#/$defs/Format"
                  },
                  {
                    "description": "The accepted image format."
                  }
                ]
              },
              "FormatConfig": {
                "allOf": [
                  {
                    "$ref": "#/$defs/FormatConfig"
                  },
                  {
                    "description": "The list of a key-value pair structure that contains extra parameters that can be applied when the image is generated. The <code>FormatConfig</code> key is the <code>JPEGQuality</code>, which indicates the JPEG quality key to be used to generate the image. The <code>FormatConfig</code> value accepts ints from 1 to 100. If the value is 1, the image will be generated with less quality and the best compression. If the value is 100, the image will be generated with the best quality and less compression. If no value is provided, the default value of the <code>JPEGQuality</code> key will be set to 80."
                  }
                ]
              },
              "WidthPixels": {
                "allOf": [
                  {
                    "$ref": "#/$defs/WidthPixels"
                  },
                  {
                    "description": "The width of the output image that is used in conjunction with the <code>HeightPixels</code> parameter. When both <code>WidthPixels</code> and <code>HeightPixels</code> parameters are provided, the image will be stretched to fit the specified aspect ratio. If only the <code>WidthPixels</code> parameter is provided, its original aspect ratio will be used to calculate the <code>HeightPixels</code> ratio. If neither parameter is provided, the original image size will be returned."
                  }
                ]
              },
              "HeightPixels": {
                "allOf": [
                  {
                    "$ref": "#/$defs/HeightPixels"
                  },
                  {
                    "description": "The height of the output image that is used in conjunction with the <code>WidthPixels</code> parameter. When both <code>HeightPixels</code> and <code>WidthPixels</code> parameters are provided, the image will be stretched to fit the specified aspect ratio. If only the <code>HeightPixels</code> parameter is provided, its original aspect ratio will be used to calculate the <code>WidthPixels</code> ratio. If neither parameter is provided, the original image size will be returned."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "ConfigurationStatus": {
        "type": "string",
        "enum": [
          "ENABLED",
          "DISABLED"
        ]
      },
      "ImageSelectorType": {
        "type": "string",
        "enum": [
          "SERVER_TIMESTAMP",
          "PRODUCER_TIMESTAMP"
        ]
      },
      "ImageGenerationDestinationConfig": {
        "type": "object",
        "required": [
          "Uri",
          "DestinationRegion"
        ],
        "properties": {
          "Uri": {
            "allOf": [
              {
                "$ref": "#/$defs/DestinationUri"
              },
              {
                "description": "The Uniform Resource Identifier (URI) that identifies where the images will be delivered."
              }
            ]
          },
          "DestinationRegion": {
            "allOf": [
              {
                "$ref": "#/$defs/DestinationRegion"
              },
              {
                "description": "The Amazon Web Services Region of the S3 bucket where images will be delivered. This <code>DestinationRegion</code> must match the Region where the stream is located."
              }
            ]
          }
        },
        "description": "The structure that contains the information required to deliver images to a customer."
      },
      "DestinationUri": {
        "type": "string",
        "pattern": "^[a-zA-Z_0-9]+:(//)?([^/]+)/?([^*]*)$",
        "minLength": 1,
        "maxLength": 255
      },
      "DestinationRegion": {
        "type": "string",
        "pattern": "^[a-z]+(-[a-z]+)?-[a-z]+-[0-9]$",
        "minLength": 9,
        "maxLength": 14
      },
      "SamplingInterval": {
        "type": "integer"
      },
      "Format": {
        "type": "string",
        "enum": [
          "JPEG",
          "PNG"
        ]
      },
      "FormatConfig": {
        "type": "object",
        "minProperties": 1,
        "maxProperties": 1,
        "additionalProperties": {
          "$ref": "#/$defs/FormatConfigValue"
        }
      },
      "FormatConfigValue": {
        "type": "string",
        "pattern": "^[a-zA-Z_0-9]+",
        "minLength": 0,
        "maxLength": 256
      },
      "WidthPixels": {
        "type": "integer",
        "minimum": 1,
        "maximum": 3840
      },
      "HeightPixels": {
        "type": "integer",
        "minimum": 1,
        "maximum": 2160
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://kinesisvideo.us-east-1.amazonaws.com/updateImageGenerationConfiguration"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
