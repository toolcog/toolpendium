{
  "name": "CreateAnalysisTemplate",
  "description": "Creates a new analysis template.",
  "parameters": {
    "type": "object",
    "properties": {
      "membershipIdentifier": {
        "type": "string",
        "pattern": ".*[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}.*",
        "minLength": 36,
        "maxLength": 36,
        "description": "The identifier for a membership resource."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "name",
          "format",
          "source"
        ],
        "properties": {
          "description": {
            "description": "The description of the analysis template.",
            "type": "string",
            "pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDBFF-\\uDC00\\uDFFF\\t\\r\\n]*",
            "minLength": 0,
            "maxLength": 255
          },
          "name": {
            "description": "The name of the analysis template.",
            "type": "string",
            "pattern": "[a-zA-Z0-9_](([a-zA-Z0-9_ ]+-)*([a-zA-Z0-9_ ]+))?",
            "minLength": 0,
            "maxLength": 128
          },
          "format": {
            "description": "The format of the analysis template.",
            "type": "string",
            "enum": [
              "SQL"
            ]
          },
          "source": {
            "description": "The structure that defines the body of the analysis template.",
            "type": "object",
            "properties": {
              "text": {
                "allOf": [
                  {
                    "$ref": "#/$defs/AnalysisTemplateText"
                  },
                  {
                    "description": "The query text."
                  }
                ]
              }
            }
          },
          "tags": {
            "description": "Map of tags assigned to a resource",
            "type": "object",
            "minProperties": 0,
            "maxProperties": 200,
            "additionalProperties": {
              "$ref": "#/$defs/TagValue"
            }
          },
          "analysisParameters": {
            "description": "The parameters of the analysis template.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/AnalysisParameter"
            },
            "minItems": 0,
            "maxItems": 10
          }
        }
      }
    },
    "required": [
      "membershipIdentifier",
      "body"
    ],
    "$defs": {
      "AnalysisTemplateText": {
        "type": "string",
        "minLength": 0,
        "maxLength": 15000
      },
      "TagValue": {
        "type": "string",
        "minLength": 0,
        "maxLength": 256
      },
      "AnalysisParameter": {
        "type": "object",
        "required": [
          "name",
          "type"
        ],
        "properties": {
          "name": {
            "allOf": [
              {
                "$ref": "#/$defs/ParameterName"
              },
              {
                "description": "The name of the parameter. The name must use only alphanumeric, underscore (_), or hyphen (-) characters but cannot start or end with a hyphen."
              }
            ]
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/$defs/ParameterType"
              },
              {
                "description": "The type of parameter."
              }
            ]
          },
          "defaultValue": {
            "allOf": [
              {
                "$ref": "#/$defs/ParameterValue"
              },
              {
                "description": "Optional. The default value that is applied in the analysis template. The member who can query can override this value in the query editor."
              }
            ]
          }
        },
        "description": "Optional. The member who can query can provide this placeholder for a literal data value in an analysis template."
      },
      "ParameterName": {
        "type": "string",
        "pattern": "[0-9a-zA-Z_]+",
        "minLength": 1,
        "maxLength": 100
      },
      "ParameterType": {
        "type": "string",
        "enum": [
          "SMALLINT",
          "INTEGER",
          "BIGINT",
          "DECIMAL",
          "REAL",
          "DOUBLE_PRECISION",
          "BOOLEAN",
          "CHAR",
          "VARCHAR",
          "DATE",
          "TIMESTAMP",
          "TIMESTAMPTZ",
          "TIME",
          "TIMETZ",
          "VARBYTE"
        ]
      },
      "ParameterValue": {
        "type": "string",
        "minLength": 0,
        "maxLength": 250
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://cleanrooms.us-east-1.amazonaws.com/memberships/{membershipIdentifier}/analysistemplates"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**analysisTemplate**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
