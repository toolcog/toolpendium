{
  "name": "CreateConfiguredTable",
  "description": "Creates a new configured table resource.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "name",
          "tableReference",
          "allowedColumns",
          "analysisMethod"
        ],
        "properties": {
          "name": {
            "description": "The name of the configured table.",
            "type": "string",
            "pattern": "(?!\\s*$)[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDBFF-\\uDC00\\uDFFF\\t]*",
            "minLength": 1,
            "maxLength": 100
          },
          "description": {
            "description": "A description for the configured table.",
            "type": "string",
            "pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDBFF-\\uDC00\\uDFFF\\t\\r\\n]*",
            "minLength": 0,
            "maxLength": 255
          },
          "tableReference": {
            "description": "A pointer to the dataset that underlies this table. Currently, this can only be an Glue table.",
            "type": "object",
            "properties": {
              "glue": {
                "allOf": [
                  {
                    "$ref": "#/$defs/GlueTableReference"
                  },
                  {
                    "description": "If present, a reference to the Glue table referred to by this table reference."
                  }
                ]
              }
            }
          },
          "allowedColumns": {
            "description": "The columns of the underlying table that can be used by collaborations or analysis rules.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/ColumnName"
            },
            "minItems": 1,
            "maxItems": 100
          },
          "analysisMethod": {
            "description": "The analysis method for the configured tables. The only valid value is currently `DIRECT_QUERY`.",
            "type": "string",
            "enum": [
              "DIRECT_QUERY"
            ]
          },
          "tags": {
            "description": "Map of tags assigned to a resource",
            "type": "object",
            "minProperties": 0,
            "maxProperties": 200,
            "additionalProperties": {
              "$ref": "#/$defs/TagValue"
            }
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "GlueTableReference": {
        "type": "object",
        "required": [
          "tableName",
          "databaseName"
        ],
        "properties": {
          "tableName": {
            "allOf": [
              {
                "$ref": "#/$defs/GlueTableName"
              },
              {
                "description": "The name of the Glue table."
              }
            ]
          },
          "databaseName": {
            "allOf": [
              {
                "$ref": "#/$defs/GlueDatabaseName"
              },
              {
                "description": "The name of the database the Glue table belongs to."
              }
            ]
          }
        },
        "description": "A reference to a table within an Glue data catalog."
      },
      "GlueTableName": {
        "type": "string",
        "pattern": "[a-zA-Z0-9_](([a-zA-Z0-9_ ]+-)*([a-zA-Z0-9_ ]+))?",
        "minLength": 0,
        "maxLength": 128
      },
      "GlueDatabaseName": {
        "type": "string",
        "pattern": "[a-zA-Z0-9_](([a-zA-Z0-9_]+-)*([a-zA-Z0-9_]+))?",
        "minLength": 0,
        "maxLength": 128
      },
      "ColumnName": {
        "type": "string",
        "pattern": "[a-z0-9_](([a-z0-9_ ]+-)*([a-z0-9_ ]+))?",
        "minLength": 0,
        "maxLength": 128
      },
      "TagValue": {
        "type": "string",
        "minLength": 0,
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://cleanrooms.us-east-1.amazonaws.com/configuredTables"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**configuredTable**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
