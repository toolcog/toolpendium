{
  "name": "CreateConfiguredTableAnalysisRule",
  "description": "Creates a new analysis rule for a configured table. Currently, only one analysis rule can be created for a given configured table.",
  "parameters": {
    "type": "object",
    "properties": {
      "configuredTableIdentifier": {
        "type": "string",
        "pattern": ".*[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}.*",
        "minLength": 36,
        "maxLength": 36,
        "description": "The identifier for the configured table to create the analysis rule for. Currently accepts the configured table ID. "
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "analysisRuleType",
          "analysisRulePolicy"
        ],
        "properties": {
          "analysisRuleType": {
            "description": "The type of analysis rule.",
            "type": "string",
            "enum": [
              "AGGREGATION",
              "LIST",
              "CUSTOM"
            ]
          },
          "analysisRulePolicy": {
            "description": "Controls on the query specifications that can be run on a configured table.",
            "type": "object",
            "properties": {
              "v1": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ConfiguredTableAnalysisRulePolicyV1"
                  },
                  {
                    "description": "Controls on the query specifications that can be run on a configured table."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "required": [
      "configuredTableIdentifier",
      "body"
    ],
    "$defs": {
      "ConfiguredTableAnalysisRulePolicyV1": {
        "type": "object",
        "properties": {
          "list": {
            "allOf": [
              {
                "$ref": "#/$defs/AnalysisRuleList"
              },
              {
                "description": "Analysis rule type that enables only list queries on a configured table."
              }
            ]
          },
          "aggregation": {
            "allOf": [
              {
                "$ref": "#/$defs/AnalysisRuleAggregation"
              },
              {
                "description": "Analysis rule type that enables only aggregation queries on a configured table."
              }
            ]
          },
          "custom": {
            "$ref": "#/$defs/AnalysisRuleCustom"
          }
        },
        "description": "Controls on the query specifications that can be run on a configured table."
      },
      "AnalysisRuleList": {
        "type": "object",
        "required": [
          "joinColumns",
          "listColumns"
        ],
        "properties": {
          "joinColumns": {
            "allOf": [
              {
                "$ref": "#/$defs/AnalysisRuleListJoinColumnsList"
              },
              {
                "description": "Columns that can be used to join a configured table with the table of the member who can query and other members' configured tables."
              }
            ]
          },
          "allowedJoinOperators": {
            "allOf": [
              {
                "$ref": "#/$defs/JoinOperatorsList"
              },
              {
                "description": "The logical operators (if any) that are to be used in an INNER JOIN match condition. Default is <code>AND</code>."
              }
            ]
          },
          "listColumns": {
            "allOf": [
              {
                "$ref": "#/$defs/AnalysisRuleColumnList"
              },
              {
                "description": "Columns that can be listed in the output."
              }
            ]
          }
        },
        "description": "A type of analysis rule that enables row-level analysis."
      },
      "AnalysisRuleListJoinColumnsList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/AnalysisRuleColumnName"
        },
        "minItems": 1
      },
      "AnalysisRuleColumnName": {
        "type": "string",
        "pattern": "[a-z0-9_](([a-z0-9_ ]+-)*([a-z0-9_ ]+))?",
        "minLength": 1,
        "maxLength": 127
      },
      "JoinOperatorsList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/JoinOperator"
        },
        "minItems": 0,
        "maxItems": 2
      },
      "JoinOperator": {
        "type": "string",
        "enum": [
          "OR",
          "AND"
        ]
      },
      "AnalysisRuleColumnList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/AnalysisRuleColumnName"
        }
      },
      "AnalysisRuleAggregation": {
        "type": "object",
        "required": [
          "aggregateColumns",
          "joinColumns",
          "dimensionColumns",
          "scalarFunctions",
          "outputConstraints"
        ],
        "properties": {
          "aggregateColumns": {
            "allOf": [
              {
                "$ref": "#/$defs/AnalysisRuleAggregationAggregateColumnsList"
              },
              {
                "description": "The columns that query runners are allowed to use in aggregation queries."
              }
            ]
          },
          "joinColumns": {
            "allOf": [
              {
                "$ref": "#/$defs/AnalysisRuleColumnList"
              },
              {
                "description": "Columns in configured table that can be used in join statements and/or as aggregate columns. They can never be outputted directly."
              }
            ]
          },
          "joinRequired": {
            "allOf": [
              {
                "$ref": "#/$defs/JoinRequiredOption"
              },
              {
                "description": "Control that requires member who runs query to do a join with their configured table and/or other configured table in query."
              }
            ]
          },
          "allowedJoinOperators": {
            "allOf": [
              {
                "$ref": "#/$defs/JoinOperatorsList"
              },
              {
                "description": "Which logical operators (if any) are to be used in an INNER JOIN match condition. Default is <code>AND</code>."
              }
            ]
          },
          "dimensionColumns": {
            "allOf": [
              {
                "$ref": "#/$defs/AnalysisRuleColumnList"
              },
              {
                "description": "The columns that query runners are allowed to select, group by, or filter by."
              }
            ]
          },
          "scalarFunctions": {
            "allOf": [
              {
                "$ref": "#/$defs/ScalarFunctionsList"
              },
              {
                "description": "Set of scalar functions that are allowed to be used on dimension columns and the output of aggregation of metrics."
              }
            ]
          },
          "outputConstraints": {
            "allOf": [
              {
                "$ref": "#/$defs/AggregationConstraints"
              },
              {
                "description": "Columns that must meet a specific threshold value (after an aggregation function is applied to it) for each output row to be returned."
              }
            ]
          }
        },
        "description": "A type of analysis rule that enables query structure and specified queries that produce aggregate statistics."
      },
      "AnalysisRuleAggregationAggregateColumnsList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/AggregateColumn"
        },
        "minItems": 1
      },
      "AggregateColumn": {
        "type": "object",
        "required": [
          "columnNames",
          "function"
        ],
        "properties": {
          "columnNames": {
            "allOf": [
              {
                "$ref": "#/$defs/AggregateColumnColumnNamesList"
              },
              {
                "description": "Column names in configured table of aggregate columns."
              }
            ]
          },
          "function": {
            "allOf": [
              {
                "$ref": "#/$defs/AggregateFunctionName"
              },
              {
                "description": "Aggregation function that can be applied to aggregate column in query."
              }
            ]
          }
        },
        "description": "Column in configured table that can be used in aggregate function in query."
      },
      "AggregateColumnColumnNamesList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/AnalysisRuleColumnName"
        },
        "minItems": 1
      },
      "AggregateFunctionName": {
        "type": "string",
        "enum": [
          "SUM",
          "SUM_DISTINCT",
          "COUNT",
          "COUNT_DISTINCT",
          "AVG"
        ]
      },
      "JoinRequiredOption": {
        "type": "string",
        "enum": [
          "QUERY_RUNNER"
        ]
      },
      "ScalarFunctionsList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ScalarFunctions"
        }
      },
      "ScalarFunctions": {
        "type": "string",
        "enum": [
          "TRUNC",
          "ABS",
          "CEILING",
          "FLOOR",
          "LN",
          "LOG",
          "ROUND",
          "SQRT",
          "CAST",
          "LOWER",
          "RTRIM",
          "UPPER",
          "COALESCE"
        ]
      },
      "AggregationConstraints": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/AggregationConstraint"
        },
        "minItems": 1
      },
      "AggregationConstraint": {
        "type": "object",
        "required": [
          "columnName",
          "minimum",
          "type"
        ],
        "properties": {
          "columnName": {
            "allOf": [
              {
                "$ref": "#/$defs/AnalysisRuleColumnName"
              },
              {
                "description": "Column in aggregation constraint for which there must be a minimum number of distinct values in an output row for it to be in the query output."
              }
            ]
          },
          "minimum": {
            "allOf": [
              {
                "$ref": "#/$defs/AggregationConstraintMinimumInteger"
              },
              {
                "description": "The minimum number of distinct values that an output row must be an aggregation of. Minimum threshold of distinct values for a specified column that must exist in an output row for it to be in the query output."
              }
            ]
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/$defs/AggregationType"
              },
              {
                "description": "The type of aggregation the constraint allows. The only valid value is currently `COUNT_DISTINCT`."
              }
            ]
          }
        },
        "description": "Constraint on query output removing output rows that do not meet a minimum number of distinct values of a specified column."
      },
      "AggregationConstraintMinimumInteger": {
        "type": "integer",
        "minimum": 2,
        "maximum": 100000
      },
      "AggregationType": {
        "type": "string",
        "enum": [
          "COUNT_DISTINCT"
        ]
      },
      "AnalysisRuleCustom": {
        "type": "object",
        "required": [
          "allowedAnalyses"
        ],
        "properties": {
          "allowedAnalyses": {
            "allOf": [
              {
                "$ref": "#/$defs/AnalysisRuleCustomAllowedAnalysesList"
              },
              {
                "description": "The analysis templates that are allowed by the custom analysis rule."
              }
            ]
          },
          "allowedAnalysisProviders": {
            "allOf": [
              {
                "$ref": "#/$defs/AnalysisRuleCustomAllowedAnalysisProvidersList"
              },
              {
                "description": "The Amazon Web Services accounts that are allowed to query by the custom analysis rule. Required when <code>allowedAnalyses</code> is <code>ANY_QUERY</code>."
              }
            ]
          }
        },
        "description": "A type of analysis rule that enables the table owner to approve custom SQL queries on their configured tables."
      },
      "AnalysisRuleCustomAllowedAnalysesList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/AnalysisTemplateArnOrQueryWildcard"
        },
        "minItems": 0
      },
      "AnalysisTemplateArnOrQueryWildcard": {
        "type": "string",
        "pattern": "(ANY_QUERY|arn:aws:cleanrooms:[\\w]{2}-[\\w]{4,9}-[\\d]:[\\d]{12}:membership/[\\d\\w-]+/analysistemplate/[\\d\\w-]+)",
        "minLength": 0,
        "maxLength": 200
      },
      "AnalysisRuleCustomAllowedAnalysisProvidersList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/AccountId"
        },
        "minItems": 0
      },
      "AccountId": {
        "type": "string",
        "pattern": "\\d+",
        "minLength": 12,
        "maxLength": 12
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://cleanrooms.us-east-1.amazonaws.com/configuredTables/{configuredTableIdentifier}/analysisRule"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**analysisRule**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
