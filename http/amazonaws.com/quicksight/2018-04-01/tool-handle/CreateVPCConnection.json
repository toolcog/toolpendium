{
  "name": "CreateVPCConnection",
  "description": "Creates a new VPC connection.",
  "parameters": {
    "type": "object",
    "properties": {
      "AwsAccountId": {
        "type": "string",
        "pattern": "^[0-9]{12}$",
        "minLength": 12,
        "maxLength": 12,
        "description": "The Amazon Web Services account ID of the account where you want to create a new VPC connection."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "VPCConnectionId",
          "Name",
          "SubnetIds",
          "SecurityGroupIds",
          "RoleArn"
        ],
        "properties": {
          "VPCConnectionId": {
            "description": "The ID of the VPC connection that you're creating. This ID is a unique identifier for each Amazon Web Services Region in an Amazon Web Services account.",
            "type": "string",
            "pattern": "[\\w\\-]+",
            "minLength": 1,
            "maxLength": 1000
          },
          "Name": {
            "description": "The display name for the VPC connection.",
            "type": "string",
            "minLength": 1,
            "maxLength": 128
          },
          "SubnetIds": {
            "description": "A list of subnet IDs for the VPC connection.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/SubnetId"
            },
            "minItems": 2,
            "maxItems": 15
          },
          "SecurityGroupIds": {
            "description": "A list of security group IDs for the VPC connection.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/SecurityGroupId"
            },
            "minItems": 1,
            "maxItems": 16
          },
          "DnsResolvers": {
            "description": "A list of IP addresses of DNS resolver endpoints for the VPC connection.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/IPv4Address"
            },
            "maxItems": 15
          },
          "RoleArn": {
            "description": "The IAM role to associate with the VPC connection.",
            "type": "string",
            "minLength": 20,
            "maxLength": 2048
          },
          "Tags": {
            "description": "A map of the key-value pairs for the resource tag or tags assigned to the VPC connection.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/Tag"
            },
            "minItems": 1,
            "maxItems": 200
          }
        }
      }
    },
    "required": [
      "AwsAccountId",
      "body"
    ],
    "$defs": {
      "SubnetId": {
        "type": "string",
        "pattern": "^subnet-[0-9a-z]*$",
        "minLength": 1,
        "maxLength": 255
      },
      "SecurityGroupId": {
        "type": "string",
        "pattern": "^sg-[0-9a-z]*$",
        "minLength": 1,
        "maxLength": 255
      },
      "IPv4Address": {
        "type": "string",
        "minLength": 7,
        "maxLength": 15
      },
      "Tag": {
        "type": "object",
        "required": [
          "Key",
          "Value"
        ],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "Tag key."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": "Tag value."
              }
            ]
          }
        },
        "description": "The key or keys of the key-value pairs for the resource tag or tags assigned to the resource."
      },
      "TagKey": {
        "type": "string",
        "minLength": 1,
        "maxLength": 128
      },
      "TagValue": {
        "type": "string",
        "minLength": 1,
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://quicksight.us-east-1.amazonaws.com/accounts/{AwsAccountId}/vpc-connections"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Arn**",
            "**VPCConnectionId**",
            "**CreationStatus**",
            "**AvailabilityStatus**",
            "**RequestId**",
            "**Status**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "487": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
