{
  "name": "UpdateDashboard",
  "description": "<p>Updates a dashboard in an Amazon Web Services account.</p> <note> <p>Updating a Dashboard creates a new dashboard version but does not immediately publish the new version. You can update the published version of a dashboard by using the <code> <a href=\"https://docs.aws.amazon.com/quicksight/latest/APIReference/API_UpdateDashboardPublishedVersion.html\">UpdateDashboardPublishedVersion</a> </code> API operation.</p> </note>",
  "parameters": {
    "type": "object",
    "properties": {
      "AwsAccountId": {
        "type": "string",
        "pattern": "^[0-9]{12}$",
        "minLength": 12,
        "maxLength": 12,
        "description": "The ID of the Amazon Web Services account that contains the dashboard that you're updating."
      },
      "DashboardId": {
        "type": "string",
        "pattern": "[\\w\\-]+",
        "minLength": 1,
        "maxLength": 512,
        "description": "The ID for the dashboard."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "Name"
        ],
        "properties": {
          "Name": {
            "description": "The display name of the dashboard.",
            "type": "string",
            "minLength": 1,
            "maxLength": 2048
          },
          "SourceEntity": {
            "description": "Dashboard source entity.",
            "type": "object",
            "properties": {
              "SourceTemplate": {
                "allOf": [
                  {
                    "$ref": "#/$defs/DashboardSourceTemplate"
                  },
                  {
                    "description": "Source template."
                  }
                ]
              }
            }
          },
          "Parameters": {
            "description": "A list of Amazon QuickSight parameters and the list's override values.",
            "type": "object",
            "properties": {
              "StringParameters": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StringParameterList"
                  },
                  {
                    "description": "The parameters that have a data type of string."
                  }
                ]
              },
              "IntegerParameters": {
                "allOf": [
                  {
                    "$ref": "#/$defs/IntegerParameterList"
                  },
                  {
                    "description": "The parameters that have a data type of integer."
                  }
                ]
              },
              "DecimalParameters": {
                "allOf": [
                  {
                    "$ref": "#/$defs/DecimalParameterList"
                  },
                  {
                    "description": "The parameters that have a data type of decimal."
                  }
                ]
              },
              "DateTimeParameters": {
                "allOf": [
                  {
                    "$ref": "#/$defs/DateTimeParameterList"
                  },
                  {
                    "description": "The parameters that have a data type of date-time."
                  }
                ]
              }
            }
          },
          "VersionDescription": {
            "description": "A description for the first version of the dashboard being created.",
            "type": "string",
            "minLength": 1,
            "maxLength": 512
          },
          "DashboardPublishOptions": {
            "description": "Dashboard publish options.",
            "type": "object",
            "properties": {
              "AdHocFilteringOption": {
                "allOf": [
                  {
                    "$ref": "#/$defs/AdHocFilteringOption"
                  },
                  {
                    "description": "Ad hoc (one-time) filtering option."
                  }
                ]
              },
              "ExportToCSVOption": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ExportToCSVOption"
                  },
                  {
                    "description": "Export to .csv option."
                  }
                ]
              },
              "SheetControlsOption": {
                "allOf": [
                  {
                    "$ref": "#/$defs/SheetControlsOption"
                  },
                  {
                    "description": "Sheet controls option."
                  }
                ]
              },
              "VisualPublishOptions": {
                "allOf": [
                  {
                    "$ref": "#/$defs/DashboardVisualPublishOptions"
                  },
                  {
                    "deprecated": true,
                    "description": "The visual publish options of a visual in a dashboard.VisualPublishOptions property will reach its end of standard support in a future release. To perform this action, use ExportWithHiddenFields."
                  }
                ]
              },
              "SheetLayoutElementMaximizationOption": {
                "allOf": [
                  {
                    "$ref": "#/$defs/SheetLayoutElementMaximizationOption"
                  },
                  {
                    "description": "The sheet layout maximization options of a dashbaord."
                  }
                ]
              },
              "VisualMenuOption": {
                "allOf": [
                  {
                    "$ref": "#/$defs/VisualMenuOption"
                  },
                  {
                    "description": "The menu options of a visual in a dashboard."
                  }
                ]
              },
              "VisualAxisSortOption": {
                "allOf": [
                  {
                    "$ref": "#/$defs/VisualAxisSortOption"
                  },
                  {
                    "description": "The axis sort options of a dashboard."
                  }
                ]
              },
              "ExportWithHiddenFieldsOption": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ExportWithHiddenFieldsOption"
                  },
                  {
                    "description": "Determines if hidden fields are exported with a dashboard."
                  }
                ]
              },
              "DataPointDrillUpDownOption": {
                "allOf": [
                  {
                    "$ref": "#/$defs/DataPointDrillUpDownOption"
                  },
                  {
                    "description": "The drill-down options of data points in a dashboard."
                  }
                ]
              },
              "DataPointMenuLabelOption": {
                "allOf": [
                  {
                    "$ref": "#/$defs/DataPointMenuLabelOption"
                  },
                  {
                    "description": "The data point menu label options of a dashboard."
                  }
                ]
              },
              "DataPointTooltipOption": {
                "allOf": [
                  {
                    "$ref": "#/$defs/DataPointTooltipOption"
                  },
                  {
                    "description": "The data point tool tip options of a dashboard."
                  }
                ]
              }
            }
          },
          "ThemeArn": {
            "description": "The Amazon Resource Name (ARN) of the theme that is being used for this dashboard. If you add a value for this field, it overrides the value that was originally associated with the entity. The theme ARN must exist in the same Amazon Web Services account where you create the dashboard.",
            "type": "string"
          },
          "Definition": {
            "description": "The contents of a dashboard.",
            "type": "object",
            "properties": {
              "DataSetIdentifierDeclarations": {
                "allOf": [
                  {
                    "$ref": "#/$defs/DataSetIdentifierDeclarationList"
                  },
                  {
                    "description": "An array of dataset identifier declarations. With this mapping,you can use dataset identifiers instead of dataset Amazon Resource Names (ARNs) throughout the dashboard's sub-structures."
                  }
                ]
              },
              "Sheets": {
                "allOf": [
                  {
                    "$ref": "#/$defs/SheetDefinitionList"
                  },
                  {
                    "description": "An array of sheet definitions for a dashboard."
                  }
                ]
              },
              "CalculatedFields": {
                "allOf": [
                  {
                    "$ref": "#/$defs/CalculatedFields"
                  },
                  {
                    "description": "An array of calculated field definitions for the dashboard."
                  }
                ]
              },
              "ParameterDeclarations": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ParameterDeclarationList"
                  },
                  {
                    "description": "<p>The parameter declarations for a dashboard. Parameters are named variables that can transfer a value for use by an action or an object.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/parameters-in-quicksight.html\">Parameters in Amazon QuickSight</a> in the <i>Amazon QuickSight User Guide</i>.</p>"
                  }
                ]
              },
              "FilterGroups": {
                "allOf": [
                  {
                    "$ref": "#/$defs/FilterGroupList"
                  },
                  {
                    "description": "<p>The filter definitions for a dashboard.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/adding-a-filter.html\">Filtering Data in Amazon QuickSight</a> in the <i>Amazon QuickSight User Guide</i>.</p>"
                  }
                ]
              },
              "ColumnConfigurations": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ColumnConfigurationList"
                  },
                  {
                    "description": "An array of dashboard-level column configurations. Column configurations are used to set the default formatting for a column that is used throughout a dashboard. "
                  }
                ]
              },
              "AnalysisDefaults": {
                "$ref": "#/$defs/AnalysisDefaults"
              }
            }
          }
        }
      }
    },
    "required": [
      "AwsAccountId",
      "DashboardId",
      "body"
    ],
    "$defs": {
      "DashboardSourceTemplate": {
        "type": "object",
        "required": [
          "DataSetReferences",
          "Arn"
        ],
        "properties": {
          "DataSetReferences": {
            "allOf": [
              {
                "$ref": "#/$defs/DataSetReferenceList"
              },
              {
                "description": "Dataset references."
              }
            ]
          },
          "Arn": {
            "allOf": [
              {
                "$ref": "#/$defs/Arn"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the resource."
              }
            ]
          }
        },
        "description": "Dashboard source template."
      },
      "DataSetReferenceList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/DataSetReference"
        },
        "minItems": 1
      },
      "DataSetReference": {
        "type": "object",
        "required": [
          "DataSetPlaceholder",
          "DataSetArn"
        ],
        "properties": {
          "DataSetPlaceholder": {
            "allOf": [
              {
                "$ref": "#/$defs/NonEmptyString"
              },
              {
                "description": "Dataset placeholder."
              }
            ]
          },
          "DataSetArn": {
            "allOf": [
              {
                "$ref": "#/$defs/Arn"
              },
              {
                "description": "Dataset Amazon Resource Name (ARN)."
              }
            ]
          }
        },
        "description": "Dataset reference."
      },
      "NonEmptyString": {
        "type": "string",
        "pattern": ".*\\S.*"
      },
      "Arn": {
        "type": "string"
      },
      "StringParameterList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/StringParameter"
        },
        "maxItems": 100
      },
      "StringParameter": {
        "type": "object",
        "required": [
          "Name",
          "Values"
        ],
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/NonEmptyString"
              },
              {
                "description": "A display name for a string parameter."
              }
            ]
          },
          "Values": {
            "allOf": [
              {
                "$ref": "#/$defs/SensitiveStringList"
              },
              {
                "description": "The values of a string parameter."
              }
            ]
          }
        },
        "description": "A string parameter."
      },
      "SensitiveStringList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/SensitiveString"
        }
      },
      "SensitiveString": {
        "type": "string",
        "format": "password"
      },
      "IntegerParameterList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/IntegerParameter"
        },
        "maxItems": 100
      },
      "IntegerParameter": {
        "type": "object",
        "required": [
          "Name",
          "Values"
        ],
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/NonEmptyString"
              },
              {
                "description": "The name of the integer parameter."
              }
            ]
          },
          "Values": {
            "allOf": [
              {
                "$ref": "#/$defs/SensitiveLongList"
              },
              {
                "description": "The values for the integer parameter."
              }
            ]
          }
        },
        "description": "An integer parameter."
      },
      "SensitiveLongList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/SensitiveLong"
        }
      },
      "SensitiveLong": {
        "type": "integer"
      },
      "DecimalParameterList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/DecimalParameter"
        },
        "maxItems": 100
      },
      "DecimalParameter": {
        "type": "object",
        "required": [
          "Name",
          "Values"
        ],
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/NonEmptyString"
              },
              {
                "description": "A display name for the decimal parameter."
              }
            ]
          },
          "Values": {
            "allOf": [
              {
                "$ref": "#/$defs/SensitiveDoubleList"
              },
              {
                "description": "The values for the decimal parameter."
              }
            ]
          }
        },
        "description": "A decimal parameter."
      },
      "SensitiveDoubleList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/SensitiveDouble"
        }
      },
      "SensitiveDouble": {
        "type": "number",
        "format": "double"
      },
      "DateTimeParameterList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/DateTimeParameter"
        },
        "maxItems": 100
      },
      "DateTimeParameter": {
        "type": "object",
        "required": [
          "Name",
          "Values"
        ],
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/NonEmptyString"
              },
              {
                "description": "A display name for the date-time parameter."
              }
            ]
          },
          "Values": {
            "allOf": [
              {
                "$ref": "#/$defs/SensitiveTimestampList"
              },
              {
                "description": "The values for the date-time parameter."
              }
            ]
          }
        },
        "description": "A date-time parameter."
      },
      "SensitiveTimestampList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/SensitiveTimestamp"
        }
      },
      "SensitiveTimestamp": {
        "type": "string",
        "format": "date-time"
      },
      "AdHocFilteringOption": {
        "type": "object",
        "properties": {
          "AvailabilityStatus": {
            "allOf": [
              {
                "$ref": "#/$defs/DashboardBehavior"
              },
              {
                "description": "Availability status."
              }
            ]
          }
        },
        "description": "An ad hoc (one-time) filtering option."
      },
      "DashboardBehavior": {
        "type": "string",
        "enum": [
          "ENABLED",
          "DISABLED"
        ]
      },
      "ExportToCSVOption": {
        "type": "object",
        "properties": {
          "AvailabilityStatus": {
            "allOf": [
              {
                "$ref": "#/$defs/DashboardBehavior"
              },
              {
                "description": "Availability status."
              }
            ]
          }
        },
        "description": "Export to .csv option."
      },
      "SheetControlsOption": {
        "type": "object",
        "properties": {
          "VisibilityState": {
            "allOf": [
              {
                "$ref": "#/$defs/DashboardUIState"
              },
              {
                "description": "Visibility state."
              }
            ]
          }
        },
        "description": "Sheet controls option."
      },
      "DashboardUIState": {
        "type": "string",
        "enum": [
          "EXPANDED",
          "COLLAPSED"
        ]
      },
      "DashboardVisualPublishOptions": {
        "type": "object",
        "properties": {
          "ExportHiddenFieldsOption": {
            "allOf": [
              {
                "$ref": "#/$defs/ExportHiddenFieldsOption"
              },
              {
                "description": "Determines if hidden fields are included in an exported dashboard."
              }
            ]
          }
        },
        "description": "The visual publish options of a visual in a dashboard"
      },
      "ExportHiddenFieldsOption": {
        "type": "object",
        "properties": {
          "AvailabilityStatus": {
            "allOf": [
              {
                "$ref": "#/$defs/DashboardBehavior"
              },
              {
                "description": "The status of the export hidden fields options of a dashbaord."
              }
            ]
          }
        },
        "description": "Determines if hidden fields are included in an exported dashboard."
      },
      "SheetLayoutElementMaximizationOption": {
        "type": "object",
        "properties": {
          "AvailabilityStatus": {
            "allOf": [
              {
                "$ref": "#/$defs/DashboardBehavior"
              },
              {
                "description": "The status of the sheet layout maximization options of a dashbaord."
              }
            ]
          }
        },
        "description": "The sheet layout maximization options of a dashbaord."
      },
      "VisualMenuOption": {
        "type": "object",
        "properties": {
          "AvailabilityStatus": {
            "allOf": [
              {
                "$ref": "#/$defs/DashboardBehavior"
              },
              {
                "description": "The availaiblity status of a visual's menu options."
              }
            ]
          }
        },
        "description": "The menu options for a visual."
      },
      "VisualAxisSortOption": {
        "type": "object",
        "properties": {
          "AvailabilityStatus": {
            "allOf": [
              {
                "$ref": "#/$defs/DashboardBehavior"
              },
              {
                "description": "The availaiblity status of a visual's axis sort options."
              }
            ]
          }
        },
        "description": "The axis sort options for a visual."
      },
      "ExportWithHiddenFieldsOption": {
        "type": "object",
        "properties": {
          "AvailabilityStatus": {
            "allOf": [
              {
                "$ref": "#/$defs/DashboardBehavior"
              },
              {
                "description": "The status of the export with hidden fields options."
              }
            ]
          }
        },
        "description": "Determines whether or not hidden fields are visible on exported dashbaords."
      },
      "DataPointDrillUpDownOption": {
        "type": "object",
        "properties": {
          "AvailabilityStatus": {
            "allOf": [
              {
                "$ref": "#/$defs/DashboardBehavior"
              },
              {
                "description": "The status of the drill down options of data points."
              }
            ]
          }
        },
        "description": "The drill down options for data points in a dashbaord."
      },
      "DataPointMenuLabelOption": {
        "type": "object",
        "properties": {
          "AvailabilityStatus": {
            "allOf": [
              {
                "$ref": "#/$defs/DashboardBehavior"
              },
              {
                "description": "The status of the data point menu options."
              }
            ]
          }
        },
        "description": "The data point menu options of a dashboard."
      },
      "DataPointTooltipOption": {
        "type": "object",
        "properties": {
          "AvailabilityStatus": {
            "allOf": [
              {
                "$ref": "#/$defs/DashboardBehavior"
              },
              {
                "description": "The status of the data point tool tip options."
              }
            ]
          }
        },
        "description": "The data point tooltip options."
      },
      "DataSetIdentifierDeclarationList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/DataSetIdentifierDeclaration"
        },
        "minItems": 1,
        "maxItems": 50
      },
      "DataSetIdentifierDeclaration": {
        "type": "object",
        "required": [
          "Identifier",
          "DataSetArn"
        ],
        "properties": {
          "Identifier": {
            "allOf": [
              {
                "$ref": "#/$defs/DataSetIdentifier"
              },
              {
                "description": "The identifier of the data set, typically the data set's name."
              }
            ]
          },
          "DataSetArn": {
            "allOf": [
              {
                "$ref": "#/$defs/Arn"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the data set."
              }
            ]
          }
        },
        "description": "A data set."
      },
      "DataSetIdentifier": {
        "type": "string",
        "minLength": 1,
        "maxLength": 2048
      },
      "SheetDefinitionList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/SheetDefinition"
        },
        "maxItems": 20
      },
      "SheetDefinition": {
        "type": "object",
        "required": [
          "SheetId"
        ],
        "properties": {
          "SheetId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "The unique identifier of a sheet."
              }
            ]
          },
          "Title": {
            "allOf": [
              {
                "$ref": "#/$defs/SheetTitle"
              },
              {
                "description": "The title of the sheet."
              }
            ]
          },
          "Description": {
            "allOf": [
              {
                "$ref": "#/$defs/SheetDescription"
              },
              {
                "description": "A description of the sheet."
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/SheetName"
              },
              {
                "description": "The name of the sheet. This name is displayed on the sheet's tab in the Amazon QuickSight console."
              }
            ]
          },
          "ParameterControls": {
            "allOf": [
              {
                "$ref": "#/$defs/ParameterControlList"
              },
              {
                "description": "<p>The list of parameter controls that are on a sheet.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/parameters-controls.html\">Using a Control with a Parameter in Amazon QuickSight</a> in the <i>Amazon QuickSight User Guide</i>.</p>"
              }
            ]
          },
          "FilterControls": {
            "allOf": [
              {
                "$ref": "#/$defs/FilterControlList"
              },
              {
                "description": "<p>The list of filter controls that are on a sheet.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/filter-controls.html\">Adding filter controls to analysis sheets</a> in the <i>Amazon QuickSight User Guide</i>.</p>"
              }
            ]
          },
          "Visuals": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualList"
              },
              {
                "description": "A list of the visuals that are on a sheet. Visual placement is determined by the layout of the sheet."
              }
            ]
          },
          "TextBoxes": {
            "allOf": [
              {
                "$ref": "#/$defs/SheetTextBoxList"
              },
              {
                "description": "The text boxes that are on a sheet."
              }
            ]
          },
          "Layouts": {
            "allOf": [
              {
                "$ref": "#/$defs/LayoutList"
              },
              {
                "description": "<p>Layouts define how the components of a sheet are arranged.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/types-of-layout.html\">Types of layout</a> in the <i>Amazon QuickSight User Guide</i>.</p>"
              }
            ]
          },
          "SheetControlLayouts": {
            "allOf": [
              {
                "$ref": "#/$defs/SheetControlLayoutList"
              },
              {
                "description": "The control layouts of the sheet."
              }
            ]
          },
          "ContentType": {
            "allOf": [
              {
                "$ref": "#/$defs/SheetContentType"
              },
              {
                "description": "<p>The layout content type of the sheet. Choose one of the following options:</p> <ul> <li> <p> <code>PAGINATED</code>: Creates a sheet for a paginated report.</p> </li> <li> <p> <code>INTERACTIVE</code>: Creates a sheet for an interactive dashboard.</p> </li> </ul>"
              }
            ]
          }
        },
        "description": "A sheet is an object that contains a set of visuals that are viewed together on one page in a paginated report. Every analysis and dashboard must contain at least one sheet."
      },
      "ShortRestrictiveResourceId": {
        "type": "string",
        "pattern": "[\\w\\-]+",
        "minLength": 1,
        "maxLength": 512
      },
      "SheetTitle": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1024
      },
      "SheetDescription": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1024
      },
      "SheetName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 2048
      },
      "ParameterControlList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ParameterControl"
        },
        "maxItems": 200
      },
      "ParameterControl": {
        "type": "object",
        "properties": {
          "DateTimePicker": {
            "allOf": [
              {
                "$ref": "#/$defs/ParameterDateTimePickerControl"
              },
              {
                "description": "A control from a date parameter that specifies date and time."
              }
            ]
          },
          "List": {
            "allOf": [
              {
                "$ref": "#/$defs/ParameterListControl"
              },
              {
                "description": "A control to display a list with buttons or boxes that are used to select either a single value or multiple values."
              }
            ]
          },
          "Dropdown": {
            "allOf": [
              {
                "$ref": "#/$defs/ParameterDropDownControl"
              },
              {
                "description": "A control to display a dropdown list with buttons that are used to select a single value."
              }
            ]
          },
          "TextField": {
            "allOf": [
              {
                "$ref": "#/$defs/ParameterTextFieldControl"
              },
              {
                "description": "A control to display a text box that is used to enter a single entry."
              }
            ]
          },
          "TextArea": {
            "allOf": [
              {
                "$ref": "#/$defs/ParameterTextAreaControl"
              },
              {
                "description": "A control to display a text box that is used to enter multiple entries."
              }
            ]
          },
          "Slider": {
            "allOf": [
              {
                "$ref": "#/$defs/ParameterSliderControl"
              },
              {
                "description": "A control to display a horizontal toggle bar. This is used to change a value by sliding the toggle."
              }
            ]
          }
        },
        "description": "<p>The control of a parameter that users can interact with in a dashboard or an analysis.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>"
      },
      "ParameterDateTimePickerControl": {
        "type": "object",
        "required": [
          "ParameterControlId",
          "Title",
          "SourceParameterName"
        ],
        "properties": {
          "ParameterControlId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "The ID of the <code>ParameterDateTimePickerControl</code>."
              }
            ]
          },
          "Title": {
            "allOf": [
              {
                "$ref": "#/$defs/SheetControlTitle"
              },
              {
                "description": "The title of the <code>ParameterDateTimePickerControl</code>."
              }
            ]
          },
          "SourceParameterName": {
            "allOf": [
              {
                "$ref": "#/$defs/ParameterName"
              },
              {
                "description": "The name of the <code>ParameterDateTimePickerControl</code>."
              }
            ]
          },
          "DisplayOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/DateTimePickerControlDisplayOptions"
              },
              {
                "description": "The display options of a control."
              }
            ]
          }
        },
        "description": "A control from a date parameter that specifies date and time."
      },
      "SheetControlTitle": {
        "type": "string",
        "minLength": 1,
        "maxLength": 2048
      },
      "ParameterName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9]+$",
        "minLength": 1,
        "maxLength": 2048
      },
      "DateTimePickerControlDisplayOptions": {
        "type": "object",
        "properties": {
          "TitleOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/LabelOptions"
              },
              {
                "description": "The options to configure the title visibility, name, and font size."
              }
            ]
          },
          "DateTimeFormat": {
            "allOf": [
              {
                "$ref": "#/$defs/DateTimeFormat"
              },
              {
                "description": "Customize how dates are formatted in controls."
              }
            ]
          },
          "InfoIconLabelOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/SheetControlInfoIconLabelOptions"
              },
              {
                "description": "The configuration of info icon label options."
              }
            ]
          }
        },
        "description": "The display options of a control."
      },
      "LabelOptions": {
        "type": "object",
        "properties": {
          "Visibility": {
            "allOf": [
              {
                "$ref": "#/$defs/Visibility"
              },
              {
                "description": "Determines whether or not the label is visible."
              }
            ]
          },
          "FontConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/FontConfiguration"
              },
              {
                "description": "The font configuration of the label."
              }
            ]
          },
          "CustomLabel": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The text for the label."
              }
            ]
          }
        },
        "description": "The share label options for the labels."
      },
      "Visibility": {
        "type": "string",
        "enum": [
          "HIDDEN",
          "VISIBLE"
        ]
      },
      "FontConfiguration": {
        "type": "object",
        "properties": {
          "FontSize": {
            "allOf": [
              {
                "$ref": "#/$defs/FontSize"
              },
              {
                "description": "The option that determines the text display size."
              }
            ]
          },
          "FontDecoration": {
            "allOf": [
              {
                "$ref": "#/$defs/FontDecoration"
              },
              {
                "description": "Determines the appearance of decorative lines on the text."
              }
            ]
          },
          "FontColor": {
            "allOf": [
              {
                "$ref": "#/$defs/HexColor"
              },
              {
                "description": "Determines the color of the text."
              }
            ]
          },
          "FontWeight": {
            "allOf": [
              {
                "$ref": "#/$defs/FontWeight"
              },
              {
                "description": "The option that determines the text display weight, or boldness."
              }
            ]
          },
          "FontStyle": {
            "allOf": [
              {
                "$ref": "#/$defs/FontStyle"
              },
              {
                "description": "Determines the text display face that is inherited by the given font family."
              }
            ]
          }
        },
        "description": "Configures the display properties of the given text."
      },
      "FontSize": {
        "type": "object",
        "properties": {
          "Relative": {
            "allOf": [
              {
                "$ref": "#/$defs/RelativeFontSize"
              },
              {
                "description": "The lexical name for the text size, proportional to its surrounding context."
              }
            ]
          }
        },
        "description": "The option that determines the text display size."
      },
      "RelativeFontSize": {
        "type": "string",
        "enum": [
          "EXTRA_SMALL",
          "SMALL",
          "MEDIUM",
          "LARGE",
          "EXTRA_LARGE"
        ]
      },
      "FontDecoration": {
        "type": "string",
        "enum": [
          "UNDERLINE",
          "NONE"
        ]
      },
      "HexColor": {
        "type": "string",
        "pattern": "^#[A-F0-9]{6}$"
      },
      "FontWeight": {
        "type": "object",
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/FontWeightName"
              },
              {
                "description": "The lexical name for the level of boldness of the text display."
              }
            ]
          }
        },
        "description": "The option that determines the text display weight, or boldness."
      },
      "FontWeightName": {
        "type": "string",
        "enum": [
          "NORMAL",
          "BOLD"
        ]
      },
      "FontStyle": {
        "type": "string",
        "enum": [
          "NORMAL",
          "ITALIC"
        ]
      },
      "String": {
        "type": "string"
      },
      "DateTimeFormat": {
        "type": "string",
        "minLength": 1,
        "maxLength": 128
      },
      "SheetControlInfoIconLabelOptions": {
        "type": "object",
        "properties": {
          "Visibility": {
            "allOf": [
              {
                "$ref": "#/$defs/Visibility"
              },
              {
                "description": "The visibility configuration of info icon label options."
              }
            ]
          },
          "InfoIconText": {
            "allOf": [
              {
                "$ref": "#/$defs/SheetControlInfoIconText"
              },
              {
                "description": " The text content of info icon."
              }
            ]
          }
        },
        "description": "A control to display info icons for filters and parameters."
      },
      "SheetControlInfoIconText": {
        "type": "string",
        "minLength": 1,
        "maxLength": 100
      },
      "ParameterListControl": {
        "type": "object",
        "required": [
          "ParameterControlId",
          "Title",
          "SourceParameterName"
        ],
        "properties": {
          "ParameterControlId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "The ID of the <code>ParameterListControl</code>."
              }
            ]
          },
          "Title": {
            "allOf": [
              {
                "$ref": "#/$defs/SheetControlTitle"
              },
              {
                "description": "The title of the <code>ParameterListControl</code>."
              }
            ]
          },
          "SourceParameterName": {
            "allOf": [
              {
                "$ref": "#/$defs/ParameterName"
              },
              {
                "description": "The source parameter name of the <code>ParameterListControl</code>."
              }
            ]
          },
          "DisplayOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/ListControlDisplayOptions"
              },
              {
                "description": "The display options of a control."
              }
            ]
          },
          "Type": {
            "allOf": [
              {
                "$ref": "#/$defs/SheetControlListType"
              },
              {
                "description": "The type of <code>ParameterListControl</code>."
              }
            ]
          },
          "SelectableValues": {
            "allOf": [
              {
                "$ref": "#/$defs/ParameterSelectableValues"
              },
              {
                "description": "A list of selectable values that are used in a control."
              }
            ]
          },
          "CascadingControlConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/CascadingControlConfiguration"
              },
              {
                "description": "The values that are displayed in a control can be configured to only show values that are valid based on what's selected in other controls."
              }
            ]
          }
        },
        "description": "A control to display a list with buttons or boxes that are used to select either a single value or multiple values."
      },
      "ListControlDisplayOptions": {
        "type": "object",
        "properties": {
          "SearchOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/ListControlSearchOptions"
              },
              {
                "description": "The configuration of the search options in a list control."
              }
            ]
          },
          "SelectAllOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/ListControlSelectAllOptions"
              },
              {
                "description": "The configuration of the <code>Select all</code> options in a list control."
              }
            ]
          },
          "TitleOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/LabelOptions"
              },
              {
                "description": "The options to configure the title visibility, name, and font size."
              }
            ]
          },
          "InfoIconLabelOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/SheetControlInfoIconLabelOptions"
              },
              {
                "description": "The configuration of info icon label options."
              }
            ]
          }
        },
        "description": "The display options of a control."
      },
      "ListControlSearchOptions": {
        "type": "object",
        "properties": {
          "Visibility": {
            "allOf": [
              {
                "$ref": "#/$defs/Visibility"
              },
              {
                "description": "The visibility configuration of the search options in a list control."
              }
            ]
          }
        },
        "description": "The configuration of the search options in a list control."
      },
      "ListControlSelectAllOptions": {
        "type": "object",
        "properties": {
          "Visibility": {
            "allOf": [
              {
                "$ref": "#/$defs/Visibility"
              },
              {
                "description": "The visibility configuration of the <code>Select all</code> options in a list control."
              }
            ]
          }
        },
        "description": "The configuration of the <code>Select all</code> options in a list control."
      },
      "SheetControlListType": {
        "type": "string",
        "enum": [
          "MULTI_SELECT",
          "SINGLE_SELECT"
        ]
      },
      "ParameterSelectableValues": {
        "type": "object",
        "properties": {
          "Values": {
            "allOf": [
              {
                "$ref": "#/$defs/ParameterSelectableValueList"
              },
              {
                "description": "The values that are used in <code>ParameterSelectableValues</code>."
              }
            ]
          },
          "LinkToDataSetColumn": {
            "allOf": [
              {
                "$ref": "#/$defs/ColumnIdentifier"
              },
              {
                "description": "The column identifier that fetches values from the data set."
              }
            ]
          }
        },
        "description": "A list of selectable values that are used in a control."
      },
      "ParameterSelectableValueList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/String"
        },
        "maxItems": 50000
      },
      "ColumnIdentifier": {
        "type": "object",
        "required": [
          "DataSetIdentifier",
          "ColumnName"
        ],
        "properties": {
          "DataSetIdentifier": {
            "allOf": [
              {
                "$ref": "#/$defs/DataSetIdentifier"
              },
              {
                "description": "The data set that the column belongs to."
              }
            ]
          },
          "ColumnName": {
            "allOf": [
              {
                "$ref": "#/$defs/ColumnName"
              },
              {
                "description": "The name of the column."
              }
            ]
          }
        },
        "description": "A column of a data set."
      },
      "ColumnName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 128
      },
      "CascadingControlConfiguration": {
        "type": "object",
        "properties": {
          "SourceControls": {
            "allOf": [
              {
                "$ref": "#/$defs/CascadingControlSourceList"
              },
              {
                "description": "A list of source controls that determine the values that are used in the current control."
              }
            ]
          }
        },
        "description": "The values that are displayed in a control can be configured to only show values that are valid based on what's selected in other controls."
      },
      "CascadingControlSourceList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/CascadingControlSource"
        },
        "maxItems": 200
      },
      "CascadingControlSource": {
        "type": "object",
        "properties": {
          "SourceSheetControlId": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The source sheet control ID of a <code>CascadingControlSource</code>."
              }
            ]
          },
          "ColumnToMatch": {
            "allOf": [
              {
                "$ref": "#/$defs/ColumnIdentifier"
              },
              {
                "description": "The column identifier that determines which column to look up for the source sheet control."
              }
            ]
          }
        },
        "description": "The source controls that are used in a <code>CascadingControlConfiguration</code>."
      },
      "ParameterDropDownControl": {
        "type": "object",
        "required": [
          "ParameterControlId",
          "Title",
          "SourceParameterName"
        ],
        "properties": {
          "ParameterControlId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "The ID of the <code>ParameterDropDownControl</code>."
              }
            ]
          },
          "Title": {
            "allOf": [
              {
                "$ref": "#/$defs/SheetControlTitle"
              },
              {
                "description": "The title of the <code>ParameterDropDownControl</code>."
              }
            ]
          },
          "SourceParameterName": {
            "allOf": [
              {
                "$ref": "#/$defs/ParameterName"
              },
              {
                "description": "The source parameter name of the <code>ParameterDropDownControl</code>."
              }
            ]
          },
          "DisplayOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/DropDownControlDisplayOptions"
              },
              {
                "description": "The display options of a control."
              }
            ]
          },
          "Type": {
            "allOf": [
              {
                "$ref": "#/$defs/SheetControlListType"
              },
              {
                "description": "The type parameter name of the <code>ParameterDropDownControl</code>."
              }
            ]
          },
          "SelectableValues": {
            "allOf": [
              {
                "$ref": "#/$defs/ParameterSelectableValues"
              },
              {
                "description": "A list of selectable values that are used in a control."
              }
            ]
          },
          "CascadingControlConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/CascadingControlConfiguration"
              },
              {
                "description": "The values that are displayed in a control can be configured to only show values that are valid based on what's selected in other controls."
              }
            ]
          }
        },
        "description": "A control to display a dropdown list with buttons that are used to select a single value."
      },
      "DropDownControlDisplayOptions": {
        "type": "object",
        "properties": {
          "SelectAllOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/ListControlSelectAllOptions"
              },
              {
                "description": "The configuration of the <code>Select all</code> options in a dropdown control."
              }
            ]
          },
          "TitleOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/LabelOptions"
              },
              {
                "description": "The options to configure the title visibility, name, and font size."
              }
            ]
          },
          "InfoIconLabelOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/SheetControlInfoIconLabelOptions"
              },
              {
                "description": "The configuration of info icon label options."
              }
            ]
          }
        },
        "description": "The display options of a control."
      },
      "ParameterTextFieldControl": {
        "type": "object",
        "required": [
          "ParameterControlId",
          "Title",
          "SourceParameterName"
        ],
        "properties": {
          "ParameterControlId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "The ID of the <code>ParameterTextFieldControl</code>."
              }
            ]
          },
          "Title": {
            "allOf": [
              {
                "$ref": "#/$defs/SheetControlTitle"
              },
              {
                "description": "The title of the <code>ParameterTextFieldControl</code>."
              }
            ]
          },
          "SourceParameterName": {
            "allOf": [
              {
                "$ref": "#/$defs/ParameterName"
              },
              {
                "description": "The source parameter name of the <code>ParameterTextFieldControl</code>."
              }
            ]
          },
          "DisplayOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/TextFieldControlDisplayOptions"
              },
              {
                "description": "The display options of a control."
              }
            ]
          }
        },
        "description": "A control to display a text box that is used to enter a single entry."
      },
      "TextFieldControlDisplayOptions": {
        "type": "object",
        "properties": {
          "TitleOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/LabelOptions"
              },
              {
                "description": "The options to configure the title visibility, name, and font size."
              }
            ]
          },
          "PlaceholderOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/TextControlPlaceholderOptions"
              },
              {
                "description": "The configuration of the placeholder options in a text field control."
              }
            ]
          },
          "InfoIconLabelOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/SheetControlInfoIconLabelOptions"
              },
              {
                "description": "The configuration of info icon label options."
              }
            ]
          }
        },
        "description": "The display options of a control."
      },
      "TextControlPlaceholderOptions": {
        "type": "object",
        "properties": {
          "Visibility": {
            "allOf": [
              {
                "$ref": "#/$defs/Visibility"
              },
              {
                "description": "The visibility configuration of the placeholder options in a text control."
              }
            ]
          }
        },
        "description": "The configuration of the placeholder options in a text control."
      },
      "ParameterTextAreaControl": {
        "type": "object",
        "required": [
          "ParameterControlId",
          "Title",
          "SourceParameterName"
        ],
        "properties": {
          "ParameterControlId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "The ID of the <code>ParameterTextAreaControl</code>."
              }
            ]
          },
          "Title": {
            "allOf": [
              {
                "$ref": "#/$defs/SheetControlTitle"
              },
              {
                "description": "The title of the <code>ParameterTextAreaControl</code>."
              }
            ]
          },
          "SourceParameterName": {
            "allOf": [
              {
                "$ref": "#/$defs/ParameterName"
              },
              {
                "description": "The source parameter name of the <code>ParameterTextAreaControl</code>."
              }
            ]
          },
          "Delimiter": {
            "allOf": [
              {
                "$ref": "#/$defs/TextAreaControlDelimiter"
              },
              {
                "description": "The delimiter that is used to separate the lines in text."
              }
            ]
          },
          "DisplayOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/TextAreaControlDisplayOptions"
              },
              {
                "description": "The display options of a control."
              }
            ]
          }
        },
        "description": "A control to display a text box that is used to enter multiple entries."
      },
      "TextAreaControlDelimiter": {
        "type": "string",
        "minLength": 1,
        "maxLength": 2048
      },
      "TextAreaControlDisplayOptions": {
        "type": "object",
        "properties": {
          "TitleOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/LabelOptions"
              },
              {
                "description": "The options to configure the title visibility, name, and font size."
              }
            ]
          },
          "PlaceholderOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/TextControlPlaceholderOptions"
              },
              {
                "description": "The configuration of the placeholder options in a text area control."
              }
            ]
          },
          "InfoIconLabelOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/SheetControlInfoIconLabelOptions"
              },
              {
                "description": "The configuration of info icon label options."
              }
            ]
          }
        },
        "description": "The display options of a control."
      },
      "ParameterSliderControl": {
        "type": "object",
        "required": [
          "ParameterControlId",
          "Title",
          "SourceParameterName",
          "MaximumValue",
          "MinimumValue",
          "StepSize"
        ],
        "properties": {
          "ParameterControlId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "The ID of the <code>ParameterSliderControl</code>."
              }
            ]
          },
          "Title": {
            "allOf": [
              {
                "$ref": "#/$defs/SheetControlTitle"
              },
              {
                "description": "The title of the <code>ParameterSliderControl</code>."
              }
            ]
          },
          "SourceParameterName": {
            "allOf": [
              {
                "$ref": "#/$defs/ParameterName"
              },
              {
                "description": "The source parameter name of the <code>ParameterSliderControl</code>."
              }
            ]
          },
          "DisplayOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/SliderControlDisplayOptions"
              },
              {
                "description": "The display options of a control."
              }
            ]
          },
          "MaximumValue": {
            "allOf": [
              {
                "$ref": "#/$defs/Double"
              },
              {
                "description": "The smaller value that is displayed at the left of the slider."
              }
            ]
          },
          "MinimumValue": {
            "allOf": [
              {
                "$ref": "#/$defs/Double"
              },
              {
                "description": "The larger value that is displayed at the right of the slider."
              }
            ]
          },
          "StepSize": {
            "allOf": [
              {
                "$ref": "#/$defs/Double"
              },
              {
                "description": "The number of increments that the slider bar is divided into."
              }
            ]
          }
        },
        "description": "A control to display a horizontal toggle bar. This is used to change a value by sliding the toggle."
      },
      "SliderControlDisplayOptions": {
        "type": "object",
        "properties": {
          "TitleOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/LabelOptions"
              },
              {
                "description": "The options to configure the title visibility, name, and font size."
              }
            ]
          },
          "InfoIconLabelOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/SheetControlInfoIconLabelOptions"
              },
              {
                "description": "The configuration of info icon label options."
              }
            ]
          }
        },
        "description": "The display options of a control."
      },
      "Double": {
        "type": "number",
        "format": "double"
      },
      "FilterControlList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/FilterControl"
        },
        "maxItems": 200
      },
      "FilterControl": {
        "type": "object",
        "properties": {
          "DateTimePicker": {
            "allOf": [
              {
                "$ref": "#/$defs/FilterDateTimePickerControl"
              },
              {
                "description": "A control from a date filter that is used to specify date and time."
              }
            ]
          },
          "List": {
            "allOf": [
              {
                "$ref": "#/$defs/FilterListControl"
              },
              {
                "description": "A control to display a list of buttons or boxes. This is used to select either a single value or multiple values."
              }
            ]
          },
          "Dropdown": {
            "allOf": [
              {
                "$ref": "#/$defs/FilterDropDownControl"
              },
              {
                "description": "A control to display a dropdown list with buttons that are used to select a single value."
              }
            ]
          },
          "TextField": {
            "allOf": [
              {
                "$ref": "#/$defs/FilterTextFieldControl"
              },
              {
                "description": "A control to display a text box that is used to enter a single entry."
              }
            ]
          },
          "TextArea": {
            "allOf": [
              {
                "$ref": "#/$defs/FilterTextAreaControl"
              },
              {
                "description": "A control to display a text box that is used to enter multiple entries."
              }
            ]
          },
          "Slider": {
            "allOf": [
              {
                "$ref": "#/$defs/FilterSliderControl"
              },
              {
                "description": "A control to display a horizontal toggle bar. This is used to change a value by sliding the toggle."
              }
            ]
          },
          "RelativeDateTime": {
            "allOf": [
              {
                "$ref": "#/$defs/FilterRelativeDateTimeControl"
              },
              {
                "description": "A control from a date filter that is used to specify the relative date."
              }
            ]
          }
        },
        "description": "<p>The control of a filter that is used to interact with a dashboard or an analysis.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>"
      },
      "FilterDateTimePickerControl": {
        "type": "object",
        "required": [
          "FilterControlId",
          "Title",
          "SourceFilterId"
        ],
        "properties": {
          "FilterControlId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "The ID of the <code>FilterDateTimePickerControl</code>."
              }
            ]
          },
          "Title": {
            "allOf": [
              {
                "$ref": "#/$defs/SheetControlTitle"
              },
              {
                "description": "The title of the <code>FilterDateTimePickerControl</code>."
              }
            ]
          },
          "SourceFilterId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "The source filter ID of the <code>FilterDateTimePickerControl</code>."
              }
            ]
          },
          "DisplayOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/DateTimePickerControlDisplayOptions"
              },
              {
                "description": "The display options of a control."
              }
            ]
          },
          "Type": {
            "allOf": [
              {
                "$ref": "#/$defs/SheetControlDateTimePickerType"
              },
              {
                "description": "<p>The date time picker type of a <code>FilterDateTimePickerControl</code>. Choose one of the following options:</p> <ul> <li> <p> <code>SINGLE_VALUED</code>: The filter condition is a fixed date.</p> </li> <li> <p> <code>DATE_RANGE</code>: The filter condition is a date time range.</p> </li> </ul>"
              }
            ]
          }
        },
        "description": "A control from a date filter that is used to specify date and time."
      },
      "SheetControlDateTimePickerType": {
        "type": "string",
        "enum": [
          "SINGLE_VALUED",
          "DATE_RANGE"
        ]
      },
      "FilterListControl": {
        "type": "object",
        "required": [
          "FilterControlId",
          "Title",
          "SourceFilterId"
        ],
        "properties": {
          "FilterControlId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "The ID of the <code>FilterListControl</code>."
              }
            ]
          },
          "Title": {
            "allOf": [
              {
                "$ref": "#/$defs/SheetControlTitle"
              },
              {
                "description": "The title of the <code>FilterListControl</code>."
              }
            ]
          },
          "SourceFilterId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "The source filter ID of the <code>FilterListControl</code>."
              }
            ]
          },
          "DisplayOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/ListControlDisplayOptions"
              },
              {
                "description": "The display options of a control."
              }
            ]
          },
          "Type": {
            "allOf": [
              {
                "$ref": "#/$defs/SheetControlListType"
              },
              {
                "description": "<p>The type of <code>FilterListControl</code>. Choose one of the following options:</p> <ul> <li> <p> <code>MULTI_SELECT</code>: The user can select multiple entries from the list.</p> </li> <li> <p> <code>SINGLE_SELECT</code>: The user can select a single entry from the list.</p> </li> </ul>"
              }
            ]
          },
          "SelectableValues": {
            "allOf": [
              {
                "$ref": "#/$defs/FilterSelectableValues"
              },
              {
                "description": "A list of selectable values that are used in a control."
              }
            ]
          },
          "CascadingControlConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/CascadingControlConfiguration"
              },
              {
                "description": "The values that are displayed in a control can be configured to only show values that are valid based on what's selected in other controls."
              }
            ]
          }
        },
        "description": "A control to display a list of buttons or boxes. This is used to select either a single value or multiple values."
      },
      "FilterSelectableValues": {
        "type": "object",
        "properties": {
          "Values": {
            "allOf": [
              {
                "$ref": "#/$defs/ParameterSelectableValueList"
              },
              {
                "description": "The values that are used in the <code>FilterSelectableValues</code>."
              }
            ]
          }
        },
        "description": "A list of selectable values that are used in a control."
      },
      "FilterDropDownControl": {
        "type": "object",
        "required": [
          "FilterControlId",
          "Title",
          "SourceFilterId"
        ],
        "properties": {
          "FilterControlId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "The ID of the <code>FilterDropDownControl</code>."
              }
            ]
          },
          "Title": {
            "allOf": [
              {
                "$ref": "#/$defs/SheetControlTitle"
              },
              {
                "description": "The title of the <code>FilterDropDownControl</code>."
              }
            ]
          },
          "SourceFilterId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "The source filter ID of the <code>FilterDropDownControl</code>."
              }
            ]
          },
          "DisplayOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/DropDownControlDisplayOptions"
              },
              {
                "description": "The display options of the <code>FilterDropDownControl</code>."
              }
            ]
          },
          "Type": {
            "allOf": [
              {
                "$ref": "#/$defs/SheetControlListType"
              },
              {
                "description": "<p>The type of the <code>FilterDropDownControl</code>. Choose one of the following options:</p> <ul> <li> <p> <code>MULTI_SELECT</code>: The user can select multiple entries from a dropdown menu.</p> </li> <li> <p> <code>SINGLE_SELECT</code>: The user can select a single entry from a dropdown menu.</p> </li> </ul>"
              }
            ]
          },
          "SelectableValues": {
            "allOf": [
              {
                "$ref": "#/$defs/FilterSelectableValues"
              },
              {
                "description": "A list of selectable values that are used in a control."
              }
            ]
          },
          "CascadingControlConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/CascadingControlConfiguration"
              },
              {
                "description": "The values that are displayed in a control can be configured to only show values that are valid based on what's selected in other controls."
              }
            ]
          }
        },
        "description": "A control to display a dropdown list with buttons that are used to select a single value."
      },
      "FilterTextFieldControl": {
        "type": "object",
        "required": [
          "FilterControlId",
          "Title",
          "SourceFilterId"
        ],
        "properties": {
          "FilterControlId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "The ID of the <code>FilterTextFieldControl</code>."
              }
            ]
          },
          "Title": {
            "allOf": [
              {
                "$ref": "#/$defs/SheetControlTitle"
              },
              {
                "description": "The title of the <code>FilterTextFieldControl</code>."
              }
            ]
          },
          "SourceFilterId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "The source filter ID of the <code>FilterTextFieldControl</code>."
              }
            ]
          },
          "DisplayOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/TextFieldControlDisplayOptions"
              },
              {
                "description": "The display options of a control."
              }
            ]
          }
        },
        "description": "A control to display a text box that is used to enter a single entry."
      },
      "FilterTextAreaControl": {
        "type": "object",
        "required": [
          "FilterControlId",
          "Title",
          "SourceFilterId"
        ],
        "properties": {
          "FilterControlId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "The ID of the <code>FilterTextAreaControl</code>."
              }
            ]
          },
          "Title": {
            "allOf": [
              {
                "$ref": "#/$defs/SheetControlTitle"
              },
              {
                "description": "The title of the <code>FilterTextAreaControl</code>."
              }
            ]
          },
          "SourceFilterId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "The source filter ID of the <code>FilterTextAreaControl</code>."
              }
            ]
          },
          "Delimiter": {
            "allOf": [
              {
                "$ref": "#/$defs/TextAreaControlDelimiter"
              },
              {
                "description": "The delimiter that is used to separate the lines in text."
              }
            ]
          },
          "DisplayOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/TextAreaControlDisplayOptions"
              },
              {
                "description": "The display options of a control."
              }
            ]
          }
        },
        "description": "A control to display a text box that is used to enter multiple entries."
      },
      "FilterSliderControl": {
        "type": "object",
        "required": [
          "FilterControlId",
          "Title",
          "SourceFilterId",
          "MaximumValue",
          "MinimumValue",
          "StepSize"
        ],
        "properties": {
          "FilterControlId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "The ID of the <code>FilterSliderControl</code>."
              }
            ]
          },
          "Title": {
            "allOf": [
              {
                "$ref": "#/$defs/SheetControlTitle"
              },
              {
                "description": "The title of the <code>FilterSliderControl</code>."
              }
            ]
          },
          "SourceFilterId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "The source filter ID of the <code>FilterSliderControl</code>."
              }
            ]
          },
          "DisplayOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/SliderControlDisplayOptions"
              },
              {
                "description": "The display options of a control."
              }
            ]
          },
          "Type": {
            "allOf": [
              {
                "$ref": "#/$defs/SheetControlSliderType"
              },
              {
                "description": "<p>The type of <code>FilterSliderControl</code>. Choose one of the following options:</p> <ul> <li> <p> <code>SINGLE_POINT</code>: Filter against(equals) a single data point.</p> </li> <li> <p> <code>RANGE</code>: Filter data that is in a specified range.</p> </li> </ul>"
              }
            ]
          },
          "MaximumValue": {
            "allOf": [
              {
                "$ref": "#/$defs/Double"
              },
              {
                "description": "The smaller value that is displayed at the left of the slider."
              }
            ]
          },
          "MinimumValue": {
            "allOf": [
              {
                "$ref": "#/$defs/Double"
              },
              {
                "description": "The larger value that is displayed at the right of the slider."
              }
            ]
          },
          "StepSize": {
            "allOf": [
              {
                "$ref": "#/$defs/Double"
              },
              {
                "description": "The number of increments that the slider bar is divided into."
              }
            ]
          }
        },
        "description": "A control to display a horizontal toggle bar. This is used to change a value by sliding the toggle."
      },
      "SheetControlSliderType": {
        "type": "string",
        "enum": [
          "SINGLE_POINT",
          "RANGE"
        ]
      },
      "FilterRelativeDateTimeControl": {
        "type": "object",
        "required": [
          "FilterControlId",
          "Title",
          "SourceFilterId"
        ],
        "properties": {
          "FilterControlId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "The ID of the <code>FilterTextAreaControl</code>."
              }
            ]
          },
          "Title": {
            "allOf": [
              {
                "$ref": "#/$defs/SheetControlTitle"
              },
              {
                "description": "The title of the <code>FilterTextAreaControl</code>."
              }
            ]
          },
          "SourceFilterId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "The source filter ID of the <code>FilterTextAreaControl</code>."
              }
            ]
          },
          "DisplayOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/RelativeDateTimeControlDisplayOptions"
              },
              {
                "description": "The display options of a control."
              }
            ]
          }
        },
        "description": "A control from a date filter that is used to specify the relative date."
      },
      "RelativeDateTimeControlDisplayOptions": {
        "type": "object",
        "properties": {
          "TitleOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/LabelOptions"
              },
              {
                "description": "The options to configure the title visibility, name, and font size."
              }
            ]
          },
          "DateTimeFormat": {
            "allOf": [
              {
                "$ref": "#/$defs/DateTimeFormat"
              },
              {
                "description": "Customize how dates are formatted in controls."
              }
            ]
          },
          "InfoIconLabelOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/SheetControlInfoIconLabelOptions"
              },
              {
                "description": "The configuration of info icon label options."
              }
            ]
          }
        },
        "description": "The display options of a control."
      },
      "VisualList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Visual"
        },
        "maxItems": 50
      },
      "Visual": {
        "type": "object",
        "properties": {
          "TableVisual": {
            "allOf": [
              {
                "$ref": "#/$defs/TableVisual"
              },
              {
                "description": "<p>A table visual.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/tabular.html\">Using tables as visuals</a> in the <i>Amazon QuickSight User Guide</i>.</p>"
              }
            ]
          },
          "PivotTableVisual": {
            "allOf": [
              {
                "$ref": "#/$defs/PivotTableVisual"
              },
              {
                "description": "<p>A pivot table.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/pivot-table.html\">Using pivot tables</a> in the <i>Amazon QuickSight User Guide</i>.</p>"
              }
            ]
          },
          "BarChartVisual": {
            "allOf": [
              {
                "$ref": "#/$defs/BarChartVisual"
              },
              {
                "description": "<p>A bar chart.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/bar-charts.html\">Using bar charts</a> in the <i>Amazon QuickSight User Guide</i>.</p>"
              }
            ]
          },
          "KPIVisual": {
            "allOf": [
              {
                "$ref": "#/$defs/KPIVisual"
              },
              {
                "description": "<p>A key performance indicator (KPI).</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/kpi.html\">Using KPIs</a> in the <i>Amazon QuickSight User Guide</i>.</p>"
              }
            ]
          },
          "PieChartVisual": {
            "allOf": [
              {
                "$ref": "#/$defs/PieChartVisual"
              },
              {
                "description": "<p>A pie or donut chart.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/pie-chart.html\">Using pie charts</a> in the <i>Amazon QuickSight User Guide</i>.</p>"
              }
            ]
          },
          "GaugeChartVisual": {
            "allOf": [
              {
                "$ref": "#/$defs/GaugeChartVisual"
              },
              {
                "description": "<p>A gauge chart.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/gauge-chart.html\">Using gauge charts</a> in the <i>Amazon QuickSight User Guide</i>.</p>"
              }
            ]
          },
          "LineChartVisual": {
            "allOf": [
              {
                "$ref": "#/$defs/LineChartVisual"
              },
              {
                "description": "<p>A line chart.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/line-charts.html\">Using line charts</a> in the <i>Amazon QuickSight User Guide</i>.</p>"
              }
            ]
          },
          "HeatMapVisual": {
            "allOf": [
              {
                "$ref": "#/$defs/HeatMapVisual"
              },
              {
                "description": "<p>A heat map.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/heat-map.html\">Using heat maps</a> in the <i>Amazon QuickSight User Guide</i>.</p>"
              }
            ]
          },
          "TreeMapVisual": {
            "allOf": [
              {
                "$ref": "#/$defs/TreeMapVisual"
              },
              {
                "description": "<p>A tree map.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/tree-map.html\">Using tree maps</a> in the <i>Amazon QuickSight User Guide</i>.</p>"
              }
            ]
          },
          "GeospatialMapVisual": {
            "allOf": [
              {
                "$ref": "#/$defs/GeospatialMapVisual"
              },
              {
                "description": "<p>A geospatial map or a points on map visual.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/point-maps.html\">Creating point maps</a> in the <i>Amazon QuickSight User Guide</i>.</p>"
              }
            ]
          },
          "FilledMapVisual": {
            "allOf": [
              {
                "$ref": "#/$defs/FilledMapVisual"
              },
              {
                "description": "<p>A filled map.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/filled-maps.html\">Creating filled maps</a> in the <i>Amazon QuickSight User Guide</i>.</p>"
              }
            ]
          },
          "FunnelChartVisual": {
            "allOf": [
              {
                "$ref": "#/$defs/FunnelChartVisual"
              },
              {
                "description": "<p>A funnel chart.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/funnel-visual-content.html\">Using funnel charts</a> in the <i>Amazon QuickSight User Guide</i>.</p>"
              }
            ]
          },
          "ScatterPlotVisual": {
            "allOf": [
              {
                "$ref": "#/$defs/ScatterPlotVisual"
              },
              {
                "description": "<p>A scatter plot.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/scatter-plot.html\">Using scatter plots</a> in the <i>Amazon QuickSight User Guide</i>.</p>"
              }
            ]
          },
          "ComboChartVisual": {
            "allOf": [
              {
                "$ref": "#/$defs/ComboChartVisual"
              },
              {
                "description": "<p>A combo chart.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/combo-charts.html\">Using combo charts</a> in the <i>Amazon QuickSight User Guide</i>.</p>"
              }
            ]
          },
          "BoxPlotVisual": {
            "allOf": [
              {
                "$ref": "#/$defs/BoxPlotVisual"
              },
              {
                "description": "<p>A box plot.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/box-plots.html\">Using box plots</a> in the <i>Amazon QuickSight User Guide</i>.</p>"
              }
            ]
          },
          "WaterfallVisual": {
            "allOf": [
              {
                "$ref": "#/$defs/WaterfallVisual"
              },
              {
                "description": "<p>A waterfall chart.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/waterfall-chart.html\">Using waterfall charts</a> in the <i>Amazon QuickSight User Guide</i>.</p>"
              }
            ]
          },
          "HistogramVisual": {
            "allOf": [
              {
                "$ref": "#/$defs/HistogramVisual"
              },
              {
                "description": "<p>A histogram.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/histogram-charts.html\">Using histograms</a> in the <i>Amazon QuickSight User Guide</i>.</p>"
              }
            ]
          },
          "WordCloudVisual": {
            "allOf": [
              {
                "$ref": "#/$defs/WordCloudVisual"
              },
              {
                "description": "<p>A word cloud.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/word-cloud.html\">Using word clouds</a> in the <i>Amazon QuickSight User Guide</i>.</p>"
              }
            ]
          },
          "InsightVisual": {
            "allOf": [
              {
                "$ref": "#/$defs/InsightVisual"
              },
              {
                "description": "<p>An insight visual.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/computational-insights.html\">Working with insights</a> in the <i>Amazon QuickSight User Guide</i>.</p>"
              }
            ]
          },
          "SankeyDiagramVisual": {
            "allOf": [
              {
                "$ref": "#/$defs/SankeyDiagramVisual"
              },
              {
                "description": "<p>A sankey diagram.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/sankey-diagram.html\">Using Sankey diagrams</a> in the <i>Amazon QuickSight User Guide</i>.</p>"
              }
            ]
          },
          "CustomContentVisual": {
            "allOf": [
              {
                "$ref": "#/$defs/CustomContentVisual"
              },
              {
                "description": "<p>A visual that contains custom content.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/custom-visual-content.html\">Using custom visual content</a> in the <i>Amazon QuickSight User Guide</i>.</p>"
              }
            ]
          },
          "EmptyVisual": {
            "allOf": [
              {
                "$ref": "#/$defs/EmptyVisual"
              },
              {
                "description": "An empty visual."
              }
            ]
          },
          "RadarChartVisual": {
            "allOf": [
              {
                "$ref": "#/$defs/RadarChartVisual"
              },
              {
                "description": "<p>A radar chart visual.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/radar-chart.html\">Using radar charts</a> in the <i>Amazon QuickSight User Guide</i>.</p>"
              }
            ]
          }
        },
        "description": "<p>A visual displayed on a sheet in an analysis, dashboard, or template.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>"
      },
      "TableVisual": {
        "type": "object",
        "required": [
          "VisualId"
        ],
        "properties": {
          "VisualId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "The unique identifier of a visual. This identifier must be unique within the context of a dashboard, template, or analysis. Two dashboards, analyses, or templates can have visuals with the same identifiers.."
              }
            ]
          },
          "Title": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualTitleLabelOptions"
              },
              {
                "description": "The title that is displayed on the visual."
              }
            ]
          },
          "Subtitle": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualSubtitleLabelOptions"
              },
              {
                "description": "The subtitle that is displayed on the visual."
              }
            ]
          },
          "ChartConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/TableConfiguration"
              },
              {
                "description": "The configuration settings of the visual."
              }
            ]
          },
          "ConditionalFormatting": {
            "allOf": [
              {
                "$ref": "#/$defs/TableConditionalFormatting"
              },
              {
                "description": "The conditional formatting for a <code>PivotTableVisual</code>."
              }
            ]
          },
          "Actions": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualCustomActionList"
              },
              {
                "description": "The list of custom actions that are configured for a visual."
              }
            ]
          }
        },
        "description": "<p>A table visual.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/tabular.html\">Using tables as visuals</a> in the <i>Amazon QuickSight User Guide</i>.</p>"
      },
      "VisualTitleLabelOptions": {
        "type": "object",
        "properties": {
          "Visibility": {
            "allOf": [
              {
                "$ref": "#/$defs/Visibility"
              },
              {
                "description": "The visibility of the title label."
              }
            ]
          },
          "FormatText": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortFormatText"
              },
              {
                "description": "The short text format of the title label, such as plain text or rich text."
              }
            ]
          }
        },
        "description": "The title label options for a visual."
      },
      "ShortFormatText": {
        "type": "object",
        "properties": {
          "PlainText": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortPlainText"
              },
              {
                "description": "Plain text format."
              }
            ]
          },
          "RichText": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRichText"
              },
              {
                "description": "Rich text. Examples of rich text include bold, underline, and italics."
              }
            ]
          }
        },
        "description": "<p>The text format for the title.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>"
      },
      "ShortPlainText": {
        "type": "string",
        "minLength": 1,
        "maxLength": 512
      },
      "ShortRichText": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1024
      },
      "VisualSubtitleLabelOptions": {
        "type": "object",
        "properties": {
          "Visibility": {
            "allOf": [
              {
                "$ref": "#/$defs/Visibility"
              },
              {
                "description": "The visibility of the subtitle label."
              }
            ]
          },
          "FormatText": {
            "allOf": [
              {
                "$ref": "#/$defs/LongFormatText"
              },
              {
                "description": "The long text format of the subtitle label, such as plain text or rich text."
              }
            ]
          }
        },
        "description": "The subtitle label options for a visual."
      },
      "LongFormatText": {
        "type": "object",
        "properties": {
          "PlainText": {
            "allOf": [
              {
                "$ref": "#/$defs/LongPlainText"
              },
              {
                "description": "Plain text format."
              }
            ]
          },
          "RichText": {
            "allOf": [
              {
                "$ref": "#/$defs/LongRichText"
              },
              {
                "description": "Rich text. Examples of rich text include bold, underline, and italics."
              }
            ]
          }
        },
        "description": "<p>The text format for a subtitle.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>"
      },
      "LongPlainText": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1024
      },
      "LongRichText": {
        "type": "string",
        "minLength": 1,
        "maxLength": 2048
      },
      "TableConfiguration": {
        "type": "object",
        "properties": {
          "FieldWells": {
            "allOf": [
              {
                "$ref": "#/$defs/TableFieldWells"
              },
              {
                "description": "The field wells of the visual."
              }
            ]
          },
          "SortConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/TableSortConfiguration"
              },
              {
                "description": "The sort configuration for a <code>TableVisual</code>."
              }
            ]
          },
          "TableOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/TableOptions"
              },
              {
                "description": "The table options for a table visual."
              }
            ]
          },
          "TotalOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/TotalOptions"
              },
              {
                "description": "The total options for a table visual."
              }
            ]
          },
          "FieldOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/TableFieldOptions"
              },
              {
                "description": "The field options for a table visual."
              }
            ]
          },
          "PaginatedReportOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/TablePaginatedReportOptions"
              },
              {
                "description": "The paginated report options for a table visual."
              }
            ]
          },
          "TableInlineVisualizations": {
            "allOf": [
              {
                "$ref": "#/$defs/TableInlineVisualizationList"
              },
              {
                "description": "A collection of inline visualizations to display within a chart."
              }
            ]
          }
        },
        "description": "The configuration for a <code>TableVisual</code>."
      },
      "TableFieldWells": {
        "type": "object",
        "properties": {
          "TableAggregatedFieldWells": {
            "allOf": [
              {
                "$ref": "#/$defs/TableAggregatedFieldWells"
              },
              {
                "description": "The aggregated field well for the table."
              }
            ]
          },
          "TableUnaggregatedFieldWells": {
            "allOf": [
              {
                "$ref": "#/$defs/TableUnaggregatedFieldWells"
              },
              {
                "description": "The unaggregated field well for the table."
              }
            ]
          }
        },
        "description": "<p>The field wells for a table visual.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>"
      },
      "TableAggregatedFieldWells": {
        "type": "object",
        "properties": {
          "GroupBy": {
            "allOf": [
              {
                "$ref": "#/$defs/DimensionFieldList"
              },
              {
                "description": "The group by field well for a pivot table. Values are grouped by group by fields."
              }
            ]
          },
          "Values": {
            "allOf": [
              {
                "$ref": "#/$defs/MeasureFieldList"
              },
              {
                "description": "The values field well for a pivot table. Values are aggregated based on group by fields."
              }
            ]
          }
        },
        "description": "The aggregated field well for the table."
      },
      "DimensionFieldList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/DimensionField"
        },
        "maxItems": 200
      },
      "DimensionField": {
        "type": "object",
        "properties": {
          "NumericalDimensionField": {
            "allOf": [
              {
                "$ref": "#/$defs/NumericalDimensionField"
              },
              {
                "description": "The dimension type field with numerical type columns."
              }
            ]
          },
          "CategoricalDimensionField": {
            "allOf": [
              {
                "$ref": "#/$defs/CategoricalDimensionField"
              },
              {
                "description": "The dimension type field with categorical type columns."
              }
            ]
          },
          "DateDimensionField": {
            "allOf": [
              {
                "$ref": "#/$defs/DateDimensionField"
              },
              {
                "description": "The dimension type field with date type columns."
              }
            ]
          }
        },
        "description": "The dimension type field."
      },
      "NumericalDimensionField": {
        "type": "object",
        "required": [
          "FieldId",
          "Column"
        ],
        "properties": {
          "FieldId": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldId"
              },
              {
                "description": "The custom field ID."
              }
            ]
          },
          "Column": {
            "allOf": [
              {
                "$ref": "#/$defs/ColumnIdentifier"
              },
              {
                "description": "The column that is used in the <code>NumericalDimensionField</code>."
              }
            ]
          },
          "HierarchyId": {
            "allOf": [
              {
                "$ref": "#/$defs/HierarchyId"
              },
              {
                "description": "The custom hierarchy ID."
              }
            ]
          },
          "FormatConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/NumberFormatConfiguration"
              },
              {
                "description": "The format configuration of the field."
              }
            ]
          }
        },
        "description": "The dimension type field with numerical type columns."
      },
      "FieldId": {
        "type": "string",
        "minLength": 1,
        "maxLength": 512
      },
      "HierarchyId": {
        "type": "string",
        "minLength": 1,
        "maxLength": 512
      },
      "NumberFormatConfiguration": {
        "type": "object",
        "properties": {
          "FormatConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/NumericFormatConfiguration"
              },
              {
                "description": "The options that determine the numeric format configuration."
              }
            ]
          }
        },
        "description": "Formatting configuration for number fields."
      },
      "NumericFormatConfiguration": {
        "type": "object",
        "properties": {
          "NumberDisplayFormatConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/NumberDisplayFormatConfiguration"
              },
              {
                "description": "The options that determine the number display format configuration."
              }
            ]
          },
          "CurrencyDisplayFormatConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/CurrencyDisplayFormatConfiguration"
              },
              {
                "description": "The options that determine the currency display format configuration."
              }
            ]
          },
          "PercentageDisplayFormatConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/PercentageDisplayFormatConfiguration"
              },
              {
                "description": "The options that determine the percentage display format configuration."
              }
            ]
          }
        },
        "description": "<p>The options that determine the numeric format configuration.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>"
      },
      "NumberDisplayFormatConfiguration": {
        "type": "object",
        "properties": {
          "Prefix": {
            "allOf": [
              {
                "$ref": "#/$defs/Prefix"
              },
              {
                "description": "Determines the prefix value of the number format."
              }
            ]
          },
          "Suffix": {
            "allOf": [
              {
                "$ref": "#/$defs/Suffix"
              },
              {
                "description": "Determines the suffix value of the number format."
              }
            ]
          },
          "SeparatorConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/NumericSeparatorConfiguration"
              },
              {
                "description": "The options that determine the numeric separator configuration."
              }
            ]
          },
          "DecimalPlacesConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/DecimalPlacesConfiguration"
              },
              {
                "description": "The option that determines the decimal places configuration."
              }
            ]
          },
          "NumberScale": {
            "allOf": [
              {
                "$ref": "#/$defs/NumberScale"
              },
              {
                "description": "Determines the number scale value of the number format."
              }
            ]
          },
          "NegativeValueConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/NegativeValueConfiguration"
              },
              {
                "description": "The options that determine the negative value configuration."
              }
            ]
          },
          "NullValueFormatConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/NullValueFormatConfiguration"
              },
              {
                "description": "The options that determine the null value format configuration."
              }
            ]
          }
        },
        "description": "The options that determine the number display format configuration."
      },
      "Prefix": {
        "type": "string",
        "minLength": 1,
        "maxLength": 128,
        "format": "password"
      },
      "Suffix": {
        "type": "string",
        "minLength": 1,
        "maxLength": 128,
        "format": "password"
      },
      "NumericSeparatorConfiguration": {
        "type": "object",
        "properties": {
          "DecimalSeparator": {
            "allOf": [
              {
                "$ref": "#/$defs/NumericSeparatorSymbol"
              },
              {
                "description": "Determines the decimal separator."
              }
            ]
          },
          "ThousandsSeparator": {
            "allOf": [
              {
                "$ref": "#/$defs/ThousandSeparatorOptions"
              },
              {
                "description": "The options that determine the thousands separator configuration."
              }
            ]
          }
        },
        "description": "The options that determine the numeric separator configuration."
      },
      "NumericSeparatorSymbol": {
        "type": "string",
        "enum": [
          "COMMA",
          "DOT",
          "SPACE"
        ]
      },
      "ThousandSeparatorOptions": {
        "type": "object",
        "properties": {
          "Symbol": {
            "allOf": [
              {
                "$ref": "#/$defs/NumericSeparatorSymbol"
              },
              {
                "description": "Determines the thousands separator symbol."
              }
            ]
          },
          "Visibility": {
            "allOf": [
              {
                "$ref": "#/$defs/Visibility"
              },
              {
                "description": "Determines the visibility of the thousands separator."
              }
            ]
          }
        },
        "description": "The options that determine the thousands separator configuration."
      },
      "DecimalPlacesConfiguration": {
        "type": "object",
        "required": [
          "DecimalPlaces"
        ],
        "properties": {
          "DecimalPlaces": {
            "allOf": [
              {
                "$ref": "#/$defs/DecimalPlaces"
              },
              {
                "description": "The values of the decimal places."
              }
            ]
          }
        },
        "description": "The option that determines the decimal places configuration."
      },
      "DecimalPlaces": {
        "type": "integer",
        "minimum": 0,
        "maximum": 20
      },
      "NumberScale": {
        "type": "string",
        "enum": [
          "NONE",
          "AUTO",
          "THOUSANDS",
          "MILLIONS",
          "BILLIONS",
          "TRILLIONS"
        ]
      },
      "NegativeValueConfiguration": {
        "type": "object",
        "required": [
          "DisplayMode"
        ],
        "properties": {
          "DisplayMode": {
            "allOf": [
              {
                "$ref": "#/$defs/NegativeValueDisplayMode"
              },
              {
                "description": "Determines the display mode of the negative value configuration."
              }
            ]
          }
        },
        "description": "The options that determine the negative value configuration."
      },
      "NegativeValueDisplayMode": {
        "type": "string",
        "enum": [
          "POSITIVE",
          "NEGATIVE"
        ]
      },
      "NullValueFormatConfiguration": {
        "type": "object",
        "required": [
          "NullString"
        ],
        "properties": {
          "NullString": {
            "allOf": [
              {
                "$ref": "#/$defs/NullString"
              },
              {
                "description": "Determines the null string of null values."
              }
            ]
          }
        },
        "description": "The options that determine the null value format configuration."
      },
      "NullString": {
        "type": "string",
        "minLength": 1,
        "maxLength": 128,
        "format": "password"
      },
      "CurrencyDisplayFormatConfiguration": {
        "type": "object",
        "properties": {
          "Prefix": {
            "allOf": [
              {
                "$ref": "#/$defs/Prefix"
              },
              {
                "description": "Determines the prefix value of the currency format."
              }
            ]
          },
          "Suffix": {
            "allOf": [
              {
                "$ref": "#/$defs/Suffix"
              },
              {
                "description": "Determines the suffix value of the currency format."
              }
            ]
          },
          "SeparatorConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/NumericSeparatorConfiguration"
              },
              {
                "description": "The options that determine the numeric separator configuration."
              }
            ]
          },
          "Symbol": {
            "allOf": [
              {
                "$ref": "#/$defs/CurrencyCode"
              },
              {
                "description": "Determines the symbol for the currency format."
              }
            ]
          },
          "DecimalPlacesConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/DecimalPlacesConfiguration"
              },
              {
                "description": "The option that determines the decimal places configuration."
              }
            ]
          },
          "NumberScale": {
            "allOf": [
              {
                "$ref": "#/$defs/NumberScale"
              },
              {
                "description": "Determines the number scale value for the currency format."
              }
            ]
          },
          "NegativeValueConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/NegativeValueConfiguration"
              },
              {
                "description": "The options that determine the negative value configuration."
              }
            ]
          },
          "NullValueFormatConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/NullValueFormatConfiguration"
              },
              {
                "description": "The options that determine the null value format configuration."
              }
            ]
          }
        },
        "description": "The options that determine the currency display format configuration."
      },
      "CurrencyCode": {
        "type": "string",
        "pattern": "[A-Z]{3}"
      },
      "PercentageDisplayFormatConfiguration": {
        "type": "object",
        "properties": {
          "Prefix": {
            "allOf": [
              {
                "$ref": "#/$defs/Prefix"
              },
              {
                "description": "Determines the prefix value of the percentage format."
              }
            ]
          },
          "Suffix": {
            "allOf": [
              {
                "$ref": "#/$defs/Suffix"
              },
              {
                "description": "Determines the suffix value of the percentage format."
              }
            ]
          },
          "SeparatorConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/NumericSeparatorConfiguration"
              },
              {
                "description": "The options that determine the numeric separator configuration."
              }
            ]
          },
          "DecimalPlacesConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/DecimalPlacesConfiguration"
              },
              {
                "description": "The option that determines the decimal places configuration."
              }
            ]
          },
          "NegativeValueConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/NegativeValueConfiguration"
              },
              {
                "description": "The options that determine the negative value configuration."
              }
            ]
          },
          "NullValueFormatConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/NullValueFormatConfiguration"
              },
              {
                "description": "The options that determine the null value format configuration."
              }
            ]
          }
        },
        "description": "The options that determine the percentage display format configuration."
      },
      "CategoricalDimensionField": {
        "type": "object",
        "required": [
          "FieldId",
          "Column"
        ],
        "properties": {
          "FieldId": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldId"
              },
              {
                "description": "The custom field ID."
              }
            ]
          },
          "Column": {
            "allOf": [
              {
                "$ref": "#/$defs/ColumnIdentifier"
              },
              {
                "description": "The column that is used in the <code>CategoricalDimensionField</code>."
              }
            ]
          },
          "HierarchyId": {
            "allOf": [
              {
                "$ref": "#/$defs/HierarchyId"
              },
              {
                "description": "The custom hierarchy ID."
              }
            ]
          },
          "FormatConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/StringFormatConfiguration"
              },
              {
                "description": "The format configuration of the field."
              }
            ]
          }
        },
        "description": "The dimension type field with categorical type columns.."
      },
      "StringFormatConfiguration": {
        "type": "object",
        "properties": {
          "NullValueFormatConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/NullValueFormatConfiguration"
              },
              {
                "description": "The options that determine the null value format configuration."
              }
            ]
          },
          "NumericFormatConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/NumericFormatConfiguration"
              },
              {
                "description": "The formatting configuration for numeric strings."
              }
            ]
          }
        },
        "description": "Formatting configuration for string fields."
      },
      "DateDimensionField": {
        "type": "object",
        "required": [
          "FieldId",
          "Column"
        ],
        "properties": {
          "FieldId": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldId"
              },
              {
                "description": "The custom field ID."
              }
            ]
          },
          "Column": {
            "allOf": [
              {
                "$ref": "#/$defs/ColumnIdentifier"
              },
              {
                "description": "The column that is used in the <code>DateDimensionField</code>."
              }
            ]
          },
          "DateGranularity": {
            "allOf": [
              {
                "$ref": "#/$defs/TimeGranularity"
              },
              {
                "description": "<p>The date granularity of the <code>DateDimensionField</code>. Choose one of the following options:</p> <ul> <li> <p> <code>YEAR</code> </p> </li> <li> <p> <code>QUARTER</code> </p> </li> <li> <p> <code>MONTH</code> </p> </li> <li> <p> <code>WEEK</code> </p> </li> <li> <p> <code>DAY</code> </p> </li> <li> <p> <code>HOUR</code> </p> </li> <li> <p> <code>MINUTE</code> </p> </li> <li> <p> <code>SECOND</code> </p> </li> <li> <p> <code>MILLISECOND</code> </p> </li> </ul>"
              }
            ]
          },
          "HierarchyId": {
            "allOf": [
              {
                "$ref": "#/$defs/HierarchyId"
              },
              {
                "description": "The custom hierarchy ID."
              }
            ]
          },
          "FormatConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/DateTimeFormatConfiguration"
              },
              {
                "description": "The format configuration of the field."
              }
            ]
          }
        },
        "description": "The dimension type field with date type columns."
      },
      "TimeGranularity": {
        "type": "string",
        "enum": [
          "YEAR",
          "QUARTER",
          "MONTH",
          "WEEK",
          "DAY",
          "HOUR",
          "MINUTE",
          "SECOND",
          "MILLISECOND"
        ]
      },
      "DateTimeFormatConfiguration": {
        "type": "object",
        "properties": {
          "DateTimeFormat": {
            "allOf": [
              {
                "$ref": "#/$defs/DateTimeFormat"
              },
              {
                "description": "Determines the <code>DateTime</code> format."
              }
            ]
          },
          "NullValueFormatConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/NullValueFormatConfiguration"
              },
              {
                "description": "The options that determine the null value format configuration."
              }
            ]
          },
          "NumericFormatConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/NumericFormatConfiguration"
              },
              {
                "description": "The formatting configuration for numeric <code>DateTime</code> fields."
              }
            ]
          }
        },
        "description": "Formatting configuration for <code>DateTime</code> fields."
      },
      "MeasureFieldList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/MeasureField"
        },
        "maxItems": 200
      },
      "MeasureField": {
        "type": "object",
        "properties": {
          "NumericalMeasureField": {
            "allOf": [
              {
                "$ref": "#/$defs/NumericalMeasureField"
              },
              {
                "description": "The measure type field with numerical type columns."
              }
            ]
          },
          "CategoricalMeasureField": {
            "allOf": [
              {
                "$ref": "#/$defs/CategoricalMeasureField"
              },
              {
                "description": "The measure type field with categorical type columns."
              }
            ]
          },
          "DateMeasureField": {
            "allOf": [
              {
                "$ref": "#/$defs/DateMeasureField"
              },
              {
                "description": "The measure type field with date type columns."
              }
            ]
          },
          "CalculatedMeasureField": {
            "allOf": [
              {
                "$ref": "#/$defs/CalculatedMeasureField"
              },
              {
                "description": "The calculated measure field only used in pivot tables."
              }
            ]
          }
        },
        "description": "The measure (metric) type field."
      },
      "NumericalMeasureField": {
        "type": "object",
        "required": [
          "FieldId",
          "Column"
        ],
        "properties": {
          "FieldId": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldId"
              },
              {
                "description": "The custom field ID."
              }
            ]
          },
          "Column": {
            "allOf": [
              {
                "$ref": "#/$defs/ColumnIdentifier"
              },
              {
                "description": "The column that is used in the <code>NumericalMeasureField</code>."
              }
            ]
          },
          "AggregationFunction": {
            "allOf": [
              {
                "$ref": "#/$defs/NumericalAggregationFunction"
              },
              {
                "description": "The aggregation function of the measure field."
              }
            ]
          },
          "FormatConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/NumberFormatConfiguration"
              },
              {
                "description": "The format configuration of the field."
              }
            ]
          }
        },
        "description": "The measure type field with numerical type columns."
      },
      "NumericalAggregationFunction": {
        "type": "object",
        "properties": {
          "SimpleNumericalAggregation": {
            "allOf": [
              {
                "$ref": "#/$defs/SimpleNumericalAggregationFunction"
              },
              {
                "description": "<p>Built-in aggregation functions for numerical values.</p> <ul> <li> <p> <code>SUM</code>: The sum of a dimension or measure. </p> </li> <li> <p> <code>AVERAGE</code>: The average of a dimension or measure.</p> </li> <li> <p> <code>MIN</code>: The minimum value of a dimension or measure.</p> </li> <li> <p> <code>MAX</code>: The maximum value of a dimension or measure.</p> </li> <li> <p> <code>COUNT</code>: The count of a dimension or measure.</p> </li> <li> <p> <code>DISTINCT_COUNT</code>: The count of distinct values in a dimension or measure.</p> </li> <li> <p> <code>VAR</code>: The variance of a dimension or measure.</p> </li> <li> <p> <code>VARP</code>: The partitioned variance of a dimension or measure.</p> </li> <li> <p> <code>STDEV</code>: The standard deviation of a dimension or measure.</p> </li> <li> <p> <code>STDEVP</code>: The partitioned standard deviation of a dimension or measure.</p> </li> <li> <p> <code>MEDIAN</code>: The median value of a dimension or measure.</p> </li> </ul>"
              }
            ]
          },
          "PercentileAggregation": {
            "allOf": [
              {
                "$ref": "#/$defs/PercentileAggregation"
              },
              {
                "description": "An aggregation based on the percentile of values in a dimension or measure."
              }
            ]
          }
        },
        "description": "Aggregation for numerical values."
      },
      "SimpleNumericalAggregationFunction": {
        "type": "string",
        "enum": [
          "SUM",
          "AVERAGE",
          "MIN",
          "MAX",
          "COUNT",
          "DISTINCT_COUNT",
          "VAR",
          "VARP",
          "STDEV",
          "STDEVP",
          "MEDIAN"
        ]
      },
      "PercentileAggregation": {
        "type": "object",
        "properties": {
          "PercentileValue": {
            "allOf": [
              {
                "$ref": "#/$defs/PercentileValue"
              },
              {
                "description": "The percentile value. This value can be any numeric constant 0–100. A percentile value of 50 computes the median value of the measure."
              }
            ]
          }
        },
        "description": "An aggregation based on the percentile of values in a dimension or measure."
      },
      "PercentileValue": {
        "type": "number",
        "format": "double",
        "minimum": 0,
        "maximum": 100
      },
      "CategoricalMeasureField": {
        "type": "object",
        "required": [
          "FieldId",
          "Column"
        ],
        "properties": {
          "FieldId": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldId"
              },
              {
                "description": "The custom field ID."
              }
            ]
          },
          "Column": {
            "allOf": [
              {
                "$ref": "#/$defs/ColumnIdentifier"
              },
              {
                "description": "The column that is used in the <code>CategoricalMeasureField</code>."
              }
            ]
          },
          "AggregationFunction": {
            "allOf": [
              {
                "$ref": "#/$defs/CategoricalAggregationFunction"
              },
              {
                "description": "The aggregation function of the measure field."
              }
            ]
          },
          "FormatConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/StringFormatConfiguration"
              },
              {
                "description": "The format configuration of the field."
              }
            ]
          }
        },
        "description": "The measure type field with categorical type columns."
      },
      "CategoricalAggregationFunction": {
        "type": "string",
        "enum": [
          "COUNT",
          "DISTINCT_COUNT"
        ]
      },
      "DateMeasureField": {
        "type": "object",
        "required": [
          "FieldId",
          "Column"
        ],
        "properties": {
          "FieldId": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldId"
              },
              {
                "description": "The custom field ID."
              }
            ]
          },
          "Column": {
            "allOf": [
              {
                "$ref": "#/$defs/ColumnIdentifier"
              },
              {
                "description": "The column that is used in the <code>DateMeasureField</code>."
              }
            ]
          },
          "AggregationFunction": {
            "allOf": [
              {
                "$ref": "#/$defs/DateAggregationFunction"
              },
              {
                "description": "The aggregation function of the measure field."
              }
            ]
          },
          "FormatConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/DateTimeFormatConfiguration"
              },
              {
                "description": "The format configuration of the field."
              }
            ]
          }
        },
        "description": "The measure type field with date type columns."
      },
      "DateAggregationFunction": {
        "type": "string",
        "enum": [
          "COUNT",
          "DISTINCT_COUNT",
          "MIN",
          "MAX"
        ]
      },
      "CalculatedMeasureField": {
        "type": "object",
        "required": [
          "FieldId",
          "Expression"
        ],
        "properties": {
          "FieldId": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldId"
              },
              {
                "description": "The custom field ID."
              }
            ]
          },
          "Expression": {
            "allOf": [
              {
                "$ref": "#/$defs/Expression"
              },
              {
                "description": "The expression in the table calculation."
              }
            ]
          }
        },
        "description": "The table calculation measure field for pivot tables."
      },
      "Expression": {
        "type": "string",
        "minLength": 1,
        "maxLength": 4096,
        "format": "password"
      },
      "TableUnaggregatedFieldWells": {
        "type": "object",
        "properties": {
          "Values": {
            "allOf": [
              {
                "$ref": "#/$defs/UnaggregatedFieldList"
              },
              {
                "description": "The values field well for a pivot table. Values are unaggregated for an unaggregated table."
              }
            ]
          }
        },
        "description": "The unaggregated field well for the table."
      },
      "UnaggregatedFieldList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/UnaggregatedField"
        },
        "maxItems": 200
      },
      "UnaggregatedField": {
        "type": "object",
        "required": [
          "FieldId",
          "Column"
        ],
        "properties": {
          "FieldId": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldId"
              },
              {
                "description": "The custom field ID."
              }
            ]
          },
          "Column": {
            "allOf": [
              {
                "$ref": "#/$defs/ColumnIdentifier"
              },
              {
                "description": "The column that is used in the <code>UnaggregatedField</code>."
              }
            ]
          },
          "FormatConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/FormatConfiguration"
              },
              {
                "description": "The format configuration of the field."
              }
            ]
          }
        },
        "description": "The unaggregated field for a table."
      },
      "FormatConfiguration": {
        "type": "object",
        "properties": {
          "StringFormatConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/StringFormatConfiguration"
              },
              {
                "description": "Formatting configuration for string fields."
              }
            ]
          },
          "NumberFormatConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/NumberFormatConfiguration"
              },
              {
                "description": "Formatting configuration for number fields."
              }
            ]
          },
          "DateTimeFormatConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/DateTimeFormatConfiguration"
              },
              {
                "description": "Formatting configuration for <code>DateTime</code> fields."
              }
            ]
          }
        },
        "description": "The formatting configuration for all types of field."
      },
      "TableSortConfiguration": {
        "type": "object",
        "properties": {
          "RowSort": {
            "allOf": [
              {
                "$ref": "#/$defs/RowSortList"
              },
              {
                "description": "The field sort options for rows in the table."
              }
            ]
          },
          "PaginationConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/PaginationConfiguration"
              },
              {
                "description": "The pagination configuration (page size, page number) for the table."
              }
            ]
          }
        },
        "description": "The sort configuration for a <code>TableVisual</code>."
      },
      "RowSortList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/FieldSortOptions"
        },
        "maxItems": 100
      },
      "FieldSortOptions": {
        "type": "object",
        "properties": {
          "FieldSort": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldSort"
              },
              {
                "description": "The sort configuration for a field in a field well."
              }
            ]
          },
          "ColumnSort": {
            "allOf": [
              {
                "$ref": "#/$defs/ColumnSort"
              },
              {
                "description": "The sort configuration for a column that is not used in a field well."
              }
            ]
          }
        },
        "description": "The field sort options in a chart configuration."
      },
      "FieldSort": {
        "type": "object",
        "required": [
          "FieldId",
          "Direction"
        ],
        "properties": {
          "FieldId": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldId"
              },
              {
                "description": "The sort configuration target field."
              }
            ]
          },
          "Direction": {
            "allOf": [
              {
                "$ref": "#/$defs/SortDirection"
              },
              {
                "description": "<p>The sort direction. Choose one of the following options:</p> <ul> <li> <p> <code>ASC</code>: Ascending</p> </li> <li> <p> <code>DESC</code>: Descending</p> </li> </ul>"
              }
            ]
          }
        },
        "description": "The sort configuration for a field in a field well."
      },
      "SortDirection": {
        "type": "string",
        "enum": [
          "ASC",
          "DESC"
        ]
      },
      "ColumnSort": {
        "type": "object",
        "required": [
          "SortBy",
          "Direction"
        ],
        "properties": {
          "SortBy": {
            "$ref": "#/$defs/ColumnIdentifier"
          },
          "Direction": {
            "allOf": [
              {
                "$ref": "#/$defs/SortDirection"
              },
              {
                "description": "The sort direction."
              }
            ]
          },
          "AggregationFunction": {
            "allOf": [
              {
                "$ref": "#/$defs/AggregationFunction"
              },
              {
                "description": "The aggregation function that is defined in the column sort."
              }
            ]
          }
        },
        "description": "The sort configuration for a column that is not used in a field well."
      },
      "AggregationFunction": {
        "type": "object",
        "properties": {
          "NumericalAggregationFunction": {
            "allOf": [
              {
                "$ref": "#/$defs/NumericalAggregationFunction"
              },
              {
                "description": "Aggregation for numerical values."
              }
            ]
          },
          "CategoricalAggregationFunction": {
            "allOf": [
              {
                "$ref": "#/$defs/CategoricalAggregationFunction"
              },
              {
                "description": "<p>Aggregation for categorical values.</p> <ul> <li> <p> <code>COUNT</code>: Aggregate by the total number of values, including duplicates.</p> </li> <li> <p> <code>DISTINCT_COUNT</code>: Aggregate by the total number of distinct values.</p> </li> </ul>"
              }
            ]
          },
          "DateAggregationFunction": {
            "allOf": [
              {
                "$ref": "#/$defs/DateAggregationFunction"
              },
              {
                "description": "<p>Aggregation for date values.</p> <ul> <li> <p> <code>COUNT</code>: Aggregate by the total number of values, including duplicates.</p> </li> <li> <p> <code>DISTINCT_COUNT</code>: Aggregate by the total number of distinct values.</p> </li> <li> <p> <code>MIN</code>: Select the smallest date value.</p> </li> <li> <p> <code>MAX</code>: Select the largest date value.</p> </li> </ul>"
              }
            ]
          },
          "AttributeAggregationFunction": {
            "allOf": [
              {
                "$ref": "#/$defs/AttributeAggregationFunction"
              },
              {
                "description": "Aggregation for attributes."
              }
            ]
          }
        },
        "description": "<p>An aggregation function aggregates values from a dimension or measure.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>"
      },
      "AttributeAggregationFunction": {
        "type": "object",
        "properties": {
          "SimpleAttributeAggregation": {
            "allOf": [
              {
                "$ref": "#/$defs/SimpleAttributeAggregationFunction"
              },
              {
                "description": "<p>The built-in aggregation functions for attributes.</p> <ul> <li> <p> <code>UNIQUE_VALUE</code>: Returns the unique value for a field, aggregated by the dimension fields.</p> </li> </ul>"
              }
            ]
          },
          "ValueForMultipleValues": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "Used by the <code>UNIQUE_VALUE</code> aggregation function. If there are multiple values for the field used by the aggregation, the value for this property will be returned instead. Defaults to '*'."
              }
            ]
          }
        },
        "description": "Aggregation for attributes."
      },
      "SimpleAttributeAggregationFunction": {
        "type": "string",
        "enum": [
          "UNIQUE_VALUE"
        ]
      },
      "PaginationConfiguration": {
        "type": "object",
        "required": [
          "PageSize",
          "PageNumber"
        ],
        "properties": {
          "PageSize": {
            "allOf": [
              {
                "$ref": "#/$defs/Long"
              },
              {
                "description": "Indicates how many items render in one page."
              }
            ]
          },
          "PageNumber": {
            "allOf": [
              {
                "$ref": "#/$defs/PageNumber"
              },
              {
                "description": "Indicates the page number."
              }
            ]
          }
        },
        "description": "The pagination configuration for a table visual or boxplot."
      },
      "Long": {
        "type": "integer"
      },
      "PageNumber": {
        "type": "integer",
        "minimum": 0
      },
      "TableOptions": {
        "type": "object",
        "properties": {
          "Orientation": {
            "allOf": [
              {
                "$ref": "#/$defs/TableOrientation"
              },
              {
                "description": "The orientation (vertical, horizontal) for a table."
              }
            ]
          },
          "HeaderStyle": {
            "allOf": [
              {
                "$ref": "#/$defs/TableCellStyle"
              },
              {
                "description": "The table cell style of a table header."
              }
            ]
          },
          "CellStyle": {
            "allOf": [
              {
                "$ref": "#/$defs/TableCellStyle"
              },
              {
                "description": "The table cell style of table cells."
              }
            ]
          },
          "RowAlternateColorOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/RowAlternateColorOptions"
              },
              {
                "description": "The row alternate color options (widget status, row alternate colors) for a table."
              }
            ]
          }
        },
        "description": "The table options for a table visual."
      },
      "TableOrientation": {
        "type": "string",
        "enum": [
          "VERTICAL",
          "HORIZONTAL"
        ]
      },
      "TableCellStyle": {
        "type": "object",
        "properties": {
          "Visibility": {
            "allOf": [
              {
                "$ref": "#/$defs/Visibility"
              },
              {
                "description": "The visibility of the table cells."
              }
            ]
          },
          "FontConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/FontConfiguration"
              },
              {
                "description": "The font configuration of the table cells."
              }
            ]
          },
          "TextWrap": {
            "allOf": [
              {
                "$ref": "#/$defs/TextWrap"
              },
              {
                "description": "The text wrap (none, wrap) for the table cells."
              }
            ]
          },
          "HorizontalTextAlignment": {
            "allOf": [
              {
                "$ref": "#/$defs/HorizontalTextAlignment"
              },
              {
                "description": "The horizontal text alignment (left, center, right, auto) for the table cells."
              }
            ]
          },
          "VerticalTextAlignment": {
            "allOf": [
              {
                "$ref": "#/$defs/VerticalTextAlignment"
              },
              {
                "description": "The vertical text alignment (top, middle, bottom) for the table cells."
              }
            ]
          },
          "BackgroundColor": {
            "allOf": [
              {
                "$ref": "#/$defs/HexColor"
              },
              {
                "description": "The background color for the table cells."
              }
            ]
          },
          "Height": {
            "allOf": [
              {
                "$ref": "#/$defs/TableFieldHeight"
              },
              {
                "description": "The height color for the table cells."
              }
            ]
          },
          "Border": {
            "allOf": [
              {
                "$ref": "#/$defs/GlobalTableBorderOptions"
              },
              {
                "description": "The borders for the table cells."
              }
            ]
          }
        },
        "description": "The table cell style for a cell in pivot table or table visual."
      },
      "TextWrap": {
        "type": "string",
        "enum": [
          "NONE",
          "WRAP"
        ]
      },
      "HorizontalTextAlignment": {
        "type": "string",
        "enum": [
          "LEFT",
          "CENTER",
          "RIGHT",
          "AUTO"
        ]
      },
      "VerticalTextAlignment": {
        "type": "string",
        "enum": [
          "TOP",
          "MIDDLE",
          "BOTTOM"
        ]
      },
      "TableFieldHeight": {
        "type": "integer",
        "minimum": 8,
        "maximum": 500
      },
      "GlobalTableBorderOptions": {
        "type": "object",
        "properties": {
          "UniformBorder": {
            "allOf": [
              {
                "$ref": "#/$defs/TableBorderOptions"
              },
              {
                "description": "Determines the options for uniform border."
              }
            ]
          },
          "SideSpecificBorder": {
            "allOf": [
              {
                "$ref": "#/$defs/TableSideBorderOptions"
              },
              {
                "description": "Determines the options for side specific border."
              }
            ]
          }
        },
        "description": "Determines the border options for a table visual."
      },
      "TableBorderOptions": {
        "type": "object",
        "properties": {
          "Color": {
            "allOf": [
              {
                "$ref": "#/$defs/HexColor"
              },
              {
                "description": "The color of a table border."
              }
            ]
          },
          "Thickness": {
            "allOf": [
              {
                "$ref": "#/$defs/TableBorderThickness"
              },
              {
                "description": "The thickness of a table border."
              }
            ]
          },
          "Style": {
            "allOf": [
              {
                "$ref": "#/$defs/TableBorderStyle"
              },
              {
                "description": "The style (none, solid) of a table border."
              }
            ]
          }
        },
        "description": "The border options for a table border."
      },
      "TableBorderThickness": {
        "type": "integer",
        "minimum": 1,
        "maximum": 4
      },
      "TableBorderStyle": {
        "type": "string",
        "enum": [
          "NONE",
          "SOLID"
        ]
      },
      "TableSideBorderOptions": {
        "type": "object",
        "properties": {
          "InnerVertical": {
            "allOf": [
              {
                "$ref": "#/$defs/TableBorderOptions"
              },
              {
                "description": "The table border options of the inner vertical border."
              }
            ]
          },
          "InnerHorizontal": {
            "allOf": [
              {
                "$ref": "#/$defs/TableBorderOptions"
              },
              {
                "description": "The table border options of the inner horizontal border."
              }
            ]
          },
          "Left": {
            "allOf": [
              {
                "$ref": "#/$defs/TableBorderOptions"
              },
              {
                "description": "The table border options of the left border."
              }
            ]
          },
          "Right": {
            "allOf": [
              {
                "$ref": "#/$defs/TableBorderOptions"
              },
              {
                "description": "The table border options of the right border."
              }
            ]
          },
          "Top": {
            "allOf": [
              {
                "$ref": "#/$defs/TableBorderOptions"
              },
              {
                "description": "The table border options of the top border."
              }
            ]
          },
          "Bottom": {
            "allOf": [
              {
                "$ref": "#/$defs/TableBorderOptions"
              },
              {
                "description": "The table border options of the bottom border."
              }
            ]
          }
        },
        "description": "The side border options for a table."
      },
      "RowAlternateColorOptions": {
        "type": "object",
        "properties": {
          "Status": {
            "allOf": [
              {
                "$ref": "#/$defs/WidgetStatus"
              },
              {
                "description": "Determines the widget status."
              }
            ]
          },
          "RowAlternateColors": {
            "allOf": [
              {
                "$ref": "#/$defs/RowAlternateColorList"
              },
              {
                "description": "Determines the list of row alternate colors."
              }
            ]
          }
        },
        "description": "Determines the row alternate color options."
      },
      "WidgetStatus": {
        "type": "string",
        "enum": [
          "ENABLED",
          "DISABLED"
        ]
      },
      "RowAlternateColorList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/HexColor"
        },
        "maxItems": 1
      },
      "TotalOptions": {
        "type": "object",
        "properties": {
          "TotalsVisibility": {
            "allOf": [
              {
                "$ref": "#/$defs/Visibility"
              },
              {
                "description": "The visibility configuration for the total cells."
              }
            ]
          },
          "Placement": {
            "allOf": [
              {
                "$ref": "#/$defs/TableTotalsPlacement"
              },
              {
                "description": "The placement (start, end) for the total cells."
              }
            ]
          },
          "ScrollStatus": {
            "allOf": [
              {
                "$ref": "#/$defs/TableTotalsScrollStatus"
              },
              {
                "description": "The scroll status (pinned, scrolled) for the total cells."
              }
            ]
          },
          "CustomLabel": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The custom label string for the total cells."
              }
            ]
          },
          "TotalCellStyle": {
            "allOf": [
              {
                "$ref": "#/$defs/TableCellStyle"
              },
              {
                "description": "Cell styling options for the total cells."
              }
            ]
          }
        },
        "description": "The total options for a table visual."
      },
      "TableTotalsPlacement": {
        "type": "string",
        "enum": [
          "START",
          "END"
        ]
      },
      "TableTotalsScrollStatus": {
        "type": "string",
        "enum": [
          "PINNED",
          "SCROLLED"
        ]
      },
      "TableFieldOptions": {
        "type": "object",
        "properties": {
          "SelectedFieldOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/TableFieldOptionList"
              },
              {
                "description": "The selected field options for the table field options."
              }
            ]
          },
          "Order": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldOrderList"
              },
              {
                "description": "The order of field IDs of the field options for a table visual."
              }
            ]
          }
        },
        "description": "The field options for a table visual."
      },
      "TableFieldOptionList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/TableFieldOption"
        },
        "maxItems": 100
      },
      "TableFieldOption": {
        "type": "object",
        "required": [
          "FieldId"
        ],
        "properties": {
          "FieldId": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldId"
              },
              {
                "description": "The field ID for a table field."
              }
            ]
          },
          "Width": {
            "allOf": [
              {
                "$ref": "#/$defs/PixelLength"
              },
              {
                "description": "The width for a table field."
              }
            ]
          },
          "CustomLabel": {
            "allOf": [
              {
                "$ref": "#/$defs/CustomLabel"
              },
              {
                "description": "The custom label for a table field."
              }
            ]
          },
          "Visibility": {
            "allOf": [
              {
                "$ref": "#/$defs/Visibility"
              },
              {
                "description": "The visibility of a table field."
              }
            ]
          },
          "URLStyling": {
            "allOf": [
              {
                "$ref": "#/$defs/TableFieldURLConfiguration"
              },
              {
                "description": "The URL configuration for a table field."
              }
            ]
          }
        },
        "description": "The options for a table field."
      },
      "PixelLength": {
        "type": "string",
        "description": "String based length that is composed of value and unit in px"
      },
      "CustomLabel": {
        "type": "string",
        "minLength": 1,
        "maxLength": 2048
      },
      "TableFieldURLConfiguration": {
        "type": "object",
        "properties": {
          "LinkConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/TableFieldLinkConfiguration"
              },
              {
                "description": "The link configuration of a table field URL."
              }
            ]
          },
          "ImageConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/TableFieldImageConfiguration"
              },
              {
                "description": "The image configuration of a table field URL."
              }
            ]
          }
        },
        "description": "The URL configuration for a table field."
      },
      "TableFieldLinkConfiguration": {
        "type": "object",
        "required": [
          "Target",
          "Content"
        ],
        "properties": {
          "Target": {
            "allOf": [
              {
                "$ref": "#/$defs/URLTargetConfiguration"
              },
              {
                "description": "The URL target (new tab, new window, same tab) for the table link configuration."
              }
            ]
          },
          "Content": {
            "allOf": [
              {
                "$ref": "#/$defs/TableFieldLinkContentConfiguration"
              },
              {
                "description": "The URL content (text, icon) for the table link configuration."
              }
            ]
          }
        },
        "description": "The link configuration of a table field URL."
      },
      "URLTargetConfiguration": {
        "type": "string",
        "enum": [
          "NEW_TAB",
          "NEW_WINDOW",
          "SAME_TAB"
        ]
      },
      "TableFieldLinkContentConfiguration": {
        "type": "object",
        "properties": {
          "CustomTextContent": {
            "allOf": [
              {
                "$ref": "#/$defs/TableFieldCustomTextContent"
              },
              {
                "description": "The custom text content (value, font configuration) for the table link content configuration."
              }
            ]
          },
          "CustomIconContent": {
            "allOf": [
              {
                "$ref": "#/$defs/TableFieldCustomIconContent"
              },
              {
                "description": "The custom icon content for the table link content configuration."
              }
            ]
          }
        },
        "description": "The URL content (text, icon) for the table link configuration."
      },
      "TableFieldCustomTextContent": {
        "type": "object",
        "required": [
          "FontConfiguration"
        ],
        "properties": {
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The string value of the custom text content for the table URL link content."
              }
            ]
          },
          "FontConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/FontConfiguration"
              },
              {
                "description": "The font configuration of the custom text content for the table URL link content."
              }
            ]
          }
        },
        "description": "The custom text content (value, font configuration) for the table link content configuration."
      },
      "TableFieldCustomIconContent": {
        "type": "object",
        "properties": {
          "Icon": {
            "allOf": [
              {
                "$ref": "#/$defs/TableFieldIconSetType"
              },
              {
                "description": "The icon set type (link) of the custom icon content for table URL link content."
              }
            ]
          }
        },
        "description": "The custom icon content for the table link content configuration."
      },
      "TableFieldIconSetType": {
        "type": "string",
        "enum": [
          "LINK"
        ]
      },
      "TableFieldImageConfiguration": {
        "type": "object",
        "properties": {
          "SizingOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/TableCellImageSizingConfiguration"
              },
              {
                "description": "The sizing options for the table image configuration."
              }
            ]
          }
        },
        "description": "The image configuration of a table field URL."
      },
      "TableCellImageSizingConfiguration": {
        "type": "object",
        "properties": {
          "TableCellImageScalingConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/TableCellImageScalingConfiguration"
              },
              {
                "description": "The cell scaling configuration of the sizing options for the table image configuration."
              }
            ]
          }
        },
        "description": "The sizing options for the table image configuration."
      },
      "TableCellImageScalingConfiguration": {
        "type": "string",
        "enum": [
          "FIT_TO_CELL_HEIGHT",
          "FIT_TO_CELL_WIDTH",
          "DO_NOT_SCALE"
        ]
      },
      "FieldOrderList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/FieldId"
        },
        "maxItems": 100
      },
      "TablePaginatedReportOptions": {
        "type": "object",
        "properties": {
          "VerticalOverflowVisibility": {
            "allOf": [
              {
                "$ref": "#/$defs/Visibility"
              },
              {
                "description": "The visibility of printing table overflow across pages."
              }
            ]
          },
          "OverflowColumnHeaderVisibility": {
            "allOf": [
              {
                "$ref": "#/$defs/Visibility"
              },
              {
                "description": "The visibility of repeating header rows on each page."
              }
            ]
          }
        },
        "description": "The paginated report options for a table visual."
      },
      "TableInlineVisualizationList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/TableInlineVisualization"
        },
        "maxItems": 200
      },
      "TableInlineVisualization": {
        "type": "object",
        "properties": {
          "DataBars": {
            "allOf": [
              {
                "$ref": "#/$defs/DataBarsOptions"
              },
              {
                "description": "The configuration of the inline visualization of the data bars within a chart."
              }
            ]
          }
        },
        "description": "The inline visualization of a specific type to display within a chart."
      },
      "DataBarsOptions": {
        "type": "object",
        "required": [
          "FieldId"
        ],
        "properties": {
          "FieldId": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldId"
              },
              {
                "description": "The field ID for the data bars options."
              }
            ]
          },
          "PositiveColor": {
            "allOf": [
              {
                "$ref": "#/$defs/HexColor"
              },
              {
                "description": "The color of the positive data bar."
              }
            ]
          },
          "NegativeColor": {
            "allOf": [
              {
                "$ref": "#/$defs/HexColor"
              },
              {
                "description": "The color of the negative data bar."
              }
            ]
          }
        },
        "description": "The options for data bars."
      },
      "TableConditionalFormatting": {
        "type": "object",
        "properties": {
          "ConditionalFormattingOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/TableConditionalFormattingOptionList"
              },
              {
                "description": "Conditional formatting options for a <code>PivotTableVisual</code>."
              }
            ]
          }
        },
        "description": "The conditional formatting for a <code>PivotTableVisual</code>."
      },
      "TableConditionalFormattingOptionList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/TableConditionalFormattingOption"
        },
        "maxItems": 100
      },
      "TableConditionalFormattingOption": {
        "type": "object",
        "properties": {
          "Cell": {
            "allOf": [
              {
                "$ref": "#/$defs/TableCellConditionalFormatting"
              },
              {
                "description": "The cell conditional formatting option for a table."
              }
            ]
          },
          "Row": {
            "allOf": [
              {
                "$ref": "#/$defs/TableRowConditionalFormatting"
              },
              {
                "description": "The row conditional formatting option for a table."
              }
            ]
          }
        },
        "description": "Conditional formatting options for a <code>PivotTableVisual</code>."
      },
      "TableCellConditionalFormatting": {
        "type": "object",
        "required": [
          "FieldId"
        ],
        "properties": {
          "FieldId": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldId"
              },
              {
                "description": "The field ID of the cell for conditional formatting."
              }
            ]
          },
          "TextFormat": {
            "allOf": [
              {
                "$ref": "#/$defs/TextConditionalFormat"
              },
              {
                "description": "The text format of the cell for conditional formatting."
              }
            ]
          }
        },
        "description": "The cell conditional formatting option for a table."
      },
      "TextConditionalFormat": {
        "type": "object",
        "properties": {
          "BackgroundColor": {
            "allOf": [
              {
                "$ref": "#/$defs/ConditionalFormattingColor"
              },
              {
                "description": "The conditional formatting for the text background color."
              }
            ]
          },
          "TextColor": {
            "allOf": [
              {
                "$ref": "#/$defs/ConditionalFormattingColor"
              },
              {
                "description": "The conditional formatting for the text color."
              }
            ]
          },
          "Icon": {
            "allOf": [
              {
                "$ref": "#/$defs/ConditionalFormattingIcon"
              },
              {
                "description": "The conditional formatting for the icon."
              }
            ]
          }
        },
        "description": "The conditional formatting for the text."
      },
      "ConditionalFormattingColor": {
        "type": "object",
        "properties": {
          "Solid": {
            "allOf": [
              {
                "$ref": "#/$defs/ConditionalFormattingSolidColor"
              },
              {
                "description": "Formatting configuration for solid color."
              }
            ]
          },
          "Gradient": {
            "allOf": [
              {
                "$ref": "#/$defs/ConditionalFormattingGradientColor"
              },
              {
                "description": "Formatting configuration for gradient color."
              }
            ]
          }
        },
        "description": "The formatting configuration for the color."
      },
      "ConditionalFormattingSolidColor": {
        "type": "object",
        "required": [
          "Expression"
        ],
        "properties": {
          "Expression": {
            "allOf": [
              {
                "$ref": "#/$defs/Expression"
              },
              {
                "description": "The expression that determines the formatting configuration for solid color."
              }
            ]
          },
          "Color": {
            "allOf": [
              {
                "$ref": "#/$defs/HexColor"
              },
              {
                "description": "Determines the color."
              }
            ]
          }
        },
        "description": "Formatting configuration for solid color."
      },
      "ConditionalFormattingGradientColor": {
        "type": "object",
        "required": [
          "Expression",
          "Color"
        ],
        "properties": {
          "Expression": {
            "allOf": [
              {
                "$ref": "#/$defs/Expression"
              },
              {
                "description": "The expression that determines the formatting configuration for gradient color."
              }
            ]
          },
          "Color": {
            "allOf": [
              {
                "$ref": "#/$defs/GradientColor"
              },
              {
                "description": "Determines the color."
              }
            ]
          }
        },
        "description": "Formatting configuration for gradient color."
      },
      "GradientColor": {
        "type": "object",
        "properties": {
          "Stops": {
            "allOf": [
              {
                "$ref": "#/$defs/GradientStopList"
              },
              {
                "description": "The list of gradient color stops."
              }
            ]
          }
        },
        "description": "Determines the gradient color settings."
      },
      "GradientStopList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/GradientStop"
        },
        "maxItems": 100
      },
      "GradientStop": {
        "type": "object",
        "required": [
          "GradientOffset"
        ],
        "properties": {
          "GradientOffset": {
            "allOf": [
              {
                "$ref": "#/$defs/Double"
              },
              {
                "description": "Determines gradient offset value."
              }
            ]
          },
          "DataValue": {
            "allOf": [
              {
                "$ref": "#/$defs/Double"
              },
              {
                "description": "Determines the data value."
              }
            ]
          },
          "Color": {
            "allOf": [
              {
                "$ref": "#/$defs/HexColor"
              },
              {
                "description": "Determines the color."
              }
            ]
          }
        },
        "description": "Determines the gradient stop configuration."
      },
      "ConditionalFormattingIcon": {
        "type": "object",
        "properties": {
          "IconSet": {
            "allOf": [
              {
                "$ref": "#/$defs/ConditionalFormattingIconSet"
              },
              {
                "description": "Formatting configuration for icon set."
              }
            ]
          },
          "CustomCondition": {
            "allOf": [
              {
                "$ref": "#/$defs/ConditionalFormattingCustomIconCondition"
              },
              {
                "description": "Determines the custom condition for an icon set."
              }
            ]
          }
        },
        "description": "The formatting configuration for the icon."
      },
      "ConditionalFormattingIconSet": {
        "type": "object",
        "required": [
          "Expression"
        ],
        "properties": {
          "Expression": {
            "allOf": [
              {
                "$ref": "#/$defs/Expression"
              },
              {
                "description": "The expression that determines the formatting configuration for the icon set."
              }
            ]
          },
          "IconSetType": {
            "allOf": [
              {
                "$ref": "#/$defs/ConditionalFormattingIconSetType"
              },
              {
                "description": "Determines the icon set type."
              }
            ]
          }
        },
        "description": "Formatting configuration for icon set."
      },
      "ConditionalFormattingIconSetType": {
        "type": "string",
        "enum": [
          "PLUS_MINUS",
          "CHECK_X",
          "THREE_COLOR_ARROW",
          "THREE_GRAY_ARROW",
          "CARET_UP_MINUS_DOWN",
          "THREE_SHAPE",
          "THREE_CIRCLE",
          "FLAGS",
          "BARS",
          "FOUR_COLOR_ARROW",
          "FOUR_GRAY_ARROW"
        ]
      },
      "ConditionalFormattingCustomIconCondition": {
        "type": "object",
        "required": [
          "Expression",
          "IconOptions"
        ],
        "properties": {
          "Expression": {
            "allOf": [
              {
                "$ref": "#/$defs/Expression"
              },
              {
                "description": "The expression that determines the condition of the icon set."
              }
            ]
          },
          "IconOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/ConditionalFormattingCustomIconOptions"
              },
              {
                "description": "Custom icon options for an icon set."
              }
            ]
          },
          "Color": {
            "allOf": [
              {
                "$ref": "#/$defs/HexColor"
              },
              {
                "description": "Determines the color of the icon."
              }
            ]
          },
          "DisplayConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/ConditionalFormattingIconDisplayConfiguration"
              },
              {
                "description": "Determines the icon display configuration."
              }
            ]
          }
        },
        "description": "Determines the custom condition for an icon set."
      },
      "ConditionalFormattingCustomIconOptions": {
        "type": "object",
        "properties": {
          "Icon": {
            "allOf": [
              {
                "$ref": "#/$defs/Icon"
              },
              {
                "description": "Determines the type of icon."
              }
            ]
          },
          "UnicodeIcon": {
            "allOf": [
              {
                "$ref": "#/$defs/UnicodeIcon"
              },
              {
                "description": "Determines the Unicode icon type."
              }
            ]
          }
        },
        "description": "Custom icon options for an icon set."
      },
      "Icon": {
        "type": "string",
        "enum": [
          "CARET_UP",
          "CARET_DOWN",
          "PLUS",
          "MINUS",
          "ARROW_UP",
          "ARROW_DOWN",
          "ARROW_LEFT",
          "ARROW_UP_LEFT",
          "ARROW_DOWN_LEFT",
          "ARROW_RIGHT",
          "ARROW_UP_RIGHT",
          "ARROW_DOWN_RIGHT",
          "FACE_UP",
          "FACE_DOWN",
          "FACE_FLAT",
          "ONE_BAR",
          "TWO_BAR",
          "THREE_BAR",
          "CIRCLE",
          "TRIANGLE",
          "SQUARE",
          "FLAG",
          "THUMBS_UP",
          "THUMBS_DOWN",
          "CHECKMARK",
          "X"
        ]
      },
      "UnicodeIcon": {
        "type": "string",
        "pattern": "^[^\\u0000-\\u00FF]$"
      },
      "ConditionalFormattingIconDisplayConfiguration": {
        "type": "object",
        "properties": {
          "IconDisplayOption": {
            "allOf": [
              {
                "$ref": "#/$defs/ConditionalFormattingIconDisplayOption"
              },
              {
                "description": "Determines the icon display configuration."
              }
            ]
          }
        },
        "description": "Determines the icon display configuration."
      },
      "ConditionalFormattingIconDisplayOption": {
        "type": "string",
        "enum": [
          "ICON_ONLY"
        ]
      },
      "TableRowConditionalFormatting": {
        "type": "object",
        "properties": {
          "BackgroundColor": {
            "allOf": [
              {
                "$ref": "#/$defs/ConditionalFormattingColor"
              },
              {
                "description": "The conditional formatting color (solid, gradient) of the background for a table row."
              }
            ]
          },
          "TextColor": {
            "allOf": [
              {
                "$ref": "#/$defs/ConditionalFormattingColor"
              },
              {
                "description": "The conditional formatting color (solid, gradient) of the text for a table row."
              }
            ]
          }
        },
        "description": "The conditional formatting of a table row."
      },
      "VisualCustomActionList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/VisualCustomAction"
        },
        "maxItems": 10
      },
      "VisualCustomAction": {
        "type": "object",
        "required": [
          "CustomActionId",
          "Name",
          "Trigger",
          "ActionOperations"
        ],
        "properties": {
          "CustomActionId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "The ID of the <code>VisualCustomAction</code>."
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualCustomActionName"
              },
              {
                "description": "The name of the <code>VisualCustomAction</code>."
              }
            ]
          },
          "Status": {
            "allOf": [
              {
                "$ref": "#/$defs/WidgetStatus"
              },
              {
                "description": "The status of the <code>VisualCustomAction</code>."
              }
            ]
          },
          "Trigger": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualCustomActionTrigger"
              },
              {
                "description": "<p>The trigger of the <code>VisualCustomAction</code>.</p> <p>Valid values are defined as follows:</p> <ul> <li> <p> <code>DATA_POINT_CLICK</code>: Initiates a custom action by a left pointer click on a data point.</p> </li> <li> <p> <code>DATA_POINT_MENU</code>: Initiates a custom action by right pointer click from the menu.</p> </li> </ul>"
              }
            ]
          },
          "ActionOperations": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualCustomActionOperationList"
              },
              {
                "description": "<p>A list of <code>VisualCustomActionOperations</code>.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>"
              }
            ]
          }
        },
        "description": "A custom action defined on a visual."
      },
      "VisualCustomActionName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 256
      },
      "VisualCustomActionTrigger": {
        "type": "string",
        "enum": [
          "DATA_POINT_CLICK",
          "DATA_POINT_MENU"
        ]
      },
      "VisualCustomActionOperationList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/VisualCustomActionOperation"
        },
        "minItems": 1,
        "maxItems": 2
      },
      "VisualCustomActionOperation": {
        "type": "object",
        "properties": {
          "FilterOperation": {
            "allOf": [
              {
                "$ref": "#/$defs/CustomActionFilterOperation"
              },
              {
                "description": "The filter operation that filters data included in a visual or in an entire sheet."
              }
            ]
          },
          "NavigationOperation": {
            "allOf": [
              {
                "$ref": "#/$defs/CustomActionNavigationOperation"
              },
              {
                "description": "The navigation operation that navigates between different sheets in the same analysis."
              }
            ]
          },
          "URLOperation": {
            "allOf": [
              {
                "$ref": "#/$defs/CustomActionURLOperation"
              },
              {
                "description": "The URL operation that opens a link to another webpage."
              }
            ]
          },
          "SetParametersOperation": {
            "allOf": [
              {
                "$ref": "#/$defs/CustomActionSetParametersOperation"
              },
              {
                "description": "The set parameter operation that sets parameters in custom action."
              }
            ]
          }
        },
        "description": "<p>The operation that is defined by the custom action.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>"
      },
      "CustomActionFilterOperation": {
        "type": "object",
        "required": [
          "SelectedFieldsConfiguration",
          "TargetVisualsConfiguration"
        ],
        "properties": {
          "SelectedFieldsConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/FilterOperationSelectedFieldsConfiguration"
              },
              {
                "description": "The configuration that chooses the fields to be filtered."
              }
            ]
          },
          "TargetVisualsConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/FilterOperationTargetVisualsConfiguration"
              },
              {
                "description": "The configuration that chooses the target visuals to be filtered."
              }
            ]
          }
        },
        "description": "The filter operation that filters data included in a visual or in an entire sheet."
      },
      "FilterOperationSelectedFieldsConfiguration": {
        "type": "object",
        "properties": {
          "SelectedFields": {
            "allOf": [
              {
                "$ref": "#/$defs/SelectedFieldList"
              },
              {
                "description": "Chooses the fields that are filtered in <code>CustomActionFilterOperation</code>."
              }
            ]
          },
          "SelectedFieldOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/SelectedFieldOptions"
              },
              {
                "description": "<p>A structure that contains the options that choose which fields are filtered in the <code>CustomActionFilterOperation</code>.</p> <p>Valid values are defined as follows:</p> <ul> <li> <p> <code>ALL_FIELDS</code>: Applies the filter operation to all fields.</p> </li> </ul>"
              }
            ]
          },
          "SelectedColumns": {
            "allOf": [
              {
                "$ref": "#/$defs/CustomActionColumnList"
              },
              {
                "description": "The selected columns of a dataset."
              }
            ]
          }
        },
        "description": "<p>The configuration of selected fields in the<code>CustomActionFilterOperation</code>.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>"
      },
      "SelectedFieldList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/FieldId"
        },
        "minItems": 1,
        "maxItems": 20
      },
      "SelectedFieldOptions": {
        "type": "string",
        "enum": [
          "ALL_FIELDS"
        ]
      },
      "CustomActionColumnList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ColumnIdentifier"
        },
        "maxItems": 10
      },
      "FilterOperationTargetVisualsConfiguration": {
        "type": "object",
        "properties": {
          "SameSheetTargetVisualConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/SameSheetTargetVisualConfiguration"
              },
              {
                "description": "The configuration of the same-sheet target visuals that you want to be filtered."
              }
            ]
          }
        },
        "description": "<p>The configuration of target visuals that you want to be filtered.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>"
      },
      "SameSheetTargetVisualConfiguration": {
        "type": "object",
        "properties": {
          "TargetVisuals": {
            "allOf": [
              {
                "$ref": "#/$defs/TargetVisualList"
              },
              {
                "description": "A list of the target visual IDs that are located in the same sheet of the analysis."
              }
            ]
          },
          "TargetVisualOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/TargetVisualOptions"
              },
              {
                "description": "<p>The options that choose the target visual in the same sheet.</p> <p>Valid values are defined as follows:</p> <ul> <li> <p> <code>ALL_VISUALS</code>: Applies the filter operation to all visuals in the same sheet.</p> </li> </ul>"
              }
            ]
          }
        },
        "description": "<p>The configuration of the same-sheet target visuals that you want to be filtered.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>"
      },
      "TargetVisualList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ShortRestrictiveResourceId"
        },
        "minItems": 1,
        "maxItems": 50
      },
      "TargetVisualOptions": {
        "type": "string",
        "enum": [
          "ALL_VISUALS"
        ]
      },
      "CustomActionNavigationOperation": {
        "type": "object",
        "properties": {
          "LocalNavigationConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/LocalNavigationConfiguration"
              },
              {
                "description": "The configuration that chooses the navigation target."
              }
            ]
          }
        },
        "description": "<p>The navigation operation that navigates between different sheets in the same analysis.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>"
      },
      "LocalNavigationConfiguration": {
        "type": "object",
        "required": [
          "TargetSheetId"
        ],
        "properties": {
          "TargetSheetId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "The sheet that is targeted for navigation in the same analysis."
              }
            ]
          }
        },
        "description": "The navigation configuration for <code>CustomActionNavigationOperation</code>."
      },
      "CustomActionURLOperation": {
        "type": "object",
        "required": [
          "URLTemplate",
          "URLTarget"
        ],
        "properties": {
          "URLTemplate": {
            "allOf": [
              {
                "$ref": "#/$defs/URLOperationTemplate"
              },
              {
                "description": "THe URL link of the <code>CustomActionURLOperation</code>."
              }
            ]
          },
          "URLTarget": {
            "allOf": [
              {
                "$ref": "#/$defs/URLTargetConfiguration"
              },
              {
                "description": "<p>The target of the <code>CustomActionURLOperation</code>.</p> <p>Valid values are defined as follows:</p> <ul> <li> <p> <code>NEW_TAB</code>: Opens the target URL in a new browser tab.</p> </li> <li> <p> <code>NEW_WINDOW</code>: Opens the target URL in a new browser window.</p> </li> <li> <p> <code>SAME_TAB</code>: Opens the target URL in the same browser tab.</p> </li> </ul>"
              }
            ]
          }
        },
        "description": "The URL operation that opens a link to another webpage."
      },
      "URLOperationTemplate": {
        "type": "string",
        "minLength": 1,
        "maxLength": 2048
      },
      "CustomActionSetParametersOperation": {
        "type": "object",
        "required": [
          "ParameterValueConfigurations"
        ],
        "properties": {
          "ParameterValueConfigurations": {
            "allOf": [
              {
                "$ref": "#/$defs/SetParameterValueConfigurationList"
              },
              {
                "description": "The parameter that determines the value configuration."
              }
            ]
          }
        },
        "description": "The set parameter operation that sets parameters in custom action."
      },
      "SetParameterValueConfigurationList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/SetParameterValueConfiguration"
        },
        "minItems": 1,
        "maxItems": 200
      },
      "SetParameterValueConfiguration": {
        "type": "object",
        "required": [
          "DestinationParameterName",
          "Value"
        ],
        "properties": {
          "DestinationParameterName": {
            "allOf": [
              {
                "$ref": "#/$defs/ParameterName"
              },
              {
                "description": "The destination parameter name of the <code>SetParameterValueConfiguration</code>."
              }
            ]
          },
          "Value": {
            "$ref": "#/$defs/DestinationParameterValueConfiguration"
          }
        },
        "description": "The configuration of adding parameters in action."
      },
      "DestinationParameterValueConfiguration": {
        "type": "object",
        "properties": {
          "CustomValuesConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/CustomValuesConfiguration"
              },
              {
                "description": "The configuration of custom values for destination parameter in <code>DestinationParameterValueConfiguration</code>."
              }
            ]
          },
          "SelectAllValueOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/SelectAllValueOptions"
              },
              {
                "description": "The configuration that selects all options."
              }
            ]
          },
          "SourceParameterName": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The source parameter name of the destination parameter."
              }
            ]
          },
          "SourceField": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldId"
              },
              {
                "description": "The source field ID of the destination parameter."
              }
            ]
          },
          "SourceColumn": {
            "$ref": "#/$defs/ColumnIdentifier"
          }
        },
        "description": "<p>The configuration of destination parameter values.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>"
      },
      "CustomValuesConfiguration": {
        "type": "object",
        "required": [
          "CustomValues"
        ],
        "properties": {
          "IncludeNullValue": {
            "allOf": [
              {
                "$ref": "#/$defs/BooleanObject"
              },
              {
                "description": "Includes the null value in custom action parameter values."
              }
            ]
          },
          "CustomValues": {
            "$ref": "#/$defs/CustomParameterValues"
          }
        },
        "description": "The configuration of custom values for the destination parameter in <code>DestinationParameterValueConfiguration</code>."
      },
      "BooleanObject": {
        "type": "boolean"
      },
      "CustomParameterValues": {
        "type": "object",
        "properties": {
          "StringValues": {
            "allOf": [
              {
                "$ref": "#/$defs/StringDefaultValueList"
              },
              {
                "description": "A list of string-type parameter values."
              }
            ]
          },
          "IntegerValues": {
            "allOf": [
              {
                "$ref": "#/$defs/IntegerDefaultValueList"
              },
              {
                "description": "A list of integer-type parameter values."
              }
            ]
          },
          "DecimalValues": {
            "allOf": [
              {
                "$ref": "#/$defs/DecimalDefaultValueList"
              },
              {
                "description": "A list of decimal-type parameter values."
              }
            ]
          },
          "DateTimeValues": {
            "allOf": [
              {
                "$ref": "#/$defs/DateTimeDefaultValueList"
              },
              {
                "description": "A list of datetime-type parameter values."
              }
            ]
          }
        },
        "description": "<p>The customized parameter values.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>"
      },
      "StringDefaultValueList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/SensitiveStringObject"
        },
        "maxItems": 50000
      },
      "SensitiveStringObject": {
        "type": "string",
        "format": "password"
      },
      "IntegerDefaultValueList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/SensitiveLongObject"
        },
        "maxItems": 50000
      },
      "SensitiveLongObject": {
        "type": "integer"
      },
      "DecimalDefaultValueList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/SensitiveDoubleObject"
        },
        "maxItems": 50000
      },
      "SensitiveDoubleObject": {
        "type": "number",
        "format": "double"
      },
      "DateTimeDefaultValueList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/SensitiveTimestamp"
        },
        "maxItems": 50000
      },
      "SelectAllValueOptions": {
        "type": "string",
        "enum": [
          "ALL_VALUES"
        ]
      },
      "PivotTableVisual": {
        "type": "object",
        "required": [
          "VisualId"
        ],
        "properties": {
          "VisualId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "The unique identifier of a visual. This identifier must be unique within the context of a dashboard, template, or analysis. Two dashboards, analyses, or templates can have visuals with the same identifiers.."
              }
            ]
          },
          "Title": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualTitleLabelOptions"
              },
              {
                "description": "The title that is displayed on the visual."
              }
            ]
          },
          "Subtitle": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualSubtitleLabelOptions"
              },
              {
                "description": "The subtitle that is displayed on the visual."
              }
            ]
          },
          "ChartConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/PivotTableConfiguration"
              },
              {
                "description": "The configuration settings of the visual."
              }
            ]
          },
          "ConditionalFormatting": {
            "allOf": [
              {
                "$ref": "#/$defs/PivotTableConditionalFormatting"
              },
              {
                "description": "The conditional formatting for a <code>PivotTableVisual</code>."
              }
            ]
          },
          "Actions": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualCustomActionList"
              },
              {
                "description": "The list of custom actions that are configured for a visual."
              }
            ]
          }
        },
        "description": "<p>A pivot table.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/pivot-table.html\">Using pivot tables</a> in the <i>Amazon QuickSight User Guide</i>.</p>"
      },
      "PivotTableConfiguration": {
        "type": "object",
        "properties": {
          "FieldWells": {
            "allOf": [
              {
                "$ref": "#/$defs/PivotTableFieldWells"
              },
              {
                "description": "The field wells of the visual."
              }
            ]
          },
          "SortConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/PivotTableSortConfiguration"
              },
              {
                "description": "The sort configuration for a <code>PivotTableVisual</code>."
              }
            ]
          },
          "TableOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/PivotTableOptions"
              },
              {
                "description": "The table options for a pivot table visual."
              }
            ]
          },
          "TotalOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/PivotTableTotalOptions"
              },
              {
                "description": "The total options for a pivot table visual."
              }
            ]
          },
          "FieldOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/PivotTableFieldOptions"
              },
              {
                "description": "The field options for a pivot table visual."
              }
            ]
          },
          "PaginatedReportOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/PivotTablePaginatedReportOptions"
              },
              {
                "description": "The paginated report options for a pivot table visual."
              }
            ]
          }
        },
        "description": "The configuration for a <code>PivotTableVisual</code>."
      },
      "PivotTableFieldWells": {
        "type": "object",
        "properties": {
          "PivotTableAggregatedFieldWells": {
            "allOf": [
              {
                "$ref": "#/$defs/PivotTableAggregatedFieldWells"
              },
              {
                "description": "The aggregated field well for the pivot table."
              }
            ]
          }
        },
        "description": "<p>The field wells for a pivot table visual.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>"
      },
      "PivotTableAggregatedFieldWells": {
        "type": "object",
        "properties": {
          "Rows": {
            "allOf": [
              {
                "$ref": "#/$defs/PivotTableDimensionList"
              },
              {
                "description": "The rows field well for a pivot table. Values are grouped by rows fields."
              }
            ]
          },
          "Columns": {
            "allOf": [
              {
                "$ref": "#/$defs/PivotTableDimensionList"
              },
              {
                "description": "The columns field well for a pivot table. Values are grouped by columns fields."
              }
            ]
          },
          "Values": {
            "allOf": [
              {
                "$ref": "#/$defs/PivotMeasureFieldList"
              },
              {
                "description": "The values field well for a pivot table. Values are aggregated based on rows and columns fields."
              }
            ]
          }
        },
        "description": "The aggregated field well for the pivot table."
      },
      "PivotTableDimensionList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/DimensionField"
        },
        "maxItems": 40
      },
      "PivotMeasureFieldList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/MeasureField"
        },
        "maxItems": 40
      },
      "PivotTableSortConfiguration": {
        "type": "object",
        "properties": {
          "FieldSortOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/PivotFieldSortOptionsList"
              },
              {
                "description": "The field sort options for a pivot table sort configuration."
              }
            ]
          }
        },
        "description": "The sort configuration for a <code>PivotTableVisual</code>."
      },
      "PivotFieldSortOptionsList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/PivotFieldSortOptions"
        },
        "maxItems": 200
      },
      "PivotFieldSortOptions": {
        "type": "object",
        "required": [
          "FieldId",
          "SortBy"
        ],
        "properties": {
          "FieldId": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldId"
              },
              {
                "description": "The field ID for the field sort options."
              }
            ]
          },
          "SortBy": {
            "allOf": [
              {
                "$ref": "#/$defs/PivotTableSortBy"
              },
              {
                "description": "The sort by field for the field sort options."
              }
            ]
          }
        },
        "description": "The field sort options for a pivot table sort configuration."
      },
      "PivotTableSortBy": {
        "type": "object",
        "properties": {
          "Field": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldSort"
              },
              {
                "description": "The field sort (field id, direction) for the pivot table sort by options."
              }
            ]
          },
          "Column": {
            "allOf": [
              {
                "$ref": "#/$defs/ColumnSort"
              },
              {
                "description": "The column sort (field id, direction) for the pivot table sort by options."
              }
            ]
          },
          "DataPath": {
            "allOf": [
              {
                "$ref": "#/$defs/DataPathSort"
              },
              {
                "description": "The data path sort (data path value, direction) for the pivot table sort by options."
              }
            ]
          }
        },
        "description": "The sort by field for the field sort options."
      },
      "DataPathSort": {
        "type": "object",
        "required": [
          "Direction",
          "SortPaths"
        ],
        "properties": {
          "Direction": {
            "allOf": [
              {
                "$ref": "#/$defs/SortDirection"
              },
              {
                "description": "Determines the sort direction."
              }
            ]
          },
          "SortPaths": {
            "allOf": [
              {
                "$ref": "#/$defs/DataPathValueList"
              },
              {
                "description": "The list of data paths that need to be sorted."
              }
            ]
          }
        },
        "description": "Allows data paths to be sorted by a specific data value."
      },
      "DataPathValueList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/DataPathValue"
        },
        "maxItems": 20
      },
      "DataPathValue": {
        "type": "object",
        "required": [
          "FieldId",
          "FieldValue"
        ],
        "properties": {
          "FieldId": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldId"
              },
              {
                "description": "The field ID of the field that needs to be sorted."
              }
            ]
          },
          "FieldValue": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldValue"
              },
              {
                "description": "The actual value of the field that needs to be sorted."
              }
            ]
          }
        },
        "description": "The data path that needs to be sorted."
      },
      "FieldValue": {
        "type": "string",
        "maxLength": 2048,
        "format": "password"
      },
      "PivotTableOptions": {
        "type": "object",
        "properties": {
          "MetricPlacement": {
            "allOf": [
              {
                "$ref": "#/$defs/PivotTableMetricPlacement"
              },
              {
                "description": "The metric placement (row, column) options."
              }
            ]
          },
          "SingleMetricVisibility": {
            "allOf": [
              {
                "$ref": "#/$defs/Visibility"
              },
              {
                "description": "The visibility of the single metric options."
              }
            ]
          },
          "ColumnNamesVisibility": {
            "allOf": [
              {
                "$ref": "#/$defs/Visibility"
              },
              {
                "description": "The visibility of the column names."
              }
            ]
          },
          "ToggleButtonsVisibility": {
            "allOf": [
              {
                "$ref": "#/$defs/Visibility"
              },
              {
                "description": "Determines the visibility of the pivot table."
              }
            ]
          },
          "ColumnHeaderStyle": {
            "allOf": [
              {
                "$ref": "#/$defs/TableCellStyle"
              },
              {
                "description": "The table cell style of the column header."
              }
            ]
          },
          "RowHeaderStyle": {
            "allOf": [
              {
                "$ref": "#/$defs/TableCellStyle"
              },
              {
                "description": "The table cell style of the row headers."
              }
            ]
          },
          "CellStyle": {
            "allOf": [
              {
                "$ref": "#/$defs/TableCellStyle"
              },
              {
                "description": "The table cell style of cells."
              }
            ]
          },
          "RowFieldNamesStyle": {
            "allOf": [
              {
                "$ref": "#/$defs/TableCellStyle"
              },
              {
                "description": "The table cell style of row field names."
              }
            ]
          },
          "RowAlternateColorOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/RowAlternateColorOptions"
              },
              {
                "description": "The row alternate color options (widget status, row alternate colors)."
              }
            ]
          },
          "CollapsedRowDimensionsVisibility": {
            "allOf": [
              {
                "$ref": "#/$defs/Visibility"
              },
              {
                "description": "The visibility setting of a pivot table's collapsed row dimension fields. If the value of this structure is <code>HIDDEN</code>, all collapsed columns in a pivot table are automatically hidden. The default value is <code>VISIBLE</code>."
              }
            ]
          }
        },
        "description": "The table options for a pivot table visual."
      },
      "PivotTableMetricPlacement": {
        "type": "string",
        "enum": [
          "ROW",
          "COLUMN"
        ]
      },
      "PivotTableTotalOptions": {
        "type": "object",
        "properties": {
          "RowSubtotalOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/SubtotalOptions"
              },
              {
                "description": "The row subtotal options."
              }
            ]
          },
          "ColumnSubtotalOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/SubtotalOptions"
              },
              {
                "description": "The column subtotal options."
              }
            ]
          },
          "RowTotalOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/PivotTotalOptions"
              },
              {
                "description": "The row total options."
              }
            ]
          },
          "ColumnTotalOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/PivotTotalOptions"
              },
              {
                "description": "The column total options."
              }
            ]
          }
        },
        "description": "The total options for a pivot table visual."
      },
      "SubtotalOptions": {
        "type": "object",
        "properties": {
          "TotalsVisibility": {
            "allOf": [
              {
                "$ref": "#/$defs/Visibility"
              },
              {
                "description": "The visibility configuration for the subtotal cells."
              }
            ]
          },
          "CustomLabel": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The custom label string for the subtotal cells."
              }
            ]
          },
          "FieldLevel": {
            "allOf": [
              {
                "$ref": "#/$defs/PivotTableSubtotalLevel"
              },
              {
                "description": "The field level (all, custom, last) for the subtotal cells."
              }
            ]
          },
          "FieldLevelOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/PivotTableFieldSubtotalOptionsList"
              },
              {
                "description": "The optional configuration of subtotal cells."
              }
            ]
          },
          "TotalCellStyle": {
            "allOf": [
              {
                "$ref": "#/$defs/TableCellStyle"
              },
              {
                "description": "The cell styling options for the subtotal cells."
              }
            ]
          },
          "ValueCellStyle": {
            "allOf": [
              {
                "$ref": "#/$defs/TableCellStyle"
              },
              {
                "description": "The cell styling options for the subtotals of value cells."
              }
            ]
          },
          "MetricHeaderCellStyle": {
            "allOf": [
              {
                "$ref": "#/$defs/TableCellStyle"
              },
              {
                "description": "The cell styling options for the subtotals of header cells."
              }
            ]
          }
        },
        "description": "The subtotal options."
      },
      "PivotTableSubtotalLevel": {
        "type": "string",
        "enum": [
          "ALL",
          "CUSTOM",
          "LAST"
        ]
      },
      "PivotTableFieldSubtotalOptionsList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/PivotTableFieldSubtotalOptions"
        },
        "maxItems": 100
      },
      "PivotTableFieldSubtotalOptions": {
        "type": "object",
        "properties": {
          "FieldId": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldId"
              },
              {
                "description": "The field ID of the subtotal options."
              }
            ]
          }
        },
        "description": "The optional configuration of subtotals cells."
      },
      "PivotTotalOptions": {
        "type": "object",
        "properties": {
          "TotalsVisibility": {
            "allOf": [
              {
                "$ref": "#/$defs/Visibility"
              },
              {
                "description": "The visibility configuration for the total cells."
              }
            ]
          },
          "Placement": {
            "allOf": [
              {
                "$ref": "#/$defs/TableTotalsPlacement"
              },
              {
                "description": "The placement (start, end) for the total cells."
              }
            ]
          },
          "ScrollStatus": {
            "allOf": [
              {
                "$ref": "#/$defs/TableTotalsScrollStatus"
              },
              {
                "description": "The scroll status (pinned, scrolled) for the total cells."
              }
            ]
          },
          "CustomLabel": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The custom label string for the total cells."
              }
            ]
          },
          "TotalCellStyle": {
            "allOf": [
              {
                "$ref": "#/$defs/TableCellStyle"
              },
              {
                "description": "The cell styling options for the total cells."
              }
            ]
          },
          "ValueCellStyle": {
            "allOf": [
              {
                "$ref": "#/$defs/TableCellStyle"
              },
              {
                "description": "The cell styling options for the totals of value cells."
              }
            ]
          },
          "MetricHeaderCellStyle": {
            "allOf": [
              {
                "$ref": "#/$defs/TableCellStyle"
              },
              {
                "description": "The cell styling options for the total of header cells."
              }
            ]
          }
        },
        "description": "The optional configuration of totals cells in a <code>PivotTableVisual</code>."
      },
      "PivotTableFieldOptions": {
        "type": "object",
        "properties": {
          "SelectedFieldOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/PivotTableFieldOptionList"
              },
              {
                "description": "The selected field options for the pivot table field options."
              }
            ]
          },
          "DataPathOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/PivotTableDataPathOptionList"
              },
              {
                "description": "The data path options for the pivot table field options."
              }
            ]
          },
          "CollapseStateOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/PivotTableFieldCollapseStateOptionList"
              },
              {
                "description": "The collapse state options for the pivot table field options."
              }
            ]
          }
        },
        "description": "The field options for a pivot table visual."
      },
      "PivotTableFieldOptionList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/PivotTableFieldOption"
        },
        "maxItems": 100
      },
      "PivotTableFieldOption": {
        "type": "object",
        "required": [
          "FieldId"
        ],
        "properties": {
          "FieldId": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldId"
              },
              {
                "description": "The field ID of the pivot table field."
              }
            ]
          },
          "CustomLabel": {
            "allOf": [
              {
                "$ref": "#/$defs/CustomLabel"
              },
              {
                "description": "The custom label of the pivot table field."
              }
            ]
          },
          "Visibility": {
            "allOf": [
              {
                "$ref": "#/$defs/Visibility"
              },
              {
                "description": "The visibility of the pivot table field."
              }
            ]
          }
        },
        "description": "The selected field options for the pivot table field options."
      },
      "PivotTableDataPathOptionList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/PivotTableDataPathOption"
        },
        "maxItems": 100
      },
      "PivotTableDataPathOption": {
        "type": "object",
        "required": [
          "DataPathList"
        ],
        "properties": {
          "DataPathList": {
            "allOf": [
              {
                "$ref": "#/$defs/DataPathValueList"
              },
              {
                "description": "The list of data path values for the data path options."
              }
            ]
          },
          "Width": {
            "allOf": [
              {
                "$ref": "#/$defs/PixelLength"
              },
              {
                "description": "The width of the data path option."
              }
            ]
          }
        },
        "description": "The data path options for the pivot table field options."
      },
      "PivotTableFieldCollapseStateOptionList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/PivotTableFieldCollapseStateOption"
        }
      },
      "PivotTableFieldCollapseStateOption": {
        "type": "object",
        "required": [
          "Target"
        ],
        "properties": {
          "Target": {
            "allOf": [
              {
                "$ref": "#/$defs/PivotTableFieldCollapseStateTarget"
              },
              {
                "description": "A tagged-union object that sets the collapse state."
              }
            ]
          },
          "State": {
            "allOf": [
              {
                "$ref": "#/$defs/PivotTableFieldCollapseState"
              },
              {
                "description": "<p>The state of the field target of a pivot table. Choose one of the following options:</p> <ul> <li> <p> <code>COLLAPSED</code> </p> </li> <li> <p> <code>EXPANDED</code> </p> </li> </ul>"
              }
            ]
          }
        },
        "description": "The collapse state options for the pivot table field options."
      },
      "PivotTableFieldCollapseStateTarget": {
        "type": "object",
        "properties": {
          "FieldId": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The field ID of the pivot table that the collapse state needs to be set to."
              }
            ]
          },
          "FieldDataPathValues": {
            "allOf": [
              {
                "$ref": "#/$defs/DataPathValueList"
              },
              {
                "description": "The data path of the pivot table's header. Used to set the collapse state."
              }
            ]
          }
        },
        "description": "The target of a pivot table field collapse state."
      },
      "PivotTableFieldCollapseState": {
        "type": "string",
        "enum": [
          "COLLAPSED",
          "EXPANDED"
        ]
      },
      "PivotTablePaginatedReportOptions": {
        "type": "object",
        "properties": {
          "VerticalOverflowVisibility": {
            "allOf": [
              {
                "$ref": "#/$defs/Visibility"
              },
              {
                "description": "The visibility of the printing table overflow across pages."
              }
            ]
          },
          "OverflowColumnHeaderVisibility": {
            "allOf": [
              {
                "$ref": "#/$defs/Visibility"
              },
              {
                "description": "The visibility of the repeating header rows on each page."
              }
            ]
          }
        },
        "description": "The paginated report options for a pivot table visual."
      },
      "PivotTableConditionalFormatting": {
        "type": "object",
        "properties": {
          "ConditionalFormattingOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/PivotTableConditionalFormattingOptionList"
              },
              {
                "description": "Conditional formatting options for a <code>PivotTableVisual</code>."
              }
            ]
          }
        },
        "description": "The conditional formatting for a <code>PivotTableVisual</code>."
      },
      "PivotTableConditionalFormattingOptionList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/PivotTableConditionalFormattingOption"
        },
        "maxItems": 100
      },
      "PivotTableConditionalFormattingOption": {
        "type": "object",
        "properties": {
          "Cell": {
            "allOf": [
              {
                "$ref": "#/$defs/PivotTableCellConditionalFormatting"
              },
              {
                "description": "The cell conditional formatting option for a pivot table."
              }
            ]
          }
        },
        "description": "Conditional formatting options for a <code>PivotTableVisual</code>."
      },
      "PivotTableCellConditionalFormatting": {
        "type": "object",
        "required": [
          "FieldId"
        ],
        "properties": {
          "FieldId": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldId"
              },
              {
                "description": "The field ID of the cell for conditional formatting."
              }
            ]
          },
          "TextFormat": {
            "allOf": [
              {
                "$ref": "#/$defs/TextConditionalFormat"
              },
              {
                "description": "The text format of the cell for conditional formatting."
              }
            ]
          },
          "Scope": {
            "allOf": [
              {
                "$ref": "#/$defs/PivotTableConditionalFormattingScope"
              },
              {
                "description": "The scope of the cell for conditional formatting."
              }
            ]
          },
          "Scopes": {
            "allOf": [
              {
                "$ref": "#/$defs/PivotTableConditionalFormattingScopeList"
              },
              {
                "description": "A list of cell scopes for conditional formatting."
              }
            ]
          }
        },
        "description": "The cell conditional formatting option for a pivot table."
      },
      "PivotTableConditionalFormattingScope": {
        "type": "object",
        "properties": {
          "Role": {
            "allOf": [
              {
                "$ref": "#/$defs/PivotTableConditionalFormattingScopeRole"
              },
              {
                "description": "The role (field, field total, grand total) of the cell for conditional formatting."
              }
            ]
          }
        },
        "description": "The scope of the cell for conditional formatting."
      },
      "PivotTableConditionalFormattingScopeRole": {
        "type": "string",
        "enum": [
          "FIELD",
          "FIELD_TOTAL",
          "GRAND_TOTAL"
        ]
      },
      "PivotTableConditionalFormattingScopeList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/PivotTableConditionalFormattingScope"
        },
        "maxItems": 3
      },
      "BarChartVisual": {
        "type": "object",
        "required": [
          "VisualId"
        ],
        "properties": {
          "VisualId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "The unique identifier of a visual. This identifier must be unique within the context of a dashboard, template, or analysis. Two dashboards, analyses, or templates can have visuals with the same identifiers."
              }
            ]
          },
          "Title": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualTitleLabelOptions"
              },
              {
                "description": "The title that is displayed on the visual."
              }
            ]
          },
          "Subtitle": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualSubtitleLabelOptions"
              },
              {
                "description": "The subtitle that is displayed on the visual."
              }
            ]
          },
          "ChartConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/BarChartConfiguration"
              },
              {
                "description": "The configuration settings of the visual."
              }
            ]
          },
          "Actions": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualCustomActionList"
              },
              {
                "description": "The list of custom actions that are configured for a visual."
              }
            ]
          },
          "ColumnHierarchies": {
            "allOf": [
              {
                "$ref": "#/$defs/ColumnHierarchyList"
              },
              {
                "description": "The column hierarchy that is used during drill-downs and drill-ups."
              }
            ]
          }
        },
        "description": "<p>A bar chart.</p> <p>The <code>BarChartVisual</code> structure describes a visual that is a member of the bar chart family. The following charts can be described using this structure:</p> <ul> <li> <p>Horizontal bar chart</p> </li> <li> <p>Vertical bar chart</p> </li> <li> <p>Horizontal stacked bar chart</p> </li> <li> <p>Vertical stacked bar chart</p> </li> <li> <p>Horizontal stacked 100% bar chart</p> </li> <li> <p>Vertical stacked 100% bar chart</p> </li> </ul> <p>For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/bar-charts.html\">Using bar charts</a> in the <i>Amazon QuickSight User Guide</i>.</p>"
      },
      "BarChartConfiguration": {
        "type": "object",
        "properties": {
          "FieldWells": {
            "allOf": [
              {
                "$ref": "#/$defs/BarChartFieldWells"
              },
              {
                "description": "The field wells of the visual."
              }
            ]
          },
          "SortConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/BarChartSortConfiguration"
              },
              {
                "description": "The sort configuration of a <code>BarChartVisual</code>."
              }
            ]
          },
          "Orientation": {
            "allOf": [
              {
                "$ref": "#/$defs/BarChartOrientation"
              },
              {
                "description": "<p>The orientation of the bars in a bar chart visual. There are two valid values in this structure:</p> <ul> <li> <p> <code>HORIZONTAL</code>: Used for charts that have horizontal bars. Visuals that use this value are horizontal bar charts, horizontal stacked bar charts, and horizontal stacked 100% bar charts.</p> </li> <li> <p> <code>VERTICAL</code>: Used for charts that have vertical bars. Visuals that use this value are vertical bar charts, vertical stacked bar charts, and vertical stacked 100% bar charts.</p> </li> </ul>"
              }
            ]
          },
          "BarsArrangement": {
            "allOf": [
              {
                "$ref": "#/$defs/BarsArrangement"
              },
              {
                "description": "Determines the arrangement of the bars. The orientation and arrangement of bars determine the type of bar that is used in the visual."
              }
            ]
          },
          "VisualPalette": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualPalette"
              },
              {
                "description": "The palette (chart color) display setup of the visual."
              }
            ]
          },
          "SmallMultiplesOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/SmallMultiplesOptions"
              },
              {
                "description": "The small multiples setup for the visual."
              }
            ]
          },
          "CategoryAxis": {
            "allOf": [
              {
                "$ref": "#/$defs/AxisDisplayOptions"
              },
              {
                "description": "The label display options (grid line, range, scale, axis step) for bar chart category."
              }
            ]
          },
          "CategoryLabelOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/ChartAxisLabelOptions"
              },
              {
                "description": "The label options (label text, label visibility and sort icon visibility) for a bar chart."
              }
            ]
          },
          "ValueAxis": {
            "allOf": [
              {
                "$ref": "#/$defs/AxisDisplayOptions"
              },
              {
                "description": "The label display options (grid line, range, scale, axis step) for a bar chart value."
              }
            ]
          },
          "ValueLabelOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/ChartAxisLabelOptions"
              },
              {
                "description": "The label options (label text, label visibility and sort icon visibility) for a bar chart value."
              }
            ]
          },
          "ColorLabelOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/ChartAxisLabelOptions"
              },
              {
                "description": "The label options (label text, label visibility and sort icon visibility) for a color that is used in a bar chart."
              }
            ]
          },
          "Legend": {
            "allOf": [
              {
                "$ref": "#/$defs/LegendOptions"
              },
              {
                "description": "The legend display setup of the visual."
              }
            ]
          },
          "DataLabels": {
            "allOf": [
              {
                "$ref": "#/$defs/DataLabelOptions"
              },
              {
                "description": "The options that determine if visual data labels are displayed."
              }
            ]
          },
          "Tooltip": {
            "allOf": [
              {
                "$ref": "#/$defs/TooltipOptions"
              },
              {
                "description": "The tooltip display setup of the visual."
              }
            ]
          },
          "ReferenceLines": {
            "allOf": [
              {
                "$ref": "#/$defs/ReferenceLineList"
              },
              {
                "description": "The reference line setup of the visual."
              }
            ]
          },
          "ContributionAnalysisDefaults": {
            "allOf": [
              {
                "$ref": "#/$defs/ContributionAnalysisDefaultList"
              },
              {
                "description": "The contribution analysis (anomaly configuration) setup of the visual."
              }
            ]
          }
        },
        "description": "The configuration of a <code>BarChartVisual</code>."
      },
      "BarChartFieldWells": {
        "type": "object",
        "properties": {
          "BarChartAggregatedFieldWells": {
            "allOf": [
              {
                "$ref": "#/$defs/BarChartAggregatedFieldWells"
              },
              {
                "description": "The aggregated field wells of a bar chart."
              }
            ]
          }
        },
        "description": "<p>The field wells of a <code>BarChartVisual</code>.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>"
      },
      "BarChartAggregatedFieldWells": {
        "type": "object",
        "properties": {
          "Category": {
            "allOf": [
              {
                "$ref": "#/$defs/DimensionFieldList"
              },
              {
                "description": "The category (y-axis) field well of a bar chart."
              }
            ]
          },
          "Values": {
            "allOf": [
              {
                "$ref": "#/$defs/MeasureFieldList"
              },
              {
                "description": "The value field wells of a bar chart. Values are aggregated by category."
              }
            ]
          },
          "Colors": {
            "allOf": [
              {
                "$ref": "#/$defs/DimensionFieldList"
              },
              {
                "description": "The color (group/color) field well of a bar chart."
              }
            ]
          },
          "SmallMultiples": {
            "allOf": [
              {
                "$ref": "#/$defs/SmallMultiplesDimensionFieldList"
              },
              {
                "description": "The small multiples field well of a bar chart."
              }
            ]
          }
        },
        "description": "The aggregated field wells of a bar chart."
      },
      "SmallMultiplesDimensionFieldList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/DimensionField"
        },
        "maxItems": 1
      },
      "BarChartSortConfiguration": {
        "type": "object",
        "properties": {
          "CategorySort": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldSortOptionsList"
              },
              {
                "description": "The sort configuration of category fields."
              }
            ]
          },
          "CategoryItemsLimit": {
            "allOf": [
              {
                "$ref": "#/$defs/ItemsLimitConfiguration"
              },
              {
                "description": "The limit on the number of categories displayed in a bar chart."
              }
            ]
          },
          "ColorSort": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldSortOptionsList"
              },
              {
                "description": "The sort configuration of color fields in a bar chart."
              }
            ]
          },
          "ColorItemsLimit": {
            "allOf": [
              {
                "$ref": "#/$defs/ItemsLimitConfiguration"
              },
              {
                "description": "The limit on the number of values displayed in a bar chart."
              }
            ]
          },
          "SmallMultiplesSort": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldSortOptionsList"
              },
              {
                "description": "The sort configuration of the small multiples field."
              }
            ]
          },
          "SmallMultiplesLimitConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/ItemsLimitConfiguration"
              },
              {
                "description": "The limit on the number of small multiples panels that are displayed."
              }
            ]
          }
        },
        "description": "sort-configuration-description"
      },
      "FieldSortOptionsList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/FieldSortOptions"
        },
        "maxItems": 100
      },
      "ItemsLimitConfiguration": {
        "type": "object",
        "properties": {
          "ItemsLimit": {
            "allOf": [
              {
                "$ref": "#/$defs/Long"
              },
              {
                "description": "The limit on how many items of a field are showed in the chart. For example, the number of slices that are displayed in a pie chart."
              }
            ]
          },
          "OtherCategories": {
            "allOf": [
              {
                "$ref": "#/$defs/OtherCategories"
              },
              {
                "description": "<p>The <code>Show other</code> of an axis in the chart. Choose one of the following options:</p> <ul> <li> <p> <code>INCLUDE</code> </p> </li> <li> <p> <code>EXCLUDE</code> </p> </li> </ul>"
              }
            ]
          }
        },
        "description": "The limit configuration of the visual display for an axis."
      },
      "OtherCategories": {
        "type": "string",
        "enum": [
          "INCLUDE",
          "EXCLUDE"
        ]
      },
      "BarChartOrientation": {
        "type": "string",
        "enum": [
          "HORIZONTAL",
          "VERTICAL"
        ]
      },
      "BarsArrangement": {
        "type": "string",
        "enum": [
          "CLUSTERED",
          "STACKED",
          "STACKED_PERCENT"
        ]
      },
      "VisualPalette": {
        "type": "object",
        "properties": {
          "ChartColor": {
            "allOf": [
              {
                "$ref": "#/$defs/HexColor"
              },
              {
                "description": "The chart color options for the visual palette."
              }
            ]
          },
          "ColorMap": {
            "allOf": [
              {
                "$ref": "#/$defs/DataPathColorList"
              },
              {
                "description": "The color map options for the visual palette."
              }
            ]
          }
        },
        "description": "The visual display options for the visual palette."
      },
      "DataPathColorList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/DataPathColor"
        },
        "maxItems": 5000
      },
      "DataPathColor": {
        "type": "object",
        "required": [
          "Element",
          "Color"
        ],
        "properties": {
          "Element": {
            "allOf": [
              {
                "$ref": "#/$defs/DataPathValue"
              },
              {
                "description": "The element that the color needs to be applied to."
              }
            ]
          },
          "Color": {
            "allOf": [
              {
                "$ref": "#/$defs/HexColor"
              },
              {
                "description": "The color that needs to be applied to the element."
              }
            ]
          },
          "TimeGranularity": {
            "allOf": [
              {
                "$ref": "#/$defs/TimeGranularity"
              },
              {
                "description": "The time granularity of the field that the color needs to be applied to."
              }
            ]
          }
        },
        "description": "The color map that determines the color options for a particular element."
      },
      "SmallMultiplesOptions": {
        "type": "object",
        "properties": {
          "MaxVisibleRows": {
            "allOf": [
              {
                "$ref": "#/$defs/VisiblePanelRows"
              },
              {
                "description": "<p>Sets the maximum number of visible rows to display in the grid of small multiples panels.</p> <p>The default value is <code>Auto</code>, which automatically adjusts the rows in the grid to fit the overall layout and size of the given chart.</p>"
              }
            ]
          },
          "MaxVisibleColumns": {
            "allOf": [
              {
                "$ref": "#/$defs/VisiblePanelColumns"
              },
              {
                "description": "<p>Sets the maximum number of visible columns to display in the grid of small multiples panels.</p> <p>The default is <code>Auto</code>, which automatically adjusts the columns in the grid to fit the overall layout and size of the given chart.</p>"
              }
            ]
          },
          "PanelConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/PanelConfiguration"
              },
              {
                "description": "Configures the display options for each small multiples panel."
              }
            ]
          },
          "XAxis": {
            "allOf": [
              {
                "$ref": "#/$defs/SmallMultiplesAxisProperties"
              },
              {
                "description": "The properties of a small multiples X axis."
              }
            ]
          },
          "YAxis": {
            "allOf": [
              {
                "$ref": "#/$defs/SmallMultiplesAxisProperties"
              },
              {
                "description": "The properties of a small multiples Y axis."
              }
            ]
          }
        },
        "description": "Options that determine the layout and display options of a chart's small multiples."
      },
      "VisiblePanelRows": {
        "type": "integer",
        "minimum": 1,
        "maximum": 10
      },
      "VisiblePanelColumns": {
        "type": "integer",
        "minimum": 1,
        "maximum": 10
      },
      "PanelConfiguration": {
        "type": "object",
        "properties": {
          "Title": {
            "allOf": [
              {
                "$ref": "#/$defs/PanelTitleOptions"
              },
              {
                "description": "Configures the title display within each small multiples panel."
              }
            ]
          },
          "BorderVisibility": {
            "allOf": [
              {
                "$ref": "#/$defs/Visibility"
              },
              {
                "description": "Determines whether or not each panel displays a border."
              }
            ]
          },
          "BorderThickness": {
            "allOf": [
              {
                "$ref": "#/$defs/PixelLength"
              },
              {
                "description": "Sets the line thickness of panel borders."
              }
            ]
          },
          "BorderStyle": {
            "allOf": [
              {
                "$ref": "#/$defs/PanelBorderStyle"
              },
              {
                "description": "Sets the line style of panel borders."
              }
            ]
          },
          "BorderColor": {
            "allOf": [
              {
                "$ref": "#/$defs/HexColorWithTransparency"
              },
              {
                "description": "Sets the line color of panel borders."
              }
            ]
          },
          "GutterVisibility": {
            "allOf": [
              {
                "$ref": "#/$defs/Visibility"
              },
              {
                "description": "Determines whether or not negative space between sibling panels is rendered."
              }
            ]
          },
          "GutterSpacing": {
            "allOf": [
              {
                "$ref": "#/$defs/PixelLength"
              },
              {
                "description": "Sets the total amount of negative space to display between sibling panels."
              }
            ]
          },
          "BackgroundVisibility": {
            "allOf": [
              {
                "$ref": "#/$defs/Visibility"
              },
              {
                "description": "Determines whether or not a background for each small multiples panel is rendered."
              }
            ]
          },
          "BackgroundColor": {
            "allOf": [
              {
                "$ref": "#/$defs/HexColorWithTransparency"
              },
              {
                "description": "Sets the background color for each panel."
              }
            ]
          }
        },
        "description": "A collection of options that configure how each panel displays in a small multiples chart."
      },
      "PanelTitleOptions": {
        "type": "object",
        "properties": {
          "Visibility": {
            "allOf": [
              {
                "$ref": "#/$defs/Visibility"
              },
              {
                "description": "Determines whether or not panel titles are displayed."
              }
            ]
          },
          "FontConfiguration": {
            "$ref": "#/$defs/FontConfiguration"
          },
          "HorizontalTextAlignment": {
            "allOf": [
              {
                "$ref": "#/$defs/HorizontalTextAlignment"
              },
              {
                "description": "Sets the horizontal text alignment of the title within each panel."
              }
            ]
          }
        },
        "description": "The options that determine the title styles for each small multiples panel."
      },
      "PanelBorderStyle": {
        "type": "string",
        "enum": [
          "SOLID",
          "DASHED",
          "DOTTED"
        ]
      },
      "HexColorWithTransparency": {
        "type": "string",
        "pattern": "^#[A-F0-9]{6}(?:[A-F0-9]{2})?$"
      },
      "SmallMultiplesAxisProperties": {
        "type": "object",
        "properties": {
          "Scale": {
            "allOf": [
              {
                "$ref": "#/$defs/SmallMultiplesAxisScale"
              },
              {
                "description": "Determines whether scale of the axes are shared or independent. The default value is <code>SHARED</code>."
              }
            ]
          },
          "Placement": {
            "allOf": [
              {
                "$ref": "#/$defs/SmallMultiplesAxisPlacement"
              },
              {
                "description": "Defines the placement of the axis. By default, axes are rendered <code>OUTSIDE</code> of the panels. Axes with <code>INDEPENDENT</code> scale are rendered <code>INSIDE</code> the panels."
              }
            ]
          }
        },
        "description": "Configures the properties of a chart's axes that are used by small multiples panels."
      },
      "SmallMultiplesAxisScale": {
        "type": "string",
        "enum": [
          "SHARED",
          "INDEPENDENT"
        ]
      },
      "SmallMultiplesAxisPlacement": {
        "type": "string",
        "enum": [
          "OUTSIDE",
          "INSIDE"
        ]
      },
      "AxisDisplayOptions": {
        "type": "object",
        "properties": {
          "TickLabelOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/AxisTickLabelOptions"
              },
              {
                "description": "The tick label options of an axis."
              }
            ]
          },
          "AxisLineVisibility": {
            "allOf": [
              {
                "$ref": "#/$defs/Visibility"
              },
              {
                "description": "Determines whether or not the axis line is visible."
              }
            ]
          },
          "GridLineVisibility": {
            "allOf": [
              {
                "$ref": "#/$defs/Visibility"
              },
              {
                "description": "Determines whether or not the grid line is visible."
              }
            ]
          },
          "DataOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/AxisDataOptions"
              },
              {
                "description": "The data options for an axis."
              }
            ]
          },
          "ScrollbarOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/ScrollBarOptions"
              },
              {
                "description": "The scroll bar options for an axis."
              }
            ]
          },
          "AxisOffset": {
            "allOf": [
              {
                "$ref": "#/$defs/PixelLength"
              },
              {
                "description": "The offset value that determines the starting placement of the axis within a visual's bounds."
              }
            ]
          }
        },
        "description": "The display options for the axis label."
      },
      "AxisTickLabelOptions": {
        "type": "object",
        "properties": {
          "LabelOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/LabelOptions"
              },
              {
                "description": "Determines whether or not the axis ticks are visible."
              }
            ]
          },
          "RotationAngle": {
            "allOf": [
              {
                "$ref": "#/$defs/Double"
              },
              {
                "description": "The rotation angle of the axis tick labels."
              }
            ]
          }
        },
        "description": "The tick label options of an axis."
      },
      "AxisDataOptions": {
        "type": "object",
        "properties": {
          "NumericAxisOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/NumericAxisOptions"
              },
              {
                "description": "The options for an axis with a numeric field."
              }
            ]
          },
          "DateAxisOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/DateAxisOptions"
              },
              {
                "description": "The options for an axis with a date field."
              }
            ]
          }
        },
        "description": "<p>The data options for an axis.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>"
      },
      "NumericAxisOptions": {
        "type": "object",
        "properties": {
          "Scale": {
            "allOf": [
              {
                "$ref": "#/$defs/AxisScale"
              },
              {
                "description": "The scale setup of a numeric axis."
              }
            ]
          },
          "Range": {
            "allOf": [
              {
                "$ref": "#/$defs/AxisDisplayRange"
              },
              {
                "description": "The range setup of a numeric axis."
              }
            ]
          }
        },
        "description": "The options for an axis with a numeric field."
      },
      "AxisScale": {
        "type": "object",
        "properties": {
          "Linear": {
            "allOf": [
              {
                "$ref": "#/$defs/AxisLinearScale"
              },
              {
                "description": "The linear axis scale setup."
              }
            ]
          },
          "Logarithmic": {
            "allOf": [
              {
                "$ref": "#/$defs/AxisLogarithmicScale"
              },
              {
                "description": "The logarithmic axis scale setup."
              }
            ]
          }
        },
        "description": "<p>The scale setup options for a numeric axis display.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>"
      },
      "AxisLinearScale": {
        "type": "object",
        "properties": {
          "StepCount": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "The step count setup of a linear axis."
              }
            ]
          },
          "StepSize": {
            "allOf": [
              {
                "$ref": "#/$defs/Double"
              },
              {
                "description": "The step size setup of a linear axis."
              }
            ]
          }
        },
        "description": "<p>The liner axis scale setup.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>"
      },
      "Integer": {
        "type": "integer"
      },
      "AxisLogarithmicScale": {
        "type": "object",
        "properties": {
          "Base": {
            "allOf": [
              {
                "$ref": "#/$defs/Double"
              },
              {
                "description": "The base setup of a logarithmic axis scale."
              }
            ]
          }
        },
        "description": "The logarithmic axis scale setup."
      },
      "AxisDisplayRange": {
        "type": "object",
        "properties": {
          "MinMax": {
            "allOf": [
              {
                "$ref": "#/$defs/AxisDisplayMinMaxRange"
              },
              {
                "description": "The minimum and maximum setup of an axis display range."
              }
            ]
          },
          "DataDriven": {
            "allOf": [
              {
                "$ref": "#/$defs/AxisDisplayDataDrivenRange"
              },
              {
                "description": "The data-driven setup of an axis display range."
              }
            ]
          }
        },
        "description": "<p>The range setup of a numeric axis display range.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>"
      },
      "AxisDisplayMinMaxRange": {
        "type": "object",
        "properties": {
          "Minimum": {
            "allOf": [
              {
                "$ref": "#/$defs/Double"
              },
              {
                "description": "The minimum setup for an axis display range."
              }
            ]
          },
          "Maximum": {
            "allOf": [
              {
                "$ref": "#/$defs/Double"
              },
              {
                "description": "The maximum setup for an axis display range."
              }
            ]
          }
        },
        "description": "The minimum and maximum setup for an axis display range."
      },
      "AxisDisplayDataDrivenRange": {
        "type": "object",
        "properties": {},
        "description": "The options that are saved for future extension."
      },
      "DateAxisOptions": {
        "type": "object",
        "properties": {
          "MissingDateVisibility": {
            "allOf": [
              {
                "$ref": "#/$defs/Visibility"
              },
              {
                "description": "Determines whether or not missing dates are displayed."
              }
            ]
          }
        },
        "description": "The options that determine how a date axis is displayed."
      },
      "ScrollBarOptions": {
        "type": "object",
        "properties": {
          "Visibility": {
            "allOf": [
              {
                "$ref": "#/$defs/Visibility"
              },
              {
                "description": "The visibility of the data zoom scroll bar."
              }
            ]
          },
          "VisibleRange": {
            "allOf": [
              {
                "$ref": "#/$defs/VisibleRangeOptions"
              },
              {
                "description": "The visibility range for the data zoom scroll bar."
              }
            ]
          }
        },
        "description": "The visual display options for a data zoom scroll bar."
      },
      "VisibleRangeOptions": {
        "type": "object",
        "properties": {
          "PercentRange": {
            "allOf": [
              {
                "$ref": "#/$defs/PercentVisibleRange"
              },
              {
                "description": "The percent range in the visible range."
              }
            ]
          }
        },
        "description": "The range options for the data zoom scroll bar."
      },
      "PercentVisibleRange": {
        "type": "object",
        "properties": {
          "From": {
            "allOf": [
              {
                "$ref": "#/$defs/PercentNumber"
              },
              {
                "description": "The lower bound of the range."
              }
            ]
          },
          "To": {
            "allOf": [
              {
                "$ref": "#/$defs/PercentNumber"
              },
              {
                "description": "The top bound of the range."
              }
            ]
          }
        },
        "description": "The percent range in the visible range."
      },
      "PercentNumber": {
        "type": "number",
        "format": "double",
        "minimum": 0,
        "maximum": 100
      },
      "ChartAxisLabelOptions": {
        "type": "object",
        "properties": {
          "Visibility": {
            "allOf": [
              {
                "$ref": "#/$defs/Visibility"
              },
              {
                "description": "<p>The visibility of an axis label on a chart. Choose one of the following options:</p> <ul> <li> <p> <code>VISIBLE</code>: Shows the axis.</p> </li> <li> <p> <code>HIDDEN</code>: Hides the axis.</p> </li> </ul>"
              }
            ]
          },
          "SortIconVisibility": {
            "allOf": [
              {
                "$ref": "#/$defs/Visibility"
              },
              {
                "description": "The visibility configuration of the sort icon on a chart's axis label."
              }
            ]
          },
          "AxisLabelOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/AxisLabelOptionsList"
              },
              {
                "description": "The label options for a chart axis."
              }
            ]
          }
        },
        "description": "The label options for an axis on a chart."
      },
      "AxisLabelOptionsList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/AxisLabelOptions"
        },
        "maxItems": 100
      },
      "AxisLabelOptions": {
        "type": "object",
        "properties": {
          "FontConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/FontConfiguration"
              },
              {
                "description": "The font configuration of the axis label."
              }
            ]
          },
          "CustomLabel": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The text for the axis label."
              }
            ]
          },
          "ApplyTo": {
            "allOf": [
              {
                "$ref": "#/$defs/AxisLabelReferenceOptions"
              },
              {
                "description": "The options that indicate which field the label belongs to."
              }
            ]
          }
        },
        "description": "The label options for a chart axis. You must specify the field that the label is targeted to."
      },
      "AxisLabelReferenceOptions": {
        "type": "object",
        "required": [
          "FieldId",
          "Column"
        ],
        "properties": {
          "FieldId": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldId"
              },
              {
                "description": "The field that the axis label is targeted to."
              }
            ]
          },
          "Column": {
            "allOf": [
              {
                "$ref": "#/$defs/ColumnIdentifier"
              },
              {
                "description": "The column that the axis label is targeted to."
              }
            ]
          }
        },
        "description": "The reference that specifies where the axis label is applied to."
      },
      "LegendOptions": {
        "type": "object",
        "properties": {
          "Visibility": {
            "allOf": [
              {
                "$ref": "#/$defs/Visibility"
              },
              {
                "description": "Determines whether or not the legend is visible."
              }
            ]
          },
          "Title": {
            "allOf": [
              {
                "$ref": "#/$defs/LabelOptions"
              },
              {
                "description": "The custom title for the legend."
              }
            ]
          },
          "Position": {
            "allOf": [
              {
                "$ref": "#/$defs/LegendPosition"
              },
              {
                "description": "<p>The positions for the legend. Choose one of the following options:</p> <ul> <li> <p> <code>AUTO</code> </p> </li> <li> <p> <code>RIGHT</code> </p> </li> <li> <p> <code>BOTTOM</code> </p> </li> <li> <p> <code>LEFT</code> </p> </li> </ul>"
              }
            ]
          },
          "Width": {
            "allOf": [
              {
                "$ref": "#/$defs/PixelLength"
              },
              {
                "description": "The width of the legend. If this value is omitted, a default width is used when rendering."
              }
            ]
          },
          "Height": {
            "allOf": [
              {
                "$ref": "#/$defs/PixelLength"
              },
              {
                "description": "The height of the legend. If this value is omitted, a default height is used when rendering."
              }
            ]
          }
        },
        "description": "The options for the legend setup of a visual."
      },
      "LegendPosition": {
        "type": "string",
        "enum": [
          "AUTO",
          "RIGHT",
          "BOTTOM",
          "TOP"
        ]
      },
      "DataLabelOptions": {
        "type": "object",
        "properties": {
          "Visibility": {
            "allOf": [
              {
                "$ref": "#/$defs/Visibility"
              },
              {
                "description": "Determines the visibility of the data labels."
              }
            ]
          },
          "CategoryLabelVisibility": {
            "allOf": [
              {
                "$ref": "#/$defs/Visibility"
              },
              {
                "description": "Determines the visibility of the category field labels."
              }
            ]
          },
          "MeasureLabelVisibility": {
            "allOf": [
              {
                "$ref": "#/$defs/Visibility"
              },
              {
                "description": "Determines the visibility of the measure field labels."
              }
            ]
          },
          "DataLabelTypes": {
            "allOf": [
              {
                "$ref": "#/$defs/DataLabelTypes"
              },
              {
                "description": "The option that determines the data label type."
              }
            ]
          },
          "Position": {
            "allOf": [
              {
                "$ref": "#/$defs/DataLabelPosition"
              },
              {
                "description": "Determines the position of the data labels."
              }
            ]
          },
          "LabelContent": {
            "allOf": [
              {
                "$ref": "#/$defs/DataLabelContent"
              },
              {
                "description": "Determines the content of the data labels."
              }
            ]
          },
          "LabelFontConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/FontConfiguration"
              },
              {
                "description": "Determines the font configuration of the data labels."
              }
            ]
          },
          "LabelColor": {
            "allOf": [
              {
                "$ref": "#/$defs/HexColor"
              },
              {
                "description": "Determines the color of the data labels."
              }
            ]
          },
          "Overlap": {
            "allOf": [
              {
                "$ref": "#/$defs/DataLabelOverlap"
              },
              {
                "description": "Determines whether overlap is enabled or disabled for the data labels."
              }
            ]
          },
          "TotalsVisibility": {
            "allOf": [
              {
                "$ref": "#/$defs/Visibility"
              },
              {
                "description": "Determines the visibility of the total."
              }
            ]
          }
        },
        "description": "The options that determine the presentation of the data labels."
      },
      "DataLabelTypes": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/DataLabelType"
        },
        "maxItems": 100
      },
      "DataLabelType": {
        "type": "object",
        "properties": {
          "FieldLabelType": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldLabelType"
              },
              {
                "description": "Determines the label configuration for the entire field."
              }
            ]
          },
          "DataPathLabelType": {
            "allOf": [
              {
                "$ref": "#/$defs/DataPathLabelType"
              },
              {
                "description": "The option that specifies individual data values for labels."
              }
            ]
          },
          "RangeEndsLabelType": {
            "allOf": [
              {
                "$ref": "#/$defs/RangeEndsLabelType"
              },
              {
                "description": "Determines the label configuration for range end value in a visual."
              }
            ]
          },
          "MinimumLabelType": {
            "allOf": [
              {
                "$ref": "#/$defs/MinimumLabelType"
              },
              {
                "description": "Determines the label configuration for the minimum value in a visual."
              }
            ]
          },
          "MaximumLabelType": {
            "allOf": [
              {
                "$ref": "#/$defs/MaximumLabelType"
              },
              {
                "description": "Determines the label configuration for the maximum value in a visual."
              }
            ]
          }
        },
        "description": "<p>The option that determines the data label type.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>"
      },
      "FieldLabelType": {
        "type": "object",
        "properties": {
          "FieldId": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldId"
              },
              {
                "description": "Indicates the field that is targeted by the field label."
              }
            ]
          },
          "Visibility": {
            "allOf": [
              {
                "$ref": "#/$defs/Visibility"
              },
              {
                "description": "The visibility of the field label."
              }
            ]
          }
        },
        "description": "The field label type."
      },
      "DataPathLabelType": {
        "type": "object",
        "properties": {
          "FieldId": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldId"
              },
              {
                "description": "The field ID of the field that the data label needs to be applied to."
              }
            ]
          },
          "FieldValue": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldValue"
              },
              {
                "description": "The actual value of the field that is labeled."
              }
            ]
          },
          "Visibility": {
            "allOf": [
              {
                "$ref": "#/$defs/Visibility"
              },
              {
                "description": "The visibility of the data label."
              }
            ]
          }
        },
        "description": "The option that specifies individual data values for labels."
      },
      "RangeEndsLabelType": {
        "type": "object",
        "properties": {
          "Visibility": {
            "allOf": [
              {
                "$ref": "#/$defs/Visibility"
              },
              {
                "description": "The visibility of the range ends label."
              }
            ]
          }
        },
        "description": "The range ends label type of a data path label."
      },
      "MinimumLabelType": {
        "type": "object",
        "properties": {
          "Visibility": {
            "allOf": [
              {
                "$ref": "#/$defs/Visibility"
              },
              {
                "description": "The visibility of the minimum label."
              }
            ]
          }
        },
        "description": "The minimum label of a data path label."
      },
      "MaximumLabelType": {
        "type": "object",
        "properties": {
          "Visibility": {
            "allOf": [
              {
                "$ref": "#/$defs/Visibility"
              },
              {
                "description": "The visibility of the maximum label."
              }
            ]
          }
        },
        "description": "The maximum label of a data path label."
      },
      "DataLabelPosition": {
        "type": "string",
        "enum": [
          "INSIDE",
          "OUTSIDE",
          "LEFT",
          "TOP",
          "BOTTOM",
          "RIGHT"
        ]
      },
      "DataLabelContent": {
        "type": "string",
        "enum": [
          "VALUE",
          "PERCENT",
          "VALUE_AND_PERCENT"
        ]
      },
      "DataLabelOverlap": {
        "type": "string",
        "enum": [
          "DISABLE_OVERLAP",
          "ENABLE_OVERLAP"
        ]
      },
      "TooltipOptions": {
        "type": "object",
        "properties": {
          "TooltipVisibility": {
            "allOf": [
              {
                "$ref": "#/$defs/Visibility"
              },
              {
                "description": "Determines whether or not the tooltip is visible."
              }
            ]
          },
          "SelectedTooltipType": {
            "allOf": [
              {
                "$ref": "#/$defs/SelectedTooltipType"
              },
              {
                "description": "<p>The selected type for the tooltip. Choose one of the following options:</p> <ul> <li> <p> <code>BASIC</code>: A basic tooltip.</p> </li> <li> <p> <code>DETAILED</code>: A detailed tooltip.</p> </li> </ul>"
              }
            ]
          },
          "FieldBasedTooltip": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldBasedTooltip"
              },
              {
                "description": "The setup for the detailed tooltip. The tooltip setup is always saved. The display type is decided based on the tooltip type."
              }
            ]
          }
        },
        "description": "The display options for the visual tooltip."
      },
      "SelectedTooltipType": {
        "type": "string",
        "enum": [
          "BASIC",
          "DETAILED"
        ]
      },
      "FieldBasedTooltip": {
        "type": "object",
        "properties": {
          "AggregationVisibility": {
            "allOf": [
              {
                "$ref": "#/$defs/Visibility"
              },
              {
                "description": "The visibility of <code>Show aggregations</code>."
              }
            ]
          },
          "TooltipTitleType": {
            "allOf": [
              {
                "$ref": "#/$defs/TooltipTitleType"
              },
              {
                "description": "<p>The type for the &gt;tooltip title. Choose one of the following options:</p> <ul> <li> <p> <code>NONE</code>: Doesn't use the primary value as the title.</p> </li> <li> <p> <code>PRIMARY_VALUE</code>: Uses primary value as the title.</p> </li> </ul>"
              }
            ]
          },
          "TooltipFields": {
            "allOf": [
              {
                "$ref": "#/$defs/TooltipItemList"
              },
              {
                "description": "The fields configuration in the tooltip."
              }
            ]
          }
        },
        "description": "The setup for the detailed tooltip."
      },
      "TooltipTitleType": {
        "type": "string",
        "enum": [
          "NONE",
          "PRIMARY_VALUE"
        ]
      },
      "TooltipItemList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/TooltipItem"
        },
        "maxItems": 100
      },
      "TooltipItem": {
        "type": "object",
        "properties": {
          "FieldTooltipItem": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldTooltipItem"
              },
              {
                "description": "The tooltip item for the fields."
              }
            ]
          },
          "ColumnTooltipItem": {
            "allOf": [
              {
                "$ref": "#/$defs/ColumnTooltipItem"
              },
              {
                "description": "The tooltip item for the columns that are not part of a field well."
              }
            ]
          }
        },
        "description": "<p>The tooltip.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>"
      },
      "FieldTooltipItem": {
        "type": "object",
        "required": [
          "FieldId"
        ],
        "properties": {
          "FieldId": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldId"
              },
              {
                "description": "The unique ID of the field that is targeted by the tooltip."
              }
            ]
          },
          "Label": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The label of the tooltip item."
              }
            ]
          },
          "Visibility": {
            "allOf": [
              {
                "$ref": "#/$defs/Visibility"
              },
              {
                "description": "The visibility of the tooltip item."
              }
            ]
          }
        },
        "description": "The tooltip item for the fields."
      },
      "ColumnTooltipItem": {
        "type": "object",
        "required": [
          "Column"
        ],
        "properties": {
          "Column": {
            "allOf": [
              {
                "$ref": "#/$defs/ColumnIdentifier"
              },
              {
                "description": "The target column of the tooltip item."
              }
            ]
          },
          "Label": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The label of the tooltip item."
              }
            ]
          },
          "Visibility": {
            "allOf": [
              {
                "$ref": "#/$defs/Visibility"
              },
              {
                "description": "The visibility of the tooltip item."
              }
            ]
          },
          "Aggregation": {
            "allOf": [
              {
                "$ref": "#/$defs/AggregationFunction"
              },
              {
                "description": "The aggregation function of the column tooltip item."
              }
            ]
          }
        },
        "description": "The tooltip item for the columns that are not part of a field well."
      },
      "ReferenceLineList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ReferenceLine"
        },
        "maxItems": 20
      },
      "ReferenceLine": {
        "type": "object",
        "required": [
          "DataConfiguration"
        ],
        "properties": {
          "Status": {
            "allOf": [
              {
                "$ref": "#/$defs/WidgetStatus"
              },
              {
                "description": "<p>The status of the reference line. Choose one of the following options:</p> <ul> <li> <p> <code>ENABLE</code> </p> </li> <li> <p> <code>DISABLE</code> </p> </li> </ul>"
              }
            ]
          },
          "DataConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/ReferenceLineDataConfiguration"
              },
              {
                "description": "The data configuration of the reference line."
              }
            ]
          },
          "StyleConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/ReferenceLineStyleConfiguration"
              },
              {
                "description": "The style configuration of the reference line."
              }
            ]
          },
          "LabelConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/ReferenceLineLabelConfiguration"
              },
              {
                "description": "The label configuration of the reference line."
              }
            ]
          }
        },
        "description": "The reference line visual display options."
      },
      "ReferenceLineDataConfiguration": {
        "type": "object",
        "properties": {
          "StaticConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/ReferenceLineStaticDataConfiguration"
              },
              {
                "description": "The static data configuration of the reference line data configuration."
              }
            ]
          },
          "DynamicConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/ReferenceLineDynamicDataConfiguration"
              },
              {
                "description": "The dynamic configuration of the reference line data configuration."
              }
            ]
          },
          "AxisBinding": {
            "allOf": [
              {
                "$ref": "#/$defs/AxisBinding"
              },
              {
                "description": "<p>The axis binding type of the reference line. Choose one of the following options:</p> <ul> <li> <p>PrimaryY</p> </li> <li> <p>SecondaryY</p> </li> </ul>"
              }
            ]
          }
        },
        "description": "The data configuration of the reference line."
      },
      "ReferenceLineStaticDataConfiguration": {
        "type": "object",
        "required": [
          "Value"
        ],
        "properties": {
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/SensitiveDouble"
              },
              {
                "description": "The double input of the static data."
              }
            ]
          }
        },
        "description": "The static data configuration of the reference line data configuration."
      },
      "ReferenceLineDynamicDataConfiguration": {
        "type": "object",
        "required": [
          "Column",
          "Calculation"
        ],
        "properties": {
          "Column": {
            "allOf": [
              {
                "$ref": "#/$defs/ColumnIdentifier"
              },
              {
                "description": "The column that the dynamic data targets."
              }
            ]
          },
          "MeasureAggregationFunction": {
            "allOf": [
              {
                "$ref": "#/$defs/AggregationFunction"
              },
              {
                "description": "The aggregation function that is used in the dynamic data."
              }
            ]
          },
          "Calculation": {
            "allOf": [
              {
                "$ref": "#/$defs/NumericalAggregationFunction"
              },
              {
                "description": "The calculation that is used in the dynamic data."
              }
            ]
          }
        },
        "description": "The dynamic configuration of the reference line data configuration."
      },
      "AxisBinding": {
        "type": "string",
        "enum": [
          "PRIMARY_YAXIS",
          "SECONDARY_YAXIS"
        ]
      },
      "ReferenceLineStyleConfiguration": {
        "type": "object",
        "properties": {
          "Pattern": {
            "allOf": [
              {
                "$ref": "#/$defs/ReferenceLinePatternType"
              },
              {
                "description": "<p>The pattern type of the line style. Choose one of the following options:</p> <ul> <li> <p> <code>SOLID</code> </p> </li> <li> <p> <code>DASHED</code> </p> </li> <li> <p> <code>DOTTED</code> </p> </li> </ul>"
              }
            ]
          },
          "Color": {
            "allOf": [
              {
                "$ref": "#/$defs/HexColor"
              },
              {
                "description": "The hex color of the reference line."
              }
            ]
          }
        },
        "description": "The style configuration of the reference line."
      },
      "ReferenceLinePatternType": {
        "type": "string",
        "enum": [
          "SOLID",
          "DASHED",
          "DOTTED"
        ]
      },
      "ReferenceLineLabelConfiguration": {
        "type": "object",
        "properties": {
          "ValueLabelConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/ReferenceLineValueLabelConfiguration"
              },
              {
                "description": "The value label configuration of the label in a reference line."
              }
            ]
          },
          "CustomLabelConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/ReferenceLineCustomLabelConfiguration"
              },
              {
                "description": "The custom label configuration of the label in a reference line."
              }
            ]
          },
          "FontConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/FontConfiguration"
              },
              {
                "description": "The font configuration of the label in a reference line."
              }
            ]
          },
          "FontColor": {
            "allOf": [
              {
                "$ref": "#/$defs/HexColor"
              },
              {
                "description": "The font color configuration of the label in a reference line."
              }
            ]
          },
          "HorizontalPosition": {
            "allOf": [
              {
                "$ref": "#/$defs/ReferenceLineLabelHorizontalPosition"
              },
              {
                "description": "<p>The horizontal position configuration of the label in a reference line. Choose one of the following options:</p> <ul> <li> <p> <code>LEFT</code> </p> </li> <li> <p> <code>CENTER</code> </p> </li> <li> <p> <code>RIGHT</code> </p> </li> </ul>"
              }
            ]
          },
          "VerticalPosition": {
            "allOf": [
              {
                "$ref": "#/$defs/ReferenceLineLabelVerticalPosition"
              },
              {
                "description": "<p>The vertical position configuration of the label in a reference line. Choose one of the following options:</p> <ul> <li> <p> <code>ABOVE</code> </p> </li> <li> <p> <code>BELOW</code> </p> </li> </ul>"
              }
            ]
          }
        },
        "description": "The label configuration of a reference line."
      },
      "ReferenceLineValueLabelConfiguration": {
        "type": "object",
        "properties": {
          "RelativePosition": {
            "allOf": [
              {
                "$ref": "#/$defs/ReferenceLineValueLabelRelativePosition"
              },
              {
                "description": "<p>The relative position of the value label. Choose one of the following options:</p> <ul> <li> <p> <code>BEFORE_CUSTOM_LABEL</code> </p> </li> <li> <p> <code>AFTER_CUSTOM_LABEL</code> </p> </li> </ul>"
              }
            ]
          },
          "FormatConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/NumericFormatConfiguration"
              },
              {
                "description": "The format configuration of the value label."
              }
            ]
          }
        },
        "description": "The value label configuration of the label in a reference line."
      },
      "ReferenceLineValueLabelRelativePosition": {
        "type": "string",
        "enum": [
          "BEFORE_CUSTOM_LABEL",
          "AFTER_CUSTOM_LABEL"
        ]
      },
      "ReferenceLineCustomLabelConfiguration": {
        "type": "object",
        "required": [
          "CustomLabel"
        ],
        "properties": {
          "CustomLabel": {
            "allOf": [
              {
                "$ref": "#/$defs/NonEmptyString"
              },
              {
                "description": "The string text of the custom label."
              }
            ]
          }
        },
        "description": "The configuration for a custom label on a <code>ReferenceLine</code>."
      },
      "ReferenceLineLabelHorizontalPosition": {
        "type": "string",
        "enum": [
          "LEFT",
          "CENTER",
          "RIGHT"
        ]
      },
      "ReferenceLineLabelVerticalPosition": {
        "type": "string",
        "enum": [
          "ABOVE",
          "BELOW"
        ]
      },
      "ContributionAnalysisDefaultList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ContributionAnalysisDefault"
        },
        "minItems": 1,
        "maxItems": 200
      },
      "ContributionAnalysisDefault": {
        "type": "object",
        "required": [
          "MeasureFieldId",
          "ContributorDimensions"
        ],
        "properties": {
          "MeasureFieldId": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldId"
              },
              {
                "description": "The measure field that is used in the contribution analysis."
              }
            ]
          },
          "ContributorDimensions": {
            "allOf": [
              {
                "$ref": "#/$defs/ContributorDimensionList"
              },
              {
                "description": "The dimensions columns that are used in the contribution analysis, usually a list of <code>ColumnIdentifiers</code>."
              }
            ]
          }
        },
        "description": "The contribution analysis visual display for a line, pie, or bar chart."
      },
      "ContributorDimensionList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ColumnIdentifier"
        },
        "minItems": 1,
        "maxItems": 4
      },
      "ColumnHierarchyList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ColumnHierarchy"
        },
        "maxItems": 2
      },
      "ColumnHierarchy": {
        "type": "object",
        "properties": {
          "ExplicitHierarchy": {
            "allOf": [
              {
                "$ref": "#/$defs/ExplicitHierarchy"
              },
              {
                "description": "The option that determines the hierarchy of the fields that are built within a visual's field wells. These fields can't be duplicated to other visuals."
              }
            ]
          },
          "DateTimeHierarchy": {
            "allOf": [
              {
                "$ref": "#/$defs/DateTimeHierarchy"
              },
              {
                "description": "The option that determines the hierarchy of any <code>DateTime</code> fields."
              }
            ]
          },
          "PredefinedHierarchy": {
            "allOf": [
              {
                "$ref": "#/$defs/PredefinedHierarchy"
              },
              {
                "description": "The option that determines the hierarchy of the fields that are defined during data preparation. These fields are available to use in any analysis that uses the data source."
              }
            ]
          }
        },
        "description": "The option that determines the hierarchy of the fields for a visual element."
      },
      "ExplicitHierarchy": {
        "type": "object",
        "required": [
          "HierarchyId",
          "Columns"
        ],
        "properties": {
          "HierarchyId": {
            "allOf": [
              {
                "$ref": "#/$defs/HierarchyId"
              },
              {
                "description": "The hierarchy ID of the explicit hierarchy."
              }
            ]
          },
          "Columns": {
            "allOf": [
              {
                "$ref": "#/$defs/ExplicitHierarchyColumnList"
              },
              {
                "description": "The list of columns that define the explicit hierarchy."
              }
            ]
          },
          "DrillDownFilters": {
            "allOf": [
              {
                "$ref": "#/$defs/DrillDownFilterList"
              },
              {
                "description": "The option that determines the drill down filters for the explicit hierarchy."
              }
            ]
          }
        },
        "description": "The option that determines the hierarchy of the fields that are built within a visual's field wells. These fields can't be duplicated to other visuals."
      },
      "ExplicitHierarchyColumnList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ColumnIdentifier"
        },
        "minItems": 2,
        "maxItems": 10
      },
      "DrillDownFilterList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/DrillDownFilter"
        },
        "maxItems": 10
      },
      "DrillDownFilter": {
        "type": "object",
        "properties": {
          "NumericEqualityFilter": {
            "allOf": [
              {
                "$ref": "#/$defs/NumericEqualityDrillDownFilter"
              },
              {
                "description": "The numeric equality type drill down filter. This filter is used for number type columns."
              }
            ]
          },
          "CategoryFilter": {
            "allOf": [
              {
                "$ref": "#/$defs/CategoryDrillDownFilter"
              },
              {
                "description": "The category type drill down filter. This filter is used for string type columns."
              }
            ]
          },
          "TimeRangeFilter": {
            "allOf": [
              {
                "$ref": "#/$defs/TimeRangeDrillDownFilter"
              },
              {
                "description": "The time range drill down filter. This filter is used for date time columns."
              }
            ]
          }
        },
        "description": "<p>The drill down filter for the column hierarchies.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>"
      },
      "NumericEqualityDrillDownFilter": {
        "type": "object",
        "required": [
          "Column",
          "Value"
        ],
        "properties": {
          "Column": {
            "allOf": [
              {
                "$ref": "#/$defs/ColumnIdentifier"
              },
              {
                "description": "The column that the filter is applied to."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/Double"
              },
              {
                "description": "The value of the double input numeric drill down filter."
              }
            ]
          }
        },
        "description": "The category drill down filter."
      },
      "CategoryDrillDownFilter": {
        "type": "object",
        "required": [
          "Column",
          "CategoryValues"
        ],
        "properties": {
          "Column": {
            "allOf": [
              {
                "$ref": "#/$defs/ColumnIdentifier"
              },
              {
                "description": "The column that the filter is applied to."
              }
            ]
          },
          "CategoryValues": {
            "allOf": [
              {
                "$ref": "#/$defs/CategoryValueList"
              },
              {
                "description": "A list of the string inputs that are the values of the category drill down filter."
              }
            ]
          }
        },
        "description": "The numeric equality type drill down filter."
      },
      "CategoryValueList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/CategoryValue"
        },
        "maxItems": 100000
      },
      "CategoryValue": {
        "type": "string",
        "maxLength": 512
      },
      "TimeRangeDrillDownFilter": {
        "type": "object",
        "required": [
          "Column",
          "RangeMinimum",
          "RangeMaximum",
          "TimeGranularity"
        ],
        "properties": {
          "Column": {
            "allOf": [
              {
                "$ref": "#/$defs/ColumnIdentifier"
              },
              {
                "description": "The column that the filter is applied to."
              }
            ]
          },
          "RangeMinimum": {
            "allOf": [
              {
                "$ref": "#/$defs/Timestamp"
              },
              {
                "description": "The minimum value for the filter value range."
              }
            ]
          },
          "RangeMaximum": {
            "allOf": [
              {
                "$ref": "#/$defs/Timestamp"
              },
              {
                "description": "The maximum value for the filter value range."
              }
            ]
          },
          "TimeGranularity": {
            "allOf": [
              {
                "$ref": "#/$defs/TimeGranularity"
              },
              {
                "description": "The level of time precision that is used to aggregate <code>DateTime</code> values."
              }
            ]
          }
        },
        "description": "The time range drill down filter."
      },
      "Timestamp": {
        "type": "string",
        "format": "date-time"
      },
      "DateTimeHierarchy": {
        "type": "object",
        "required": [
          "HierarchyId"
        ],
        "properties": {
          "HierarchyId": {
            "allOf": [
              {
                "$ref": "#/$defs/HierarchyId"
              },
              {
                "description": "The hierarchy ID of the <code>DateTime</code> hierarchy."
              }
            ]
          },
          "DrillDownFilters": {
            "allOf": [
              {
                "$ref": "#/$defs/DrillDownFilterList"
              },
              {
                "description": "The option that determines the drill down filters for the <code>DateTime</code> hierarchy."
              }
            ]
          }
        },
        "description": "The option that determines the hierarchy of any <code>DateTime</code> fields."
      },
      "PredefinedHierarchy": {
        "type": "object",
        "required": [
          "HierarchyId",
          "Columns"
        ],
        "properties": {
          "HierarchyId": {
            "allOf": [
              {
                "$ref": "#/$defs/HierarchyId"
              },
              {
                "description": "The hierarchy ID of the predefined hierarchy."
              }
            ]
          },
          "Columns": {
            "allOf": [
              {
                "$ref": "#/$defs/PredefinedHierarchyColumnList"
              },
              {
                "description": "The list of columns that define the predefined hierarchy."
              }
            ]
          },
          "DrillDownFilters": {
            "allOf": [
              {
                "$ref": "#/$defs/DrillDownFilterList"
              },
              {
                "description": "The option that determines the drill down filters for the predefined hierarchy."
              }
            ]
          }
        },
        "description": "The option that determines the hierarchy of the fields that are defined during data preparation. These fields are available to use in any analysis that uses the data source."
      },
      "PredefinedHierarchyColumnList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ColumnIdentifier"
        },
        "minItems": 1,
        "maxItems": 10
      },
      "KPIVisual": {
        "type": "object",
        "required": [
          "VisualId"
        ],
        "properties": {
          "VisualId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "The unique identifier of a visual. This identifier must be unique within the context of a dashboard, template, or analysis. Two dashboards, analyses, or templates can have visuals with the same identifiers."
              }
            ]
          },
          "Title": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualTitleLabelOptions"
              },
              {
                "description": "The title that is displayed on the visual."
              }
            ]
          },
          "Subtitle": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualSubtitleLabelOptions"
              },
              {
                "description": "The subtitle that is displayed on the visual."
              }
            ]
          },
          "ChartConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/KPIConfiguration"
              },
              {
                "description": "The configuration of a KPI visual."
              }
            ]
          },
          "ConditionalFormatting": {
            "allOf": [
              {
                "$ref": "#/$defs/KPIConditionalFormatting"
              },
              {
                "description": "The conditional formatting of a KPI visual."
              }
            ]
          },
          "Actions": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualCustomActionList"
              },
              {
                "description": "The list of custom actions that are configured for a visual."
              }
            ]
          },
          "ColumnHierarchies": {
            "allOf": [
              {
                "$ref": "#/$defs/ColumnHierarchyList"
              },
              {
                "description": "The column hierarchy that is used during drill-downs and drill-ups."
              }
            ]
          }
        },
        "description": "<p>A key performance indicator (KPI).</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/kpi.html\">Using KPIs</a> in the <i>Amazon QuickSight User Guide</i>.</p>"
      },
      "KPIConfiguration": {
        "type": "object",
        "properties": {
          "FieldWells": {
            "allOf": [
              {
                "$ref": "#/$defs/KPIFieldWells"
              },
              {
                "description": "The field well configuration of a KPI visual."
              }
            ]
          },
          "SortConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/KPISortConfiguration"
              },
              {
                "description": "The sort configuration of a KPI visual."
              }
            ]
          },
          "KPIOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/KPIOptions"
              },
              {
                "description": "The options that determine the presentation of a KPI visual."
              }
            ]
          }
        },
        "description": "The configuration of a KPI visual."
      },
      "KPIFieldWells": {
        "type": "object",
        "properties": {
          "Values": {
            "allOf": [
              {
                "$ref": "#/$defs/MeasureFieldList"
              },
              {
                "description": "The value field wells of a KPI visual."
              }
            ]
          },
          "TargetValues": {
            "allOf": [
              {
                "$ref": "#/$defs/MeasureFieldList"
              },
              {
                "description": "The target value field wells of a KPI visual."
              }
            ]
          },
          "TrendGroups": {
            "allOf": [
              {
                "$ref": "#/$defs/DimensionFieldList"
              },
              {
                "description": "The trend group field wells of a KPI visual."
              }
            ]
          }
        },
        "description": "The field well configuration of a KPI visual."
      },
      "KPISortConfiguration": {
        "type": "object",
        "properties": {
          "TrendGroupSort": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldSortOptionsList"
              },
              {
                "description": "The sort configuration of the trend group fields."
              }
            ]
          }
        },
        "description": "The sort configuration of a KPI visual."
      },
      "KPIOptions": {
        "type": "object",
        "properties": {
          "ProgressBar": {
            "allOf": [
              {
                "$ref": "#/$defs/ProgressBarOptions"
              },
              {
                "description": "The options that determine the presentation of the progress bar of a KPI visual."
              }
            ]
          },
          "TrendArrows": {
            "allOf": [
              {
                "$ref": "#/$defs/TrendArrowOptions"
              },
              {
                "description": "The options that determine the presentation of trend arrows in a KPI visual."
              }
            ]
          },
          "SecondaryValue": {
            "allOf": [
              {
                "$ref": "#/$defs/SecondaryValueOptions"
              },
              {
                "description": "The options that determine the presentation of the secondary value of a KPI visual."
              }
            ]
          },
          "Comparison": {
            "allOf": [
              {
                "$ref": "#/$defs/ComparisonConfiguration"
              },
              {
                "description": "The comparison configuration of a KPI visual."
              }
            ]
          },
          "PrimaryValueDisplayType": {
            "allOf": [
              {
                "$ref": "#/$defs/PrimaryValueDisplayType"
              },
              {
                "description": "The options that determine the primary value display type."
              }
            ]
          },
          "PrimaryValueFontConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/FontConfiguration"
              },
              {
                "description": "The options that determine the primary value font configuration."
              }
            ]
          },
          "SecondaryValueFontConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/FontConfiguration"
              },
              {
                "description": "The options that determine the secondary value font configuration."
              }
            ]
          }
        },
        "description": "The options that determine the presentation of a KPI visual."
      },
      "ProgressBarOptions": {
        "type": "object",
        "properties": {
          "Visibility": {
            "allOf": [
              {
                "$ref": "#/$defs/Visibility"
              },
              {
                "description": "The visibility of the progress bar."
              }
            ]
          }
        },
        "description": "The options that determine the presentation of the progress bar of a KPI visual."
      },
      "TrendArrowOptions": {
        "type": "object",
        "properties": {
          "Visibility": {
            "allOf": [
              {
                "$ref": "#/$defs/Visibility"
              },
              {
                "description": "The visibility of the trend arrows."
              }
            ]
          }
        },
        "description": "The options that determine the presentation of trend arrows in a KPI visual."
      },
      "SecondaryValueOptions": {
        "type": "object",
        "properties": {
          "Visibility": {
            "allOf": [
              {
                "$ref": "#/$defs/Visibility"
              },
              {
                "description": "Determines the visibility of the secondary value."
              }
            ]
          }
        },
        "description": "The options that determine the presentation of the secondary value of a KPI visual."
      },
      "ComparisonConfiguration": {
        "type": "object",
        "properties": {
          "ComparisonMethod": {
            "allOf": [
              {
                "$ref": "#/$defs/ComparisonMethod"
              },
              {
                "description": "<p>The method of the comparison. Choose from the following options:</p> <ul> <li> <p> <code>DIFFERENCE</code> </p> </li> <li> <p> <code>PERCENT_DIFFERENCE</code> </p> </li> <li> <p> <code>PERCENT</code> </p> </li> </ul>"
              }
            ]
          },
          "ComparisonFormat": {
            "allOf": [
              {
                "$ref": "#/$defs/ComparisonFormatConfiguration"
              },
              {
                "description": "The format of the comparison."
              }
            ]
          }
        },
        "description": "The comparison display configuration of a KPI or gauge chart."
      },
      "ComparisonMethod": {
        "type": "string",
        "enum": [
          "DIFFERENCE",
          "PERCENT_DIFFERENCE",
          "PERCENT"
        ]
      },
      "ComparisonFormatConfiguration": {
        "type": "object",
        "properties": {
          "NumberDisplayFormatConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/NumberDisplayFormatConfiguration"
              },
              {
                "description": "The number display format."
              }
            ]
          },
          "PercentageDisplayFormatConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/PercentageDisplayFormatConfiguration"
              },
              {
                "description": "The percentage display format."
              }
            ]
          }
        },
        "description": "<p>The format of the comparison.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>"
      },
      "PrimaryValueDisplayType": {
        "type": "string",
        "enum": [
          "HIDDEN",
          "COMPARISON",
          "ACTUAL"
        ]
      },
      "KPIConditionalFormatting": {
        "type": "object",
        "properties": {
          "ConditionalFormattingOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/KPIConditionalFormattingOptionList"
              },
              {
                "description": "The conditional formatting options of a KPI visual."
              }
            ]
          }
        },
        "description": "The conditional formatting of a KPI visual."
      },
      "KPIConditionalFormattingOptionList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/KPIConditionalFormattingOption"
        },
        "maxItems": 100
      },
      "KPIConditionalFormattingOption": {
        "type": "object",
        "properties": {
          "PrimaryValue": {
            "allOf": [
              {
                "$ref": "#/$defs/KPIPrimaryValueConditionalFormatting"
              },
              {
                "description": "The conditional formatting for the primary value of a KPI visual."
              }
            ]
          },
          "ProgressBar": {
            "allOf": [
              {
                "$ref": "#/$defs/KPIProgressBarConditionalFormatting"
              },
              {
                "description": "The conditional formatting for the progress bar of a KPI visual."
              }
            ]
          }
        },
        "description": "The conditional formatting options of a KPI visual."
      },
      "KPIPrimaryValueConditionalFormatting": {
        "type": "object",
        "properties": {
          "TextColor": {
            "allOf": [
              {
                "$ref": "#/$defs/ConditionalFormattingColor"
              },
              {
                "description": "The conditional formatting of the primary value's text color."
              }
            ]
          },
          "Icon": {
            "allOf": [
              {
                "$ref": "#/$defs/ConditionalFormattingIcon"
              },
              {
                "description": "The conditional formatting of the primary value's icon."
              }
            ]
          }
        },
        "description": "The conditional formatting for the primary value of a KPI visual."
      },
      "KPIProgressBarConditionalFormatting": {
        "type": "object",
        "properties": {
          "ForegroundColor": {
            "allOf": [
              {
                "$ref": "#/$defs/ConditionalFormattingColor"
              },
              {
                "description": "The conditional formatting of the progress bar's foreground color."
              }
            ]
          }
        },
        "description": "The conditional formatting for the progress bar of a KPI visual."
      },
      "PieChartVisual": {
        "type": "object",
        "required": [
          "VisualId"
        ],
        "properties": {
          "VisualId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "The unique identifier of a visual. This identifier must be unique within the context of a dashboard, template, or analysis. Two dashboards, analyses, or templates can have visuals with the same identifiers."
              }
            ]
          },
          "Title": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualTitleLabelOptions"
              },
              {
                "description": "The title that is displayed on the visual."
              }
            ]
          },
          "Subtitle": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualSubtitleLabelOptions"
              },
              {
                "description": "The subtitle that is displayed on the visual."
              }
            ]
          },
          "ChartConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/PieChartConfiguration"
              },
              {
                "description": "The configuration of a pie chart."
              }
            ]
          },
          "Actions": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualCustomActionList"
              },
              {
                "description": "The list of custom actions that are configured for a visual."
              }
            ]
          },
          "ColumnHierarchies": {
            "allOf": [
              {
                "$ref": "#/$defs/ColumnHierarchyList"
              },
              {
                "description": "The column hierarchy that is used during drill-downs and drill-ups."
              }
            ]
          }
        },
        "description": "<p>A pie or donut chart.</p> <p>The <code>PieChartVisual</code> structure describes a visual that is a member of the pie chart family.</p> <p>The following charts can be described by using this structure:</p> <ul> <li> <p>Pie charts</p> </li> <li> <p>Donut charts</p> </li> </ul> <p>For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/pie-chart.html\">Using pie charts</a> in the <i>Amazon QuickSight User Guide</i>.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/donut-chart.html\">Using donut charts</a> in the <i>Amazon QuickSight User Guide</i>.</p>"
      },
      "PieChartConfiguration": {
        "type": "object",
        "properties": {
          "FieldWells": {
            "allOf": [
              {
                "$ref": "#/$defs/PieChartFieldWells"
              },
              {
                "description": "The field wells of the visual."
              }
            ]
          },
          "SortConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/PieChartSortConfiguration"
              },
              {
                "description": "The sort configuration of a pie chart."
              }
            ]
          },
          "DonutOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/DonutOptions"
              },
              {
                "description": "The options that determine the shape of the chart. This option determines whether the chart is a pie chart or a donut chart."
              }
            ]
          },
          "SmallMultiplesOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/SmallMultiplesOptions"
              },
              {
                "description": "The small multiples setup for the visual."
              }
            ]
          },
          "CategoryLabelOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/ChartAxisLabelOptions"
              },
              {
                "description": "The label options of the group/color that is displayed in a pie chart."
              }
            ]
          },
          "ValueLabelOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/ChartAxisLabelOptions"
              },
              {
                "description": "The label options for the value that is displayed in a pie chart."
              }
            ]
          },
          "Legend": {
            "allOf": [
              {
                "$ref": "#/$defs/LegendOptions"
              },
              {
                "description": "The legend display setup of the visual."
              }
            ]
          },
          "DataLabels": {
            "allOf": [
              {
                "$ref": "#/$defs/DataLabelOptions"
              },
              {
                "description": "The options that determine if visual data labels are displayed."
              }
            ]
          },
          "Tooltip": {
            "allOf": [
              {
                "$ref": "#/$defs/TooltipOptions"
              },
              {
                "description": "The tooltip display setup of the visual."
              }
            ]
          },
          "VisualPalette": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualPalette"
              },
              {
                "description": "The palette (chart color) display setup of the visual."
              }
            ]
          },
          "ContributionAnalysisDefaults": {
            "allOf": [
              {
                "$ref": "#/$defs/ContributionAnalysisDefaultList"
              },
              {
                "description": "The contribution analysis (anomaly configuration) setup of the visual."
              }
            ]
          }
        },
        "description": "The configuration of a pie chart."
      },
      "PieChartFieldWells": {
        "type": "object",
        "properties": {
          "PieChartAggregatedFieldWells": {
            "allOf": [
              {
                "$ref": "#/$defs/PieChartAggregatedFieldWells"
              },
              {
                "description": "The field well configuration of a pie chart."
              }
            ]
          }
        },
        "description": "<p>The field well configuration of a pie chart.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>"
      },
      "PieChartAggregatedFieldWells": {
        "type": "object",
        "properties": {
          "Category": {
            "allOf": [
              {
                "$ref": "#/$defs/DimensionFieldList"
              },
              {
                "description": "The category (group/color) field wells of a pie chart."
              }
            ]
          },
          "Values": {
            "allOf": [
              {
                "$ref": "#/$defs/MeasureFieldList"
              },
              {
                "description": "The value field wells of a pie chart. Values are aggregated based on categories."
              }
            ]
          },
          "SmallMultiples": {
            "allOf": [
              {
                "$ref": "#/$defs/SmallMultiplesDimensionFieldList"
              },
              {
                "description": "The small multiples field well of a pie chart."
              }
            ]
          }
        },
        "description": "The field well configuration of a pie chart."
      },
      "PieChartSortConfiguration": {
        "type": "object",
        "properties": {
          "CategorySort": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldSortOptionsList"
              },
              {
                "description": "The sort configuration of the category fields."
              }
            ]
          },
          "CategoryItemsLimit": {
            "allOf": [
              {
                "$ref": "#/$defs/ItemsLimitConfiguration"
              },
              {
                "description": "The limit on the number of categories that are displayed in a pie chart."
              }
            ]
          },
          "SmallMultiplesSort": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldSortOptionsList"
              },
              {
                "description": "The sort configuration of the small multiples field."
              }
            ]
          },
          "SmallMultiplesLimitConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/ItemsLimitConfiguration"
              },
              {
                "description": "The limit on the number of small multiples panels that are displayed."
              }
            ]
          }
        },
        "description": "The sort configuration of a pie chart."
      },
      "DonutOptions": {
        "type": "object",
        "properties": {
          "ArcOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/ArcOptions"
              },
              {
                "description": "<p>The option for define the arc of the chart shape. Valid values are as follows:</p> <ul> <li> <p> <code>WHOLE</code> - A pie chart</p> </li> <li> <p> <code>SMALL</code>- A small-sized donut chart</p> </li> <li> <p> <code>MEDIUM</code>- A medium-sized donut chart</p> </li> <li> <p> <code>LARGE</code>- A large-sized donut chart</p> </li> </ul>"
              }
            ]
          },
          "DonutCenterOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/DonutCenterOptions"
              },
              {
                "description": "The label options of the label that is displayed in the center of a donut chart. This option isn't available for pie charts."
              }
            ]
          }
        },
        "description": "The options for configuring a donut chart or pie chart."
      },
      "ArcOptions": {
        "type": "object",
        "properties": {
          "ArcThickness": {
            "allOf": [
              {
                "$ref": "#/$defs/ArcThickness"
              },
              {
                "description": "The arc thickness of a <code>GaugeChartVisual</code>."
              }
            ]
          }
        },
        "description": "The options that determine the arc thickness of a <code>GaugeChartVisual</code>."
      },
      "ArcThickness": {
        "type": "string",
        "enum": [
          "SMALL",
          "MEDIUM",
          "LARGE",
          "WHOLE"
        ]
      },
      "DonutCenterOptions": {
        "type": "object",
        "properties": {
          "LabelVisibility": {
            "allOf": [
              {
                "$ref": "#/$defs/Visibility"
              },
              {
                "description": "Determines the visibility of the label in a donut chart. In the Amazon QuickSight console, this option is called <code>'Show total'</code>."
              }
            ]
          }
        },
        "description": "The label options of the label that is displayed in the center of a donut chart. This option isn't available for pie charts."
      },
      "GaugeChartVisual": {
        "type": "object",
        "required": [
          "VisualId"
        ],
        "properties": {
          "VisualId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "The unique identifier of a visual. This identifier must be unique within the context of a dashboard, template, or analysis. Two dashboards, analyses, or templates can have visuals with the same identifiers."
              }
            ]
          },
          "Title": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualTitleLabelOptions"
              },
              {
                "description": "The title that is displayed on the visual."
              }
            ]
          },
          "Subtitle": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualSubtitleLabelOptions"
              },
              {
                "description": "The subtitle that is displayed on the visual."
              }
            ]
          },
          "ChartConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/GaugeChartConfiguration"
              },
              {
                "description": "The configuration of a <code>GaugeChartVisual</code>."
              }
            ]
          },
          "ConditionalFormatting": {
            "allOf": [
              {
                "$ref": "#/$defs/GaugeChartConditionalFormatting"
              },
              {
                "description": "The conditional formatting of a <code>GaugeChartVisual</code>."
              }
            ]
          },
          "Actions": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualCustomActionList"
              },
              {
                "description": "The list of custom actions that are configured for a visual."
              }
            ]
          }
        },
        "description": "<p>A gauge chart.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/gauge-chart.html\">Using gauge charts</a> in the <i>Amazon QuickSight User Guide</i>.</p>"
      },
      "GaugeChartConfiguration": {
        "type": "object",
        "properties": {
          "FieldWells": {
            "allOf": [
              {
                "$ref": "#/$defs/GaugeChartFieldWells"
              },
              {
                "description": "The field well configuration of a <code>GaugeChartVisual</code>."
              }
            ]
          },
          "GaugeChartOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/GaugeChartOptions"
              },
              {
                "description": "The options that determine the presentation of the <code>GaugeChartVisual</code>."
              }
            ]
          },
          "DataLabels": {
            "allOf": [
              {
                "$ref": "#/$defs/DataLabelOptions"
              },
              {
                "description": "The data label configuration of a <code>GaugeChartVisual</code>."
              }
            ]
          },
          "TooltipOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/TooltipOptions"
              },
              {
                "description": "The tooltip configuration of a <code>GaugeChartVisual</code>."
              }
            ]
          },
          "VisualPalette": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualPalette"
              },
              {
                "description": "The visual palette configuration of a <code>GaugeChartVisual</code>."
              }
            ]
          }
        },
        "description": "The configuration of a <code>GaugeChartVisual</code>."
      },
      "GaugeChartFieldWells": {
        "type": "object",
        "properties": {
          "Values": {
            "allOf": [
              {
                "$ref": "#/$defs/MeasureFieldList"
              },
              {
                "description": "The value field wells of a <code>GaugeChartVisual</code>."
              }
            ]
          },
          "TargetValues": {
            "allOf": [
              {
                "$ref": "#/$defs/MeasureFieldList"
              },
              {
                "description": "The target value field wells of a <code>GaugeChartVisual</code>."
              }
            ]
          }
        },
        "description": "The field well configuration of a <code>GaugeChartVisual</code>."
      },
      "GaugeChartOptions": {
        "type": "object",
        "properties": {
          "PrimaryValueDisplayType": {
            "allOf": [
              {
                "$ref": "#/$defs/PrimaryValueDisplayType"
              },
              {
                "description": "The options that determine the primary value display type."
              }
            ]
          },
          "Comparison": {
            "allOf": [
              {
                "$ref": "#/$defs/ComparisonConfiguration"
              },
              {
                "description": "The comparison configuration of a <code>GaugeChartVisual</code>."
              }
            ]
          },
          "ArcAxis": {
            "allOf": [
              {
                "$ref": "#/$defs/ArcAxisConfiguration"
              },
              {
                "description": "The arc axis configuration of a <code>GaugeChartVisual</code>."
              }
            ]
          },
          "Arc": {
            "allOf": [
              {
                "$ref": "#/$defs/ArcConfiguration"
              },
              {
                "description": "The arc configuration of a <code>GaugeChartVisual</code>."
              }
            ]
          },
          "PrimaryValueFontConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/FontConfiguration"
              },
              {
                "description": "The options that determine the primary value font configuration."
              }
            ]
          }
        },
        "description": "The options that determine the presentation of the <code>GaugeChartVisual</code>."
      },
      "ArcAxisConfiguration": {
        "type": "object",
        "properties": {
          "Range": {
            "allOf": [
              {
                "$ref": "#/$defs/ArcAxisDisplayRange"
              },
              {
                "description": "The arc axis range of a <code>GaugeChartVisual</code>."
              }
            ]
          },
          "ReserveRange": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "The reserved range of the arc axis."
              }
            ]
          }
        },
        "description": "The arc axis configuration of a <code>GaugeChartVisual</code>."
      },
      "ArcAxisDisplayRange": {
        "type": "object",
        "properties": {
          "Min": {
            "allOf": [
              {
                "$ref": "#/$defs/Double"
              },
              {
                "description": "The minimum value of the arc axis range."
              }
            ]
          },
          "Max": {
            "allOf": [
              {
                "$ref": "#/$defs/Double"
              },
              {
                "description": "The maximum value of the arc axis range."
              }
            ]
          }
        },
        "description": "The arc axis range of a <code>GaugeChartVisual</code>."
      },
      "ArcConfiguration": {
        "type": "object",
        "properties": {
          "ArcAngle": {
            "allOf": [
              {
                "$ref": "#/$defs/Double"
              },
              {
                "description": "The option that determines the arc angle of a <code>GaugeChartVisual</code>."
              }
            ]
          },
          "ArcThickness": {
            "allOf": [
              {
                "$ref": "#/$defs/ArcThicknessOptions"
              },
              {
                "description": "The options that determine the arc thickness of a <code>GaugeChartVisual</code>."
              }
            ]
          }
        },
        "description": "The arc configuration of a <code>GaugeChartVisual</code>."
      },
      "ArcThicknessOptions": {
        "type": "string",
        "enum": [
          "SMALL",
          "MEDIUM",
          "LARGE"
        ]
      },
      "GaugeChartConditionalFormatting": {
        "type": "object",
        "properties": {
          "ConditionalFormattingOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/GaugeChartConditionalFormattingOptionList"
              },
              {
                "description": "Conditional formatting options of a <code>GaugeChartVisual</code>."
              }
            ]
          }
        },
        "description": "The conditional formatting of a <code>GaugeChartVisual</code>."
      },
      "GaugeChartConditionalFormattingOptionList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/GaugeChartConditionalFormattingOption"
        },
        "maxItems": 100
      },
      "GaugeChartConditionalFormattingOption": {
        "type": "object",
        "properties": {
          "PrimaryValue": {
            "allOf": [
              {
                "$ref": "#/$defs/GaugeChartPrimaryValueConditionalFormatting"
              },
              {
                "description": "The conditional formatting for the primary value of a <code>GaugeChartVisual</code>."
              }
            ]
          },
          "Arc": {
            "allOf": [
              {
                "$ref": "#/$defs/GaugeChartArcConditionalFormatting"
              },
              {
                "description": "The options that determine the presentation of the arc of a <code>GaugeChartVisual</code>."
              }
            ]
          }
        },
        "description": "Conditional formatting options of a <code>GaugeChartVisual</code>."
      },
      "GaugeChartPrimaryValueConditionalFormatting": {
        "type": "object",
        "properties": {
          "TextColor": {
            "allOf": [
              {
                "$ref": "#/$defs/ConditionalFormattingColor"
              },
              {
                "description": "The conditional formatting of the primary value text color."
              }
            ]
          },
          "Icon": {
            "allOf": [
              {
                "$ref": "#/$defs/ConditionalFormattingIcon"
              },
              {
                "description": "The conditional formatting of the primary value icon."
              }
            ]
          }
        },
        "description": "The conditional formatting for the primary value of a <code>GaugeChartVisual</code>."
      },
      "GaugeChartArcConditionalFormatting": {
        "type": "object",
        "properties": {
          "ForegroundColor": {
            "allOf": [
              {
                "$ref": "#/$defs/ConditionalFormattingColor"
              },
              {
                "description": "The conditional formatting of the arc foreground color."
              }
            ]
          }
        },
        "description": "The options that determine the presentation of the arc of a <code>GaugeChartVisual</code>."
      },
      "LineChartVisual": {
        "type": "object",
        "required": [
          "VisualId"
        ],
        "properties": {
          "VisualId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "The unique identifier of a visual. This identifier must be unique within the context of a dashboard, template, or analysis. Two dashboards, analyses, or templates can have visuals with the same identifiers."
              }
            ]
          },
          "Title": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualTitleLabelOptions"
              },
              {
                "description": "The title that is displayed on the visual."
              }
            ]
          },
          "Subtitle": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualSubtitleLabelOptions"
              },
              {
                "description": "The subtitle that is displayed on the visual."
              }
            ]
          },
          "ChartConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/LineChartConfiguration"
              },
              {
                "description": "The configuration of a line chart."
              }
            ]
          },
          "Actions": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualCustomActionList"
              },
              {
                "description": "The list of custom actions that are configured for a visual."
              }
            ]
          },
          "ColumnHierarchies": {
            "allOf": [
              {
                "$ref": "#/$defs/ColumnHierarchyList"
              },
              {
                "description": "The column hierarchy that is used during drill-downs and drill-ups."
              }
            ]
          }
        },
        "description": "<p>A line chart.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/line-charts.html\">Using line charts</a> in the <i>Amazon QuickSight User Guide</i>.</p>"
      },
      "LineChartConfiguration": {
        "type": "object",
        "properties": {
          "FieldWells": {
            "allOf": [
              {
                "$ref": "#/$defs/LineChartFieldWells"
              },
              {
                "description": "The field well configuration of a line chart."
              }
            ]
          },
          "SortConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/LineChartSortConfiguration"
              },
              {
                "description": "The sort configuration of a line chart."
              }
            ]
          },
          "ForecastConfigurations": {
            "allOf": [
              {
                "$ref": "#/$defs/ForecastConfigurationList"
              },
              {
                "description": "The forecast configuration of a line chart."
              }
            ]
          },
          "Type": {
            "allOf": [
              {
                "$ref": "#/$defs/LineChartType"
              },
              {
                "description": "Determines the type of the line chart."
              }
            ]
          },
          "SmallMultiplesOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/SmallMultiplesOptions"
              },
              {
                "description": "The small multiples setup for the visual."
              }
            ]
          },
          "XAxisDisplayOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/AxisDisplayOptions"
              },
              {
                "description": "The options that determine the presentation of the x-axis."
              }
            ]
          },
          "XAxisLabelOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/ChartAxisLabelOptions"
              },
              {
                "description": "The options that determine the presentation of the x-axis label."
              }
            ]
          },
          "PrimaryYAxisDisplayOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/LineSeriesAxisDisplayOptions"
              },
              {
                "description": "The series axis configuration of a line chart."
              }
            ]
          },
          "PrimaryYAxisLabelOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/ChartAxisLabelOptions"
              },
              {
                "description": "The options that determine the presentation of the y-axis label."
              }
            ]
          },
          "SecondaryYAxisDisplayOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/LineSeriesAxisDisplayOptions"
              },
              {
                "description": "The series axis configuration of a line chart."
              }
            ]
          },
          "SecondaryYAxisLabelOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/ChartAxisLabelOptions"
              },
              {
                "description": "The options that determine the presentation of the secondary y-axis label."
              }
            ]
          },
          "DefaultSeriesSettings": {
            "allOf": [
              {
                "$ref": "#/$defs/LineChartDefaultSeriesSettings"
              },
              {
                "description": "The options that determine the default presentation of all line series in <code>LineChartVisual</code>."
              }
            ]
          },
          "Series": {
            "allOf": [
              {
                "$ref": "#/$defs/SeriesItemList"
              },
              {
                "description": "The series item configuration of a line chart."
              }
            ]
          },
          "Legend": {
            "allOf": [
              {
                "$ref": "#/$defs/LegendOptions"
              },
              {
                "description": "The legend configuration of a line chart."
              }
            ]
          },
          "DataLabels": {
            "allOf": [
              {
                "$ref": "#/$defs/DataLabelOptions"
              },
              {
                "description": "The data label configuration of a line chart."
              }
            ]
          },
          "ReferenceLines": {
            "allOf": [
              {
                "$ref": "#/$defs/ReferenceLineList"
              },
              {
                "description": "The reference lines configuration of a line chart."
              }
            ]
          },
          "Tooltip": {
            "allOf": [
              {
                "$ref": "#/$defs/TooltipOptions"
              },
              {
                "description": "The tooltip configuration of a line chart."
              }
            ]
          },
          "ContributionAnalysisDefaults": {
            "allOf": [
              {
                "$ref": "#/$defs/ContributionAnalysisDefaultList"
              },
              {
                "description": "The default configuration of a line chart's contribution analysis."
              }
            ]
          },
          "VisualPalette": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualPalette"
              },
              {
                "description": "The visual palette configuration of a line chart."
              }
            ]
          }
        },
        "description": "The configuration of a line chart."
      },
      "LineChartFieldWells": {
        "type": "object",
        "properties": {
          "LineChartAggregatedFieldWells": {
            "allOf": [
              {
                "$ref": "#/$defs/LineChartAggregatedFieldWells"
              },
              {
                "description": "The field well configuration of a line chart."
              }
            ]
          }
        },
        "description": "The field well configuration of a line chart."
      },
      "LineChartAggregatedFieldWells": {
        "type": "object",
        "properties": {
          "Category": {
            "allOf": [
              {
                "$ref": "#/$defs/DimensionFieldList"
              },
              {
                "description": "The category field wells of a line chart. Values are grouped by category fields."
              }
            ]
          },
          "Values": {
            "allOf": [
              {
                "$ref": "#/$defs/MeasureFieldList"
              },
              {
                "description": "The value field wells of a line chart. Values are aggregated based on categories."
              }
            ]
          },
          "Colors": {
            "allOf": [
              {
                "$ref": "#/$defs/DimensionFieldList"
              },
              {
                "description": "The color field wells of a line chart. Values are grouped by category fields."
              }
            ]
          },
          "SmallMultiples": {
            "allOf": [
              {
                "$ref": "#/$defs/SmallMultiplesDimensionFieldList"
              },
              {
                "description": "The small multiples field well of a line chart."
              }
            ]
          }
        },
        "description": "The field well configuration of a line chart."
      },
      "LineChartSortConfiguration": {
        "type": "object",
        "properties": {
          "CategorySort": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldSortOptionsList"
              },
              {
                "description": "The sort configuration of the category fields."
              }
            ]
          },
          "CategoryItemsLimitConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/ItemsLimitConfiguration"
              },
              {
                "description": "The limit on the number of categories that are displayed in a line chart."
              }
            ]
          },
          "ColorItemsLimitConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/ItemsLimitConfiguration"
              },
              {
                "description": "The limit on the number of lines that are displayed in a line chart."
              }
            ]
          },
          "SmallMultiplesSort": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldSortOptionsList"
              },
              {
                "description": "The sort configuration of the small multiples field."
              }
            ]
          },
          "SmallMultiplesLimitConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/ItemsLimitConfiguration"
              },
              {
                "description": "The limit on the number of small multiples panels that are displayed."
              }
            ]
          }
        },
        "description": "The sort configuration of a line chart."
      },
      "ForecastConfigurationList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ForecastConfiguration"
        },
        "maxItems": 10
      },
      "ForecastConfiguration": {
        "type": "object",
        "properties": {
          "ForecastProperties": {
            "allOf": [
              {
                "$ref": "#/$defs/TimeBasedForecastProperties"
              },
              {
                "description": "The forecast properties setup of a forecast in the line chart."
              }
            ]
          },
          "Scenario": {
            "allOf": [
              {
                "$ref": "#/$defs/ForecastScenario"
              },
              {
                "description": "The forecast scenario of a forecast in the line chart."
              }
            ]
          }
        },
        "description": "The forecast configuration that is used in a line chart's display properties."
      },
      "TimeBasedForecastProperties": {
        "type": "object",
        "properties": {
          "PeriodsForward": {
            "allOf": [
              {
                "$ref": "#/$defs/PeriodsForward"
              },
              {
                "description": "The periods forward setup of a forecast computation."
              }
            ]
          },
          "PeriodsBackward": {
            "allOf": [
              {
                "$ref": "#/$defs/PeriodsBackward"
              },
              {
                "description": "The periods backward setup of a forecast computation."
              }
            ]
          },
          "UpperBoundary": {
            "allOf": [
              {
                "$ref": "#/$defs/Double"
              },
              {
                "description": "The upper boundary setup of a forecast computation."
              }
            ]
          },
          "LowerBoundary": {
            "allOf": [
              {
                "$ref": "#/$defs/Double"
              },
              {
                "description": "The lower boundary setup of a forecast computation."
              }
            ]
          },
          "PredictionInterval": {
            "allOf": [
              {
                "$ref": "#/$defs/PredictionInterval"
              },
              {
                "description": "The prediction interval setup of a forecast computation."
              }
            ]
          },
          "Seasonality": {
            "allOf": [
              {
                "$ref": "#/$defs/Seasonality"
              },
              {
                "description": "<p>The seasonality setup of a forecast computation. Choose one of the following options:</p> <ul> <li> <p> <code>NULL</code>: The input is set to <code>NULL</code>.</p> </li> <li> <p> <code>NON_NULL</code>: The input is set to a custom value.</p> </li> </ul>"
              }
            ]
          }
        },
        "description": "The forecast properties setup of a forecast in the line chart."
      },
      "PeriodsForward": {
        "type": "integer",
        "minimum": 1,
        "maximum": 1000
      },
      "PeriodsBackward": {
        "type": "integer",
        "minimum": 0,
        "maximum": 1000
      },
      "PredictionInterval": {
        "type": "integer",
        "minimum": 50,
        "maximum": 95
      },
      "Seasonality": {
        "type": "integer",
        "minimum": 1,
        "maximum": 180
      },
      "ForecastScenario": {
        "type": "object",
        "properties": {
          "WhatIfPointScenario": {
            "allOf": [
              {
                "$ref": "#/$defs/WhatIfPointScenario"
              },
              {
                "description": "The what-if analysis forecast setup with the target date."
              }
            ]
          },
          "WhatIfRangeScenario": {
            "allOf": [
              {
                "$ref": "#/$defs/WhatIfRangeScenario"
              },
              {
                "description": "The what-if analysis forecast setup with the date range."
              }
            ]
          }
        },
        "description": "The forecast scenario of a forecast in the line chart."
      },
      "WhatIfPointScenario": {
        "type": "object",
        "required": [
          "Date",
          "Value"
        ],
        "properties": {
          "Date": {
            "allOf": [
              {
                "$ref": "#/$defs/Timestamp"
              },
              {
                "description": "The date that you need the forecast results for."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/Double"
              },
              {
                "description": "The target value that you want to meet for the provided date."
              }
            ]
          }
        },
        "description": "Provides the forecast to meet the target for a particular date."
      },
      "WhatIfRangeScenario": {
        "type": "object",
        "required": [
          "StartDate",
          "EndDate",
          "Value"
        ],
        "properties": {
          "StartDate": {
            "allOf": [
              {
                "$ref": "#/$defs/Timestamp"
              },
              {
                "description": "The start date in the date range that you need the forecast results for."
              }
            ]
          },
          "EndDate": {
            "allOf": [
              {
                "$ref": "#/$defs/Timestamp"
              },
              {
                "description": "The end date in the date range that you need the forecast results for."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/Double"
              },
              {
                "description": "The target value that you want to meet for the provided date range."
              }
            ]
          }
        },
        "description": "Provides the forecast to meet the target for a particular date range."
      },
      "LineChartType": {
        "type": "string",
        "enum": [
          "LINE",
          "AREA",
          "STACKED_AREA"
        ]
      },
      "LineSeriesAxisDisplayOptions": {
        "type": "object",
        "properties": {
          "AxisOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/AxisDisplayOptions"
              },
              {
                "description": "The options that determine the presentation of the line series axis."
              }
            ]
          },
          "MissingDataConfigurations": {
            "allOf": [
              {
                "$ref": "#/$defs/MissingDataConfigurationList"
              },
              {
                "description": "The configuration options that determine how missing data is treated during the rendering of a line chart."
              }
            ]
          }
        },
        "description": "The series axis configuration of a line chart."
      },
      "MissingDataConfigurationList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/MissingDataConfiguration"
        },
        "maxItems": 100
      },
      "MissingDataConfiguration": {
        "type": "object",
        "properties": {
          "TreatmentOption": {
            "allOf": [
              {
                "$ref": "#/$defs/MissingDataTreatmentOption"
              },
              {
                "description": "<p>The treatment option that determines how missing data should be rendered. Choose from the following options:</p> <ul> <li> <p> <code>INTERPOLATE</code>: Interpolate missing values between the prior and the next known value.</p> </li> <li> <p> <code>SHOW_AS_ZERO</code>: Show missing values as the value <code>0</code>.</p> </li> <li> <p> <code>SHOW_AS_BLANK</code>: Display a blank space when rendering missing data.</p> </li> </ul>"
              }
            ]
          }
        },
        "description": "The configuration options that determine how missing data is treated during the rendering of a line chart."
      },
      "MissingDataTreatmentOption": {
        "type": "string",
        "enum": [
          "INTERPOLATE",
          "SHOW_AS_ZERO",
          "SHOW_AS_BLANK"
        ]
      },
      "LineChartDefaultSeriesSettings": {
        "type": "object",
        "properties": {
          "AxisBinding": {
            "allOf": [
              {
                "$ref": "#/$defs/AxisBinding"
              },
              {
                "description": "The axis to which you are binding all line series to."
              }
            ]
          },
          "LineStyleSettings": {
            "allOf": [
              {
                "$ref": "#/$defs/LineChartLineStyleSettings"
              },
              {
                "description": "Line styles options for all line series in the visual."
              }
            ]
          },
          "MarkerStyleSettings": {
            "allOf": [
              {
                "$ref": "#/$defs/LineChartMarkerStyleSettings"
              },
              {
                "description": "Marker styles options for all line series in the visual."
              }
            ]
          }
        },
        "description": "The options that determine the default presentation of all line series in <code>LineChartVisual</code>."
      },
      "LineChartLineStyleSettings": {
        "type": "object",
        "properties": {
          "LineVisibility": {
            "allOf": [
              {
                "$ref": "#/$defs/Visibility"
              },
              {
                "description": "Configuration option that determines whether to show the line for the series."
              }
            ]
          },
          "LineInterpolation": {
            "allOf": [
              {
                "$ref": "#/$defs/LineInterpolation"
              },
              {
                "description": "<p>Interpolation style for line series.</p> <ul> <li> <p> <code>LINEAR</code>: Show as default, linear style.</p> </li> <li> <p> <code>SMOOTH</code>: Show as a smooth curve.</p> </li> <li> <p> <code>STEPPED</code>: Show steps in line.</p> </li> </ul>"
              }
            ]
          },
          "LineStyle": {
            "allOf": [
              {
                "$ref": "#/$defs/LineChartLineStyle"
              },
              {
                "description": "<p>Line style for line series.</p> <ul> <li> <p> <code>SOLID</code>: Show as a solid line.</p> </li> <li> <p> <code>DOTTED</code>: Show as a dotted line.</p> </li> <li> <p> <code>DASHED</code>: Show as a dashed line.</p> </li> </ul>"
              }
            ]
          },
          "LineWidth": {
            "allOf": [
              {
                "$ref": "#/$defs/PixelLength"
              },
              {
                "description": "Width that determines the line thickness."
              }
            ]
          }
        },
        "description": "Line styles options for a line series in <code>LineChartVisual</code>."
      },
      "LineInterpolation": {
        "type": "string",
        "enum": [
          "LINEAR",
          "SMOOTH",
          "STEPPED"
        ]
      },
      "LineChartLineStyle": {
        "type": "string",
        "enum": [
          "SOLID",
          "DOTTED",
          "DASHED"
        ]
      },
      "LineChartMarkerStyleSettings": {
        "type": "object",
        "properties": {
          "MarkerVisibility": {
            "allOf": [
              {
                "$ref": "#/$defs/Visibility"
              },
              {
                "description": "Configuration option that determines whether to show the markers in the series."
              }
            ]
          },
          "MarkerShape": {
            "allOf": [
              {
                "$ref": "#/$defs/LineChartMarkerShape"
              },
              {
                "description": "<p>Shape option for markers in the series.</p> <ul> <li> <p> <code>CIRCLE</code>: Show marker as a circle.</p> </li> <li> <p> <code>TRIANGLE</code>: Show marker as a triangle.</p> </li> <li> <p> <code>SQUARE</code>: Show marker as a square.</p> </li> <li> <p> <code>DIAMOND</code>: Show marker as a diamond.</p> </li> <li> <p> <code>ROUNDED_SQUARE</code>: Show marker as a rounded square.</p> </li> </ul>"
              }
            ]
          },
          "MarkerSize": {
            "allOf": [
              {
                "$ref": "#/$defs/PixelLength"
              },
              {
                "description": "Size of marker in the series."
              }
            ]
          },
          "MarkerColor": {
            "allOf": [
              {
                "$ref": "#/$defs/HexColor"
              },
              {
                "description": "Color of marker in the series."
              }
            ]
          }
        },
        "description": "Marker styles options for a line series in <code>LineChartVisual</code>."
      },
      "LineChartMarkerShape": {
        "type": "string",
        "enum": [
          "CIRCLE",
          "TRIANGLE",
          "SQUARE",
          "DIAMOND",
          "ROUNDED_SQUARE"
        ]
      },
      "SeriesItemList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/SeriesItem"
        },
        "maxItems": 10
      },
      "SeriesItem": {
        "type": "object",
        "properties": {
          "FieldSeriesItem": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldSeriesItem"
              },
              {
                "description": "The field series item configuration of a line chart."
              }
            ]
          },
          "DataFieldSeriesItem": {
            "allOf": [
              {
                "$ref": "#/$defs/DataFieldSeriesItem"
              },
              {
                "description": "The data field series item configuration of a line chart."
              }
            ]
          }
        },
        "description": "<p>The series item configuration of a line chart.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>"
      },
      "FieldSeriesItem": {
        "type": "object",
        "required": [
          "FieldId",
          "AxisBinding"
        ],
        "properties": {
          "FieldId": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldId"
              },
              {
                "description": "The field ID of the field for which you are setting the axis binding."
              }
            ]
          },
          "AxisBinding": {
            "allOf": [
              {
                "$ref": "#/$defs/AxisBinding"
              },
              {
                "description": "The axis that you are binding the field to."
              }
            ]
          },
          "Settings": {
            "allOf": [
              {
                "$ref": "#/$defs/LineChartSeriesSettings"
              },
              {
                "description": "The options that determine the presentation of line series associated to the field."
              }
            ]
          }
        },
        "description": "The field series item configuration of a line chart."
      },
      "LineChartSeriesSettings": {
        "type": "object",
        "properties": {
          "LineStyleSettings": {
            "allOf": [
              {
                "$ref": "#/$defs/LineChartLineStyleSettings"
              },
              {
                "description": "Line styles options for a line series in <code>LineChartVisual</code>."
              }
            ]
          },
          "MarkerStyleSettings": {
            "allOf": [
              {
                "$ref": "#/$defs/LineChartMarkerStyleSettings"
              },
              {
                "description": "Marker styles options for a line series in <code>LineChartVisual</code>."
              }
            ]
          }
        },
        "description": "The options that determine the presentation of a line series in the visual"
      },
      "DataFieldSeriesItem": {
        "type": "object",
        "required": [
          "FieldId",
          "AxisBinding"
        ],
        "properties": {
          "FieldId": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldId"
              },
              {
                "description": "The field ID of the field that you are setting the axis binding to."
              }
            ]
          },
          "FieldValue": {
            "allOf": [
              {
                "$ref": "#/$defs/SensitiveString"
              },
              {
                "description": "The field value of the field that you are setting the axis binding to."
              }
            ]
          },
          "AxisBinding": {
            "allOf": [
              {
                "$ref": "#/$defs/AxisBinding"
              },
              {
                "description": "The axis that you are binding the field to."
              }
            ]
          },
          "Settings": {
            "allOf": [
              {
                "$ref": "#/$defs/LineChartSeriesSettings"
              },
              {
                "description": "The options that determine the presentation of line series associated to the field."
              }
            ]
          }
        },
        "description": "The data field series item configuration of a line chart."
      },
      "HeatMapVisual": {
        "type": "object",
        "required": [
          "VisualId"
        ],
        "properties": {
          "VisualId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "The unique identifier of a visual. This identifier must be unique within the context of a dashboard, template, or analysis. Two dashboards, analyses, or templates can have visuals with the same identifiers."
              }
            ]
          },
          "Title": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualTitleLabelOptions"
              },
              {
                "description": "The title that is displayed on the visual."
              }
            ]
          },
          "Subtitle": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualSubtitleLabelOptions"
              },
              {
                "description": "The subtitle that is displayed on the visual."
              }
            ]
          },
          "ChartConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/HeatMapConfiguration"
              },
              {
                "description": "The configuration of a heat map."
              }
            ]
          },
          "ColumnHierarchies": {
            "allOf": [
              {
                "$ref": "#/$defs/ColumnHierarchyList"
              },
              {
                "description": "The column hierarchy that is used during drill-downs and drill-ups."
              }
            ]
          },
          "Actions": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualCustomActionList"
              },
              {
                "description": "The list of custom actions that are configured for a visual."
              }
            ]
          }
        },
        "description": "<p>A heat map.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/heat-map.html\">Using heat maps</a> in the <i>Amazon QuickSight User Guide</i>.</p>"
      },
      "HeatMapConfiguration": {
        "type": "object",
        "properties": {
          "FieldWells": {
            "allOf": [
              {
                "$ref": "#/$defs/HeatMapFieldWells"
              },
              {
                "description": "The field wells of the visual."
              }
            ]
          },
          "SortConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/HeatMapSortConfiguration"
              },
              {
                "description": "The sort configuration of a heat map."
              }
            ]
          },
          "RowLabelOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/ChartAxisLabelOptions"
              },
              {
                "description": "The label options of the row that is displayed in a <code>heat map</code>."
              }
            ]
          },
          "ColumnLabelOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/ChartAxisLabelOptions"
              },
              {
                "description": "The label options of the column that is displayed in a heat map."
              }
            ]
          },
          "ColorScale": {
            "allOf": [
              {
                "$ref": "#/$defs/ColorScale"
              },
              {
                "description": "The color options (gradient color, point of divergence) in a heat map."
              }
            ]
          },
          "Legend": {
            "allOf": [
              {
                "$ref": "#/$defs/LegendOptions"
              },
              {
                "description": "The legend display setup of the visual."
              }
            ]
          },
          "DataLabels": {
            "allOf": [
              {
                "$ref": "#/$defs/DataLabelOptions"
              },
              {
                "description": "The options that determine if visual data labels are displayed."
              }
            ]
          },
          "Tooltip": {
            "allOf": [
              {
                "$ref": "#/$defs/TooltipOptions"
              },
              {
                "description": "The tooltip display setup of the visual."
              }
            ]
          }
        },
        "description": "The configuration of a heat map."
      },
      "HeatMapFieldWells": {
        "type": "object",
        "properties": {
          "HeatMapAggregatedFieldWells": {
            "allOf": [
              {
                "$ref": "#/$defs/HeatMapAggregatedFieldWells"
              },
              {
                "description": "The aggregated field wells of a heat map."
              }
            ]
          }
        },
        "description": "<p>The field well configuration of a heat map.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>"
      },
      "HeatMapAggregatedFieldWells": {
        "type": "object",
        "properties": {
          "Rows": {
            "allOf": [
              {
                "$ref": "#/$defs/HeatMapDimensionFieldList"
              },
              {
                "description": "The rows field well of a heat map."
              }
            ]
          },
          "Columns": {
            "allOf": [
              {
                "$ref": "#/$defs/HeatMapDimensionFieldList"
              },
              {
                "description": "The columns field well of a heat map."
              }
            ]
          },
          "Values": {
            "allOf": [
              {
                "$ref": "#/$defs/HeatMapMeasureFieldList"
              },
              {
                "description": "The values field well of a heat map."
              }
            ]
          }
        },
        "description": "The aggregated field wells of a heat map."
      },
      "HeatMapDimensionFieldList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/DimensionField"
        },
        "maxItems": 1
      },
      "HeatMapMeasureFieldList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/MeasureField"
        },
        "maxItems": 1
      },
      "HeatMapSortConfiguration": {
        "type": "object",
        "properties": {
          "HeatMapRowSort": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldSortOptionsList"
              },
              {
                "description": "The field sort configuration of the rows fields."
              }
            ]
          },
          "HeatMapColumnSort": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldSortOptionsList"
              },
              {
                "description": "The column sort configuration for heat map for columns that aren't a part of a field well."
              }
            ]
          },
          "HeatMapRowItemsLimitConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/ItemsLimitConfiguration"
              },
              {
                "description": "The limit on the number of rows that are displayed in a heat map."
              }
            ]
          },
          "HeatMapColumnItemsLimitConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/ItemsLimitConfiguration"
              },
              {
                "description": "The limit on the number of columns that are displayed in a heat map."
              }
            ]
          }
        },
        "description": "The sort configuration of a heat map."
      },
      "ColorScale": {
        "type": "object",
        "required": [
          "Colors",
          "ColorFillType"
        ],
        "properties": {
          "Colors": {
            "allOf": [
              {
                "$ref": "#/$defs/ColorScaleColorList"
              },
              {
                "description": "Determines the list of colors that are applied to the visual."
              }
            ]
          },
          "ColorFillType": {
            "allOf": [
              {
                "$ref": "#/$defs/ColorFillType"
              },
              {
                "description": "Determines the color fill type."
              }
            ]
          },
          "NullValueColor": {
            "allOf": [
              {
                "$ref": "#/$defs/DataColor"
              },
              {
                "description": "Determines the color that is applied to null values."
              }
            ]
          }
        },
        "description": "Determines the color scale that is applied to the visual."
      },
      "ColorScaleColorList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/DataColor"
        },
        "minItems": 2,
        "maxItems": 3
      },
      "DataColor": {
        "type": "object",
        "properties": {
          "Color": {
            "allOf": [
              {
                "$ref": "#/$defs/HexColor"
              },
              {
                "description": "The color that is applied to the data value."
              }
            ]
          },
          "DataValue": {
            "allOf": [
              {
                "$ref": "#/$defs/Double"
              },
              {
                "description": "The data value that the color is applied to."
              }
            ]
          }
        },
        "description": "Determines the color that is applied to a particular data value."
      },
      "ColorFillType": {
        "type": "string",
        "enum": [
          "DISCRETE",
          "GRADIENT"
        ]
      },
      "TreeMapVisual": {
        "type": "object",
        "required": [
          "VisualId"
        ],
        "properties": {
          "VisualId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "The unique identifier of a visual. This identifier must be unique within the context of a dashboard, template, or analysis. Two dashboards, analyses, or templates can have visuals with the same identifiers.."
              }
            ]
          },
          "Title": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualTitleLabelOptions"
              },
              {
                "description": "The title that is displayed on the visual."
              }
            ]
          },
          "Subtitle": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualSubtitleLabelOptions"
              },
              {
                "description": "The subtitle that is displayed on the visual."
              }
            ]
          },
          "ChartConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/TreeMapConfiguration"
              },
              {
                "description": "The configuration settings of the visual."
              }
            ]
          },
          "Actions": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualCustomActionList"
              },
              {
                "description": "The list of custom actions that are configured for a visual."
              }
            ]
          },
          "ColumnHierarchies": {
            "allOf": [
              {
                "$ref": "#/$defs/ColumnHierarchyList"
              },
              {
                "description": "The column hierarchy that is used during drill-downs and drill-ups."
              }
            ]
          }
        },
        "description": "<p>A tree map.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/tree-map.html\">Using tree maps</a> in the <i>Amazon QuickSight User Guide</i>.</p>"
      },
      "TreeMapConfiguration": {
        "type": "object",
        "properties": {
          "FieldWells": {
            "allOf": [
              {
                "$ref": "#/$defs/TreeMapFieldWells"
              },
              {
                "description": "The field wells of the visual."
              }
            ]
          },
          "SortConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/TreeMapSortConfiguration"
              },
              {
                "description": "The sort configuration of a tree map."
              }
            ]
          },
          "GroupLabelOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/ChartAxisLabelOptions"
              },
              {
                "description": "The label options (label text, label visibility) of the groups that are displayed in a tree map."
              }
            ]
          },
          "SizeLabelOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/ChartAxisLabelOptions"
              },
              {
                "description": "The label options (label text, label visibility) of the sizes that are displayed in a tree map."
              }
            ]
          },
          "ColorLabelOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/ChartAxisLabelOptions"
              },
              {
                "description": "The label options (label text, label visibility) for the colors displayed in a tree map."
              }
            ]
          },
          "ColorScale": {
            "allOf": [
              {
                "$ref": "#/$defs/ColorScale"
              },
              {
                "description": "The color options (gradient color, point of divergence) of a tree map."
              }
            ]
          },
          "Legend": {
            "allOf": [
              {
                "$ref": "#/$defs/LegendOptions"
              },
              {
                "description": "The legend display setup of the visual."
              }
            ]
          },
          "DataLabels": {
            "allOf": [
              {
                "$ref": "#/$defs/DataLabelOptions"
              },
              {
                "description": "The options that determine if visual data labels are displayed."
              }
            ]
          },
          "Tooltip": {
            "allOf": [
              {
                "$ref": "#/$defs/TooltipOptions"
              },
              {
                "description": "The tooltip display setup of the visual."
              }
            ]
          }
        },
        "description": "The configuration of a tree map."
      },
      "TreeMapFieldWells": {
        "type": "object",
        "properties": {
          "TreeMapAggregatedFieldWells": {
            "allOf": [
              {
                "$ref": "#/$defs/TreeMapAggregatedFieldWells"
              },
              {
                "description": "The aggregated field wells of a tree map."
              }
            ]
          }
        },
        "description": "<p>The field wells of a tree map.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>"
      },
      "TreeMapAggregatedFieldWells": {
        "type": "object",
        "properties": {
          "Groups": {
            "allOf": [
              {
                "$ref": "#/$defs/TreeMapDimensionFieldList"
              },
              {
                "description": "The group by field well of a tree map. Values are grouped based on group by fields."
              }
            ]
          },
          "Sizes": {
            "allOf": [
              {
                "$ref": "#/$defs/TreeMapMeasureFieldList"
              },
              {
                "description": "The size field well of a tree map. Values are aggregated based on group by fields."
              }
            ]
          },
          "Colors": {
            "allOf": [
              {
                "$ref": "#/$defs/TreeMapMeasureFieldList"
              },
              {
                "description": "The color field well of a tree map. Values are grouped by aggregations based on group by fields."
              }
            ]
          }
        },
        "description": "Aggregated field wells of a tree map."
      },
      "TreeMapDimensionFieldList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/DimensionField"
        },
        "maxItems": 1
      },
      "TreeMapMeasureFieldList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/MeasureField"
        },
        "maxItems": 1
      },
      "TreeMapSortConfiguration": {
        "type": "object",
        "properties": {
          "TreeMapSort": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldSortOptionsList"
              },
              {
                "description": "The sort configuration of group by fields."
              }
            ]
          },
          "TreeMapGroupItemsLimitConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/ItemsLimitConfiguration"
              },
              {
                "description": "The limit on the number of groups that are displayed."
              }
            ]
          }
        },
        "description": "The sort configuration of a tree map."
      },
      "GeospatialMapVisual": {
        "type": "object",
        "required": [
          "VisualId"
        ],
        "properties": {
          "VisualId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "The unique identifier of a visual. This identifier must be unique within the context of a dashboard, template, or analysis. Two dashboards, analyses, or templates can have visuals with the same identifiers.."
              }
            ]
          },
          "Title": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualTitleLabelOptions"
              },
              {
                "description": "The title that is displayed on the visual."
              }
            ]
          },
          "Subtitle": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualSubtitleLabelOptions"
              },
              {
                "description": "The subtitle that is displayed on the visual."
              }
            ]
          },
          "ChartConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/GeospatialMapConfiguration"
              },
              {
                "description": "The configuration settings of the visual."
              }
            ]
          },
          "ColumnHierarchies": {
            "allOf": [
              {
                "$ref": "#/$defs/ColumnHierarchyList"
              },
              {
                "description": "The column hierarchy that is used during drill-downs and drill-ups."
              }
            ]
          },
          "Actions": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualCustomActionList"
              },
              {
                "description": "The list of custom actions that are configured for a visual."
              }
            ]
          }
        },
        "description": "<p>A geospatial map or a points on map visual.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/point-maps.html\">Creating point maps</a> in the <i>Amazon QuickSight User Guide</i>.</p>"
      },
      "GeospatialMapConfiguration": {
        "type": "object",
        "properties": {
          "FieldWells": {
            "allOf": [
              {
                "$ref": "#/$defs/GeospatialMapFieldWells"
              },
              {
                "description": "The field wells of the visual."
              }
            ]
          },
          "Legend": {
            "allOf": [
              {
                "$ref": "#/$defs/LegendOptions"
              },
              {
                "description": "The legend display setup of the visual."
              }
            ]
          },
          "Tooltip": {
            "allOf": [
              {
                "$ref": "#/$defs/TooltipOptions"
              },
              {
                "description": "The tooltip display setup of the visual."
              }
            ]
          },
          "WindowOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/GeospatialWindowOptions"
              },
              {
                "description": "The window options of the geospatial map."
              }
            ]
          },
          "MapStyleOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/GeospatialMapStyleOptions"
              },
              {
                "description": "The map style options of the geospatial map."
              }
            ]
          },
          "PointStyleOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/GeospatialPointStyleOptions"
              },
              {
                "description": "The point style options of the geospatial map."
              }
            ]
          },
          "VisualPalette": {
            "$ref": "#/$defs/VisualPalette"
          }
        },
        "description": "The configuration of a <code>GeospatialMapVisual</code>."
      },
      "GeospatialMapFieldWells": {
        "type": "object",
        "properties": {
          "GeospatialMapAggregatedFieldWells": {
            "allOf": [
              {
                "$ref": "#/$defs/GeospatialMapAggregatedFieldWells"
              },
              {
                "description": "The aggregated field well for a geospatial map."
              }
            ]
          }
        },
        "description": "<p>The field wells of a <code>GeospatialMapVisual</code>.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>"
      },
      "GeospatialMapAggregatedFieldWells": {
        "type": "object",
        "properties": {
          "Geospatial": {
            "allOf": [
              {
                "$ref": "#/$defs/DimensionFieldList"
              },
              {
                "description": "The geospatial field wells of a geospatial map. Values are grouped by geospatial fields."
              }
            ]
          },
          "Values": {
            "allOf": [
              {
                "$ref": "#/$defs/MeasureFieldList"
              },
              {
                "description": "The size field wells of a geospatial map. Values are aggregated based on geospatial fields."
              }
            ]
          },
          "Colors": {
            "allOf": [
              {
                "$ref": "#/$defs/DimensionFieldList"
              },
              {
                "description": "The color field wells of a geospatial map."
              }
            ]
          }
        },
        "description": "The aggregated field wells for a geospatial map."
      },
      "GeospatialWindowOptions": {
        "type": "object",
        "properties": {
          "Bounds": {
            "allOf": [
              {
                "$ref": "#/$defs/GeospatialCoordinateBounds"
              },
              {
                "description": "The bounds options (north, south, west, east) of the geospatial window options."
              }
            ]
          },
          "MapZoomMode": {
            "allOf": [
              {
                "$ref": "#/$defs/MapZoomMode"
              },
              {
                "description": "The map zoom modes (manual, auto) of the geospatial window options."
              }
            ]
          }
        },
        "description": "The window options of the geospatial map visual."
      },
      "GeospatialCoordinateBounds": {
        "type": "object",
        "required": [
          "North",
          "South",
          "West",
          "East"
        ],
        "properties": {
          "North": {
            "allOf": [
              {
                "$ref": "#/$defs/Latitude"
              },
              {
                "description": "The latitude of the north bound of the geospatial coordinate bounds."
              }
            ]
          },
          "South": {
            "allOf": [
              {
                "$ref": "#/$defs/Latitude"
              },
              {
                "description": "The latitude of the south bound of the geospatial coordinate bounds."
              }
            ]
          },
          "West": {
            "allOf": [
              {
                "$ref": "#/$defs/Longitude"
              },
              {
                "description": "The longitude of the west bound of the geospatial coordinate bounds."
              }
            ]
          },
          "East": {
            "allOf": [
              {
                "$ref": "#/$defs/Longitude"
              },
              {
                "description": "The longitude of the east bound of the geospatial coordinate bounds."
              }
            ]
          }
        },
        "description": "The bound options (north, south, west, east) of the geospatial window options."
      },
      "Latitude": {
        "type": "number",
        "format": "double",
        "minimum": -90,
        "maximum": 90
      },
      "Longitude": {
        "type": "number",
        "format": "double",
        "minimum": -1800,
        "maximum": 1800
      },
      "MapZoomMode": {
        "type": "string",
        "enum": [
          "AUTO",
          "MANUAL"
        ]
      },
      "GeospatialMapStyleOptions": {
        "type": "object",
        "properties": {
          "BaseMapStyle": {
            "allOf": [
              {
                "$ref": "#/$defs/BaseMapStyleType"
              },
              {
                "description": "The base map style of the geospatial map."
              }
            ]
          }
        },
        "description": "The map style options of the geospatial map."
      },
      "BaseMapStyleType": {
        "type": "string",
        "enum": [
          "LIGHT_GRAY",
          "DARK_GRAY",
          "STREET",
          "IMAGERY"
        ]
      },
      "GeospatialPointStyleOptions": {
        "type": "object",
        "properties": {
          "SelectedPointStyle": {
            "allOf": [
              {
                "$ref": "#/$defs/GeospatialSelectedPointStyle"
              },
              {
                "description": "The selected point styles (point, cluster) of the geospatial map."
              }
            ]
          },
          "ClusterMarkerConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/ClusterMarkerConfiguration"
              },
              {
                "description": "The cluster marker configuration of the geospatial point style."
              }
            ]
          },
          "HeatmapConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/GeospatialHeatmapConfiguration"
              },
              {
                "description": "The heatmap configuration of the geospatial point style."
              }
            ]
          }
        },
        "description": "The point style of the geospatial map."
      },
      "GeospatialSelectedPointStyle": {
        "type": "string",
        "enum": [
          "POINT",
          "CLUSTER",
          "HEATMAP"
        ]
      },
      "ClusterMarkerConfiguration": {
        "type": "object",
        "properties": {
          "ClusterMarker": {
            "allOf": [
              {
                "$ref": "#/$defs/ClusterMarker"
              },
              {
                "description": "The cluster marker that is a part of the cluster marker configuration."
              }
            ]
          }
        },
        "description": "The cluster marker configuration of the geospatial map selected point style."
      },
      "ClusterMarker": {
        "type": "object",
        "properties": {
          "SimpleClusterMarker": {
            "allOf": [
              {
                "$ref": "#/$defs/SimpleClusterMarker"
              },
              {
                "description": "The simple cluster marker of the cluster marker."
              }
            ]
          }
        },
        "description": "The cluster marker that is a part of the cluster marker configuration."
      },
      "SimpleClusterMarker": {
        "type": "object",
        "properties": {
          "Color": {
            "allOf": [
              {
                "$ref": "#/$defs/HexColor"
              },
              {
                "description": "The color of the simple cluster marker."
              }
            ]
          }
        },
        "description": "The simple cluster marker of the cluster marker."
      },
      "GeospatialHeatmapConfiguration": {
        "type": "object",
        "properties": {
          "HeatmapColor": {
            "allOf": [
              {
                "$ref": "#/$defs/GeospatialHeatmapColorScale"
              },
              {
                "description": "The color scale specification for the heatmap point style."
              }
            ]
          }
        },
        "description": "The heatmap configuration of the geospatial point style."
      },
      "GeospatialHeatmapColorScale": {
        "type": "object",
        "properties": {
          "Colors": {
            "allOf": [
              {
                "$ref": "#/$defs/GeospatialHeatmapDataColorList"
              },
              {
                "description": "The list of colors to be used in heatmap point style."
              }
            ]
          }
        },
        "description": "The color scale specification for the heatmap point style."
      },
      "GeospatialHeatmapDataColorList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/GeospatialHeatmapDataColor"
        },
        "minItems": 2,
        "maxItems": 2
      },
      "GeospatialHeatmapDataColor": {
        "type": "object",
        "required": [
          "Color"
        ],
        "properties": {
          "Color": {
            "allOf": [
              {
                "$ref": "#/$defs/HexColor"
              },
              {
                "description": "The hex color to be used in the heatmap point style."
              }
            ]
          }
        },
        "description": "The color to be used in the heatmap point style."
      },
      "FilledMapVisual": {
        "type": "object",
        "required": [
          "VisualId"
        ],
        "properties": {
          "VisualId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "The unique identifier of a visual. This identifier must be unique within the context of a dashboard, template, or analysis. Two dashboards, analyses, or templates can have visuals with the same identifiers.."
              }
            ]
          },
          "Title": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualTitleLabelOptions"
              },
              {
                "description": "The title that is displayed on the visual."
              }
            ]
          },
          "Subtitle": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualSubtitleLabelOptions"
              },
              {
                "description": "The subtitle that is displayed on the visual."
              }
            ]
          },
          "ChartConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/FilledMapConfiguration"
              },
              {
                "description": "The configuration settings of the visual."
              }
            ]
          },
          "ConditionalFormatting": {
            "allOf": [
              {
                "$ref": "#/$defs/FilledMapConditionalFormatting"
              },
              {
                "description": "The conditional formatting of a <code>FilledMapVisual</code>."
              }
            ]
          },
          "ColumnHierarchies": {
            "allOf": [
              {
                "$ref": "#/$defs/ColumnHierarchyList"
              },
              {
                "description": "The column hierarchy that is used during drill-downs and drill-ups."
              }
            ]
          },
          "Actions": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualCustomActionList"
              },
              {
                "description": "The list of custom actions that are configured for a visual."
              }
            ]
          }
        },
        "description": "<p>A filled map.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/filled-maps.html\">Creating filled maps</a> in the <i>Amazon QuickSight User Guide</i>.</p>"
      },
      "FilledMapConfiguration": {
        "type": "object",
        "properties": {
          "FieldWells": {
            "allOf": [
              {
                "$ref": "#/$defs/FilledMapFieldWells"
              },
              {
                "description": "The field wells of the visual."
              }
            ]
          },
          "SortConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/FilledMapSortConfiguration"
              },
              {
                "description": "The sort configuration of a <code>FilledMapVisual</code>."
              }
            ]
          },
          "Legend": {
            "allOf": [
              {
                "$ref": "#/$defs/LegendOptions"
              },
              {
                "description": "The legend display setup of the visual."
              }
            ]
          },
          "Tooltip": {
            "allOf": [
              {
                "$ref": "#/$defs/TooltipOptions"
              },
              {
                "description": "The tooltip display setup of the visual."
              }
            ]
          },
          "WindowOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/GeospatialWindowOptions"
              },
              {
                "description": "The window options of the filled map visual."
              }
            ]
          },
          "MapStyleOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/GeospatialMapStyleOptions"
              },
              {
                "description": "The map style options of the filled map visual."
              }
            ]
          }
        },
        "description": "The configuration for a <code>FilledMapVisual</code>."
      },
      "FilledMapFieldWells": {
        "type": "object",
        "properties": {
          "FilledMapAggregatedFieldWells": {
            "allOf": [
              {
                "$ref": "#/$defs/FilledMapAggregatedFieldWells"
              },
              {
                "description": "The aggregated field well of the filled map."
              }
            ]
          }
        },
        "description": "<p>The field wells of a <code>FilledMapVisual</code>.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>"
      },
      "FilledMapAggregatedFieldWells": {
        "type": "object",
        "properties": {
          "Geospatial": {
            "allOf": [
              {
                "$ref": "#/$defs/FilledMapDimensionFieldList"
              },
              {
                "description": "The aggregated location field well of the filled map. Values are grouped by location fields."
              }
            ]
          },
          "Values": {
            "allOf": [
              {
                "$ref": "#/$defs/FilledMapMeasureFieldList"
              },
              {
                "description": "The aggregated color field well of a filled map. Values are aggregated based on location fields."
              }
            ]
          }
        },
        "description": "The aggregated field well of the filled map."
      },
      "FilledMapDimensionFieldList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/DimensionField"
        },
        "maxItems": 1
      },
      "FilledMapMeasureFieldList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/MeasureField"
        },
        "maxItems": 1
      },
      "FilledMapSortConfiguration": {
        "type": "object",
        "properties": {
          "CategorySort": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldSortOptionsList"
              },
              {
                "description": "The sort configuration of the location fields."
              }
            ]
          }
        },
        "description": "The sort configuration of a <code>FilledMapVisual</code>."
      },
      "FilledMapConditionalFormatting": {
        "type": "object",
        "required": [
          "ConditionalFormattingOptions"
        ],
        "properties": {
          "ConditionalFormattingOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/FilledMapConditionalFormattingOptionList"
              },
              {
                "description": "Conditional formatting options of a <code>FilledMapVisual</code>."
              }
            ]
          }
        },
        "description": "The conditional formatting of a <code>FilledMapVisual</code>."
      },
      "FilledMapConditionalFormattingOptionList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/FilledMapConditionalFormattingOption"
        },
        "maxItems": 200
      },
      "FilledMapConditionalFormattingOption": {
        "type": "object",
        "required": [
          "Shape"
        ],
        "properties": {
          "Shape": {
            "allOf": [
              {
                "$ref": "#/$defs/FilledMapShapeConditionalFormatting"
              },
              {
                "description": "The conditional formatting that determines the shape of the filled map."
              }
            ]
          }
        },
        "description": "Conditional formatting options of a <code>FilledMapVisual</code>."
      },
      "FilledMapShapeConditionalFormatting": {
        "type": "object",
        "required": [
          "FieldId"
        ],
        "properties": {
          "FieldId": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldId"
              },
              {
                "description": "The field ID of the filled map shape."
              }
            ]
          },
          "Format": {
            "allOf": [
              {
                "$ref": "#/$defs/ShapeConditionalFormat"
              },
              {
                "description": "The conditional formatting that determines the background color of a filled map's shape."
              }
            ]
          }
        },
        "description": "The conditional formatting that determines the shape of the filled map."
      },
      "ShapeConditionalFormat": {
        "type": "object",
        "required": [
          "BackgroundColor"
        ],
        "properties": {
          "BackgroundColor": {
            "allOf": [
              {
                "$ref": "#/$defs/ConditionalFormattingColor"
              },
              {
                "description": "The conditional formatting for the shape background color of a filled map visual."
              }
            ]
          }
        },
        "description": "The shape conditional formatting of a filled map visual."
      },
      "FunnelChartVisual": {
        "type": "object",
        "required": [
          "VisualId"
        ],
        "properties": {
          "VisualId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "The unique identifier of a visual. This identifier must be unique within the context of a dashboard, template, or analysis. Two dashboards, analyses, or templates can have visuals with the same identifiers.."
              }
            ]
          },
          "Title": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualTitleLabelOptions"
              },
              {
                "description": "The title that is displayed on the visual."
              }
            ]
          },
          "Subtitle": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualSubtitleLabelOptions"
              },
              {
                "description": "The subtitle that is displayed on the visual."
              }
            ]
          },
          "ChartConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/FunnelChartConfiguration"
              },
              {
                "description": "The configuration of a <code>FunnelChartVisual</code>."
              }
            ]
          },
          "Actions": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualCustomActionList"
              },
              {
                "description": "The list of custom actions that are configured for a visual."
              }
            ]
          },
          "ColumnHierarchies": {
            "allOf": [
              {
                "$ref": "#/$defs/ColumnHierarchyList"
              },
              {
                "description": "The column hierarchy that is used during drill-downs and drill-ups."
              }
            ]
          }
        },
        "description": "<p>A funnel chart.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/funnel-visual-content.html\">Using funnel charts</a> in the <i>Amazon QuickSight User Guide</i>.</p>"
      },
      "FunnelChartConfiguration": {
        "type": "object",
        "properties": {
          "FieldWells": {
            "allOf": [
              {
                "$ref": "#/$defs/FunnelChartFieldWells"
              },
              {
                "description": "The field well configuration of a <code>FunnelChartVisual</code>."
              }
            ]
          },
          "SortConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/FunnelChartSortConfiguration"
              },
              {
                "description": "The sort configuration of a <code>FunnelChartVisual</code>."
              }
            ]
          },
          "CategoryLabelOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/ChartAxisLabelOptions"
              },
              {
                "description": "The label options of the categories that are displayed in a <code>FunnelChartVisual</code>."
              }
            ]
          },
          "ValueLabelOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/ChartAxisLabelOptions"
              },
              {
                "description": "The label options for the values that are displayed in a <code>FunnelChartVisual</code>."
              }
            ]
          },
          "Tooltip": {
            "allOf": [
              {
                "$ref": "#/$defs/TooltipOptions"
              },
              {
                "description": "The tooltip configuration of a <code>FunnelChartVisual</code>."
              }
            ]
          },
          "DataLabelOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/FunnelChartDataLabelOptions"
              },
              {
                "description": "The options that determine the presentation of the data labels."
              }
            ]
          },
          "VisualPalette": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualPalette"
              },
              {
                "description": "The visual palette configuration of a <code>FunnelChartVisual</code>."
              }
            ]
          }
        },
        "description": "The configuration of a <code>FunnelChartVisual</code>."
      },
      "FunnelChartFieldWells": {
        "type": "object",
        "properties": {
          "FunnelChartAggregatedFieldWells": {
            "allOf": [
              {
                "$ref": "#/$defs/FunnelChartAggregatedFieldWells"
              },
              {
                "description": "The field well configuration of a <code>FunnelChartVisual</code>."
              }
            ]
          }
        },
        "description": "<p>The field well configuration of a <code>FunnelChartVisual</code>.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>"
      },
      "FunnelChartAggregatedFieldWells": {
        "type": "object",
        "properties": {
          "Category": {
            "allOf": [
              {
                "$ref": "#/$defs/FunnelChartDimensionFieldList"
              },
              {
                "description": "The category field wells of a funnel chart. Values are grouped by category fields."
              }
            ]
          },
          "Values": {
            "allOf": [
              {
                "$ref": "#/$defs/FunnelChartMeasureFieldList"
              },
              {
                "description": "The value field wells of a funnel chart. Values are aggregated based on categories."
              }
            ]
          }
        },
        "description": "The field well configuration of a <code>FunnelChartVisual</code>."
      },
      "FunnelChartDimensionFieldList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/DimensionField"
        },
        "maxItems": 1
      },
      "FunnelChartMeasureFieldList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/MeasureField"
        },
        "maxItems": 1
      },
      "FunnelChartSortConfiguration": {
        "type": "object",
        "properties": {
          "CategorySort": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldSortOptionsList"
              },
              {
                "description": "The sort configuration of the category fields."
              }
            ]
          },
          "CategoryItemsLimit": {
            "allOf": [
              {
                "$ref": "#/$defs/ItemsLimitConfiguration"
              },
              {
                "description": "The limit on the number of categories displayed."
              }
            ]
          }
        },
        "description": "The sort configuration of a <code>FunnelChartVisual</code>."
      },
      "FunnelChartDataLabelOptions": {
        "type": "object",
        "properties": {
          "Visibility": {
            "allOf": [
              {
                "$ref": "#/$defs/Visibility"
              },
              {
                "description": "The visibility option that determines if data labels are displayed."
              }
            ]
          },
          "CategoryLabelVisibility": {
            "allOf": [
              {
                "$ref": "#/$defs/Visibility"
              },
              {
                "description": "The visibility of the category labels within the data labels."
              }
            ]
          },
          "MeasureLabelVisibility": {
            "allOf": [
              {
                "$ref": "#/$defs/Visibility"
              },
              {
                "description": "The visibility of the measure labels within the data labels."
              }
            ]
          },
          "Position": {
            "allOf": [
              {
                "$ref": "#/$defs/DataLabelPosition"
              },
              {
                "description": "Determines the positioning of the data label relative to a section of the funnel."
              }
            ]
          },
          "LabelFontConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/FontConfiguration"
              },
              {
                "description": "<p>The font configuration for the data labels.</p> <p>Only the <code>FontSize</code> attribute of the font configuration is used for data labels.</p>"
              }
            ]
          },
          "LabelColor": {
            "allOf": [
              {
                "$ref": "#/$defs/HexColor"
              },
              {
                "description": "The color of the data label text."
              }
            ]
          },
          "MeasureDataLabelStyle": {
            "allOf": [
              {
                "$ref": "#/$defs/FunnelChartMeasureDataLabelStyle"
              },
              {
                "description": "Determines the style of the metric labels."
              }
            ]
          }
        },
        "description": "The options that determine the presentation of the data labels."
      },
      "FunnelChartMeasureDataLabelStyle": {
        "type": "string",
        "enum": [
          "VALUE_ONLY",
          "PERCENTAGE_BY_FIRST_STAGE",
          "PERCENTAGE_BY_PREVIOUS_STAGE",
          "VALUE_AND_PERCENTAGE_BY_FIRST_STAGE",
          "VALUE_AND_PERCENTAGE_BY_PREVIOUS_STAGE"
        ]
      },
      "ScatterPlotVisual": {
        "type": "object",
        "required": [
          "VisualId"
        ],
        "properties": {
          "VisualId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "The unique identifier of a visual. This identifier must be unique within the context of a dashboard, template, or analysis. Two dashboards, analyses, or templates can have visuals with the same identifiers."
              }
            ]
          },
          "Title": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualTitleLabelOptions"
              },
              {
                "description": "The title that is displayed on the visual."
              }
            ]
          },
          "Subtitle": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualSubtitleLabelOptions"
              },
              {
                "description": "The subtitle that is displayed on the visual."
              }
            ]
          },
          "ChartConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/ScatterPlotConfiguration"
              },
              {
                "description": "The configuration settings of the visual."
              }
            ]
          },
          "Actions": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualCustomActionList"
              },
              {
                "description": "The list of custom actions that are configured for a visual."
              }
            ]
          },
          "ColumnHierarchies": {
            "allOf": [
              {
                "$ref": "#/$defs/ColumnHierarchyList"
              },
              {
                "description": "The column hierarchy that is used during drill-downs and drill-ups."
              }
            ]
          }
        },
        "description": "<p>A scatter plot.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/scatter-plot.html\">Using scatter plots</a> in the <i>Amazon QuickSight User Guide</i>.</p>"
      },
      "ScatterPlotConfiguration": {
        "type": "object",
        "properties": {
          "FieldWells": {
            "allOf": [
              {
                "$ref": "#/$defs/ScatterPlotFieldWells"
              },
              {
                "description": "The field wells of the visual."
              }
            ]
          },
          "XAxisLabelOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/ChartAxisLabelOptions"
              },
              {
                "description": "The label options (label text, label visibility, and sort icon visibility) of the scatter plot's x-axis."
              }
            ]
          },
          "XAxisDisplayOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/AxisDisplayOptions"
              },
              {
                "description": "The label display options (grid line, range, scale, and axis step) of the scatter plot's x-axis."
              }
            ]
          },
          "YAxisLabelOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/ChartAxisLabelOptions"
              },
              {
                "description": "The label options (label text, label visibility, and sort icon visibility) of the scatter plot's y-axis."
              }
            ]
          },
          "YAxisDisplayOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/AxisDisplayOptions"
              },
              {
                "description": "The label display options (grid line, range, scale, and axis step) of the scatter plot's y-axis."
              }
            ]
          },
          "Legend": {
            "allOf": [
              {
                "$ref": "#/$defs/LegendOptions"
              },
              {
                "description": "The legend display setup of the visual."
              }
            ]
          },
          "DataLabels": {
            "allOf": [
              {
                "$ref": "#/$defs/DataLabelOptions"
              },
              {
                "description": "The options that determine if visual data labels are displayed."
              }
            ]
          },
          "Tooltip": {
            "allOf": [
              {
                "$ref": "#/$defs/TooltipOptions"
              },
              {
                "description": "The legend display setup of the visual."
              }
            ]
          },
          "VisualPalette": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualPalette"
              },
              {
                "description": "The palette (chart color) display setup of the visual."
              }
            ]
          }
        },
        "description": "The configuration of a scatter plot."
      },
      "ScatterPlotFieldWells": {
        "type": "object",
        "properties": {
          "ScatterPlotCategoricallyAggregatedFieldWells": {
            "allOf": [
              {
                "$ref": "#/$defs/ScatterPlotCategoricallyAggregatedFieldWells"
              },
              {
                "description": "The aggregated field wells of a scatter plot. The x and y-axes of scatter plots with aggregated field wells are aggregated by category, label, or both."
              }
            ]
          },
          "ScatterPlotUnaggregatedFieldWells": {
            "allOf": [
              {
                "$ref": "#/$defs/ScatterPlotUnaggregatedFieldWells"
              },
              {
                "description": "The unaggregated field wells of a scatter plot. The x and y-axes of these scatter plots are unaggregated."
              }
            ]
          }
        },
        "description": "<p>The field well configuration of a scatter plot.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>"
      },
      "ScatterPlotCategoricallyAggregatedFieldWells": {
        "type": "object",
        "properties": {
          "XAxis": {
            "allOf": [
              {
                "$ref": "#/$defs/MeasureFieldList"
              },
              {
                "description": "<p>The x-axis field well of a scatter plot.</p> <p>The x-axis is aggregated by category.</p>"
              }
            ]
          },
          "YAxis": {
            "allOf": [
              {
                "$ref": "#/$defs/MeasureFieldList"
              },
              {
                "description": "<p>The y-axis field well of a scatter plot.</p> <p>The y-axis is aggregated by category.</p>"
              }
            ]
          },
          "Category": {
            "allOf": [
              {
                "$ref": "#/$defs/DimensionFieldList"
              },
              {
                "description": "The category field well of a scatter plot."
              }
            ]
          },
          "Size": {
            "allOf": [
              {
                "$ref": "#/$defs/MeasureFieldList"
              },
              {
                "description": "The size field well of a scatter plot."
              }
            ]
          },
          "Label": {
            "allOf": [
              {
                "$ref": "#/$defs/DimensionFieldList"
              },
              {
                "description": "The label field well of a scatter plot."
              }
            ]
          }
        },
        "description": "The aggregated field well of a scatter plot."
      },
      "ScatterPlotUnaggregatedFieldWells": {
        "type": "object",
        "properties": {
          "XAxis": {
            "allOf": [
              {
                "$ref": "#/$defs/DimensionFieldList"
              },
              {
                "description": "<p>The x-axis field well of a scatter plot.</p> <p>The x-axis is a dimension field and cannot be aggregated.</p>"
              }
            ]
          },
          "YAxis": {
            "allOf": [
              {
                "$ref": "#/$defs/DimensionFieldList"
              },
              {
                "description": "<p>The y-axis field well of a scatter plot.</p> <p>The y-axis is a dimension field and cannot be aggregated.</p>"
              }
            ]
          },
          "Size": {
            "allOf": [
              {
                "$ref": "#/$defs/MeasureFieldList"
              },
              {
                "description": "The size field well of a scatter plot."
              }
            ]
          },
          "Category": {
            "allOf": [
              {
                "$ref": "#/$defs/DimensionFieldList"
              },
              {
                "description": "The category field well of a scatter plot."
              }
            ]
          },
          "Label": {
            "allOf": [
              {
                "$ref": "#/$defs/DimensionFieldList"
              },
              {
                "description": "The label field well of a scatter plot."
              }
            ]
          }
        },
        "description": "The unaggregated field wells of a scatter plot."
      },
      "ComboChartVisual": {
        "type": "object",
        "required": [
          "VisualId"
        ],
        "properties": {
          "VisualId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "The unique identifier of a visual. This identifier must be unique within the context of a dashboard, template, or analysis. Two dashboards, analyses, or templates can have visuals with the same identifiers."
              }
            ]
          },
          "Title": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualTitleLabelOptions"
              },
              {
                "description": "The title that is displayed on the visual."
              }
            ]
          },
          "Subtitle": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualSubtitleLabelOptions"
              },
              {
                "description": "The subtitle that is displayed on the visual."
              }
            ]
          },
          "ChartConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/ComboChartConfiguration"
              },
              {
                "description": "The configuration settings of the visual."
              }
            ]
          },
          "Actions": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualCustomActionList"
              },
              {
                "description": "The list of custom actions that are configured for a visual."
              }
            ]
          },
          "ColumnHierarchies": {
            "allOf": [
              {
                "$ref": "#/$defs/ColumnHierarchyList"
              },
              {
                "description": "The column hierarchy that is used during drill-downs and drill-ups."
              }
            ]
          }
        },
        "description": "<p>A combo chart.</p> <p>The <code>ComboChartVisual</code> includes stacked bar combo charts and clustered bar combo charts</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/combo-charts.html\">Using combo charts</a> in the <i>Amazon QuickSight User Guide</i>.</p>"
      },
      "ComboChartConfiguration": {
        "type": "object",
        "properties": {
          "FieldWells": {
            "allOf": [
              {
                "$ref": "#/$defs/ComboChartFieldWells"
              },
              {
                "description": "The field wells of the visual."
              }
            ]
          },
          "SortConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/ComboChartSortConfiguration"
              },
              {
                "description": "The sort configuration of a <code>ComboChartVisual</code>."
              }
            ]
          },
          "BarsArrangement": {
            "allOf": [
              {
                "$ref": "#/$defs/BarsArrangement"
              },
              {
                "description": "<p>Determines the bar arrangement in a combo chart. The following are valid values in this structure:</p> <ul> <li> <p> <code>CLUSTERED</code>: For clustered bar combo charts.</p> </li> <li> <p> <code>STACKED</code>: For stacked bar combo charts.</p> </li> <li> <p> <code>STACKED_PERCENT</code>: Do not use. If you use this value, the operation returns a validation error.</p> </li> </ul>"
              }
            ]
          },
          "CategoryAxis": {
            "allOf": [
              {
                "$ref": "#/$defs/AxisDisplayOptions"
              },
              {
                "description": "The category axis of a combo chart."
              }
            ]
          },
          "CategoryLabelOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/ChartAxisLabelOptions"
              },
              {
                "description": "The label options (label text, label visibility, and sort icon visibility) of a combo chart category (group/color) field well."
              }
            ]
          },
          "PrimaryYAxisDisplayOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/AxisDisplayOptions"
              },
              {
                "description": "The label display options (grid line, range, scale, and axis step) of a combo chart's primary y-axis (bar) field well."
              }
            ]
          },
          "PrimaryYAxisLabelOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/ChartAxisLabelOptions"
              },
              {
                "description": "The label options (label text, label visibility, and sort icon visibility) of a combo chart's primary y-axis (bar) field well."
              }
            ]
          },
          "SecondaryYAxisDisplayOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/AxisDisplayOptions"
              },
              {
                "description": "The label display options (grid line, range, scale, axis step) of a combo chart's secondary y-axis (line) field well."
              }
            ]
          },
          "SecondaryYAxisLabelOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/ChartAxisLabelOptions"
              },
              {
                "description": "The label options (label text, label visibility, and sort icon visibility) of a combo chart's secondary y-axis(line) field well."
              }
            ]
          },
          "ColorLabelOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/ChartAxisLabelOptions"
              },
              {
                "description": "The label options (label text, label visibility, and sort icon visibility) of a combo chart's color field well."
              }
            ]
          },
          "Legend": {
            "allOf": [
              {
                "$ref": "#/$defs/LegendOptions"
              },
              {
                "description": "The legend display setup of the visual."
              }
            ]
          },
          "BarDataLabels": {
            "allOf": [
              {
                "$ref": "#/$defs/DataLabelOptions"
              },
              {
                "description": "<p>The options that determine if visual data labels are displayed.</p> <p>The data label options for a bar in a combo chart.</p>"
              }
            ]
          },
          "LineDataLabels": {
            "allOf": [
              {
                "$ref": "#/$defs/DataLabelOptions"
              },
              {
                "description": "<p>The options that determine if visual data labels are displayed.</p> <p>The data label options for a line in a combo chart.</p>"
              }
            ]
          },
          "Tooltip": {
            "allOf": [
              {
                "$ref": "#/$defs/TooltipOptions"
              },
              {
                "description": "The legend display setup of the visual."
              }
            ]
          },
          "ReferenceLines": {
            "allOf": [
              {
                "$ref": "#/$defs/ReferenceLineList"
              },
              {
                "description": "The reference line setup of the visual."
              }
            ]
          },
          "VisualPalette": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualPalette"
              },
              {
                "description": "The palette (chart color) display setup of the visual."
              }
            ]
          }
        },
        "description": "The configuration of a <code>ComboChartVisual</code>."
      },
      "ComboChartFieldWells": {
        "type": "object",
        "properties": {
          "ComboChartAggregatedFieldWells": {
            "allOf": [
              {
                "$ref": "#/$defs/ComboChartAggregatedFieldWells"
              },
              {
                "description": "The aggregated field wells of a combo chart. Combo charts only have aggregated field wells. Columns in a combo chart are aggregated by category."
              }
            ]
          }
        },
        "description": "<p>The field wells of the visual.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>"
      },
      "ComboChartAggregatedFieldWells": {
        "type": "object",
        "properties": {
          "Category": {
            "allOf": [
              {
                "$ref": "#/$defs/DimensionFieldList"
              },
              {
                "description": "The aggregated category field wells of a combo chart."
              }
            ]
          },
          "BarValues": {
            "allOf": [
              {
                "$ref": "#/$defs/MeasureFieldList"
              },
              {
                "description": "The aggregated <code>BarValues</code> field well of a combo chart."
              }
            ]
          },
          "Colors": {
            "allOf": [
              {
                "$ref": "#/$defs/DimensionFieldList"
              },
              {
                "description": "The aggregated colors field well of a combo chart."
              }
            ]
          },
          "LineValues": {
            "allOf": [
              {
                "$ref": "#/$defs/MeasureFieldList"
              },
              {
                "description": "The aggregated <code>LineValues</code> field well of a combo chart."
              }
            ]
          }
        },
        "description": "The aggregated field wells of a combo chart."
      },
      "ComboChartSortConfiguration": {
        "type": "object",
        "properties": {
          "CategorySort": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldSortOptionsList"
              },
              {
                "description": "The sort configuration of the category field well in a combo chart."
              }
            ]
          },
          "CategoryItemsLimit": {
            "allOf": [
              {
                "$ref": "#/$defs/ItemsLimitConfiguration"
              },
              {
                "description": "The item limit configuration for the category field well of a combo chart."
              }
            ]
          },
          "ColorSort": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldSortOptionsList"
              },
              {
                "description": "The sort configuration of the color field well in a combo chart."
              }
            ]
          },
          "ColorItemsLimit": {
            "allOf": [
              {
                "$ref": "#/$defs/ItemsLimitConfiguration"
              },
              {
                "description": "The item limit configuration of the color field well in a combo chart."
              }
            ]
          }
        },
        "description": "The sort configuration of a <code>ComboChartVisual</code>."
      },
      "BoxPlotVisual": {
        "type": "object",
        "required": [
          "VisualId"
        ],
        "properties": {
          "VisualId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "The unique identifier of a visual. This identifier must be unique within the context of a dashboard, template, or analysis. Two dashboards, analyses, or templates can have visuals with the same identifiers.."
              }
            ]
          },
          "Title": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualTitleLabelOptions"
              },
              {
                "description": "The title that is displayed on the visual."
              }
            ]
          },
          "Subtitle": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualSubtitleLabelOptions"
              },
              {
                "description": "The subtitle that is displayed on the visual."
              }
            ]
          },
          "ChartConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/BoxPlotChartConfiguration"
              },
              {
                "description": "The configuration settings of the visual."
              }
            ]
          },
          "Actions": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualCustomActionList"
              },
              {
                "description": "The list of custom actions that are configured for a visual."
              }
            ]
          },
          "ColumnHierarchies": {
            "allOf": [
              {
                "$ref": "#/$defs/ColumnHierarchyList"
              },
              {
                "description": "The column hierarchy that is used during drill-downs and drill-ups."
              }
            ]
          }
        },
        "description": "<p>A box plot.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/box-plots.html\">Using box plots</a> in the <i>Amazon QuickSight User Guide</i>.</p>"
      },
      "BoxPlotChartConfiguration": {
        "type": "object",
        "properties": {
          "FieldWells": {
            "allOf": [
              {
                "$ref": "#/$defs/BoxPlotFieldWells"
              },
              {
                "description": "The field wells of the visual."
              }
            ]
          },
          "SortConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/BoxPlotSortConfiguration"
              },
              {
                "description": "The sort configuration of a <code>BoxPlotVisual</code>."
              }
            ]
          },
          "BoxPlotOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/BoxPlotOptions"
              },
              {
                "description": "The box plot chart options for a box plot visual"
              }
            ]
          },
          "CategoryAxis": {
            "allOf": [
              {
                "$ref": "#/$defs/AxisDisplayOptions"
              },
              {
                "description": "The label display options (grid line, range, scale, axis step) of a box plot category."
              }
            ]
          },
          "CategoryLabelOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/ChartAxisLabelOptions"
              },
              {
                "description": "The label options (label text, label visibility and sort Icon visibility) of a box plot category."
              }
            ]
          },
          "PrimaryYAxisDisplayOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/AxisDisplayOptions"
              },
              {
                "description": "The label display options (grid line, range, scale, axis step) of a box plot category."
              }
            ]
          },
          "PrimaryYAxisLabelOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/ChartAxisLabelOptions"
              },
              {
                "description": "The label options (label text, label visibility and sort icon visibility) of a box plot value."
              }
            ]
          },
          "Legend": {
            "$ref": "#/$defs/LegendOptions"
          },
          "Tooltip": {
            "allOf": [
              {
                "$ref": "#/$defs/TooltipOptions"
              },
              {
                "description": "The tooltip display setup of the visual."
              }
            ]
          },
          "ReferenceLines": {
            "allOf": [
              {
                "$ref": "#/$defs/ReferenceLineList"
              },
              {
                "description": "The reference line setup of the visual."
              }
            ]
          },
          "VisualPalette": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualPalette"
              },
              {
                "description": "The palette (chart color) display setup of the visual."
              }
            ]
          }
        },
        "description": "The configuration of a <code>BoxPlotVisual</code>."
      },
      "BoxPlotFieldWells": {
        "type": "object",
        "properties": {
          "BoxPlotAggregatedFieldWells": {
            "allOf": [
              {
                "$ref": "#/$defs/BoxPlotAggregatedFieldWells"
              },
              {
                "description": "The aggregated field wells of a box plot."
              }
            ]
          }
        },
        "description": "<p>The field wells of a <code>BoxPlotVisual</code>.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>"
      },
      "BoxPlotAggregatedFieldWells": {
        "type": "object",
        "properties": {
          "GroupBy": {
            "allOf": [
              {
                "$ref": "#/$defs/BoxPlotDimensionFieldList"
              },
              {
                "description": "The group by field well of a box plot chart. Values are grouped based on group by fields."
              }
            ]
          },
          "Values": {
            "allOf": [
              {
                "$ref": "#/$defs/BoxPlotMeasureFieldList"
              },
              {
                "description": "The value field well of a box plot chart. Values are aggregated based on group by fields."
              }
            ]
          }
        },
        "description": "The aggregated field well for a box plot."
      },
      "BoxPlotDimensionFieldList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/DimensionField"
        },
        "maxItems": 1
      },
      "BoxPlotMeasureFieldList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/MeasureField"
        },
        "maxItems": 5
      },
      "BoxPlotSortConfiguration": {
        "type": "object",
        "properties": {
          "CategorySort": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldSortOptionsList"
              },
              {
                "description": "The sort configuration of a group by fields."
              }
            ]
          },
          "PaginationConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/PaginationConfiguration"
              },
              {
                "description": "The pagination configuration of a table visual or box plot."
              }
            ]
          }
        },
        "description": "The sort configuration of a <code>BoxPlotVisual</code>."
      },
      "BoxPlotOptions": {
        "type": "object",
        "properties": {
          "StyleOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/BoxPlotStyleOptions"
              },
              {
                "description": "The style options of the box plot."
              }
            ]
          },
          "OutlierVisibility": {
            "allOf": [
              {
                "$ref": "#/$defs/Visibility"
              },
              {
                "description": "Determines the visibility of the outlier in a box plot."
              }
            ]
          },
          "AllDataPointsVisibility": {
            "allOf": [
              {
                "$ref": "#/$defs/Visibility"
              },
              {
                "description": "Determines the visibility of all data points of the box plot."
              }
            ]
          }
        },
        "description": "The options of a box plot visual."
      },
      "BoxPlotStyleOptions": {
        "type": "object",
        "properties": {
          "FillStyle": {
            "allOf": [
              {
                "$ref": "#/$defs/BoxPlotFillStyle"
              },
              {
                "description": "The fill styles (solid, transparent) of the box plot."
              }
            ]
          }
        },
        "description": "The style options of the box plot."
      },
      "BoxPlotFillStyle": {
        "type": "string",
        "enum": [
          "SOLID",
          "TRANSPARENT"
        ]
      },
      "WaterfallVisual": {
        "type": "object",
        "required": [
          "VisualId"
        ],
        "properties": {
          "VisualId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "The unique identifier of a visual. This identifier must be unique within the context of a dashboard, template, or analysis. Two dashboards, analyses, or templates can have visuals with the same identifiers."
              }
            ]
          },
          "Title": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualTitleLabelOptions"
              },
              {
                "description": "The title that is displayed on the visual."
              }
            ]
          },
          "Subtitle": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualSubtitleLabelOptions"
              },
              {
                "description": "The subtitle that is displayed on the visual."
              }
            ]
          },
          "ChartConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/WaterfallChartConfiguration"
              },
              {
                "description": "The configuration for a waterfall visual."
              }
            ]
          },
          "Actions": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualCustomActionList"
              },
              {
                "description": "The list of custom actions that are configured for a visual."
              }
            ]
          },
          "ColumnHierarchies": {
            "allOf": [
              {
                "$ref": "#/$defs/ColumnHierarchyList"
              },
              {
                "description": "The column hierarchy that is used during drill-downs and drill-ups."
              }
            ]
          }
        },
        "description": "<p>A waterfall chart.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/waterfall-chart.html\">Using waterfall charts</a> in the <i>Amazon QuickSight User Guide</i>.</p>"
      },
      "WaterfallChartConfiguration": {
        "type": "object",
        "properties": {
          "FieldWells": {
            "allOf": [
              {
                "$ref": "#/$defs/WaterfallChartFieldWells"
              },
              {
                "description": "The field well configuration of a waterfall visual."
              }
            ]
          },
          "SortConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/WaterfallChartSortConfiguration"
              },
              {
                "description": "The sort configuration of a waterfall visual."
              }
            ]
          },
          "WaterfallChartOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/WaterfallChartOptions"
              },
              {
                "description": "The options that determine the presentation of a waterfall visual."
              }
            ]
          },
          "CategoryAxisLabelOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/ChartAxisLabelOptions"
              },
              {
                "description": "The options that determine the presentation of the category axis label."
              }
            ]
          },
          "CategoryAxisDisplayOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/AxisDisplayOptions"
              },
              {
                "description": "The options that determine the presentation of the category axis."
              }
            ]
          },
          "PrimaryYAxisLabelOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/ChartAxisLabelOptions"
              },
              {
                "description": "The options that determine the presentation of the y-axis label."
              }
            ]
          },
          "PrimaryYAxisDisplayOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/AxisDisplayOptions"
              },
              {
                "description": "The options that determine the presentation of the y-axis."
              }
            ]
          },
          "Legend": {
            "allOf": [
              {
                "$ref": "#/$defs/LegendOptions"
              },
              {
                "description": "The legend configuration of a waterfall visual."
              }
            ]
          },
          "DataLabels": {
            "allOf": [
              {
                "$ref": "#/$defs/DataLabelOptions"
              },
              {
                "description": "The data label configuration of a waterfall visual."
              }
            ]
          },
          "VisualPalette": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualPalette"
              },
              {
                "description": "The visual palette configuration of a waterfall visual."
              }
            ]
          }
        },
        "description": "The configuration for a waterfall visual."
      },
      "WaterfallChartFieldWells": {
        "type": "object",
        "properties": {
          "WaterfallChartAggregatedFieldWells": {
            "allOf": [
              {
                "$ref": "#/$defs/WaterfallChartAggregatedFieldWells"
              },
              {
                "description": "The field well configuration of a waterfall visual."
              }
            ]
          }
        },
        "description": "The field well configuration of a waterfall visual."
      },
      "WaterfallChartAggregatedFieldWells": {
        "type": "object",
        "properties": {
          "Categories": {
            "allOf": [
              {
                "$ref": "#/$defs/DimensionFieldList"
              },
              {
                "description": "The category field wells of a waterfall visual."
              }
            ]
          },
          "Values": {
            "allOf": [
              {
                "$ref": "#/$defs/MeasureFieldList"
              },
              {
                "description": "The value field wells of a waterfall visual."
              }
            ]
          },
          "Breakdowns": {
            "allOf": [
              {
                "$ref": "#/$defs/DimensionFieldList"
              },
              {
                "description": "The breakdown field wells of a waterfall visual."
              }
            ]
          }
        },
        "description": "The field well configuration of a waterfall visual."
      },
      "WaterfallChartSortConfiguration": {
        "type": "object",
        "properties": {
          "CategorySort": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldSortOptionsList"
              },
              {
                "description": "The sort configuration of the category fields."
              }
            ]
          },
          "BreakdownItemsLimit": {
            "allOf": [
              {
                "$ref": "#/$defs/ItemsLimitConfiguration"
              },
              {
                "description": "The limit on the number of bar groups that are displayed."
              }
            ]
          }
        },
        "description": "The sort configuration of a waterfall visual."
      },
      "WaterfallChartOptions": {
        "type": "object",
        "properties": {
          "TotalBarLabel": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "This option determines the total bar label of a waterfall visual."
              }
            ]
          }
        },
        "description": "The options that determine the presentation of a waterfall visual."
      },
      "HistogramVisual": {
        "type": "object",
        "required": [
          "VisualId"
        ],
        "properties": {
          "VisualId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "The unique identifier of a visual. This identifier must be unique within the context of a dashboard, template, or analysis. Two dashboards, analyses, or templates can have visuals with the same identifiers."
              }
            ]
          },
          "Title": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualTitleLabelOptions"
              },
              {
                "description": "The title that is displayed on the visual."
              }
            ]
          },
          "Subtitle": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualSubtitleLabelOptions"
              },
              {
                "description": "The subtitle that is displayed on the visual."
              }
            ]
          },
          "ChartConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/HistogramConfiguration"
              },
              {
                "description": "The configuration for a <code>HistogramVisual</code>."
              }
            ]
          },
          "Actions": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualCustomActionList"
              },
              {
                "description": "The list of custom actions that are configured for a visual."
              }
            ]
          }
        },
        "description": "<p>A histogram.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/histogram-charts.html\">Using histograms</a> in the <i>Amazon QuickSight User Guide</i>.</p>"
      },
      "HistogramConfiguration": {
        "type": "object",
        "properties": {
          "FieldWells": {
            "allOf": [
              {
                "$ref": "#/$defs/HistogramFieldWells"
              },
              {
                "description": "The field well configuration of a histogram."
              }
            ]
          },
          "XAxisDisplayOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/AxisDisplayOptions"
              },
              {
                "description": "The options that determine the presentation of the x-axis."
              }
            ]
          },
          "XAxisLabelOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/ChartAxisLabelOptions"
              },
              {
                "description": "The options that determine the presentation of the x-axis label."
              }
            ]
          },
          "YAxisDisplayOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/AxisDisplayOptions"
              },
              {
                "description": "The options that determine the presentation of the y-axis."
              }
            ]
          },
          "BinOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/HistogramBinOptions"
              },
              {
                "description": "The options that determine the presentation of histogram bins."
              }
            ]
          },
          "DataLabels": {
            "allOf": [
              {
                "$ref": "#/$defs/DataLabelOptions"
              },
              {
                "description": "The data label configuration of a histogram."
              }
            ]
          },
          "Tooltip": {
            "allOf": [
              {
                "$ref": "#/$defs/TooltipOptions"
              },
              {
                "description": "The tooltip configuration of a histogram."
              }
            ]
          },
          "VisualPalette": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualPalette"
              },
              {
                "description": "The visual palette configuration of a histogram."
              }
            ]
          }
        },
        "description": "The configuration for a <code>HistogramVisual</code>."
      },
      "HistogramFieldWells": {
        "type": "object",
        "properties": {
          "HistogramAggregatedFieldWells": {
            "allOf": [
              {
                "$ref": "#/$defs/HistogramAggregatedFieldWells"
              },
              {
                "description": "The field well configuration of a histogram."
              }
            ]
          }
        },
        "description": "The field well configuration of a histogram."
      },
      "HistogramAggregatedFieldWells": {
        "type": "object",
        "properties": {
          "Values": {
            "allOf": [
              {
                "$ref": "#/$defs/HistogramMeasureFieldList"
              },
              {
                "description": "The value field wells of a histogram. Values are aggregated by <code>COUNT</code> or <code>DISTINCT_COUNT</code>."
              }
            ]
          }
        },
        "description": "The field well configuration of a histogram."
      },
      "HistogramMeasureFieldList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/MeasureField"
        },
        "maxItems": 1
      },
      "HistogramBinOptions": {
        "type": "object",
        "properties": {
          "SelectedBinType": {
            "allOf": [
              {
                "$ref": "#/$defs/HistogramBinType"
              },
              {
                "description": "The options that determine the selected bin type."
              }
            ]
          },
          "BinCount": {
            "allOf": [
              {
                "$ref": "#/$defs/BinCountOptions"
              },
              {
                "description": "The options that determine the bin count of a histogram."
              }
            ]
          },
          "BinWidth": {
            "allOf": [
              {
                "$ref": "#/$defs/BinWidthOptions"
              },
              {
                "description": "The options that determine the bin width of a histogram."
              }
            ]
          },
          "StartValue": {
            "allOf": [
              {
                "$ref": "#/$defs/Double"
              },
              {
                "description": "The options that determine the bin start value."
              }
            ]
          }
        },
        "description": "The options that determine the presentation of histogram bins."
      },
      "HistogramBinType": {
        "type": "string",
        "enum": [
          "BIN_COUNT",
          "BIN_WIDTH"
        ]
      },
      "BinCountOptions": {
        "type": "object",
        "properties": {
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/BinCountValue"
              },
              {
                "description": "The options that determine the bin count value."
              }
            ]
          }
        },
        "description": "The options that determine the bin count of a histogram."
      },
      "BinCountValue": {
        "type": "integer",
        "minimum": 0
      },
      "BinWidthOptions": {
        "type": "object",
        "properties": {
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/BinWidthValue"
              },
              {
                "description": "The options that determine the bin width value."
              }
            ]
          },
          "BinCountLimit": {
            "allOf": [
              {
                "$ref": "#/$defs/BinCountLimit"
              },
              {
                "description": "The options that determine the bin count limit."
              }
            ]
          }
        },
        "description": "The options that determine the bin width of a histogram."
      },
      "BinWidthValue": {
        "type": "number",
        "format": "double",
        "minimum": 0
      },
      "BinCountLimit": {
        "type": "integer",
        "minimum": 0,
        "maximum": 1000
      },
      "WordCloudVisual": {
        "type": "object",
        "required": [
          "VisualId"
        ],
        "properties": {
          "VisualId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "The unique identifier of a visual. This identifier must be unique within the context of a dashboard, template, or analysis. Two dashboards, analyses, or templates can have visuals with the same identifiers.."
              }
            ]
          },
          "Title": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualTitleLabelOptions"
              },
              {
                "description": "The title that is displayed on the visual."
              }
            ]
          },
          "Subtitle": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualSubtitleLabelOptions"
              },
              {
                "description": "The subtitle that is displayed on the visual."
              }
            ]
          },
          "ChartConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/WordCloudChartConfiguration"
              },
              {
                "description": "The configuration settings of the visual."
              }
            ]
          },
          "Actions": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualCustomActionList"
              },
              {
                "description": "The list of custom actions that are configured for a visual."
              }
            ]
          },
          "ColumnHierarchies": {
            "allOf": [
              {
                "$ref": "#/$defs/ColumnHierarchyList"
              },
              {
                "description": "The column hierarchy that is used during drill-downs and drill-ups."
              }
            ]
          }
        },
        "description": "<p>A word cloud.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/word-cloud.html\">Using word clouds</a> in the <i>Amazon QuickSight User Guide</i>.</p>"
      },
      "WordCloudChartConfiguration": {
        "type": "object",
        "properties": {
          "FieldWells": {
            "allOf": [
              {
                "$ref": "#/$defs/WordCloudFieldWells"
              },
              {
                "description": "The field wells of the visual."
              }
            ]
          },
          "SortConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/WordCloudSortConfiguration"
              },
              {
                "description": "The sort configuration of a word cloud visual."
              }
            ]
          },
          "CategoryLabelOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/ChartAxisLabelOptions"
              },
              {
                "description": "The label options (label text, label visibility, and sort icon visibility) for the word cloud category."
              }
            ]
          },
          "WordCloudOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/WordCloudOptions"
              },
              {
                "description": "The options for a word cloud visual."
              }
            ]
          }
        },
        "description": "The configuration of a word cloud visual."
      },
      "WordCloudFieldWells": {
        "type": "object",
        "properties": {
          "WordCloudAggregatedFieldWells": {
            "allOf": [
              {
                "$ref": "#/$defs/WordCloudAggregatedFieldWells"
              },
              {
                "description": "The aggregated field wells of a word cloud."
              }
            ]
          }
        },
        "description": "<p>The field wells of a word cloud visual.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>"
      },
      "WordCloudAggregatedFieldWells": {
        "type": "object",
        "properties": {
          "GroupBy": {
            "allOf": [
              {
                "$ref": "#/$defs/WordCloudDimensionFieldList"
              },
              {
                "description": "The group by field well of a word cloud. Values are grouped by group by fields."
              }
            ]
          },
          "Size": {
            "allOf": [
              {
                "$ref": "#/$defs/WordCloudMeasureFieldList"
              },
              {
                "description": "The size field well of a word cloud. Values are aggregated based on group by fields."
              }
            ]
          }
        },
        "description": "The aggregated field wells of a word cloud."
      },
      "WordCloudDimensionFieldList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/DimensionField"
        },
        "maxItems": 10
      },
      "WordCloudMeasureFieldList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/MeasureField"
        },
        "maxItems": 1
      },
      "WordCloudSortConfiguration": {
        "type": "object",
        "properties": {
          "CategoryItemsLimit": {
            "allOf": [
              {
                "$ref": "#/$defs/ItemsLimitConfiguration"
              },
              {
                "description": "The limit on the number of groups that are displayed in a word cloud."
              }
            ]
          },
          "CategorySort": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldSortOptionsList"
              },
              {
                "description": "The sort configuration of group by fields."
              }
            ]
          }
        },
        "description": "The sort configuration of a word cloud visual."
      },
      "WordCloudOptions": {
        "type": "object",
        "properties": {
          "WordOrientation": {
            "allOf": [
              {
                "$ref": "#/$defs/WordCloudWordOrientation"
              },
              {
                "description": "The word orientation options (horizontal, horizontal_and_vertical) for the words in a word cloud."
              }
            ]
          },
          "WordScaling": {
            "allOf": [
              {
                "$ref": "#/$defs/WordCloudWordScaling"
              },
              {
                "description": "The word scaling options (emphasize, normal) for the words in a word cloud."
              }
            ]
          },
          "CloudLayout": {
            "allOf": [
              {
                "$ref": "#/$defs/WordCloudCloudLayout"
              },
              {
                "description": "The cloud layout options (fluid, normal) of a word cloud."
              }
            ]
          },
          "WordCasing": {
            "allOf": [
              {
                "$ref": "#/$defs/WordCloudWordCasing"
              },
              {
                "description": "The word casing options (lower_case, existing_case) for the words in a word cloud."
              }
            ]
          },
          "WordPadding": {
            "allOf": [
              {
                "$ref": "#/$defs/WordCloudWordPadding"
              },
              {
                "description": "The word padding options (none, small, medium, large) for the words in a word cloud."
              }
            ]
          },
          "MaximumStringLength": {
            "allOf": [
              {
                "$ref": "#/$defs/WordCloudMaximumStringLength"
              },
              {
                "description": "The length limit of each word from 1-100."
              }
            ]
          }
        },
        "description": "The word cloud options for a word cloud visual."
      },
      "WordCloudWordOrientation": {
        "type": "string",
        "enum": [
          "HORIZONTAL",
          "HORIZONTAL_AND_VERTICAL"
        ]
      },
      "WordCloudWordScaling": {
        "type": "string",
        "enum": [
          "EMPHASIZE",
          "NORMAL"
        ]
      },
      "WordCloudCloudLayout": {
        "type": "string",
        "enum": [
          "FLUID",
          "NORMAL"
        ]
      },
      "WordCloudWordCasing": {
        "type": "string",
        "enum": [
          "LOWER_CASE",
          "EXISTING_CASE"
        ]
      },
      "WordCloudWordPadding": {
        "type": "string",
        "enum": [
          "NONE",
          "SMALL",
          "MEDIUM",
          "LARGE"
        ]
      },
      "WordCloudMaximumStringLength": {
        "type": "integer",
        "minimum": 1,
        "maximum": 100
      },
      "InsightVisual": {
        "type": "object",
        "required": [
          "VisualId",
          "DataSetIdentifier"
        ],
        "properties": {
          "VisualId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "The unique identifier of a visual. This identifier must be unique within the context of a dashboard, template, or analysis. Two dashboards, analyses, or templates can have visuals with the same identifiers."
              }
            ]
          },
          "Title": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualTitleLabelOptions"
              },
              {
                "description": "The title that is displayed on the visual."
              }
            ]
          },
          "Subtitle": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualSubtitleLabelOptions"
              },
              {
                "description": "The subtitle that is displayed on the visual."
              }
            ]
          },
          "InsightConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/InsightConfiguration"
              },
              {
                "description": "The configuration of an insight visual."
              }
            ]
          },
          "Actions": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualCustomActionList"
              },
              {
                "description": "The list of custom actions that are configured for a visual."
              }
            ]
          },
          "DataSetIdentifier": {
            "allOf": [
              {
                "$ref": "#/$defs/DataSetIdentifier"
              },
              {
                "description": "The dataset that is used in the insight visual."
              }
            ]
          }
        },
        "description": "<p>An insight visual.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/computational-insights.html\">Working with insights</a> in the <i>Amazon QuickSight User Guide</i>.</p>"
      },
      "InsightConfiguration": {
        "type": "object",
        "properties": {
          "Computations": {
            "allOf": [
              {
                "$ref": "#/$defs/ComputationList"
              },
              {
                "description": "The computations configurations of the insight visual"
              }
            ]
          },
          "CustomNarrative": {
            "allOf": [
              {
                "$ref": "#/$defs/CustomNarrativeOptions"
              },
              {
                "description": "The custom narrative of the insight visual."
              }
            ]
          }
        },
        "description": "The configuration of an insight visual."
      },
      "ComputationList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Computation"
        },
        "maxItems": 100
      },
      "Computation": {
        "type": "object",
        "properties": {
          "TopBottomRanked": {
            "allOf": [
              {
                "$ref": "#/$defs/TopBottomRankedComputation"
              },
              {
                "description": "The top ranked and bottom ranked computation configuration."
              }
            ]
          },
          "TopBottomMovers": {
            "allOf": [
              {
                "$ref": "#/$defs/TopBottomMoversComputation"
              },
              {
                "description": "The top movers and bottom movers computation configuration."
              }
            ]
          },
          "TotalAggregation": {
            "allOf": [
              {
                "$ref": "#/$defs/TotalAggregationComputation"
              },
              {
                "description": "The total aggregation computation configuration."
              }
            ]
          },
          "MaximumMinimum": {
            "allOf": [
              {
                "$ref": "#/$defs/MaximumMinimumComputation"
              },
              {
                "description": "The maximum and minimum computation configuration."
              }
            ]
          },
          "MetricComparison": {
            "allOf": [
              {
                "$ref": "#/$defs/MetricComparisonComputation"
              },
              {
                "description": "The metric comparison computation configuration."
              }
            ]
          },
          "PeriodOverPeriod": {
            "allOf": [
              {
                "$ref": "#/$defs/PeriodOverPeriodComputation"
              },
              {
                "description": "The period over period computation configuration."
              }
            ]
          },
          "PeriodToDate": {
            "allOf": [
              {
                "$ref": "#/$defs/PeriodToDateComputation"
              },
              {
                "description": "The period to <code>DataSetIdentifier</code> computation configuration."
              }
            ]
          },
          "GrowthRate": {
            "allOf": [
              {
                "$ref": "#/$defs/GrowthRateComputation"
              },
              {
                "description": "The growth rate computation configuration."
              }
            ]
          },
          "UniqueValues": {
            "allOf": [
              {
                "$ref": "#/$defs/UniqueValuesComputation"
              },
              {
                "description": "The unique values computation configuration."
              }
            ]
          },
          "Forecast": {
            "allOf": [
              {
                "$ref": "#/$defs/ForecastComputation"
              },
              {
                "description": "The forecast computation configuration."
              }
            ]
          }
        },
        "description": "<p>The computation union that is used in an insight visual.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>"
      },
      "TopBottomRankedComputation": {
        "type": "object",
        "required": [
          "ComputationId",
          "Category",
          "Type"
        ],
        "properties": {
          "ComputationId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "The ID for a computation."
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The name of a computation."
              }
            ]
          },
          "Category": {
            "allOf": [
              {
                "$ref": "#/$defs/DimensionField"
              },
              {
                "description": "The category field that is used in a computation."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/MeasureField"
              },
              {
                "description": "The value field that is used in a computation."
              }
            ]
          },
          "ResultSize": {
            "allOf": [
              {
                "$ref": "#/$defs/TopBottomRankedComputationResultSize"
              },
              {
                "description": "The result size of a top and bottom ranked computation."
              }
            ]
          },
          "Type": {
            "allOf": [
              {
                "$ref": "#/$defs/TopBottomComputationType"
              },
              {
                "description": "<p>The computation type. Choose one of the following options:</p> <ul> <li> <p>TOP: A top ranked computation.</p> </li> <li> <p>BOTTOM: A bottom ranked computation.</p> </li> </ul>"
              }
            ]
          }
        },
        "description": "The top ranked and bottom ranked computation configuration."
      },
      "TopBottomRankedComputationResultSize": {
        "type": "integer",
        "minimum": 1,
        "maximum": 20
      },
      "TopBottomComputationType": {
        "type": "string",
        "enum": [
          "TOP",
          "BOTTOM"
        ]
      },
      "TopBottomMoversComputation": {
        "type": "object",
        "required": [
          "ComputationId",
          "Time",
          "Category",
          "Type"
        ],
        "properties": {
          "ComputationId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "The ID for a computation."
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The name of a computation."
              }
            ]
          },
          "Time": {
            "allOf": [
              {
                "$ref": "#/$defs/DimensionField"
              },
              {
                "description": "The time field that is used in a computation."
              }
            ]
          },
          "Category": {
            "allOf": [
              {
                "$ref": "#/$defs/DimensionField"
              },
              {
                "description": "The category field that is used in a computation."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/MeasureField"
              },
              {
                "description": "The value field that is used in a computation."
              }
            ]
          },
          "MoverSize": {
            "allOf": [
              {
                "$ref": "#/$defs/TopBottomMoversComputationMoverSize"
              },
              {
                "description": "The mover size setup of the top and bottom movers computation."
              }
            ]
          },
          "SortOrder": {
            "allOf": [
              {
                "$ref": "#/$defs/TopBottomSortOrder"
              },
              {
                "description": "The sort order setup of the top and bottom movers computation."
              }
            ]
          },
          "Type": {
            "allOf": [
              {
                "$ref": "#/$defs/TopBottomComputationType"
              },
              {
                "description": "<p>The computation type. Choose from the following options:</p> <ul> <li> <p>TOP: Top movers computation.</p> </li> <li> <p>BOTTOM: Bottom movers computation.</p> </li> </ul>"
              }
            ]
          }
        },
        "description": "The top movers and bottom movers computation setup."
      },
      "TopBottomMoversComputationMoverSize": {
        "type": "integer",
        "minimum": 1,
        "maximum": 20
      },
      "TopBottomSortOrder": {
        "type": "string",
        "enum": [
          "PERCENT_DIFFERENCE",
          "ABSOLUTE_DIFFERENCE"
        ]
      },
      "TotalAggregationComputation": {
        "type": "object",
        "required": [
          "ComputationId",
          "Value"
        ],
        "properties": {
          "ComputationId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "The ID for a computation."
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The name of a computation."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/MeasureField"
              },
              {
                "description": "The value field that is used in a computation."
              }
            ]
          }
        },
        "description": "The total aggregation computation configuration."
      },
      "MaximumMinimumComputation": {
        "type": "object",
        "required": [
          "ComputationId",
          "Time",
          "Type"
        ],
        "properties": {
          "ComputationId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "The ID for a computation."
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The name of a computation."
              }
            ]
          },
          "Time": {
            "allOf": [
              {
                "$ref": "#/$defs/DimensionField"
              },
              {
                "description": "The time field that is used in a computation."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/MeasureField"
              },
              {
                "description": "The value field that is used in a computation."
              }
            ]
          },
          "Type": {
            "allOf": [
              {
                "$ref": "#/$defs/MaximumMinimumComputationType"
              },
              {
                "description": "<p>The type of computation. Choose one of the following options:</p> <ul> <li> <p>MAXIMUM: A maximum computation.</p> </li> <li> <p>MINIMUM: A minimum computation.</p> </li> </ul>"
              }
            ]
          }
        },
        "description": "The maximum and minimum computation configuration."
      },
      "MaximumMinimumComputationType": {
        "type": "string",
        "enum": [
          "MAXIMUM",
          "MINIMUM"
        ]
      },
      "MetricComparisonComputation": {
        "type": "object",
        "required": [
          "ComputationId",
          "Time",
          "FromValue",
          "TargetValue"
        ],
        "properties": {
          "ComputationId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "The ID for a computation."
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The name of a computation."
              }
            ]
          },
          "Time": {
            "allOf": [
              {
                "$ref": "#/$defs/DimensionField"
              },
              {
                "description": "The time field that is used in a computation."
              }
            ]
          },
          "FromValue": {
            "allOf": [
              {
                "$ref": "#/$defs/MeasureField"
              },
              {
                "description": "The field that is used in a metric comparison from value setup."
              }
            ]
          },
          "TargetValue": {
            "allOf": [
              {
                "$ref": "#/$defs/MeasureField"
              },
              {
                "description": "The field that is used in a metric comparison to value setup."
              }
            ]
          }
        },
        "description": "The metric comparison computation configuration."
      },
      "PeriodOverPeriodComputation": {
        "type": "object",
        "required": [
          "ComputationId",
          "Time"
        ],
        "properties": {
          "ComputationId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "The ID for a computation."
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The name of a computation."
              }
            ]
          },
          "Time": {
            "allOf": [
              {
                "$ref": "#/$defs/DimensionField"
              },
              {
                "description": "The time field that is used in a computation."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/MeasureField"
              },
              {
                "description": "The value field that is used in a computation."
              }
            ]
          }
        },
        "description": "The period over period computation configuration."
      },
      "PeriodToDateComputation": {
        "type": "object",
        "required": [
          "ComputationId",
          "Time"
        ],
        "properties": {
          "ComputationId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "The ID for a computation."
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The name of a computation."
              }
            ]
          },
          "Time": {
            "allOf": [
              {
                "$ref": "#/$defs/DimensionField"
              },
              {
                "description": "The time field that is used in a computation."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/MeasureField"
              },
              {
                "description": "The value field that is used in a computation."
              }
            ]
          },
          "PeriodTimeGranularity": {
            "allOf": [
              {
                "$ref": "#/$defs/TimeGranularity"
              },
              {
                "description": "<p>The time granularity setup of period to date computation. Choose from the following options:</p> <ul> <li> <p>YEAR: Year to date.</p> </li> <li> <p>MONTH: Month to date.</p> </li> </ul>"
              }
            ]
          }
        },
        "description": "The period to date computation configuration."
      },
      "GrowthRateComputation": {
        "type": "object",
        "required": [
          "ComputationId",
          "Time"
        ],
        "properties": {
          "ComputationId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "The ID for a computation."
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The name of a computation."
              }
            ]
          },
          "Time": {
            "allOf": [
              {
                "$ref": "#/$defs/DimensionField"
              },
              {
                "description": "The time field that is used in a computation."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/MeasureField"
              },
              {
                "description": "The value field that is used in a computation."
              }
            ]
          },
          "PeriodSize": {
            "allOf": [
              {
                "$ref": "#/$defs/GrowthRatePeriodSize"
              },
              {
                "description": "The period size setup of a growth rate computation."
              }
            ]
          }
        },
        "description": "The growth rate computation configuration."
      },
      "GrowthRatePeriodSize": {
        "type": "integer",
        "minimum": 2,
        "maximum": 52
      },
      "UniqueValuesComputation": {
        "type": "object",
        "required": [
          "ComputationId",
          "Category"
        ],
        "properties": {
          "ComputationId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "The ID for a computation."
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The name of a computation."
              }
            ]
          },
          "Category": {
            "allOf": [
              {
                "$ref": "#/$defs/DimensionField"
              },
              {
                "description": "The category field that is used in a computation."
              }
            ]
          }
        },
        "description": "The unique values computation configuration."
      },
      "ForecastComputation": {
        "type": "object",
        "required": [
          "ComputationId",
          "Time"
        ],
        "properties": {
          "ComputationId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "The ID for a computation."
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The name of a computation."
              }
            ]
          },
          "Time": {
            "allOf": [
              {
                "$ref": "#/$defs/DimensionField"
              },
              {
                "description": "The time field that is used in a computation."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/MeasureField"
              },
              {
                "description": "The value field that is used in a computation."
              }
            ]
          },
          "PeriodsForward": {
            "allOf": [
              {
                "$ref": "#/$defs/PeriodsForward"
              },
              {
                "description": "The periods forward setup of a forecast computation."
              }
            ]
          },
          "PeriodsBackward": {
            "allOf": [
              {
                "$ref": "#/$defs/PeriodsBackward"
              },
              {
                "description": "The periods backward setup of a forecast computation."
              }
            ]
          },
          "UpperBoundary": {
            "allOf": [
              {
                "$ref": "#/$defs/Double"
              },
              {
                "description": "The upper boundary setup of a forecast computation."
              }
            ]
          },
          "LowerBoundary": {
            "allOf": [
              {
                "$ref": "#/$defs/Double"
              },
              {
                "description": "The lower boundary setup of a forecast computation."
              }
            ]
          },
          "PredictionInterval": {
            "allOf": [
              {
                "$ref": "#/$defs/PredictionInterval"
              },
              {
                "description": "The prediction interval setup of a forecast computation."
              }
            ]
          },
          "Seasonality": {
            "allOf": [
              {
                "$ref": "#/$defs/ForecastComputationSeasonality"
              },
              {
                "description": "<p>The seasonality setup of a forecast computation. Choose one of the following options:</p> <ul> <li> <p> <code>AUTOMATIC</code> </p> </li> <li> <p> <code>CUSTOM</code>: Checks the custom seasonality value.</p> </li> </ul>"
              }
            ]
          },
          "CustomSeasonalityValue": {
            "allOf": [
              {
                "$ref": "#/$defs/ForecastComputationCustomSeasonalityValue"
              },
              {
                "description": "The custom seasonality value setup of a forecast computation."
              }
            ]
          }
        },
        "description": "The forecast computation configuration."
      },
      "ForecastComputationSeasonality": {
        "type": "string",
        "enum": [
          "AUTOMATIC",
          "CUSTOM"
        ]
      },
      "ForecastComputationCustomSeasonalityValue": {
        "type": "integer",
        "minimum": 1,
        "maximum": 180
      },
      "CustomNarrativeOptions": {
        "type": "object",
        "required": [
          "Narrative"
        ],
        "properties": {
          "Narrative": {
            "allOf": [
              {
                "$ref": "#/$defs/NarrativeString"
              },
              {
                "description": "The string input of custom narrative."
              }
            ]
          }
        },
        "description": "The custom narrative options."
      },
      "NarrativeString": {
        "type": "string",
        "maxLength": 150000
      },
      "SankeyDiagramVisual": {
        "type": "object",
        "required": [
          "VisualId"
        ],
        "properties": {
          "VisualId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "The unique identifier of a visual. This identifier must be unique within the context of a dashboard, template, or analysis. Two dashboards, analyses, or templates can have visuals with the same identifiers."
              }
            ]
          },
          "Title": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualTitleLabelOptions"
              },
              {
                "description": "The title that is displayed on the visual."
              }
            ]
          },
          "Subtitle": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualSubtitleLabelOptions"
              },
              {
                "description": "The subtitle that is displayed on the visual."
              }
            ]
          },
          "ChartConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/SankeyDiagramChartConfiguration"
              },
              {
                "description": "The configuration of a sankey diagram."
              }
            ]
          },
          "Actions": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualCustomActionList"
              },
              {
                "description": "The list of custom actions that are configured for a visual."
              }
            ]
          }
        },
        "description": "<p>A sankey diagram.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/sankey-diagram.html\">Using Sankey diagrams</a> in the <i>Amazon QuickSight User Guide</i>.</p>"
      },
      "SankeyDiagramChartConfiguration": {
        "type": "object",
        "properties": {
          "FieldWells": {
            "allOf": [
              {
                "$ref": "#/$defs/SankeyDiagramFieldWells"
              },
              {
                "description": "The field well configuration of a sankey diagram."
              }
            ]
          },
          "SortConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/SankeyDiagramSortConfiguration"
              },
              {
                "description": "The sort configuration of a sankey diagram."
              }
            ]
          },
          "DataLabels": {
            "allOf": [
              {
                "$ref": "#/$defs/DataLabelOptions"
              },
              {
                "description": "The data label configuration of a sankey diagram."
              }
            ]
          }
        },
        "description": "The configuration of a sankey diagram."
      },
      "SankeyDiagramFieldWells": {
        "type": "object",
        "properties": {
          "SankeyDiagramAggregatedFieldWells": {
            "allOf": [
              {
                "$ref": "#/$defs/SankeyDiagramAggregatedFieldWells"
              },
              {
                "description": "The field well configuration of a sankey diagram."
              }
            ]
          }
        },
        "description": "The field well configuration of a sankey diagram."
      },
      "SankeyDiagramAggregatedFieldWells": {
        "type": "object",
        "properties": {
          "Source": {
            "allOf": [
              {
                "$ref": "#/$defs/DimensionFieldList"
              },
              {
                "description": "The source field wells of a sankey diagram."
              }
            ]
          },
          "Destination": {
            "allOf": [
              {
                "$ref": "#/$defs/DimensionFieldList"
              },
              {
                "description": "The destination field wells of a sankey diagram."
              }
            ]
          },
          "Weight": {
            "allOf": [
              {
                "$ref": "#/$defs/MeasureFieldList"
              },
              {
                "description": "The weight field wells of a sankey diagram."
              }
            ]
          }
        },
        "description": "The field well configuration of a sankey diagram."
      },
      "SankeyDiagramSortConfiguration": {
        "type": "object",
        "properties": {
          "WeightSort": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldSortOptionsList"
              },
              {
                "description": "The sort configuration of the weight fields."
              }
            ]
          },
          "SourceItemsLimit": {
            "allOf": [
              {
                "$ref": "#/$defs/ItemsLimitConfiguration"
              },
              {
                "description": "The limit on the number of source nodes that are displayed in a sankey diagram."
              }
            ]
          },
          "DestinationItemsLimit": {
            "allOf": [
              {
                "$ref": "#/$defs/ItemsLimitConfiguration"
              },
              {
                "description": "The limit on the number of destination nodes that are displayed in a sankey diagram."
              }
            ]
          }
        },
        "description": "The sort configuration of a sankey diagram."
      },
      "CustomContentVisual": {
        "type": "object",
        "required": [
          "VisualId",
          "DataSetIdentifier"
        ],
        "properties": {
          "VisualId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "The unique identifier of a visual. This identifier must be unique within the context of a dashboard, template, or analysis. Two dashboards, analyses, or templates can have visuals with the same identifiers."
              }
            ]
          },
          "Title": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualTitleLabelOptions"
              },
              {
                "description": "The title that is displayed on the visual."
              }
            ]
          },
          "Subtitle": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualSubtitleLabelOptions"
              },
              {
                "description": "The subtitle that is displayed on the visual."
              }
            ]
          },
          "ChartConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/CustomContentConfiguration"
              },
              {
                "description": "The configuration of a <code>CustomContentVisual</code>."
              }
            ]
          },
          "Actions": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualCustomActionList"
              },
              {
                "description": "The list of custom actions that are configured for a visual."
              }
            ]
          },
          "DataSetIdentifier": {
            "allOf": [
              {
                "$ref": "#/$defs/DataSetIdentifier"
              },
              {
                "description": "The dataset that is used to create the custom content visual. You can't create a visual without a dataset."
              }
            ]
          }
        },
        "description": "<p>A visual that contains custom content.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/custom-visual-content.html\">Using custom visual content</a> in the <i>Amazon QuickSight User Guide</i>.</p>"
      },
      "CustomContentConfiguration": {
        "type": "object",
        "properties": {
          "ContentUrl": {
            "allOf": [
              {
                "$ref": "#/$defs/URLOperationTemplate"
              },
              {
                "description": "The input URL that links to the custom content that you want in the custom visual."
              }
            ]
          },
          "ContentType": {
            "allOf": [
              {
                "$ref": "#/$defs/CustomContentType"
              },
              {
                "description": "The content type of the custom content visual. You can use this to have the visual render as an image."
              }
            ]
          },
          "ImageScaling": {
            "allOf": [
              {
                "$ref": "#/$defs/CustomContentImageScalingConfiguration"
              },
              {
                "description": "The sizing options for the size of the custom content visual. This structure is required when the <code>ContentType</code> of the visual is <code>'IMAGE'</code>."
              }
            ]
          }
        },
        "description": "The configuration of a <code>CustomContentVisual</code>."
      },
      "CustomContentType": {
        "type": "string",
        "enum": [
          "IMAGE",
          "OTHER_EMBEDDED_CONTENT"
        ]
      },
      "CustomContentImageScalingConfiguration": {
        "type": "string",
        "enum": [
          "FIT_TO_HEIGHT",
          "FIT_TO_WIDTH",
          "DO_NOT_SCALE",
          "SCALE_TO_VISUAL"
        ]
      },
      "EmptyVisual": {
        "type": "object",
        "required": [
          "VisualId",
          "DataSetIdentifier"
        ],
        "properties": {
          "VisualId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "The unique identifier of a visual. This identifier must be unique within the context of a dashboard, template, or analysis. Two dashboards, analyses, or templates can have visuals with the same identifiers."
              }
            ]
          },
          "DataSetIdentifier": {
            "allOf": [
              {
                "$ref": "#/$defs/DataSetIdentifier"
              },
              {
                "description": "The data set that is used in the empty visual. Every visual requires a dataset to render."
              }
            ]
          },
          "Actions": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualCustomActionList"
              },
              {
                "description": "The list of custom actions that are configured for a visual."
              }
            ]
          }
        },
        "description": "<p>An empty visual.</p> <p>Empty visuals are used in layouts but have not been configured to show any data. A new visual created in the Amazon QuickSight console is considered an <code>EmptyVisual</code> until a visual type is selected.</p>"
      },
      "RadarChartVisual": {
        "type": "object",
        "required": [
          "VisualId"
        ],
        "properties": {
          "VisualId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "The unique identifier of a visual. This identifier must be unique within the context of a dashboard, template, or analysis. Two dashboards, analyses, or templates can have visuals with the same identifiers."
              }
            ]
          },
          "Title": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualTitleLabelOptions"
              },
              {
                "description": "The title that is displayed on the visual."
              }
            ]
          },
          "Subtitle": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualSubtitleLabelOptions"
              },
              {
                "description": "The subtitle that is displayed on the visual."
              }
            ]
          },
          "ChartConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/RadarChartConfiguration"
              },
              {
                "description": "The configuration settings of the visual."
              }
            ]
          },
          "Actions": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualCustomActionList"
              },
              {
                "description": "The list of custom actions that are configured for a visual."
              }
            ]
          },
          "ColumnHierarchies": {
            "allOf": [
              {
                "$ref": "#/$defs/ColumnHierarchyList"
              },
              {
                "description": "The column hierarchy that is used during drill-downs and drill-ups."
              }
            ]
          }
        },
        "description": "A radar chart visual."
      },
      "RadarChartConfiguration": {
        "type": "object",
        "properties": {
          "FieldWells": {
            "allOf": [
              {
                "$ref": "#/$defs/RadarChartFieldWells"
              },
              {
                "description": "The field well configuration of a <code>RadarChartVisual</code>."
              }
            ]
          },
          "SortConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/RadarChartSortConfiguration"
              },
              {
                "description": "The sort configuration of a <code>RadarChartVisual</code>."
              }
            ]
          },
          "Shape": {
            "allOf": [
              {
                "$ref": "#/$defs/RadarChartShape"
              },
              {
                "description": "The shape of the radar chart."
              }
            ]
          },
          "BaseSeriesSettings": {
            "allOf": [
              {
                "$ref": "#/$defs/RadarChartSeriesSettings"
              },
              {
                "description": "The base sreies settings of a radar chart."
              }
            ]
          },
          "StartAngle": {
            "allOf": [
              {
                "$ref": "#/$defs/RadarChartStartAngle"
              },
              {
                "description": "The start angle of a radar chart's axis."
              }
            ]
          },
          "VisualPalette": {
            "allOf": [
              {
                "$ref": "#/$defs/VisualPalette"
              },
              {
                "description": "The palette (chart color) display setup of the visual."
              }
            ]
          },
          "AlternateBandColorsVisibility": {
            "allOf": [
              {
                "$ref": "#/$defs/Visibility"
              },
              {
                "description": "Determines the visibility of the colors of alternatign bands in a radar chart."
              }
            ]
          },
          "AlternateBandEvenColor": {
            "allOf": [
              {
                "$ref": "#/$defs/HexColor"
              },
              {
                "description": "The color of the even-numbered alternate bands of a radar chart."
              }
            ]
          },
          "AlternateBandOddColor": {
            "allOf": [
              {
                "$ref": "#/$defs/HexColor"
              },
              {
                "description": "The color of the odd-numbered alternate bands of a radar chart."
              }
            ]
          },
          "CategoryAxis": {
            "allOf": [
              {
                "$ref": "#/$defs/AxisDisplayOptions"
              },
              {
                "description": "The category axis of a radar chart."
              }
            ]
          },
          "CategoryLabelOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/ChartAxisLabelOptions"
              },
              {
                "description": "The category label options of a radar chart."
              }
            ]
          },
          "ColorAxis": {
            "allOf": [
              {
                "$ref": "#/$defs/AxisDisplayOptions"
              },
              {
                "description": "The color axis of a radar chart."
              }
            ]
          },
          "ColorLabelOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/ChartAxisLabelOptions"
              },
              {
                "description": "The color label options of a radar chart."
              }
            ]
          },
          "Legend": {
            "allOf": [
              {
                "$ref": "#/$defs/LegendOptions"
              },
              {
                "description": "The legend display setup of the visual."
              }
            ]
          },
          "AxesRangeScale": {
            "allOf": [
              {
                "$ref": "#/$defs/RadarChartAxesRangeScale"
              },
              {
                "description": "The axis behavior options of a radar chart."
              }
            ]
          }
        },
        "description": "The configuration of a <code>RadarChartVisual</code>."
      },
      "RadarChartFieldWells": {
        "type": "object",
        "properties": {
          "RadarChartAggregatedFieldWells": {
            "allOf": [
              {
                "$ref": "#/$defs/RadarChartAggregatedFieldWells"
              },
              {
                "description": "The aggregated field wells of a radar chart visual."
              }
            ]
          }
        },
        "description": "The field wells of a radar chart visual."
      },
      "RadarChartAggregatedFieldWells": {
        "type": "object",
        "properties": {
          "Category": {
            "allOf": [
              {
                "$ref": "#/$defs/RadarChartCategoryFieldList"
              },
              {
                "description": "The aggregated field well categories of a radar chart."
              }
            ]
          },
          "Color": {
            "allOf": [
              {
                "$ref": "#/$defs/RadarChartColorFieldList"
              },
              {
                "description": "The color that are assigned to the aggregated field wells of a radar chart."
              }
            ]
          },
          "Values": {
            "allOf": [
              {
                "$ref": "#/$defs/RadarChartValuesFieldList"
              },
              {
                "description": "The values that are assigned to the aggregated field wells of a radar chart."
              }
            ]
          }
        },
        "description": "The aggregated field well configuration of a <code>RadarChartVisual</code>."
      },
      "RadarChartCategoryFieldList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/DimensionField"
        },
        "maxItems": 1
      },
      "RadarChartColorFieldList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/DimensionField"
        },
        "maxItems": 1
      },
      "RadarChartValuesFieldList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/MeasureField"
        },
        "maxItems": 20
      },
      "RadarChartSortConfiguration": {
        "type": "object",
        "properties": {
          "CategorySort": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldSortOptionsList"
              },
              {
                "description": "The category sort options of a radar chart."
              }
            ]
          },
          "CategoryItemsLimit": {
            "allOf": [
              {
                "$ref": "#/$defs/ItemsLimitConfiguration"
              },
              {
                "description": "The category items limit for a radar chart."
              }
            ]
          },
          "ColorSort": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldSortOptionsList"
              },
              {
                "description": "The color sort configuration of a radar chart."
              }
            ]
          },
          "ColorItemsLimit": {
            "allOf": [
              {
                "$ref": "#/$defs/ItemsLimitConfiguration"
              },
              {
                "description": "The color items limit of a radar chart."
              }
            ]
          }
        },
        "description": "The sort configuration of a <code>RadarChartVisual</code>."
      },
      "RadarChartShape": {
        "type": "string",
        "enum": [
          "CIRCLE",
          "POLYGON"
        ]
      },
      "RadarChartSeriesSettings": {
        "type": "object",
        "properties": {
          "AreaStyleSettings": {
            "allOf": [
              {
                "$ref": "#/$defs/RadarChartAreaStyleSettings"
              },
              {
                "description": "The area style settings of a radar chart."
              }
            ]
          }
        },
        "description": "The series settings of a radar chart."
      },
      "RadarChartAreaStyleSettings": {
        "type": "object",
        "properties": {
          "Visibility": {
            "allOf": [
              {
                "$ref": "#/$defs/Visibility"
              },
              {
                "description": "The visibility settings of a radar chart."
              }
            ]
          }
        },
        "description": "The configured style settings of a radar chart."
      },
      "RadarChartStartAngle": {
        "type": "number",
        "format": "double",
        "minimum": -360,
        "maximum": 360
      },
      "RadarChartAxesRangeScale": {
        "type": "string",
        "enum": [
          "AUTO",
          "INDEPENDENT",
          "SHARED"
        ]
      },
      "SheetTextBoxList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/SheetTextBox"
        },
        "maxItems": 100
      },
      "SheetTextBox": {
        "type": "object",
        "required": [
          "SheetTextBoxId"
        ],
        "properties": {
          "SheetTextBoxId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "The unique identifier for a text box. This identifier must be unique within the context of a dashboard, template, or analysis. Two dashboards, analyses, or templates can have text boxes that share identifiers."
              }
            ]
          },
          "Content": {
            "allOf": [
              {
                "$ref": "#/$defs/SheetTextBoxContent"
              },
              {
                "description": "The content that is displayed in the text box."
              }
            ]
          }
        },
        "description": "A text box."
      },
      "SheetTextBoxContent": {
        "type": "string",
        "maxLength": 150000
      },
      "LayoutList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Layout"
        },
        "minItems": 1,
        "maxItems": 1
      },
      "Layout": {
        "type": "object",
        "required": [
          "Configuration"
        ],
        "properties": {
          "Configuration": {
            "allOf": [
              {
                "$ref": "#/$defs/LayoutConfiguration"
              },
              {
                "description": "The configuration that determines what the type of layout for a sheet."
              }
            ]
          }
        },
        "description": "<p>A <code>Layout</code> defines the placement of elements within a sheet.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/types-of-layout.html\">Types of layout</a> in the <i>Amazon QuickSight User Guide</i>.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>"
      },
      "LayoutConfiguration": {
        "type": "object",
        "properties": {
          "GridLayout": {
            "allOf": [
              {
                "$ref": "#/$defs/GridLayoutConfiguration"
              },
              {
                "description": "A type of layout that can be used on a sheet. In a grid layout, visuals snap to a grid with standard spacing and alignment. Dashboards are displayed as designed, with options to fit to screen or view at actual size. A grid layout can be configured to behave in one of two ways when the viewport is resized: <code>FIXED</code> or <code>RESPONSIVE</code>."
              }
            ]
          },
          "FreeFormLayout": {
            "allOf": [
              {
                "$ref": "#/$defs/FreeFormLayoutConfiguration"
              },
              {
                "description": "A free-form is optimized for a fixed width and has more control over the exact placement of layout elements."
              }
            ]
          },
          "SectionBasedLayout": {
            "allOf": [
              {
                "$ref": "#/$defs/SectionBasedLayoutConfiguration"
              },
              {
                "description": "A section based layout organizes visuals into multiple sections and has customized header, footer and page break."
              }
            ]
          }
        },
        "description": "<p>The configuration that determines what the type of layout will be used on a sheet.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>"
      },
      "GridLayoutConfiguration": {
        "type": "object",
        "required": [
          "Elements"
        ],
        "properties": {
          "Elements": {
            "allOf": [
              {
                "$ref": "#/$defs/GridLayoutElementList"
              },
              {
                "description": "The elements that are included in a grid layout."
              }
            ]
          },
          "CanvasSizeOptions": {
            "$ref": "#/$defs/GridLayoutCanvasSizeOptions"
          }
        },
        "description": "<p>The configuration for a grid layout. Also called a tiled layout.</p> <p>Visuals snap to a grid with standard spacing and alignment. Dashboards are displayed as designed, with options to fit to screen or view at actual size.</p>"
      },
      "GridLayoutElementList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/GridLayoutElement"
        },
        "maxItems": 430
      },
      "GridLayoutElement": {
        "type": "object",
        "required": [
          "ElementId",
          "ElementType",
          "ColumnSpan",
          "RowSpan"
        ],
        "properties": {
          "ElementId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "A unique identifier for an element within a grid layout."
              }
            ]
          },
          "ElementType": {
            "allOf": [
              {
                "$ref": "#/$defs/LayoutElementType"
              },
              {
                "description": "The type of element."
              }
            ]
          },
          "ColumnIndex": {
            "allOf": [
              {
                "$ref": "#/$defs/GridLayoutElementColumnIndex"
              },
              {
                "description": "The column index for the upper left corner of an element."
              }
            ]
          },
          "ColumnSpan": {
            "allOf": [
              {
                "$ref": "#/$defs/GridLayoutElementColumnSpan"
              },
              {
                "description": "The width of a grid element expressed as a number of grid columns."
              }
            ]
          },
          "RowIndex": {
            "allOf": [
              {
                "$ref": "#/$defs/GridLayoutElementRowIndex"
              },
              {
                "description": "The row index for the upper left corner of an element."
              }
            ]
          },
          "RowSpan": {
            "allOf": [
              {
                "$ref": "#/$defs/GridLayoutElementRowSpan"
              },
              {
                "description": "The height of a grid element expressed as a number of grid rows."
              }
            ]
          }
        },
        "description": "An element within a grid layout."
      },
      "LayoutElementType": {
        "type": "string",
        "enum": [
          "VISUAL",
          "FILTER_CONTROL",
          "PARAMETER_CONTROL",
          "TEXT_BOX"
        ]
      },
      "GridLayoutElementColumnIndex": {
        "type": "integer",
        "minimum": 0,
        "maximum": 35
      },
      "GridLayoutElementColumnSpan": {
        "type": "integer",
        "minimum": 1,
        "maximum": 36
      },
      "GridLayoutElementRowIndex": {
        "type": "integer",
        "minimum": 0,
        "maximum": 9009
      },
      "GridLayoutElementRowSpan": {
        "type": "integer",
        "minimum": 1,
        "maximum": 21
      },
      "GridLayoutCanvasSizeOptions": {
        "type": "object",
        "properties": {
          "ScreenCanvasSizeOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/GridLayoutScreenCanvasSizeOptions"
              },
              {
                "description": "The options that determine the sizing of the canvas used in a grid layout."
              }
            ]
          }
        },
        "description": "Configuration options for the canvas of a grid layout."
      },
      "GridLayoutScreenCanvasSizeOptions": {
        "type": "object",
        "required": [
          "ResizeOption"
        ],
        "properties": {
          "ResizeOption": {
            "allOf": [
              {
                "$ref": "#/$defs/ResizeOption"
              },
              {
                "description": "<p>This value determines the layout behavior when the viewport is resized.</p> <ul> <li> <p> <code>FIXED</code>: A fixed width will be used when optimizing the layout. In the Amazon QuickSight console, this option is called <code>Classic</code>.</p> </li> <li> <p> <code>RESPONSIVE</code>: The width of the canvas will be responsive and optimized to the view port. In the Amazon QuickSight console, this option is called <code>Tiled</code>.</p> </li> </ul>"
              }
            ]
          },
          "OptimizedViewPortWidth": {
            "allOf": [
              {
                "$ref": "#/$defs/PixelLength"
              },
              {
                "description": "The width that the view port will be optimized for when the layout renders."
              }
            ]
          }
        },
        "description": "The options that determine the sizing of the canvas used in a grid layout."
      },
      "ResizeOption": {
        "type": "string",
        "enum": [
          "FIXED",
          "RESPONSIVE"
        ]
      },
      "FreeFormLayoutConfiguration": {
        "type": "object",
        "required": [
          "Elements"
        ],
        "properties": {
          "Elements": {
            "allOf": [
              {
                "$ref": "#/$defs/FreeFromLayoutElementList"
              },
              {
                "description": "The elements that are included in a free-form layout."
              }
            ]
          },
          "CanvasSizeOptions": {
            "$ref": "#/$defs/FreeFormLayoutCanvasSizeOptions"
          }
        },
        "description": "The configuration of a free-form layout."
      },
      "FreeFromLayoutElementList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/FreeFormLayoutElement"
        },
        "maxItems": 430
      },
      "FreeFormLayoutElement": {
        "type": "object",
        "required": [
          "ElementId",
          "ElementType",
          "XAxisLocation",
          "YAxisLocation",
          "Width",
          "Height"
        ],
        "properties": {
          "ElementId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "A unique identifier for an element within a free-form layout."
              }
            ]
          },
          "ElementType": {
            "allOf": [
              {
                "$ref": "#/$defs/LayoutElementType"
              },
              {
                "description": "The type of element."
              }
            ]
          },
          "XAxisLocation": {
            "allOf": [
              {
                "$ref": "#/$defs/PixelLength"
              },
              {
                "description": "The x-axis coordinate of the element."
              }
            ]
          },
          "YAxisLocation": {
            "allOf": [
              {
                "$ref": "#/$defs/UnlimitedPixelLength"
              },
              {
                "description": "The y-axis coordinate of the element."
              }
            ]
          },
          "Width": {
            "allOf": [
              {
                "$ref": "#/$defs/PixelLength"
              },
              {
                "description": "The width of an element within a free-form layout."
              }
            ]
          },
          "Height": {
            "allOf": [
              {
                "$ref": "#/$defs/PixelLength"
              },
              {
                "description": "The height of an element within a free-form layout."
              }
            ]
          },
          "Visibility": {
            "allOf": [
              {
                "$ref": "#/$defs/Visibility"
              },
              {
                "description": "The visibility of an element within a free-form layout."
              }
            ]
          },
          "RenderingRules": {
            "allOf": [
              {
                "$ref": "#/$defs/SheetElementRenderingRuleList"
              },
              {
                "description": "The rendering rules that determine when an element should be displayed within a free-form layout."
              }
            ]
          },
          "BorderStyle": {
            "allOf": [
              {
                "$ref": "#/$defs/FreeFormLayoutElementBorderStyle"
              },
              {
                "description": "The border style configuration of a free-form layout element."
              }
            ]
          },
          "SelectedBorderStyle": {
            "allOf": [
              {
                "$ref": "#/$defs/FreeFormLayoutElementBorderStyle"
              },
              {
                "description": "The border style configuration of a free-form layout element. This border style is used when the element is selected."
              }
            ]
          },
          "BackgroundStyle": {
            "allOf": [
              {
                "$ref": "#/$defs/FreeFormLayoutElementBackgroundStyle"
              },
              {
                "description": "The background style configuration of a free-form layout element."
              }
            ]
          },
          "LoadingAnimation": {
            "allOf": [
              {
                "$ref": "#/$defs/LoadingAnimation"
              },
              {
                "description": "The loading animation configuration of a free-form layout element."
              }
            ]
          }
        },
        "description": "An element within a free-form layout."
      },
      "UnlimitedPixelLength": {
        "type": "string",
        "description": "String based length that is composed of value and unit in px with Integer.MAX_VALUE as maximum value"
      },
      "SheetElementRenderingRuleList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/SheetElementRenderingRule"
        },
        "maxItems": 10000
      },
      "SheetElementRenderingRule": {
        "type": "object",
        "required": [
          "Expression",
          "ConfigurationOverrides"
        ],
        "properties": {
          "Expression": {
            "allOf": [
              {
                "$ref": "#/$defs/Expression"
              },
              {
                "description": "The expression of the rendering rules of a sheet."
              }
            ]
          },
          "ConfigurationOverrides": {
            "allOf": [
              {
                "$ref": "#/$defs/SheetElementConfigurationOverrides"
              },
              {
                "description": "The override configuration of the rendering rules of a sheet."
              }
            ]
          }
        },
        "description": "The rendering rules of a sheet that uses a free-form layout."
      },
      "SheetElementConfigurationOverrides": {
        "type": "object",
        "properties": {
          "Visibility": {
            "allOf": [
              {
                "$ref": "#/$defs/Visibility"
              },
              {
                "description": "<p>Determines whether or not the overrides are visible. Choose one of the following options:</p> <ul> <li> <p> <code>VISIBLE</code> </p> </li> <li> <p> <code>HIDDEN</code> </p> </li> </ul>"
              }
            ]
          }
        },
        "description": "The override configuration of the rendering rules of a sheet."
      },
      "FreeFormLayoutElementBorderStyle": {
        "type": "object",
        "properties": {
          "Visibility": {
            "allOf": [
              {
                "$ref": "#/$defs/Visibility"
              },
              {
                "description": "The border visibility of a free-form layout element."
              }
            ]
          },
          "Color": {
            "allOf": [
              {
                "$ref": "#/$defs/HexColorWithTransparency"
              },
              {
                "description": "The border color of a free-form layout element."
              }
            ]
          }
        },
        "description": "The background style configuration of a free-form layout element."
      },
      "FreeFormLayoutElementBackgroundStyle": {
        "type": "object",
        "properties": {
          "Visibility": {
            "allOf": [
              {
                "$ref": "#/$defs/Visibility"
              },
              {
                "description": "The background visibility of a free-form layout element."
              }
            ]
          },
          "Color": {
            "allOf": [
              {
                "$ref": "#/$defs/HexColorWithTransparency"
              },
              {
                "description": "The background color of a free-form layout element."
              }
            ]
          }
        },
        "description": "The background style configuration of a free-form layout element."
      },
      "LoadingAnimation": {
        "type": "object",
        "properties": {
          "Visibility": {
            "allOf": [
              {
                "$ref": "#/$defs/Visibility"
              },
              {
                "description": "The visibility configuration of <code>LoadingAnimation</code>."
              }
            ]
          }
        },
        "description": "The configuration of loading animation in free-form layout. "
      },
      "FreeFormLayoutCanvasSizeOptions": {
        "type": "object",
        "properties": {
          "ScreenCanvasSizeOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/FreeFormLayoutScreenCanvasSizeOptions"
              },
              {
                "description": "The options that determine the sizing of the canvas used in a free-form layout."
              }
            ]
          }
        },
        "description": "Configuration options for the canvas of a free-form layout."
      },
      "FreeFormLayoutScreenCanvasSizeOptions": {
        "type": "object",
        "required": [
          "OptimizedViewPortWidth"
        ],
        "properties": {
          "OptimizedViewPortWidth": {
            "allOf": [
              {
                "$ref": "#/$defs/PixelLength"
              },
              {
                "description": "The width that the view port will be optimized for when the layout renders."
              }
            ]
          }
        },
        "description": "The options that determine the sizing of the canvas used in a free-form layout."
      },
      "SectionBasedLayoutConfiguration": {
        "type": "object",
        "required": [
          "HeaderSections",
          "BodySections",
          "FooterSections",
          "CanvasSizeOptions"
        ],
        "properties": {
          "HeaderSections": {
            "allOf": [
              {
                "$ref": "#/$defs/HeaderFooterSectionConfigurationList"
              },
              {
                "description": "A list of header section configurations."
              }
            ]
          },
          "BodySections": {
            "allOf": [
              {
                "$ref": "#/$defs/BodySectionConfigurationList"
              },
              {
                "description": "A list of body section configurations."
              }
            ]
          },
          "FooterSections": {
            "allOf": [
              {
                "$ref": "#/$defs/HeaderFooterSectionConfigurationList"
              },
              {
                "description": "A list of footer section configurations."
              }
            ]
          },
          "CanvasSizeOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/SectionBasedLayoutCanvasSizeOptions"
              },
              {
                "description": "The options for the canvas of a section-based layout."
              }
            ]
          }
        },
        "description": "The configuration for a section-based layout."
      },
      "HeaderFooterSectionConfigurationList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/HeaderFooterSectionConfiguration"
        },
        "maxItems": 1
      },
      "HeaderFooterSectionConfiguration": {
        "type": "object",
        "required": [
          "SectionId",
          "Layout"
        ],
        "properties": {
          "SectionId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "The unique identifier of the header or footer section."
              }
            ]
          },
          "Layout": {
            "allOf": [
              {
                "$ref": "#/$defs/SectionLayoutConfiguration"
              },
              {
                "description": "The layout configuration of the header or footer section."
              }
            ]
          },
          "Style": {
            "allOf": [
              {
                "$ref": "#/$defs/SectionStyle"
              },
              {
                "description": "The style options of a header or footer section."
              }
            ]
          }
        },
        "description": "The configuration of a header or footer section."
      },
      "SectionLayoutConfiguration": {
        "type": "object",
        "required": [
          "FreeFormLayout"
        ],
        "properties": {
          "FreeFormLayout": {
            "allOf": [
              {
                "$ref": "#/$defs/FreeFormSectionLayoutConfiguration"
              },
              {
                "description": "The free-form layout configuration of a section."
              }
            ]
          }
        },
        "description": "The layout configuration of a section."
      },
      "FreeFormSectionLayoutConfiguration": {
        "type": "object",
        "required": [
          "Elements"
        ],
        "properties": {
          "Elements": {
            "allOf": [
              {
                "$ref": "#/$defs/FreeFromLayoutElementList"
              },
              {
                "description": "The elements that are included in the free-form layout."
              }
            ]
          }
        },
        "description": "The free-form layout configuration of a section."
      },
      "SectionStyle": {
        "type": "object",
        "properties": {
          "Height": {
            "allOf": [
              {
                "$ref": "#/$defs/PixelLength"
              },
              {
                "description": "<p>The height of a section.</p> <p>Heights can only be defined for header and footer sections. The default height margin is 0.5 inches. </p>"
              }
            ]
          },
          "Padding": {
            "allOf": [
              {
                "$ref": "#/$defs/Spacing"
              },
              {
                "description": "<p>The spacing between section content and its top, bottom, left, and right edges.</p> <p>There is no padding by default.</p>"
              }
            ]
          }
        },
        "description": "The options that style a section."
      },
      "Spacing": {
        "type": "object",
        "properties": {
          "Top": {
            "allOf": [
              {
                "$ref": "#/$defs/Length"
              },
              {
                "description": "Define the top spacing."
              }
            ]
          },
          "Bottom": {
            "allOf": [
              {
                "$ref": "#/$defs/Length"
              },
              {
                "description": "Define the bottom spacing."
              }
            ]
          },
          "Left": {
            "allOf": [
              {
                "$ref": "#/$defs/Length"
              },
              {
                "description": "Define the left spacing."
              }
            ]
          },
          "Right": {
            "allOf": [
              {
                "$ref": "#/$defs/Length"
              },
              {
                "description": "Define the right spacing."
              }
            ]
          }
        },
        "description": "The configuration of spacing (often a margin or padding)."
      },
      "Length": {
        "type": "string",
        "description": "String based length that is composed of value and unit"
      },
      "BodySectionConfigurationList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/BodySectionConfiguration"
        },
        "maxItems": 28
      },
      "BodySectionConfiguration": {
        "type": "object",
        "required": [
          "SectionId",
          "Content"
        ],
        "properties": {
          "SectionId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "The unique identifier of a body section."
              }
            ]
          },
          "Content": {
            "allOf": [
              {
                "$ref": "#/$defs/BodySectionContent"
              },
              {
                "description": "The configuration of content in a body section."
              }
            ]
          },
          "Style": {
            "allOf": [
              {
                "$ref": "#/$defs/SectionStyle"
              },
              {
                "description": "The style options of a body section."
              }
            ]
          },
          "PageBreakConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/SectionPageBreakConfiguration"
              },
              {
                "description": "The configuration of a page break for a section."
              }
            ]
          }
        },
        "description": "The configuration of a body section."
      },
      "BodySectionContent": {
        "type": "object",
        "properties": {
          "Layout": {
            "allOf": [
              {
                "$ref": "#/$defs/SectionLayoutConfiguration"
              },
              {
                "description": "The layout configuration of a body section."
              }
            ]
          }
        },
        "description": "The configuration of content in a body section."
      },
      "SectionPageBreakConfiguration": {
        "type": "object",
        "properties": {
          "After": {
            "allOf": [
              {
                "$ref": "#/$defs/SectionAfterPageBreak"
              },
              {
                "description": "The configuration of a page break after a section."
              }
            ]
          }
        },
        "description": "The configuration of a page break for a section."
      },
      "SectionAfterPageBreak": {
        "type": "object",
        "properties": {
          "Status": {
            "allOf": [
              {
                "$ref": "#/$defs/SectionPageBreakStatus"
              },
              {
                "description": "The option that enables or disables a page break at the end of a section."
              }
            ]
          }
        },
        "description": "The configuration of a page break after a section."
      },
      "SectionPageBreakStatus": {
        "type": "string",
        "enum": [
          "ENABLED",
          "DISABLED"
        ]
      },
      "SectionBasedLayoutCanvasSizeOptions": {
        "type": "object",
        "properties": {
          "PaperCanvasSizeOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/SectionBasedLayoutPaperCanvasSizeOptions"
              },
              {
                "description": "The options for a paper canvas of a section-based layout."
              }
            ]
          }
        },
        "description": "The options for the canvas of a section-based layout."
      },
      "SectionBasedLayoutPaperCanvasSizeOptions": {
        "type": "object",
        "properties": {
          "PaperSize": {
            "allOf": [
              {
                "$ref": "#/$defs/PaperSize"
              },
              {
                "description": "The paper size that is used to define canvas dimensions."
              }
            ]
          },
          "PaperOrientation": {
            "allOf": [
              {
                "$ref": "#/$defs/PaperOrientation"
              },
              {
                "description": "<p>The paper orientation that is used to define canvas dimensions. Choose one of the following options:</p> <ul> <li> <p>PORTRAIT</p> </li> <li> <p>LANDSCAPE</p> </li> </ul>"
              }
            ]
          },
          "PaperMargin": {
            "allOf": [
              {
                "$ref": "#/$defs/Spacing"
              },
              {
                "description": "Defines the spacing between the canvas content and the top, bottom, left, and right edges."
              }
            ]
          }
        },
        "description": "The options for a paper canvas of a section-based layout."
      },
      "PaperSize": {
        "type": "string",
        "enum": [
          "US_LETTER",
          "US_LEGAL",
          "US_TABLOID_LEDGER",
          "A0",
          "A1",
          "A2",
          "A3",
          "A4",
          "A5",
          "JIS_B4",
          "JIS_B5"
        ]
      },
      "PaperOrientation": {
        "type": "string",
        "enum": [
          "PORTRAIT",
          "LANDSCAPE"
        ]
      },
      "SheetControlLayoutList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/SheetControlLayout"
        },
        "minItems": 0,
        "maxItems": 1
      },
      "SheetControlLayout": {
        "type": "object",
        "required": [
          "Configuration"
        ],
        "properties": {
          "Configuration": {
            "allOf": [
              {
                "$ref": "#/$defs/SheetControlLayoutConfiguration"
              },
              {
                "description": "The configuration that determines the elements and canvas size options of sheet control."
              }
            ]
          }
        },
        "description": "A grid layout to define the placement of sheet control."
      },
      "SheetControlLayoutConfiguration": {
        "type": "object",
        "properties": {
          "GridLayout": {
            "allOf": [
              {
                "$ref": "#/$defs/GridLayoutConfiguration"
              },
              {
                "description": "The configuration that determines the elements and canvas size options of sheet control."
              }
            ]
          }
        },
        "description": "The configuration that determines the elements and canvas size options of sheet control."
      },
      "SheetContentType": {
        "type": "string",
        "enum": [
          "PAGINATED",
          "INTERACTIVE"
        ]
      },
      "CalculatedFields": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/CalculatedField"
        },
        "maxItems": 500
      },
      "CalculatedField": {
        "type": "object",
        "required": [
          "DataSetIdentifier",
          "Name",
          "Expression"
        ],
        "properties": {
          "DataSetIdentifier": {
            "allOf": [
              {
                "$ref": "#/$defs/DataSetIdentifier"
              },
              {
                "description": "The data set that is used in this calculated field."
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/ColumnName"
              },
              {
                "description": "The name of the calculated field."
              }
            ]
          },
          "Expression": {
            "allOf": [
              {
                "$ref": "#/$defs/CalculatedFieldExpression"
              },
              {
                "description": "The expression of the calculated field."
              }
            ]
          }
        },
        "description": "The calculated field of an analysis."
      },
      "CalculatedFieldExpression": {
        "type": "string",
        "minLength": 1,
        "maxLength": 32000,
        "format": "password"
      },
      "ParameterDeclarationList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ParameterDeclaration"
        },
        "maxItems": 200
      },
      "ParameterDeclaration": {
        "type": "object",
        "properties": {
          "StringParameterDeclaration": {
            "allOf": [
              {
                "$ref": "#/$defs/StringParameterDeclaration"
              },
              {
                "description": "A parameter declaration for the <code>String</code> data type."
              }
            ]
          },
          "DecimalParameterDeclaration": {
            "allOf": [
              {
                "$ref": "#/$defs/DecimalParameterDeclaration"
              },
              {
                "description": "A parameter declaration for the <code>Decimal</code> data type."
              }
            ]
          },
          "IntegerParameterDeclaration": {
            "allOf": [
              {
                "$ref": "#/$defs/IntegerParameterDeclaration"
              },
              {
                "description": "A parameter declaration for the <code>Integer</code> data type."
              }
            ]
          },
          "DateTimeParameterDeclaration": {
            "allOf": [
              {
                "$ref": "#/$defs/DateTimeParameterDeclaration"
              },
              {
                "description": "A parameter declaration for the <code>DateTime</code> data type."
              }
            ]
          }
        },
        "description": "<p>The declaration definition of a parameter.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/parameters-in-quicksight.html\">Parameters in Amazon QuickSight</a> in the <i>Amazon QuickSight User Guide</i>.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>"
      },
      "StringParameterDeclaration": {
        "type": "object",
        "required": [
          "ParameterValueType",
          "Name"
        ],
        "properties": {
          "ParameterValueType": {
            "allOf": [
              {
                "$ref": "#/$defs/ParameterValueType"
              },
              {
                "description": "The value type determines whether the parameter is a single-value or multi-value parameter."
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/ParameterName"
              },
              {
                "description": "The name of the parameter that is being declared."
              }
            ]
          },
          "DefaultValues": {
            "allOf": [
              {
                "$ref": "#/$defs/StringDefaultValues"
              },
              {
                "description": "The default values of a parameter. If the parameter is a single-value parameter, a maximum of one default value can be provided."
              }
            ]
          },
          "ValueWhenUnset": {
            "allOf": [
              {
                "$ref": "#/$defs/StringValueWhenUnsetConfiguration"
              },
              {
                "description": "The configuration that defines the default value of a <code>String</code> parameter when a value has not been set."
              }
            ]
          },
          "MappedDataSetParameters": {
            "$ref": "#/$defs/MappedDataSetParameters"
          }
        },
        "description": "A parameter declaration for the <code>String</code> data type."
      },
      "ParameterValueType": {
        "type": "string",
        "enum": [
          "MULTI_VALUED",
          "SINGLE_VALUED"
        ]
      },
      "StringDefaultValues": {
        "type": "object",
        "properties": {
          "DynamicValue": {
            "allOf": [
              {
                "$ref": "#/$defs/DynamicDefaultValue"
              },
              {
                "description": "The dynamic value of the <code>StringDefaultValues</code>. Different defaults displayed according to users, groups, and values mapping."
              }
            ]
          },
          "StaticValues": {
            "allOf": [
              {
                "$ref": "#/$defs/StringDefaultValueList"
              },
              {
                "description": "The static values of the <code>DecimalDefaultValues</code>."
              }
            ]
          }
        },
        "description": "The default values of the <code>StringParameterDeclaration</code>."
      },
      "DynamicDefaultValue": {
        "type": "object",
        "required": [
          "DefaultValueColumn"
        ],
        "properties": {
          "UserNameColumn": {
            "allOf": [
              {
                "$ref": "#/$defs/ColumnIdentifier"
              },
              {
                "description": "The column that contains the username."
              }
            ]
          },
          "GroupNameColumn": {
            "allOf": [
              {
                "$ref": "#/$defs/ColumnIdentifier"
              },
              {
                "description": "The column that contains the group name."
              }
            ]
          },
          "DefaultValueColumn": {
            "allOf": [
              {
                "$ref": "#/$defs/ColumnIdentifier"
              },
              {
                "description": "The column that contains the default value of each user or group."
              }
            ]
          }
        },
        "description": "Defines different defaults to the users or groups based on mapping."
      },
      "StringValueWhenUnsetConfiguration": {
        "type": "object",
        "properties": {
          "ValueWhenUnsetOption": {
            "allOf": [
              {
                "$ref": "#/$defs/ValueWhenUnsetOption"
              },
              {
                "description": "<p>The built-in options for default values. The value can be one of the following:</p> <ul> <li> <p> <code>RECOMMENDED</code>: The recommended value.</p> </li> <li> <p> <code>NULL</code>: The <code>NULL</code> value.</p> </li> </ul>"
              }
            ]
          },
          "CustomValue": {
            "allOf": [
              {
                "$ref": "#/$defs/SensitiveString"
              },
              {
                "description": "A custom value that's used when the value of a parameter isn't set."
              }
            ]
          }
        },
        "description": "The configuration that defines the default value of a <code>String</code> parameter when a value has not been set."
      },
      "ValueWhenUnsetOption": {
        "type": "string",
        "enum": [
          "RECOMMENDED_VALUE",
          "NULL"
        ]
      },
      "MappedDataSetParameters": {
        "type": "array",
        "description": "A list of dataset parameters that are mapped to an analysis parameter.",
        "items": {
          "$ref": "#/$defs/MappedDataSetParameter"
        },
        "minItems": 0,
        "maxItems": 150
      },
      "MappedDataSetParameter": {
        "type": "object",
        "required": [
          "DataSetIdentifier",
          "DataSetParameterName"
        ],
        "properties": {
          "DataSetIdentifier": {
            "allOf": [
              {
                "$ref": "#/$defs/DataSetIdentifier"
              },
              {
                "description": "A unique name that identifies a dataset within the analysis or dashboard."
              }
            ]
          },
          "DataSetParameterName": {
            "allOf": [
              {
                "$ref": "#/$defs/ParameterName"
              },
              {
                "description": "The name of the dataset parameter."
              }
            ]
          }
        },
        "description": "A dataset parameter that is mapped to an analysis parameter."
      },
      "DecimalParameterDeclaration": {
        "type": "object",
        "required": [
          "ParameterValueType",
          "Name"
        ],
        "properties": {
          "ParameterValueType": {
            "allOf": [
              {
                "$ref": "#/$defs/ParameterValueType"
              },
              {
                "description": "The value type determines whether the parameter is a single-value or multi-value parameter."
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/ParameterName"
              },
              {
                "description": "The name of the parameter that is being declared."
              }
            ]
          },
          "DefaultValues": {
            "allOf": [
              {
                "$ref": "#/$defs/DecimalDefaultValues"
              },
              {
                "description": "The default values of a parameter. If the parameter is a single-value parameter, a maximum of one default value can be provided."
              }
            ]
          },
          "ValueWhenUnset": {
            "allOf": [
              {
                "$ref": "#/$defs/DecimalValueWhenUnsetConfiguration"
              },
              {
                "description": "The configuration that defines the default value of a <code>Decimal</code> parameter when a value has not been set."
              }
            ]
          },
          "MappedDataSetParameters": {
            "$ref": "#/$defs/MappedDataSetParameters"
          }
        },
        "description": "A parameter declaration for the <code>Decimal</code> data type."
      },
      "DecimalDefaultValues": {
        "type": "object",
        "properties": {
          "DynamicValue": {
            "allOf": [
              {
                "$ref": "#/$defs/DynamicDefaultValue"
              },
              {
                "description": "The dynamic value of the <code>DecimalDefaultValues</code>. Different defaults are displayed according to users, groups, and values mapping."
              }
            ]
          },
          "StaticValues": {
            "allOf": [
              {
                "$ref": "#/$defs/DecimalDefaultValueList"
              },
              {
                "description": "The static values of the <code>DecimalDefaultValues</code>."
              }
            ]
          }
        },
        "description": "The default values of the <code>DecimalParameterDeclaration</code>."
      },
      "DecimalValueWhenUnsetConfiguration": {
        "type": "object",
        "properties": {
          "ValueWhenUnsetOption": {
            "allOf": [
              {
                "$ref": "#/$defs/ValueWhenUnsetOption"
              },
              {
                "description": "<p>The built-in options for default values. The value can be one of the following:</p> <ul> <li> <p> <code>RECOMMENDED</code>: The recommended value.</p> </li> <li> <p> <code>NULL</code>: The <code>NULL</code> value.</p> </li> </ul>"
              }
            ]
          },
          "CustomValue": {
            "allOf": [
              {
                "$ref": "#/$defs/SensitiveDouble"
              },
              {
                "description": "A custom value that's used when the value of a parameter isn't set."
              }
            ]
          }
        },
        "description": "The configuration that defines the default value of a <code>Decimal</code> parameter when a value has not been set."
      },
      "IntegerParameterDeclaration": {
        "type": "object",
        "required": [
          "ParameterValueType",
          "Name"
        ],
        "properties": {
          "ParameterValueType": {
            "allOf": [
              {
                "$ref": "#/$defs/ParameterValueType"
              },
              {
                "description": "The value type determines whether the parameter is a single-value or multi-value parameter."
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/ParameterName"
              },
              {
                "description": "The name of the parameter that is being declared."
              }
            ]
          },
          "DefaultValues": {
            "allOf": [
              {
                "$ref": "#/$defs/IntegerDefaultValues"
              },
              {
                "description": "The default values of a parameter. If the parameter is a single-value parameter, a maximum of one default value can be provided."
              }
            ]
          },
          "ValueWhenUnset": {
            "allOf": [
              {
                "$ref": "#/$defs/IntegerValueWhenUnsetConfiguration"
              },
              {
                "description": "A parameter declaration for the <code>Integer</code> data type."
              }
            ]
          },
          "MappedDataSetParameters": {
            "$ref": "#/$defs/MappedDataSetParameters"
          }
        },
        "description": "A parameter declaration for the <code>Integer</code> data type."
      },
      "IntegerDefaultValues": {
        "type": "object",
        "properties": {
          "DynamicValue": {
            "allOf": [
              {
                "$ref": "#/$defs/DynamicDefaultValue"
              },
              {
                "description": "The dynamic value of the <code>IntegerDefaultValues</code>. Different defaults are displayed according to users, groups, and values mapping."
              }
            ]
          },
          "StaticValues": {
            "allOf": [
              {
                "$ref": "#/$defs/IntegerDefaultValueList"
              },
              {
                "description": "The static values of the <code>IntegerDefaultValues</code>."
              }
            ]
          }
        },
        "description": "The default values of the <code>IntegerParameterDeclaration</code>."
      },
      "IntegerValueWhenUnsetConfiguration": {
        "type": "object",
        "properties": {
          "ValueWhenUnsetOption": {
            "allOf": [
              {
                "$ref": "#/$defs/ValueWhenUnsetOption"
              },
              {
                "description": "<p>The built-in options for default values. The value can be one of the following:</p> <ul> <li> <p> <code>RECOMMENDED</code>: The recommended value.</p> </li> <li> <p> <code>NULL</code>: The <code>NULL</code> value.</p> </li> </ul>"
              }
            ]
          },
          "CustomValue": {
            "allOf": [
              {
                "$ref": "#/$defs/SensitiveLong"
              },
              {
                "description": "A custom value that's used when the value of a parameter isn't set."
              }
            ]
          }
        },
        "description": "<p>A parameter declaration for the <code>Integer</code> data type.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>"
      },
      "DateTimeParameterDeclaration": {
        "type": "object",
        "required": [
          "Name"
        ],
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/ParameterName"
              },
              {
                "description": "The name of the parameter that is being declared."
              }
            ]
          },
          "DefaultValues": {
            "allOf": [
              {
                "$ref": "#/$defs/DateTimeDefaultValues"
              },
              {
                "description": "The default values of a parameter. If the parameter is a single-value parameter, a maximum of one default value can be provided."
              }
            ]
          },
          "TimeGranularity": {
            "allOf": [
              {
                "$ref": "#/$defs/TimeGranularity"
              },
              {
                "description": "The level of time precision that is used to aggregate <code>DateTime</code> values."
              }
            ]
          },
          "ValueWhenUnset": {
            "allOf": [
              {
                "$ref": "#/$defs/DateTimeValueWhenUnsetConfiguration"
              },
              {
                "description": "The configuration that defines the default value of a <code>DateTime</code> parameter when a value has not been set."
              }
            ]
          },
          "MappedDataSetParameters": {
            "$ref": "#/$defs/MappedDataSetParameters"
          }
        },
        "description": "A parameter declaration for the <code>DateTime</code> data type."
      },
      "DateTimeDefaultValues": {
        "type": "object",
        "properties": {
          "DynamicValue": {
            "allOf": [
              {
                "$ref": "#/$defs/DynamicDefaultValue"
              },
              {
                "description": "The dynamic value of the <code>DataTimeDefaultValues</code>. Different defaults are displayed according to users, groups, and values mapping."
              }
            ]
          },
          "StaticValues": {
            "allOf": [
              {
                "$ref": "#/$defs/DateTimeDefaultValueList"
              },
              {
                "description": "The static values of the <code>DataTimeDefaultValues</code>."
              }
            ]
          },
          "RollingDate": {
            "allOf": [
              {
                "$ref": "#/$defs/RollingDateConfiguration"
              },
              {
                "description": "The rolling date of the <code>DataTimeDefaultValues</code>. The date is determined from the dataset based on input expression."
              }
            ]
          }
        },
        "description": "The default values of the <code>DateTimeParameterDeclaration</code>."
      },
      "RollingDateConfiguration": {
        "type": "object",
        "required": [
          "Expression"
        ],
        "properties": {
          "DataSetIdentifier": {
            "allOf": [
              {
                "$ref": "#/$defs/DataSetIdentifier"
              },
              {
                "description": "The data set that is used in the rolling date configuration."
              }
            ]
          },
          "Expression": {
            "allOf": [
              {
                "$ref": "#/$defs/Expression"
              },
              {
                "description": "The expression of the rolling date configuration."
              }
            ]
          }
        },
        "description": "The rolling date configuration of a date time filter."
      },
      "DateTimeValueWhenUnsetConfiguration": {
        "type": "object",
        "properties": {
          "ValueWhenUnsetOption": {
            "allOf": [
              {
                "$ref": "#/$defs/ValueWhenUnsetOption"
              },
              {
                "description": "<p>The built-in options for default values. The value can be one of the following:</p> <ul> <li> <p> <code>RECOMMENDED</code>: The recommended value.</p> </li> <li> <p> <code>NULL</code>: The <code>NULL</code> value.</p> </li> </ul>"
              }
            ]
          },
          "CustomValue": {
            "allOf": [
              {
                "$ref": "#/$defs/SensitiveTimestamp"
              },
              {
                "description": "A custom value that's used when the value of a parameter isn't set."
              }
            ]
          }
        },
        "description": "The configuration that defines the default value of a <code>DateTime</code> parameter when a value has not been set."
      },
      "FilterGroupList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/FilterGroup"
        },
        "maxItems": 2000
      },
      "FilterGroup": {
        "type": "object",
        "required": [
          "FilterGroupId",
          "Filters",
          "ScopeConfiguration",
          "CrossDataset"
        ],
        "properties": {
          "FilterGroupId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "The value that uniquely identifies a <code>FilterGroup</code> within a dashboard, template, or analysis."
              }
            ]
          },
          "Filters": {
            "allOf": [
              {
                "$ref": "#/$defs/FilterList"
              },
              {
                "description": "The list of filters that are present in a <code>FilterGroup</code>."
              }
            ]
          },
          "ScopeConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/FilterScopeConfiguration"
              },
              {
                "description": "<p>The configuration that specifies what scope to apply to a <code>FilterGroup</code>.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>"
              }
            ]
          },
          "Status": {
            "allOf": [
              {
                "$ref": "#/$defs/WidgetStatus"
              },
              {
                "description": "The status of the <code>FilterGroup</code>."
              }
            ]
          },
          "CrossDataset": {
            "allOf": [
              {
                "$ref": "#/$defs/CrossDatasetTypes"
              },
              {
                "description": "<p>The filter new feature which can apply filter group to all data sets. Choose one of the following options:</p> <ul> <li> <p> <code>ALL_DATASETS</code> </p> </li> <li> <p> <code>SINGLE_DATASET</code> </p> </li> </ul>"
              }
            ]
          }
        },
        "description": "<p>A grouping of individual filters. Filter groups are applied to the same group of visuals.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/add-a-compound-filter.html\">Adding filter conditions (group filters) with AND and OR operators</a> in the <i>Amazon QuickSight User Guide</i>.</p>"
      },
      "FilterList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Filter"
        },
        "maxItems": 20
      },
      "Filter": {
        "type": "object",
        "properties": {
          "CategoryFilter": {
            "allOf": [
              {
                "$ref": "#/$defs/CategoryFilter"
              },
              {
                "description": "<p>A <code>CategoryFilter</code> filters text values.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/add-a-text-filter-data-prep.html\">Adding text filters</a> in the <i>Amazon QuickSight User Guide</i>.</p>"
              }
            ]
          },
          "NumericRangeFilter": {
            "allOf": [
              {
                "$ref": "#/$defs/NumericRangeFilter"
              },
              {
                "description": "A <code>NumericRangeFilter</code> filters numeric values that are either inside or outside a given numeric range."
              }
            ]
          },
          "NumericEqualityFilter": {
            "allOf": [
              {
                "$ref": "#/$defs/NumericEqualityFilter"
              },
              {
                "description": "A <code>NumericEqualityFilter</code> filters numeric values that equal or do not equal a given numeric value."
              }
            ]
          },
          "TimeEqualityFilter": {
            "allOf": [
              {
                "$ref": "#/$defs/TimeEqualityFilter"
              },
              {
                "description": "A <code>TimeEqualityFilter</code> filters date-time values that equal or do not equal a given date/time value."
              }
            ]
          },
          "TimeRangeFilter": {
            "allOf": [
              {
                "$ref": "#/$defs/TimeRangeFilter"
              },
              {
                "description": "A <code>TimeRangeFilter</code> filters date-time values that are either inside or outside a given date/time range."
              }
            ]
          },
          "RelativeDatesFilter": {
            "allOf": [
              {
                "$ref": "#/$defs/RelativeDatesFilter"
              },
              {
                "description": "A <code>RelativeDatesFilter</code> filters date values that are relative to a given date."
              }
            ]
          },
          "TopBottomFilter": {
            "allOf": [
              {
                "$ref": "#/$defs/TopBottomFilter"
              },
              {
                "description": "A <code>TopBottomFilter</code> filters data to the top or bottom values for a given column."
              }
            ]
          }
        },
        "description": "<p>With a <code>Filter</code>, you can remove portions of data from a particular visual or view.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>"
      },
      "CategoryFilter": {
        "type": "object",
        "required": [
          "FilterId",
          "Column",
          "Configuration"
        ],
        "properties": {
          "FilterId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "An identifier that uniquely identifies a filter within a dashboard, analysis, or template."
              }
            ]
          },
          "Column": {
            "allOf": [
              {
                "$ref": "#/$defs/ColumnIdentifier"
              },
              {
                "description": "The column that the filter is applied to."
              }
            ]
          },
          "Configuration": {
            "allOf": [
              {
                "$ref": "#/$defs/CategoryFilterConfiguration"
              },
              {
                "description": "The configuration for a <code>CategoryFilter</code>."
              }
            ]
          }
        },
        "description": "<p>A <code>CategoryFilter</code> filters text values.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/add-a-text-filter-data-prep.html\">Adding text filters</a> in the <i>Amazon QuickSight User Guide</i>.</p>"
      },
      "CategoryFilterConfiguration": {
        "type": "object",
        "properties": {
          "FilterListConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/FilterListConfiguration"
              },
              {
                "description": "A list of filter configurations. In the Amazon QuickSight console, this filter type is called a filter list."
              }
            ]
          },
          "CustomFilterListConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/CustomFilterListConfiguration"
              },
              {
                "description": "A list of custom filter values. In the Amazon QuickSight console, this filter type is called a custom filter list."
              }
            ]
          },
          "CustomFilterConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/CustomFilterConfiguration"
              },
              {
                "description": "A custom filter that filters based on a single value. This filter can be partially matched."
              }
            ]
          }
        },
        "description": "<p>The configuration for a <code>CategoryFilter</code>.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>"
      },
      "FilterListConfiguration": {
        "type": "object",
        "required": [
          "MatchOperator"
        ],
        "properties": {
          "MatchOperator": {
            "allOf": [
              {
                "$ref": "#/$defs/CategoryFilterMatchOperator"
              },
              {
                "description": "The match operator that is used to determine if a filter should be applied."
              }
            ]
          },
          "CategoryValues": {
            "allOf": [
              {
                "$ref": "#/$defs/CategoryValueList"
              },
              {
                "description": "The list of category values for the filter."
              }
            ]
          },
          "SelectAllOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/CategoryFilterSelectAllOptions"
              },
              {
                "description": "<p>Select all of the values. Null is not the assigned value of select all.</p> <ul> <li> <p> <code>FILTER_ALL_VALUES</code> </p> </li> </ul>"
              }
            ]
          }
        },
        "description": "A list of filter configurations."
      },
      "CategoryFilterMatchOperator": {
        "type": "string",
        "enum": [
          "EQUALS",
          "DOES_NOT_EQUAL",
          "CONTAINS",
          "DOES_NOT_CONTAIN",
          "STARTS_WITH",
          "ENDS_WITH"
        ]
      },
      "CategoryFilterSelectAllOptions": {
        "type": "string",
        "enum": [
          "FILTER_ALL_VALUES"
        ]
      },
      "CustomFilterListConfiguration": {
        "type": "object",
        "required": [
          "MatchOperator",
          "NullOption"
        ],
        "properties": {
          "MatchOperator": {
            "allOf": [
              {
                "$ref": "#/$defs/CategoryFilterMatchOperator"
              },
              {
                "description": "The match operator that is used to determine if a filter should be applied."
              }
            ]
          },
          "CategoryValues": {
            "allOf": [
              {
                "$ref": "#/$defs/CategoryValueList"
              },
              {
                "description": "The list of category values for the filter."
              }
            ]
          },
          "SelectAllOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/CategoryFilterSelectAllOptions"
              },
              {
                "description": "<p>Select all of the values. Null is not the assigned value of select all.</p> <ul> <li> <p> <code>FILTER_ALL_VALUES</code> </p> </li> </ul>"
              }
            ]
          },
          "NullOption": {
            "allOf": [
              {
                "$ref": "#/$defs/FilterNullOption"
              },
              {
                "description": "<p>This option determines how null values should be treated when filtering data.</p> <ul> <li> <p> <code>ALL_VALUES</code>: Include null values in filtered results.</p> </li> <li> <p> <code>NULLS_ONLY</code>: Only include null values in filtered results.</p> </li> <li> <p> <code>NON_NULLS_ONLY</code>: Exclude null values from filtered results.</p> </li> </ul>"
              }
            ]
          }
        },
        "description": "A list of custom filter values."
      },
      "FilterNullOption": {
        "type": "string",
        "enum": [
          "ALL_VALUES",
          "NULLS_ONLY",
          "NON_NULLS_ONLY"
        ]
      },
      "CustomFilterConfiguration": {
        "type": "object",
        "required": [
          "MatchOperator",
          "NullOption"
        ],
        "properties": {
          "MatchOperator": {
            "allOf": [
              {
                "$ref": "#/$defs/CategoryFilterMatchOperator"
              },
              {
                "description": "The match operator that is used to determine if a filter should be applied."
              }
            ]
          },
          "CategoryValue": {
            "allOf": [
              {
                "$ref": "#/$defs/CategoryValue"
              },
              {
                "description": "<p>The category value for the filter.</p> <p>This field is mutually exclusive to <code>ParameterName</code>.</p>"
              }
            ]
          },
          "SelectAllOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/CategoryFilterSelectAllOptions"
              },
              {
                "description": "<p>Select all of the values. Null is not the assigned value of select all.</p> <ul> <li> <p> <code>FILTER_ALL_VALUES</code> </p> </li> </ul>"
              }
            ]
          },
          "ParameterName": {
            "allOf": [
              {
                "$ref": "#/$defs/ParameterName"
              },
              {
                "description": "<p>The parameter whose value should be used for the filter value.</p> <p>This field is mutually exclusive to <code>CategoryValue</code>.</p>"
              }
            ]
          },
          "NullOption": {
            "allOf": [
              {
                "$ref": "#/$defs/FilterNullOption"
              },
              {
                "description": "<p>This option determines how null values should be treated when filtering data.</p> <ul> <li> <p> <code>ALL_VALUES</code>: Include null values in filtered results.</p> </li> <li> <p> <code>NULLS_ONLY</code>: Only include null values in filtered results.</p> </li> <li> <p> <code>NON_NULLS_ONLY</code>: Exclude null values from filtered results.</p> </li> </ul>"
              }
            ]
          }
        },
        "description": "A custom filter that filters based on a single value. This filter can be partially matched."
      },
      "NumericRangeFilter": {
        "type": "object",
        "required": [
          "FilterId",
          "Column",
          "NullOption"
        ],
        "properties": {
          "FilterId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "An identifier that uniquely identifies a filter within a dashboard, analysis, or template."
              }
            ]
          },
          "Column": {
            "allOf": [
              {
                "$ref": "#/$defs/ColumnIdentifier"
              },
              {
                "description": "The column that the filter is applied to."
              }
            ]
          },
          "IncludeMinimum": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Determines whether the minimum value in the filter value range should be included in the filtered results."
              }
            ]
          },
          "IncludeMaximum": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Determines whether the maximum value in the filter value range should be included in the filtered results."
              }
            ]
          },
          "RangeMinimum": {
            "allOf": [
              {
                "$ref": "#/$defs/NumericRangeFilterValue"
              },
              {
                "description": "The minimum value for the filter value range."
              }
            ]
          },
          "RangeMaximum": {
            "allOf": [
              {
                "$ref": "#/$defs/NumericRangeFilterValue"
              },
              {
                "description": "The maximum value for the filter value range."
              }
            ]
          },
          "SelectAllOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/NumericFilterSelectAllOptions"
              },
              {
                "description": "<p>Select all of the values. Null is not the assigned value of select all.</p> <ul> <li> <p> <code>FILTER_ALL_VALUES</code> </p> </li> </ul>"
              }
            ]
          },
          "AggregationFunction": {
            "allOf": [
              {
                "$ref": "#/$defs/AggregationFunction"
              },
              {
                "description": "The aggregation function of the filter."
              }
            ]
          },
          "NullOption": {
            "allOf": [
              {
                "$ref": "#/$defs/FilterNullOption"
              },
              {
                "description": "<p>This option determines how null values should be treated when filtering data.</p> <ul> <li> <p> <code>ALL_VALUES</code>: Include null values in filtered results.</p> </li> <li> <p> <code>NULLS_ONLY</code>: Only include null values in filtered results.</p> </li> <li> <p> <code>NON_NULLS_ONLY</code>: Exclude null values from filtered results.</p> </li> </ul>"
              }
            ]
          }
        },
        "description": "A <code>NumericRangeFilter</code> filters values that are within the value range."
      },
      "Boolean": {
        "type": "boolean"
      },
      "NumericRangeFilterValue": {
        "type": "object",
        "properties": {
          "StaticValue": {
            "allOf": [
              {
                "$ref": "#/$defs/Double"
              },
              {
                "description": "The static value of the numeric range filter."
              }
            ]
          },
          "Parameter": {
            "allOf": [
              {
                "$ref": "#/$defs/ParameterName"
              },
              {
                "description": "The parameter that is used in the numeric range."
              }
            ]
          }
        },
        "description": "The value input pf the numeric range filter."
      },
      "NumericFilterSelectAllOptions": {
        "type": "string",
        "enum": [
          "FILTER_ALL_VALUES"
        ]
      },
      "NumericEqualityFilter": {
        "type": "object",
        "required": [
          "FilterId",
          "Column",
          "MatchOperator",
          "NullOption"
        ],
        "properties": {
          "FilterId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "An identifier that uniquely identifies a filter within a dashboard, analysis, or template."
              }
            ]
          },
          "Column": {
            "allOf": [
              {
                "$ref": "#/$defs/ColumnIdentifier"
              },
              {
                "description": "The column that the filter is applied to."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/Double"
              },
              {
                "description": "The input value."
              }
            ]
          },
          "SelectAllOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/NumericFilterSelectAllOptions"
              },
              {
                "description": "<p>Select all of the values. Null is not the assigned value of select all.</p> <ul> <li> <p> <code>FILTER_ALL_VALUES</code> </p> </li> </ul>"
              }
            ]
          },
          "MatchOperator": {
            "allOf": [
              {
                "$ref": "#/$defs/NumericEqualityMatchOperator"
              },
              {
                "description": "The match operator that is used to determine if a filter should be applied."
              }
            ]
          },
          "AggregationFunction": {
            "allOf": [
              {
                "$ref": "#/$defs/AggregationFunction"
              },
              {
                "description": "The aggregation function of the filter."
              }
            ]
          },
          "ParameterName": {
            "allOf": [
              {
                "$ref": "#/$defs/ParameterName"
              },
              {
                "description": "The parameter whose value should be used for the filter value."
              }
            ]
          },
          "NullOption": {
            "allOf": [
              {
                "$ref": "#/$defs/FilterNullOption"
              },
              {
                "description": "<p>This option determines how null values should be treated when filtering data.</p> <ul> <li> <p> <code>ALL_VALUES</code>: Include null values in filtered results.</p> </li> <li> <p> <code>NULLS_ONLY</code>: Only include null values in filtered results.</p> </li> <li> <p> <code>NON_NULLS_ONLY</code>: Exclude null values from filtered results.</p> </li> </ul>"
              }
            ]
          }
        },
        "description": "A <code>NumericEqualityFilter</code> filters values that are equal to the specified value."
      },
      "NumericEqualityMatchOperator": {
        "type": "string",
        "enum": [
          "EQUALS",
          "DOES_NOT_EQUAL"
        ]
      },
      "TimeEqualityFilter": {
        "type": "object",
        "required": [
          "FilterId",
          "Column"
        ],
        "properties": {
          "FilterId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "An identifier that uniquely identifies a filter within a dashboard, analysis, or template."
              }
            ]
          },
          "Column": {
            "allOf": [
              {
                "$ref": "#/$defs/ColumnIdentifier"
              },
              {
                "description": "The column that the filter is applied to."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/Timestamp"
              },
              {
                "description": "<p>The value of a <code>TimeEquality</code> filter.</p> <p>This field is mutually exclusive to <code>ParameterName</code>.</p>"
              }
            ]
          },
          "ParameterName": {
            "allOf": [
              {
                "$ref": "#/$defs/ParameterName"
              },
              {
                "description": "<p>The parameter whose value should be used for the filter value.</p> <p>This field is mutually exclusive to <code>Value</code>.</p>"
              }
            ]
          },
          "TimeGranularity": {
            "allOf": [
              {
                "$ref": "#/$defs/TimeGranularity"
              },
              {
                "description": "The level of time precision that is used to aggregate <code>DateTime</code> values."
              }
            ]
          }
        },
        "description": "A <code>TimeEqualityFilter</code> filters values that are equal to a given value."
      },
      "TimeRangeFilter": {
        "type": "object",
        "required": [
          "FilterId",
          "Column",
          "NullOption"
        ],
        "properties": {
          "FilterId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "An identifier that uniquely identifies a filter within a dashboard, analysis, or template."
              }
            ]
          },
          "Column": {
            "allOf": [
              {
                "$ref": "#/$defs/ColumnIdentifier"
              },
              {
                "description": "The column that the filter is applied to."
              }
            ]
          },
          "IncludeMinimum": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Determines whether the minimum value in the filter value range should be included in the filtered results."
              }
            ]
          },
          "IncludeMaximum": {
            "allOf": [
              {
                "$ref": "#/$defs/Boolean"
              },
              {
                "description": "Determines whether the maximum value in the filter value range should be included in the filtered results."
              }
            ]
          },
          "RangeMinimumValue": {
            "allOf": [
              {
                "$ref": "#/$defs/TimeRangeFilterValue"
              },
              {
                "description": "The minimum value for the filter value range."
              }
            ]
          },
          "RangeMaximumValue": {
            "allOf": [
              {
                "$ref": "#/$defs/TimeRangeFilterValue"
              },
              {
                "description": "The maximum value for the filter value range."
              }
            ]
          },
          "NullOption": {
            "allOf": [
              {
                "$ref": "#/$defs/FilterNullOption"
              },
              {
                "description": "<p>This option determines how null values should be treated when filtering data.</p> <ul> <li> <p> <code>ALL_VALUES</code>: Include null values in filtered results.</p> </li> <li> <p> <code>NULLS_ONLY</code>: Only include null values in filtered results.</p> </li> <li> <p> <code>NON_NULLS_ONLY</code>: Exclude null values from filtered results.</p> </li> </ul>"
              }
            ]
          },
          "ExcludePeriodConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/ExcludePeriodConfiguration"
              },
              {
                "description": "The exclude period of the time range filter."
              }
            ]
          },
          "TimeGranularity": {
            "allOf": [
              {
                "$ref": "#/$defs/TimeGranularity"
              },
              {
                "description": "The level of time precision that is used to aggregate <code>DateTime</code> values."
              }
            ]
          }
        },
        "description": "A <code>TimeRangeFilter</code> filters values that are between two specified values."
      },
      "TimeRangeFilterValue": {
        "type": "object",
        "properties": {
          "StaticValue": {
            "allOf": [
              {
                "$ref": "#/$defs/Timestamp"
              },
              {
                "description": "The static input value."
              }
            ]
          },
          "RollingDate": {
            "allOf": [
              {
                "$ref": "#/$defs/RollingDateConfiguration"
              },
              {
                "description": "The rolling date input value."
              }
            ]
          },
          "Parameter": {
            "allOf": [
              {
                "$ref": "#/$defs/ParameterName"
              },
              {
                "description": "The parameter type input value."
              }
            ]
          }
        },
        "description": "<p>The value of a time range filter.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>"
      },
      "ExcludePeriodConfiguration": {
        "type": "object",
        "required": [
          "Amount",
          "Granularity"
        ],
        "properties": {
          "Amount": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "The amount or number of the exclude period."
              }
            ]
          },
          "Granularity": {
            "allOf": [
              {
                "$ref": "#/$defs/TimeGranularity"
              },
              {
                "description": "The granularity or unit (day, month, year) of the exclude period."
              }
            ]
          },
          "Status": {
            "allOf": [
              {
                "$ref": "#/$defs/WidgetStatus"
              },
              {
                "description": "<p>The status of the exclude period. Choose from the following options:</p> <ul> <li> <p> <code>ENABLED</code> </p> </li> <li> <p> <code>DISABLED</code> </p> </li> </ul>"
              }
            ]
          }
        },
        "description": "The exclude period of <code>TimeRangeFilter</code> or <code>RelativeDatesFilter</code>."
      },
      "RelativeDatesFilter": {
        "type": "object",
        "required": [
          "FilterId",
          "Column",
          "AnchorDateConfiguration",
          "TimeGranularity",
          "RelativeDateType",
          "NullOption"
        ],
        "properties": {
          "FilterId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "An identifier that uniquely identifies a filter within a dashboard, analysis, or template."
              }
            ]
          },
          "Column": {
            "allOf": [
              {
                "$ref": "#/$defs/ColumnIdentifier"
              },
              {
                "description": "The column that the filter is applied to."
              }
            ]
          },
          "AnchorDateConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/AnchorDateConfiguration"
              },
              {
                "description": "The date configuration of the filter."
              }
            ]
          },
          "MinimumGranularity": {
            "allOf": [
              {
                "$ref": "#/$defs/TimeGranularity"
              },
              {
                "description": "The minimum granularity (period granularity) of the relative dates filter."
              }
            ]
          },
          "TimeGranularity": {
            "allOf": [
              {
                "$ref": "#/$defs/TimeGranularity"
              },
              {
                "description": "The level of time precision that is used to aggregate <code>DateTime</code> values."
              }
            ]
          },
          "RelativeDateType": {
            "allOf": [
              {
                "$ref": "#/$defs/RelativeDateType"
              },
              {
                "description": "<p>The range date type of the filter. Choose one of the options below:</p> <ul> <li> <p> <code>PREVIOUS</code> </p> </li> <li> <p> <code>THIS</code> </p> </li> <li> <p> <code>LAST</code> </p> </li> <li> <p> <code>NOW</code> </p> </li> <li> <p> <code>NEXT</code> </p> </li> </ul>"
              }
            ]
          },
          "RelativeDateValue": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "The date value of the filter."
              }
            ]
          },
          "ParameterName": {
            "allOf": [
              {
                "$ref": "#/$defs/ParameterName"
              },
              {
                "description": "The parameter whose value should be used for the filter value."
              }
            ]
          },
          "NullOption": {
            "allOf": [
              {
                "$ref": "#/$defs/FilterNullOption"
              },
              {
                "description": "<p>This option determines how null values should be treated when filtering data.</p> <ul> <li> <p> <code>ALL_VALUES</code>: Include null values in filtered results.</p> </li> <li> <p> <code>NULLS_ONLY</code>: Only include null values in filtered results.</p> </li> <li> <p> <code>NON_NULLS_ONLY</code>: Exclude null values from filtered results.</p> </li> </ul>"
              }
            ]
          },
          "ExcludePeriodConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/ExcludePeriodConfiguration"
              },
              {
                "description": "The configuration for the exclude period of the filter."
              }
            ]
          }
        },
        "description": "A <code>RelativeDatesFilter</code> filters relative dates values."
      },
      "AnchorDateConfiguration": {
        "type": "object",
        "properties": {
          "AnchorOption": {
            "allOf": [
              {
                "$ref": "#/$defs/AnchorOption"
              },
              {
                "description": "<p>The options for the date configuration. Choose one of the options below:</p> <ul> <li> <p> <code>NOW</code> </p> </li> </ul>"
              }
            ]
          },
          "ParameterName": {
            "allOf": [
              {
                "$ref": "#/$defs/ParameterName"
              },
              {
                "description": "The name of the parameter that is used for the anchor date configuration."
              }
            ]
          }
        },
        "description": "The date configuration of the filter."
      },
      "AnchorOption": {
        "type": "string",
        "enum": [
          "NOW"
        ]
      },
      "RelativeDateType": {
        "type": "string",
        "enum": [
          "PREVIOUS",
          "THIS",
          "LAST",
          "NOW",
          "NEXT"
        ]
      },
      "TopBottomFilter": {
        "type": "object",
        "required": [
          "FilterId",
          "Column",
          "AggregationSortConfigurations"
        ],
        "properties": {
          "FilterId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "An identifier that uniquely identifies a filter within a dashboard, analysis, or template."
              }
            ]
          },
          "Column": {
            "allOf": [
              {
                "$ref": "#/$defs/ColumnIdentifier"
              },
              {
                "description": "The column that the filter is applied to."
              }
            ]
          },
          "Limit": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "The number of items to include in the top bottom filter results."
              }
            ]
          },
          "AggregationSortConfigurations": {
            "allOf": [
              {
                "$ref": "#/$defs/AggregationSortConfigurationList"
              },
              {
                "description": "The aggregation and sort configuration of the top bottom filter."
              }
            ]
          },
          "TimeGranularity": {
            "allOf": [
              {
                "$ref": "#/$defs/TimeGranularity"
              },
              {
                "description": "The level of time precision that is used to aggregate <code>DateTime</code> values."
              }
            ]
          },
          "ParameterName": {
            "allOf": [
              {
                "$ref": "#/$defs/ParameterName"
              },
              {
                "description": "The parameter whose value should be used for the filter value."
              }
            ]
          }
        },
        "description": "A <code>TopBottomFilter</code> filters values that are at the top or the bottom."
      },
      "AggregationSortConfigurationList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/AggregationSortConfiguration"
        },
        "maxItems": 100
      },
      "AggregationSortConfiguration": {
        "type": "object",
        "required": [
          "Column",
          "SortDirection"
        ],
        "properties": {
          "Column": {
            "allOf": [
              {
                "$ref": "#/$defs/ColumnIdentifier"
              },
              {
                "description": "The column that determines the sort order of aggregated values."
              }
            ]
          },
          "SortDirection": {
            "allOf": [
              {
                "$ref": "#/$defs/SortDirection"
              },
              {
                "description": "<p>The sort direction of values.</p> <ul> <li> <p> <code>ASC</code>: Sort in ascending order.</p> </li> <li> <p> <code>DESC</code>: Sort in descending order.</p> </li> </ul>"
              }
            ]
          },
          "AggregationFunction": {
            "allOf": [
              {
                "$ref": "#/$defs/AggregationFunction"
              },
              {
                "description": "The function that aggregates the values in <code>Column</code>."
              }
            ]
          }
        },
        "description": "The configuration options to sort aggregated values."
      },
      "FilterScopeConfiguration": {
        "type": "object",
        "properties": {
          "SelectedSheets": {
            "allOf": [
              {
                "$ref": "#/$defs/SelectedSheetsFilterScopeConfiguration"
              },
              {
                "description": "The configuration for applying a filter to specific sheets."
              }
            ]
          }
        },
        "description": "<p>The scope configuration for a <code>FilterGroup</code>.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>"
      },
      "SelectedSheetsFilterScopeConfiguration": {
        "type": "object",
        "properties": {
          "SheetVisualScopingConfigurations": {
            "allOf": [
              {
                "$ref": "#/$defs/SheetVisualScopingConfigurations"
              },
              {
                "description": "The sheet ID and visual IDs of the sheet and visuals that the filter is applied to."
              }
            ]
          }
        },
        "description": "<p>The configuration for applying a filter to specific sheets or visuals. You can apply this filter to multiple visuals that are on one sheet or to all visuals on a sheet.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>"
      },
      "SheetVisualScopingConfigurations": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/SheetVisualScopingConfiguration"
        },
        "minItems": 1,
        "maxItems": 50
      },
      "SheetVisualScopingConfiguration": {
        "type": "object",
        "required": [
          "SheetId",
          "Scope"
        ],
        "properties": {
          "SheetId": {
            "allOf": [
              {
                "$ref": "#/$defs/ShortRestrictiveResourceId"
              },
              {
                "description": "The selected sheet that the filter is applied to."
              }
            ]
          },
          "Scope": {
            "allOf": [
              {
                "$ref": "#/$defs/FilterVisualScope"
              },
              {
                "description": "<p>The scope of the applied entities. Choose one of the following options:</p> <ul> <li> <p> <code>ALL_VISUALS</code> </p> </li> <li> <p> <code>SELECTED_VISUALS</code> </p> </li> </ul>"
              }
            ]
          },
          "VisualIds": {
            "allOf": [
              {
                "$ref": "#/$defs/FilteredVisualsList"
              },
              {
                "description": "The selected visuals that the filter is applied to."
              }
            ]
          }
        },
        "description": "The filter that is applied to the options."
      },
      "FilterVisualScope": {
        "type": "string",
        "enum": [
          "ALL_VISUALS",
          "SELECTED_VISUALS"
        ]
      },
      "FilteredVisualsList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ShortRestrictiveResourceId"
        },
        "maxItems": 50
      },
      "CrossDatasetTypes": {
        "type": "string",
        "enum": [
          "ALL_DATASETS",
          "SINGLE_DATASET"
        ]
      },
      "ColumnConfigurationList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ColumnConfiguration"
        },
        "maxItems": 200
      },
      "ColumnConfiguration": {
        "type": "object",
        "required": [
          "Column"
        ],
        "properties": {
          "Column": {
            "allOf": [
              {
                "$ref": "#/$defs/ColumnIdentifier"
              },
              {
                "description": "The column."
              }
            ]
          },
          "FormatConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/FormatConfiguration"
              },
              {
                "description": "The format configuration of a column."
              }
            ]
          },
          "Role": {
            "allOf": [
              {
                "$ref": "#/$defs/ColumnRole"
              },
              {
                "description": "The role of the column."
              }
            ]
          },
          "ColorsConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/ColorsConfiguration"
              },
              {
                "description": "The color configurations of the column."
              }
            ]
          }
        },
        "description": "The general configuration of a column."
      },
      "ColumnRole": {
        "type": "string",
        "enum": [
          "DIMENSION",
          "MEASURE"
        ]
      },
      "ColorsConfiguration": {
        "type": "object",
        "properties": {
          "CustomColors": {
            "allOf": [
              {
                "$ref": "#/$defs/CustomColorsList"
              },
              {
                "description": "A list of up to 50 custom colors."
              }
            ]
          }
        },
        "description": "The color configurations for a column."
      },
      "CustomColorsList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/CustomColor"
        },
        "maxItems": 50
      },
      "CustomColor": {
        "type": "object",
        "required": [
          "Color"
        ],
        "properties": {
          "FieldValue": {
            "allOf": [
              {
                "$ref": "#/$defs/FieldValue"
              },
              {
                "description": "The data value that the color is applied to."
              }
            ]
          },
          "Color": {
            "allOf": [
              {
                "$ref": "#/$defs/HexColor"
              },
              {
                "description": "The color that is applied to the data value."
              }
            ]
          },
          "SpecialValue": {
            "allOf": [
              {
                "$ref": "#/$defs/SpecialValue"
              },
              {
                "description": "The value of a special data value."
              }
            ]
          }
        },
        "description": "Determines the color that's applied to a particular data value in a column."
      },
      "SpecialValue": {
        "type": "string",
        "enum": [
          "EMPTY",
          "NULL",
          "OTHER"
        ]
      },
      "AnalysisDefaults": {
        "type": "object",
        "required": [
          "DefaultNewSheetConfiguration"
        ],
        "properties": {
          "DefaultNewSheetConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/DefaultNewSheetConfiguration"
              },
              {
                "description": "The configuration for default new sheet settings."
              }
            ]
          }
        },
        "description": "The configuration for default analysis settings."
      },
      "DefaultNewSheetConfiguration": {
        "type": "object",
        "properties": {
          "InteractiveLayoutConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/DefaultInteractiveLayoutConfiguration"
              },
              {
                "description": "The options that determine the default settings for interactive layout configuration."
              }
            ]
          },
          "PaginatedLayoutConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/DefaultPaginatedLayoutConfiguration"
              },
              {
                "description": "The options that determine the default settings for a paginated layout configuration."
              }
            ]
          },
          "SheetContentType": {
            "allOf": [
              {
                "$ref": "#/$defs/SheetContentType"
              },
              {
                "description": "The option that determines the sheet content type."
              }
            ]
          }
        },
        "description": "The configuration for default new sheet settings."
      },
      "DefaultInteractiveLayoutConfiguration": {
        "type": "object",
        "properties": {
          "Grid": {
            "allOf": [
              {
                "$ref": "#/$defs/DefaultGridLayoutConfiguration"
              },
              {
                "description": "The options that determine the default settings for a grid layout configuration."
              }
            ]
          },
          "FreeForm": {
            "allOf": [
              {
                "$ref": "#/$defs/DefaultFreeFormLayoutConfiguration"
              },
              {
                "description": "The options that determine the default settings of a free-form layout configuration."
              }
            ]
          }
        },
        "description": "The options that determine the default settings for interactive layout configuration."
      },
      "DefaultGridLayoutConfiguration": {
        "type": "object",
        "required": [
          "CanvasSizeOptions"
        ],
        "properties": {
          "CanvasSizeOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/GridLayoutCanvasSizeOptions"
              },
              {
                "description": "Determines the screen canvas size options for a grid layout."
              }
            ]
          }
        },
        "description": "The options that determine the default settings for a grid layout configuration."
      },
      "DefaultFreeFormLayoutConfiguration": {
        "type": "object",
        "required": [
          "CanvasSizeOptions"
        ],
        "properties": {
          "CanvasSizeOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/FreeFormLayoutCanvasSizeOptions"
              },
              {
                "description": "Determines the screen canvas size options for a free-form layout."
              }
            ]
          }
        },
        "description": "The options that determine the default settings of a free-form layout configuration."
      },
      "DefaultPaginatedLayoutConfiguration": {
        "type": "object",
        "properties": {
          "SectionBased": {
            "allOf": [
              {
                "$ref": "#/$defs/DefaultSectionBasedLayoutConfiguration"
              },
              {
                "description": "The options that determine the default settings for a section-based layout configuration."
              }
            ]
          }
        },
        "description": "The options that determine the default settings for a paginated layout configuration."
      },
      "DefaultSectionBasedLayoutConfiguration": {
        "type": "object",
        "required": [
          "CanvasSizeOptions"
        ],
        "properties": {
          "CanvasSizeOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/SectionBasedLayoutCanvasSizeOptions"
              },
              {
                "description": "Determines the screen canvas size options for a section-based layout."
              }
            ]
          }
        },
        "description": "The options that determine the default settings for a section-based layout configuration."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "http://quicksight.us-east-1.amazonaws.com/accounts/{AwsAccountId}/dashboards/{DashboardId}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Arn**",
            "**VersionArn**",
            "**DashboardId**",
            "**CreationStatus**",
            "**Status**",
            "**RequestId**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
