{
  "name": "CreateExperimentTemplate",
  "description": "<p>Creates an experiment template. </p> <p>An experiment template includes the following components:</p> <ul> <li> <p> <b>Targets</b>: A target can be a specific resource in your Amazon Web Services environment, or one or more resources that match criteria that you specify, for example, resources that have specific tags.</p> </li> <li> <p> <b>Actions</b>: The actions to carry out on the target. You can specify multiple actions, the duration of each action, and when to start each action during an experiment.</p> </li> <li> <p> <b>Stop conditions</b>: If a stop condition is triggered while an experiment is running, the experiment is automatically stopped. You can define a stop condition as a CloudWatch alarm.</p> </li> </ul> <p>For more information, see <a href=\"https://docs.aws.amazon.com/fis/latest/userguide/experiment-templates.html\">Experiment templates</a> in the <i>Fault Injection Simulator User Guide</i>.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "clientToken",
          "description",
          "stopConditions",
          "actions",
          "roleArn"
        ],
        "properties": {
          "clientToken": {
            "description": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.",
            "type": "string",
            "pattern": "[\\S]+",
            "minLength": 1,
            "maxLength": 1024
          },
          "description": {
            "description": "A description for the experiment template.",
            "type": "string",
            "pattern": "[\\s\\S]+",
            "maxLength": 512
          },
          "stopConditions": {
            "description": "The stop conditions.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/CreateExperimentTemplateStopConditionInput"
            }
          },
          "targets": {
            "description": "The targets for the experiment.",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/CreateExperimentTemplateTargetInput"
            }
          },
          "actions": {
            "description": "The actions for the experiment.",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/CreateExperimentTemplateActionInput"
            }
          },
          "roleArn": {
            "description": "The Amazon Resource Name (ARN) of an IAM role that grants the FIS service permission to perform service actions on your behalf.",
            "type": "string",
            "pattern": "[\\S]+",
            "minLength": 20,
            "maxLength": 2048
          },
          "tags": {
            "description": "The tags to apply to the experiment template.",
            "type": "object",
            "maxProperties": 50,
            "additionalProperties": {
              "$ref": "#/$defs/TagValue"
            }
          },
          "logConfiguration": {
            "description": "Specifies the configuration for experiment logging.",
            "type": "object",
            "properties": {
              "cloudWatchLogsConfiguration": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ExperimentTemplateCloudWatchLogsLogConfigurationInput"
                  },
                  {
                    "description": "The configuration for experiment logging to Amazon CloudWatch Logs."
                  }
                ]
              },
              "s3Configuration": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ExperimentTemplateS3LogConfigurationInput"
                  },
                  {
                    "description": "The configuration for experiment logging to Amazon S3."
                  }
                ]
              },
              "logSchemaVersion": {
                "allOf": [
                  {
                    "$ref": "#/$defs/LogSchemaVersion"
                  },
                  {
                    "description": "The schema version."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "CreateExperimentTemplateStopConditionInput": {
        "type": "object",
        "required": [
          "source"
        ],
        "properties": {
          "source": {
            "allOf": [
              {
                "$ref": "#/$defs/StopConditionSource"
              },
              {
                "description": "The source for the stop condition. Specify <code>aws:cloudwatch:alarm</code> if the stop condition is defined by a CloudWatch alarm. Specify <code>none</code> if there is no stop condition."
              }
            ]
          },
          "value": {
            "allOf": [
              {
                "$ref": "#/$defs/StopConditionValue"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the CloudWatch alarm. This is required if the source is a CloudWatch alarm."
              }
            ]
          }
        },
        "description": "Specifies a stop condition for an experiment template."
      },
      "StopConditionSource": {
        "type": "string",
        "pattern": "[\\S]+",
        "maxLength": 64
      },
      "StopConditionValue": {
        "type": "string",
        "pattern": "[\\s\\S]+",
        "minLength": 20,
        "maxLength": 2048
      },
      "CreateExperimentTemplateTargetInput": {
        "type": "object",
        "required": [
          "resourceType",
          "selectionMode"
        ],
        "properties": {
          "resourceType": {
            "allOf": [
              {
                "$ref": "#/$defs/TargetResourceTypeId"
              },
              {
                "description": "The resource type. The resource type must be supported for the specified action."
              }
            ]
          },
          "resourceArns": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceArnList"
              },
              {
                "description": "The Amazon Resource Names (ARNs) of the resources."
              }
            ]
          },
          "resourceTags": {
            "allOf": [
              {
                "$ref": "#/$defs/TagMap"
              },
              {
                "description": "The tags for the target resources."
              }
            ]
          },
          "filters": {
            "allOf": [
              {
                "$ref": "#/$defs/ExperimentTemplateTargetFilterInputList"
              },
              {
                "description": "The filters to apply to identify target resources using specific attributes."
              }
            ]
          },
          "selectionMode": {
            "allOf": [
              {
                "$ref": "#/$defs/ExperimentTemplateTargetSelectionMode"
              },
              {
                "description": "<p>Scopes the identified resources to a specific count of the resources at random, or a percentage of the resources. All identified resources are included in the target.</p> <ul> <li> <p>ALL - Run the action on all identified targets. This is the default.</p> </li> <li> <p>COUNT(n) - Run the action on the specified number of targets, chosen from the identified targets at random. For example, COUNT(1) selects one of the targets.</p> </li> <li> <p>PERCENT(n) - Run the action on the specified percentage of targets, chosen from the identified targets at random. For example, PERCENT(25) selects 25% of the targets.</p> </li> </ul>"
              }
            ]
          },
          "parameters": {
            "allOf": [
              {
                "$ref": "#/$defs/ExperimentTemplateTargetParameterMap"
              },
              {
                "description": "The resource type parameters."
              }
            ]
          }
        },
        "description": "<p>Specifies a target for an experiment. You must specify at least one Amazon Resource Name (ARN) or at least one resource tag. You cannot specify both ARNs and tags.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/fis/latest/userguide/targets.html\">Targets</a> in the <i>Fault Injection Simulator User Guide</i>.</p>"
      },
      "TargetResourceTypeId": {
        "type": "string",
        "pattern": "[\\S]+",
        "maxLength": 128
      },
      "ResourceArnList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ResourceArn"
        },
        "maxItems": 5
      },
      "ResourceArn": {
        "type": "string",
        "pattern": "[\\S]+",
        "minLength": 20,
        "maxLength": 2048
      },
      "TagMap": {
        "type": "object",
        "maxProperties": 50,
        "additionalProperties": {
          "$ref": "#/$defs/TagValue"
        }
      },
      "TagValue": {
        "type": "string",
        "pattern": "[\\s\\S]*",
        "maxLength": 256
      },
      "ExperimentTemplateTargetFilterInputList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ExperimentTemplateTargetInputFilter"
        }
      },
      "ExperimentTemplateTargetInputFilter": {
        "type": "object",
        "required": [
          "path",
          "values"
        ],
        "properties": {
          "path": {
            "allOf": [
              {
                "$ref": "#/$defs/ExperimentTemplateTargetFilterPath"
              },
              {
                "description": "The attribute path for the filter."
              }
            ]
          },
          "values": {
            "allOf": [
              {
                "$ref": "#/$defs/ExperimentTemplateTargetFilterValues"
              },
              {
                "description": "The attribute values for the filter."
              }
            ]
          }
        },
        "description": "<p>Specifies a filter used for the target resource input in an experiment template.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/fis/latest/userguide/targets.html#target-filters\">Resource filters</a> in the <i>Fault Injection Simulator User Guide</i>.</p>"
      },
      "ExperimentTemplateTargetFilterPath": {
        "type": "string",
        "pattern": "[\\S]+",
        "maxLength": 256
      },
      "ExperimentTemplateTargetFilterValues": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ExperimentTemplateTargetFilterValue"
        }
      },
      "ExperimentTemplateTargetFilterValue": {
        "type": "string",
        "pattern": "[\\S]+",
        "maxLength": 128
      },
      "ExperimentTemplateTargetSelectionMode": {
        "type": "string",
        "pattern": "[\\S]+",
        "maxLength": 64
      },
      "ExperimentTemplateTargetParameterMap": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/ExperimentTemplateTargetParameterValue"
        }
      },
      "ExperimentTemplateTargetParameterValue": {
        "type": "string",
        "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]+$",
        "minLength": 1,
        "maxLength": 1024
      },
      "CreateExperimentTemplateActionInput": {
        "type": "object",
        "required": [
          "actionId"
        ],
        "properties": {
          "actionId": {
            "allOf": [
              {
                "$ref": "#/$defs/ActionId"
              },
              {
                "description": "The ID of the action. The format of the action ID is: aws:<i>service-name</i>:<i>action-type</i>."
              }
            ]
          },
          "description": {
            "allOf": [
              {
                "$ref": "#/$defs/ExperimentTemplateActionDescription"
              },
              {
                "description": "A description for the action."
              }
            ]
          },
          "parameters": {
            "allOf": [
              {
                "$ref": "#/$defs/ExperimentTemplateActionParameterMap"
              },
              {
                "description": "The parameters for the action, if applicable."
              }
            ]
          },
          "targets": {
            "allOf": [
              {
                "$ref": "#/$defs/ExperimentTemplateActionTargetMap"
              },
              {
                "description": "The targets for the action."
              }
            ]
          },
          "startAfter": {
            "allOf": [
              {
                "$ref": "#/$defs/ExperimentTemplateActionStartAfterList"
              },
              {
                "description": "The name of the action that must be completed before the current action starts. Omit this parameter to run the action at the start of the experiment."
              }
            ]
          }
        },
        "description": "<p>Specifies an action for an experiment template.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/fis/latest/userguide/actions.html\">Actions</a> in the <i>Fault Injection Simulator User Guide</i>.</p>"
      },
      "ActionId": {
        "type": "string",
        "pattern": "[\\S]+",
        "maxLength": 128
      },
      "ExperimentTemplateActionDescription": {
        "type": "string",
        "pattern": "[\\s\\S]+",
        "maxLength": 512
      },
      "ExperimentTemplateActionParameterMap": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/ExperimentTemplateActionParameter"
        }
      },
      "ExperimentTemplateActionParameter": {
        "type": "string",
        "pattern": "[\\S]+",
        "maxLength": 1024
      },
      "ExperimentTemplateActionTargetMap": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/ExperimentTemplateTargetName"
        }
      },
      "ExperimentTemplateTargetName": {
        "type": "string",
        "pattern": "[\\S]+",
        "maxLength": 64
      },
      "ExperimentTemplateActionStartAfterList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ExperimentTemplateActionStartAfter"
        }
      },
      "ExperimentTemplateActionStartAfter": {
        "type": "string",
        "pattern": "[\\S]+",
        "maxLength": 64
      },
      "ExperimentTemplateCloudWatchLogsLogConfigurationInput": {
        "type": "object",
        "required": [
          "logGroupArn"
        ],
        "properties": {
          "logGroupArn": {
            "allOf": [
              {
                "$ref": "#/$defs/CloudWatchLogGroupArn"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the destination Amazon CloudWatch Logs log group."
              }
            ]
          }
        },
        "description": "Specifies the configuration for experiment logging to Amazon CloudWatch Logs."
      },
      "CloudWatchLogGroupArn": {
        "type": "string",
        "pattern": "[\\S]+",
        "minLength": 20,
        "maxLength": 2048
      },
      "ExperimentTemplateS3LogConfigurationInput": {
        "type": "object",
        "required": [
          "bucketName"
        ],
        "properties": {
          "bucketName": {
            "allOf": [
              {
                "$ref": "#/$defs/S3BucketName"
              },
              {
                "description": "The name of the destination bucket."
              }
            ]
          },
          "prefix": {
            "allOf": [
              {
                "$ref": "#/$defs/S3ObjectKey"
              },
              {
                "description": "The bucket prefix."
              }
            ]
          }
        },
        "description": "Specifies the configuration for experiment logging to Amazon S3."
      },
      "S3BucketName": {
        "type": "string",
        "pattern": "[\\S]+",
        "minLength": 3,
        "maxLength": 63
      },
      "S3ObjectKey": {
        "type": "string",
        "pattern": "[\\s\\S]+",
        "minLength": 1,
        "maxLength": 1024
      },
      "LogSchemaVersion": {
        "type": "integer"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://fis.us-east-1.amazonaws.com/experimentTemplates"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**experimentTemplate**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
