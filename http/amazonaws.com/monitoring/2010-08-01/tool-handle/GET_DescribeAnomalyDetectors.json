{
  "name": "GET_DescribeAnomalyDetectors",
  "description": "Lists the anomaly detection models that you have created in your account. For single metric anomaly detectors, you can list all of the models in your account or filter the results to only the models that are related to a certain namespace, metric name, or metric dimension. For metric math anomaly detectors, you can list them by adding <code>METRIC_MATH</code> to the <code>AnomalyDetectorTypes</code> array. This will return all metric math anomaly detectors in your account.",
  "parameters": {
    "type": "object",
    "properties": {
      "NextToken": {
        "type": "string",
        "description": "Use the token returned by the previous operation to request the next page of results."
      },
      "MaxResults": {
        "type": "integer",
        "minimum": 1,
        "description": "<p>The maximum number of results to return in one operation. The maximum value that you can specify is 100.</p> <p>To retrieve the remaining results, make another call with the returned <code>NextToken</code> value. </p>"
      },
      "Namespace": {
        "type": "string",
        "pattern": "[^:].*",
        "minLength": 1,
        "maxLength": 255,
        "description": "Limits the results to only the anomaly detection models that are associated with the specified namespace."
      },
      "MetricName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "description": "Limits the results to only the anomaly detection models that are associated with the specified metric name. If there are multiple metrics with this name in different namespaces that have anomaly detection models, they're all returned."
      },
      "Dimensions": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Dimension"
        },
        "maxItems": 30,
        "description": "Limits the results to only the anomaly detection models that are associated with the specified metric dimensions. If there are multiple metrics that have these dimensions and have anomaly detection models associated, they're all returned."
      },
      "AnomalyDetectorTypes": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/AnomalyDetectorType"
        },
        "maxItems": 2,
        "description": "The anomaly detector types to request when using <code>DescribeAnomalyDetectorsInput</code>. If empty, defaults to <code>SINGLE_METRIC</code>."
      },
      "Action": {
        "type": "string",
        "enum": [
          "DescribeAnomalyDetectors"
        ]
      },
      "Version": {
        "type": "string",
        "enum": [
          "2010-08-01"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      }
    },
    "required": [
      "Action",
      "Version"
    ],
    "$defs": {
      "Dimension": {
        "type": "object",
        "required": [
          "Name",
          "Value"
        ],
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/DimensionName"
              },
              {
                "description": "The name of the dimension. Dimension names must contain only ASCII characters, must include at least one non-whitespace character, and cannot start with a colon (<code>:</code>). ASCII control characters are not supported as part of dimension names."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/DimensionValue"
              },
              {
                "description": "The value of the dimension. Dimension values must contain only ASCII characters and must include at least one non-whitespace character. ASCII control characters are not supported as part of dimension values."
              }
            ]
          }
        },
        "description": "<p>A dimension is a name/value pair that is part of the identity of a metric. Because dimensions are part of the unique identifier for a metric, whenever you add a unique name/value pair to one of your metrics, you are creating a new variation of that metric. For example, many Amazon EC2 metrics publish <code>InstanceId</code> as a dimension name, and the actual instance ID as the value for that dimension.</p> <p>You can assign up to 30 dimensions to a metric.</p>"
      },
      "DimensionName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255
      },
      "DimensionValue": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1024
      },
      "AnomalyDetectorType": {
        "type": "string",
        "enum": [
          "SINGLE_METRIC",
          "METRIC_MATH"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "http://monitoring.us-east-1.amazonaws.com/#Action=DescribeAnomalyDetectors{?NextToken,MaxResults,Namespace,MetricName,Dimensions,AnomalyDetectorTypes,Action,Version}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**AnomalyDetectors**",
            "**NextToken**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
