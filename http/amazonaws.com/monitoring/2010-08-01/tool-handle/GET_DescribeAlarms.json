{
  "name": "GET_DescribeAlarms",
  "description": "<p>Retrieves the specified alarms. You can filter the results by specifying a prefix for the alarm name, the alarm state, or a prefix for any action.</p> <p>To use this operation and return information about composite alarms, you must be signed on with the <code>cloudwatch:DescribeAlarms</code> permission that is scoped to <code>*</code>. You can't return information about composite alarms if your <code>cloudwatch:DescribeAlarms</code> permission has a narrower scope.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "AlarmNames": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/AlarmName"
        },
        "maxItems": 100,
        "description": "The names of the alarms to retrieve information about."
      },
      "AlarmNamePrefix": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "description": "<p>An alarm name prefix. If you specify this parameter, you receive information about all alarms that have names that start with this prefix.</p> <p>If this parameter is specified, you cannot specify <code>AlarmNames</code>.</p>"
      },
      "AlarmTypes": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/AlarmType"
        },
        "description": "Use this parameter to specify whether you want the operation to return metric alarms or composite alarms. If you omit this parameter, only metric alarms are returned."
      },
      "ChildrenOfAlarmName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "description": "<p>If you use this parameter and specify the name of a composite alarm, the operation returns information about the \"children\" alarms of the alarm you specify. These are the metric alarms and composite alarms referenced in the <code>AlarmRule</code> field of the composite alarm that you specify in <code>ChildrenOfAlarmName</code>. Information about the composite alarm that you name in <code>ChildrenOfAlarmName</code> is not returned.</p> <p>If you specify <code>ChildrenOfAlarmName</code>, you cannot specify any other parameters in the request except for <code>MaxRecords</code> and <code>NextToken</code>. If you do so, you receive a validation error.</p> <note> <p>Only the <code>Alarm Name</code>, <code>ARN</code>, <code>StateValue</code> (OK/ALARM/INSUFFICIENT_DATA), and <code>StateUpdatedTimestamp</code> information are returned by this operation when you use this parameter. To get complete information about these alarms, perform another <code>DescribeAlarms</code> operation and specify the parent alarm names in the <code>AlarmNames</code> parameter.</p> </note>"
      },
      "ParentsOfAlarmName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "description": "<p>If you use this parameter and specify the name of a metric or composite alarm, the operation returns information about the \"parent\" alarms of the alarm you specify. These are the composite alarms that have <code>AlarmRule</code> parameters that reference the alarm named in <code>ParentsOfAlarmName</code>. Information about the alarm that you specify in <code>ParentsOfAlarmName</code> is not returned.</p> <p>If you specify <code>ParentsOfAlarmName</code>, you cannot specify any other parameters in the request except for <code>MaxRecords</code> and <code>NextToken</code>. If you do so, you receive a validation error.</p> <note> <p>Only the Alarm Name and ARN are returned by this operation when you use this parameter. To get complete information about these alarms, perform another <code>DescribeAlarms</code> operation and specify the parent alarm names in the <code>AlarmNames</code> parameter.</p> </note>"
      },
      "StateValue": {
        "type": "string",
        "enum": [
          "OK",
          "ALARM",
          "INSUFFICIENT_DATA"
        ],
        "description": "Specify this parameter to receive information only about alarms that are currently in the state that you specify."
      },
      "ActionPrefix": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1024,
        "description": "Use this parameter to filter the results of the operation to only those alarms that use a certain alarm action. For example, you could specify the ARN of an SNS topic to find all alarms that send notifications to that topic."
      },
      "MaxRecords": {
        "type": "integer",
        "minimum": 1,
        "maximum": 100,
        "description": "The maximum number of alarm descriptions to retrieve."
      },
      "NextToken": {
        "type": "string",
        "description": "The token returned by a previous call to indicate that there is more data available."
      },
      "Action": {
        "type": "string",
        "enum": [
          "DescribeAlarms"
        ]
      },
      "Version": {
        "type": "string",
        "enum": [
          "2010-08-01"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      }
    },
    "required": [
      "Action",
      "Version"
    ],
    "$defs": {
      "AlarmName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255
      },
      "AlarmType": {
        "type": "string",
        "enum": [
          "CompositeAlarm",
          "MetricAlarm"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "http://monitoring.us-east-1.amazonaws.com/#Action=DescribeAlarms{?AlarmNames,AlarmNamePrefix,AlarmTypes,ChildrenOfAlarmName,ParentsOfAlarmName,StateValue,ActionPrefix,MaxRecords,NextToken,Action,Version}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**CompositeAlarms**",
            "**MetricAlarms**",
            "**NextToken**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
