{
  "name": "GET_DescribeAlarmsForMetric",
  "description": "<p>Retrieves the alarms for the specified metric. To filter the results, specify a statistic, period, or unit.</p> <p>This operation retrieves only standard alarms that are based on the specified metric. It does not return alarms based on math expressions that use the specified metric, or composite alarms that use the specified metric.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "MetricName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "description": "The name of the metric."
      },
      "Namespace": {
        "type": "string",
        "pattern": "[^:].*",
        "minLength": 1,
        "maxLength": 255,
        "description": "The namespace of the metric."
      },
      "Statistic": {
        "type": "string",
        "enum": [
          "SampleCount",
          "Average",
          "Sum",
          "Minimum",
          "Maximum"
        ],
        "description": "The statistic for the metric, other than percentiles. For percentile statistics, use <code>ExtendedStatistics</code>."
      },
      "ExtendedStatistic": {
        "type": "string",
        "description": "The percentile statistic for the metric. Specify a value between p0.0 and p100."
      },
      "Dimensions": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Dimension"
        },
        "maxItems": 30,
        "description": "The dimensions associated with the metric. If the metric has any associated dimensions, you must specify them in order for the call to succeed."
      },
      "Period": {
        "type": "integer",
        "minimum": 1,
        "description": "The period, in seconds, over which the statistic is applied."
      },
      "Unit": {
        "type": "string",
        "enum": [
          "Seconds",
          "Microseconds",
          "Milliseconds",
          "Bytes",
          "Kilobytes",
          "Megabytes",
          "Gigabytes",
          "Terabytes",
          "Bits",
          "Kilobits",
          "Megabits",
          "Gigabits",
          "Terabits",
          "Percent",
          "Count",
          "Bytes/Second",
          "Kilobytes/Second",
          "Megabytes/Second",
          "Gigabytes/Second",
          "Terabytes/Second",
          "Bits/Second",
          "Kilobits/Second",
          "Megabits/Second",
          "Gigabits/Second",
          "Terabits/Second",
          "Count/Second",
          "None"
        ],
        "description": "The unit for the metric."
      },
      "Action": {
        "type": "string",
        "enum": [
          "DescribeAlarmsForMetric"
        ]
      },
      "Version": {
        "type": "string",
        "enum": [
          "2010-08-01"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      }
    },
    "required": [
      "MetricName",
      "Namespace",
      "Action",
      "Version"
    ],
    "$defs": {
      "Dimension": {
        "type": "object",
        "required": [
          "Name",
          "Value"
        ],
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/DimensionName"
              },
              {
                "description": "The name of the dimension. Dimension names must contain only ASCII characters, must include at least one non-whitespace character, and cannot start with a colon (<code>:</code>). ASCII control characters are not supported as part of dimension names."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/DimensionValue"
              },
              {
                "description": "The value of the dimension. Dimension values must contain only ASCII characters and must include at least one non-whitespace character. ASCII control characters are not supported as part of dimension values."
              }
            ]
          }
        },
        "description": "<p>A dimension is a name/value pair that is part of the identity of a metric. Because dimensions are part of the unique identifier for a metric, whenever you add a unique name/value pair to one of your metrics, you are creating a new variation of that metric. For example, many Amazon EC2 metrics publish <code>InstanceId</code> as a dimension name, and the actual instance ID as the value for that dimension.</p> <p>You can assign up to 30 dimensions to a metric.</p>"
      },
      "DimensionName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255
      },
      "DimensionValue": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1024
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "http://monitoring.us-east-1.amazonaws.com/#Action=DescribeAlarmsForMetric{?MetricName,Namespace,Statistic,ExtendedStatistic,Dimensions,Period,Unit,Action,Version}"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**MetricAlarms**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
