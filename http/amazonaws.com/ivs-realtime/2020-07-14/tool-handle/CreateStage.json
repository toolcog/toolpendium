{
  "name": "CreateStage",
  "description": "Creates a new stage (and optionally participant tokens).",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Optional name that can be specified for the stage being created.",
            "type": "string",
            "pattern": "^[a-zA-Z0-9-_]*$",
            "minLength": 0,
            "maxLength": 128
          },
          "participantTokenConfigurations": {
            "description": "Array of participant token configuration objects to attach to the new stage.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/ParticipantTokenConfiguration"
            },
            "minItems": 0,
            "maxItems": 12
          },
          "tags": {
            "description": "Tags attached to the resource. Array of maps, each of the form <code>string:string (key:value)</code>. See <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\">Tagging AWS Resources</a> for details, including restrictions that apply to tags and \"Tag naming limits and requirements\"; Amazon IVS has no constraints on tags beyond what is documented there. ",
            "type": "object",
            "minProperties": 0,
            "maxProperties": 50,
            "additionalProperties": {
              "$ref": "#/$defs/TagValue"
            }
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "ParticipantTokenConfiguration": {
        "type": "object",
        "properties": {
          "attributes": {
            "allOf": [
              {
                "$ref": "#/$defs/ParticipantTokenAttributes"
              },
              {
                "description": "Application-provided attributes to encode into the corresponding participant token and attach to a stage. Map keys and values can contain UTF-8 encoded text. The maximum length of this field is 1 KB total. <i>This field is exposed to all stage participants and should not be used for personally identifying, confidential, or sensitive information.</i> "
              }
            ]
          },
          "capabilities": {
            "allOf": [
              {
                "$ref": "#/$defs/ParticipantTokenCapabilities"
              },
              {
                "description": "Set of capabilities that the user is allowed to perform in the stage."
              }
            ]
          },
          "duration": {
            "allOf": [
              {
                "$ref": "#/$defs/ParticipantTokenDurationMinutes"
              },
              {
                "description": "Duration (in minutes), after which the corresponding participant token expires. Default: 720 (12 hours)."
              }
            ]
          },
          "userId": {
            "allOf": [
              {
                "$ref": "#/$defs/ParticipantTokenUserId"
              },
              {
                "description": "Customer-assigned name to help identify the token; this can be used to link a participant to a user in the customerâ€™s own systems. This can be any UTF-8 encoded text. <i>This field is exposed to all stage participants and should not be used for personally identifying, confidential, or sensitive information.</i> "
              }
            ]
          }
        },
        "description": "Object specifying a participant token configuration in a stage."
      },
      "ParticipantTokenAttributes": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/String"
        }
      },
      "String": {
        "type": "string"
      },
      "ParticipantTokenCapabilities": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ParticipantTokenCapability"
        },
        "minItems": 0,
        "maxItems": 2
      },
      "ParticipantTokenCapability": {
        "type": "string",
        "enum": [
          "PUBLISH",
          "SUBSCRIBE"
        ]
      },
      "ParticipantTokenDurationMinutes": {
        "type": "integer",
        "minimum": 1,
        "maximum": 20160
      },
      "ParticipantTokenUserId": {
        "type": "string",
        "minLength": 0,
        "maxLength": 128
      },
      "TagValue": {
        "type": "string",
        "minLength": 0,
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://ivsrealtime.us-east-1.amazonaws.com/CreateStage"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**participantTokens**",
            "**stage**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
