{
  "name": "SetRiskConfiguration",
  "description": "<p>Configures actions on detected risks. To delete the risk configuration for <code>UserPoolId</code> or <code>ClientId</code>, pass null values for all four configuration types.</p> <p>To activate Amazon Cognito advanced security features, update the user pool to include the <code>UserPoolAddOns</code> key<code>AdvancedSecurityMode</code>.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AWSCognitoIdentityProviderService.SetRiskConfiguration"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/SetRiskConfigurationRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "SetRiskConfigurationRequest": {
        "type": "object",
        "required": [
          "UserPoolId"
        ],
        "title": "SetRiskConfigurationRequest",
        "properties": {
          "UserPoolId": {
            "allOf": [
              {
                "$ref": "#/$defs/UserPoolIdType"
              },
              {
                "description": "The user pool ID. "
              }
            ]
          },
          "ClientId": {
            "allOf": [
              {
                "$ref": "#/$defs/ClientIdType"
              },
              {
                "description": "<p>The app client ID. If <code>ClientId</code> is null, then the risk configuration is mapped to <code>userPoolId</code>. When the client ID is null, the same risk configuration is applied to all the clients in the userPool.</p> <p>Otherwise, <code>ClientId</code> is mapped to the client. When the client ID isn't null, the user pool configuration is overridden and the risk configuration for the client is used instead.</p>"
              }
            ]
          },
          "CompromisedCredentialsRiskConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/CompromisedCredentialsRiskConfigurationType"
              },
              {
                "description": "The compromised credentials risk configuration."
              }
            ]
          },
          "AccountTakeoverRiskConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/AccountTakeoverRiskConfigurationType"
              },
              {
                "description": "The account takeover risk configuration."
              }
            ]
          },
          "RiskExceptionConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/RiskExceptionConfigurationType"
              },
              {
                "description": "The configuration to override the risk decision."
              }
            ]
          }
        }
      },
      "UserPoolIdType": {
        "type": "string",
        "pattern": "[\\w-]+_[0-9a-zA-Z]+",
        "minLength": 1,
        "maxLength": 55
      },
      "ClientIdType": {
        "type": "string",
        "pattern": "[\\w+]+",
        "minLength": 1,
        "maxLength": 128,
        "format": "password"
      },
      "CompromisedCredentialsRiskConfigurationType": {
        "type": "object",
        "required": [
          "Actions"
        ],
        "properties": {
          "EventFilter": {
            "allOf": [
              {
                "$ref": "#/$defs/EventFiltersType"
              },
              {
                "description": "Perform the action for these events. The default is to perform all events if no event filter is specified."
              }
            ]
          },
          "Actions": {
            "allOf": [
              {
                "$ref": "#/$defs/CompromisedCredentialsActionsType"
              },
              {
                "description": "The compromised credentials risk configuration actions."
              }
            ]
          }
        },
        "description": "The compromised credentials risk configuration type."
      },
      "EventFiltersType": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/EventFilterType"
        }
      },
      "EventFilterType": {
        "type": "string",
        "enum": [
          "SIGN_IN",
          "PASSWORD_CHANGE",
          "SIGN_UP"
        ]
      },
      "CompromisedCredentialsActionsType": {
        "type": "object",
        "required": [
          "EventAction"
        ],
        "properties": {
          "EventAction": {
            "allOf": [
              {
                "$ref": "#/$defs/CompromisedCredentialsEventActionType"
              },
              {
                "description": "The event action."
              }
            ]
          }
        },
        "description": "The compromised credentials actions type."
      },
      "CompromisedCredentialsEventActionType": {
        "type": "string",
        "enum": [
          "BLOCK",
          "NO_ACTION"
        ]
      },
      "AccountTakeoverRiskConfigurationType": {
        "type": "object",
        "required": [
          "Actions"
        ],
        "properties": {
          "NotifyConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/NotifyConfigurationType"
              },
              {
                "description": "The notify configuration used to construct email notifications."
              }
            ]
          },
          "Actions": {
            "allOf": [
              {
                "$ref": "#/$defs/AccountTakeoverActionsType"
              },
              {
                "description": "Account takeover risk configuration actions."
              }
            ]
          }
        },
        "description": "Configuration for mitigation actions and notification for different levels of risk detected for a potential account takeover."
      },
      "NotifyConfigurationType": {
        "type": "object",
        "required": [
          "SourceArn"
        ],
        "properties": {
          "From": {
            "allOf": [
              {
                "$ref": "#/$defs/StringType"
              },
              {
                "description": "The email address that is sending the email. The address must be either individually verified with Amazon Simple Email Service, or from a domain that has been verified with Amazon SES."
              }
            ]
          },
          "ReplyTo": {
            "allOf": [
              {
                "$ref": "#/$defs/StringType"
              },
              {
                "description": "The destination to which the receiver of an email should reply to."
              }
            ]
          },
          "SourceArn": {
            "allOf": [
              {
                "$ref": "#/$defs/ArnType"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the identity that is associated with the sending authorization policy. This identity permits Amazon Cognito to send for the email address specified in the <code>From</code> parameter."
              }
            ]
          },
          "BlockEmail": {
            "allOf": [
              {
                "$ref": "#/$defs/NotifyEmailType"
              },
              {
                "description": "Email template used when a detected risk event is blocked."
              }
            ]
          },
          "NoActionEmail": {
            "allOf": [
              {
                "$ref": "#/$defs/NotifyEmailType"
              },
              {
                "description": "The email template used when a detected risk event is allowed."
              }
            ]
          },
          "MfaEmail": {
            "allOf": [
              {
                "$ref": "#/$defs/NotifyEmailType"
              },
              {
                "description": "The multi-factor authentication (MFA) email template used when MFA is challenged as part of a detected risk."
              }
            ]
          }
        },
        "description": "The notify configuration type."
      },
      "StringType": {
        "type": "string",
        "minLength": 0,
        "maxLength": 131072
      },
      "ArnType": {
        "type": "string",
        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
        "minLength": 20,
        "maxLength": 2048
      },
      "NotifyEmailType": {
        "type": "object",
        "required": [
          "Subject"
        ],
        "properties": {
          "Subject": {
            "allOf": [
              {
                "$ref": "#/$defs/EmailNotificationSubjectType"
              },
              {
                "description": "The email subject."
              }
            ]
          },
          "HtmlBody": {
            "allOf": [
              {
                "$ref": "#/$defs/EmailNotificationBodyType"
              },
              {
                "description": "The email HTML body."
              }
            ]
          },
          "TextBody": {
            "allOf": [
              {
                "$ref": "#/$defs/EmailNotificationBodyType"
              },
              {
                "description": "The email text body."
              }
            ]
          }
        },
        "description": "The notify email type."
      },
      "EmailNotificationSubjectType": {
        "type": "string",
        "pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s]+",
        "minLength": 1,
        "maxLength": 140
      },
      "EmailNotificationBodyType": {
        "type": "string",
        "pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]+",
        "minLength": 6,
        "maxLength": 20000
      },
      "AccountTakeoverActionsType": {
        "type": "object",
        "properties": {
          "LowAction": {
            "allOf": [
              {
                "$ref": "#/$defs/AccountTakeoverActionType"
              },
              {
                "description": "Action to take for a low risk."
              }
            ]
          },
          "MediumAction": {
            "allOf": [
              {
                "$ref": "#/$defs/AccountTakeoverActionType"
              },
              {
                "description": "Action to take for a medium risk."
              }
            ]
          },
          "HighAction": {
            "allOf": [
              {
                "$ref": "#/$defs/AccountTakeoverActionType"
              },
              {
                "description": "Action to take for a high risk."
              }
            ]
          }
        },
        "description": "Account takeover actions type."
      },
      "AccountTakeoverActionType": {
        "type": "object",
        "required": [
          "Notify",
          "EventAction"
        ],
        "properties": {
          "Notify": {
            "allOf": [
              {
                "$ref": "#/$defs/AccountTakeoverActionNotifyType"
              },
              {
                "description": "Flag specifying whether to send a notification."
              }
            ]
          },
          "EventAction": {
            "allOf": [
              {
                "$ref": "#/$defs/AccountTakeoverEventActionType"
              },
              {
                "description": "<p>The action to take in response to the account takeover action. Valid values are as follows:</p> <ul> <li> <p> <code>BLOCK</code> Choosing this action will block the request.</p> </li> <li> <p> <code>MFA_IF_CONFIGURED</code> Present an MFA challenge if user has configured it, else allow the request.</p> </li> <li> <p> <code>MFA_REQUIRED</code> Present an MFA challenge if user has configured it, else block the request.</p> </li> <li> <p> <code>NO_ACTION</code> Allow the user to sign in.</p> </li> </ul>"
              }
            ]
          }
        },
        "description": "Account takeover action type."
      },
      "AccountTakeoverActionNotifyType": {
        "type": "boolean"
      },
      "AccountTakeoverEventActionType": {
        "type": "string",
        "enum": [
          "BLOCK",
          "MFA_IF_CONFIGURED",
          "MFA_REQUIRED",
          "NO_ACTION"
        ]
      },
      "RiskExceptionConfigurationType": {
        "type": "object",
        "properties": {
          "BlockedIPRangeList": {
            "allOf": [
              {
                "$ref": "#/$defs/BlockedIPRangeListType"
              },
              {
                "description": "Overrides the risk decision to always block the pre-authentication requests. The IP range is in CIDR notation, a compact representation of an IP address and its routing prefix."
              }
            ]
          },
          "SkippedIPRangeList": {
            "allOf": [
              {
                "$ref": "#/$defs/SkippedIPRangeListType"
              },
              {
                "description": "Risk detection isn't performed on the IP addresses in this range list. The IP range is in CIDR notation."
              }
            ]
          }
        },
        "description": "The type of the configuration to override the risk decision."
      },
      "BlockedIPRangeListType": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/StringType"
        },
        "maxItems": 200
      },
      "SkippedIPRangeListType": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/StringType"
        },
        "maxItems": 200
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://cognito-idp.us-east-1.amazonaws.com/#X-Amz-Target=AWSCognitoIdentityProviderService.SetRiskConfiguration"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**RiskConfiguration**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "487": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
