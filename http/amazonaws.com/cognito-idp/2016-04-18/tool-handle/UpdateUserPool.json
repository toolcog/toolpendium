{
  "name": "UpdateUserPool",
  "description": "<note> <p>This action might generate an SMS text message. Starting June 1, 2021, US telecom carriers require you to register an origination phone number before you can send SMS messages to US phone numbers. If you use SMS text messages in Amazon Cognito, you must register a phone number with <a href=\"https://console.aws.amazon.com/pinpoint/home/\">Amazon Pinpoint</a>. Amazon Cognito uses the registered number automatically. Otherwise, Amazon Cognito users who must receive SMS messages might not be able to sign up, activate their accounts, or sign in.</p> <p>If you have never used SMS text messages with Amazon Cognito or any other Amazon Web Service, Amazon Simple Notification Service might place your account in the SMS sandbox. In <i> <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\">sandbox mode</a> </i>, you can send messages only to verified phone numbers. After you test your app while in the sandbox environment, you can move out of the sandbox and into production. For more information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-sms-settings.html\"> SMS message settings for Amazon Cognito user pools</a> in the <i>Amazon Cognito Developer Guide</i>.</p> </note> <p>Updates the specified user pool with the specified attributes. You can get a list of the current user pool settings using <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_DescribeUserPool.html\">DescribeUserPool</a>.</p> <important> <p>If you don't provide a value for an attribute, Amazon Cognito sets it to its default value.</p> </important> <note> <p>Amazon Cognito evaluates Identity and Access Management (IAM) policies in requests for this API operation. For this operation, you must use IAM credentials to authorize requests, and you must grant yourself the corresponding IAM permission in a policy.</p> <p class=\"title\"> <b>Learn more</b> </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-signing.html\">Signing Amazon Web Services API Requests</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\">Using the Amazon Cognito user pools API and user pool endpoints</a> </p> </li> </ul> </note>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AWSCognitoIdentityProviderService.UpdateUserPool"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/UpdateUserPoolRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "UpdateUserPoolRequest": {
        "type": "object",
        "required": [
          "UserPoolId"
        ],
        "title": "UpdateUserPoolRequest",
        "properties": {
          "UserPoolId": {
            "allOf": [
              {
                "$ref": "#/$defs/UserPoolIdType"
              },
              {
                "description": "The user pool ID for the user pool you want to update."
              }
            ]
          },
          "Policies": {
            "allOf": [
              {
                "$ref": "#/$defs/UserPoolPolicyType"
              },
              {
                "description": "A container with the policies you want to update in a user pool."
              }
            ]
          },
          "DeletionProtection": {
            "allOf": [
              {
                "$ref": "#/$defs/DeletionProtectionType"
              },
              {
                "description": "<p>When active, <code>DeletionProtection</code> prevents accidental deletion of your user pool. Before you can delete a user pool that you have protected against deletion, you must deactivate this feature.</p> <p>When you try to delete a protected user pool in a <code>DeleteUserPool</code> API request, Amazon Cognito returns an <code>InvalidParameterException</code> error. To delete a protected user pool, send a new <code>DeleteUserPool</code> request after you deactivate deletion protection in an <code>UpdateUserPool</code> API request.</p>"
              }
            ]
          },
          "LambdaConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/LambdaConfigType"
              },
              {
                "description": "The Lambda configuration information from the request to update the user pool."
              }
            ]
          },
          "AutoVerifiedAttributes": {
            "allOf": [
              {
                "$ref": "#/$defs/VerifiedAttributesListType"
              },
              {
                "description": "The attributes that are automatically verified when Amazon Cognito requests to update user pools."
              }
            ]
          },
          "SmsVerificationMessage": {
            "allOf": [
              {
                "$ref": "#/$defs/SmsVerificationMessageType"
              },
              {
                "description": "This parameter is no longer used. See <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_VerificationMessageTemplateType.html\">VerificationMessageTemplateType</a>."
              }
            ]
          },
          "EmailVerificationMessage": {
            "allOf": [
              {
                "$ref": "#/$defs/EmailVerificationMessageType"
              },
              {
                "description": "This parameter is no longer used. See <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_VerificationMessageTemplateType.html\">VerificationMessageTemplateType</a>."
              }
            ]
          },
          "EmailVerificationSubject": {
            "allOf": [
              {
                "$ref": "#/$defs/EmailVerificationSubjectType"
              },
              {
                "description": "This parameter is no longer used. See <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_VerificationMessageTemplateType.html\">VerificationMessageTemplateType</a>."
              }
            ]
          },
          "VerificationMessageTemplate": {
            "allOf": [
              {
                "$ref": "#/$defs/VerificationMessageTemplateType"
              },
              {
                "description": "The template for verification messages."
              }
            ]
          },
          "SmsAuthenticationMessage": {
            "allOf": [
              {
                "$ref": "#/$defs/SmsVerificationMessageType"
              },
              {
                "description": "The contents of the SMS authentication message."
              }
            ]
          },
          "UserAttributeUpdateSettings": {
            "allOf": [
              {
                "$ref": "#/$defs/UserAttributeUpdateSettingsType"
              },
              {
                "description": "The settings for updates to user attributes. These settings include the property <code>AttributesRequireVerificationBeforeUpdate</code>, a user-pool setting that tells Amazon Cognito how to handle changes to the value of your users' email address and phone number attributes. For more information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-email-phone-verification.html#user-pool-settings-verifications-verify-attribute-updates\"> Verifying updates to email addresses and phone numbers</a>."
              }
            ]
          },
          "MfaConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/UserPoolMfaType"
              },
              {
                "description": "<p>Possible values include:</p> <ul> <li> <p> <code>OFF</code> - MFA tokens aren't required and can't be specified during user registration.</p> </li> <li> <p> <code>ON</code> - MFA tokens are required for all user registrations. You can only specify ON when you're initially creating a user pool. You can use the <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_SetUserPoolMfaConfig.html\">SetUserPoolMfaConfig</a> API operation to turn MFA \"ON\" for existing user pools. </p> </li> <li> <p> <code>OPTIONAL</code> - Users have the option when registering to create an MFA token.</p> </li> </ul>"
              }
            ]
          },
          "DeviceConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/DeviceConfigurationType"
              },
              {
                "description": "<p>The device-remembering configuration for a user pool. A null value indicates that you have deactivated device remembering in your user pool.</p> <note> <p>When you provide a value for any <code>DeviceConfiguration</code> field, you activate the Amazon Cognito device-remembering feature.</p> </note>"
              }
            ]
          },
          "EmailConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/EmailConfigurationType"
              },
              {
                "description": "The email configuration of your user pool. The email configuration type sets your preferred sending method, Amazon Web Services Region, and sender for email invitation and verification messages from your user pool."
              }
            ]
          },
          "SmsConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/SmsConfigurationType"
              },
              {
                "description": "The SMS configuration with the settings that your Amazon Cognito user pool must use to send an SMS message from your Amazon Web Services account through Amazon Simple Notification Service. To send SMS messages with Amazon SNS in the Amazon Web Services Region that you want, the Amazon Cognito user pool uses an Identity and Access Management (IAM) role in your Amazon Web Services account."
              }
            ]
          },
          "UserPoolTags": {
            "allOf": [
              {
                "$ref": "#/$defs/UserPoolTagsType"
              },
              {
                "description": "The tag keys and values to assign to the user pool. A tag is a label that you can use to categorize and manage user pools in different ways, such as by purpose, owner, environment, or other criteria."
              }
            ]
          },
          "AdminCreateUserConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/AdminCreateUserConfigType"
              },
              {
                "description": "The configuration for <code>AdminCreateUser</code> requests."
              }
            ]
          },
          "UserPoolAddOns": {
            "allOf": [
              {
                "$ref": "#/$defs/UserPoolAddOnsType"
              },
              {
                "description": "<p>User pool add-ons. Contains settings for activation of advanced security features. To log user security information but take no action, set to <code>AUDIT</code>. To configure automatic security responses to risky traffic to your user pool, set to <code>ENFORCED</code>.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pool-settings-advanced-security.html\">Adding advanced security to a user pool</a>.</p>"
              }
            ]
          },
          "AccountRecoverySetting": {
            "allOf": [
              {
                "$ref": "#/$defs/AccountRecoverySettingType"
              },
              {
                "description": "The available verified method a user can use to recover their password when they call <code>ForgotPassword</code>. You can use this setting to define a preferred method when a user has more than one method available. With this setting, SMS doesn't qualify for a valid password recovery mechanism if the user also has SMS multi-factor authentication (MFA) activated. In the absence of this setting, Amazon Cognito uses the legacy behavior to determine the recovery method where SMS is preferred through email."
              }
            ]
          }
        },
        "description": "Represents the request to update the user pool."
      },
      "UserPoolIdType": {
        "type": "string",
        "pattern": "[\\w-]+_[0-9a-zA-Z]+",
        "minLength": 1,
        "maxLength": 55
      },
      "UserPoolPolicyType": {
        "type": "object",
        "properties": {
          "PasswordPolicy": {
            "allOf": [
              {
                "$ref": "#/$defs/PasswordPolicyType"
              },
              {
                "description": "The password policy."
              }
            ]
          }
        },
        "description": "The policy associated with a user pool."
      },
      "PasswordPolicyType": {
        "type": "object",
        "properties": {
          "MinimumLength": {
            "allOf": [
              {
                "$ref": "#/$defs/PasswordPolicyMinLengthType"
              },
              {
                "description": "The minimum length of the password in the policy that you have set. This value can't be less than 6."
              }
            ]
          },
          "RequireUppercase": {
            "allOf": [
              {
                "$ref": "#/$defs/BooleanType"
              },
              {
                "description": "In the password policy that you have set, refers to whether you have required users to use at least one uppercase letter in their password."
              }
            ]
          },
          "RequireLowercase": {
            "allOf": [
              {
                "$ref": "#/$defs/BooleanType"
              },
              {
                "description": "In the password policy that you have set, refers to whether you have required users to use at least one lowercase letter in their password."
              }
            ]
          },
          "RequireNumbers": {
            "allOf": [
              {
                "$ref": "#/$defs/BooleanType"
              },
              {
                "description": "In the password policy that you have set, refers to whether you have required users to use at least one number in their password."
              }
            ]
          },
          "RequireSymbols": {
            "allOf": [
              {
                "$ref": "#/$defs/BooleanType"
              },
              {
                "description": "In the password policy that you have set, refers to whether you have required users to use at least one symbol in their password."
              }
            ]
          },
          "TemporaryPasswordValidityDays": {
            "allOf": [
              {
                "$ref": "#/$defs/TemporaryPasswordValidityDaysType"
              },
              {
                "description": "<p>The number of days a temporary password is valid in the password policy. If the user doesn't sign in during this time, an administrator must reset their password.</p> <note> <p>When you set <code>TemporaryPasswordValidityDays</code> for a user pool, you can no longer set a value for the legacy <code>UnusedAccountValidityDays</code> parameter in that user pool.</p> </note>"
              }
            ]
          }
        },
        "description": "The password policy type."
      },
      "PasswordPolicyMinLengthType": {
        "type": "integer",
        "minimum": 6,
        "maximum": 99
      },
      "BooleanType": {
        "type": "boolean"
      },
      "TemporaryPasswordValidityDaysType": {
        "type": "integer",
        "minimum": 0,
        "maximum": 365
      },
      "DeletionProtectionType": {
        "type": "string",
        "enum": [
          "ACTIVE",
          "INACTIVE"
        ]
      },
      "LambdaConfigType": {
        "type": "object",
        "properties": {
          "PreSignUp": {
            "allOf": [
              {
                "$ref": "#/$defs/ArnType"
              },
              {
                "description": "A pre-registration Lambda trigger."
              }
            ]
          },
          "CustomMessage": {
            "allOf": [
              {
                "$ref": "#/$defs/ArnType"
              },
              {
                "description": "A custom Message Lambda trigger."
              }
            ]
          },
          "PostConfirmation": {
            "allOf": [
              {
                "$ref": "#/$defs/ArnType"
              },
              {
                "description": "A post-confirmation Lambda trigger."
              }
            ]
          },
          "PreAuthentication": {
            "allOf": [
              {
                "$ref": "#/$defs/ArnType"
              },
              {
                "description": "A pre-authentication Lambda trigger."
              }
            ]
          },
          "PostAuthentication": {
            "allOf": [
              {
                "$ref": "#/$defs/ArnType"
              },
              {
                "description": "A post-authentication Lambda trigger."
              }
            ]
          },
          "DefineAuthChallenge": {
            "allOf": [
              {
                "$ref": "#/$defs/ArnType"
              },
              {
                "description": "Defines the authentication challenge."
              }
            ]
          },
          "CreateAuthChallenge": {
            "allOf": [
              {
                "$ref": "#/$defs/ArnType"
              },
              {
                "description": "Creates an authentication challenge."
              }
            ]
          },
          "VerifyAuthChallengeResponse": {
            "allOf": [
              {
                "$ref": "#/$defs/ArnType"
              },
              {
                "description": "Verifies the authentication challenge response."
              }
            ]
          },
          "PreTokenGeneration": {
            "allOf": [
              {
                "$ref": "#/$defs/ArnType"
              },
              {
                "description": "A Lambda trigger that is invoked before token generation."
              }
            ]
          },
          "UserMigration": {
            "allOf": [
              {
                "$ref": "#/$defs/ArnType"
              },
              {
                "description": "The user migration Lambda config type."
              }
            ]
          },
          "CustomSMSSender": {
            "allOf": [
              {
                "$ref": "#/$defs/CustomSMSLambdaVersionConfigType"
              },
              {
                "description": "A custom SMS sender Lambda trigger."
              }
            ]
          },
          "CustomEmailSender": {
            "allOf": [
              {
                "$ref": "#/$defs/CustomEmailLambdaVersionConfigType"
              },
              {
                "description": "A custom email sender Lambda trigger."
              }
            ]
          },
          "KMSKeyID": {
            "allOf": [
              {
                "$ref": "#/$defs/ArnType"
              },
              {
                "description": "The Amazon Resource Name (ARN) of an <a href=\"/kms/latest/developerguide/concepts.html#master_keys\">KMS key</a>. Amazon Cognito uses the key to encrypt codes and temporary passwords sent to <code>CustomEmailSender</code> and <code>CustomSMSSender</code>."
              }
            ]
          }
        },
        "description": "Specifies the configuration for Lambda triggers."
      },
      "ArnType": {
        "type": "string",
        "pattern": "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?",
        "minLength": 20,
        "maxLength": 2048
      },
      "CustomSMSLambdaVersionConfigType": {
        "type": "object",
        "required": [
          "LambdaVersion",
          "LambdaArn"
        ],
        "properties": {
          "LambdaVersion": {
            "allOf": [
              {
                "$ref": "#/$defs/CustomSMSSenderLambdaVersionType"
              },
              {
                "description": "Signature of the \"request\" attribute in the \"event\" information that Amazon Cognito passes to your custom SMS Lambda function. The only supported value is <code>V1_0</code>."
              }
            ]
          },
          "LambdaArn": {
            "allOf": [
              {
                "$ref": "#/$defs/ArnType"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the Lambda function that Amazon Cognito activates to send SMS notifications to users."
              }
            ]
          }
        },
        "description": "A custom SMS sender Lambda configuration type."
      },
      "CustomSMSSenderLambdaVersionType": {
        "type": "string",
        "enum": [
          "V1_0"
        ]
      },
      "CustomEmailLambdaVersionConfigType": {
        "type": "object",
        "required": [
          "LambdaVersion",
          "LambdaArn"
        ],
        "properties": {
          "LambdaVersion": {
            "allOf": [
              {
                "$ref": "#/$defs/CustomEmailSenderLambdaVersionType"
              },
              {
                "description": "Signature of the \"request\" attribute in the \"event\" information Amazon Cognito passes to your custom email Lambda function. The only supported value is <code>V1_0</code>."
              }
            ]
          },
          "LambdaArn": {
            "allOf": [
              {
                "$ref": "#/$defs/ArnType"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the Lambda function that Amazon Cognito activates to send email notifications to users."
              }
            ]
          }
        },
        "description": "A custom email sender Lambda configuration type."
      },
      "CustomEmailSenderLambdaVersionType": {
        "type": "string",
        "enum": [
          "V1_0"
        ]
      },
      "VerifiedAttributesListType": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/VerifiedAttributeType"
        }
      },
      "VerifiedAttributeType": {
        "type": "string",
        "enum": [
          "phone_number",
          "email"
        ]
      },
      "SmsVerificationMessageType": {
        "type": "string",
        "pattern": ".*\\{####\\}.*",
        "minLength": 6,
        "maxLength": 140
      },
      "EmailVerificationMessageType": {
        "type": "string",
        "pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]*\\{####\\}[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]*",
        "minLength": 6,
        "maxLength": 20000
      },
      "EmailVerificationSubjectType": {
        "type": "string",
        "pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s]+",
        "minLength": 1,
        "maxLength": 140
      },
      "VerificationMessageTemplateType": {
        "type": "object",
        "properties": {
          "SmsMessage": {
            "allOf": [
              {
                "$ref": "#/$defs/SmsVerificationMessageType"
              },
              {
                "description": "The template for SMS messages that Amazon Cognito sends to your users."
              }
            ]
          },
          "EmailMessage": {
            "allOf": [
              {
                "$ref": "#/$defs/EmailVerificationMessageType"
              },
              {
                "description": "The template for email messages that Amazon Cognito sends to your users. You can set an <code>EmailMessage</code> template only if the value of <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount\"> EmailSendingAccount</a> is <code>DEVELOPER</code>. When your <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount\">EmailSendingAccount</a> is <code>DEVELOPER</code>, your user pool sends email messages with your own Amazon SES configuration."
              }
            ]
          },
          "EmailSubject": {
            "allOf": [
              {
                "$ref": "#/$defs/EmailVerificationSubjectType"
              },
              {
                "description": "The subject line for the email message template. You can set an <code>EmailSubject</code> template only if the value of <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount\"> EmailSendingAccount</a> is <code>DEVELOPER</code>. When your <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount\">EmailSendingAccount</a> is <code>DEVELOPER</code>, your user pool sends email messages with your own Amazon SES configuration."
              }
            ]
          },
          "EmailMessageByLink": {
            "allOf": [
              {
                "$ref": "#/$defs/EmailVerificationMessageByLinkType"
              },
              {
                "description": "The email message template for sending a confirmation link to the user. You can set an <code>EmailMessageByLink</code> template only if the value of <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount\"> EmailSendingAccount</a> is <code>DEVELOPER</code>. When your <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount\">EmailSendingAccount</a> is <code>DEVELOPER</code>, your user pool sends email messages with your own Amazon SES configuration."
              }
            ]
          },
          "EmailSubjectByLink": {
            "allOf": [
              {
                "$ref": "#/$defs/EmailVerificationSubjectByLinkType"
              },
              {
                "description": "The subject line for the email message template for sending a confirmation link to the user. You can set an <code>EmailSubjectByLink</code> template only if the value of <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount\"> EmailSendingAccount</a> is <code>DEVELOPER</code>. When your <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount\">EmailSendingAccount</a> is <code>DEVELOPER</code>, your user pool sends email messages with your own Amazon SES configuration."
              }
            ]
          },
          "DefaultEmailOption": {
            "allOf": [
              {
                "$ref": "#/$defs/DefaultEmailOptionType"
              },
              {
                "description": "The default email option."
              }
            ]
          }
        },
        "description": "The template for verification messages."
      },
      "EmailVerificationMessageByLinkType": {
        "type": "string",
        "pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]*\\{##[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]*##\\}[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]*",
        "minLength": 6,
        "maxLength": 20000
      },
      "EmailVerificationSubjectByLinkType": {
        "type": "string",
        "pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s]+",
        "minLength": 1,
        "maxLength": 140
      },
      "DefaultEmailOptionType": {
        "type": "string",
        "enum": [
          "CONFIRM_WITH_LINK",
          "CONFIRM_WITH_CODE"
        ]
      },
      "UserAttributeUpdateSettingsType": {
        "type": "object",
        "properties": {
          "AttributesRequireVerificationBeforeUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/AttributesRequireVerificationBeforeUpdateType"
              },
              {
                "description": "<p>Requires that your user verifies their email address, phone number, or both before Amazon Cognito updates the value of that attribute. When you update a user attribute that has this option activated, Amazon Cognito sends a verification message to the new phone number or email address. Amazon Cognito doesn’t change the value of the attribute until your user responds to the verification message and confirms the new value.</p> <p>You can verify an updated email address or phone number with a <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_VerifyUserAttribute.html\">VerifyUserAttribute</a> API request. You can also call the <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_AdminUpdateUserAttributes.html\">AdminUpdateUserAttributes</a> API and set <code>email_verified</code> or <code>phone_number_verified</code> to true.</p> <p>When <code>AttributesRequireVerificationBeforeUpdate</code> is false, your user pool doesn't require that your users verify attribute changes before Amazon Cognito updates them. In a user pool where <code>AttributesRequireVerificationBeforeUpdate</code> is false, API operations that change attribute values can immediately update a user’s <code>email</code> or <code>phone_number</code> attribute.</p>"
              }
            ]
          }
        },
        "description": "The settings for updates to user attributes. These settings include the property <code>AttributesRequireVerificationBeforeUpdate</code>, a user-pool setting that tells Amazon Cognito how to handle changes to the value of your users' email address and phone number attributes. For more information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-email-phone-verification.html#user-pool-settings-verifications-verify-attribute-updates\"> Verifying updates to email addresses and phone numbers</a>."
      },
      "AttributesRequireVerificationBeforeUpdateType": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/VerifiedAttributeType"
        }
      },
      "UserPoolMfaType": {
        "type": "string",
        "enum": [
          "OFF",
          "ON",
          "OPTIONAL"
        ]
      },
      "DeviceConfigurationType": {
        "type": "object",
        "properties": {
          "ChallengeRequiredOnNewDevice": {
            "allOf": [
              {
                "$ref": "#/$defs/BooleanType"
              },
              {
                "description": "<p>When true, a remembered device can sign in with device authentication instead of SMS and time-based one-time password (TOTP) factors for multi-factor authentication (MFA).</p> <note> <p>Whether or not <code>ChallengeRequiredOnNewDevice</code> is true, users who sign in with devices that have not been confirmed or remembered must still provide a second factor in a user pool that requires MFA.</p> </note>"
              }
            ]
          },
          "DeviceOnlyRememberedOnUserPrompt": {
            "allOf": [
              {
                "$ref": "#/$defs/BooleanType"
              },
              {
                "description": "<p>When true, Amazon Cognito doesn't automatically remember a user's device when your app sends a <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_ConfirmDevice.html\"> ConfirmDevice</a> API request. In your app, create a prompt for your user to choose whether they want to remember their device. Return the user's choice in an <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_UpdateDeviceStatus.html\"> UpdateDeviceStatus</a> API request.</p> <p>When <code>DeviceOnlyRememberedOnUserPrompt</code> is <code>false</code>, Amazon Cognito immediately remembers devices that you register in a <code>ConfirmDevice</code> API request.</p>"
              }
            ]
          }
        },
        "description": "<p>The device-remembering configuration for a user pool. A <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_DescribeUserPool.html\"> DescribeUserPool</a> request returns a null value for this object when the user pool isn't configured to remember devices. When device remembering is active, you can remember a user's device with a <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_ConfirmDevice.html\">ConfirmDevice</a> API request. Additionally. when the property <code>DeviceOnlyRememberedOnUserPrompt</code> is <code>true</code>, you must follow <code>ConfirmDevice</code> with an <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_UpdateDeviceStatus.html\">UpdateDeviceStatus</a> API request that sets the user's device to <code>remembered</code> or <code>not_remembered</code>.</p> <p>To sign in with a remembered device, include <code>DEVICE_KEY</code> in the authentication parameters in your user's <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_InitiateAuth.html\"> InitiateAuth</a> request. If your app doesn't include a <code>DEVICE_KEY</code> parameter, the <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_InitiateAuth.html#API_InitiateAuth_ResponseSyntax\">response</a> from Amazon Cognito includes newly-generated <code>DEVICE_KEY</code> and <code>DEVICE_GROUP_KEY</code> values under <code>NewDeviceMetadata</code>. Store these values to use in future device-authentication requests.</p> <note> <p>When you provide a value for any property of <code>DeviceConfiguration</code>, you activate the device remembering for the user pool.</p> </note>"
      },
      "EmailConfigurationType": {
        "type": "object",
        "properties": {
          "SourceArn": {
            "allOf": [
              {
                "$ref": "#/$defs/ArnType"
              },
              {
                "description": "<p>The ARN of a verified email address or an address from a verified domain in Amazon SES. You can set a <code>SourceArn</code> email from a verified domain only with an API request. You can set a verified email address, but not an address in a verified domain, in the Amazon Cognito console. Amazon Cognito uses the email address that you provide in one of the following ways, depending on the value that you specify for the <code>EmailSendingAccount</code> parameter:</p> <ul> <li> <p>If you specify <code>COGNITO_DEFAULT</code>, Amazon Cognito uses this address as the custom FROM address when it emails your users using its built-in email account.</p> </li> <li> <p>If you specify <code>DEVELOPER</code>, Amazon Cognito emails your users with this address by calling Amazon SES on your behalf.</p> </li> </ul> <p>The Region value of the <code>SourceArn</code> parameter must indicate a supported Amazon Web Services Region of your user pool. Typically, the Region in the <code>SourceArn</code> and the user pool Region are the same. For more information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-email.html#user-pool-email-developer-region-mapping\">Amazon SES email configuration regions</a> in the <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools.html\">Amazon Cognito Developer Guide</a>.</p>"
              }
            ]
          },
          "ReplyToEmailAddress": {
            "allOf": [
              {
                "$ref": "#/$defs/EmailAddressType"
              },
              {
                "description": "The destination to which the receiver of the email should reply."
              }
            ]
          },
          "EmailSendingAccount": {
            "allOf": [
              {
                "$ref": "#/$defs/EmailSendingAccountType"
              },
              {
                "description": "<p>Specifies whether Amazon Cognito uses its built-in functionality to send your users email messages, or uses your Amazon Simple Email Service email configuration. Specify one of the following values:</p> <dl> <dt>COGNITO_DEFAULT</dt> <dd> <p>When Amazon Cognito emails your users, it uses its built-in email functionality. When you use the default option, Amazon Cognito allows only a limited number of emails each day for your user pool. For typical production environments, the default email limit is less than the required delivery volume. To achieve a higher delivery volume, specify DEVELOPER to use your Amazon SES email configuration.</p> <p>To look up the email delivery limit for the default option, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/limits.html\">Limits</a> in the <i>Amazon Cognito Developer Guide</i>.</p> <p>The default FROM address is <code>no-reply@verificationemail.com</code>. To customize the FROM address, provide the Amazon Resource Name (ARN) of an Amazon SES verified email address for the <code>SourceArn</code> parameter.</p> </dd> <dt>DEVELOPER</dt> <dd> <p>When Amazon Cognito emails your users, it uses your Amazon SES configuration. Amazon Cognito calls Amazon SES on your behalf to send email from your verified email address. When you use this option, the email delivery limits are the same limits that apply to your Amazon SES verified email address in your Amazon Web Services account.</p> <p>If you use this option, provide the ARN of an Amazon SES verified email address for the <code>SourceArn</code> parameter.</p> <p>Before Amazon Cognito can email your users, it requires additional permissions to call Amazon SES on your behalf. When you update your user pool with this option, Amazon Cognito creates a <i>service-linked role</i>, which is a type of role in your Amazon Web Services account. This role contains the permissions that allow you to access Amazon SES and send email messages from your email address. For more information about the service-linked role that Amazon Cognito creates, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/using-service-linked-roles.html\">Using Service-Linked Roles for Amazon Cognito</a> in the <i>Amazon Cognito Developer Guide</i>.</p> </dd> </dl>"
              }
            ]
          },
          "From": {
            "allOf": [
              {
                "$ref": "#/$defs/StringType"
              },
              {
                "description": "Either the sender’s email address or the sender’s name with their email address. For example, <code>testuser@example.com</code> or <code>Test User &lt;testuser@example.com&gt;</code>. This address appears before the body of the email."
              }
            ]
          },
          "ConfigurationSet": {
            "allOf": [
              {
                "$ref": "#/$defs/SESConfigurationSet"
              },
              {
                "description": "<p>The set of configuration rules that can be applied to emails sent using Amazon Simple Email Service. A configuration set is applied to an email by including a reference to the configuration set in the headers of the email. Once applied, all of the rules in that configuration set are applied to the email. Configuration sets can be used to apply the following types of rules to emails: </p> <dl> <dt>Event publishing</dt> <dd> <p>Amazon Simple Email Service can track the number of send, delivery, open, click, bounce, and complaint events for each email sent. Use event publishing to send information about these events to other Amazon Web Services services such as and Amazon CloudWatch</p> </dd> <dt>IP pool management</dt> <dd> <p>When leasing dedicated IP addresses with Amazon Simple Email Service, you can create groups of IP addresses, called dedicated IP pools. You can then associate the dedicated IP pools with configuration sets.</p> </dd> </dl>"
              }
            ]
          }
        },
        "description": "<p>The email configuration of your user pool. The email configuration type sets your preferred sending method, Amazon Web Services Region, and sender for messages from your user pool.</p> <note> <p>Amazon Cognito can send email messages with Amazon Simple Email Service resources in the Amazon Web Services Region where you created your user pool, and in alternate Regions in some cases. For more information on the supported Regions, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-email.html\">Email settings for Amazon Cognito user pools</a>.</p> </note>"
      },
      "EmailAddressType": {
        "type": "string",
        "pattern": "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+@[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+"
      },
      "EmailSendingAccountType": {
        "type": "string",
        "enum": [
          "COGNITO_DEFAULT",
          "DEVELOPER"
        ]
      },
      "StringType": {
        "type": "string",
        "minLength": 0,
        "maxLength": 131072
      },
      "SESConfigurationSet": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9_-]+$",
        "minLength": 1,
        "maxLength": 64
      },
      "SmsConfigurationType": {
        "type": "object",
        "required": [
          "SnsCallerArn"
        ],
        "properties": {
          "SnsCallerArn": {
            "allOf": [
              {
                "$ref": "#/$defs/ArnType"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the Amazon SNS caller. This is the ARN of the IAM role in your Amazon Web Services account that Amazon Cognito will use to send SMS messages. SMS messages are subject to a <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-email-phone-verification.html\">spending limit</a>. "
              }
            ]
          },
          "ExternalId": {
            "allOf": [
              {
                "$ref": "#/$defs/StringType"
              },
              {
                "description": "<p>The external ID provides additional security for your IAM role. You can use an <code>ExternalId</code> with the IAM role that you use with Amazon SNS to send SMS messages for your user pool. If you provide an <code>ExternalId</code>, your Amazon Cognito user pool includes it in the request to assume your IAM role. You can configure the role trust policy to require that Amazon Cognito, and any principal, provide the <code>ExternalID</code>. If you use the Amazon Cognito Management Console to create a role for SMS multi-factor authentication (MFA), Amazon Cognito creates a role with the required permissions and a trust policy that demonstrates use of the <code>ExternalId</code>.</p> <p>For more information about the <code>ExternalId</code> of a role, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user_externalid.html\">How to use an external ID when granting access to your Amazon Web Services resources to a third party</a> </p>"
              }
            ]
          },
          "SnsRegion": {
            "allOf": [
              {
                "$ref": "#/$defs/RegionCodeType"
              },
              {
                "description": "<p>The Amazon Web Services Region to use with Amazon SNS integration. You can choose the same Region as your user pool, or a supported <b>Legacy Amazon SNS alternate Region</b>. </p> <p> Amazon Cognito resources in the Asia Pacific (Seoul) Amazon Web Services Region must use your Amazon SNS configuration in the Asia Pacific (Tokyo) Region. For more information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-sms-settings.html\">SMS message settings for Amazon Cognito user pools</a>.</p>"
              }
            ]
          }
        },
        "description": "The SMS configuration type is the settings that your Amazon Cognito user pool must use to send an SMS message from your Amazon Web Services account through Amazon Simple Notification Service. To send SMS messages with Amazon SNS in the Amazon Web Services Region that you want, the Amazon Cognito user pool uses an Identity and Access Management (IAM) role in your Amazon Web Services account."
      },
      "RegionCodeType": {
        "type": "string",
        "minLength": 5,
        "maxLength": 32
      },
      "UserPoolTagsType": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/TagValueType"
        }
      },
      "TagValueType": {
        "type": "string",
        "minLength": 0,
        "maxLength": 256
      },
      "AdminCreateUserConfigType": {
        "type": "object",
        "properties": {
          "AllowAdminCreateUserOnly": {
            "allOf": [
              {
                "$ref": "#/$defs/BooleanType"
              },
              {
                "description": "Set to <code>True</code> if only the administrator is allowed to create user profiles. Set to <code>False</code> if users can sign themselves up via an app."
              }
            ]
          },
          "UnusedAccountValidityDays": {
            "allOf": [
              {
                "$ref": "#/$defs/AdminCreateUserUnusedAccountValidityDaysType"
              },
              {
                "description": "<p>The user account expiration limit, in days, after which a new account that hasn't signed in is no longer usable. To reset the account after that time limit, you must call <code>AdminCreateUser</code> again, specifying <code>\"RESEND\"</code> for the <code>MessageAction</code> parameter. The default value for this parameter is 7. </p> <note> <p>If you set a value for <code>TemporaryPasswordValidityDays</code> in <code>PasswordPolicy</code>, that value will be used, and <code>UnusedAccountValidityDays</code> will be no longer be an available parameter for that user pool.</p> </note>"
              }
            ]
          },
          "InviteMessageTemplate": {
            "allOf": [
              {
                "$ref": "#/$defs/MessageTemplateType"
              },
              {
                "description": "<p>The message template to be used for the welcome message to new users.</p> <p>See also <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pool-settings-message-customizations.html#cognito-user-pool-settings-user-invitation-message-customization\">Customizing User Invitation Messages</a>.</p>"
              }
            ]
          }
        },
        "description": "The configuration for creating a new user profile."
      },
      "AdminCreateUserUnusedAccountValidityDaysType": {
        "type": "integer",
        "minimum": 0,
        "maximum": 365
      },
      "MessageTemplateType": {
        "type": "object",
        "properties": {
          "SMSMessage": {
            "allOf": [
              {
                "$ref": "#/$defs/SmsVerificationMessageType"
              },
              {
                "description": "The message template for SMS messages."
              }
            ]
          },
          "EmailMessage": {
            "allOf": [
              {
                "$ref": "#/$defs/EmailVerificationMessageType"
              },
              {
                "description": "The message template for email messages. EmailMessage is allowed only if <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount\">EmailSendingAccount</a> is DEVELOPER. "
              }
            ]
          },
          "EmailSubject": {
            "allOf": [
              {
                "$ref": "#/$defs/EmailVerificationSubjectType"
              },
              {
                "description": "The subject line for email messages. EmailSubject is allowed only if <a href=\"https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_EmailConfigurationType.html#CognitoUserPools-Type-EmailConfigurationType-EmailSendingAccount\">EmailSendingAccount</a> is DEVELOPER. "
              }
            ]
          }
        },
        "description": "The message template structure."
      },
      "UserPoolAddOnsType": {
        "type": "object",
        "required": [
          "AdvancedSecurityMode"
        ],
        "properties": {
          "AdvancedSecurityMode": {
            "allOf": [
              {
                "$ref": "#/$defs/AdvancedSecurityModeType"
              },
              {
                "description": "The operating mode of advanced security features in your user pool."
              }
            ]
          }
        },
        "description": "<p>User pool add-ons. Contains settings for activation of advanced security features. To log user security information but take no action, set to <code>AUDIT</code>. To configure automatic security responses to risky traffic to your user pool, set to <code>ENFORCED</code>.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pool-settings-advanced-security.html\">Adding advanced security to a user pool</a>.</p>"
      },
      "AdvancedSecurityModeType": {
        "type": "string",
        "enum": [
          "OFF",
          "AUDIT",
          "ENFORCED"
        ]
      },
      "AccountRecoverySettingType": {
        "type": "object",
        "properties": {
          "RecoveryMechanisms": {
            "allOf": [
              {
                "$ref": "#/$defs/RecoveryMechanismsType"
              },
              {
                "description": "The list of <code>RecoveryOptionTypes</code>."
              }
            ]
          }
        },
        "description": "The data type for <code>AccountRecoverySetting</code>."
      },
      "RecoveryMechanismsType": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/RecoveryOptionType"
        },
        "minItems": 1,
        "maxItems": 2
      },
      "RecoveryOptionType": {
        "type": "object",
        "required": [
          "Priority",
          "Name"
        ],
        "properties": {
          "Priority": {
            "allOf": [
              {
                "$ref": "#/$defs/PriorityType"
              },
              {
                "description": "A positive integer specifying priority of a method with 1 being the highest priority."
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/RecoveryOptionNameType"
              },
              {
                "description": "The recovery method for a user."
              }
            ]
          }
        },
        "description": "A map containing a priority as a key, and recovery method name as a value."
      },
      "PriorityType": {
        "type": "integer",
        "minimum": 1,
        "maximum": 2
      },
      "RecoveryOptionNameType": {
        "type": "string",
        "enum": [
          "verified_email",
          "verified_phone_number",
          "admin_only"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://cognito-idp.us-east-1.amazonaws.com/#X-Amz-Target=AWSCognitoIdentityProviderService.UpdateUserPool"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Represents the response from the server when you make a request to update the user pool.",
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "487": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "488": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "489": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "490": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
