{
  "name": "UpdateResourceServer",
  "description": "<p>Updates the name and scopes of resource server. All other fields are read-only.</p> <important> <p>If you don't provide a value for an attribute, it is set to the default value.</p> </important> <note> <p>Amazon Cognito evaluates Identity and Access Management (IAM) policies in requests for this API operation. For this operation, you must use IAM credentials to authorize requests, and you must grant yourself the corresponding IAM permission in a policy.</p> <p class=\"title\"> <b>Learn more</b> </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-signing.html\">Signing Amazon Web Services API Requests</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/user-pools-API-operations.html\">Using the Amazon Cognito user pools API and user pool endpoints</a> </p> </li> </ul> </note>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AWSCognitoIdentityProviderService.UpdateResourceServer"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/UpdateResourceServerRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "UpdateResourceServerRequest": {
        "type": "object",
        "required": [
          "UserPoolId",
          "Identifier",
          "Name"
        ],
        "title": "UpdateResourceServerRequest",
        "properties": {
          "UserPoolId": {
            "allOf": [
              {
                "$ref": "#/$defs/UserPoolIdType"
              },
              {
                "description": "The user pool ID for the user pool."
              }
            ]
          },
          "Identifier": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceServerIdentifierType"
              },
              {
                "description": "The identifier for the resource server."
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceServerNameType"
              },
              {
                "description": "The name of the resource server."
              }
            ]
          },
          "Scopes": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceServerScopeListType"
              },
              {
                "description": "The scope values to be set for the resource server."
              }
            ]
          }
        }
      },
      "UserPoolIdType": {
        "type": "string",
        "pattern": "[\\w-]+_[0-9a-zA-Z]+",
        "minLength": 1,
        "maxLength": 55
      },
      "ResourceServerIdentifierType": {
        "type": "string",
        "pattern": "[\\x21\\x23-\\x5B\\x5D-\\x7E]+",
        "minLength": 1,
        "maxLength": 256
      },
      "ResourceServerNameType": {
        "type": "string",
        "pattern": "[\\w\\s+=,.@-]+",
        "minLength": 1,
        "maxLength": 256
      },
      "ResourceServerScopeListType": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ResourceServerScopeType"
        },
        "maxItems": 100
      },
      "ResourceServerScopeType": {
        "type": "object",
        "required": [
          "ScopeName",
          "ScopeDescription"
        ],
        "properties": {
          "ScopeName": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceServerScopeNameType"
              },
              {
                "description": "The name of the scope."
              }
            ]
          },
          "ScopeDescription": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceServerScopeDescriptionType"
              },
              {
                "description": "A description of the scope."
              }
            ]
          }
        },
        "description": "A resource server scope."
      },
      "ResourceServerScopeNameType": {
        "type": "string",
        "pattern": "[\\x21\\x23-\\x2E\\x30-\\x5B\\x5D-\\x7E]+",
        "minLength": 1,
        "maxLength": 256
      },
      "ResourceServerScopeDescriptionType": {
        "type": "string",
        "minLength": 1,
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://cognito-idp.us-east-1.amazonaws.com/#X-Amz-Target=AWSCognitoIdentityProviderService.UpdateResourceServer"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**ResourceServer**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
