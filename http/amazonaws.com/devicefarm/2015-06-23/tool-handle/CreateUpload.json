{
  "name": "CreateUpload",
  "description": "Uploads an app or test scripts.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "DeviceFarm_20150623.CreateUpload"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/CreateUploadRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "CreateUploadRequest": {
        "type": "object",
        "required": [
          "projectArn",
          "name",
          "type"
        ],
        "title": "CreateUploadRequest",
        "properties": {
          "projectArn": {
            "allOf": [
              {
                "$ref": "#/$defs/AmazonResourceName"
              },
              {
                "description": "The ARN of the project for the upload."
              }
            ]
          },
          "name": {
            "allOf": [
              {
                "$ref": "#/$defs/Name"
              },
              {
                "description": "The upload's file name. The name should not contain any forward slashes (<code>/</code>). If you are uploading an iOS app, the file name must end with the <code>.ipa</code> extension. If you are uploading an Android app, the file name must end with the <code>.apk</code> extension. For all others, the file name must end with the <code>.zip</code> file extension."
              }
            ]
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/$defs/UploadType"
              },
              {
                "description": "<p>The upload's upload type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>ANDROID_APP</p> </li> <li> <p>IOS_APP</p> </li> <li> <p>WEB_APP</p> </li> <li> <p>EXTERNAL_DATA</p> </li> <li> <p>APPIUM_JAVA_JUNIT_TEST_PACKAGE</p> </li> <li> <p>APPIUM_JAVA_TESTNG_TEST_PACKAGE</p> </li> <li> <p>APPIUM_PYTHON_TEST_PACKAGE</p> </li> <li> <p>APPIUM_NODE_TEST_PACKAGE</p> </li> <li> <p>APPIUM_RUBY_TEST_PACKAGE</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE</p> </li> <li> <p>APPIUM_WEB_PYTHON_TEST_PACKAGE</p> </li> <li> <p>APPIUM_WEB_NODE_TEST_PACKAGE</p> </li> <li> <p>APPIUM_WEB_RUBY_TEST_PACKAGE</p> </li> <li> <p>CALABASH_TEST_PACKAGE</p> </li> <li> <p>INSTRUMENTATION_TEST_PACKAGE</p> </li> <li> <p>UIAUTOMATION_TEST_PACKAGE</p> </li> <li> <p>UIAUTOMATOR_TEST_PACKAGE</p> </li> <li> <p>XCTEST_TEST_PACKAGE</p> </li> <li> <p>XCTEST_UI_TEST_PACKAGE</p> </li> <li> <p>APPIUM_JAVA_JUNIT_TEST_SPEC</p> </li> <li> <p>APPIUM_JAVA_TESTNG_TEST_SPEC</p> </li> <li> <p>APPIUM_PYTHON_TEST_SPEC</p> </li> <li> <p>APPIUM_NODE_TEST_SPEC</p> </li> <li> <p>APPIUM_RUBY_TEST_SPEC</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT_TEST_SPEC</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG_TEST_SPEC</p> </li> <li> <p>APPIUM_WEB_PYTHON_TEST_SPEC</p> </li> <li> <p>APPIUM_WEB_NODE_TEST_SPEC</p> </li> <li> <p>APPIUM_WEB_RUBY_TEST_SPEC</p> </li> <li> <p>INSTRUMENTATION_TEST_SPEC</p> </li> <li> <p>XCTEST_UI_TEST_SPEC</p> </li> </ul> <p> If you call <code>CreateUpload</code> with <code>WEB_APP</code> specified, AWS Device Farm throws an <code>ArgumentException</code> error.</p>"
              }
            ]
          },
          "contentType": {
            "allOf": [
              {
                "$ref": "#/$defs/ContentType"
              },
              {
                "description": "The upload's content type (for example, <code>application/octet-stream</code>)."
              }
            ]
          }
        },
        "description": "Represents a request to the create upload operation."
      },
      "AmazonResourceName": {
        "type": "string",
        "pattern": "^arn:.+",
        "minLength": 32,
        "maxLength": 1011
      },
      "Name": {
        "type": "string",
        "minLength": 0,
        "maxLength": 256
      },
      "UploadType": {
        "type": "string",
        "enum": [
          "ANDROID_APP",
          "IOS_APP",
          "WEB_APP",
          "EXTERNAL_DATA",
          "APPIUM_JAVA_JUNIT_TEST_PACKAGE",
          "APPIUM_JAVA_TESTNG_TEST_PACKAGE",
          "APPIUM_PYTHON_TEST_PACKAGE",
          "APPIUM_NODE_TEST_PACKAGE",
          "APPIUM_RUBY_TEST_PACKAGE",
          "APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE",
          "APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE",
          "APPIUM_WEB_PYTHON_TEST_PACKAGE",
          "APPIUM_WEB_NODE_TEST_PACKAGE",
          "APPIUM_WEB_RUBY_TEST_PACKAGE",
          "CALABASH_TEST_PACKAGE",
          "INSTRUMENTATION_TEST_PACKAGE",
          "UIAUTOMATION_TEST_PACKAGE",
          "UIAUTOMATOR_TEST_PACKAGE",
          "XCTEST_TEST_PACKAGE",
          "XCTEST_UI_TEST_PACKAGE",
          "APPIUM_JAVA_JUNIT_TEST_SPEC",
          "APPIUM_JAVA_TESTNG_TEST_SPEC",
          "APPIUM_PYTHON_TEST_SPEC",
          "APPIUM_NODE_TEST_SPEC",
          "APPIUM_RUBY_TEST_SPEC",
          "APPIUM_WEB_JAVA_JUNIT_TEST_SPEC",
          "APPIUM_WEB_JAVA_TESTNG_TEST_SPEC",
          "APPIUM_WEB_PYTHON_TEST_SPEC",
          "APPIUM_WEB_NODE_TEST_SPEC",
          "APPIUM_WEB_RUBY_TEST_SPEC",
          "INSTRUMENTATION_TEST_SPEC",
          "XCTEST_UI_TEST_SPEC"
        ]
      },
      "ContentType": {
        "type": "string",
        "minLength": 0,
        "maxLength": 64
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://devicefarm.us-east-1.amazonaws.com/#X-Amz-Target=DeviceFarm_20150623.CreateUpload"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Represents the result of a create upload request.",
        "**Key properties:**",
        {
          "$ul": [
            "**upload**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
