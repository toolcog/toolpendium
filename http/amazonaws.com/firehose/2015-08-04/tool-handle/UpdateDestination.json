{
  "name": "UpdateDestination",
  "description": "<p>Updates the specified destination of the specified delivery stream.</p> <p>Use this operation to change the destination type (for example, to replace the Amazon S3 destination with Amazon Redshift) or change the parameters associated with a destination (for example, to change the bucket name of the Amazon S3 destination). The update might not occur immediately. The target delivery stream remains active while the configurations are updated, so data writes to the delivery stream can continue during this process. The updated configurations are usually effective within a few minutes.</p> <p>Switching between Amazon ES and other services is not supported. For an Amazon ES destination, you can only update to another Amazon ES destination.</p> <p>If the destination type is the same, Kinesis Data Firehose merges the configuration parameters specified with the destination configuration that already exists on the delivery stream. If any of the parameters are not specified in the call, the existing values are retained. For example, in the Amazon S3 destination, if <a>EncryptionConfiguration</a> is not specified, then the existing <code>EncryptionConfiguration</code> is maintained on the destination.</p> <p>If the destination type is not the same, for example, changing the destination from Amazon S3 to Amazon Redshift, Kinesis Data Firehose does not merge any parameters. In this case, all parameters must be specified.</p> <p>Kinesis Data Firehose uses <code>CurrentDeliveryStreamVersionId</code> to avoid race conditions and conflicting merges. This is a required field, and the service updates the configuration only if the existing configuration has a version ID that matches. After the update is applied successfully, the version ID is updated, and can be retrieved using <a>DescribeDeliveryStream</a>. Use the new version ID to set <code>CurrentDeliveryStreamVersionId</code> in the next call.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "Firehose_20150804.UpdateDestination"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/UpdateDestinationInput"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "UpdateDestinationInput": {
        "type": "object",
        "required": [
          "DeliveryStreamName",
          "CurrentDeliveryStreamVersionId",
          "DestinationId"
        ],
        "title": "UpdateDestinationInput",
        "properties": {
          "DeliveryStreamName": {
            "allOf": [
              {
                "$ref": "#/$defs/DeliveryStreamName"
              },
              {
                "description": "The name of the delivery stream."
              }
            ]
          },
          "CurrentDeliveryStreamVersionId": {
            "allOf": [
              {
                "$ref": "#/$defs/DeliveryStreamVersionId"
              },
              {
                "description": "Obtain this value from the <code>VersionId</code> result of <a>DeliveryStreamDescription</a>. This value is required, and helps the service perform conditional operations. For example, if there is an interleaving update and this value is null, then the update destination fails. After the update is successful, the <code>VersionId</code> value is updated. The service then performs a merge of the old configuration with the new configuration."
              }
            ]
          },
          "DestinationId": {
            "allOf": [
              {
                "$ref": "#/$defs/DestinationId"
              },
              {
                "description": "The ID of the destination."
              }
            ]
          },
          "S3DestinationUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/S3DestinationUpdate"
              },
              {
                "deprecated": true,
                "description": "[Deprecated] Describes an update for a destination in Amazon S3."
              }
            ]
          },
          "ExtendedS3DestinationUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/ExtendedS3DestinationUpdate"
              },
              {
                "description": "Describes an update for a destination in Amazon S3."
              }
            ]
          },
          "RedshiftDestinationUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/RedshiftDestinationUpdate"
              },
              {
                "description": "Describes an update for a destination in Amazon Redshift."
              }
            ]
          },
          "ElasticsearchDestinationUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/ElasticsearchDestinationUpdate"
              },
              {
                "description": "Describes an update for a destination in Amazon ES."
              }
            ]
          },
          "AmazonopensearchserviceDestinationUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/AmazonopensearchserviceDestinationUpdate"
              },
              {
                "description": "Describes an update for a destination in Amazon OpenSearch Service."
              }
            ]
          },
          "SplunkDestinationUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/SplunkDestinationUpdate"
              },
              {
                "description": "Describes an update for a destination in Splunk."
              }
            ]
          },
          "HttpEndpointDestinationUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/HttpEndpointDestinationUpdate"
              },
              {
                "description": "Describes an update to the specified HTTP endpoint destination."
              }
            ]
          },
          "AmazonOpenSearchServerlessDestinationUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/AmazonOpenSearchServerlessDestinationUpdate"
              },
              {
                "description": "Describes an update for a destination in the Serverless offering for Amazon OpenSearch Service."
              }
            ]
          }
        }
      },
      "DeliveryStreamName": {
        "type": "string",
        "pattern": "[a-zA-Z0-9_.-]+",
        "minLength": 1,
        "maxLength": 64
      },
      "DeliveryStreamVersionId": {
        "type": "string",
        "pattern": "[0-9]+",
        "minLength": 1,
        "maxLength": 50
      },
      "DestinationId": {
        "type": "string",
        "pattern": "[a-zA-Z0-9-]+",
        "minLength": 1,
        "maxLength": 100
      },
      "S3DestinationUpdate": {
        "type": "object",
        "properties": {
          "RoleARN": {
            "allOf": [
              {
                "$ref": "#/$defs/RoleARN"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the Amazon Web Services credentials. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a>."
              }
            ]
          },
          "BucketARN": {
            "allOf": [
              {
                "$ref": "#/$defs/BucketARN"
              },
              {
                "description": "The ARN of the S3 bucket. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a>."
              }
            ]
          },
          "Prefix": {
            "allOf": [
              {
                "$ref": "#/$defs/Prefix"
              },
              {
                "description": "The \"YYYY/MM/DD/HH\" time format prefix is automatically used for delivered Amazon S3 files. You can also specify a custom prefix, as described in <a href=\"https://docs.aws.amazon.com/firehose/latest/dev/s3-prefixes.html\">Custom Prefixes for Amazon S3 Objects</a>."
              }
            ]
          },
          "ErrorOutputPrefix": {
            "allOf": [
              {
                "$ref": "#/$defs/ErrorOutputPrefix"
              },
              {
                "description": "A prefix that Kinesis Data Firehose evaluates and adds to failed records before writing them to S3. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see <a href=\"https://docs.aws.amazon.com/firehose/latest/dev/s3-prefixes.html\">Custom Prefixes for Amazon S3 Objects</a>."
              }
            ]
          },
          "BufferingHints": {
            "allOf": [
              {
                "$ref": "#/$defs/BufferingHints"
              },
              {
                "description": "The buffering option. If no value is specified, <code>BufferingHints</code> object default values are used."
              }
            ]
          },
          "CompressionFormat": {
            "allOf": [
              {
                "$ref": "#/$defs/CompressionFormat"
              },
              {
                "description": "<p>The compression format. If no value is specified, the default is <code>UNCOMPRESSED</code>.</p> <p>The compression formats <code>SNAPPY</code> or <code>ZIP</code> cannot be specified for Amazon Redshift destinations because they are not supported by the Amazon Redshift <code>COPY</code> operation that reads from the S3 bucket.</p>"
              }
            ]
          },
          "EncryptionConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/EncryptionConfiguration"
              },
              {
                "description": "The encryption configuration. If no value is specified, the default is no encryption."
              }
            ]
          },
          "CloudWatchLoggingOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/CloudWatchLoggingOptions"
              },
              {
                "description": "The CloudWatch logging options for your delivery stream."
              }
            ]
          }
        },
        "description": "Describes an update for a destination in Amazon S3."
      },
      "RoleARN": {
        "type": "string",
        "pattern": "arn:.*",
        "minLength": 1,
        "maxLength": 512
      },
      "BucketARN": {
        "type": "string",
        "pattern": "arn:.*",
        "minLength": 1,
        "maxLength": 2048
      },
      "Prefix": {
        "type": "string",
        "pattern": ".*",
        "minLength": 0,
        "maxLength": 1024
      },
      "ErrorOutputPrefix": {
        "type": "string",
        "pattern": ".*",
        "minLength": 0,
        "maxLength": 1024
      },
      "BufferingHints": {
        "type": "object",
        "properties": {
          "SizeInMBs": {
            "allOf": [
              {
                "$ref": "#/$defs/SizeInMBs"
              },
              {
                "description": "<p>Buffer incoming data to the specified size, in MiBs, before delivering it to the destination. The default value is 5. This parameter is optional but if you specify a value for it, you must also specify a value for <code>IntervalInSeconds</code>, and vice versa.</p> <p>We recommend setting this parameter to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MiB/sec, the value should be 10 MiB or higher.</p>"
              }
            ]
          },
          "IntervalInSeconds": {
            "allOf": [
              {
                "$ref": "#/$defs/IntervalInSeconds"
              },
              {
                "description": "Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300. This parameter is optional but if you specify a value for it, you must also specify a value for <code>SizeInMBs</code>, and vice versa."
              }
            ]
          }
        },
        "description": "Describes hints for the buffering to perform before delivering data to the destination. These options are treated as hints, and therefore Kinesis Data Firehose might choose to use different values when it is optimal. The <code>SizeInMBs</code> and <code>IntervalInSeconds</code> parameters are optional. However, if specify a value for one of them, you must also provide a value for the other."
      },
      "SizeInMBs": {
        "type": "integer",
        "minimum": 1,
        "maximum": 128
      },
      "IntervalInSeconds": {
        "type": "integer",
        "minimum": 60,
        "maximum": 900
      },
      "CompressionFormat": {
        "type": "string",
        "enum": [
          "UNCOMPRESSED",
          "GZIP",
          "ZIP",
          "Snappy",
          "HADOOP_SNAPPY"
        ]
      },
      "EncryptionConfiguration": {
        "type": "object",
        "properties": {
          "NoEncryptionConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/NoEncryptionConfig"
              },
              {
                "description": "Specifically override existing encryption information to ensure that no encryption is used."
              }
            ]
          },
          "KMSEncryptionConfig": {
            "allOf": [
              {
                "$ref": "#/$defs/KMSEncryptionConfig"
              },
              {
                "description": "The encryption key."
              }
            ]
          }
        },
        "description": "Describes the encryption for a destination in Amazon S3."
      },
      "NoEncryptionConfig": {
        "type": "string",
        "enum": [
          "NoEncryption"
        ]
      },
      "KMSEncryptionConfig": {
        "type": "object",
        "required": [
          "AWSKMSKeyARN"
        ],
        "properties": {
          "AWSKMSKeyARN": {
            "allOf": [
              {
                "$ref": "#/$defs/AWSKMSKeyARN"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the encryption key. Must belong to the same Amazon Web Services Region as the destination Amazon S3 bucket. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a>."
              }
            ]
          }
        },
        "description": "Describes an encryption key for a destination in Amazon S3."
      },
      "AWSKMSKeyARN": {
        "type": "string",
        "pattern": "arn:.*",
        "minLength": 1,
        "maxLength": 512
      },
      "CloudWatchLoggingOptions": {
        "type": "object",
        "properties": {
          "Enabled": {
            "allOf": [
              {
                "$ref": "#/$defs/BooleanObject"
              },
              {
                "description": "Enables or disables CloudWatch logging."
              }
            ]
          },
          "LogGroupName": {
            "allOf": [
              {
                "$ref": "#/$defs/LogGroupName"
              },
              {
                "description": "The CloudWatch group name for logging. This value is required if CloudWatch logging is enabled."
              }
            ]
          },
          "LogStreamName": {
            "allOf": [
              {
                "$ref": "#/$defs/LogStreamName"
              },
              {
                "description": "The CloudWatch log stream name for logging. This value is required if CloudWatch logging is enabled."
              }
            ]
          }
        },
        "description": "Describes the Amazon CloudWatch logging options for your delivery stream."
      },
      "BooleanObject": {
        "type": "boolean"
      },
      "LogGroupName": {
        "type": "string",
        "pattern": "[\\.\\-_/#A-Za-z0-9]*",
        "minLength": 0,
        "maxLength": 512
      },
      "LogStreamName": {
        "type": "string",
        "pattern": "[^:*]*",
        "minLength": 0,
        "maxLength": 512
      },
      "ExtendedS3DestinationUpdate": {
        "type": "object",
        "properties": {
          "RoleARN": {
            "allOf": [
              {
                "$ref": "#/$defs/RoleARN"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the Amazon Web Services credentials. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a>."
              }
            ]
          },
          "BucketARN": {
            "allOf": [
              {
                "$ref": "#/$defs/BucketARN"
              },
              {
                "description": "The ARN of the S3 bucket. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a>."
              }
            ]
          },
          "Prefix": {
            "allOf": [
              {
                "$ref": "#/$defs/Prefix"
              },
              {
                "description": "The \"YYYY/MM/DD/HH\" time format prefix is automatically used for delivered Amazon S3 files. You can also specify a custom prefix, as described in <a href=\"https://docs.aws.amazon.com/firehose/latest/dev/s3-prefixes.html\">Custom Prefixes for Amazon S3 Objects</a>."
              }
            ]
          },
          "ErrorOutputPrefix": {
            "allOf": [
              {
                "$ref": "#/$defs/ErrorOutputPrefix"
              },
              {
                "description": "A prefix that Kinesis Data Firehose evaluates and adds to failed records before writing them to S3. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see <a href=\"https://docs.aws.amazon.com/firehose/latest/dev/s3-prefixes.html\">Custom Prefixes for Amazon S3 Objects</a>."
              }
            ]
          },
          "BufferingHints": {
            "allOf": [
              {
                "$ref": "#/$defs/BufferingHints"
              },
              {
                "description": "The buffering option."
              }
            ]
          },
          "CompressionFormat": {
            "allOf": [
              {
                "$ref": "#/$defs/CompressionFormat"
              },
              {
                "description": "The compression format. If no value is specified, the default is <code>UNCOMPRESSED</code>. "
              }
            ]
          },
          "EncryptionConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/EncryptionConfiguration"
              },
              {
                "description": "The encryption configuration. If no value is specified, the default is no encryption."
              }
            ]
          },
          "CloudWatchLoggingOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/CloudWatchLoggingOptions"
              },
              {
                "description": "The Amazon CloudWatch logging options for your delivery stream."
              }
            ]
          },
          "ProcessingConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/ProcessingConfiguration"
              },
              {
                "description": "The data processing configuration."
              }
            ]
          },
          "S3BackupMode": {
            "allOf": [
              {
                "$ref": "#/$defs/S3BackupMode"
              },
              {
                "description": "You can update a delivery stream to enable Amazon S3 backup if it is disabled. If backup is enabled, you can't update the delivery stream to disable it. "
              }
            ]
          },
          "S3BackupUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/S3DestinationUpdate"
              },
              {
                "description": "The Amazon S3 destination for backup."
              }
            ]
          },
          "DataFormatConversionConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/DataFormatConversionConfiguration"
              },
              {
                "description": "The serializer, deserializer, and schema for converting data from the JSON format to the Parquet or ORC format before writing it to Amazon S3."
              }
            ]
          },
          "DynamicPartitioningConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/DynamicPartitioningConfiguration"
              },
              {
                "description": "The configuration of the dynamic partitioning mechanism that creates smaller data sets from the streaming data by partitioning it based on partition keys. Currently, dynamic partitioning is only supported for Amazon S3 destinations. "
              }
            ]
          }
        },
        "description": "Describes an update for a destination in Amazon S3."
      },
      "ProcessingConfiguration": {
        "type": "object",
        "properties": {
          "Enabled": {
            "allOf": [
              {
                "$ref": "#/$defs/BooleanObject"
              },
              {
                "description": "Enables or disables data processing."
              }
            ]
          },
          "Processors": {
            "allOf": [
              {
                "$ref": "#/$defs/ProcessorList"
              },
              {
                "description": "The data processors."
              }
            ]
          }
        },
        "description": "Describes a data processing configuration."
      },
      "ProcessorList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Processor"
        }
      },
      "Processor": {
        "type": "object",
        "required": [
          "Type"
        ],
        "properties": {
          "Type": {
            "allOf": [
              {
                "$ref": "#/$defs/ProcessorType"
              },
              {
                "description": "The type of processor."
              }
            ]
          },
          "Parameters": {
            "allOf": [
              {
                "$ref": "#/$defs/ProcessorParameterList"
              },
              {
                "description": "The processor parameters."
              }
            ]
          }
        },
        "description": "Describes a data processor."
      },
      "ProcessorType": {
        "type": "string",
        "enum": [
          "RecordDeAggregation",
          "Lambda",
          "MetadataExtraction",
          "AppendDelimiterToRecord"
        ]
      },
      "ProcessorParameterList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ProcessorParameter"
        }
      },
      "ProcessorParameter": {
        "type": "object",
        "required": [
          "ParameterName",
          "ParameterValue"
        ],
        "properties": {
          "ParameterName": {
            "allOf": [
              {
                "$ref": "#/$defs/ProcessorParameterName"
              },
              {
                "description": "The name of the parameter. Currently the following default values are supported: 3 for <code>NumberOfRetries</code> and 60 for the <code>BufferIntervalInSeconds</code>. The <code>BufferSizeInMBs</code> ranges between 0.2 MB and up to 3MB. The default buffering hint is 1MB for all destinations, except Splunk. For Splunk, the default buffering hint is 256 KB. "
              }
            ]
          },
          "ParameterValue": {
            "allOf": [
              {
                "$ref": "#/$defs/ProcessorParameterValue"
              },
              {
                "description": "The parameter value."
              }
            ]
          }
        },
        "description": "Describes the processor parameter. "
      },
      "ProcessorParameterName": {
        "type": "string",
        "enum": [
          "LambdaArn",
          "NumberOfRetries",
          "MetadataExtractionQuery",
          "JsonParsingEngine",
          "RoleArn",
          "BufferSizeInMBs",
          "BufferIntervalInSeconds",
          "SubRecordType",
          "Delimiter"
        ]
      },
      "ProcessorParameterValue": {
        "type": "string",
        "pattern": "^(?!\\s*$).+",
        "minLength": 1,
        "maxLength": 5120
      },
      "S3BackupMode": {
        "type": "string",
        "enum": [
          "Disabled",
          "Enabled"
        ]
      },
      "DataFormatConversionConfiguration": {
        "type": "object",
        "properties": {
          "SchemaConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/SchemaConfiguration"
              },
              {
                "description": "Specifies the Amazon Web Services Glue Data Catalog table that contains the column information. This parameter is required if <code>Enabled</code> is set to true."
              }
            ]
          },
          "InputFormatConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/InputFormatConfiguration"
              },
              {
                "description": "Specifies the deserializer that you want Kinesis Data Firehose to use to convert the format of your data from JSON. This parameter is required if <code>Enabled</code> is set to true."
              }
            ]
          },
          "OutputFormatConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/OutputFormatConfiguration"
              },
              {
                "description": "Specifies the serializer that you want Kinesis Data Firehose to use to convert the format of your data to the Parquet or ORC format. This parameter is required if <code>Enabled</code> is set to true."
              }
            ]
          },
          "Enabled": {
            "allOf": [
              {
                "$ref": "#/$defs/BooleanObject"
              },
              {
                "description": "Defaults to <code>true</code>. Set it to <code>false</code> if you want to disable format conversion while preserving the configuration details."
              }
            ]
          }
        },
        "description": "Specifies that you want Kinesis Data Firehose to convert data from the JSON format to the Parquet or ORC format before writing it to Amazon S3. Kinesis Data Firehose uses the serializer and deserializer that you specify, in addition to the column information from the Amazon Web Services Glue table, to deserialize your input data from JSON and then serialize it to the Parquet or ORC format. For more information, see <a href=\"https://docs.aws.amazon.com/firehose/latest/dev/record-format-conversion.html\">Kinesis Data Firehose Record Format Conversion</a>."
      },
      "SchemaConfiguration": {
        "type": "object",
        "properties": {
          "RoleARN": {
            "allOf": [
              {
                "$ref": "#/$defs/NonEmptyStringWithoutWhitespace"
              },
              {
                "description": "<p>The role that Kinesis Data Firehose can use to access Amazon Web Services Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.</p> <important> <p>If the <code>SchemaConfiguration</code> request parameter is used as part of invoking the <code>CreateDeliveryStream</code> API, then the <code>RoleARN</code> property is required and its value must be specified.</p> </important>"
              }
            ]
          },
          "CatalogId": {
            "allOf": [
              {
                "$ref": "#/$defs/NonEmptyStringWithoutWhitespace"
              },
              {
                "description": "The ID of the Amazon Web Services Glue Data Catalog. If you don't supply this, the Amazon Web Services account ID is used by default."
              }
            ]
          },
          "DatabaseName": {
            "allOf": [
              {
                "$ref": "#/$defs/NonEmptyStringWithoutWhitespace"
              },
              {
                "description": "<p>Specifies the name of the Amazon Web Services Glue database that contains the schema for the output data.</p> <important> <p>If the <code>SchemaConfiguration</code> request parameter is used as part of invoking the <code>CreateDeliveryStream</code> API, then the <code>DatabaseName</code> property is required and its value must be specified.</p> </important>"
              }
            ]
          },
          "TableName": {
            "allOf": [
              {
                "$ref": "#/$defs/NonEmptyStringWithoutWhitespace"
              },
              {
                "description": "<p>Specifies the Amazon Web Services Glue table that contains the column information that constitutes your data schema.</p> <important> <p>If the <code>SchemaConfiguration</code> request parameter is used as part of invoking the <code>CreateDeliveryStream</code> API, then the <code>TableName</code> property is required and its value must be specified.</p> </important>"
              }
            ]
          },
          "Region": {
            "allOf": [
              {
                "$ref": "#/$defs/NonEmptyStringWithoutWhitespace"
              },
              {
                "description": "If you don't specify an Amazon Web Services Region, the default is the current Region."
              }
            ]
          },
          "VersionId": {
            "allOf": [
              {
                "$ref": "#/$defs/NonEmptyStringWithoutWhitespace"
              },
              {
                "description": "Specifies the table version for the output data schema. If you don't specify this version ID, or if you set it to <code>LATEST</code>, Kinesis Data Firehose uses the most recent version. This means that any updates to the table are automatically picked up."
              }
            ]
          }
        },
        "description": "Specifies the schema to which you want Kinesis Data Firehose to configure your data before it writes it to Amazon S3. This parameter is required if <code>Enabled</code> is set to true."
      },
      "NonEmptyStringWithoutWhitespace": {
        "type": "string",
        "pattern": "^\\S+$",
        "minLength": 1,
        "maxLength": 1024
      },
      "InputFormatConfiguration": {
        "type": "object",
        "properties": {
          "Deserializer": {
            "allOf": [
              {
                "$ref": "#/$defs/Deserializer"
              },
              {
                "description": "Specifies which deserializer to use. You can choose either the Apache Hive JSON SerDe or the OpenX JSON SerDe. If both are non-null, the server rejects the request."
              }
            ]
          }
        },
        "description": "Specifies the deserializer you want to use to convert the format of the input data. This parameter is required if <code>Enabled</code> is set to true."
      },
      "Deserializer": {
        "type": "object",
        "properties": {
          "OpenXJsonSerDe": {
            "allOf": [
              {
                "$ref": "#/$defs/OpenXJsonSerDe"
              },
              {
                "description": "The OpenX SerDe. Used by Kinesis Data Firehose for deserializing data, which means converting it from the JSON format in preparation for serializing it to the Parquet or ORC format. This is one of two deserializers you can choose, depending on which one offers the functionality you need. The other option is the native Hive / HCatalog JsonSerDe."
              }
            ]
          },
          "HiveJsonSerDe": {
            "allOf": [
              {
                "$ref": "#/$defs/HiveJsonSerDe"
              },
              {
                "description": "The native Hive / HCatalog JsonSerDe. Used by Kinesis Data Firehose for deserializing data, which means converting it from the JSON format in preparation for serializing it to the Parquet or ORC format. This is one of two deserializers you can choose, depending on which one offers the functionality you need. The other option is the OpenX SerDe."
              }
            ]
          }
        },
        "description": "The deserializer you want Kinesis Data Firehose to use for converting the input data from JSON. Kinesis Data Firehose then serializes the data to its final format using the <a>Serializer</a>. Kinesis Data Firehose supports two types of deserializers: the <a href=\"https://cwiki.apache.org/confluence/display/Hive/LanguageManual+DDL#LanguageManualDDL-JSON\">Apache Hive JSON SerDe</a> and the <a href=\"https://github.com/rcongiu/Hive-JSON-Serde\">OpenX JSON SerDe</a>."
      },
      "OpenXJsonSerDe": {
        "type": "object",
        "properties": {
          "ConvertDotsInJsonKeysToUnderscores": {
            "allOf": [
              {
                "$ref": "#/$defs/BooleanObject"
              },
              {
                "description": "<p>When set to <code>true</code>, specifies that the names of the keys include dots and that you want Kinesis Data Firehose to replace them with underscores. This is useful because Apache Hive does not allow dots in column names. For example, if the JSON contains a key whose name is \"a.b\", you can define the column name to be \"a_b\" when using this option.</p> <p>The default is <code>false</code>.</p>"
              }
            ]
          },
          "CaseInsensitive": {
            "allOf": [
              {
                "$ref": "#/$defs/BooleanObject"
              },
              {
                "description": "When set to <code>true</code>, which is the default, Kinesis Data Firehose converts JSON keys to lowercase before deserializing them."
              }
            ]
          },
          "ColumnToJsonKeyMappings": {
            "allOf": [
              {
                "$ref": "#/$defs/ColumnToJsonKeyMappings"
              },
              {
                "description": "Maps column names to JSON keys that aren't identical to the column names. This is useful when the JSON contains keys that are Hive keywords. For example, <code>timestamp</code> is a Hive keyword. If you have a JSON key named <code>timestamp</code>, set this parameter to <code>{\"ts\": \"timestamp\"}</code> to map this key to a column named <code>ts</code>."
              }
            ]
          }
        },
        "description": "The OpenX SerDe. Used by Kinesis Data Firehose for deserializing data, which means converting it from the JSON format in preparation for serializing it to the Parquet or ORC format. This is one of two deserializers you can choose, depending on which one offers the functionality you need. The other option is the native Hive / HCatalog JsonSerDe."
      },
      "ColumnToJsonKeyMappings": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/NonEmptyString"
        }
      },
      "NonEmptyString": {
        "type": "string",
        "pattern": "^(?!\\s*$).+",
        "minLength": 1,
        "maxLength": 1024
      },
      "HiveJsonSerDe": {
        "type": "object",
        "properties": {
          "TimestampFormats": {
            "allOf": [
              {
                "$ref": "#/$defs/ListOfNonEmptyStrings"
              },
              {
                "description": "Indicates how you want Kinesis Data Firehose to parse the date and timestamps that may be present in your input data JSON. To specify these format strings, follow the pattern syntax of JodaTime's DateTimeFormat format strings. For more information, see <a href=\"https://www.joda.org/joda-time/apidocs/org/joda/time/format/DateTimeFormat.html\">Class DateTimeFormat</a>. You can also use the special value <code>millis</code> to parse timestamps in epoch milliseconds. If you don't specify a format, Kinesis Data Firehose uses <code>java.sql.Timestamp::valueOf</code> by default."
              }
            ]
          }
        },
        "description": "The native Hive / HCatalog JsonSerDe. Used by Kinesis Data Firehose for deserializing data, which means converting it from the JSON format in preparation for serializing it to the Parquet or ORC format. This is one of two deserializers you can choose, depending on which one offers the functionality you need. The other option is the OpenX SerDe."
      },
      "ListOfNonEmptyStrings": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/NonEmptyString"
        }
      },
      "OutputFormatConfiguration": {
        "type": "object",
        "properties": {
          "Serializer": {
            "allOf": [
              {
                "$ref": "#/$defs/Serializer"
              },
              {
                "description": "Specifies which serializer to use. You can choose either the ORC SerDe or the Parquet SerDe. If both are non-null, the server rejects the request."
              }
            ]
          }
        },
        "description": "Specifies the serializer that you want Kinesis Data Firehose to use to convert the format of your data before it writes it to Amazon S3. This parameter is required if <code>Enabled</code> is set to true."
      },
      "Serializer": {
        "type": "object",
        "properties": {
          "ParquetSerDe": {
            "allOf": [
              {
                "$ref": "#/$defs/ParquetSerDe"
              },
              {
                "description": "A serializer to use for converting data to the Parquet format before storing it in Amazon S3. For more information, see <a href=\"https://parquet.apache.org/documentation/latest/\">Apache Parquet</a>."
              }
            ]
          },
          "OrcSerDe": {
            "allOf": [
              {
                "$ref": "#/$defs/OrcSerDe"
              },
              {
                "description": "A serializer to use for converting data to the ORC format before storing it in Amazon S3. For more information, see <a href=\"https://orc.apache.org/docs/\">Apache ORC</a>."
              }
            ]
          }
        },
        "description": "The serializer that you want Kinesis Data Firehose to use to convert data to the target format before writing it to Amazon S3. Kinesis Data Firehose supports two types of serializers: the <a href=\"https://hive.apache.org/javadocs/r1.2.2/api/org/apache/hadoop/hive/ql/io/orc/OrcSerde.html\">ORC SerDe</a> and the <a href=\"https://hive.apache.org/javadocs/r1.2.2/api/org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveSerDe.html\">Parquet SerDe</a>."
      },
      "ParquetSerDe": {
        "type": "object",
        "properties": {
          "BlockSizeBytes": {
            "allOf": [
              {
                "$ref": "#/$defs/BlockSizeBytes"
              },
              {
                "description": "The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Kinesis Data Firehose uses this value for padding calculations."
              }
            ]
          },
          "PageSizeBytes": {
            "allOf": [
              {
                "$ref": "#/$defs/ParquetPageSizeBytes"
              },
              {
                "description": "The Parquet page size. Column chunks are divided into pages. A page is conceptually an indivisible unit (in terms of compression and encoding). The minimum value is 64 KiB and the default is 1 MiB."
              }
            ]
          },
          "Compression": {
            "allOf": [
              {
                "$ref": "#/$defs/ParquetCompression"
              },
              {
                "description": "The compression code to use over data blocks. The possible values are <code>UNCOMPRESSED</code>, <code>SNAPPY</code>, and <code>GZIP</code>, with the default being <code>SNAPPY</code>. Use <code>SNAPPY</code> for higher decompression speed. Use <code>GZIP</code> if the compression ratio is more important than speed."
              }
            ]
          },
          "EnableDictionaryCompression": {
            "allOf": [
              {
                "$ref": "#/$defs/BooleanObject"
              },
              {
                "description": "Indicates whether to enable dictionary compression."
              }
            ]
          },
          "MaxPaddingBytes": {
            "allOf": [
              {
                "$ref": "#/$defs/NonNegativeIntegerObject"
              },
              {
                "description": "The maximum amount of padding to apply. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 0."
              }
            ]
          },
          "WriterVersion": {
            "allOf": [
              {
                "$ref": "#/$defs/ParquetWriterVersion"
              },
              {
                "description": "Indicates the version of row format to output. The possible values are <code>V1</code> and <code>V2</code>. The default is <code>V1</code>."
              }
            ]
          }
        },
        "description": "A serializer to use for converting data to the Parquet format before storing it in Amazon S3. For more information, see <a href=\"https://parquet.apache.org/documentation/latest/\">Apache Parquet</a>."
      },
      "BlockSizeBytes": {
        "type": "integer",
        "minimum": 67108864
      },
      "ParquetPageSizeBytes": {
        "type": "integer",
        "minimum": 65536
      },
      "ParquetCompression": {
        "type": "string",
        "enum": [
          "UNCOMPRESSED",
          "GZIP",
          "SNAPPY"
        ]
      },
      "NonNegativeIntegerObject": {
        "type": "integer",
        "minimum": 0
      },
      "ParquetWriterVersion": {
        "type": "string",
        "enum": [
          "V1",
          "V2"
        ]
      },
      "OrcSerDe": {
        "type": "object",
        "properties": {
          "StripeSizeBytes": {
            "allOf": [
              {
                "$ref": "#/$defs/OrcStripeSizeBytes"
              },
              {
                "description": "The number of bytes in each stripe. The default is 64 MiB and the minimum is 8 MiB."
              }
            ]
          },
          "BlockSizeBytes": {
            "allOf": [
              {
                "$ref": "#/$defs/BlockSizeBytes"
              },
              {
                "description": "The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Kinesis Data Firehose uses this value for padding calculations."
              }
            ]
          },
          "RowIndexStride": {
            "allOf": [
              {
                "$ref": "#/$defs/OrcRowIndexStride"
              },
              {
                "description": "The number of rows between index entries. The default is 10,000 and the minimum is 1,000."
              }
            ]
          },
          "EnablePadding": {
            "allOf": [
              {
                "$ref": "#/$defs/BooleanObject"
              },
              {
                "description": "Set this to <code>true</code> to indicate that you want stripes to be padded to the HDFS block boundaries. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is <code>false</code>."
              }
            ]
          },
          "PaddingTolerance": {
            "allOf": [
              {
                "$ref": "#/$defs/Proportion"
              },
              {
                "description": "<p>A number between 0 and 1 that defines the tolerance for block padding as a decimal fraction of stripe size. The default value is 0.05, which means 5 percent of stripe size.</p> <p>For the default values of 64 MiB ORC stripes and 256 MiB HDFS blocks, the default block padding tolerance of 5 percent reserves a maximum of 3.2 MiB for padding within the 256 MiB block. In such a case, if the available size within the block is more than 3.2 MiB, a new, smaller stripe is inserted to fit within that space. This ensures that no stripe crosses block boundaries and causes remote reads within a node-local task.</p> <p>Kinesis Data Firehose ignores this parameter when <a>OrcSerDe$EnablePadding</a> is <code>false</code>.</p>"
              }
            ]
          },
          "Compression": {
            "allOf": [
              {
                "$ref": "#/$defs/OrcCompression"
              },
              {
                "description": "The compression code to use over data blocks. The default is <code>SNAPPY</code>."
              }
            ]
          },
          "BloomFilterColumns": {
            "allOf": [
              {
                "$ref": "#/$defs/ListOfNonEmptyStringsWithoutWhitespace"
              },
              {
                "description": "The column names for which you want Kinesis Data Firehose to create bloom filters. The default is <code>null</code>."
              }
            ]
          },
          "BloomFilterFalsePositiveProbability": {
            "allOf": [
              {
                "$ref": "#/$defs/Proportion"
              },
              {
                "description": "The Bloom filter false positive probability (FPP). The lower the FPP, the bigger the Bloom filter. The default value is 0.05, the minimum is 0, and the maximum is 1."
              }
            ]
          },
          "DictionaryKeyThreshold": {
            "allOf": [
              {
                "$ref": "#/$defs/Proportion"
              },
              {
                "description": "Represents the fraction of the total number of non-null rows. To turn off dictionary encoding, set this fraction to a number that is less than the number of distinct keys in a dictionary. To always use dictionary encoding, set this threshold to 1."
              }
            ]
          },
          "FormatVersion": {
            "allOf": [
              {
                "$ref": "#/$defs/OrcFormatVersion"
              },
              {
                "description": "The version of the file to write. The possible values are <code>V0_11</code> and <code>V0_12</code>. The default is <code>V0_12</code>."
              }
            ]
          }
        },
        "description": "A serializer to use for converting data to the ORC format before storing it in Amazon S3. For more information, see <a href=\"https://orc.apache.org/docs/\">Apache ORC</a>."
      },
      "OrcStripeSizeBytes": {
        "type": "integer",
        "minimum": 8388608
      },
      "OrcRowIndexStride": {
        "type": "integer",
        "minimum": 1000
      },
      "Proportion": {
        "type": "number",
        "format": "double",
        "minimum": 0,
        "maximum": 1
      },
      "OrcCompression": {
        "type": "string",
        "enum": [
          "NONE",
          "ZLIB",
          "SNAPPY"
        ]
      },
      "ListOfNonEmptyStringsWithoutWhitespace": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/NonEmptyStringWithoutWhitespace"
        }
      },
      "OrcFormatVersion": {
        "type": "string",
        "enum": [
          "V0_11",
          "V0_12"
        ]
      },
      "DynamicPartitioningConfiguration": {
        "type": "object",
        "properties": {
          "RetryOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/RetryOptions"
              },
              {
                "description": "The retry behavior in case Kinesis Data Firehose is unable to deliver data to an Amazon S3 prefix."
              }
            ]
          },
          "Enabled": {
            "allOf": [
              {
                "$ref": "#/$defs/BooleanObject"
              },
              {
                "description": "Specifies that the dynamic partitioning is enabled for this Kinesis Data Firehose delivery stream."
              }
            ]
          }
        },
        "description": "The configuration of the dynamic partitioning mechanism that creates smaller data sets from the streaming data by partitioning it based on partition keys. Currently, dynamic partitioning is only supported for Amazon S3 destinations. "
      },
      "RetryOptions": {
        "type": "object",
        "properties": {
          "DurationInSeconds": {
            "allOf": [
              {
                "$ref": "#/$defs/RetryDurationInSeconds"
              },
              {
                "description": "The period of time during which Kinesis Data Firehose retries to deliver data to the specified Amazon S3 prefix."
              }
            ]
          }
        },
        "description": " The retry behavior in case Kinesis Data Firehose is unable to deliver data to an Amazon S3 prefix."
      },
      "RetryDurationInSeconds": {
        "type": "integer",
        "minimum": 0,
        "maximum": 7200
      },
      "RedshiftDestinationUpdate": {
        "type": "object",
        "properties": {
          "RoleARN": {
            "allOf": [
              {
                "$ref": "#/$defs/RoleARN"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the Amazon Web Services credentials. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a>."
              }
            ]
          },
          "ClusterJDBCURL": {
            "allOf": [
              {
                "$ref": "#/$defs/ClusterJDBCURL"
              },
              {
                "description": "The database connection string."
              }
            ]
          },
          "CopyCommand": {
            "allOf": [
              {
                "$ref": "#/$defs/CopyCommand"
              },
              {
                "description": "The <code>COPY</code> command."
              }
            ]
          },
          "Username": {
            "allOf": [
              {
                "$ref": "#/$defs/Username"
              },
              {
                "description": "The name of the user."
              }
            ]
          },
          "Password": {
            "allOf": [
              {
                "$ref": "#/$defs/Password"
              },
              {
                "description": "The user password."
              }
            ]
          },
          "RetryOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/RedshiftRetryOptions"
              },
              {
                "description": "The retry behavior in case Kinesis Data Firehose is unable to deliver documents to Amazon Redshift. Default value is 3600 (60 minutes)."
              }
            ]
          },
          "S3Update": {
            "allOf": [
              {
                "$ref": "#/$defs/S3DestinationUpdate"
              },
              {
                "description": "<p>The Amazon S3 destination.</p> <p>The compression formats <code>SNAPPY</code> or <code>ZIP</code> cannot be specified in <code>RedshiftDestinationUpdate.S3Update</code> because the Amazon Redshift <code>COPY</code> operation that reads from the S3 bucket doesn't support these compression formats.</p>"
              }
            ]
          },
          "ProcessingConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/ProcessingConfiguration"
              },
              {
                "description": "The data processing configuration."
              }
            ]
          },
          "S3BackupMode": {
            "allOf": [
              {
                "$ref": "#/$defs/RedshiftS3BackupMode"
              },
              {
                "description": "You can update a delivery stream to enable Amazon S3 backup if it is disabled. If backup is enabled, you can't update the delivery stream to disable it. "
              }
            ]
          },
          "S3BackupUpdate": {
            "allOf": [
              {
                "$ref": "#/$defs/S3DestinationUpdate"
              },
              {
                "description": "The Amazon S3 destination for backup."
              }
            ]
          },
          "CloudWatchLoggingOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/CloudWatchLoggingOptions"
              },
              {
                "description": "The Amazon CloudWatch logging options for your delivery stream."
              }
            ]
          }
        },
        "description": "Describes an update for a destination in Amazon Redshift."
      },
      "ClusterJDBCURL": {
        "type": "string",
        "pattern": "jdbc:(redshift|postgresql)://((?!-)[A-Za-z0-9-]{1,63}(?<!-)\\.)+redshift\\.([a-zA-Z0-9\\.]+):\\d{1,5}/[a-zA-Z0-9_$-]+",
        "minLength": 1,
        "maxLength": 512
      },
      "CopyCommand": {
        "type": "object",
        "required": [
          "DataTableName"
        ],
        "properties": {
          "DataTableName": {
            "allOf": [
              {
                "$ref": "#/$defs/DataTableName"
              },
              {
                "description": "The name of the target table. The table must already exist in the database."
              }
            ]
          },
          "DataTableColumns": {
            "allOf": [
              {
                "$ref": "#/$defs/DataTableColumns"
              },
              {
                "description": "A comma-separated list of column names."
              }
            ]
          },
          "CopyOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/CopyOptions"
              },
              {
                "description": "<p>Optional parameters to use with the Amazon Redshift <code>COPY</code> command. For more information, see the \"Optional Parameters\" section of <a href=\"https://docs.aws.amazon.com/redshift/latest/dg/r_COPY.html\">Amazon Redshift COPY command</a>. Some possible examples that would apply to Kinesis Data Firehose are as follows:</p> <p> <code>delimiter '\\t' lzop;</code> - fields are delimited with \"\\t\" (TAB character) and compressed using lzop.</p> <p> <code>delimiter '|'</code> - fields are delimited with \"|\" (this is the default delimiter).</p> <p> <code>delimiter '|' escape</code> - the delimiter should be escaped.</p> <p> <code>fixedwidth 'venueid:3,venuename:25,venuecity:12,venuestate:2,venueseats:6'</code> - fields are fixed width in the source, with each width specified after every column in the table.</p> <p> <code>JSON 's3://mybucket/jsonpaths.txt'</code> - data is in JSON format, and the path specified is the format of the data.</p> <p>For more examples, see <a href=\"https://docs.aws.amazon.com/redshift/latest/dg/r_COPY_command_examples.html\">Amazon Redshift COPY command examples</a>.</p>"
              }
            ]
          }
        },
        "description": "Describes a <code>COPY</code> command for Amazon Redshift."
      },
      "DataTableName": {
        "type": "string",
        "pattern": ".*",
        "minLength": 1,
        "maxLength": 512
      },
      "DataTableColumns": {
        "type": "string",
        "pattern": ".*",
        "minLength": 0,
        "maxLength": 204800
      },
      "CopyOptions": {
        "type": "string",
        "pattern": ".*",
        "minLength": 0,
        "maxLength": 204800
      },
      "Username": {
        "type": "string",
        "pattern": ".*",
        "minLength": 1,
        "maxLength": 512,
        "format": "password"
      },
      "Password": {
        "type": "string",
        "pattern": ".*",
        "minLength": 6,
        "maxLength": 512,
        "format": "password"
      },
      "RedshiftRetryOptions": {
        "type": "object",
        "properties": {
          "DurationInSeconds": {
            "allOf": [
              {
                "$ref": "#/$defs/RedshiftRetryDurationInSeconds"
              },
              {
                "description": "The length of time during which Kinesis Data Firehose retries delivery after a failure, starting from the initial request and including the first attempt. The default value is 3600 seconds (60 minutes). Kinesis Data Firehose does not retry if the value of <code>DurationInSeconds</code> is 0 (zero) or if the first delivery attempt takes longer than the current value."
              }
            ]
          }
        },
        "description": "Configures retry behavior in case Kinesis Data Firehose is unable to deliver documents to Amazon Redshift."
      },
      "RedshiftRetryDurationInSeconds": {
        "type": "integer",
        "minimum": 0,
        "maximum": 7200
      },
      "RedshiftS3BackupMode": {
        "type": "string",
        "enum": [
          "Disabled",
          "Enabled"
        ]
      },
      "ElasticsearchDestinationUpdate": {
        "type": "object",
        "properties": {
          "RoleARN": {
            "allOf": [
              {
                "$ref": "#/$defs/RoleARN"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the IAM role to be assumed by Kinesis Data Firehose for calling the Amazon ES Configuration API and for indexing documents. For more information, see <a href=\"https://docs.aws.amazon.com/firehose/latest/dev/controlling-access.html#using-iam-s3\">Grant Kinesis Data Firehose Access to an Amazon S3 Destination</a> and <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a>."
              }
            ]
          },
          "DomainARN": {
            "allOf": [
              {
                "$ref": "#/$defs/ElasticsearchDomainARN"
              },
              {
                "description": "<p>The ARN of the Amazon ES domain. The IAM role must have permissions for <code>DescribeDomain</code>, <code>DescribeDomains</code>, and <code>DescribeDomainConfig</code> after assuming the IAM role specified in <code>RoleARN</code>. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a>.</p> <p>Specify either <code>ClusterEndpoint</code> or <code>DomainARN</code>.</p>"
              }
            ]
          },
          "ClusterEndpoint": {
            "allOf": [
              {
                "$ref": "#/$defs/ElasticsearchClusterEndpoint"
              },
              {
                "description": "The endpoint to use when communicating with the cluster. Specify either this <code>ClusterEndpoint</code> or the <code>DomainARN</code> field."
              }
            ]
          },
          "IndexName": {
            "allOf": [
              {
                "$ref": "#/$defs/ElasticsearchIndexName"
              },
              {
                "description": "The Elasticsearch index name."
              }
            ]
          },
          "TypeName": {
            "allOf": [
              {
                "$ref": "#/$defs/ElasticsearchTypeName"
              },
              {
                "description": "<p>The Elasticsearch type name. For Elasticsearch 6.x, there can be only one type per index. If you try to specify a new type for an existing index that already has another type, Kinesis Data Firehose returns an error during runtime.</p> <p>If you upgrade Elasticsearch from 6.x to 7.x and don’t update your delivery stream, Kinesis Data Firehose still delivers data to Elasticsearch with the old index name and type name. If you want to update your delivery stream with a new index name, provide an empty string for <code>TypeName</code>. </p>"
              }
            ]
          },
          "IndexRotationPeriod": {
            "allOf": [
              {
                "$ref": "#/$defs/ElasticsearchIndexRotationPeriod"
              },
              {
                "description": "The Elasticsearch index rotation period. Index rotation appends a timestamp to <code>IndexName</code> to facilitate the expiration of old data. For more information, see <a href=\"https://docs.aws.amazon.com/firehose/latest/dev/basic-deliver.html#es-index-rotation\">Index Rotation for the Amazon ES Destination</a>. Default value is <code>OneDay</code>."
              }
            ]
          },
          "BufferingHints": {
            "allOf": [
              {
                "$ref": "#/$defs/ElasticsearchBufferingHints"
              },
              {
                "description": "The buffering options. If no value is specified, <code>ElasticsearchBufferingHints</code> object default values are used. "
              }
            ]
          },
          "RetryOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/ElasticsearchRetryOptions"
              },
              {
                "description": "The retry behavior in case Kinesis Data Firehose is unable to deliver documents to Amazon ES. The default value is 300 (5 minutes)."
              }
            ]
          },
          "S3Update": {
            "allOf": [
              {
                "$ref": "#/$defs/S3DestinationUpdate"
              },
              {
                "description": "The Amazon S3 destination."
              }
            ]
          },
          "ProcessingConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/ProcessingConfiguration"
              },
              {
                "description": "The data processing configuration."
              }
            ]
          },
          "CloudWatchLoggingOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/CloudWatchLoggingOptions"
              },
              {
                "description": "The CloudWatch logging options for your delivery stream."
              }
            ]
          }
        },
        "description": "Describes an update for a destination in Amazon ES."
      },
      "ElasticsearchDomainARN": {
        "type": "string",
        "pattern": "arn:.*",
        "minLength": 1,
        "maxLength": 512
      },
      "ElasticsearchClusterEndpoint": {
        "type": "string",
        "pattern": "https:.*",
        "minLength": 1,
        "maxLength": 512
      },
      "ElasticsearchIndexName": {
        "type": "string",
        "pattern": ".*",
        "minLength": 1,
        "maxLength": 80
      },
      "ElasticsearchTypeName": {
        "type": "string",
        "pattern": ".*",
        "minLength": 0,
        "maxLength": 100
      },
      "ElasticsearchIndexRotationPeriod": {
        "type": "string",
        "enum": [
          "NoRotation",
          "OneHour",
          "OneDay",
          "OneWeek",
          "OneMonth"
        ]
      },
      "ElasticsearchBufferingHints": {
        "type": "object",
        "properties": {
          "IntervalInSeconds": {
            "allOf": [
              {
                "$ref": "#/$defs/ElasticsearchBufferingIntervalInSeconds"
              },
              {
                "description": "Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300 (5 minutes)."
              }
            ]
          },
          "SizeInMBs": {
            "allOf": [
              {
                "$ref": "#/$defs/ElasticsearchBufferingSizeInMBs"
              },
              {
                "description": "<p>Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.</p> <p>We recommend setting this parameter to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec, the value should be 10 MB or higher.</p>"
              }
            ]
          }
        },
        "description": "Describes the buffering to perform before delivering data to the Amazon ES destination."
      },
      "ElasticsearchBufferingIntervalInSeconds": {
        "type": "integer",
        "minimum": 60,
        "maximum": 900
      },
      "ElasticsearchBufferingSizeInMBs": {
        "type": "integer",
        "minimum": 1,
        "maximum": 100
      },
      "ElasticsearchRetryOptions": {
        "type": "object",
        "properties": {
          "DurationInSeconds": {
            "allOf": [
              {
                "$ref": "#/$defs/ElasticsearchRetryDurationInSeconds"
              },
              {
                "description": "After an initial failure to deliver to Amazon ES, the total amount of time during which Kinesis Data Firehose retries delivery (including the first attempt). After this time has elapsed, the failed documents are written to Amazon S3. Default value is 300 seconds (5 minutes). A value of 0 (zero) results in no retries."
              }
            ]
          }
        },
        "description": "Configures retry behavior in case Kinesis Data Firehose is unable to deliver documents to Amazon ES."
      },
      "ElasticsearchRetryDurationInSeconds": {
        "type": "integer",
        "minimum": 0,
        "maximum": 7200
      },
      "AmazonopensearchserviceDestinationUpdate": {
        "type": "object",
        "properties": {
          "RoleARN": {
            "allOf": [
              {
                "$ref": "#/$defs/RoleARN"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the IAM role to be assumed by Kinesis Data Firehose for calling the Amazon OpenSearch Service Configuration API and for indexing documents. "
              }
            ]
          },
          "DomainARN": {
            "allOf": [
              {
                "$ref": "#/$defs/AmazonopensearchserviceDomainARN"
              },
              {
                "description": "The ARN of the Amazon OpenSearch Service domain. The IAM role must have permissions for DescribeDomain, DescribeDomains, and DescribeDomainConfig after assuming the IAM role specified in RoleARN."
              }
            ]
          },
          "ClusterEndpoint": {
            "allOf": [
              {
                "$ref": "#/$defs/AmazonopensearchserviceClusterEndpoint"
              },
              {
                "description": "The endpoint to use when communicating with the cluster. Specify either this ClusterEndpoint or the DomainARN field. "
              }
            ]
          },
          "IndexName": {
            "allOf": [
              {
                "$ref": "#/$defs/AmazonopensearchserviceIndexName"
              },
              {
                "description": "The Amazon OpenSearch Service index name."
              }
            ]
          },
          "TypeName": {
            "allOf": [
              {
                "$ref": "#/$defs/AmazonopensearchserviceTypeName"
              },
              {
                "description": "<p>The Amazon OpenSearch Service type name. For Elasticsearch 6.x, there can be only one type per index. If you try to specify a new type for an existing index that already has another type, Kinesis Data Firehose returns an error during runtime. </p> <p>If you upgrade Elasticsearch from 6.x to 7.x and don’t update your delivery stream, Kinesis Data Firehose still delivers data to Elasticsearch with the old index name and type name. If you want to update your delivery stream with a new index name, provide an empty string for TypeName. </p>"
              }
            ]
          },
          "IndexRotationPeriod": {
            "allOf": [
              {
                "$ref": "#/$defs/AmazonopensearchserviceIndexRotationPeriod"
              },
              {
                "description": "The Amazon OpenSearch Service index rotation period. Index rotation appends a timestamp to IndexName to facilitate the expiration of old data."
              }
            ]
          },
          "BufferingHints": {
            "allOf": [
              {
                "$ref": "#/$defs/AmazonopensearchserviceBufferingHints"
              },
              {
                "description": "The buffering options. If no value is specified, AmazonopensearchBufferingHints object default values are used. "
              }
            ]
          },
          "RetryOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/AmazonopensearchserviceRetryOptions"
              },
              {
                "description": "The retry behavior in case Kinesis Data Firehose is unable to deliver documents to Amazon OpenSearch Service. The default value is 300 (5 minutes). "
              }
            ]
          },
          "S3Update": {
            "$ref": "#/$defs/S3DestinationUpdate"
          },
          "ProcessingConfiguration": {
            "$ref": "#/$defs/ProcessingConfiguration"
          },
          "CloudWatchLoggingOptions": {
            "$ref": "#/$defs/CloudWatchLoggingOptions"
          }
        },
        "description": "Describes an update for a destination in Amazon OpenSearch Service."
      },
      "AmazonopensearchserviceDomainARN": {
        "type": "string",
        "pattern": "arn:.*",
        "minLength": 1,
        "maxLength": 512
      },
      "AmazonopensearchserviceClusterEndpoint": {
        "type": "string",
        "pattern": "https:.*",
        "minLength": 1,
        "maxLength": 512
      },
      "AmazonopensearchserviceIndexName": {
        "type": "string",
        "pattern": ".*",
        "minLength": 1,
        "maxLength": 80
      },
      "AmazonopensearchserviceTypeName": {
        "type": "string",
        "pattern": ".*",
        "minLength": 0,
        "maxLength": 100
      },
      "AmazonopensearchserviceIndexRotationPeriod": {
        "type": "string",
        "enum": [
          "NoRotation",
          "OneHour",
          "OneDay",
          "OneWeek",
          "OneMonth"
        ]
      },
      "AmazonopensearchserviceBufferingHints": {
        "type": "object",
        "properties": {
          "IntervalInSeconds": {
            "allOf": [
              {
                "$ref": "#/$defs/AmazonopensearchserviceBufferingIntervalInSeconds"
              },
              {
                "description": "Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300 (5 minutes). "
              }
            ]
          },
          "SizeInMBs": {
            "allOf": [
              {
                "$ref": "#/$defs/AmazonopensearchserviceBufferingSizeInMBs"
              },
              {
                "description": "<p>Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.</p> <p>We recommend setting this parameter to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec, the value should be 10 MB or higher. </p>"
              }
            ]
          }
        },
        "description": "Describes the buffering to perform before delivering data to the Amazon OpenSearch Service destination. "
      },
      "AmazonopensearchserviceBufferingIntervalInSeconds": {
        "type": "integer",
        "minimum": 60,
        "maximum": 900
      },
      "AmazonopensearchserviceBufferingSizeInMBs": {
        "type": "integer",
        "minimum": 1,
        "maximum": 100
      },
      "AmazonopensearchserviceRetryOptions": {
        "type": "object",
        "properties": {
          "DurationInSeconds": {
            "allOf": [
              {
                "$ref": "#/$defs/AmazonopensearchserviceRetryDurationInSeconds"
              },
              {
                "description": "After an initial failure to deliver to Amazon OpenSearch Service, the total amount of time during which Kinesis Data Firehose retries delivery (including the first attempt). After this time has elapsed, the failed documents are written to Amazon S3. Default value is 300 seconds (5 minutes). A value of 0 (zero) results in no retries. "
              }
            ]
          }
        },
        "description": "Configures retry behavior in case Kinesis Data Firehose is unable to deliver documents to Amazon OpenSearch Service. "
      },
      "AmazonopensearchserviceRetryDurationInSeconds": {
        "type": "integer",
        "minimum": 0,
        "maximum": 7200
      },
      "SplunkDestinationUpdate": {
        "type": "object",
        "properties": {
          "HECEndpoint": {
            "allOf": [
              {
                "$ref": "#/$defs/HECEndpoint"
              },
              {
                "description": "The HTTP Event Collector (HEC) endpoint to which Kinesis Data Firehose sends your data."
              }
            ]
          },
          "HECEndpointType": {
            "allOf": [
              {
                "$ref": "#/$defs/HECEndpointType"
              },
              {
                "description": "This type can be either \"Raw\" or \"Event.\""
              }
            ]
          },
          "HECToken": {
            "allOf": [
              {
                "$ref": "#/$defs/HECToken"
              },
              {
                "description": "A GUID that you obtain from your Splunk cluster when you create a new HEC endpoint."
              }
            ]
          },
          "HECAcknowledgmentTimeoutInSeconds": {
            "allOf": [
              {
                "$ref": "#/$defs/HECAcknowledgmentTimeoutInSeconds"
              },
              {
                "description": "The amount of time that Kinesis Data Firehose waits to receive an acknowledgment from Splunk after it sends data. At the end of the timeout period, Kinesis Data Firehose either tries to send the data again or considers it an error, based on your retry settings."
              }
            ]
          },
          "RetryOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/SplunkRetryOptions"
              },
              {
                "description": "The retry behavior in case Kinesis Data Firehose is unable to deliver data to Splunk or if it doesn't receive an acknowledgment of receipt from Splunk."
              }
            ]
          },
          "S3BackupMode": {
            "allOf": [
              {
                "$ref": "#/$defs/SplunkS3BackupMode"
              },
              {
                "description": "<p>Specifies how you want Kinesis Data Firehose to back up documents to Amazon S3. When set to <code>FailedDocumentsOnly</code>, Kinesis Data Firehose writes any data that could not be indexed to the configured Amazon S3 destination. When set to <code>AllEvents</code>, Kinesis Data Firehose delivers all incoming records to Amazon S3, and also writes failed documents to Amazon S3. The default value is <code>FailedEventsOnly</code>.</p> <p>You can update this backup mode from <code>FailedEventsOnly</code> to <code>AllEvents</code>. You can't update it from <code>AllEvents</code> to <code>FailedEventsOnly</code>.</p>"
              }
            ]
          },
          "S3Update": {
            "allOf": [
              {
                "$ref": "#/$defs/S3DestinationUpdate"
              },
              {
                "description": "Your update to the configuration of the backup Amazon S3 location."
              }
            ]
          },
          "ProcessingConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/ProcessingConfiguration"
              },
              {
                "description": "The data processing configuration."
              }
            ]
          },
          "CloudWatchLoggingOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/CloudWatchLoggingOptions"
              },
              {
                "description": "The Amazon CloudWatch logging options for your delivery stream."
              }
            ]
          }
        },
        "description": "Describes an update for a destination in Splunk."
      },
      "HECEndpoint": {
        "type": "string",
        "pattern": ".*",
        "minLength": 0,
        "maxLength": 2048
      },
      "HECEndpointType": {
        "type": "string",
        "enum": [
          "Raw",
          "Event"
        ]
      },
      "HECToken": {
        "type": "string",
        "pattern": ".*",
        "minLength": 0,
        "maxLength": 2048
      },
      "HECAcknowledgmentTimeoutInSeconds": {
        "type": "integer",
        "minimum": 180,
        "maximum": 600
      },
      "SplunkRetryOptions": {
        "type": "object",
        "properties": {
          "DurationInSeconds": {
            "allOf": [
              {
                "$ref": "#/$defs/SplunkRetryDurationInSeconds"
              },
              {
                "description": "The total amount of time that Kinesis Data Firehose spends on retries. This duration starts after the initial attempt to send data to Splunk fails. It doesn't include the periods during which Kinesis Data Firehose waits for acknowledgment from Splunk after each attempt."
              }
            ]
          }
        },
        "description": "Configures retry behavior in case Kinesis Data Firehose is unable to deliver documents to Splunk, or if it doesn't receive an acknowledgment from Splunk."
      },
      "SplunkRetryDurationInSeconds": {
        "type": "integer",
        "minimum": 0,
        "maximum": 7200
      },
      "SplunkS3BackupMode": {
        "type": "string",
        "enum": [
          "FailedEventsOnly",
          "AllEvents"
        ]
      },
      "HttpEndpointDestinationUpdate": {
        "type": "object",
        "properties": {
          "EndpointConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/HttpEndpointConfiguration"
              },
              {
                "description": "Describes the configuration of the HTTP endpoint destination."
              }
            ]
          },
          "BufferingHints": {
            "allOf": [
              {
                "$ref": "#/$defs/HttpEndpointBufferingHints"
              },
              {
                "description": "Describes buffering options that can be applied to the data before it is delivered to the HTTPS endpoint destination. Kinesis Data Firehose teats these options as hints, and it might choose to use more optimal values. The <code>SizeInMBs</code> and <code>IntervalInSeconds</code> parameters are optional. However, if specify a value for one of them, you must also provide a value for the other. "
              }
            ]
          },
          "CloudWatchLoggingOptions": {
            "$ref": "#/$defs/CloudWatchLoggingOptions"
          },
          "RequestConfiguration": {
            "allOf": [
              {
                "$ref": "#/$defs/HttpEndpointRequestConfiguration"
              },
              {
                "description": "The configuration of the request sent to the HTTP endpoint specified as the destination."
              }
            ]
          },
          "ProcessingConfiguration": {
            "$ref": "#/$defs/ProcessingConfiguration"
          },
          "RoleARN": {
            "allOf": [
              {
                "$ref": "#/$defs/RoleARN"
              },
              {
                "description": "Kinesis Data Firehose uses this IAM role for all the permissions that the delivery stream needs."
              }
            ]
          },
          "RetryOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/HttpEndpointRetryOptions"
              },
              {
                "description": "Describes the retry behavior in case Kinesis Data Firehose is unable to deliver data to the specified HTTP endpoint destination, or if it doesn't receive a valid acknowledgment of receipt from the specified HTTP endpoint destination."
              }
            ]
          },
          "S3BackupMode": {
            "allOf": [
              {
                "$ref": "#/$defs/HttpEndpointS3BackupMode"
              },
              {
                "description": "Describes the S3 bucket backup options for the data that Kinesis Firehose delivers to the HTTP endpoint destination. You can back up all documents (<code>AllData</code>) or only the documents that Kinesis Data Firehose could not deliver to the specified HTTP endpoint destination (<code>FailedDataOnly</code>)."
              }
            ]
          },
          "S3Update": {
            "$ref": "#/$defs/S3DestinationUpdate"
          }
        },
        "description": "Updates the specified HTTP endpoint destination."
      },
      "HttpEndpointConfiguration": {
        "type": "object",
        "required": [
          "Url"
        ],
        "properties": {
          "Url": {
            "allOf": [
              {
                "$ref": "#/$defs/HttpEndpointUrl"
              },
              {
                "description": "<p>The URL of the HTTP endpoint selected as the destination.</p> <important> <p>If you choose an HTTP endpoint as your destination, review and follow the instructions in the <a href=\"https://docs.aws.amazon.com/firehose/latest/dev/httpdeliveryrequestresponse.html\">Appendix - HTTP Endpoint Delivery Request and Response Specifications</a>.</p> </important>"
              }
            ]
          },
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/HttpEndpointName"
              },
              {
                "description": "The name of the HTTP endpoint selected as the destination."
              }
            ]
          },
          "AccessKey": {
            "allOf": [
              {
                "$ref": "#/$defs/HttpEndpointAccessKey"
              },
              {
                "description": "The access key required for Kinesis Firehose to authenticate with the HTTP endpoint selected as the destination."
              }
            ]
          }
        },
        "description": "Describes the configuration of the HTTP endpoint to which Kinesis Firehose delivers data."
      },
      "HttpEndpointUrl": {
        "type": "string",
        "pattern": "https://.*",
        "minLength": 1,
        "maxLength": 1000,
        "format": "password"
      },
      "HttpEndpointName": {
        "type": "string",
        "pattern": "^(?!\\s*$).+",
        "minLength": 1,
        "maxLength": 256
      },
      "HttpEndpointAccessKey": {
        "type": "string",
        "pattern": ".*",
        "minLength": 0,
        "maxLength": 4096,
        "format": "password"
      },
      "HttpEndpointBufferingHints": {
        "type": "object",
        "properties": {
          "SizeInMBs": {
            "allOf": [
              {
                "$ref": "#/$defs/HttpEndpointBufferingSizeInMBs"
              },
              {
                "description": "<p>Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5. </p> <p>We recommend setting this parameter to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec, the value should be 10 MB or higher. </p>"
              }
            ]
          },
          "IntervalInSeconds": {
            "allOf": [
              {
                "$ref": "#/$defs/HttpEndpointBufferingIntervalInSeconds"
              },
              {
                "description": "Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300 (5 minutes). "
              }
            ]
          }
        },
        "description": "Describes the buffering options that can be applied before data is delivered to the HTTP endpoint destination. Kinesis Data Firehose treats these options as hints, and it might choose to use more optimal values. The <code>SizeInMBs</code> and <code>IntervalInSeconds</code> parameters are optional. However, if specify a value for one of them, you must also provide a value for the other. "
      },
      "HttpEndpointBufferingSizeInMBs": {
        "type": "integer",
        "minimum": 1,
        "maximum": 64
      },
      "HttpEndpointBufferingIntervalInSeconds": {
        "type": "integer",
        "minimum": 60,
        "maximum": 900
      },
      "HttpEndpointRequestConfiguration": {
        "type": "object",
        "properties": {
          "ContentEncoding": {
            "allOf": [
              {
                "$ref": "#/$defs/ContentEncoding"
              },
              {
                "description": "Kinesis Data Firehose uses the content encoding to compress the body of a request before sending the request to the destination. For more information, see <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Encoding\">Content-Encoding</a> in MDN Web Docs, the official Mozilla documentation."
              }
            ]
          },
          "CommonAttributes": {
            "allOf": [
              {
                "$ref": "#/$defs/HttpEndpointCommonAttributesList"
              },
              {
                "description": "Describes the metadata sent to the HTTP endpoint destination."
              }
            ]
          }
        },
        "description": "The configuration of the HTTP endpoint request."
      },
      "ContentEncoding": {
        "type": "string",
        "enum": [
          "NONE",
          "GZIP"
        ]
      },
      "HttpEndpointCommonAttributesList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/HttpEndpointCommonAttribute"
        },
        "minItems": 0,
        "maxItems": 50
      },
      "HttpEndpointCommonAttribute": {
        "type": "object",
        "required": [
          "AttributeName",
          "AttributeValue"
        ],
        "properties": {
          "AttributeName": {
            "allOf": [
              {
                "$ref": "#/$defs/HttpEndpointAttributeName"
              },
              {
                "description": "The name of the HTTP endpoint common attribute."
              }
            ]
          },
          "AttributeValue": {
            "allOf": [
              {
                "$ref": "#/$defs/HttpEndpointAttributeValue"
              },
              {
                "description": "The value of the HTTP endpoint common attribute."
              }
            ]
          }
        },
        "description": "Describes the metadata that's delivered to the specified HTTP endpoint destination."
      },
      "HttpEndpointAttributeName": {
        "type": "string",
        "pattern": "^(?!\\s*$).+",
        "minLength": 1,
        "maxLength": 256,
        "format": "password"
      },
      "HttpEndpointAttributeValue": {
        "type": "string",
        "pattern": ".*",
        "minLength": 0,
        "maxLength": 1024,
        "format": "password"
      },
      "HttpEndpointRetryOptions": {
        "type": "object",
        "properties": {
          "DurationInSeconds": {
            "allOf": [
              {
                "$ref": "#/$defs/HttpEndpointRetryDurationInSeconds"
              },
              {
                "description": "The total amount of time that Kinesis Data Firehose spends on retries. This duration starts after the initial attempt to send data to the custom destination via HTTPS endpoint fails. It doesn't include the periods during which Kinesis Data Firehose waits for acknowledgment from the specified destination after each attempt. "
              }
            ]
          }
        },
        "description": "Describes the retry behavior in case Kinesis Data Firehose is unable to deliver data to the specified HTTP endpoint destination, or if it doesn't receive a valid acknowledgment of receipt from the specified HTTP endpoint destination."
      },
      "HttpEndpointRetryDurationInSeconds": {
        "type": "integer",
        "minimum": 0,
        "maximum": 7200
      },
      "HttpEndpointS3BackupMode": {
        "type": "string",
        "enum": [
          "FailedDataOnly",
          "AllData"
        ]
      },
      "AmazonOpenSearchServerlessDestinationUpdate": {
        "type": "object",
        "properties": {
          "RoleARN": {
            "allOf": [
              {
                "$ref": "#/$defs/RoleARN"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the IAM role to be assumed by Kinesis Data Firehose for calling the Serverless offering for Amazon OpenSearch Service Configuration API and for indexing documents."
              }
            ]
          },
          "CollectionEndpoint": {
            "allOf": [
              {
                "$ref": "#/$defs/AmazonOpenSearchServerlessCollectionEndpoint"
              },
              {
                "description": "The endpoint to use when communicating with the collection in the Serverless offering for Amazon OpenSearch Service."
              }
            ]
          },
          "IndexName": {
            "allOf": [
              {
                "$ref": "#/$defs/AmazonOpenSearchServerlessIndexName"
              },
              {
                "description": "The Serverless offering for Amazon OpenSearch Service index name."
              }
            ]
          },
          "BufferingHints": {
            "allOf": [
              {
                "$ref": "#/$defs/AmazonOpenSearchServerlessBufferingHints"
              },
              {
                "description": "The buffering options. If no value is specified, AmazonopensearchBufferingHints object default values are used."
              }
            ]
          },
          "RetryOptions": {
            "allOf": [
              {
                "$ref": "#/$defs/AmazonOpenSearchServerlessRetryOptions"
              },
              {
                "description": "The retry behavior in case Kinesis Data Firehose is unable to deliver documents to the Serverless offering for Amazon OpenSearch Service. The default value is 300 (5 minutes)."
              }
            ]
          },
          "S3Update": {
            "$ref": "#/$defs/S3DestinationUpdate"
          },
          "ProcessingConfiguration": {
            "$ref": "#/$defs/ProcessingConfiguration"
          },
          "CloudWatchLoggingOptions": {
            "$ref": "#/$defs/CloudWatchLoggingOptions"
          }
        },
        "description": "Describes an update for a destination in the Serverless offering for Amazon OpenSearch Service."
      },
      "AmazonOpenSearchServerlessCollectionEndpoint": {
        "type": "string",
        "pattern": "https:.*",
        "minLength": 1,
        "maxLength": 512
      },
      "AmazonOpenSearchServerlessIndexName": {
        "type": "string",
        "pattern": ".*",
        "minLength": 1,
        "maxLength": 80
      },
      "AmazonOpenSearchServerlessBufferingHints": {
        "type": "object",
        "properties": {
          "IntervalInSeconds": {
            "allOf": [
              {
                "$ref": "#/$defs/AmazonOpenSearchServerlessBufferingIntervalInSeconds"
              },
              {
                "description": "Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300 (5 minutes)."
              }
            ]
          },
          "SizeInMBs": {
            "allOf": [
              {
                "$ref": "#/$defs/AmazonOpenSearchServerlessBufferingSizeInMBs"
              },
              {
                "description": "<p>Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5. </p> <p>We recommend setting this parameter to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec, the value should be 10 MB or higher.</p>"
              }
            ]
          }
        },
        "description": "Describes the buffering to perform before delivering data to the Serverless offering for Amazon OpenSearch Service destination."
      },
      "AmazonOpenSearchServerlessBufferingIntervalInSeconds": {
        "type": "integer",
        "minimum": 60,
        "maximum": 900
      },
      "AmazonOpenSearchServerlessBufferingSizeInMBs": {
        "type": "integer",
        "minimum": 1,
        "maximum": 100
      },
      "AmazonOpenSearchServerlessRetryOptions": {
        "type": "object",
        "properties": {
          "DurationInSeconds": {
            "allOf": [
              {
                "$ref": "#/$defs/AmazonOpenSearchServerlessRetryDurationInSeconds"
              },
              {
                "description": "After an initial failure to deliver to the Serverless offering for Amazon OpenSearch Service, the total amount of time during which Kinesis Data Firehose retries delivery (including the first attempt). After this time has elapsed, the failed documents are written to Amazon S3. Default value is 300 seconds (5 minutes). A value of 0 (zero) results in no retries."
              }
            ]
          }
        },
        "description": "Configures retry behavior in case Kinesis Data Firehose is unable to deliver documents to the Serverless offering for Amazon OpenSearch Service."
      },
      "AmazonOpenSearchServerlessRetryDurationInSeconds": {
        "type": "integer",
        "minimum": 0,
        "maximum": 7200
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://firehose.us-east-1.amazonaws.com/#X-Amz-Target=Firehose_20150804.UpdateDestination"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
