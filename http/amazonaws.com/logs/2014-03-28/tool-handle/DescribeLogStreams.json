{
  "name": "DescribeLogStreams",
  "description": "<p>Lists the log streams for the specified log group. You can list all the log streams or filter the results by prefix. You can also control how the results are ordered.</p> <p>You can specify the log group to search by using either <code>logGroupIdentifier</code> or <code>logGroupName</code>. You must include one of these two parameters, but you can't include both. </p> <p>This operation has a limit of five transactions per second, after which transactions are throttled.</p> <p>If you are using CloudWatch cross-account observability, you can use this operation in a monitoring account and view data from the linked source accounts. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Unified-Cross-Account.html\">CloudWatch cross-account observability</a>.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "limit": {
        "type": "string",
        "description": "Pagination limit"
      },
      "nextToken": {
        "type": "string",
        "description": "Pagination token"
      },
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "Logs_20140328.DescribeLogStreams"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/DescribeLogStreamsRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "DescribeLogStreamsRequest": {
        "type": "object",
        "title": "DescribeLogStreamsRequest",
        "properties": {
          "logGroupName": {
            "allOf": [
              {
                "$ref": "#/$defs/LogGroupName"
              },
              {
                "description": "<p>The name of the log group.</p> <note> <p> You must include either <code>logGroupIdentifier</code> or <code>logGroupName</code>, but not both. </p> </note>"
              }
            ]
          },
          "logGroupIdentifier": {
            "allOf": [
              {
                "$ref": "#/$defs/LogGroupIdentifier"
              },
              {
                "description": "<p>Specify either the name or ARN of the log group to view. If the log group is in a source account and you are using a monitoring account, you must use the log group ARN.</p> <note> <p> You must include either <code>logGroupIdentifier</code> or <code>logGroupName</code>, but not both. </p> </note>"
              }
            ]
          },
          "logStreamNamePrefix": {
            "allOf": [
              {
                "$ref": "#/$defs/LogStreamName"
              },
              {
                "description": "<p>The prefix to match.</p> <p>If <code>orderBy</code> is <code>LastEventTime</code>, you cannot specify this parameter.</p>"
              }
            ]
          },
          "orderBy": {
            "allOf": [
              {
                "$ref": "#/$defs/OrderBy"
              },
              {
                "description": "<p>If the value is <code>LogStreamName</code>, the results are ordered by log stream name. If the value is <code>LastEventTime</code>, the results are ordered by the event time. The default value is <code>LogStreamName</code>.</p> <p>If you order the results by event time, you cannot specify the <code>logStreamNamePrefix</code> parameter.</p> <p> <code>lastEventTimestamp</code> represents the time of the most recent log event in the log stream in CloudWatch Logs. This number is expressed as the number of milliseconds after <code>Jan 1, 1970 00:00:00 UTC</code>. <code>lastEventTimestamp</code> updates on an eventual consistency basis. It typically updates in less than an hour from ingestion, but in rare situations might take longer.</p>"
              }
            ]
          },
          "descending": {
            "allOf": [
              {
                "$ref": "#/$defs/Descending"
              },
              {
                "description": "If the value is true, results are returned in descending order. If the value is to false, results are returned in ascending order. The default value is false."
              }
            ]
          },
          "nextToken": {
            "allOf": [
              {
                "$ref": "#/$defs/NextToken"
              },
              {
                "description": "The token for the next set of items to return. (You received this token from a previous call.)"
              }
            ]
          },
          "limit": {
            "allOf": [
              {
                "$ref": "#/$defs/DescribeLimit"
              },
              {
                "description": "The maximum number of items returned. If you don't specify a value, the default is up to 50 items."
              }
            ]
          }
        }
      },
      "LogGroupName": {
        "type": "string",
        "pattern": "[\\.\\-_/#A-Za-z0-9]+",
        "minLength": 1,
        "maxLength": 512
      },
      "LogGroupIdentifier": {
        "type": "string",
        "pattern": "[\\w#+=/:,.@-]*",
        "minLength": 1,
        "maxLength": 2048
      },
      "LogStreamName": {
        "type": "string",
        "pattern": "[^:*]*",
        "minLength": 1,
        "maxLength": 512
      },
      "OrderBy": {
        "type": "string",
        "enum": [
          "LogStreamName",
          "LastEventTime"
        ]
      },
      "Descending": {
        "type": "boolean"
      },
      "NextToken": {
        "type": "string",
        "description": "The token for the next set of items to return. The token expires after 24 hours.",
        "minLength": 1
      },
      "DescribeLimit": {
        "type": "integer",
        "minimum": 1,
        "maximum": 50
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://logs.us-east-1.amazonaws.com/#X-Amz-Target=Logs_20140328.DescribeLogStreams{?limit,nextToken}"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**logStreams**",
            "**nextToken**: The token for the next set of items to return. The token expires after 24 hours."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
