{
  "name": "DescribeMetricFilters",
  "description": "Lists the specified metric filters. You can list all of the metric filters or filter the results by log name, prefix, metric name, or metric namespace. The results are ASCII-sorted by filter name.",
  "parameters": {
    "type": "object",
    "properties": {
      "limit": {
        "type": "string",
        "description": "Pagination limit"
      },
      "nextToken": {
        "type": "string",
        "description": "Pagination token"
      },
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "Logs_20140328.DescribeMetricFilters"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/DescribeMetricFiltersRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "DescribeMetricFiltersRequest": {
        "type": "object",
        "title": "DescribeMetricFiltersRequest",
        "properties": {
          "logGroupName": {
            "allOf": [
              {
                "$ref": "#/$defs/LogGroupName"
              },
              {
                "description": "The name of the log group."
              }
            ]
          },
          "filterNamePrefix": {
            "allOf": [
              {
                "$ref": "#/$defs/FilterName"
              },
              {
                "description": "The prefix to match. CloudWatch Logs uses the value that you set here only if you also include the <code>logGroupName</code> parameter in your request."
              }
            ]
          },
          "nextToken": {
            "allOf": [
              {
                "$ref": "#/$defs/NextToken"
              },
              {
                "description": "The token for the next set of items to return. (You received this token from a previous call.)"
              }
            ]
          },
          "limit": {
            "allOf": [
              {
                "$ref": "#/$defs/DescribeLimit"
              },
              {
                "description": "The maximum number of items returned. If you don't specify a value, the default is up to 50 items."
              }
            ]
          },
          "metricName": {
            "allOf": [
              {
                "$ref": "#/$defs/MetricName"
              },
              {
                "description": "Filters results to include only those with the specified metric name. If you include this parameter in your request, you must also include the <code>metricNamespace</code> parameter."
              }
            ]
          },
          "metricNamespace": {
            "allOf": [
              {
                "$ref": "#/$defs/MetricNamespace"
              },
              {
                "description": "Filters results to include only those in the specified namespace. If you include this parameter in your request, you must also include the <code>metricName</code> parameter."
              }
            ]
          }
        }
      },
      "LogGroupName": {
        "type": "string",
        "pattern": "[\\.\\-_/#A-Za-z0-9]+",
        "minLength": 1,
        "maxLength": 512
      },
      "FilterName": {
        "type": "string",
        "pattern": "[^:*]*",
        "minLength": 1,
        "maxLength": 512
      },
      "NextToken": {
        "type": "string",
        "description": "The token for the next set of items to return. The token expires after 24 hours.",
        "minLength": 1
      },
      "DescribeLimit": {
        "type": "integer",
        "minimum": 1,
        "maximum": 50
      },
      "MetricName": {
        "type": "string",
        "pattern": "[^:*$]*",
        "description": "The name of the CloudWatch metric to which the monitored log information should be published. For example, you might publish to a metric named ErrorCount.",
        "maxLength": 255
      },
      "MetricNamespace": {
        "type": "string",
        "pattern": "[^:*$]*",
        "maxLength": 255
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://logs.us-east-1.amazonaws.com/#X-Amz-Target=Logs_20140328.DescribeMetricFilters{?limit,nextToken}"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**metricFilters**",
            "**nextToken**: The token for the next set of items to return. The token expires after 24 hours."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
