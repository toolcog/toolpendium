{
  "name": "DescribeLogGroups",
  "description": "<p>Lists the specified log groups. You can list all your log groups or filter the results by prefix. The results are ASCII-sorted by log group name.</p> <p>CloudWatch Logs doesnâ€™t support IAM policies that control access to the <code>DescribeLogGroups</code> action by using the <code>aws:ResourceTag/<i>key-name</i> </code> condition key. Other CloudWatch Logs actions do support the use of the <code>aws:ResourceTag/<i>key-name</i> </code> condition key to control access. For more information about using tags to control access, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_tags.html\">Controlling access to Amazon Web Services resources using tags</a>.</p> <p>If you are using CloudWatch cross-account observability, you can use this operation in a monitoring account and view data from the linked source accounts. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Unified-Cross-Account.html\">CloudWatch cross-account observability</a>.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "limit": {
        "type": "string",
        "description": "Pagination limit"
      },
      "nextToken": {
        "type": "string",
        "description": "Pagination token"
      },
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "Logs_20140328.DescribeLogGroups"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/DescribeLogGroupsRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "DescribeLogGroupsRequest": {
        "type": "object",
        "title": "DescribeLogGroupsRequest",
        "properties": {
          "accountIdentifiers": {
            "allOf": [
              {
                "$ref": "#/$defs/AccountIds"
              },
              {
                "description": "When <code>includeLinkedAccounts</code> is set to <code>True</code>, use this parameter to specify the list of accounts to search. You can specify as many as 20 account IDs in the array. "
              }
            ]
          },
          "logGroupNamePrefix": {
            "allOf": [
              {
                "$ref": "#/$defs/LogGroupName"
              },
              {
                "description": "<p>The prefix to match.</p> <note> <p> <code>logGroupNamePrefix</code> and <code>logGroupNamePattern</code> are mutually exclusive. Only one of these parameters can be passed. </p> </note>"
              }
            ]
          },
          "logGroupNamePattern": {
            "allOf": [
              {
                "$ref": "#/$defs/LogGroupNamePattern"
              },
              {
                "description": "<p>If you specify a string for this parameter, the operation returns only log groups that have names that match the string based on a case-sensitive substring search. For example, if you specify <code>Foo</code>, log groups named <code>FooBar</code>, <code>aws/Foo</code>, and <code>GroupFoo</code> would match, but <code>foo</code>, <code>F/o/o</code> and <code>Froo</code> would not match.</p> <p>If you specify <code>logGroupNamePattern</code> in your request, then only <code>arn</code>, <code>creationTime</code>, and <code>logGroupName</code> are included in the response. </p> <note> <p> <code>logGroupNamePattern</code> and <code>logGroupNamePrefix</code> are mutually exclusive. Only one of these parameters can be passed. </p> </note>"
              }
            ]
          },
          "nextToken": {
            "allOf": [
              {
                "$ref": "#/$defs/NextToken"
              },
              {
                "description": "The token for the next set of items to return. (You received this token from a previous call.)"
              }
            ]
          },
          "limit": {
            "allOf": [
              {
                "$ref": "#/$defs/DescribeLimit"
              },
              {
                "description": "The maximum number of items returned. If you don't specify a value, the default is up to 50 items."
              }
            ]
          },
          "includeLinkedAccounts": {
            "allOf": [
              {
                "$ref": "#/$defs/IncludeLinkedAccounts"
              },
              {
                "description": "<p>If you are using a monitoring account, set this to <code>True</code> to have the operation return log groups in the accounts listed in <code>accountIdentifiers</code>.</p> <p>If this parameter is set to <code>true</code> and <code>accountIdentifiers</code> contains a null value, the operation returns all log groups in the monitoring account and all log groups in all source accounts that are linked to the monitoring account. </p>"
              }
            ]
          }
        }
      },
      "AccountIds": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/AccountId"
        },
        "minItems": 0,
        "maxItems": 20
      },
      "AccountId": {
        "type": "string",
        "pattern": "^\\d{12}$",
        "minLength": 12,
        "maxLength": 12
      },
      "LogGroupName": {
        "type": "string",
        "pattern": "[\\.\\-_/#A-Za-z0-9]+",
        "minLength": 1,
        "maxLength": 512
      },
      "LogGroupNamePattern": {
        "type": "string",
        "pattern": "[\\.\\-_/#A-Za-z0-9]*",
        "minLength": 0,
        "maxLength": 512
      },
      "NextToken": {
        "type": "string",
        "description": "The token for the next set of items to return. The token expires after 24 hours.",
        "minLength": 1
      },
      "DescribeLimit": {
        "type": "integer",
        "minimum": 1,
        "maximum": 50
      },
      "IncludeLinkedAccounts": {
        "type": "boolean"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://logs.us-east-1.amazonaws.com/#X-Amz-Target=Logs_20140328.DescribeLogGroups{?limit,nextToken}"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**logGroups**",
            "**nextToken**: The token for the next set of items to return. The token expires after 24 hours."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
