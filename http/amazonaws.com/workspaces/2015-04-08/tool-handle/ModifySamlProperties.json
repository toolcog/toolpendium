{
  "name": "ModifySamlProperties",
  "description": "Modifies multiple properties related to SAML 2.0 authentication, including the enablement status, user access URL, and relay state parameter name that are used for configuring federation with an SAML 2.0 identity provider.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "WorkspacesService.ModifySamlProperties"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/ModifySamlPropertiesRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "ModifySamlPropertiesRequest": {
        "type": "object",
        "required": [
          "ResourceId"
        ],
        "title": "ModifySamlPropertiesRequest",
        "properties": {
          "ResourceId": {
            "allOf": [
              {
                "$ref": "#/$defs/DirectoryId"
              },
              {
                "description": "The directory identifier for which you want to configure SAML properties."
              }
            ]
          },
          "SamlProperties": {
            "allOf": [
              {
                "$ref": "#/$defs/SamlProperties"
              },
              {
                "description": "The properties for configuring SAML 2.0 authentication."
              }
            ]
          },
          "PropertiesToDelete": {
            "allOf": [
              {
                "$ref": "#/$defs/DeletableSamlPropertiesList"
              },
              {
                "description": "<p>The SAML properties to delete as part of your request.</p> <p>Specify one of the following options:</p> <ul> <li> <p> <code>SAML_PROPERTIES_USER_ACCESS_URL</code> to delete the user access URL.</p> </li> <li> <p> <code>SAML_PROPERTIES_RELAY_STATE_PARAMETER_NAME</code> to delete the relay state parameter name.</p> </li> </ul>"
              }
            ]
          }
        }
      },
      "DirectoryId": {
        "type": "string",
        "pattern": "^d-[0-9a-f]{8,63}$",
        "minLength": 10,
        "maxLength": 65
      },
      "SamlProperties": {
        "type": "object",
        "properties": {
          "Status": {
            "allOf": [
              {
                "$ref": "#/$defs/SamlStatusEnum"
              },
              {
                "description": "<p>Indicates the status of SAML 2.0 authentication. These statuses include the following.</p> <ul> <li> <p>If the setting is <code>DISABLED</code>, end users will be directed to login with their directory credentials.</p> </li> <li> <p>If the setting is <code>ENABLED</code>, end users will be directed to login via the user access URL. Users attempting to connect to WorkSpaces from a client application that does not support SAML 2.0 authentication will not be able to connect.</p> </li> <li> <p>If the setting is <code>ENABLED_WITH_DIRECTORY_LOGIN_FALLBACK</code>, end users will be directed to login via the user access URL on supported client applications, but will not prevent clients that do not support SAML 2.0 authentication from connecting as if SAML 2.0 authentication was disabled.</p> </li> </ul>"
              }
            ]
          },
          "UserAccessUrl": {
            "allOf": [
              {
                "$ref": "#/$defs/SamlUserAccessUrl"
              },
              {
                "description": "The SAML 2.0 identity provider (IdP) user access URL is the URL a user would navigate to in their web browser in order to federate from the IdP and directly access the application, without any SAML 2.0 service provider (SP) bindings."
              }
            ]
          },
          "RelayStateParameterName": {
            "allOf": [
              {
                "$ref": "#/$defs/NonEmptyString"
              },
              {
                "description": "<p>The relay state parameter name supported by the SAML 2.0 identity provider (IdP). When the end user is redirected to the user access URL from the WorkSpaces client application, this relay state parameter name is appended as a query parameter to the URL along with the relay state endpoint to return the user to the client application session.</p> <p>To use SAML 2.0 authentication with WorkSpaces, the IdP must support IdP-initiated deep linking for the relay state URL. Consult your IdP documentation for more information.</p>"
              }
            ]
          }
        },
        "description": "Describes the enablement status, user access URL, and relay state parameter name that are used for configuring federation with an SAML 2.0 identity provider."
      },
      "SamlStatusEnum": {
        "type": "string",
        "enum": [
          "DISABLED",
          "ENABLED",
          "ENABLED_WITH_DIRECTORY_LOGIN_FALLBACK"
        ]
      },
      "SamlUserAccessUrl": {
        "type": "string",
        "pattern": "^(http|https)\\://\\S+$",
        "minLength": 8,
        "maxLength": 200
      },
      "NonEmptyString": {
        "type": "string",
        "minLength": 1
      },
      "DeletableSamlPropertiesList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/DeletableSamlProperty"
        }
      },
      "DeletableSamlProperty": {
        "type": "string",
        "enum": [
          "SAML_PROPERTIES_USER_ACCESS_URL",
          "SAML_PROPERTIES_RELAY_STATE_PARAMETER_NAME"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://workspaces.us-east-1.amazonaws.com/#X-Amz-Target=WorkspacesService.ModifySamlProperties"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
