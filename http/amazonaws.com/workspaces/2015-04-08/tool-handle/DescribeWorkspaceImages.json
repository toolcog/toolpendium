{
  "name": "DescribeWorkspaceImages",
  "description": "Retrieves a list that describes one or more specified images, if the image identifiers are provided. Otherwise, all images in the account are described. ",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "WorkspacesService.DescribeWorkspaceImages"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/DescribeWorkspaceImagesRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "DescribeWorkspaceImagesRequest": {
        "type": "object",
        "title": "DescribeWorkspaceImagesRequest",
        "properties": {
          "ImageIds": {
            "allOf": [
              {
                "$ref": "#/$defs/WorkspaceImageIdList"
              },
              {
                "description": "The identifier of the image."
              }
            ]
          },
          "ImageType": {
            "allOf": [
              {
                "$ref": "#/$defs/ImageType"
              },
              {
                "description": "The type (owned or shared) of the image."
              }
            ]
          },
          "NextToken": {
            "allOf": [
              {
                "$ref": "#/$defs/PaginationToken"
              },
              {
                "description": "If you received a <code>NextToken</code> from a previous call that was paginated, provide this token to receive the next set of results."
              }
            ]
          },
          "MaxResults": {
            "allOf": [
              {
                "$ref": "#/$defs/Limit"
              },
              {
                "description": "The maximum number of items to return."
              }
            ]
          }
        }
      },
      "WorkspaceImageIdList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/WorkspaceImageId"
        },
        "minItems": 1,
        "maxItems": 25
      },
      "WorkspaceImageId": {
        "type": "string",
        "pattern": "wsi-[0-9a-z]{9,63}$"
      },
      "ImageType": {
        "type": "string",
        "enum": [
          "OWNED",
          "SHARED"
        ]
      },
      "PaginationToken": {
        "type": "string",
        "minLength": 1,
        "maxLength": 2048
      },
      "Limit": {
        "type": "integer",
        "minimum": 1,
        "maximum": 25
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://workspaces.us-east-1.amazonaws.com/#X-Amz-Target=WorkspacesService.DescribeWorkspaceImages"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Images**",
            "**NextToken**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
