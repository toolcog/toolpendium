{
  "name": "CreateWorkspaceBundle",
  "description": "Creates the specified WorkSpace bundle. For more information about creating WorkSpace bundles, see <a href=\"https://docs.aws.amazon.com/workspaces/latest/adminguide/create-custom-bundle.html\"> Create a Custom WorkSpaces Image and Bundle</a>.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "WorkspacesService.CreateWorkspaceBundle"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/CreateWorkspaceBundleRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "CreateWorkspaceBundleRequest": {
        "type": "object",
        "required": [
          "BundleName",
          "BundleDescription",
          "ImageId",
          "ComputeType",
          "UserStorage"
        ],
        "title": "CreateWorkspaceBundleRequest",
        "properties": {
          "BundleName": {
            "allOf": [
              {
                "$ref": "#/$defs/WorkspaceBundleName"
              },
              {
                "description": "The name of the bundle."
              }
            ]
          },
          "BundleDescription": {
            "allOf": [
              {
                "$ref": "#/$defs/WorkspaceBundleDescription"
              },
              {
                "description": "The description of the bundle."
              }
            ]
          },
          "ImageId": {
            "allOf": [
              {
                "$ref": "#/$defs/WorkspaceImageId"
              },
              {
                "description": "The identifier of the image that is used to create the bundle."
              }
            ]
          },
          "ComputeType": {
            "$ref": "#/$defs/ComputeType"
          },
          "UserStorage": {
            "$ref": "#/$defs/UserStorage"
          },
          "RootStorage": {
            "$ref": "#/$defs/RootStorage"
          },
          "Tags": {
            "allOf": [
              {
                "$ref": "#/$defs/TagList"
              },
              {
                "description": "<p>The tags associated with the bundle.</p> <note> <p>To add tags at the same time when you're creating the bundle, you must create an IAM policy that grants your IAM user permissions to use <code>workspaces:CreateTags</code>. </p> </note>"
              }
            ]
          }
        }
      },
      "WorkspaceBundleName": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9_./()\\\\-]+$",
        "minLength": 1,
        "maxLength": 64
      },
      "WorkspaceBundleDescription": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9_./() -]+$",
        "minLength": 1,
        "maxLength": 255
      },
      "WorkspaceImageId": {
        "type": "string",
        "pattern": "wsi-[0-9a-z]{9,63}$"
      },
      "ComputeType": {
        "type": "object",
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/Compute"
              },
              {
                "description": "The compute type."
              }
            ]
          }
        },
        "description": "Describes the compute type of the bundle."
      },
      "Compute": {
        "type": "string",
        "enum": [
          "VALUE",
          "STANDARD",
          "PERFORMANCE",
          "POWER",
          "GRAPHICS",
          "POWERPRO",
          "GRAPHICSPRO",
          "GRAPHICS_G4DN",
          "GRAPHICSPRO_G4DN"
        ]
      },
      "UserStorage": {
        "type": "object",
        "properties": {
          "Capacity": {
            "allOf": [
              {
                "$ref": "#/$defs/NonEmptyString"
              },
              {
                "description": "The size of the user volume."
              }
            ]
          }
        },
        "description": "Describes the user volume for a WorkSpace bundle."
      },
      "NonEmptyString": {
        "type": "string",
        "minLength": 1
      },
      "RootStorage": {
        "type": "object",
        "properties": {
          "Capacity": {
            "allOf": [
              {
                "$ref": "#/$defs/NonEmptyString"
              },
              {
                "description": "The size of the root volume."
              }
            ]
          }
        },
        "description": "Describes the root volume for a WorkSpace bundle."
      },
      "TagList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Tag"
        }
      },
      "Tag": {
        "type": "object",
        "required": [
          "Key"
        ],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "The key of the tag."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": "The value of the tag."
              }
            ]
          }
        },
        "description": "Describes a tag."
      },
      "TagKey": {
        "type": "string",
        "minLength": 1,
        "maxLength": 127
      },
      "TagValue": {
        "type": "string",
        "maxLength": 255
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://workspaces.us-east-1.amazonaws.com/#X-Amz-Target=WorkspacesService.CreateWorkspaceBundle"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**WorkspaceBundle**: Describes a WorkSpace bundle.",
              {
                "$ul": [
                  "**BundleId**",
                  "**Name**",
                  "**Owner**",
                  "**Description**",
                  "**ImageId**",
                  "**RootStorage**",
                  "**UserStorage**",
                  "**ComputeType**",
                  "**LastUpdatedTime**",
                  "**CreationTime**",
                  "**State**",
                  "**BundleType**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
