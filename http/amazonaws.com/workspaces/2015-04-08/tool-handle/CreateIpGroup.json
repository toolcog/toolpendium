{
  "name": "CreateIpGroup",
  "description": "<p>Creates an IP access control group.</p> <p>An IP access control group provides you with the ability to control the IP addresses from which users are allowed to access their WorkSpaces. To specify the CIDR address ranges, add rules to your IP access control group and then associate the group with your directory. You can add rules when you create the group or at any time using <a>AuthorizeIpRules</a>.</p> <p>There is a default IP access control group associated with your directory. If you don't associate an IP access control group with your directory, the default group is used. The default group includes a default rule that allows users to access their WorkSpaces from anywhere. You cannot modify the default IP access control group for your directory.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "WorkspacesService.CreateIpGroup"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/CreateIpGroupRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "CreateIpGroupRequest": {
        "type": "object",
        "required": [
          "GroupName"
        ],
        "title": "CreateIpGroupRequest",
        "properties": {
          "GroupName": {
            "allOf": [
              {
                "$ref": "#/$defs/IpGroupName"
              },
              {
                "description": "The name of the group."
              }
            ]
          },
          "GroupDesc": {
            "allOf": [
              {
                "$ref": "#/$defs/IpGroupDesc"
              },
              {
                "description": "The description of the group."
              }
            ]
          },
          "UserRules": {
            "allOf": [
              {
                "$ref": "#/$defs/IpRuleList"
              },
              {
                "description": "The rules to add to the group."
              }
            ]
          },
          "Tags": {
            "allOf": [
              {
                "$ref": "#/$defs/TagList"
              },
              {
                "description": "The tags. Each WorkSpaces resource can have a maximum of 50 tags."
              }
            ]
          }
        }
      },
      "IpGroupName": {
        "type": "string"
      },
      "IpGroupDesc": {
        "type": "string"
      },
      "IpRuleList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/IpRuleItem"
        }
      },
      "IpRuleItem": {
        "type": "object",
        "properties": {
          "ipRule": {
            "allOf": [
              {
                "$ref": "#/$defs/IpRule"
              },
              {
                "description": "The IP address range, in CIDR notation."
              }
            ]
          },
          "ruleDesc": {
            "allOf": [
              {
                "$ref": "#/$defs/IpRuleDesc"
              },
              {
                "description": "The description."
              }
            ]
          }
        },
        "description": "Describes a rule for an IP access control group."
      },
      "IpRule": {
        "type": "string"
      },
      "IpRuleDesc": {
        "type": "string"
      },
      "TagList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Tag"
        }
      },
      "Tag": {
        "type": "object",
        "required": [
          "Key"
        ],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "The key of the tag."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": "The value of the tag."
              }
            ]
          }
        },
        "description": "Describes a tag."
      },
      "TagKey": {
        "type": "string",
        "minLength": 1,
        "maxLength": 127
      },
      "TagValue": {
        "type": "string",
        "maxLength": 255
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://workspaces.us-east-1.amazonaws.com/#X-Amz-Target=WorkspacesService.CreateIpGroup"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**GroupId**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
