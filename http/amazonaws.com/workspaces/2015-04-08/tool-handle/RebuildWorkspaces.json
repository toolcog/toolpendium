{
  "name": "RebuildWorkspaces",
  "description": "<p>Rebuilds the specified WorkSpace.</p> <p>You cannot rebuild a WorkSpace unless its state is <code>AVAILABLE</code>, <code>ERROR</code>, <code>UNHEALTHY</code>, <code>STOPPED</code>, or <code>REBOOTING</code>.</p> <p>Rebuilding a WorkSpace is a potentially destructive action that can result in the loss of data. For more information, see <a href=\"https://docs.aws.amazon.com/workspaces/latest/adminguide/reset-workspace.html\">Rebuild a WorkSpace</a>.</p> <p>This operation is asynchronous and returns before the WorkSpaces have been completely rebuilt.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "WorkspacesService.RebuildWorkspaces"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/RebuildWorkspacesRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "RebuildWorkspacesRequest": {
        "type": "object",
        "required": [
          "RebuildWorkspaceRequests"
        ],
        "title": "RebuildWorkspacesRequest",
        "properties": {
          "RebuildWorkspaceRequests": {
            "allOf": [
              {
                "$ref": "#/$defs/RebuildWorkspaceRequests"
              },
              {
                "description": "The WorkSpace to rebuild. You can specify a single WorkSpace."
              }
            ]
          }
        }
      },
      "RebuildWorkspaceRequests": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/RebuildRequest"
        },
        "minItems": 1,
        "maxItems": 1
      },
      "RebuildRequest": {
        "type": "object",
        "required": [
          "WorkspaceId"
        ],
        "properties": {
          "WorkspaceId": {
            "allOf": [
              {
                "$ref": "#/$defs/WorkspaceId"
              },
              {
                "description": "The identifier of the WorkSpace."
              }
            ]
          }
        },
        "description": "Describes the information used to rebuild a WorkSpace."
      },
      "WorkspaceId": {
        "type": "string",
        "pattern": "^ws-[0-9a-z]{8,63}$"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://workspaces.us-east-1.amazonaws.com/#X-Amz-Target=WorkspacesService.RebuildWorkspaces"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**FailedRequests**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
