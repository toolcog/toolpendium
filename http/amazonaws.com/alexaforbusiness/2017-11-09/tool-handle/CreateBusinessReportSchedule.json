{
  "name": "CreateBusinessReportSchedule",
  "description": "Creates a recurring schedule for usage reports to deliver to the specified S3 location with a specified daily or weekly interval.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AlexaForBusiness.CreateBusinessReportSchedule"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/CreateBusinessReportScheduleRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "CreateBusinessReportScheduleRequest": {
        "type": "object",
        "required": [
          "Format",
          "ContentRange"
        ],
        "title": "CreateBusinessReportScheduleRequest",
        "properties": {
          "ScheduleName": {
            "allOf": [
              {
                "$ref": "#/$defs/BusinessReportScheduleName"
              },
              {
                "description": "The name identifier of the schedule."
              }
            ]
          },
          "S3BucketName": {
            "allOf": [
              {
                "$ref": "#/$defs/CustomerS3BucketName"
              },
              {
                "description": "The S3 bucket name of the output reports. If this isn't specified, the report can be retrieved from a download link by calling ListBusinessReportSchedule. "
              }
            ]
          },
          "S3KeyPrefix": {
            "allOf": [
              {
                "$ref": "#/$defs/S3KeyPrefix"
              },
              {
                "description": "The S3 key where the report is delivered."
              }
            ]
          },
          "Format": {
            "allOf": [
              {
                "$ref": "#/$defs/BusinessReportFormat"
              },
              {
                "description": "The format of the generated report (individual CSV files or zipped files of individual files)."
              }
            ]
          },
          "ContentRange": {
            "allOf": [
              {
                "$ref": "#/$defs/BusinessReportContentRange"
              },
              {
                "description": "The content range of the reports."
              }
            ]
          },
          "Recurrence": {
            "allOf": [
              {
                "$ref": "#/$defs/BusinessReportRecurrence"
              },
              {
                "description": "The recurrence of the reports. If this isn't specified, the report will only be delivered one time when the API is called. "
              }
            ]
          },
          "ClientRequestToken": {
            "allOf": [
              {
                "$ref": "#/$defs/ClientRequestToken"
              },
              {
                "description": "The client request token."
              }
            ]
          },
          "Tags": {
            "allOf": [
              {
                "$ref": "#/$defs/TagList"
              },
              {
                "description": "The tags for the business report schedule."
              }
            ]
          }
        }
      },
      "BusinessReportScheduleName": {
        "type": "string",
        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
        "minLength": 0,
        "maxLength": 64
      },
      "CustomerS3BucketName": {
        "type": "string",
        "pattern": "[a-z0-9-\\.]{3,63}"
      },
      "S3KeyPrefix": {
        "type": "string",
        "pattern": "[A-Za-z0-9!_\\-\\.\\*'()/]*",
        "minLength": 0,
        "maxLength": 100
      },
      "BusinessReportFormat": {
        "type": "string",
        "enum": [
          "CSV",
          "CSV_ZIP"
        ]
      },
      "BusinessReportContentRange": {
        "type": "object",
        "required": [
          "Interval"
        ],
        "properties": {
          "Interval": {
            "allOf": [
              {
                "$ref": "#/$defs/BusinessReportInterval"
              },
              {
                "description": "The interval of the content range."
              }
            ]
          }
        },
        "description": "The content range of the report."
      },
      "BusinessReportInterval": {
        "type": "string",
        "enum": [
          "ONE_DAY",
          "ONE_WEEK",
          "THIRTY_DAYS"
        ]
      },
      "BusinessReportRecurrence": {
        "type": "object",
        "properties": {
          "StartDate": {
            "allOf": [
              {
                "$ref": "#/$defs/Date"
              },
              {
                "description": "The start date."
              }
            ]
          }
        },
        "description": "The recurrence of the reports."
      },
      "Date": {
        "type": "string",
        "pattern": "^\\d{4}\\-(0?[1-9]|1[012])\\-(0?[1-9]|[12][0-9]|3[01])$"
      },
      "ClientRequestToken": {
        "type": "string",
        "pattern": "[a-zA-Z0-9][a-zA-Z0-9_-]*",
        "description": "A unique, user-specified identifier for the request that ensures idempotency.",
        "minLength": 10,
        "maxLength": 150
      },
      "TagList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Tag"
        }
      },
      "Tag": {
        "type": "object",
        "required": [
          "Key",
          "Value"
        ],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "The key of a tag. Tag keys are case-sensitive. "
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": "The value of a tag. Tag values are case sensitive and can be null."
              }
            ]
          }
        },
        "description": "A key-value pair that can be associated with a resource. "
      },
      "TagKey": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 1,
        "maxLength": 128
      },
      "TagValue": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 0,
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://a4b.us-east-1.amazonaws.com/#X-Amz-Target=AlexaForBusiness.CreateBusinessReportSchedule"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**ScheduleArn**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
