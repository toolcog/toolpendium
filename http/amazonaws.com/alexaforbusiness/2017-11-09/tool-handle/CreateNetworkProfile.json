{
  "name": "CreateNetworkProfile",
  "description": "Creates a network profile with the specified details.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AlexaForBusiness.CreateNetworkProfile"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/CreateNetworkProfileRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "CreateNetworkProfileRequest": {
        "type": "object",
        "required": [
          "NetworkProfileName",
          "Ssid",
          "SecurityType",
          "ClientRequestToken"
        ],
        "title": "CreateNetworkProfileRequest",
        "properties": {
          "NetworkProfileName": {
            "allOf": [
              {
                "$ref": "#/$defs/NetworkProfileName"
              },
              {
                "description": "The name of the network profile associated with a device."
              }
            ]
          },
          "Description": {
            "allOf": [
              {
                "$ref": "#/$defs/NetworkProfileDescription"
              },
              {
                "description": "Detailed information about a device's network profile."
              }
            ]
          },
          "Ssid": {
            "allOf": [
              {
                "$ref": "#/$defs/NetworkSsid"
              },
              {
                "description": "The SSID of the Wi-Fi network."
              }
            ]
          },
          "SecurityType": {
            "allOf": [
              {
                "$ref": "#/$defs/NetworkSecurityType"
              },
              {
                "description": "The security type of the Wi-Fi network. This can be WPA2_ENTERPRISE, WPA2_PSK, WPA_PSK, WEP, or OPEN."
              }
            ]
          },
          "EapMethod": {
            "allOf": [
              {
                "$ref": "#/$defs/NetworkEapMethod"
              },
              {
                "description": "The authentication standard that is used in the EAP framework. Currently, EAP_TLS is supported."
              }
            ]
          },
          "CurrentPassword": {
            "allOf": [
              {
                "$ref": "#/$defs/CurrentWiFiPassword"
              },
              {
                "description": "The current password of the Wi-Fi network."
              }
            ]
          },
          "NextPassword": {
            "allOf": [
              {
                "$ref": "#/$defs/NextWiFiPassword"
              },
              {
                "description": "The next, or subsequent, password of the Wi-Fi network. This password is asynchronously transmitted to the device and is used when the password of the network changes to NextPassword. "
              }
            ]
          },
          "CertificateAuthorityArn": {
            "allOf": [
              {
                "$ref": "#/$defs/Arn"
              },
              {
                "description": "The ARN of the Private Certificate Authority (PCA) created in AWS Certificate Manager (ACM). This is used to issue certificates to the devices. "
              }
            ]
          },
          "TrustAnchors": {
            "allOf": [
              {
                "$ref": "#/$defs/TrustAnchorList"
              },
              {
                "description": "The root certificates of your authentication server that is installed on your devices and used to trust your authentication server during EAP negotiation. "
              }
            ]
          },
          "ClientRequestToken": {
            "$ref": "#/$defs/ClientRequestToken"
          },
          "Tags": {
            "allOf": [
              {
                "$ref": "#/$defs/TagList"
              },
              {
                "description": "The tags to be added to the specified resource. Do not provide system tags. "
              }
            ]
          }
        }
      },
      "NetworkProfileName": {
        "type": "string",
        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
        "minLength": 1,
        "maxLength": 100
      },
      "NetworkProfileDescription": {
        "type": "string",
        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
        "minLength": 0,
        "maxLength": 200
      },
      "NetworkSsid": {
        "type": "string",
        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
        "minLength": 1,
        "maxLength": 32
      },
      "NetworkSecurityType": {
        "type": "string",
        "enum": [
          "OPEN",
          "WEP",
          "WPA_PSK",
          "WPA2_PSK",
          "WPA2_ENTERPRISE"
        ]
      },
      "NetworkEapMethod": {
        "type": "string",
        "enum": [
          "EAP_TLS"
        ]
      },
      "CurrentWiFiPassword": {
        "type": "string",
        "pattern": "[\\x00-\\x7F]*",
        "minLength": 5,
        "maxLength": 128,
        "format": "password"
      },
      "NextWiFiPassword": {
        "type": "string",
        "pattern": "(^$)|([\\x00-\\x7F]{5,})",
        "minLength": 0,
        "maxLength": 128,
        "format": "password"
      },
      "Arn": {
        "type": "string",
        "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}"
      },
      "TrustAnchorList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/TrustAnchor"
        },
        "minItems": 1,
        "maxItems": 5
      },
      "TrustAnchor": {
        "type": "string",
        "pattern": "-{5}BEGIN CERTIFICATE-{5}\\u000D?\\u000A([A-Za-z0-9/+]{64}\\u000D?\\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\\u000D?\\u000A-{5}END CERTIFICATE-{5}(\\u000D?\\u000A)?"
      },
      "ClientRequestToken": {
        "type": "string",
        "pattern": "[a-zA-Z0-9][a-zA-Z0-9_-]*",
        "description": "A unique, user-specified identifier for the request that ensures idempotency.",
        "minLength": 10,
        "maxLength": 150
      },
      "TagList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Tag"
        }
      },
      "Tag": {
        "type": "object",
        "required": [
          "Key",
          "Value"
        ],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "The key of a tag. Tag keys are case-sensitive. "
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": "The value of a tag. Tag values are case sensitive and can be null."
              }
            ]
          }
        },
        "description": "A key-value pair that can be associated with a resource. "
      },
      "TagKey": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 1,
        "maxLength": 128
      },
      "TagValue": {
        "type": "string",
        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
        "minLength": 0,
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://a4b.us-east-1.amazonaws.com/#X-Amz-Target=AlexaForBusiness.CreateNetworkProfile"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**NetworkProfileArn**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
