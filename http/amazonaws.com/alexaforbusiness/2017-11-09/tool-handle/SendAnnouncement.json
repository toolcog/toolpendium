{
  "name": "SendAnnouncement",
  "description": "Triggers an asynchronous flow to send text, SSML, or audio announcements to rooms that are identified by a search or filter. ",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AlexaForBusiness.SendAnnouncement"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/SendAnnouncementRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "SendAnnouncementRequest": {
        "type": "object",
        "required": [
          "RoomFilters",
          "Content",
          "ClientRequestToken"
        ],
        "title": "SendAnnouncementRequest",
        "properties": {
          "RoomFilters": {
            "allOf": [
              {
                "$ref": "#/$defs/FilterList"
              },
              {
                "description": "The filters to use to send an announcement to a specified list of rooms. The supported filter keys are RoomName, ProfileName, RoomArn, and ProfileArn. To send to all rooms, specify an empty RoomFilters list."
              }
            ]
          },
          "Content": {
            "allOf": [
              {
                "$ref": "#/$defs/Content"
              },
              {
                "description": "The announcement content. This can contain only one of the three possible announcement types (text, SSML or audio)."
              }
            ]
          },
          "TimeToLiveInSeconds": {
            "allOf": [
              {
                "$ref": "#/$defs/TimeToLiveInSeconds"
              },
              {
                "description": "The time to live for an announcement. Default is 300. If delivery doesn't occur within this time, the announcement is not delivered."
              }
            ]
          },
          "ClientRequestToken": {
            "allOf": [
              {
                "$ref": "#/$defs/ClientRequestToken"
              },
              {
                "description": "The unique, user-specified identifier for the request that ensures idempotency."
              }
            ]
          }
        }
      },
      "FilterList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Filter"
        },
        "maxItems": 25
      },
      "Filter": {
        "type": "object",
        "required": [
          "Key",
          "Values"
        ],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/FilterKey"
              },
              {
                "description": "The key of a filter."
              }
            ]
          },
          "Values": {
            "allOf": [
              {
                "$ref": "#/$defs/FilterValueList"
              },
              {
                "description": "The values of a filter."
              }
            ]
          }
        },
        "description": "A filter name and value pair that is used to return a more specific list of results. Filters can be used to match a set of resources by various criteria."
      },
      "FilterKey": {
        "type": "string",
        "minLength": 1,
        "maxLength": 500
      },
      "FilterValueList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/FilterValue"
        },
        "maxItems": 50
      },
      "FilterValue": {
        "type": "string",
        "minLength": 1,
        "maxLength": 500
      },
      "Content": {
        "type": "object",
        "properties": {
          "TextList": {
            "allOf": [
              {
                "$ref": "#/$defs/TextList"
              },
              {
                "description": "The list of text messages."
              }
            ]
          },
          "SsmlList": {
            "allOf": [
              {
                "$ref": "#/$defs/SsmlList"
              },
              {
                "description": "The list of SSML messages."
              }
            ]
          },
          "AudioList": {
            "allOf": [
              {
                "$ref": "#/$defs/AudioList"
              },
              {
                "description": "The list of audio messages."
              }
            ]
          }
        },
        "description": "The content definition. This can contain only one text, SSML, or audio list object."
      },
      "TextList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Text"
        },
        "maxItems": 1
      },
      "Text": {
        "type": "object",
        "required": [
          "Locale",
          "Value"
        ],
        "properties": {
          "Locale": {
            "allOf": [
              {
                "$ref": "#/$defs/Locale"
              },
              {
                "description": "The locale of the text message. Currently, en-US is supported."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/TextValue"
              },
              {
                "description": "The value of the text message."
              }
            ]
          }
        },
        "description": "The text message."
      },
      "Locale": {
        "type": "string",
        "enum": [
          "en-US"
        ]
      },
      "TextValue": {
        "type": "string",
        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
        "minLength": 0,
        "maxLength": 4096
      },
      "SsmlList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Ssml"
        },
        "maxItems": 1
      },
      "Ssml": {
        "type": "object",
        "required": [
          "Locale",
          "Value"
        ],
        "properties": {
          "Locale": {
            "allOf": [
              {
                "$ref": "#/$defs/Locale"
              },
              {
                "description": "The locale of the SSML message. Currently, en-US is supported."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/SsmlValue"
              },
              {
                "description": "The value of the SSML message in the correct SSML format. The audio tag is not supported."
              }
            ]
          }
        },
        "description": "The SSML message. For more information, see <a href=\"https://developer.amazon.com/docs/custom-skills/speech-synthesis-markup-language-ssml-reference.html\">SSML Reference</a>."
      },
      "SsmlValue": {
        "type": "string",
        "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*",
        "minLength": 0,
        "maxLength": 4096
      },
      "AudioList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Audio"
        },
        "maxItems": 1
      },
      "Audio": {
        "type": "object",
        "required": [
          "Locale",
          "Location"
        ],
        "properties": {
          "Locale": {
            "allOf": [
              {
                "$ref": "#/$defs/Locale"
              },
              {
                "description": "The locale of the audio message. Currently, en-US is supported."
              }
            ]
          },
          "Location": {
            "allOf": [
              {
                "$ref": "#/$defs/AudioLocation"
              },
              {
                "description": "The location of the audio file. Currently, S3 URLs are supported. Only S3 locations comprised of safe characters are valid. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html#Safe%20Characters\">Safe Characters</a>."
              }
            ]
          }
        },
        "description": "<p>The audio message. There is a 1 MB limit on the audio file input and the only supported format is MP3. To convert your MP3 audio files to an Alexa-friendly, </p> <p>required codec version (MPEG version 2) and bit rate (48 kbps), you might use converter software. One option for this is a command-line tool, FFmpeg. For more information, see <a href=\"https://www.ffmpeg.org/\">FFmpeg</a>. The following command converts the provided &lt;input-file&gt; to an MP3 file that is played in the announcement:</p> <p> <code>ffmpeg -i &lt;input-file&gt; -ac 2 -codec:a libmp3lame -b:a 48k -ar 16000 &lt;output-file.mp3&gt;</code> </p>"
      },
      "AudioLocation": {
        "type": "string",
        "pattern": "https://([A-Za-z0-9_.-]+)?(s3-[A-Za-z0-9-]+|s3\\.([A-Za-z0-9-])+|s3|s3.dualstack\\.([A-Za-z0-9-])+)+.amazonaws.com/.*",
        "minLength": 0,
        "maxLength": 1200
      },
      "TimeToLiveInSeconds": {
        "type": "integer",
        "minimum": 1,
        "maximum": 3600
      },
      "ClientRequestToken": {
        "type": "string",
        "pattern": "[a-zA-Z0-9][a-zA-Z0-9_-]*",
        "description": "A unique, user-specified identifier for the request that ensures idempotency.",
        "minLength": 10,
        "maxLength": 150
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://a4b.us-east-1.amazonaws.com/#X-Amz-Target=AlexaForBusiness.SendAnnouncement"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**AnnouncementArn**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
