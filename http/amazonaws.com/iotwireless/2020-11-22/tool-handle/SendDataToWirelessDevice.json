{
  "name": "SendDataToWirelessDevice",
  "description": "Sends a decrypted application data frame to a device.",
  "parameters": {
    "type": "object",
    "properties": {
      "Id": {
        "type": "string",
        "description": "The ID of the wireless device to receive the data.",
        "maxLength": 256
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "TransmitMode",
          "PayloadData"
        ],
        "properties": {
          "TransmitMode": {
            "description": "The transmit mode to use to send data to the wireless device. Can be: <code>0</code> for UM (unacknowledge mode) or <code>1</code> for AM (acknowledge mode).",
            "type": "integer",
            "minimum": 0,
            "maximum": 1
          },
          "PayloadData": {
            "description": "The binary to be sent to the end device, encoded in base64.",
            "type": "string",
            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "maxLength": 2048
          },
          "WirelessMetadata": {
            "description": "WirelessMetadata object.",
            "type": "object",
            "properties": {
              "LoRaWAN": {
                "allOf": [
                  {
                    "$ref": "#/$defs/LoRaWANSendDataToDevice"
                  },
                  {
                    "description": "LoRaWAN device info."
                  }
                ]
              },
              "Sidewalk": {
                "allOf": [
                  {
                    "$ref": "#/$defs/SidewalkSendDataToDevice"
                  },
                  {
                    "description": "The Sidewalk account credentials."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "required": [
      "Id",
      "body"
    ],
    "$defs": {
      "LoRaWANSendDataToDevice": {
        "type": "object",
        "properties": {
          "FPort": {
            "$ref": "#/$defs/FPort"
          },
          "ParticipatingGateways": {
            "allOf": [
              {
                "$ref": "#/$defs/ParticipatingGateways"
              },
              {
                "description": "Choose the gateways that you want to use for the downlink data traffic when the wireless device is running in class B or class C mode."
              }
            ]
          }
        },
        "description": "LoRaWAN router info."
      },
      "FPort": {
        "type": "integer",
        "description": "The Fport value.",
        "minimum": 1,
        "maximum": 223
      },
      "ParticipatingGateways": {
        "type": "object",
        "required": [
          "DownlinkMode",
          "GatewayList",
          "TransmissionInterval"
        ],
        "properties": {
          "DownlinkMode": {
            "allOf": [
              {
                "$ref": "#/$defs/DownlinkMode"
              },
              {
                "description": "Indicates whether to send the downlink message in sequential mode or concurrent mode, or to use only the chosen gateways from the previous uplink message transmission."
              }
            ]
          },
          "GatewayList": {
            "allOf": [
              {
                "$ref": "#/$defs/GatewayList"
              },
              {
                "description": "The list of gateways that you want to use for sending the downlink data traffic."
              }
            ]
          },
          "TransmissionInterval": {
            "allOf": [
              {
                "$ref": "#/$defs/TransmissionInterval"
              },
              {
                "description": "The duration of time for which AWS IoT Core for LoRaWAN will wait before transmitting the payload to the next gateway."
              }
            ]
          }
        },
        "description": "Specify the list of gateways to which you want to send downlink data traffic when the wireless device is running in class B or class C mode."
      },
      "DownlinkMode": {
        "type": "string",
        "enum": [
          "SEQUENTIAL",
          "CONCURRENT",
          "USING_UPLINK_GATEWAY"
        ]
      },
      "GatewayList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/GatewayListItem"
        }
      },
      "GatewayListItem": {
        "type": "object",
        "required": [
          "GatewayId",
          "DownlinkFrequency"
        ],
        "properties": {
          "GatewayId": {
            "allOf": [
              {
                "$ref": "#/$defs/WirelessGatewayId"
              },
              {
                "description": "The ID of the wireless gateways that you want to add to the list of gateways when sending downlink messages."
              }
            ]
          },
          "DownlinkFrequency": {
            "allOf": [
              {
                "$ref": "#/$defs/DownlinkFrequency"
              },
              {
                "description": "The frequency to use for the gateways when sending a downlink message to the wireless device."
              }
            ]
          }
        },
        "description": "Gateway list item object that specifies the frequency and list of gateways for which the downlink message should be sent."
      },
      "WirelessGatewayId": {
        "type": "string",
        "maxLength": 256
      },
      "DownlinkFrequency": {
        "type": "integer",
        "minimum": 100000000,
        "maximum": 1000000000
      },
      "TransmissionInterval": {
        "type": "integer",
        "minimum": 1,
        "maximum": 604800
      },
      "SidewalkSendDataToDevice": {
        "type": "object",
        "properties": {
          "Seq": {
            "allOf": [
              {
                "$ref": "#/$defs/Seq"
              },
              {
                "description": "The sequence number."
              }
            ]
          },
          "MessageType": {
            "$ref": "#/$defs/MessageType"
          },
          "AckModeRetryDurationSecs": {
            "allOf": [
              {
                "$ref": "#/$defs/AckModeRetryDurationSecs"
              },
              {
                "description": "The duration of time in seconds to retry sending the ACK."
              }
            ]
          }
        },
        "description": "Information about a Sidewalk router."
      },
      "Seq": {
        "type": "integer",
        "minimum": 0,
        "maximum": 16383
      },
      "MessageType": {
        "type": "string",
        "enum": [
          "CUSTOM_COMMAND_ID_NOTIFY",
          "CUSTOM_COMMAND_ID_GET",
          "CUSTOM_COMMAND_ID_SET",
          "CUSTOM_COMMAND_ID_RESP"
        ],
        "description": "Sidewalk device message type. Default value is <code>CUSTOM_COMMAND_ID_NOTIFY</code>."
      },
      "AckModeRetryDurationSecs": {
        "type": "integer",
        "minimum": 0,
        "maximum": 604800
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://api.iotwireless.us-east-1.amazonaws.com/wireless-devices/{Id}/data"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "202": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**MessageId**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
