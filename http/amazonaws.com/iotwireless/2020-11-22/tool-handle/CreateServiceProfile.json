{
  "name": "CreateServiceProfile",
  "description": "Creates a new service profile.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "properties": {
          "Name": {
            "description": "The name of the new resource.",
            "type": "string",
            "maxLength": 256
          },
          "LoRaWAN": {
            "description": "LoRaWANServiceProfile object.",
            "type": "object",
            "properties": {
              "AddGwMetadata": {
                "allOf": [
                  {
                    "$ref": "#/$defs/AddGwMetadata"
                  },
                  {
                    "description": "The AddGWMetaData value."
                  }
                ]
              },
              "DrMin": {
                "allOf": [
                  {
                    "$ref": "#/$defs/DrMinBox"
                  },
                  {
                    "description": "The DrMin value."
                  }
                ]
              },
              "DrMax": {
                "allOf": [
                  {
                    "$ref": "#/$defs/DrMaxBox"
                  },
                  {
                    "description": "The DrMax value."
                  }
                ]
              },
              "PrAllowed": {
                "allOf": [
                  {
                    "$ref": "#/$defs/PrAllowed"
                  },
                  {
                    "description": "The PRAllowed value that describes whether passive roaming is allowed."
                  }
                ]
              },
              "RaAllowed": {
                "allOf": [
                  {
                    "$ref": "#/$defs/RaAllowed"
                  },
                  {
                    "description": "The RAAllowed value that describes whether roaming activation is allowed."
                  }
                ]
              }
            }
          },
          "Tags": {
            "description": "The tag to attach to the specified resource. Tags are metadata that you can use to manage a resource.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/Tag"
            },
            "minItems": 0,
            "maxItems": 200
          },
          "ClientRequestToken": {
            "description": "Each resource must have a unique client request token. If you try to create a new resource with the same token as a resource that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request.",
            "type": "string",
            "pattern": "^[a-zA-Z0-9-_]+$",
            "minLength": 1,
            "maxLength": 64
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "AddGwMetadata": {
        "type": "boolean"
      },
      "DrMinBox": {
        "type": "integer",
        "minimum": 0,
        "maximum": 15
      },
      "DrMaxBox": {
        "type": "integer",
        "minimum": 0,
        "maximum": 15
      },
      "PrAllowed": {
        "type": "boolean"
      },
      "RaAllowed": {
        "type": "boolean"
      },
      "Tag": {
        "type": "object",
        "required": [
          "Key",
          "Value"
        ],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "The tag's key value."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": "The tag's value."
              }
            ]
          }
        },
        "description": "A simple label consisting of a customer-defined key-value pair"
      },
      "TagKey": {
        "type": "string",
        "minLength": 1,
        "maxLength": 128
      },
      "TagValue": {
        "type": "string",
        "minLength": 0,
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://api.iotwireless.us-east-1.amazonaws.com/service-profiles"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Arn**",
            "**Id**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
