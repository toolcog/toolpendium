{
  "name": "UpdateLogLevelsByResourceTypes",
  "description": "Set default log level, or log levels by resource types. This can be for wireless device log options or wireless gateways log options and is used to control the log messages that'll be displayed in CloudWatch.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "properties": {
          "DefaultLogLevel": {
            "description": "The log level for a log message. The log levels can be disabled, or set to <code>ERROR</code> to display less verbose logs containing only error information, or to <code>INFO</code> for more detailed logs.",
            "type": "string",
            "enum": [
              "INFO",
              "ERROR",
              "DISABLED"
            ]
          },
          "WirelessDeviceLogOptions": {
            "description": "The list of wireless device log options.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/WirelessDeviceLogOption"
            }
          },
          "WirelessGatewayLogOptions": {
            "description": "The list of wireless gateway log options.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/WirelessGatewayLogOption"
            }
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "WirelessDeviceLogOption": {
        "type": "object",
        "required": [
          "Type",
          "LogLevel"
        ],
        "properties": {
          "Type": {
            "allOf": [
              {
                "$ref": "#/$defs/WirelessDeviceType"
              },
              {
                "description": "The wireless device type."
              }
            ]
          },
          "LogLevel": {
            "$ref": "#/$defs/LogLevel"
          },
          "Events": {
            "$ref": "#/$defs/WirelessDeviceEventLogOptionList"
          }
        },
        "description": "The log options for wireless devices and can be used to set log levels for a specific type of wireless device."
      },
      "WirelessDeviceType": {
        "type": "string",
        "enum": [
          "Sidewalk",
          "LoRaWAN"
        ]
      },
      "LogLevel": {
        "type": "string",
        "enum": [
          "INFO",
          "ERROR",
          "DISABLED"
        ],
        "description": "The log level for a log message. The log levels can be disabled, or set to <code>ERROR</code> to display less verbose logs containing only error information, or to <code>INFO</code> for more detailed logs."
      },
      "WirelessDeviceEventLogOptionList": {
        "type": "array",
        "description": "The list of wireless device event log options.",
        "items": {
          "$ref": "#/$defs/WirelessDeviceEventLogOption"
        }
      },
      "WirelessDeviceEventLogOption": {
        "type": "object",
        "required": [
          "Event",
          "LogLevel"
        ],
        "properties": {
          "Event": {
            "$ref": "#/$defs/WirelessDeviceEvent"
          },
          "LogLevel": {
            "$ref": "#/$defs/LogLevel"
          }
        },
        "description": "<p>The log options for a wireless device event and can be used to set log levels for a specific wireless device event.</p> <p>For a LoRaWAN device, possible events for a log messsage are: <code>Join</code>, <code>Rejoin</code>, <code>Downlink_Data</code>, and <code>Uplink_Data</code>. For a Sidewalk device, possible events for a log message are <code>Registration</code>, <code>Downlink_Data</code>, and <code>Uplink_Data</code>.</p>"
      },
      "WirelessDeviceEvent": {
        "type": "string",
        "enum": [
          "Join",
          "Rejoin",
          "Uplink_Data",
          "Downlink_Data",
          "Registration"
        ],
        "description": "The event for a log message, if the log message is tied to a wireless device."
      },
      "WirelessGatewayLogOption": {
        "type": "object",
        "required": [
          "Type",
          "LogLevel"
        ],
        "properties": {
          "Type": {
            "$ref": "#/$defs/WirelessGatewayType"
          },
          "LogLevel": {
            "$ref": "#/$defs/LogLevel"
          },
          "Events": {
            "$ref": "#/$defs/WirelessGatewayEventLogOptionList"
          }
        },
        "description": "The log options for wireless gateways and can be used to set log levels for a specific type of wireless gateway."
      },
      "WirelessGatewayType": {
        "type": "string",
        "enum": [
          "LoRaWAN"
        ],
        "description": "The wireless gateway type."
      },
      "WirelessGatewayEventLogOptionList": {
        "type": "array",
        "description": "The list of wireless gateway event log options.",
        "items": {
          "$ref": "#/$defs/WirelessGatewayEventLogOption"
        }
      },
      "WirelessGatewayEventLogOption": {
        "type": "object",
        "required": [
          "Event",
          "LogLevel"
        ],
        "properties": {
          "Event": {
            "$ref": "#/$defs/WirelessGatewayEvent"
          },
          "LogLevel": {
            "$ref": "#/$defs/LogLevel"
          }
        },
        "description": "<p>The log options for a wireless gateway event and can be used to set log levels for a specific wireless gateway event.</p> <p>For a LoRaWAN gateway, possible events for a log message are <code>CUPS_Request</code> and <code>Certificate</code>.</p>"
      },
      "WirelessGatewayEvent": {
        "type": "string",
        "enum": [
          "CUPS_Request",
          "Certificate"
        ],
        "description": "The event for a log message, if the log message is tied to a wireless gateway."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://api.iotwireless.us-east-1.amazonaws.com/log-levels"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
