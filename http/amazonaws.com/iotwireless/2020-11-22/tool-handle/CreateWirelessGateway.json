{
  "name": "CreateWirelessGateway",
  "description": "Provisions a wireless gateway.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "LoRaWAN"
        ],
        "properties": {
          "Name": {
            "description": "The name of the new resource.",
            "type": "string",
            "maxLength": 256
          },
          "Description": {
            "description": "The description of the new resource.",
            "type": "string",
            "maxLength": 2048
          },
          "LoRaWAN": {
            "description": "LoRaWANGateway object.",
            "type": "object",
            "properties": {
              "GatewayEui": {
                "allOf": [
                  {
                    "$ref": "#/$defs/GatewayEui"
                  },
                  {
                    "description": "The gateway's EUI value."
                  }
                ]
              },
              "RfRegion": {
                "allOf": [
                  {
                    "$ref": "#/$defs/RfRegion"
                  },
                  {
                    "description": "The frequency band (RFRegion) value."
                  }
                ]
              },
              "JoinEuiFilters": {
                "$ref": "#/$defs/JoinEuiFilters"
              },
              "NetIdFilters": {
                "$ref": "#/$defs/NetIdFilters"
              },
              "SubBands": {
                "$ref": "#/$defs/SubBands"
              },
              "Beaconing": {
                "allOf": [
                  {
                    "$ref": "#/$defs/Beaconing"
                  },
                  {
                    "description": "Beaconing object information, which consists of the data rate and frequency parameters."
                  }
                ]
              },
              "MaxEirp": {
                "allOf": [
                  {
                    "$ref": "#/$defs/GatewayMaxEirp"
                  },
                  {
                    "description": "The MaxEIRP value."
                  }
                ]
              }
            }
          },
          "Tags": {
            "description": "The tag to attach to the specified resource. Tags are metadata that you can use to manage a resource.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/Tag"
            },
            "minItems": 0,
            "maxItems": 200
          },
          "ClientRequestToken": {
            "description": "Each resource must have a unique client request token. If you try to create a new resource with the same token as a resource that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request.",
            "type": "string",
            "pattern": "^[a-zA-Z0-9-_]+$",
            "minLength": 1,
            "maxLength": 64
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "GatewayEui": {
        "type": "string",
        "pattern": "^(([0-9A-Fa-f]{2}-){7}|([0-9A-Fa-f]{2}:){7}|([0-9A-Fa-f]{2}\\s){7}|([0-9A-Fa-f]{2}){7})([0-9A-Fa-f]{2})$"
      },
      "RfRegion": {
        "type": "string",
        "description": "The frequency band (RFRegion) value.",
        "maxLength": 64
      },
      "JoinEuiFilters": {
        "type": "array",
        "description": "A list of JoinEuiRange used by LoRa gateways to filter LoRa frames.",
        "items": {
          "$ref": "#/$defs/JoinEuiRange"
        },
        "minItems": 0,
        "maxItems": 3
      },
      "JoinEuiRange": {
        "type": "array",
        "description": "A pair of join EUI describing a range [BegEui, EndEui], both ends are inclusive.",
        "items": {
          "$ref": "#/$defs/JoinEui"
        },
        "minItems": 2,
        "maxItems": 2
      },
      "JoinEui": {
        "type": "string",
        "pattern": "[a-fA-F0-9]{16}"
      },
      "NetIdFilters": {
        "type": "array",
        "description": "A list of NetId values that are used by LoRa gateways to filter the uplink frames.",
        "items": {
          "$ref": "#/$defs/NetId"
        },
        "minItems": 0,
        "maxItems": 10
      },
      "NetId": {
        "type": "string",
        "pattern": "[a-fA-F0-9]{6}",
        "description": "LoRaWAN network ID."
      },
      "SubBands": {
        "type": "array",
        "description": "A list of integer indicating which sub bands are supported by LoRa gateway.",
        "items": {
          "$ref": "#/$defs/SubBand"
        },
        "minItems": 0,
        "maxItems": 8
      },
      "SubBand": {
        "type": "integer",
        "description": "A subset of supported frequency channels in a certain RFRegion.",
        "minimum": 1,
        "maximum": 8
      },
      "Beaconing": {
        "type": "object",
        "properties": {
          "DataRate": {
            "allOf": [
              {
                "$ref": "#/$defs/BeaconingDataRate"
              },
              {
                "description": "The data rate for gateways that are sending the beacons."
              }
            ]
          },
          "Frequencies": {
            "allOf": [
              {
                "$ref": "#/$defs/BeaconingFrequencies"
              },
              {
                "description": "The frequency list for the gateways to send the beacons."
              }
            ]
          }
        },
        "description": "Beaconing parameters for configuring the wireless gateways."
      },
      "BeaconingDataRate": {
        "type": "integer",
        "minimum": 0,
        "maximum": 15
      },
      "BeaconingFrequencies": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/BeaconingFrequency"
        },
        "minItems": 0,
        "maxItems": 10
      },
      "BeaconingFrequency": {
        "type": "integer",
        "minimum": 100000000,
        "maximum": 1000000000
      },
      "GatewayMaxEirp": {
        "type": "number",
        "format": "float",
        "minimum": 0,
        "maximum": 30
      },
      "Tag": {
        "type": "object",
        "required": [
          "Key",
          "Value"
        ],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "The tag's key value."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": "The tag's value."
              }
            ]
          }
        },
        "description": "A simple label consisting of a customer-defined key-value pair"
      },
      "TagKey": {
        "type": "string",
        "minLength": 1,
        "maxLength": 128
      },
      "TagValue": {
        "type": "string",
        "minLength": 0,
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://api.iotwireless.us-east-1.amazonaws.com/wireless-gateways"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Arn**",
            "**Id**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
