{
  "name": "CreateWirelessGatewayTaskDefinition",
  "description": "Creates a gateway task definition.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "AutoCreateTasks"
        ],
        "properties": {
          "AutoCreateTasks": {
            "description": "Whether to automatically create tasks using this task definition for all gateways with the specified current version. If <code>false</code>, the task must me created by calling <code>CreateWirelessGatewayTask</code>.",
            "type": "boolean"
          },
          "Name": {
            "description": "The name of the new resource.",
            "type": "string",
            "minLength": 1,
            "maxLength": 2048
          },
          "Update": {
            "description": "UpdateWirelessGatewayTaskCreate object.",
            "type": "object",
            "properties": {
              "UpdateDataSource": {
                "allOf": [
                  {
                    "$ref": "#/$defs/UpdateDataSource"
                  },
                  {
                    "description": "The link to the S3 bucket."
                  }
                ]
              },
              "UpdateDataRole": {
                "allOf": [
                  {
                    "$ref": "#/$defs/UpdateDataSource"
                  },
                  {
                    "description": "The IAM role used to read data from the S3 bucket."
                  }
                ]
              },
              "LoRaWAN": {
                "allOf": [
                  {
                    "$ref": "#/$defs/LoRaWANUpdateGatewayTaskCreate"
                  },
                  {
                    "description": "The properties that relate to the LoRaWAN wireless gateway."
                  }
                ]
              }
            }
          },
          "ClientRequestToken": {
            "description": "Each resource must have a unique client request token. If you try to create a new resource with the same token as a resource that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request.",
            "type": "string",
            "pattern": "^[a-zA-Z0-9-_]+$",
            "minLength": 1,
            "maxLength": 64
          },
          "Tags": {
            "description": "The tag to attach to the specified resource. Tags are metadata that you can use to manage a resource.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/Tag"
            },
            "minItems": 0,
            "maxItems": 200
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "UpdateDataSource": {
        "type": "string",
        "minLength": 1,
        "maxLength": 4096
      },
      "LoRaWANUpdateGatewayTaskCreate": {
        "type": "object",
        "properties": {
          "UpdateSignature": {
            "allOf": [
              {
                "$ref": "#/$defs/UpdateSignature"
              },
              {
                "description": "The signature used to verify the update firmware."
              }
            ]
          },
          "SigKeyCrc": {
            "allOf": [
              {
                "$ref": "#/$defs/Crc"
              },
              {
                "description": "The CRC of the signature private key to check."
              }
            ]
          },
          "CurrentVersion": {
            "allOf": [
              {
                "$ref": "#/$defs/LoRaWANGatewayVersion"
              },
              {
                "description": "The version of the gateways that should receive the update."
              }
            ]
          },
          "UpdateVersion": {
            "allOf": [
              {
                "$ref": "#/$defs/LoRaWANGatewayVersion"
              },
              {
                "description": "The firmware version to update the gateway to."
              }
            ]
          }
        },
        "description": "LoRaWANUpdateGatewayTaskCreate object."
      },
      "UpdateSignature": {
        "type": "string",
        "minLength": 1,
        "maxLength": 4096
      },
      "Crc": {
        "type": "integer",
        "minimum": 1,
        "maximum": 4294967295
      },
      "LoRaWANGatewayVersion": {
        "type": "object",
        "properties": {
          "PackageVersion": {
            "allOf": [
              {
                "$ref": "#/$defs/PackageVersion"
              },
              {
                "description": "The version of the wireless gateway firmware."
              }
            ]
          },
          "Model": {
            "allOf": [
              {
                "$ref": "#/$defs/Model"
              },
              {
                "description": "The model number of the wireless gateway."
              }
            ]
          },
          "Station": {
            "allOf": [
              {
                "$ref": "#/$defs/Station"
              },
              {
                "description": "The basic station version of the wireless gateway."
              }
            ]
          }
        },
        "description": "LoRaWANGatewayVersion object."
      },
      "PackageVersion": {
        "type": "string",
        "minLength": 1,
        "maxLength": 32
      },
      "Model": {
        "type": "string",
        "minLength": 1,
        "maxLength": 4096
      },
      "Station": {
        "type": "string",
        "minLength": 1,
        "maxLength": 4096
      },
      "Tag": {
        "type": "object",
        "required": [
          "Key",
          "Value"
        ],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "The tag's key value."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": "The tag's value."
              }
            ]
          }
        },
        "description": "A simple label consisting of a customer-defined key-value pair"
      },
      "TagKey": {
        "type": "string",
        "minLength": 1,
        "maxLength": 128
      },
      "TagValue": {
        "type": "string",
        "minLength": 0,
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://api.iotwireless.us-east-1.amazonaws.com/wireless-gateway-task-definitions"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Id**",
            "**Arn**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
