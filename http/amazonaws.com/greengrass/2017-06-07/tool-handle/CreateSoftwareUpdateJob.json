{
  "name": "CreateSoftwareUpdateJob",
  "description": "Creates a software update for a core or group of cores (specified as an IoT thing group.) Use this to update the OTA Agent as well as the Greengrass core software. It makes use of the IoT Jobs feature which provides additional commands to manage a Greengrass core software update job.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amzn-Client-Token": {
        "type": "string",
        "description": "A client token used to correlate requests and responses."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "S3UrlSignerRole",
          "SoftwareToUpdate",
          "UpdateTargets",
          "UpdateTargetsArchitecture",
          "UpdateTargetsOperatingSystem"
        ],
        "properties": {
          "S3UrlSignerRole": {
            "description": "The IAM Role that Greengrass will use to create pre-signed URLs pointing towards the update artifact.",
            "type": "string"
          },
          "SoftwareToUpdate": {
            "description": "The piece of software on the Greengrass core that will be updated.",
            "type": "string",
            "enum": [
              "core",
              "ota_agent"
            ]
          },
          "UpdateAgentLogLevel": {
            "description": "The minimum level of log statements that should be logged by the OTA Agent during an update.",
            "type": "string",
            "enum": [
              "NONE",
              "TRACE",
              "DEBUG",
              "VERBOSE",
              "INFO",
              "WARN",
              "ERROR",
              "FATAL"
            ]
          },
          "UpdateTargets": {
            "description": "The ARNs of the targets (IoT things or IoT thing groups) that this update will be applied to.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/__string"
            }
          },
          "UpdateTargetsArchitecture": {
            "description": "The architecture of the cores which are the targets of an update.",
            "type": "string",
            "enum": [
              "armv6l",
              "armv7l",
              "x86_64",
              "aarch64"
            ]
          },
          "UpdateTargetsOperatingSystem": {
            "description": "The operating system of the cores which are the targets of an update.",
            "type": "string",
            "enum": [
              "ubuntu",
              "raspbian",
              "amazon_linux",
              "openwrt"
            ]
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "__string": {
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://greengrass.us-east-1.amazonaws.com/greengrass/updates"
    },
    "headers": {
      "X-Amzn-Client-Token": {
        "$": "X-Amzn-Client-Token"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**IotJobArn**",
            "**IotJobId**",
            "**PlatformSoftwareVersion**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
