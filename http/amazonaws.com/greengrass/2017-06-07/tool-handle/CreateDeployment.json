{
  "name": "CreateDeployment",
  "description": "Creates a deployment. ''CreateDeployment'' requests are idempotent with respect to the ''X-Amzn-Client-Token'' token and the request parameters.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amzn-Client-Token": {
        "type": "string",
        "description": "A client token used to correlate requests and responses."
      },
      "GroupId": {
        "type": "string",
        "description": "The ID of the Greengrass group."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "DeploymentType"
        ],
        "properties": {
          "DeploymentId": {
            "description": "The ID of the deployment if you wish to redeploy a previous deployment.",
            "type": "string"
          },
          "DeploymentType": {
            "description": "The type of deployment. When used for ''CreateDeployment'', only ''NewDeployment'' and ''Redeployment'' are valid.",
            "type": "string",
            "enum": [
              "NewDeployment",
              "Redeployment",
              "ResetDeployment",
              "ForceResetDeployment"
            ]
          },
          "GroupVersionId": {
            "description": "The ID of the group version to be deployed.",
            "type": "string"
          }
        }
      }
    },
    "required": [
      "GroupId",
      "body"
    ]
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://greengrass.us-east-1.amazonaws.com/greengrass/groups/{GroupId}/deployments"
    },
    "headers": {
      "X-Amzn-Client-Token": {
        "$": "X-Amzn-Client-Token"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**DeploymentArn**",
            "**DeploymentId**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
