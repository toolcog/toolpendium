{
  "name": "BatchGetImage",
  "description": "<p>Gets detailed information for an image. Images are specified with either an <code>imageTag</code> or <code>imageDigest</code>.</p> <p>When an image is pulled, the BatchGetImage API is called once to retrieve the image manifest.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AmazonEC2ContainerRegistry_V20150921.BatchGetImage"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/BatchGetImageRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "BatchGetImageRequest": {
        "type": "object",
        "required": [
          "repositoryName",
          "imageIds"
        ],
        "title": "BatchGetImageRequest",
        "properties": {
          "registryId": {
            "allOf": [
              {
                "$ref": "#/$defs/RegistryId"
              },
              {
                "description": "The Amazon Web Services account ID associated with the registry that contains the images to describe. If you do not specify a registry, the default registry is assumed."
              }
            ]
          },
          "repositoryName": {
            "allOf": [
              {
                "$ref": "#/$defs/RepositoryName"
              },
              {
                "description": "The repository that contains the images to describe."
              }
            ]
          },
          "imageIds": {
            "allOf": [
              {
                "$ref": "#/$defs/ImageIdentifierList"
              },
              {
                "description": "A list of image ID references that correspond to images to describe. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>."
              }
            ]
          },
          "acceptedMediaTypes": {
            "allOf": [
              {
                "$ref": "#/$defs/MediaTypeList"
              },
              {
                "description": "<p>The accepted media types for the request.</p> <p>Valid values: <code>application/vnd.docker.distribution.manifest.v1+json</code> | <code>application/vnd.docker.distribution.manifest.v2+json</code> | <code>application/vnd.oci.image.manifest.v1+json</code> </p>"
              }
            ]
          }
        }
      },
      "RegistryId": {
        "type": "string",
        "pattern": "[0-9]{12}"
      },
      "RepositoryName": {
        "type": "string",
        "pattern": "(?:[a-z0-9]+(?:[._-][a-z0-9]+)*/)*[a-z0-9]+(?:[._-][a-z0-9]+)*",
        "minLength": 2,
        "maxLength": 256
      },
      "ImageIdentifierList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ImageIdentifier"
        },
        "minItems": 1,
        "maxItems": 100
      },
      "ImageIdentifier": {
        "type": "object",
        "properties": {
          "imageDigest": {
            "allOf": [
              {
                "$ref": "#/$defs/ImageDigest"
              },
              {
                "description": "The <code>sha256</code> digest of the image manifest."
              }
            ]
          },
          "imageTag": {
            "allOf": [
              {
                "$ref": "#/$defs/ImageTag"
              },
              {
                "description": "The tag used for the image."
              }
            ]
          }
        },
        "description": "An object with identifying information for an image in an Amazon ECR repository."
      },
      "ImageDigest": {
        "type": "string"
      },
      "ImageTag": {
        "type": "string",
        "minLength": 1,
        "maxLength": 300
      },
      "MediaTypeList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/MediaType"
        },
        "minItems": 1,
        "maxItems": 100
      },
      "MediaType": {
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://api.ecr.us-east-1.amazonaws.com/#X-Amz-Target=AmazonEC2ContainerRegistry_V20150921.BatchGetImage"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**images**",
            "**failures**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
