{
  "name": "PutRegistryScanningConfiguration",
  "description": "Creates or updates the scanning configuration for your private registry.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "AmazonEC2ContainerRegistry_V20150921.PutRegistryScanningConfiguration"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/PutRegistryScanningConfigurationRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "PutRegistryScanningConfigurationRequest": {
        "type": "object",
        "title": "PutRegistryScanningConfigurationRequest",
        "properties": {
          "scanType": {
            "allOf": [
              {
                "$ref": "#/$defs/ScanType"
              },
              {
                "description": "<p>The scanning type to set for the registry.</p> <p>When a registry scanning configuration is not defined, by default the <code>BASIC</code> scan type is used. When basic scanning is used, you may specify filters to determine which individual repositories, or all repositories, are scanned when new images are pushed to those repositories. Alternatively, you can do manual scans of images with basic scanning.</p> <p>When the <code>ENHANCED</code> scan type is set, Amazon Inspector provides automated vulnerability scanning. You may choose between continuous scanning or scan on push and you may specify filters to determine which individual repositories, or all repositories, are scanned.</p>"
              }
            ]
          },
          "rules": {
            "allOf": [
              {
                "$ref": "#/$defs/RegistryScanningRuleList"
              },
              {
                "description": "The scanning rules to use for the registry. A scanning rule is used to determine which repository filters are used and at what frequency scanning will occur."
              }
            ]
          }
        }
      },
      "ScanType": {
        "type": "string",
        "enum": [
          "BASIC",
          "ENHANCED"
        ]
      },
      "RegistryScanningRuleList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/RegistryScanningRule"
        },
        "minItems": 0,
        "maxItems": 2
      },
      "RegistryScanningRule": {
        "type": "object",
        "required": [
          "scanFrequency",
          "repositoryFilters"
        ],
        "properties": {
          "scanFrequency": {
            "allOf": [
              {
                "$ref": "#/$defs/ScanFrequency"
              },
              {
                "description": "The frequency that scans are performed at for a private registry. When the <code>ENHANCED</code> scan type is specified, the supported scan frequencies are <code>CONTINUOUS_SCAN</code> and <code>SCAN_ON_PUSH</code>. When the <code>BASIC</code> scan type is specified, the <code>SCAN_ON_PUSH</code> and <code>MANUAL</code> scan frequencies are supported."
              }
            ]
          },
          "repositoryFilters": {
            "allOf": [
              {
                "$ref": "#/$defs/ScanningRepositoryFilterList"
              },
              {
                "description": "The repository filters associated with the scanning configuration for a private registry."
              }
            ]
          }
        },
        "description": "The details of a scanning rule for a private registry."
      },
      "ScanFrequency": {
        "type": "string",
        "enum": [
          "SCAN_ON_PUSH",
          "CONTINUOUS_SCAN",
          "MANUAL"
        ]
      },
      "ScanningRepositoryFilterList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/ScanningRepositoryFilter"
        },
        "minItems": 0,
        "maxItems": 100
      },
      "ScanningRepositoryFilter": {
        "type": "object",
        "required": [
          "filter",
          "filterType"
        ],
        "properties": {
          "filter": {
            "allOf": [
              {
                "$ref": "#/$defs/ScanningRepositoryFilterValue"
              },
              {
                "description": "The filter to use when scanning."
              }
            ]
          },
          "filterType": {
            "allOf": [
              {
                "$ref": "#/$defs/ScanningRepositoryFilterType"
              },
              {
                "description": "The type associated with the filter."
              }
            ]
          }
        },
        "description": "The details of a scanning repository filter. For more information on how to use filters, see <a href=\"https://docs.aws.amazon.com/AmazonECR/latest/userguide/image-scanning.html#image-scanning-filters\">Using filters</a> in the <i>Amazon Elastic Container Registry User Guide</i>."
      },
      "ScanningRepositoryFilterValue": {
        "type": "string",
        "pattern": "^[a-z0-9*](?:[._\\-/a-z0-9*]?[a-z0-9*]+)*$",
        "minLength": 1,
        "maxLength": 255
      },
      "ScanningRepositoryFilterType": {
        "type": "string",
        "enum": [
          "WILDCARD"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://api.ecr.us-east-1.amazonaws.com/#X-Amz-Target=AmazonEC2ContainerRegistry_V20150921.PutRegistryScanningConfiguration"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**registryScanningConfiguration**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
