{
  "name": "StartNotebookExecution",
  "description": "Starts a notebook execution.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "ElasticMapReduce.StartNotebookExecution"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/StartNotebookExecutionInput"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "StartNotebookExecutionInput": {
        "type": "object",
        "required": [
          "ExecutionEngine",
          "ServiceRole"
        ],
        "title": "StartNotebookExecutionInput",
        "properties": {
          "EditorId": {
            "allOf": [
              {
                "$ref": "#/$defs/XmlStringMaxLen256"
              },
              {
                "description": "The unique identifier of the Amazon EMR Notebook to use for notebook execution."
              }
            ]
          },
          "RelativePath": {
            "allOf": [
              {
                "$ref": "#/$defs/XmlString"
              },
              {
                "description": "The path and file name of the notebook file for this execution, relative to the path specified for the Amazon EMR Notebook. For example, if you specify a path of <code>s3://MyBucket/MyNotebooks</code> when you create an Amazon EMR Notebook for a notebook with an ID of <code>e-ABCDEFGHIJK1234567890ABCD</code> (the <code>EditorID</code> of this request), and you specify a <code>RelativePath</code> of <code>my_notebook_executions/notebook_execution.ipynb</code>, the location of the file for the notebook execution is <code>s3://MyBucket/MyNotebooks/e-ABCDEFGHIJK1234567890ABCD/my_notebook_executions/notebook_execution.ipynb</code>."
              }
            ]
          },
          "NotebookExecutionName": {
            "allOf": [
              {
                "$ref": "#/$defs/XmlStringMaxLen256"
              },
              {
                "description": "An optional name for the notebook execution."
              }
            ]
          },
          "NotebookParams": {
            "allOf": [
              {
                "$ref": "#/$defs/XmlString"
              },
              {
                "description": "Input parameters in JSON format passed to the Amazon EMR Notebook at runtime for execution."
              }
            ]
          },
          "ExecutionEngine": {
            "allOf": [
              {
                "$ref": "#/$defs/ExecutionEngineConfig"
              },
              {
                "description": "Specifies the execution engine (cluster) that runs the notebook execution."
              }
            ]
          },
          "ServiceRole": {
            "allOf": [
              {
                "$ref": "#/$defs/XmlString"
              },
              {
                "description": "The name or ARN of the IAM role that is used as the service role for Amazon EMR (the Amazon EMR role) for the notebook execution."
              }
            ]
          },
          "NotebookInstanceSecurityGroupId": {
            "allOf": [
              {
                "$ref": "#/$defs/XmlStringMaxLen256"
              },
              {
                "description": "The unique identifier of the Amazon EC2 security group to associate with the Amazon EMR Notebook for this notebook execution."
              }
            ]
          },
          "Tags": {
            "allOf": [
              {
                "$ref": "#/$defs/TagList"
              },
              {
                "description": "A list of tags associated with a notebook execution. Tags are user-defined key-value pairs that consist of a required key string with a maximum of 128 characters and an optional value string with a maximum of 256 characters."
              }
            ]
          },
          "NotebookS3Location": {
            "allOf": [
              {
                "$ref": "#/$defs/NotebookS3LocationFromInput"
              },
              {
                "description": "The Amazon S3 location for the notebook execution input."
              }
            ]
          },
          "OutputNotebookS3Location": {
            "allOf": [
              {
                "$ref": "#/$defs/OutputNotebookS3LocationFromInput"
              },
              {
                "description": "The Amazon S3 location for the notebook execution output."
              }
            ]
          },
          "OutputNotebookFormat": {
            "allOf": [
              {
                "$ref": "#/$defs/OutputNotebookFormat"
              },
              {
                "description": "The output format for the notebook execution."
              }
            ]
          },
          "EnvironmentVariables": {
            "allOf": [
              {
                "$ref": "#/$defs/EnvironmentVariablesMap"
              },
              {
                "description": "The environment variables associated with the notebook execution."
              }
            ]
          }
        }
      },
      "XmlStringMaxLen256": {
        "type": "string",
        "minLength": 0,
        "maxLength": 256,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
      },
      "XmlString": {
        "type": "string",
        "minLength": 0,
        "maxLength": 10280,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
      },
      "ExecutionEngineConfig": {
        "type": "object",
        "required": [
          "Id"
        ],
        "properties": {
          "Id": {
            "allOf": [
              {
                "$ref": "#/$defs/XmlStringMaxLen256"
              },
              {
                "description": "The unique identifier of the execution engine. For an Amazon EMR cluster, this is the cluster ID."
              }
            ]
          },
          "Type": {
            "allOf": [
              {
                "$ref": "#/$defs/ExecutionEngineType"
              },
              {
                "description": "The type of execution engine. A value of <code>EMR</code> specifies an Amazon EMR cluster."
              }
            ]
          },
          "MasterInstanceSecurityGroupId": {
            "allOf": [
              {
                "$ref": "#/$defs/XmlStringMaxLen256"
              },
              {
                "description": "An optional unique ID of an Amazon EC2 security group to associate with the master instance of the Amazon EMR cluster for this notebook execution. For more information see <a href=\"https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-managed-notebooks-security-groups.html\">Specifying Amazon EC2 Security Groups for Amazon EMR Notebooks</a> in the <i>EMR Management Guide</i>."
              }
            ]
          },
          "ExecutionRoleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/IAMRoleArn"
              },
              {
                "description": "The execution role ARN required for the notebook execution."
              }
            ]
          }
        },
        "description": "Specifies the execution engine (cluster) to run the notebook and perform the notebook execution, for example, an Amazon EMR cluster."
      },
      "ExecutionEngineType": {
        "type": "string",
        "enum": [
          "EMR"
        ]
      },
      "IAMRoleArn": {
        "type": "string",
        "pattern": "^arn:(aws[a-zA-Z0-9-]*):iam::(\\d{12})?:(role((\\u002F)|(\\u002F[\\u0021-\\u007F]+\\u002F))[\\w+=,.@-]+)$",
        "minLength": 20,
        "maxLength": 2048
      },
      "TagList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Tag"
        }
      },
      "Tag": {
        "type": "object",
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "A user-defined key, which is the minimum required information for a valid tag. For more information, see <a href=\"https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-plan-tags.html\">Tag</a>. "
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "A user-defined value, which is optional in a tag. For more information, see <a href=\"https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-plan-tags.html\">Tag Clusters</a>. "
              }
            ]
          }
        },
        "description": "A key-value pair containing user-defined metadata that you can associate with an Amazon EMR resource. Tags make it easier to associate clusters in various ways, such as grouping clusters to track your Amazon EMR resource allocation costs. For more information, see <a href=\"https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-plan-tags.html\">Tag Clusters</a>. "
      },
      "String": {
        "type": "string"
      },
      "NotebookS3LocationFromInput": {
        "type": "object",
        "properties": {
          "Bucket": {
            "allOf": [
              {
                "$ref": "#/$defs/XmlStringMaxLen256"
              },
              {
                "description": "The Amazon S3 bucket that stores the notebook execution input."
              }
            ]
          },
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/UriString"
              },
              {
                "description": "The key to the Amazon S3 location that stores the notebook execution input."
              }
            ]
          }
        },
        "description": "The Amazon S3 location that stores the notebook execution input."
      },
      "UriString": {
        "type": "string",
        "pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDBFF-\\uDC00\\uDFFF\\r\\n\\t]*",
        "minLength": 1,
        "maxLength": 10280
      },
      "OutputNotebookS3LocationFromInput": {
        "type": "object",
        "properties": {
          "Bucket": {
            "allOf": [
              {
                "$ref": "#/$defs/XmlStringMaxLen256"
              },
              {
                "description": "The Amazon S3 bucket that stores the notebook execution output."
              }
            ]
          },
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/UriString"
              },
              {
                "description": "The key to the Amazon S3 location that stores the notebook execution output."
              }
            ]
          }
        },
        "description": "The Amazon S3 location that stores the notebook execution output."
      },
      "OutputNotebookFormat": {
        "type": "string",
        "enum": [
          "HTML"
        ]
      },
      "EnvironmentVariablesMap": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/XmlString"
        }
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://elasticmapreduce.us-east-1.amazonaws.com/#X-Amz-Target=ElasticMapReduce.StartNotebookExecution"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**NotebookExecutionId**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
