{
  "name": "ListStudioSessionMappings",
  "description": "Returns a list of all user or group session mappings for the Amazon EMR Studio specified by <code>StudioId</code>.",
  "parameters": {
    "type": "object",
    "properties": {
      "Marker": {
        "type": "string",
        "description": "Pagination token"
      },
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "ElasticMapReduce.ListStudioSessionMappings"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/ListStudioSessionMappingsInput"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "ListStudioSessionMappingsInput": {
        "type": "object",
        "title": "ListStudioSessionMappingsInput",
        "properties": {
          "StudioId": {
            "allOf": [
              {
                "$ref": "#/$defs/XmlStringMaxLen256"
              },
              {
                "description": "The ID of the Amazon EMR Studio."
              }
            ]
          },
          "IdentityType": {
            "allOf": [
              {
                "$ref": "#/$defs/IdentityType"
              },
              {
                "description": "Specifies whether to return session mappings for users or groups. If not specified, the results include session mapping details for both users and groups."
              }
            ]
          },
          "Marker": {
            "allOf": [
              {
                "$ref": "#/$defs/Marker"
              },
              {
                "description": "The pagination token that indicates the set of results to retrieve."
              }
            ]
          }
        }
      },
      "XmlStringMaxLen256": {
        "type": "string",
        "minLength": 0,
        "maxLength": 256,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
      },
      "IdentityType": {
        "type": "string",
        "enum": [
          "USER",
          "GROUP"
        ]
      },
      "Marker": {
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://elasticmapreduce.us-east-1.amazonaws.com/#X-Amz-Target=ElasticMapReduce.ListStudioSessionMappings{?Marker}"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**SessionMappings**",
            "**Marker**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
