{
  "name": "AddJobFlowSteps",
  "description": "<p>AddJobFlowSteps adds new steps to a running cluster. A maximum of 256 steps are allowed in each job flow.</p> <p>If your cluster is long-running (such as a Hive data warehouse) or complex, you may require more than 256 steps to process your data. You can bypass the 256-step limitation in various ways, including using SSH to connect to the master node and submitting queries directly to the software running on the master node, such as Hive and Hadoop.</p> <p>A step specifies the location of a JAR file stored either on the master node of the cluster or in Amazon S3. Each step is performed by the main function of the main class of the JAR file. The main class can be specified either in the manifest of the JAR or by using the MainFunction parameter of the step.</p> <p>Amazon EMR executes each step in the order listed. For a step to be considered complete, the main function must exit with a zero exit code and all Hadoop jobs started while the step was running must have completed and run successfully.</p> <p>You can only add steps to a cluster that is in one of the following states: STARTING, BOOTSTRAPPING, RUNNING, or WAITING.</p> <note> <p>The string values passed into <code>HadoopJarStep</code> object cannot exceed a total of 10240 characters.</p> </note>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "ElasticMapReduce.AddJobFlowSteps"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/AddJobFlowStepsInput"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "AddJobFlowStepsInput": {
        "type": "object",
        "required": [
          "JobFlowId",
          "Steps"
        ],
        "title": "AddJobFlowStepsInput",
        "properties": {
          "JobFlowId": {
            "allOf": [
              {
                "$ref": "#/$defs/XmlStringMaxLen256"
              },
              {
                "description": "A string that uniquely identifies the job flow. This identifier is returned by <a>RunJobFlow</a> and can also be obtained from <a>ListClusters</a>. "
              }
            ]
          },
          "Steps": {
            "allOf": [
              {
                "$ref": "#/$defs/StepConfigList"
              },
              {
                "description": " A list of <a>StepConfig</a> to be executed by the job flow. "
              }
            ]
          },
          "ExecutionRoleArn": {
            "allOf": [
              {
                "$ref": "#/$defs/ArnType"
              },
              {
                "description": "<p>The Amazon Resource Name (ARN) of the runtime role for a step on the cluster. The runtime role can be a cross-account IAM role. The runtime role ARN is a combination of account ID, role name, and role type using the following format: <code>arn:partition:service:region:account:resource</code>. </p> <p>For example, <code>arn:aws:IAM::1234567890:role/ReadOnly</code> is a correctly formatted runtime role ARN.</p>"
              }
            ]
          }
        },
        "description": " The input argument to the <a>AddJobFlowSteps</a> operation. "
      },
      "XmlStringMaxLen256": {
        "type": "string",
        "minLength": 0,
        "maxLength": 256,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
      },
      "StepConfigList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/StepConfig"
        }
      },
      "StepConfig": {
        "type": "object",
        "required": [
          "Name",
          "HadoopJarStep"
        ],
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/XmlStringMaxLen256"
              },
              {
                "description": "The name of the step."
              }
            ]
          },
          "ActionOnFailure": {
            "allOf": [
              {
                "$ref": "#/$defs/ActionOnFailure"
              },
              {
                "description": "<p>The action to take when the step fails. Use one of the following values:</p> <ul> <li> <p> <code>TERMINATE_CLUSTER</code> - Shuts down the cluster.</p> </li> <li> <p> <code>CANCEL_AND_WAIT</code> - Cancels any pending steps and returns the cluster to the <code>WAITING</code> state.</p> </li> <li> <p> <code>CONTINUE</code> - Continues to the next step in the queue.</p> </li> <li> <p> <code>TERMINATE_JOB_FLOW</code> - Shuts down the cluster. <code>TERMINATE_JOB_FLOW</code> is provided for backward compatibility. We recommend using <code>TERMINATE_CLUSTER</code> instead.</p> </li> </ul> <p>If a cluster's <code>StepConcurrencyLevel</code> is greater than <code>1</code>, do not use <code>AddJobFlowSteps</code> to submit a step with this parameter set to <code>CANCEL_AND_WAIT</code> or <code>TERMINATE_CLUSTER</code>. The step is not submitted and the action fails with a message that the <code>ActionOnFailure</code> setting is not valid.</p> <p>If you change a cluster's <code>StepConcurrencyLevel</code> to be greater than 1 while a step is running, the <code>ActionOnFailure</code> parameter may not behave as you expect. In this case, for a step that fails with this parameter set to <code>CANCEL_AND_WAIT</code>, pending steps and the running step are not canceled; for a step that fails with this parameter set to <code>TERMINATE_CLUSTER</code>, the cluster does not terminate.</p>"
              }
            ]
          },
          "HadoopJarStep": {
            "allOf": [
              {
                "$ref": "#/$defs/HadoopJarStepConfig"
              },
              {
                "description": "The JAR file used for the step."
              }
            ]
          }
        },
        "description": "Specification for a cluster (job flow) step."
      },
      "ActionOnFailure": {
        "type": "string",
        "enum": [
          "TERMINATE_JOB_FLOW",
          "TERMINATE_CLUSTER",
          "CANCEL_AND_WAIT",
          "CONTINUE"
        ]
      },
      "HadoopJarStepConfig": {
        "type": "object",
        "required": [
          "Jar"
        ],
        "properties": {
          "Properties": {
            "allOf": [
              {
                "$ref": "#/$defs/KeyValueList"
              },
              {
                "description": "A list of Java properties that are set when the step runs. You can use these properties to pass key-value pairs to your main function."
              }
            ]
          },
          "Jar": {
            "allOf": [
              {
                "$ref": "#/$defs/XmlString"
              },
              {
                "description": "A path to a JAR file run during the step."
              }
            ]
          },
          "MainClass": {
            "allOf": [
              {
                "$ref": "#/$defs/XmlString"
              },
              {
                "description": "The name of the main class in the specified Java file. If not specified, the JAR file should specify a Main-Class in its manifest file."
              }
            ]
          },
          "Args": {
            "allOf": [
              {
                "$ref": "#/$defs/XmlStringList"
              },
              {
                "description": "A list of command line arguments passed to the JAR file's main function when executed."
              }
            ]
          }
        },
        "description": "A job flow step consisting of a JAR file whose main function will be executed. The main function submits a job for Hadoop to execute and waits for the job to finish or fail."
      },
      "KeyValueList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/KeyValue"
        }
      },
      "KeyValue": {
        "type": "object",
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/XmlString"
              },
              {
                "description": "The unique identifier of a key-value pair."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/XmlString"
              },
              {
                "description": "The value part of the identified key."
              }
            ]
          }
        },
        "description": "A key-value pair."
      },
      "XmlString": {
        "type": "string",
        "minLength": 0,
        "maxLength": 10280,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
      },
      "XmlStringList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/XmlString"
        }
      },
      "ArnType": {
        "type": "string",
        "minLength": 20,
        "maxLength": 2048
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://elasticmapreduce.us-east-1.amazonaws.com/#X-Amz-Target=ElasticMapReduce.AddJobFlowSteps"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        " The output for the <a>AddJobFlowSteps</a> operation. ",
        "**Key properties:**",
        {
          "$ul": [
            "**StepIds**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
