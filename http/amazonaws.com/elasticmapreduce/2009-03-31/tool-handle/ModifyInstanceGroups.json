{
  "name": "ModifyInstanceGroups",
  "description": "ModifyInstanceGroups modifies the number of nodes and configuration settings of an instance group. The input parameters include the new target instance count for the group and the instance group ID. The call will either succeed or fail atomically.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "ElasticMapReduce.ModifyInstanceGroups"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/ModifyInstanceGroupsInput"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "ModifyInstanceGroupsInput": {
        "type": "object",
        "title": "ModifyInstanceGroupsInput",
        "properties": {
          "ClusterId": {
            "allOf": [
              {
                "$ref": "#/$defs/ClusterId"
              },
              {
                "description": "The ID of the cluster to which the instance group belongs."
              }
            ]
          },
          "InstanceGroups": {
            "allOf": [
              {
                "$ref": "#/$defs/InstanceGroupModifyConfigList"
              },
              {
                "description": "Instance groups to change."
              }
            ]
          }
        },
        "description": "Change the size of some instance groups."
      },
      "ClusterId": {
        "type": "string"
      },
      "InstanceGroupModifyConfigList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/InstanceGroupModifyConfig"
        }
      },
      "InstanceGroupModifyConfig": {
        "type": "object",
        "required": [
          "InstanceGroupId"
        ],
        "properties": {
          "InstanceGroupId": {
            "allOf": [
              {
                "$ref": "#/$defs/XmlStringMaxLen256"
              },
              {
                "description": "Unique ID of the instance group to modify."
              }
            ]
          },
          "InstanceCount": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "Target size for the instance group."
              }
            ]
          },
          "EC2InstanceIdsToTerminate": {
            "allOf": [
              {
                "$ref": "#/$defs/EC2InstanceIdsToTerminateList"
              },
              {
                "description": "The Amazon EC2 InstanceIds to terminate. After you terminate the instances, the instance group will not return to its original requested size."
              }
            ]
          },
          "ShrinkPolicy": {
            "allOf": [
              {
                "$ref": "#/$defs/ShrinkPolicy"
              },
              {
                "description": "Policy for customizing shrink operations."
              }
            ]
          },
          "ReconfigurationType": {
            "allOf": [
              {
                "$ref": "#/$defs/ReconfigurationType"
              },
              {
                "description": "Type of reconfiguration requested. Valid values are MERGE and OVERWRITE."
              }
            ]
          },
          "Configurations": {
            "allOf": [
              {
                "$ref": "#/$defs/ConfigurationList"
              },
              {
                "description": "A list of new or modified configurations to apply for an instance group."
              }
            ]
          }
        },
        "description": "Modify the size or configurations of an instance group."
      },
      "XmlStringMaxLen256": {
        "type": "string",
        "minLength": 0,
        "maxLength": 256,
        "x-pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
      },
      "Integer": {
        "type": "integer"
      },
      "EC2InstanceIdsToTerminateList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/InstanceId"
        }
      },
      "InstanceId": {
        "type": "string"
      },
      "ShrinkPolicy": {
        "type": "object",
        "properties": {
          "DecommissionTimeout": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "The desired timeout for decommissioning an instance. Overrides the default YARN decommissioning timeout."
              }
            ]
          },
          "InstanceResizePolicy": {
            "allOf": [
              {
                "$ref": "#/$defs/InstanceResizePolicy"
              },
              {
                "description": "Custom policy for requesting termination protection or termination of specific instances when shrinking an instance group."
              }
            ]
          }
        },
        "description": "Policy for customizing shrink operations. Allows configuration of decommissioning timeout and targeted instance shrinking."
      },
      "InstanceResizePolicy": {
        "type": "object",
        "properties": {
          "InstancesToTerminate": {
            "allOf": [
              {
                "$ref": "#/$defs/EC2InstanceIdsList"
              },
              {
                "description": "Specific list of instances to be terminated when shrinking an instance group."
              }
            ]
          },
          "InstancesToProtect": {
            "allOf": [
              {
                "$ref": "#/$defs/EC2InstanceIdsList"
              },
              {
                "description": "Specific list of instances to be protected when shrinking an instance group."
              }
            ]
          },
          "InstanceTerminationTimeout": {
            "allOf": [
              {
                "$ref": "#/$defs/Integer"
              },
              {
                "description": "Decommissioning timeout override for the specific list of instances to be terminated."
              }
            ]
          }
        },
        "description": "Custom policy for requesting termination protection or termination of specific instances when shrinking an instance group."
      },
      "EC2InstanceIdsList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/InstanceId"
        }
      },
      "ReconfigurationType": {
        "type": "string",
        "enum": [
          "OVERWRITE",
          "MERGE"
        ]
      },
      "ConfigurationList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Configuration"
        }
      },
      "Configuration": {
        "type": "object",
        "properties": {
          "Classification": {
            "allOf": [
              {
                "$ref": "#/$defs/String"
              },
              {
                "description": "The classification within a configuration."
              }
            ]
          },
          "Configurations": {
            "allOf": [
              {
                "$ref": "#/$defs/ConfigurationList"
              },
              {
                "description": "A list of additional configurations to apply within a configuration object."
              }
            ]
          },
          "Properties": {
            "allOf": [
              {
                "$ref": "#/$defs/StringMap"
              },
              {
                "description": "A set of properties specified within a configuration classification."
              }
            ]
          }
        },
        "description": "<note> <p>Amazon EMR releases 4.x or later.</p> </note> <p>An optional configuration specification to be used when provisioning cluster instances, which can include configurations for applications and software bundled with Amazon EMR. A configuration consists of a classification, properties, and optional nested configurations. A classification refers to an application-specific configuration file. Properties are the settings you want to change in that file. For more information, see <a href=\"https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-configure-apps.html\">Configuring Applications</a>.</p>"
      },
      "String": {
        "type": "string"
      },
      "StringMap": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/String"
        }
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://elasticmapreduce.us-east-1.amazonaws.com/#X-Amz-Target=ElasticMapReduce.ModifyInstanceGroups"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
