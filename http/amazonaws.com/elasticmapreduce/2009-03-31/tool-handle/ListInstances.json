{
  "name": "ListInstances",
  "description": "Provides information for all active Amazon EC2 instances and Amazon EC2 instances terminated in the last 30 days, up to a maximum of 2,000. Amazon EC2 instances in any of the following states are considered active: AWAITING_FULFILLMENT, PROVISIONING, BOOTSTRAPPING, RUNNING.",
  "parameters": {
    "type": "object",
    "properties": {
      "Marker": {
        "type": "string",
        "description": "Pagination token"
      },
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "ElasticMapReduce.ListInstances"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/ListInstancesInput"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "ListInstancesInput": {
        "type": "object",
        "required": [
          "ClusterId"
        ],
        "title": "ListInstancesInput",
        "properties": {
          "ClusterId": {
            "allOf": [
              {
                "$ref": "#/$defs/ClusterId"
              },
              {
                "description": "The identifier of the cluster for which to list the instances."
              }
            ]
          },
          "InstanceGroupId": {
            "allOf": [
              {
                "$ref": "#/$defs/InstanceGroupId"
              },
              {
                "description": "The identifier of the instance group for which to list the instances."
              }
            ]
          },
          "InstanceGroupTypes": {
            "allOf": [
              {
                "$ref": "#/$defs/InstanceGroupTypeList"
              },
              {
                "description": "The type of instance group for which to list the instances."
              }
            ]
          },
          "InstanceFleetId": {
            "allOf": [
              {
                "$ref": "#/$defs/InstanceFleetId"
              },
              {
                "description": "The unique identifier of the instance fleet."
              }
            ]
          },
          "InstanceFleetType": {
            "allOf": [
              {
                "$ref": "#/$defs/InstanceFleetType"
              },
              {
                "description": "The node type of the instance fleet. For example MASTER, CORE, or TASK."
              }
            ]
          },
          "InstanceStates": {
            "allOf": [
              {
                "$ref": "#/$defs/InstanceStateList"
              },
              {
                "description": "A list of instance states that will filter the instances returned with this request."
              }
            ]
          },
          "Marker": {
            "allOf": [
              {
                "$ref": "#/$defs/Marker"
              },
              {
                "description": "The pagination token that indicates the next set of results to retrieve."
              }
            ]
          }
        },
        "description": "This input determines which instances to list."
      },
      "ClusterId": {
        "type": "string"
      },
      "InstanceGroupId": {
        "type": "string"
      },
      "InstanceGroupTypeList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/InstanceGroupType"
        }
      },
      "InstanceGroupType": {
        "type": "string",
        "enum": [
          "MASTER",
          "CORE",
          "TASK"
        ]
      },
      "InstanceFleetId": {
        "type": "string"
      },
      "InstanceFleetType": {
        "type": "string",
        "enum": [
          "MASTER",
          "CORE",
          "TASK"
        ]
      },
      "InstanceStateList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/InstanceState"
        }
      },
      "InstanceState": {
        "type": "string",
        "enum": [
          "AWAITING_FULFILLMENT",
          "PROVISIONING",
          "BOOTSTRAPPING",
          "RUNNING",
          "TERMINATED"
        ]
      },
      "Marker": {
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://elasticmapreduce.us-east-1.amazonaws.com/#X-Amz-Target=ElasticMapReduce.ListInstances{?Marker}"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "This output contains the list of instances.",
        "**Key properties:**",
        {
          "$ul": [
            "**Instances**",
            "**Marker**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
