{
  "name": "CreateAppInstanceUser",
  "description": "Creates a user under an Amazon Chime <code>AppInstance</code>. The request consists of a unique <code>appInstanceUserId</code> and <code>Name</code> for that user.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "AppInstanceArn",
          "AppInstanceUserId",
          "Name",
          "ClientRequestToken"
        ],
        "properties": {
          "AppInstanceArn": {
            "description": "The ARN of the <code>AppInstance</code> request.",
            "type": "string",
            "pattern": "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}",
            "minLength": 5,
            "maxLength": 1600
          },
          "AppInstanceUserId": {
            "description": "The user ID of the <code>AppInstance</code>.",
            "type": "string",
            "pattern": "[A-Za-z0-9]([A-Za-z0-9\\:\\-\\_\\.\\@]{0,62}[A-Za-z0-9])?",
            "minLength": 1,
            "maxLength": 64,
            "format": "password"
          },
          "Name": {
            "description": "The user's name.",
            "type": "string",
            "pattern": ".*\\S.*",
            "minLength": 1,
            "maxLength": 100,
            "format": "password"
          },
          "Metadata": {
            "description": "The request's metadata. Limited to a 1KB string in UTF-8.",
            "type": "string",
            "pattern": ".*",
            "minLength": 0,
            "maxLength": 1024,
            "format": "password"
          },
          "ClientRequestToken": {
            "description": "The unique ID of the request. Use different tokens to request additional <code>AppInstances</code>.",
            "type": "string",
            "pattern": "[-_a-zA-Z0-9]*",
            "minLength": 2,
            "maxLength": 64
          },
          "Tags": {
            "description": "Tags assigned to the <code>AppInstanceUser</code>.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/Tag"
            },
            "minItems": 1,
            "maxItems": 50
          },
          "ExpirationSettings": {
            "description": "Determines the interval after which an <code>AppInstanceUser</code> is automatically deleted.",
            "type": "object",
            "properties": {
              "ExpirationDays": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ExpirationDays"
                  },
                  {
                    "description": "The period in days after which an <code>AppInstanceUser</code> will be automatically deleted."
                  }
                ]
              },
              "ExpirationCriterion": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ExpirationCriterion"
                  },
                  {
                    "description": "Specifies the conditions under which an <code>AppInstanceUser</code> will expire."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "Tag": {
        "type": "object",
        "required": [
          "Key",
          "Value"
        ],
        "properties": {
          "Key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "The key in a tag."
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": "The value in a tag."
              }
            ]
          }
        },
        "description": "A tag object containing a key-value pair."
      },
      "TagKey": {
        "type": "string",
        "minLength": 1,
        "maxLength": 128,
        "format": "password"
      },
      "TagValue": {
        "type": "string",
        "minLength": 1,
        "maxLength": 256,
        "format": "password"
      },
      "ExpirationDays": {
        "type": "integer",
        "minimum": 1,
        "maximum": 5475
      },
      "ExpirationCriterion": {
        "type": "string",
        "enum": [
          "CREATED_TIMESTAMP"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://identity-chime.us-east-1.amazonaws.com/app-instance-users"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**AppInstanceUserArn**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "487": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
