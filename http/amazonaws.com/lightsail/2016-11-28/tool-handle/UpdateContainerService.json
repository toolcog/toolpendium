{
  "name": "UpdateContainerService",
  "description": "Updates the configuration of your Amazon Lightsail container service, such as its power, scale, and public domain names.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "Lightsail_20161128.UpdateContainerService"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/UpdateContainerServiceRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "UpdateContainerServiceRequest": {
        "type": "object",
        "required": [
          "serviceName"
        ],
        "title": "UpdateContainerServiceRequest",
        "properties": {
          "serviceName": {
            "allOf": [
              {
                "$ref": "#/$defs/ContainerServiceName"
              },
              {
                "description": "The name of the container service to update."
              }
            ]
          },
          "power": {
            "allOf": [
              {
                "$ref": "#/$defs/ContainerServicePowerName"
              },
              {
                "description": "<p>The power for the container service.</p> <p>The power specifies the amount of memory, vCPUs, and base monthly cost of each node of the container service. The <code>power</code> and <code>scale</code> of a container service makes up its configured capacity. To determine the monthly price of your container service, multiply the base price of the <code>power</code> with the <code>scale</code> (the number of nodes) of the service.</p> <p>Use the <code>GetContainerServicePowers</code> action to view the specifications of each power option.</p>"
              }
            ]
          },
          "scale": {
            "allOf": [
              {
                "$ref": "#/$defs/ContainerServiceScale"
              },
              {
                "description": "<p>The scale for the container service.</p> <p>The scale specifies the allocated compute nodes of the container service. The <code>power</code> and <code>scale</code> of a container service makes up its configured capacity. To determine the monthly price of your container service, multiply the base price of the <code>power</code> with the <code>scale</code> (the number of nodes) of the service.</p>"
              }
            ]
          },
          "isDisabled": {
            "allOf": [
              {
                "$ref": "#/$defs/boolean"
              },
              {
                "description": "A Boolean value to indicate whether the container service is disabled."
              }
            ]
          },
          "publicDomainNames": {
            "allOf": [
              {
                "$ref": "#/$defs/ContainerServicePublicDomains"
              },
              {
                "description": "<p>The public domain names to use with the container service, such as <code>example.com</code> and <code>www.example.com</code>.</p> <p>You can specify up to four public domain names for a container service. The domain names that you specify are used when you create a deployment with a container configured as the public endpoint of your container service.</p> <p>If you don't specify public domain names, then you can use the default domain of the container service.</p> <important> <p>You must create and validate an SSL/TLS certificate before you can use public domain names with your container service. Use the <code>CreateCertificate</code> action to create a certificate for the public domain names you want to use with your container service.</p> </important> <p>You can specify public domain names using a string to array map as shown in the example later on this page.</p>"
              }
            ]
          },
          "privateRegistryAccess": {
            "allOf": [
              {
                "$ref": "#/$defs/PrivateRegistryAccessRequest"
              },
              {
                "description": "<p>An object to describe the configuration for the container service to access private container image repositories, such as Amazon Elastic Container Registry (Amazon ECR) private repositories.</p> <p>For more information, see <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-container-service-ecr-private-repo-access\">Configuring access to an Amazon ECR private repository for an Amazon Lightsail container service</a> in the <i>Amazon Lightsail Developer Guide</i>.</p>"
              }
            ]
          }
        }
      },
      "ContainerServiceName": {
        "type": "string",
        "pattern": "^[a-z0-9]{1,2}|[a-z0-9][a-z0-9-]+[a-z0-9]$",
        "minLength": 1,
        "maxLength": 63
      },
      "ContainerServicePowerName": {
        "type": "string",
        "enum": [
          "nano",
          "micro",
          "small",
          "medium",
          "large",
          "xlarge"
        ]
      },
      "ContainerServiceScale": {
        "type": "integer",
        "minimum": 1,
        "maximum": 20
      },
      "boolean": {
        "type": "boolean"
      },
      "ContainerServicePublicDomains": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/ContainerServicePublicDomainsList"
        }
      },
      "ContainerServicePublicDomainsList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/string"
        }
      },
      "string": {
        "type": "string"
      },
      "PrivateRegistryAccessRequest": {
        "type": "object",
        "properties": {
          "ecrImagePullerRole": {
            "allOf": [
              {
                "$ref": "#/$defs/ContainerServiceECRImagePullerRoleRequest"
              },
              {
                "description": "An object to describe a request to activate or deactivate the role that you can use to grant an Amazon Lightsail container service access to Amazon Elastic Container Registry (Amazon ECR) private repositories."
              }
            ]
          }
        },
        "description": "<p>Describes a request to configure an Amazon Lightsail container service to access private container image repositories, such as Amazon Elastic Container Registry (Amazon ECR) private repositories.</p> <p>For more information, see <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-container-service-ecr-private-repo-access\">Configuring access to an Amazon ECR private repository for an Amazon Lightsail container service</a> in the <i>Amazon Lightsail Developer Guide</i>.</p>"
      },
      "ContainerServiceECRImagePullerRoleRequest": {
        "type": "object",
        "properties": {
          "isActive": {
            "allOf": [
              {
                "$ref": "#/$defs/boolean"
              },
              {
                "description": "A Boolean value that indicates whether to activate the role."
              }
            ]
          }
        },
        "description": "<p>Describes a request to activate or deactivate the role that you can use to grant an Amazon Lightsail container service access to Amazon Elastic Container Registry (Amazon ECR) private repositories.</p> <p>When activated, Lightsail creates an Identity and Access Management (IAM) role for the specified Lightsail container service. You can use the ARN of the role to create a trust relationship between your Lightsail container service and an Amazon ECR private repository in your Amazon Web Services account. This allows your container service to pull images from Amazon ECR private repositories. For more information, see <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-container-service-ecr-private-repo-access\">Configuring access to an Amazon ECR private repository for an Amazon Lightsail container service</a> in the <i>Amazon Lightsail Developer Guide</i>.</p>"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://lightsail.us-east-1.amazonaws.com/#X-Amz-Target=Lightsail_20161128.UpdateContainerService"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**containerService**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
