{
  "name": "CreateContainerService",
  "description": "<p>Creates an Amazon Lightsail container service.</p> <p>A Lightsail container service is a compute resource to which you can deploy containers. For more information, see <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-container-services\">Container services in Amazon Lightsail</a> in the <i>Lightsail Dev Guide</i>.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "Lightsail_20161128.CreateContainerService"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/CreateContainerServiceRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "CreateContainerServiceRequest": {
        "type": "object",
        "required": [
          "serviceName",
          "power",
          "scale"
        ],
        "title": "CreateContainerServiceRequest",
        "properties": {
          "serviceName": {
            "allOf": [
              {
                "$ref": "#/$defs/ContainerServiceName"
              },
              {
                "description": "<p>The name for the container service.</p> <p>The name that you specify for your container service will make up part of its default domain. The default domain of a container service is typically <code>https://&lt;ServiceName&gt;.&lt;RandomGUID&gt;.&lt;AWSRegion&gt;.cs.amazonlightsail.com</code>. If the name of your container service is <code>container-service-1</code>, and it's located in the US East (Ohio) Amazon Web Services Region (<code>us-east-2</code>), then the domain for your container service will be like the following example: <code>https://container-service-1.ur4EXAMPLE2uq.us-east-2.cs.amazonlightsail.com</code> </p> <p>The following are the requirements for container service names:</p> <ul> <li> <p>Must be unique within each Amazon Web Services Region in your Lightsail account.</p> </li> <li> <p>Must contain 1 to 63 characters.</p> </li> <li> <p>Must contain only alphanumeric characters and hyphens.</p> </li> <li> <p>A hyphen (-) can separate words but cannot be at the start or end of the name.</p> </li> </ul>"
              }
            ]
          },
          "power": {
            "allOf": [
              {
                "$ref": "#/$defs/ContainerServicePowerName"
              },
              {
                "description": "<p>The power specification for the container service.</p> <p>The power specifies the amount of memory, vCPUs, and base monthly cost of each node of the container service. The <code>power</code> and <code>scale</code> of a container service makes up its configured capacity. To determine the monthly price of your container service, multiply the base price of the <code>power</code> with the <code>scale</code> (the number of nodes) of the service.</p> <p>Use the <code>GetContainerServicePowers</code> action to get a list of power options that you can specify using this parameter, and their base monthly cost.</p>"
              }
            ]
          },
          "scale": {
            "allOf": [
              {
                "$ref": "#/$defs/ContainerServiceScale"
              },
              {
                "description": "<p>The scale specification for the container service.</p> <p>The scale specifies the allocated compute nodes of the container service. The <code>power</code> and <code>scale</code> of a container service makes up its configured capacity. To determine the monthly price of your container service, multiply the base price of the <code>power</code> with the <code>scale</code> (the number of nodes) of the service.</p>"
              }
            ]
          },
          "tags": {
            "allOf": [
              {
                "$ref": "#/$defs/TagList"
              },
              {
                "description": "<p>The tag keys and optional values to add to the container service during create.</p> <p>Use the <code>TagResource</code> action to tag a resource after it's created.</p> <p>For more information about tags in Lightsail, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-tags\">Amazon Lightsail Developer Guide</a>.</p>"
              }
            ]
          },
          "publicDomainNames": {
            "allOf": [
              {
                "$ref": "#/$defs/ContainerServicePublicDomains"
              },
              {
                "description": "<p>The public domain names to use with the container service, such as <code>example.com</code> and <code>www.example.com</code>.</p> <p>You can specify up to four public domain names for a container service. The domain names that you specify are used when you create a deployment with a container configured as the public endpoint of your container service.</p> <p>If you don't specify public domain names, then you can use the default domain of the container service.</p> <important> <p>You must create and validate an SSL/TLS certificate before you can use public domain names with your container service. Use the <code>CreateCertificate</code> action to create a certificate for the public domain names you want to use with your container service.</p> </important> <p>You can specify public domain names using a string to array map as shown in the example later on this page.</p>"
              }
            ]
          },
          "deployment": {
            "allOf": [
              {
                "$ref": "#/$defs/ContainerServiceDeploymentRequest"
              },
              {
                "description": "<p>An object that describes a deployment for the container service.</p> <p>A deployment specifies the containers that will be launched on the container service and their settings, such as the ports to open, the environment variables to apply, and the launch command to run. It also specifies the container that will serve as the public endpoint of the deployment and its settings, such as the HTTP or HTTPS port to use, and the health check configuration.</p>"
              }
            ]
          },
          "privateRegistryAccess": {
            "allOf": [
              {
                "$ref": "#/$defs/PrivateRegistryAccessRequest"
              },
              {
                "description": "<p>An object to describe the configuration for the container service to access private container image repositories, such as Amazon Elastic Container Registry (Amazon ECR) private repositories.</p> <p>For more information, see <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-container-service-ecr-private-repo-access\">Configuring access to an Amazon ECR private repository for an Amazon Lightsail container service</a> in the <i>Amazon Lightsail Developer Guide</i>.</p>"
              }
            ]
          }
        }
      },
      "ContainerServiceName": {
        "type": "string",
        "pattern": "^[a-z0-9]{1,2}|[a-z0-9][a-z0-9-]+[a-z0-9]$",
        "minLength": 1,
        "maxLength": 63
      },
      "ContainerServicePowerName": {
        "type": "string",
        "enum": [
          "nano",
          "micro",
          "small",
          "medium",
          "large",
          "xlarge"
        ]
      },
      "ContainerServiceScale": {
        "type": "integer",
        "minimum": 1,
        "maximum": 20
      },
      "TagList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/Tag"
        }
      },
      "Tag": {
        "type": "object",
        "properties": {
          "key": {
            "allOf": [
              {
                "$ref": "#/$defs/TagKey"
              },
              {
                "description": "<p>The key of the tag.</p> <p>Constraints: Tag keys accept a maximum of 128 letters, numbers, spaces in UTF-8, or the following characters: + - = . _ : / @</p>"
              }
            ]
          },
          "value": {
            "allOf": [
              {
                "$ref": "#/$defs/TagValue"
              },
              {
                "description": "<p>The value of the tag.</p> <p>Constraints: Tag values accept a maximum of 256 letters, numbers, spaces in UTF-8, or the following characters: + - = . _ : / @</p>"
              }
            ]
          }
        },
        "description": "<p>Describes a tag key and optional value assigned to an Amazon Lightsail resource.</p> <p>For more information about tags in Lightsail, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-tags\">Amazon Lightsail Developer Guide</a>.</p>"
      },
      "TagKey": {
        "type": "string"
      },
      "TagValue": {
        "type": "string"
      },
      "ContainerServicePublicDomains": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/ContainerServicePublicDomainsList"
        }
      },
      "ContainerServicePublicDomainsList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/string"
        }
      },
      "string": {
        "type": "string"
      },
      "ContainerServiceDeploymentRequest": {
        "type": "object",
        "properties": {
          "containers": {
            "allOf": [
              {
                "$ref": "#/$defs/ContainerMap"
              },
              {
                "description": "An object that describes the configuration for the containers of the deployment."
              }
            ]
          },
          "publicEndpoint": {
            "allOf": [
              {
                "$ref": "#/$defs/EndpointRequest"
              },
              {
                "description": "An object that describes the endpoint of the deployment."
              }
            ]
          }
        },
        "description": "<p>Describes a container deployment configuration of an Amazon Lightsail container service.</p> <p>A deployment specifies the settings, such as the ports and launch command, of containers that are deployed to your container service.</p>"
      },
      "ContainerMap": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/Container"
        }
      },
      "Container": {
        "type": "object",
        "properties": {
          "image": {
            "allOf": [
              {
                "$ref": "#/$defs/string"
              },
              {
                "description": "<p>The name of the image used for the container.</p> <p>Container images sourced from your Lightsail container service, that are registered and stored on your service, start with a colon (<code>:</code>). For example, if your container service name is <code>container-service-1</code>, the container image label is <code>mystaticsite</code>, and you want to use the third (<code>3</code>) version of the registered container image, then you should specify <code>:container-service-1.mystaticsite.3</code>. To use the latest version of a container image, specify <code>latest</code> instead of a version number (for example, <code>:container-service-1.mystaticsite.latest</code>). Lightsail will automatically use the highest numbered version of the registered container image.</p> <p>Container images sourced from a public registry like Docker Hub don't start with a colon. For example, <code>nginx:latest</code> or <code>nginx</code>.</p>"
              }
            ]
          },
          "command": {
            "allOf": [
              {
                "$ref": "#/$defs/StringList"
              },
              {
                "description": "The launch command for the container."
              }
            ]
          },
          "environment": {
            "allOf": [
              {
                "$ref": "#/$defs/Environment"
              },
              {
                "description": "The environment variables of the container."
              }
            ]
          },
          "ports": {
            "allOf": [
              {
                "$ref": "#/$defs/PortMap"
              },
              {
                "description": "The open firewall ports of the container."
              }
            ]
          }
        },
        "description": "Describes the settings of a container that will be launched, or that is launched, to an Amazon Lightsail container service."
      },
      "StringList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/string"
        }
      },
      "Environment": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/string"
        }
      },
      "PortMap": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/ContainerServiceProtocol"
        }
      },
      "ContainerServiceProtocol": {
        "type": "string",
        "enum": [
          "HTTP",
          "HTTPS",
          "TCP",
          "UDP"
        ]
      },
      "EndpointRequest": {
        "type": "object",
        "required": [
          "containerName",
          "containerPort"
        ],
        "properties": {
          "containerName": {
            "allOf": [
              {
                "$ref": "#/$defs/string"
              },
              {
                "description": "The name of the container for the endpoint."
              }
            ]
          },
          "containerPort": {
            "allOf": [
              {
                "$ref": "#/$defs/integer"
              },
              {
                "description": "The port of the container to which traffic is forwarded to."
              }
            ]
          },
          "healthCheck": {
            "allOf": [
              {
                "$ref": "#/$defs/ContainerServiceHealthCheckConfig"
              },
              {
                "description": "An object that describes the health check configuration of the container."
              }
            ]
          }
        },
        "description": "Describes the settings of a public endpoint for an Amazon Lightsail container service."
      },
      "integer": {
        "type": "integer"
      },
      "ContainerServiceHealthCheckConfig": {
        "type": "object",
        "properties": {
          "healthyThreshold": {
            "allOf": [
              {
                "$ref": "#/$defs/integer"
              },
              {
                "description": "The number of consecutive health checks successes required before moving the container to the <code>Healthy</code> state. The default value is <code>2</code>."
              }
            ]
          },
          "unhealthyThreshold": {
            "allOf": [
              {
                "$ref": "#/$defs/integer"
              },
              {
                "description": "The number of consecutive health check failures required before moving the container to the <code>Unhealthy</code> state. The default value is <code>2</code>."
              }
            ]
          },
          "timeoutSeconds": {
            "allOf": [
              {
                "$ref": "#/$defs/integer"
              },
              {
                "description": "The amount of time, in seconds, during which no response means a failed health check. You can specify between 2 and 60 seconds. The default value is <code>2</code>."
              }
            ]
          },
          "intervalSeconds": {
            "allOf": [
              {
                "$ref": "#/$defs/integer"
              },
              {
                "description": "The approximate interval, in seconds, between health checks of an individual container. You can specify between 5 and 300 seconds. The default value is <code>5</code>."
              }
            ]
          },
          "path": {
            "allOf": [
              {
                "$ref": "#/$defs/string"
              },
              {
                "description": "The path on the container on which to perform the health check. The default value is <code>/</code>."
              }
            ]
          },
          "successCodes": {
            "allOf": [
              {
                "$ref": "#/$defs/string"
              },
              {
                "description": "The HTTP codes to use when checking for a successful response from a container. You can specify values between <code>200</code> and <code>499</code>. You can specify multiple values (for example, <code>200,202</code>) or a range of values (for example, <code>200-299</code>)."
              }
            ]
          }
        },
        "description": "Describes the health check configuration of an Amazon Lightsail container service."
      },
      "PrivateRegistryAccessRequest": {
        "type": "object",
        "properties": {
          "ecrImagePullerRole": {
            "allOf": [
              {
                "$ref": "#/$defs/ContainerServiceECRImagePullerRoleRequest"
              },
              {
                "description": "An object to describe a request to activate or deactivate the role that you can use to grant an Amazon Lightsail container service access to Amazon Elastic Container Registry (Amazon ECR) private repositories."
              }
            ]
          }
        },
        "description": "<p>Describes a request to configure an Amazon Lightsail container service to access private container image repositories, such as Amazon Elastic Container Registry (Amazon ECR) private repositories.</p> <p>For more information, see <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-container-service-ecr-private-repo-access\">Configuring access to an Amazon ECR private repository for an Amazon Lightsail container service</a> in the <i>Amazon Lightsail Developer Guide</i>.</p>"
      },
      "ContainerServiceECRImagePullerRoleRequest": {
        "type": "object",
        "properties": {
          "isActive": {
            "allOf": [
              {
                "$ref": "#/$defs/boolean"
              },
              {
                "description": "A Boolean value that indicates whether to activate the role."
              }
            ]
          }
        },
        "description": "<p>Describes a request to activate or deactivate the role that you can use to grant an Amazon Lightsail container service access to Amazon Elastic Container Registry (Amazon ECR) private repositories.</p> <p>When activated, Lightsail creates an Identity and Access Management (IAM) role for the specified Lightsail container service. You can use the ARN of the role to create a trust relationship between your Lightsail container service and an Amazon ECR private repository in your Amazon Web Services account. This allows your container service to pull images from Amazon ECR private repositories. For more information, see <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-container-service-ecr-private-repo-access\">Configuring access to an Amazon ECR private repository for an Amazon Lightsail container service</a> in the <i>Amazon Lightsail Developer Guide</i>.</p>"
      },
      "boolean": {
        "type": "boolean"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://lightsail.us-east-1.amazonaws.com/#X-Amz-Target=Lightsail_20161128.CreateContainerService"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**containerService**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
