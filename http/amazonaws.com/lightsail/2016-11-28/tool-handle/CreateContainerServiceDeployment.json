{
  "name": "CreateContainerServiceDeployment",
  "description": "<p>Creates a deployment for your Amazon Lightsail container service.</p> <p>A deployment specifies the containers that will be launched on the container service and their settings, such as the ports to open, the environment variables to apply, and the launch command to run. It also specifies the container that will serve as the public endpoint of the deployment and its settings, such as the HTTP or HTTPS port to use, and the health check configuration.</p> <p>You can deploy containers to your container service using container images from a public registry such as Amazon ECR Public, or from your local machine. For more information, see <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-creating-container-images\">Creating container images for your Amazon Lightsail container services</a> in the <i>Amazon Lightsail Developer Guide</i>.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "Lightsail_20161128.CreateContainerServiceDeployment"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/CreateContainerServiceDeploymentRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "CreateContainerServiceDeploymentRequest": {
        "type": "object",
        "required": [
          "serviceName"
        ],
        "title": "CreateContainerServiceDeploymentRequest",
        "properties": {
          "serviceName": {
            "allOf": [
              {
                "$ref": "#/$defs/ContainerServiceName"
              },
              {
                "description": "The name of the container service for which to create the deployment."
              }
            ]
          },
          "containers": {
            "allOf": [
              {
                "$ref": "#/$defs/ContainerMap"
              },
              {
                "description": "An object that describes the settings of the containers that will be launched on the container service."
              }
            ]
          },
          "publicEndpoint": {
            "allOf": [
              {
                "$ref": "#/$defs/EndpointRequest"
              },
              {
                "description": "An object that describes the settings of the public endpoint for the container service."
              }
            ]
          }
        }
      },
      "ContainerServiceName": {
        "type": "string",
        "pattern": "^[a-z0-9]{1,2}|[a-z0-9][a-z0-9-]+[a-z0-9]$",
        "minLength": 1,
        "maxLength": 63
      },
      "ContainerMap": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/Container"
        }
      },
      "Container": {
        "type": "object",
        "properties": {
          "image": {
            "allOf": [
              {
                "$ref": "#/$defs/string"
              },
              {
                "description": "<p>The name of the image used for the container.</p> <p>Container images sourced from your Lightsail container service, that are registered and stored on your service, start with a colon (<code>:</code>). For example, if your container service name is <code>container-service-1</code>, the container image label is <code>mystaticsite</code>, and you want to use the third (<code>3</code>) version of the registered container image, then you should specify <code>:container-service-1.mystaticsite.3</code>. To use the latest version of a container image, specify <code>latest</code> instead of a version number (for example, <code>:container-service-1.mystaticsite.latest</code>). Lightsail will automatically use the highest numbered version of the registered container image.</p> <p>Container images sourced from a public registry like Docker Hub don't start with a colon. For example, <code>nginx:latest</code> or <code>nginx</code>.</p>"
              }
            ]
          },
          "command": {
            "allOf": [
              {
                "$ref": "#/$defs/StringList"
              },
              {
                "description": "The launch command for the container."
              }
            ]
          },
          "environment": {
            "allOf": [
              {
                "$ref": "#/$defs/Environment"
              },
              {
                "description": "The environment variables of the container."
              }
            ]
          },
          "ports": {
            "allOf": [
              {
                "$ref": "#/$defs/PortMap"
              },
              {
                "description": "The open firewall ports of the container."
              }
            ]
          }
        },
        "description": "Describes the settings of a container that will be launched, or that is launched, to an Amazon Lightsail container service."
      },
      "string": {
        "type": "string"
      },
      "StringList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/string"
        }
      },
      "Environment": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/string"
        }
      },
      "PortMap": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/ContainerServiceProtocol"
        }
      },
      "ContainerServiceProtocol": {
        "type": "string",
        "enum": [
          "HTTP",
          "HTTPS",
          "TCP",
          "UDP"
        ]
      },
      "EndpointRequest": {
        "type": "object",
        "required": [
          "containerName",
          "containerPort"
        ],
        "properties": {
          "containerName": {
            "allOf": [
              {
                "$ref": "#/$defs/string"
              },
              {
                "description": "The name of the container for the endpoint."
              }
            ]
          },
          "containerPort": {
            "allOf": [
              {
                "$ref": "#/$defs/integer"
              },
              {
                "description": "The port of the container to which traffic is forwarded to."
              }
            ]
          },
          "healthCheck": {
            "allOf": [
              {
                "$ref": "#/$defs/ContainerServiceHealthCheckConfig"
              },
              {
                "description": "An object that describes the health check configuration of the container."
              }
            ]
          }
        },
        "description": "Describes the settings of a public endpoint for an Amazon Lightsail container service."
      },
      "integer": {
        "type": "integer"
      },
      "ContainerServiceHealthCheckConfig": {
        "type": "object",
        "properties": {
          "healthyThreshold": {
            "allOf": [
              {
                "$ref": "#/$defs/integer"
              },
              {
                "description": "The number of consecutive health checks successes required before moving the container to the <code>Healthy</code> state. The default value is <code>2</code>."
              }
            ]
          },
          "unhealthyThreshold": {
            "allOf": [
              {
                "$ref": "#/$defs/integer"
              },
              {
                "description": "The number of consecutive health check failures required before moving the container to the <code>Unhealthy</code> state. The default value is <code>2</code>."
              }
            ]
          },
          "timeoutSeconds": {
            "allOf": [
              {
                "$ref": "#/$defs/integer"
              },
              {
                "description": "The amount of time, in seconds, during which no response means a failed health check. You can specify between 2 and 60 seconds. The default value is <code>2</code>."
              }
            ]
          },
          "intervalSeconds": {
            "allOf": [
              {
                "$ref": "#/$defs/integer"
              },
              {
                "description": "The approximate interval, in seconds, between health checks of an individual container. You can specify between 5 and 300 seconds. The default value is <code>5</code>."
              }
            ]
          },
          "path": {
            "allOf": [
              {
                "$ref": "#/$defs/string"
              },
              {
                "description": "The path on the container on which to perform the health check. The default value is <code>/</code>."
              }
            ]
          },
          "successCodes": {
            "allOf": [
              {
                "$ref": "#/$defs/string"
              },
              {
                "description": "The HTTP codes to use when checking for a successful response from a container. You can specify values between <code>200</code> and <code>499</code>. You can specify multiple values (for example, <code>200,202</code>) or a range of values (for example, <code>200-299</code>)."
              }
            ]
          }
        },
        "description": "Describes the health check configuration of an Amazon Lightsail container service."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://lightsail.us-east-1.amazonaws.com/#X-Amz-Target=Lightsail_20161128.CreateContainerServiceDeployment"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**containerService**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
