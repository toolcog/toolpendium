{
  "name": "UpdateRelationalDatabaseParameters",
  "description": "<p>Allows the update of one or more parameters of a database in Amazon Lightsail.</p> <p>Parameter updates don't cause outages; therefore, their application is not subject to the preferred maintenance window. However, there are two ways in which parameter updates are applied: <code>dynamic</code> or <code>pending-reboot</code>. Parameters marked with a <code>dynamic</code> apply type are applied immediately. Parameters marked with a <code>pending-reboot</code> apply type are applied only after the database is rebooted using the <code>reboot relational database</code> operation.</p> <p>The <code>update relational database parameters</code> operation supports tag-based access control via resource tags applied to the resource identified by relationalDatabaseName. For more information, see the <a href=\"https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-controlling-access-using-tags\">Amazon Lightsail Developer Guide</a>.</p>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Target": {
        "type": "string",
        "enum": [
          "Lightsail_20161128.UpdateRelationalDatabaseParameters"
        ]
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "$ref": "#/$defs/UpdateRelationalDatabaseParametersRequest"
      }
    },
    "required": [
      "X-Amz-Target",
      "body"
    ],
    "$defs": {
      "UpdateRelationalDatabaseParametersRequest": {
        "type": "object",
        "required": [
          "relationalDatabaseName",
          "parameters"
        ],
        "title": "UpdateRelationalDatabaseParametersRequest",
        "properties": {
          "relationalDatabaseName": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceName"
              },
              {
                "description": "The name of your database for which to update parameters."
              }
            ]
          },
          "parameters": {
            "allOf": [
              {
                "$ref": "#/$defs/RelationalDatabaseParameterList"
              },
              {
                "description": "The database parameters to update."
              }
            ]
          }
        }
      },
      "ResourceName": {
        "type": "string",
        "pattern": "\\w[\\w\\-]*\\w"
      },
      "RelationalDatabaseParameterList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/RelationalDatabaseParameter"
        }
      },
      "RelationalDatabaseParameter": {
        "type": "object",
        "properties": {
          "allowedValues": {
            "allOf": [
              {
                "$ref": "#/$defs/string"
              },
              {
                "description": "Specifies the valid range of values for the parameter."
              }
            ]
          },
          "applyMethod": {
            "allOf": [
              {
                "$ref": "#/$defs/string"
              },
              {
                "description": "<p>Indicates when parameter updates are applied.</p> <p>Can be <code>immediate</code> or <code>pending-reboot</code>.</p>"
              }
            ]
          },
          "applyType": {
            "allOf": [
              {
                "$ref": "#/$defs/string"
              },
              {
                "description": "Specifies the engine-specific parameter type."
              }
            ]
          },
          "dataType": {
            "allOf": [
              {
                "$ref": "#/$defs/string"
              },
              {
                "description": "Specifies the valid data type for the parameter."
              }
            ]
          },
          "description": {
            "allOf": [
              {
                "$ref": "#/$defs/string"
              },
              {
                "description": "Provides a description of the parameter."
              }
            ]
          },
          "isModifiable": {
            "allOf": [
              {
                "$ref": "#/$defs/boolean"
              },
              {
                "description": "A Boolean value indicating whether the parameter can be modified."
              }
            ]
          },
          "parameterName": {
            "allOf": [
              {
                "$ref": "#/$defs/string"
              },
              {
                "description": "Specifies the name of the parameter."
              }
            ]
          },
          "parameterValue": {
            "allOf": [
              {
                "$ref": "#/$defs/string"
              },
              {
                "description": "Specifies the value of the parameter."
              }
            ]
          }
        },
        "description": "Describes the parameters of a database."
      },
      "string": {
        "type": "string"
      },
      "boolean": {
        "type": "boolean"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://lightsail.us-east-1.amazonaws.com/#X-Amz-Target=Lightsail_20161128.UpdateRelationalDatabaseParameters"
    },
    "headers": {
      "X-Amz-Target": {
        "$": "X-Amz-Target"
      },
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**operations**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
