{
  "name": "ResolveComponentCandidates",
  "description": "<p>Retrieves a list of components that meet the component, version, and platform requirements of a deployment. Greengrass core devices call this operation when they receive a deployment to identify the components to install.</p> <p>This operation identifies components that meet all dependency requirements for a deployment. If the requirements conflict, then this operation returns an error and the deployment fails. For example, this occurs if component <code>A</code> requires version <code>&gt;2.0.0</code> and component <code>B</code> requires version <code>&lt;2.0.0</code> of a component dependency.</p> <p>When you specify the component candidates to resolve, IoT Greengrass compares each component's digest from the core device with the component's digest in the Amazon Web Services Cloud. If the digests don't match, then IoT Greengrass specifies to use the version from the Amazon Web Services Cloud.</p> <important> <p>To use this operation, you must use the data plane API endpoint and authenticate with an IoT device certificate. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/greengrass.html\">IoT Greengrass endpoints and quotas</a>.</p> </important>",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "properties": {
          "platform": {
            "description": "Contains information about a platform that a component supports.",
            "type": "object",
            "properties": {
              "name": {
                "allOf": [
                  {
                    "$ref": "#/$defs/NonEmptyString"
                  },
                  {
                    "description": "<p>The friendly name of the platform. This name helps you identify the platform.</p> <p>If you omit this parameter, IoT Greengrass creates a friendly name from the <code>os</code> and <code>architecture</code> of the platform.</p>"
                  }
                ]
              },
              "attributes": {
                "allOf": [
                  {
                    "$ref": "#/$defs/PlatformAttributesMap"
                  },
                  {
                    "description": "A dictionary of attributes for the platform. The IoT Greengrass Core software defines the <code>os</code> and <code>architecture</code> by default. You can specify additional platform attributes for a core device when you deploy the Greengrass nucleus component. For more information, see the <a href=\"https://docs.aws.amazon.com/greengrass/v2/developerguide/greengrass-nucleus-component.html\">Greengrass nucleus component</a> in the <i>IoT Greengrass V2 Developer Guide</i>."
                  }
                ]
              }
            }
          },
          "componentCandidates": {
            "description": "The list of components to resolve.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/ComponentCandidate"
            }
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "NonEmptyString": {
        "type": "string",
        "minLength": 1
      },
      "PlatformAttributesMap": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/NonEmptyString"
        }
      },
      "ComponentCandidate": {
        "type": "object",
        "properties": {
          "componentName": {
            "allOf": [
              {
                "$ref": "#/$defs/ComponentNameString"
              },
              {
                "description": "The name of the component."
              }
            ]
          },
          "componentVersion": {
            "allOf": [
              {
                "$ref": "#/$defs/ComponentVersionString"
              },
              {
                "description": "The version of the component."
              }
            ]
          },
          "versionRequirements": {
            "allOf": [
              {
                "$ref": "#/$defs/ComponentVersionRequirementMap"
              },
              {
                "description": "<p>The version requirements for the component's dependencies. Greengrass core devices get the version requirements from component recipes.</p> <p>IoT Greengrass V2 uses semantic version constraints. For more information, see <a href=\"https://semver.org/\">Semantic Versioning</a>.</p>"
              }
            ]
          }
        },
        "description": "Contains information about a component that is a candidate to deploy to a Greengrass core device."
      },
      "ComponentNameString": {
        "type": "string",
        "minLength": 1,
        "maxLength": 128
      },
      "ComponentVersionString": {
        "type": "string",
        "minLength": 1,
        "maxLength": 64
      },
      "ComponentVersionRequirementMap": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/$defs/NonEmptyString"
        }
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://greengrass.us-east-1.amazonaws.com/greengrass/v2/resolveComponentCandidates"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**resolvedComponentVersions**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
