{
  "name": "CreateApplication",
  "description": "<p>Creates an Amazon Web Services Migration Hub Refactor Spaces application. The account that owns the environment also owns the applications created inside the environment, regardless of the account that creates the application. Refactor Spaces provisions an Amazon API Gateway, API Gateway VPC link, and Network Load Balancer for the application proxy inside your account.</p> <p>In environments created with a <a href=\"https://docs.aws.amazon.com/migrationhub-refactor-spaces/latest/APIReference/API_CreateEnvironment.html#migrationhubrefactorspaces-CreateEnvironment-request-NetworkFabricType\">CreateEnvironment:NetworkFabricType</a> of <code>NONE</code> you need to configure <a href=\"https://docs.aws.amazon.com/whitepapers/latest/aws-vpc-connectivity-options/amazon-vpc-to-amazon-vpc-connectivity-options.html\"> VPC to VPC connectivity</a> between your service VPC and the application proxy VPC to route traffic through the application proxy to a service with a private URL endpoint. For more information, see <a href=\"https://docs.aws.amazon.com/migrationhub-refactor-spaces/latest/userguide/getting-started-create-application.html\"> Create an application</a> in the <i>Refactor Spaces User Guide</i>. </p>",
  "parameters": {
    "type": "object",
    "properties": {
      "EnvironmentIdentifier": {
        "type": "string",
        "pattern": "^env-[0-9A-Za-z]{10}$",
        "minLength": 14,
        "maxLength": 14,
        "description": "The unique identifier of the environment."
      },
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "Name",
          "ProxyType",
          "VpcId"
        ],
        "properties": {
          "ApiGatewayProxy": {
            "description": "A wrapper object holding the Amazon API Gateway endpoint input. ",
            "type": "object",
            "properties": {
              "EndpointType": {
                "allOf": [
                  {
                    "$ref": "#/$defs/ApiGatewayEndpointType"
                  },
                  {
                    "description": "<p>The type of endpoint to use for the API Gateway proxy. If no value is specified in the request, the value is set to <code>REGIONAL</code> by default.</p> <p>If the value is set to <code>PRIVATE</code> in the request, this creates a private API endpoint that is isolated from the public internet. The private endpoint can only be accessed by using Amazon Virtual Private Cloud (Amazon VPC) interface endpoints for the Amazon API Gateway that has been granted access. For more information about creating a private connection with Refactor Spaces and interface endpoint (Amazon Web Services PrivateLink) availability, see <a href=\"https://docs.aws.amazon.com/migrationhub-refactor-spaces/latest/userguide/vpc-interface-endpoints.html\">Access Refactor Spaces using an interface endpoint (Amazon Web Services PrivateLink)</a>.</p>"
                  }
                ]
              },
              "StageName": {
                "allOf": [
                  {
                    "$ref": "#/$defs/StageName"
                  },
                  {
                    "description": "The name of the API Gateway stage. The name defaults to <code>prod</code>. "
                  }
                ]
              }
            }
          },
          "ClientToken": {
            "description": "A unique, case-sensitive identifier that you provide to ensure the idempotency of the request.",
            "type": "string",
            "pattern": "^[\\x20-\\x7E]{1,64}$",
            "minLength": 1,
            "maxLength": 64
          },
          "Name": {
            "description": "The name to use for the application. ",
            "type": "string",
            "pattern": "^(?!app-)[a-zA-Z0-9]+[a-zA-Z0-9-_ ]+$",
            "minLength": 3,
            "maxLength": 63
          },
          "ProxyType": {
            "description": "The proxy type of the proxy created within the application. ",
            "type": "string",
            "enum": [
              "API_GATEWAY"
            ]
          },
          "Tags": {
            "description": "A collection of up to 50 unique tags",
            "type": "object",
            "minProperties": 0,
            "maxProperties": 50,
            "additionalProperties": {
              "$ref": "#/$defs/TagMapValueString"
            }
          },
          "VpcId": {
            "description": "The ID of the virtual private cloud (VPC).",
            "type": "string",
            "pattern": "^vpc-[-a-f0-9]{8}([-a-f0-9]{9})?$",
            "minLength": 12,
            "maxLength": 21
          }
        }
      }
    },
    "required": [
      "EnvironmentIdentifier",
      "body"
    ],
    "$defs": {
      "ApiGatewayEndpointType": {
        "type": "string",
        "enum": [
          "REGIONAL",
          "PRIVATE"
        ]
      },
      "StageName": {
        "type": "string",
        "pattern": "^[-a-zA-Z0-9_]*$",
        "minLength": 1,
        "maxLength": 128
      },
      "TagMapValueString": {
        "type": "string",
        "minLength": 0,
        "maxLength": 256
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://refactor-spaces.us-east-1.amazonaws.com/environments/{EnvironmentIdentifier}/applications"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**ApiGatewayProxy**",
            "**ApplicationId**",
            "**Arn**",
            "**CreatedByAccountId**",
            "**CreatedTime**",
            "**EnvironmentId**",
            "**LastUpdatedTime**",
            "**Name**",
            "**OwnerAccountId**",
            "**ProxyType**",
            "**State**",
            "**Tags**",
            "**VpcId**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
