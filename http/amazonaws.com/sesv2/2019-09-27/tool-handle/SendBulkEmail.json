{
  "name": "SendBulkEmail",
  "description": "Composes an email message to multiple destinations.",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Amz-Content-Sha256": {
        "type": "string"
      },
      "X-Amz-Date": {
        "type": "string"
      },
      "X-Amz-Algorithm": {
        "type": "string"
      },
      "X-Amz-Credential": {
        "type": "string"
      },
      "X-Amz-Security-Token": {
        "type": "string"
      },
      "X-Amz-Signature": {
        "type": "string"
      },
      "X-Amz-SignedHeaders": {
        "type": "string"
      },
      "body": {
        "type": "object",
        "required": [
          "DefaultContent",
          "BulkEmailEntries"
        ],
        "properties": {
          "FromEmailAddress": {
            "description": "The email address to use as the \"From\" address for the email. The address that you specify has to be verified.",
            "type": "string"
          },
          "FromEmailAddressIdentityArn": {
            "description": "<p>This parameter is used only for sending authorization. It is the ARN of the identity that is associated with the sending authorization policy that permits you to use the email address specified in the <code>FromEmailAddress</code> parameter.</p> <p>For example, if the owner of example.com (which has ARN arn:aws:ses:us-east-1:123456789012:identity/example.com) attaches a policy to it that authorizes you to use sender@example.com, then you would specify the <code>FromEmailAddressIdentityArn</code> to be arn:aws:ses:us-east-1:123456789012:identity/example.com, and the <code>FromEmailAddress</code> to be sender@example.com.</p> <p>For more information about sending authorization, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html\">Amazon SES Developer Guide</a>.</p>",
            "type": "string"
          },
          "ReplyToAddresses": {
            "description": "The \"Reply-to\" email addresses for the message. When the recipient replies to the message, each Reply-to address receives the reply.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/EmailAddress"
            }
          },
          "FeedbackForwardingEmailAddress": {
            "description": "The address that you want bounce and complaint notifications to be sent to.",
            "type": "string"
          },
          "FeedbackForwardingEmailAddressIdentityArn": {
            "description": "<p>This parameter is used only for sending authorization. It is the ARN of the identity that is associated with the sending authorization policy that permits you to use the email address specified in the <code>FeedbackForwardingEmailAddress</code> parameter.</p> <p>For example, if the owner of example.com (which has ARN arn:aws:ses:us-east-1:123456789012:identity/example.com) attaches a policy to it that authorizes you to use feedback@example.com, then you would specify the <code>FeedbackForwardingEmailAddressIdentityArn</code> to be arn:aws:ses:us-east-1:123456789012:identity/example.com, and the <code>FeedbackForwardingEmailAddress</code> to be feedback@example.com.</p> <p>For more information about sending authorization, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html\">Amazon SES Developer Guide</a>.</p>",
            "type": "string"
          },
          "DefaultEmailTags": {
            "description": "A list of message tags.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/MessageTag"
            }
          },
          "DefaultContent": {
            "description": "An object that contains the body of the message. You can specify a template message.",
            "type": "object",
            "properties": {
              "Template": {
                "allOf": [
                  {
                    "$ref": "#/$defs/Template"
                  },
                  {
                    "description": "The template to use for the bulk email message."
                  }
                ]
              }
            }
          },
          "BulkEmailEntries": {
            "description": "A list of <code>BulkEmailEntry</code> objects.",
            "type": "array",
            "items": {
              "$ref": "#/$defs/BulkEmailEntry"
            }
          },
          "ConfigurationSetName": {
            "description": "<p>The name of a configuration set.</p> <p> <i>Configuration sets</i> are groups of rules that you can apply to the emails you send. You apply a configuration set to an email by including a reference to the configuration set in the headers of the email. When you apply a configuration set to an email, all of the rules in that configuration set are applied to the email.</p>",
            "type": "string"
          }
        }
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "EmailAddress": {
        "type": "string"
      },
      "MessageTag": {
        "type": "object",
        "required": [
          "Name",
          "Value"
        ],
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/$defs/MessageTagName"
              },
              {
                "description": "<p>The name of the message tag. The message tag name has to meet the following criteria:</p> <ul> <li> <p>It can only contain ASCII letters (a–z, A–Z), numbers (0–9), underscores (_), or dashes (-).</p> </li> <li> <p>It can contain no more than 256 characters.</p> </li> </ul>"
              }
            ]
          },
          "Value": {
            "allOf": [
              {
                "$ref": "#/$defs/MessageTagValue"
              },
              {
                "description": "<p>The value of the message tag. The message tag value has to meet the following criteria:</p> <ul> <li> <p>It can only contain ASCII letters (a–z, A–Z), numbers (0–9), underscores (_), or dashes (-).</p> </li> <li> <p>It can contain no more than 256 characters.</p> </li> </ul>"
              }
            ]
          }
        },
        "description": "Contains the name and value of a tag that you apply to an email. You can use message tags when you publish email sending events. "
      },
      "MessageTagName": {
        "type": "string",
        "description": "<p>The name of the message tag. The message tag name has to meet the following criteria:</p> <ul> <li> <p>It can only contain ASCII letters (a–z, A–Z), numbers (0–9), underscores (_), or dashes (-).</p> </li> <li> <p>It can contain no more than 256 characters.</p> </li> </ul>"
      },
      "MessageTagValue": {
        "type": "string",
        "description": "<p>The value of the message tag. The message tag value has to meet the following criteria:</p> <ul> <li> <p>It can only contain ASCII letters (a–z, A–Z), numbers (0–9), underscores (_), or dashes (-).</p> </li> <li> <p>It can contain no more than 256 characters.</p> </li> </ul>"
      },
      "Template": {
        "type": "object",
        "properties": {
          "TemplateName": {
            "allOf": [
              {
                "$ref": "#/$defs/EmailTemplateName"
              },
              {
                "description": "The name of the template. You will refer to this name when you send email using the <code>SendTemplatedEmail</code> or <code>SendBulkTemplatedEmail</code> operations. "
              }
            ]
          },
          "TemplateArn": {
            "allOf": [
              {
                "$ref": "#/$defs/AmazonResourceName"
              },
              {
                "description": "The Amazon Resource Name (ARN) of the template."
              }
            ]
          },
          "TemplateData": {
            "allOf": [
              {
                "$ref": "#/$defs/EmailTemplateData"
              },
              {
                "description": "An object that defines the values to use for message variables in the template. This object is a set of key-value pairs. Each key defines a message variable in the template. The corresponding value defines the value to use for that variable."
              }
            ]
          }
        },
        "description": "An object that defines the email template to use for an email message, and the values to use for any message variables in that template. An <i>email template</i> is a type of message template that contains content that you want to define, save, and reuse in email messages that you send."
      },
      "EmailTemplateName": {
        "type": "string",
        "description": "The name of the template. You will refer to this name when you send email using the <code>SendTemplatedEmail</code> or <code>SendBulkTemplatedEmail</code> operations.",
        "minLength": 1
      },
      "AmazonResourceName": {
        "type": "string"
      },
      "EmailTemplateData": {
        "type": "string",
        "description": "An object that defines the values to use for message variables in the template. This object is a set of key-value pairs. Each key defines a message variable in the template. The corresponding value defines the value to use for that variable.",
        "maxLength": 262144
      },
      "BulkEmailEntry": {
        "type": "object",
        "required": [
          "Destination"
        ],
        "properties": {
          "Destination": {
            "allOf": [
              {
                "$ref": "#/$defs/Destination"
              },
              {
                "description": "<p>Represents the destination of the message, consisting of To:, CC:, and BCC: fields.</p> <note> <p>Amazon SES does not support the SMTPUTF8 extension, as described in <a href=\"https://tools.ietf.org/html/rfc6531\">RFC6531</a>. For this reason, the local part of a destination email address (the part of the email address that precedes the @ sign) may only contain <a href=\"https://en.wikipedia.org/wiki/Email_address#Local-part\">7-bit ASCII characters</a>. If the domain part of an address (the part after the @ sign) contains non-ASCII characters, they must be encoded using Punycode, as described in <a href=\"https://tools.ietf.org/html/rfc3492.html\">RFC3492</a>.</p> </note>"
              }
            ]
          },
          "ReplacementTags": {
            "allOf": [
              {
                "$ref": "#/$defs/MessageTagList"
              },
              {
                "description": "A list of tags, in the form of name/value pairs, to apply to an email that you send using the <code>SendBulkTemplatedEmail</code> operation. Tags correspond to characteristics of the email that you define, so that you can publish email sending events."
              }
            ]
          },
          "ReplacementEmailContent": {
            "allOf": [
              {
                "$ref": "#/$defs/ReplacementEmailContent"
              },
              {
                "description": "The <code>ReplacementEmailContent</code> associated with a <code>BulkEmailEntry</code>."
              }
            ]
          }
        }
      },
      "Destination": {
        "type": "object",
        "properties": {
          "ToAddresses": {
            "allOf": [
              {
                "$ref": "#/$defs/EmailAddressList"
              },
              {
                "description": "An array that contains the email addresses of the \"To\" recipients for the email."
              }
            ]
          },
          "CcAddresses": {
            "allOf": [
              {
                "$ref": "#/$defs/EmailAddressList"
              },
              {
                "description": "An array that contains the email addresses of the \"CC\" (carbon copy) recipients for the email."
              }
            ]
          },
          "BccAddresses": {
            "allOf": [
              {
                "$ref": "#/$defs/EmailAddressList"
              },
              {
                "description": "An array that contains the email addresses of the \"BCC\" (blind carbon copy) recipients for the email."
              }
            ]
          }
        },
        "description": "<p>An object that describes the recipients for an email.</p> <note> <p>Amazon SES does not support the SMTPUTF8 extension, as described in <a href=\"https://tools.ietf.org/html/rfc6531\">RFC6531</a>. For this reason, the <i>local part</i> of a destination email address (the part of the email address that precedes the @ sign) may only contain <a href=\"https://en.wikipedia.org/wiki/Email_address#Local-part\">7-bit ASCII characters</a>. If the <i>domain part</i> of an address (the part after the @ sign) contains non-ASCII characters, they must be encoded using Punycode, as described in <a href=\"https://tools.ietf.org/html/rfc3492.html\">RFC3492</a>.</p> </note>"
      },
      "EmailAddressList": {
        "type": "array",
        "items": {
          "$ref": "#/$defs/EmailAddress"
        }
      },
      "MessageTagList": {
        "type": "array",
        "description": "A list of message tags.",
        "items": {
          "$ref": "#/$defs/MessageTag"
        }
      },
      "ReplacementEmailContent": {
        "type": "object",
        "properties": {
          "ReplacementTemplate": {
            "allOf": [
              {
                "$ref": "#/$defs/ReplacementTemplate"
              },
              {
                "description": "The <code>ReplacementTemplate</code> associated with <code>ReplacementEmailContent</code>."
              }
            ]
          }
        },
        "description": "The <code>ReplaceEmailContent</code> object to be used for a specific <code>BulkEmailEntry</code>. The <code>ReplacementTemplate</code> can be specified within this object."
      },
      "ReplacementTemplate": {
        "type": "object",
        "properties": {
          "ReplacementTemplateData": {
            "allOf": [
              {
                "$ref": "#/$defs/EmailTemplateData"
              },
              {
                "description": "A list of replacement values to apply to the template. This parameter is a JSON object, typically consisting of key-value pairs in which the keys correspond to replacement tags in the email template."
              }
            ]
          }
        },
        "description": "An object which contains <code>ReplacementTemplateData</code> to be used for a specific <code>BulkEmailEntry</code>."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://email.us-east-1.amazonaws.com/v2/email/outbound-bulk-emails"
    },
    "headers": {
      "X-Amz-Content-Sha256": {
        "$": "X-Amz-Content-Sha256"
      },
      "X-Amz-Date": {
        "$": "X-Amz-Date"
      },
      "X-Amz-Algorithm": {
        "$": "X-Amz-Algorithm"
      },
      "X-Amz-Credential": {
        "$": "X-Amz-Credential"
      },
      "X-Amz-Security-Token": {
        "$": "X-Amz-Security-Token"
      },
      "X-Amz-Signature": {
        "$": "X-Amz-Signature"
      },
      "X-Amz-SignedHeaders": {
        "$": "X-Amz-SignedHeaders"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The following data is returned in JSON format by the service.",
        "**Key properties:**",
        {
          "$ul": [
            "**BulkEmailEntryResults**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "480": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "481": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "482": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "483": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "484": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "485": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "486": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "487": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
